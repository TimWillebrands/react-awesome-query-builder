{"version":3,"file":"554.bundle.js","mappings":"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","sources":["webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialSelect.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialFieldAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialIcon.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialButton.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialValueSources.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/index.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialText.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialTextArea.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialDate.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialDateTime.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialTime.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialNumber.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialSlider.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialRange.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialBoolean.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialConjs.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialSwitch.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialConfirm.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../core/modules/utils/uuid.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/default.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/listValues.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/treeUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/export.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/spel.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/defaultUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/validation.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/funcUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/ruleUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configSerialize.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryBuilder.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/mongoDb.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/sql.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryString.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/elasticSearch.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/autocomplete.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/funcs.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/ctx.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/group.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/rule.js","webpack://@react-awesome-query-builder/examples/../core/modules/index.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/context.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/drag.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/index.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/configUtils.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/validation.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/reactUtils.js","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Query.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/QueryContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/RuleContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/SortableContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/Draggable.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Operator.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/utils.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Field.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/WidgetFactory.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Widget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncWidget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FieldWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorOptions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Rule.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/GroupContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/GroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Group.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExtActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExt.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/CaseGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Item.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Builder.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/ValueField.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaBoolean.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaText.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTextArea.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDate.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDateTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaNumber.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSlider.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaConjs.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButton.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaIcon.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaValueSources.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaSwitch.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/vanillaConfirm.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/operators/Proximity.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/hooks/useListValuesAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/index.js","webpack://@react-awesome-query-builder/examples/../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ sync [/\\\\](es-us(\\.js)"],"sourcesContent":["import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = () =>\n    mapListValues(listValues, ({title, value}) => {\n      return <MenuItem key={value} value={value}>{title}</MenuItem>;\n    });\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  const renderValue = (selectedValue) => {\n    if (!readonly && selectedValue == null)\n      return placeholder;\n    return getListValueTitle(selectedValue);\n  };\n\n  const getListValueTitle = (selectedValue) => \n    mapListValues(listValues, ({title, value}) => \n      (value === selectedValue ? title : null)\n    )\n      .filter(v => v !== null)\n      .shift();\n  \n  const hasValue = value != null;\n\n  return (\n    <FormControl>\n      <Select\n        autoWidth\n        displayEmpty\n        label={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : \"\"}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        {...omit(customProps, [\"showSearch\", \"input\"])}\n      >\n        {renderOptions()}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = (selectedValues) => \n    mapListValues(listValues, ({title, value}) => {\n      return (\n        <MenuItem key={value} value={value}>\n          <Checkbox checked={selectedValues.indexOf(value) > -1} />\n          <ListItemText primary={title} />\n        </MenuItem>\n      );\n    });\n\n  const renderValue = (selectedValues) => {\n    if (!readonly && !selectedValues.length)\n      return placeholder;\n    const selectedTitles = mapListValues(listValues, ({title, value}) => (\n      selectedValues.indexOf(value) > -1 ? title : null\n    )).filter(v => v !== null);\n    return selectedTitles.join(\", \");\n  };\n\n  const hasValue = value != null && value.length > 0;\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  return (\n    <FormControl>\n      <Select multiple\n        autoWidth\n        displayEmpty\n        label={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : []}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n      >\n        {renderOptions(hasValue ? value : [])}\n      </Select>\n    </FormControl>\n  );\n};\n","import React, {useCallback} from \"react\";\nimport omit from \"lodash/omit\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Autocomplete, { createFilterOptions } from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport { Hooks, Utils } from \"@react-awesome-query-builder/ui\";\nconst { useListValuesAutocomplete } = Hooks;\n\nconst nonCheckedIcon = <CheckBoxOutlineBlankIcon fontSize=\"small\" style={{ marginRight: 10, marginTop: 4 }} />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" style={{ marginRight: 10, marginTop: 4 }} />;\nconst emptyArray = [];\n\n\nexport default (props) => {\n  const {\n    allowCustomValues, multiple, disableClearable,\n    value: selectedValue, customProps, readonly, config, filterOptionsConfig, errorText\n  } = props;\n  const stringifyOption = useCallback((option) => {\n    const keysForFilter = config.settings.listKeysForSearch;\n    const valueForFilter = keysForFilter\n      .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n      .join(\"\\0\");\n    return valueForFilter;\n  }, [config]);\n  const defaultFilterOptionsConfig = {\n    stringify: stringifyOption\n  };\n  const filterOptionsFn = createFilterOptions(filterOptionsConfig || defaultFilterOptionsConfig);\n\n  // hook\n  const {\n    open,\n    onOpen,\n    onClose,\n    onChange,\n    onInputChange,\n    inputValue,\n    options,\n    isInitialLoading,\n    isLoading,\n    aPlaceholder,\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    selectedListValue,\n  } = useListValuesAutocomplete(props, {\n    debounceTimeout: 100,\n    multiple,\n    uif: \"mui\"\n  });\n\n  // setings\n  const {defaultSelectWidth, defaultSearchWidth} = config.settings;\n  const {width, ...rest} = customProps || {};\n  let customInputProps = rest.input || {};\n  const inputWidth = customInputProps.width || defaultSearchWidth;\n  customInputProps = omit(customInputProps, [\"width\"]);\n  const customAutocompleteProps = omit(rest, [\"showSearch\", \"showCheckboxes\"]);\n\n  const fullWidth = true;\n  const minWidth = width || defaultSelectWidth;\n  const style = {\n    width: (multiple ? undefined : minWidth),\n    minWidth: minWidth\n  };\n  const placeholder = !readonly ? aPlaceholder : \"\";\n  const hasValue = selectedValue != null;\n  // should be simple value to prevent re-render!s\n  const value = hasValue ? selectedValue : (multiple ? emptyArray : null);\n\n  const filterOptions = (options, params) => {\n    const filtered = filterOptionsFn(options, params);\n    const extended = extendOptions(filtered);\n    return extended;\n  };\n\n  const groupBy = (option) => option?.groupTitle;\n\n  // styles\n  const useStyles = makeStyles((theme) => ({\n    // fix too small width\n    input: {\n      minWidth: inputWidth + \" !important\",\n    }\n  }));\n\n  const useStylesChip = makeStyles((theme) => ({\n    // fix height\n    root: {\n      height: \"auto\"\n    },\n    label: {\n      marginTop: \"3px\",\n      marginBottom: \"3px\",\n    }\n  }));\n\n  const classesChip = useStylesChip();\n  const classes = useStyles();\n\n  // render\n  const renderInput = (params) => {\n    // parity with Antd\n    const shouldRenderSelected = !multiple && !open;\n    const selectedTitle = selectedListValue?.title ?? \"\";\n    const shouldHide = multiple && !open;\n    const value = shouldRenderSelected ? selectedTitle : (shouldHide ? \"\" : inputValue ?? \"\");\n    return (\n      <TextField \n        {...params}\n        inputProps={{\n          ...params.inputProps,\n          value,\n        }}\n        InputProps={{\n          ...params.InputProps,\n          readOnly: readonly,\n          endAdornment: (\n            <React.Fragment>\n              {isLoading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n              {params.InputProps.endAdornment}\n            </React.Fragment>\n          ),\n        }}\n        disabled={readonly}\n        placeholder={placeholder}\n        error={!!errorText}\n        //onChange={onInputChange}\n        {...customInputProps}\n      />\n    );\n  };\n\n  const renderTags = (value, getTagProps) => value.map((option, index) => {\n    const className = getOptionIsCustom(option) ? \"customSelectOption\" : undefined;\n    const titleSpan = (\n      <span className={className}>\n        {getOptionLabel(option)}\n      </span>\n    );\n    return <Chip\n      key={option.value}\n      classes={classesChip}\n      label={titleSpan}\n      size={\"small\"}\n      //variant={getOptionIsCustom(option) ? \"outlined\" : undefined}\n      {...getTagProps({ index })}\n    />;\n  });\n\n  const renderOption = (option, { selected }) => {\n    const { title, renderTitle, value, specialValue, isHidden } = option;\n    const isSelected = selected;\n    //const isSelected = multiple ? (selectedValue || []).includes(value) : selectedValue == value;\n    const className = getOptionIsCustom(option) ? \"customSelectOption\" : undefined;\n    const titleSpan = (\n      <span className={className}>\n        {renderTitle || title}\n      </span>\n    );\n    if (isHidden)\n      return null;\n    if (multiple) {\n      if (specialValue)\n        return (\n          <Box>\n            {renderTitle || title}\n          </Box>\n        );\n      else\n        return (\n          <Box>\n            {selected ? checkedIcon : nonCheckedIcon}\n            {titleSpan}\n          </Box>\n        );\n    } else {\n      if (specialValue)\n        return <React.Fragment>{renderTitle || title}</React.Fragment>;\n      else\n        return <React.Fragment>{titleSpan}</React.Fragment>;\n    }\n  };\n\n  return (\n    <FormControl fullWidth={fullWidth}>\n      <Autocomplete\n        disableClearable={disableClearable}\n        disableCloseOnSelect={multiple}\n        fullWidth={fullWidth}\n        multiple={multiple}\n        style={style}\n        classes={classes}\n        freeSolo={allowCustomValues}\n        loading={isInitialLoading}\n        open={open}\n        onOpen={onOpen}\n        onClose={onClose}\n        inputValue={inputValue}\n        onInputChange={onInputChange}\n        label={placeholder}\n        onChange={onChange}\n        value={value}\n        getOptionSelected={getOptionSelected}\n        disabled={readonly}\n        readOnly={readonly}\n        options={options}\n        groupBy={groupBy}\n        getOptionLabel={getOptionLabel}\n        getOptionDisabled={getOptionDisabled}\n        renderInput={renderInput}\n        renderTags={renderTags}\n        renderOption={renderOption}\n        filterOptions={filterOptions}\n        {...customAutocompleteProps}\n      ></Autocomplete>\n    </FormControl>\n  );\n};\n","import React, {useCallback} from \"react\";\nimport MaterialAutocomplete from \"../value/MaterialAutocomplete\";\n\n// see type FieldItemSearchableKeys\nconst mapFieldItemToOptionKeys = {\n  key: \"_value2\",\n  path: \"value\",\n  label: \"title\",\n  altLabel: \"_altLabel\",\n  tooltip: \"tooltip\",\n  grouplabel: \"groupTitle\",\n};\n\nconst itemsToListValues = (items, level = 0) => (\n  items.map(item => {\n    const {items, path, key, label, altLabel, disabled, grouplabel, matchesType, tooltip} = item;\n    const prefix = \"\\u00A0\\u00A0\".repeat(level);\n    if (items) {\n      return itemsToListValues(items, level+1);\n    } else {\n      return {\n        title: label,\n        renderTitle: matchesType ? <b>{prefix+label}</b> : prefix+label,\n        value: path,\n        disabled,\n        groupTitle: level > 0 ? prefix+grouplabel : null,\n        tooltip: tooltip,\n        _value2: key,\n        _altLabel: altLabel,\n      };\n    }\n  }).flat(Infinity)\n);\n\nconst fieldAdapter = ({items, selectedKey, setField, isValueField, ...rest}, config) => {\n  const listValues = itemsToListValues(items);\n  const value = selectedKey;\n  const setValue = (value, _asyncValues) => {\n    if (!value && !isValueField) return undefined;\n    return setField(value);\n  };\n\n  const filterOptionsConfig = {\n    stringify: useCallback((option) => {\n      const keysForFilter = config.settings.fieldItemKeysForSearch\n        .map(k => mapFieldItemToOptionKeys[k]);\n      const valueForFilter = keysForFilter\n        .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n        .join(\"\\0\");\n      return valueForFilter;\n    }, [config])\n  };\n\n  return {\n    ...rest,\n    listValues,\n    setValue,\n    filterOptionsConfig,\n    allowCustomValues: false,\n    multiple: false,\n    disableClearable: !isValueField,\n    value,\n    isFieldAutocomplete: true,\n  };\n};\n\nexport default (props) => {\n  return <MaterialAutocomplete  {...fieldAdapter(props, props.config)} />;\n};\n","import React from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DragHandle from \"@material-ui/icons/DragHandle\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { DragIcon } = Utils;\n\nconst typeToIcon = {\n  \"delGroup\": <DeleteIcon />,\n  \"delRuleGroup\": <DeleteIcon />,\n  \"delRule\": <DeleteIcon />,\n  \"addRuleGroup\": <AddIcon />,\n  \"addRuleGroupExt\": <AddIcon />,\n  \"addRule\": <AddIcon />,\n  \"addGroup\": <AddIcon />,\n  \"drag\": <DragHandle />,\n};\n\nconst typeToColor = {\n  // \"addRule\": \"primary\",\n  // \"addGroup\": \"primary\",\n  // \"delGroup\": \"secondary\",\n  // \"delRuleGroup\": \"secondary\",\n  // \"delRule\": \"secondary\",\n  \"drag\": \"inherit\",\n};\n\nexport default ({type, readonly}) => {\n  let icon = typeToIcon[type] || null;\n  if (!icon && type === \"drag\") {\n    return <DragIcon />;\n  }\n\n  if (type === \"drag\") {\n    return (\n      <Icon\n        size=\"small\" \n        disabled={readonly} \n        color={typeToColor[type]}\n      >{icon}</Icon>\n    );\n  } else {\n    return icon;\n  }\n};\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst hideLabelsFor = {\n  \"addRuleGroup\": true,\n  \"addRuleGroupExt\": true,\n  \"delGroup\": true,\n  \"delRuleGroup\": true,\n  \"delRule\": true,\n};\n\nconst typeToColor = {\n  \"addRule\": \"primary\",\n  \"addGroup\": \"primary\",\n  \"delGroup\": \"secondary\",\n  \"delRuleGroup\": \"secondary\",\n  \"delRule\": \"secondary\",\n};\n\nexport default (props) => {\n  const {type, label, onClick, readonly, renderIcon} = props;\n  const iconProps = {\n    type,\n    readonly,\n  };\n  const icon = renderIcon?.(iconProps);\n\n  if (!label || hideLabelsFor[type]) {\n    return (\n      <IconButton\n        size=\"small\" \n        disabled={readonly} \n        onClick={onClick} \n        color={typeToColor[type]}\n      >{icon}</IconButton>\n    );\n  } else {\n    return (\n      <Button\n        size=\"small\" \n        disabled={readonly} \n        onClick={onClick} \n        color={typeToColor[type]} \n        startIcon={icon}\n      >{label}</Button>\n    );\n  }\n};\n","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ExpandMoreSharpIcon from \"@material-ui/icons/ExpandMoreSharp\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(1),\n  },\n}));\n\nexport default ({ valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const classes = useStyles();\n\n\n  const handleOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const toggleOpenClose = (event) => {\n    anchorEl ? handleClose() : handleOpen(event);\n  };\n\n  const handleChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValueSrc(e.target.value);\n    handleClose();\n  };\n\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => (\n      <FormControlLabel \n        key={srcKey} \n        value={srcKey} \n        checked={valueSrc == srcKey || !valueSrc && srcKey == \"value\"} \n        control={<Radio />} \n        label={info.label}\n      />\n    ))\n  );\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <div>\n      <IconButton size=\"small\" onClick={toggleOpenClose}>\n        <ExpandMoreSharpIcon />\n      </IconButton>\n    \n      <Popover    \n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n        onClose={handleClose}\n        classes={{\n          paper: classes.paper,\n        }}\n        disablePortal\n      >\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">{title}</FormLabel>\n          <RadioGroup value={valueSrc || \"value\"} onChange={handleChange}>\n            {renderOptions(valueSources)}\n          </RadioGroup>\n        </FormControl>\n      </Popover>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { ThemeProvider, createTheme } from \"@material-ui/core/styles\";\nimport { ConfirmProvider, useConfirm } from \"material-ui-confirm\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\n\n\n// value widgets\nimport MaterialTextWidget from \"./value/MaterialText\";\nimport MaterialTextAreaWidget from \"./value/MaterialTextArea\";\nimport MaterialDateWidget from \"./value/MaterialDate\";\nimport MaterialDateTimeWidget from \"./value/MaterialDateTime\";\nimport MaterialTimeWidget from \"./value/MaterialTime\";\nimport MaterialSelectWidget from \"./value/MaterialSelect\";\nimport MaterialNumberWidget from \"./value/MaterialNumber\";\nimport MaterialSliderWidget from \"./value/MaterialSlider\";\nimport MaterialRangeWidget from \"./value/MaterialRange\";\nimport MaterialBooleanWidget from \"./value/MaterialBoolean\";\nimport MaterialMultiSelectWidget from \"./value/MaterialMultiSelect\";\nimport MaterialAutocompleteWidget from \"./value/MaterialAutocomplete\";\n\n// field select widgets\nimport MaterialFieldSelect from \"./core/MaterialFieldSelect\";\nimport MaterialFieldAutocomplete from \"./core/MaterialFieldAutocomplete\";\n\n// core components\nimport MaterialIcon from \"./core/MaterialIcon\";\nimport MaterialButton from \"./core/MaterialButton\";\nimport MaterialButtonGroup from \"./core/MaterialButtonGroup\";\nimport MaterialConjs from \"./core/MaterialConjs\";\nimport MaterialSwitch from \"./core/MaterialSwitch\";\nimport MaterialValueSources from \"./core/MaterialValueSources\";\nimport MaterialConfirm from \"./core/MaterialConfirm\";\n\n// provider\nconst MaterialProvider = ({config, children}) => {\n  const settingsTheme = config.settings.theme || {};\n  const settingsLocale = config.settings.locale || {};\n  const themeConfig = settingsTheme.material;\n  const locale = settingsLocale.material;\n  const useTheme = themeConfig || locale;\n  const theme = useTheme ? createTheme(themeConfig, locale) : null;\n\n  const base = (<div className=\"mui\">{children}</div>);\n  const withProviders = (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      <ConfirmProvider>\n        {base}\n      </ConfirmProvider>\n    </MuiPickersUtilsProvider>\n  );\n  const withTheme = theme ? (\n    <ThemeProvider theme={theme}>\n      {withProviders}\n    </ThemeProvider>\n  ) : withProviders;\n\n  return withTheme;\n};\n\n\nexport default {\n  MaterialTextWidget,\n  MaterialTextAreaWidget,\n  MaterialDateWidget,\n  MaterialDateTimeWidget,\n  MaterialTimeWidget,\n  MaterialSelectWidget,\n  MaterialNumberWidget,\n  MaterialSliderWidget,\n  MaterialRangeWidget,\n  MaterialBooleanWidget,\n  MaterialMultiSelectWidget,\n  MaterialAutocompleteWidget,\n\n  MaterialFieldSelect,\n  MaterialFieldAutocomplete,\n\n  MaterialIcon,\n  MaterialButton,\n  MaterialButtonGroup,\n  MaterialConjs,\n  MaterialSwitch,\n  MaterialValueSources,\n  MaterialConfirm,\n  MaterialUseConfirm: useConfirm,\n\n  MaterialProvider,\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength} = props;\n\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n\n  const textValue = value || \"\";\n\n  return (\n    <FormControl>\n      <TextField \n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength, maxRows, fullWidth} = props;\n  const {defaultMaxRows} = config.settings;\n\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  \n  const textValue = value || \"\";\n\n  return (\n    <FormControl fullWidth={fullWidth}>\n      <TextField \n        fullWidth={fullWidth}\n        maxRows={maxRows || defaultMaxRows}\n        multiline={true}\n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport { KeyboardDatePicker, DatePicker } from \"@material-ui/pickers\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, readonly, customProps, dateFormat, valueFormat, placeholder} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const useKeyboard = window?.matchMedia\n    ? window.matchMedia?.(\"(pointer:fine), (pointer:none)\").matches\n    : props.useKeyboard;\n  const Picker = useKeyboard ? KeyboardDatePicker : DatePicker;\n\n  return (\n    <FormControl>\n      <Picker\n        readOnly={readonly}\n        disabled={readonly}\n        placeholder={!readonly ? placeholder : \"\"}\n        format={dateFormat}\n        value={value || null}\n        onChange={handleChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};","import React from \"react\";\nimport { DateTimePicker, KeyboardDateTimePicker } from \"@material-ui/pickers\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, dateFormat, timeFormat, valueFormat, customProps} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const useKeyboard = window?.matchMedia\n    ? window.matchMedia?.(\"(pointer:fine), (pointer:none)\").matches\n    : props.useKeyboard;\n  const Picker = useKeyboard ? KeyboardDateTimePicker : DateTimePicker;\n  const dateTimeFormat = dateFormat + \" \" + timeFormat;\n  \n  return (\n    <FormControl>\n      <Picker\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        placeholder={!readonly ? placeholder : \"\"}\n        format={dateTimeFormat}\n        value={value || null}\n        onChange={handleChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport { TimePicker, KeyboardTimePicker } from \"@material-ui/pickers\";\nimport moment from \"moment\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, timeFormat, valueFormat, customProps} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const useKeyboard = window?.matchMedia\n    ? window.matchMedia?.(\"(pointer:fine), (pointer:none)\").matches\n    : props.useKeyboard;\n  const Picker = useKeyboard ? KeyboardTimePicker : TimePicker;\n  const hasSeconds = timeFormat.indexOf(\":ss\") != -1;\n  const timeValue = value ? moment(value, timeFormat) : null;\n\n  return (\n    <FormControl>\n      <Picker\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        placeholder={!readonly ? placeholder : \"\"}\n        format={timeFormat}\n        value={timeValue || null}\n        onChange={handleChange}\n        views={hasSeconds ? [\"hours\", \"minutes\", \"seconds\"] : [\"hours\", \"minutes\"]}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps} = props;\n  \n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n\n  const numberValue = value == undefined ? \"\" : value;\n  \n  return (\n    <FormControl>\n      <TextField \n        type=\"number\"\n        value={numberValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          min: min,\n          max: max,\n          step: step,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {config, placeholder, customProps, value, setValue, min, max, step, marks, readonly} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  const handleSliderChange = (_e, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleInputChange = (e) => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n\n  const handleInputBlur = () => {\n    // TIP: Fix if typed value out of range in input\n    if (value < min) {\n      setValue(min);\n    } else if (value > max) {\n      setValue(max);\n    }\n  };\n\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n  \n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0\n  const inputValue = typeof value === \"number\" ? value : \"\";\n  const sliderValue = typeof value === \"number\" ? value : null;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = marks ? Object.keys(marks).map(v => ({value: v, label: marks[v]})) : false;\n\n\n  const InputCmp = (\n    <TextField \n      type=\"number\"\n      value={inputValue}\n      placeholder={placeholder}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChange}\n      onBlur={handleInputBlur}\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    alignItems: \"center\",\n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {InputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {config, placeholders, customProps, value, setValue, min, max, step, marks, readonly, textSeparators} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  useEffect(() => {\n    const [valueFrom, valueTo] = props.value || [undefined, undefined];\n    if (props.value && (valueFrom == undefined || valueTo == undefined)) {\n      // happens if we changed op from '==' to 'between'\n      // (I know, timeout is dirty hack..)\n      setTimeout(() => {\n        const oneValue = valueFrom || valueTo;\n        const value = [oneValue, oneValue];\n        setValue(value);\n      }, 1);\n    }\n  }, []);\n\n  const handleSliderChange = (_e, newValues) => {\n    setValue(newValues);\n  };\n\n  const handleInputChangeFrom = (e) => {\n    // TIP: need to use props.value instead of value\n    let valueFrom = e.target.value;\n    if (valueFrom === \"\" || valueFrom == null)\n      valueFrom = undefined;\n    else\n      valueFrom = Number(valueFrom);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[0] = valueFrom;\n    setValue(value);\n  };\n\n  const handleInputChangeTo = (e) => {\n    let valueTo = e.target.value;\n    if (valueTo === \"\" || valueTo == null)\n      valueTo = undefined;\n    else\n      valueTo = Number(valueTo);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[1] = valueTo;\n    setValue(value);\n  };\n\n  const handleInputBlur = () => {\n    // TIP: Fix if typed value out of range in inputs\n    if (!value) return;\n    if (value[0] < min) {\n      setValue([min, value[1]]);\n    } else if (value[1] > max) {\n      setValue([value[0], max]);\n    }\n  };\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = marks ? Object.keys(marks).map(v => ({value: v, label: marks[v]})) : false;\n\n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0, but null will cause problems with range mode\n  let sliderValue = value ? [...value] : [undefined, undefined];\n  let [valueFrom, valueTo] = sliderValue;\n  if (valueFrom == undefined) {\n    valueFrom = \"\";\n    sliderValue[0] = 0;\n  }\n  if (valueTo == undefined) {\n    valueTo = \"\";\n    sliderValue[1] = 0;\n  }\n  \n\n  const FromInputCmp = (\n    <TextField \n      type=\"number\"\n      value={valueFrom}\n      placeholder={placeholders[0]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeFrom}\n      onBlur={handleInputBlur}\n      {...customInputProps}\n    />\n  );\n\n  const ToInputCmp = (\n    <TextField \n      type=\"number\"\n      value={valueTo}\n      placeholder={placeholders[1]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeTo}\n      onBlur={handleInputBlur}\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {FromInputCmp}\n        </div>\n        <div className={\"widget--sep\"}>\n          <span>{ textSeparators[1] }</span>\n        </div>\n        <div style={stylesInputWrapper}>\n          {ToInputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default (props) => {\n  const { customProps, value, setValue, labelYes, labelNo, readonly } = props;\n\n  const onChange = () => {\n    setValue(!value);\n  };\n  \n  return (\n    <FormControl>\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\n          <Grid item component=\"span\">{labelNo}</Grid>\n          <Grid item component=\"span\">\n            <Switch\n              checked={!!value}\n              onChange={onChange}\n              disabled={readonly}\n              {...customProps}\n            />\n          </Grid>\n          <Grid item component=\"span\">{labelYes}</Grid>\n        </Grid>\n      </Typography>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default ({items, setField, selectedKey, readonly, placeholder, errorText}) => {\n  const renderOptions = (fields, level = 0) => (\n    fields.map(field => {\n      const {items, path, label, disabled, matchesType} = field;\n      const prefix = \"\\u00A0\\u00A0\".repeat(level);\n      if (items) {\n        return [\n          <ListSubheader disabled={disabled} key={path} disableSticky={true}>\n            {prefix && <span>{prefix}</span>}\n            {label}\n          </ListSubheader>,\n          renderOptions(items, level+1),\n        ];\n      } else {\n        return <MenuItem disabled={disabled} key={path} value={path}>\n          {prefix && <span>{prefix}</span>}\n          {matchesType ? <b>{label}</b> : label}\n        </MenuItem>;\n      }\n    })\n  );\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setField(e.target.value);\n  };\n\n  const renderValue = (selectedValue) => {\n    if (!readonly && !selectedValue)\n      return placeholder;\n    const findLabel = (fields) => {\n      return fields.map(field => {\n        if(!field.items) return field.path === selectedValue ? field.label : null;\n        return findLabel(field.items);\n      });\n    };\n    return findLabel(items).filter((v) => {\n      if (Array.isArray(v)) {\n        return v.some((value) => value !== null);\n      } else {\n        return v !== null;\n      }\n    }).pop();\n  };\n  \n  const hasValue = selectedKey != null;\n  return (\n    <FormControl>\n      <Select\n        error={!!errorText}\n        autoWidth\n        displayEmpty\n        label={placeholder}\n        onChange={onChange}\n        value={hasValue ? selectedKey : \"\"}\n        disabled={readonly}\n        renderValue={renderValue}\n      >\n        {renderOptions(items)}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default ({id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel}) => {\n  //TIP: disabled=true if only 1 rule; readonly=true if immutable mode\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(key => {\n      const {id, name, label, checked} = conjunctionOptions[key];\n      const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n      if ((readonly || disabled) && !checked)\n        return null;\n      return (\n        <Button \n          key={id+postfix} \n          id={id+postfix} \n          color={checked ? \"primary\" : \"default\"} \n          value={key} \n          onClick={onClick.bind(null, key)} \n          disabled={readonly || disabled}\n        >\n          {label}\n        </Button>\n      );\n    });\n  \n  const renderNot = () => {\n    if (readonly && !not)\n      return null;\n    return (\n      <Button \n        key={id}\n        id={id + \"__not\"}\n        color={not ? \"secondary\" : \"default\"} \n        onClick={onNotClick.bind(null, !not)} \n        disabled={readonly}\n      >\n        {notLabel || \"NOT\"}\n      </Button>\n    );\n  };\n\n  const onClick = value => setConjunction(value);\n  const onNotClick = checked => setNot(checked);\n\n  return (\n    <FormControl>\n      <ButtonGroup \n        disableElevation \n        variant=\"contained\" \n        size=\"small\" \n        disabled={readonly}\n      >\n        {showNot && renderNot()}\n        {showConj && renderOptions()}\n      </ButtonGroup>\n    </FormControl>\n  );\n  \n};\n","import React from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport LockIcon from \"@material-ui/icons/Lock\";\n\nexport default ({value, setValue, label, checkedLabel, hideLabel, id, config, type}) => {\n  const {renderSize} = config.settings;\n  const onChange = e => setValue(e.target.checked);\n  const onClick = () => setValue(!value);\n  const postfix = type;\n  const showLabel = value ? (checkedLabel || label) : label;\n  const icon = value ? <LockIcon /> : <LockOpenIcon />;\n\n  if (type == \"lock\") {\n    if (hideLabel) {\n      return <IconButton\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n      >{icon}</IconButton>;\n    } else {\n      return <Button\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n        startIcon={icon}\n      >{showLabel}</Button>;\n    }\n  }\n\n  return <FormControlLabel \n    control={<Switch\n      checked={!!value}\n      size={\"small\"}\n      onChange={onChange}\n    />} \n    label={showLabel} \n  />;\n};\n","export default ({onOk, okText, cancelText, title, confirmFn}) => {\n  confirmFn({ \n    description: title || \"Are you sure?\",\n    title: null,\n    confirmationText: okText || \"Ok\",\n    cancellationText: cancelText || \"Cancel\",\n  })\n    .then(onOk)\n    .catch(() => {});\n};\n","import React from \"react\";\nimport MaterialWidgets from \"../widgets\";\nimport { BasicConfig, Utils } from \"@react-awesome-query-builder/ui\";\n\n\nconst settings = {\n  ...BasicConfig.settings,\n\n  renderField: (props, {RCE, W: {MaterialFieldAutocomplete, MaterialFieldSelect}}) => props?.customProps?.showSearch \n    ? RCE(MaterialFieldAutocomplete, props)\n    : RCE(MaterialFieldSelect, props),\n  renderOperator: (props, {RCE, W: {MaterialFieldSelect}}) => RCE(MaterialFieldSelect, props),\n\n  renderFunc: (props, {RCE, W: {MaterialFieldSelect}}) => RCE(MaterialFieldSelect, props),\n  renderConjs: (props, {RCE, W: {MaterialConjs}}) => RCE(MaterialConjs, props),\n  renderSwitch: (props, {RCE, W: {MaterialSwitch}}) => RCE(MaterialSwitch, props),\n  renderButton: (props, {RCE, W: {MaterialButton}}) => RCE(MaterialButton, props),\n  renderIcon: (props, {RCE, W: {MaterialIcon}}) => RCE(MaterialIcon, props),\n  renderButtonGroup: (props, {RCE, W: {MaterialButtonGroup}}) => RCE(MaterialButtonGroup, props),\n  renderValueSources: (props, {RCE, W: {MaterialValueSources}}) => RCE(MaterialValueSources, props),\n  renderFieldSources: (props, {RCE, W: {MaterialValueSources}}) => RCE(MaterialValueSources, props),\n  renderProvider: (props, {RCE, W: {MaterialProvider}}) => RCE(MaterialProvider, props),\n  renderConfirm: (props, {W: {MaterialConfirm}}) => MaterialConfirm(props),\n  useConfirm: ({W: {MaterialUseConfirm}}) => MaterialUseConfirm(),\n};\n\n\nconst widgets = {\n  ...BasicConfig.widgets,\n  text: {\n    ...BasicConfig.widgets.text,\n    factory: (props, {RCE, W: {MaterialTextWidget}}) => RCE(MaterialTextWidget, props),\n  },\n  textarea: {\n    ...BasicConfig.widgets.textarea,\n    factory: (props, {RCE, W: {MaterialTextAreaWidget}}) => RCE(MaterialTextAreaWidget, props),\n  },\n  number: {\n    ...BasicConfig.widgets.number,\n    factory: (props, {RCE, W: {MaterialNumberWidget}}) => RCE(MaterialNumberWidget, props),\n  },\n  multiselect: {\n    ...BasicConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {MaterialAutocompleteWidget, MaterialMultiSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch) \n        ? RCE(MaterialAutocompleteWidget, {...props, multiple: true}) \n        : RCE(MaterialMultiSelectWidget, props);\n    },\n  },\n  select: {\n    ...BasicConfig.widgets.select,\n    factory: (props, {RCE, W: {MaterialAutocompleteWidget, MaterialSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch) \n        ? RCE(MaterialAutocompleteWidget, props) \n        : RCE(MaterialSelectWidget, props);\n    },\n  },\n  slider: {\n    ...BasicConfig.widgets.slider,\n    factory: (props, {RCE, W: {MaterialSliderWidget}}) => RCE(MaterialSliderWidget, props),\n  },\n  boolean: {\n    ...BasicConfig.widgets.boolean,\n    factory: (props, {RCE, W: {MaterialBooleanWidget}}) => RCE(MaterialBooleanWidget, props),\n  },\n  date: {\n    ...BasicConfig.widgets.date,\n    factory: (props, {RCE, W: {MaterialDateWidget}}) => RCE(MaterialDateWidget, props),\n  },\n  time: {\n    ...BasicConfig.widgets.time,\n    factory: (props, {RCE, W: {MaterialTimeWidget}}) => RCE(MaterialTimeWidget, props),\n  },\n  datetime: {\n    ...BasicConfig.widgets.datetime,\n    factory: (props, {RCE, W: {MaterialDateTimeWidget}}) => RCE(MaterialDateTimeWidget, props),\n  },\n\n  rangeslider: {\n    ...BasicConfig.widgets.rangeslider,\n    factory: (props, {RCE, W: {MaterialRangeWidget}}) => RCE(MaterialRangeWidget, props),\n  },\n};\n\n\nconst types = {\n  ...BasicConfig.types,\n};\n\nconst ctx = {\n  ...BasicConfig.ctx,\n  W: {\n    ...BasicConfig.ctx.W,\n    ...MaterialWidgets,\n  },\n};\n\nlet config = {\n  ...BasicConfig,\n  ctx,\n  types,\n  widgets,\n  settings,\n};\nconfig = Utils.ConfigMixins.addMixins(config, [\n  \"rangeslider\",\n]);\n\nexport default config;","// Had to make uuid use a constant seed so it would generate same sequence across runs. This was needed\n// so server side rendering and client side rendering yield same results (e.g. the uuid is used when rendering\n// the concunctions with their name and id)\nvar query_builder_seed = 0;\nexport default () => {\n  // Generate a random GUID http://stackoverflow.com/a/2117523.\n  const timePart = (new Date().getTime().toString(16)+\"FF\").substr(0,11);\n  const s = \"ssssssss-xxxx-4xxx-yxxx-x\".replace(/[xys]/g, (c) => {\n    const r = c === \"s\" ? Math.floor(Math.random() * 16) : (query_builder_seed++) & 0xf;\n    const v = c === \"x\" ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n  return s + timePart;\n};\n","import Immutable, { Map } from \"immutable\";\nimport omit from \"lodash/omit\";\nimport {default as uuid} from \"./uuid\";\n\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport {uuid};\n\nexport const widgetDefKeysToOmit = [\n  \"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\", \"spelImportFuncs\", \"spelImportValue\"\n];\n\nexport const opDefKeysToOmit = [\n  \"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"\n];\n\n// RegExp.quote = function (str) {\n//     return str.replace(/([.?*+^$[\\]\\\\(){}|-])/g, \"\\\\$1\");\n// };\n\nexport const defaultValue = (value, _default) => {\n  return (typeof value === \"undefined\") ? _default : value;\n};\n\n// const immutableEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else {\n//     return v1.equals(v2);\n//   }\n// };\n\nexport const deepEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else if (Map.isMap(v1)) {\n    return v1.equals(v2);\n  } else {\n    return JSON.stringify(v1) == JSON.stringify(v2);\n  }\n};\n\n// //Do sets have same values?\n// const eqSet = function (as, bs) {\n//   if (as.size !== bs.size) return false;\n//   for (var a of as) if (!bs.has(a)) return false;\n//   return true;\n// };\n\n\n// //Do arrays have same values?\n// const eqArrSet = function (arr1, arr2) {\n//   return eqSet(new Set(arr1), new Set(arr2));\n// };\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (Map.isMap(a))\n    return a.equals(b);\n  else if (typeof a == \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport const isImmutable = (v) => {\n  return typeof v === \"object\" && v !== null && typeof v.toJS === \"function\";\n};\n\nexport function toImmutableList(v) {\n  return (isImmutable(v) ? v : new Immutable.List(v));\n}\n\nexport function applyToJS(v) {\n  return (isImmutable(v) ? v.toJS() : v);\n}\n\nexport const escapeRegExp = (string) => {\n  return string.replace(/[.*+?^${}()|[\\]\\\\/]/g, \"\\\\$&\"); // $& means the whole matched string\n};\n\nexport const cleanJSX = (jsx) => {\n  const jsxKeys = [\"$$typeof\", \"_owner\", \"_store\", \"ref\", \"key\"];\n\n  const getName = (val) => {\n    if (typeof val === \"string\") {\n      return val;\n    } else if (typeof val === \"function\") {\n      return val.name;\n    }\n    return val;\n  };\n\n  if (jsx instanceof Array) {\n    return jsx.map((el, _i) => cleanJSX(el));\n  } else if (typeof jsx === \"object\" && jsx !== null) {\n    if (isDirtyJSX(jsx)) {\n      const cleaned = omit(jsx, jsxKeys);\n      if (cleaned.type) {\n        cleaned.type = getName(cleaned.type);\n      }\n      if (cleaned?.props?.children) {\n        cleaned.props.children = cleanJSX(cleaned.props.children);\n      }\n      return cleaned;\n    }\n  }\n  return jsx;\n};\n\nexport const isDirtyJSX = (jsx) => {\n  return typeof jsx === \"object\"\n    && jsx !== null\n    && !Array.isArray(jsx)\n    && Object.keys(jsx).includes(\"type\")\n    && Object.keys(jsx).includes(\"props\") // even if {}\n    && Object.keys(jsx).includes(\"key\") // even if null\n    && Object.keys(jsx).includes(\"ref\") // even if null\n    && Object.keys(jsx).includes(\"$$typeof\"); // Symbol(react.element)\n};\n\nexport const isJSX = (jsx) => (\n  typeof jsx === \"object\"\n  && jsx !== null\n  && !Array.isArray(jsx)\n  && typeof jsx[\"type\"] === \"string\"\n  && Object.keys(jsx).includes(\"props\")\n);\n\nexport const isJsonLogic = (logic) => {\n  let isJL = typeof logic === \"object\" // An object\n    && logic !== null // but not null\n    && !Array.isArray(logic) // and not an array\n    && Object.keys(logic).length === 1; // with exactly one key\n  if (isJL) {\n    // additional checks ?\n  }\n  return isJL;\n};\n\nexport function sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\n\n// [1, 4, 9] + [1, 5, 9] => [1, 4, 5, 9]\n// Used for merging arrays of operators for different widgets of 1 type\nexport function mergeArraysSmart(arr1, arr2) {\n  if (!arr1) arr1 = [];\n  if (!arr2) arr2 = [];\n  return arr2\n    .map(op => [op, arr1.indexOf(op)])\n    .map(([op, ind], i, orig) => {\n      if (ind == -1) {\n        const next = orig.slice(i+1);\n        const prev = orig.slice(0, i);\n        const after = prev.reverse().find(([_cop, ci]) => ci != -1);\n        const before = next.find(([_cop, ci]) => ci != -1);\n        if (before)\n          return [op, \"before\", before[0]];\n        else if (after)\n          return [op, \"after\", after[0]];\n        else\n          return [op, \"append\", null];\n      } else {\n      // already exists\n        return null;\n      }\n    })\n    .filter(x => x !== null)\n    .reduce((acc, [newOp, rel, relOp]) => {\n      const ind = acc.indexOf(relOp);\n      if (acc.indexOf(newOp) == -1) {\n        if (ind > -1) {\n        // insert after or before\n          acc.splice( ind + (rel == \"after\" ? 1 : 0), 0, newOp );\n        } else {\n        // insert to end or start\n          acc.splice( (rel == \"append\" ? Infinity : 0), 0, newOp );\n        }\n      }\n      return acc;\n    }, arr1.slice());\n}\n\nexport const deepFreeze = obj => {\n  if (typeof obj === \"object\" && obj !== null) {\n    Object.keys(obj).forEach(prop => {\n      deepFreeze(obj[prop]);\n    });\n    Object.freeze(obj);\n  }\n};\n\nexport const isJsonCompatible = (tpl, obj, bag = {}, path = []) => {\n  if (isObject(tpl)) {\n    if (tpl.var) {\n      bag[tpl.var] = obj;\n      return true;\n    }\n    if (!isObject(obj))\n      return false;\n    for (const k in tpl) {\n      const tv = tpl[k];\n      const ov = obj[k];\n      if (!isJsonCompatible(tv, ov, bag, [...path, k]))\n        return false;\n    }\n    return true;\n  } else if (Array.isArray(tpl)) {\n    if (!Array.isArray(obj))\n      return false;\n    for (let i = 0 ; i < tpl.length ; i++) {\n      const tv = tpl[i];\n      const ov = obj[i];\n      if (!isJsonCompatible(tv, ov, bag, [...path, i]))\n        return false;\n    }\n    return true;\n  } else {\n    return tpl === obj;\n  }\n};\n\nconst isDev = () => (typeof process !== \"undefined\" && process.env && process.env.NODE_ENV == \"development\");\n\nexport const getLogger = (devMode = false) => {\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\nexport const getFirstDefined = (arr = []) => {\n  let ret;\n  for (let i = 0 ; i < arr.length ; i++) {\n    const v = arr[i];\n    if (v !== undefined) {\n      ret = v;\n      break;\n    }\n  }\n  return ret;\n};\n\nexport const logger = getLogger();\n\n","\n\nexport const settings = {\n  formatField: (field, parts, label2, fieldDefinition, config, isForDisplay) => {\n    if (isForDisplay)\n      return label2;\n    else\n      return field;\n  },\n\n\n  fieldSources: [\"field\"],\n  keepInputOnChangeFieldSrc: true,\n  fieldItemKeysForSearch: [\"label\", \"path\", \"altLabel\", \"grouplabel\"],\n  listKeysForSearch: [\"title\", \"value\"],\n  valueSourcesInfo: {\n    value: {},\n  },\n  fieldSeparator: \".\",\n  fieldSeparatorDisplay: \".\",\n  canReorder: true,\n  canRegroup: true,\n  canDeleteLocked: false,\n  canLeaveEmptyGroup: true,\n  shouldCreateEmptyGroup: false,\n  canShortMongoQuery: true,\n  removeEmptyGroupsOnLoad: true,\n  removeIncompleteRulesOnLoad: true,\n  removeInvalidMultiSelectValuesOnLoad: true,\n  setOpOnChangeField: [\"keep\", \"default\"], // 'default' (default if present), 'keep' (keep prev from last field), 'first', 'none'\n  groupOperators: [\"some\", \"all\", \"none\"],\n\n  defaultGroupConjunction: \"AND\",\n\n  // localization\n  locale: {\n    moment: \"en\",\n  },\n  valueLabel: \"Value\",\n  valuePlaceholder: \"Value\",\n  fieldLabel: \"Field\",\n  operatorLabel: \"Operator\",\n  funcLabel: \"Function\",\n  fieldPlaceholder: \"Select field\",\n  funcPlaceholder: \"Select function\",\n  operatorPlaceholder: \"Select operator\",\n  lockLabel: \"Lock\",\n  lockedLabel: \"Locked\",\n  deleteLabel: \"Delete\",\n  addGroupLabel: \"Add group\",\n  addCaseLabel: \"Add condition\",\n  addDefaultCaseLabel: \"Add default condition\",\n  defaultCaseLabel: \"Default:\",\n  addRuleLabel: \"Add rule\",\n  addSubRuleLabel: \"Add sub rule\",\n  delGroupLabel: \"Delete\",\n  notLabel: \"Not\",\n  fieldSourcesPopupTitle: \"Select source\",\n  valueSourcesPopupTitle: \"Select value source\",\n  removeRuleConfirmOptions: null,\n  removeGroupConfirmOptions: null,\n\n};\n","\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const toListValue = (v, title) => {\n  if (v == null || v == \"\") {\n    return undefined;\n  } else if (isObject(v)) {\n    return {\n      ...v,\n      title: v.title || v.value, // fallback to value\n    };\n  } else {\n    return {\n      value: v,\n      title: (title !== undefined ? title : \"\"+v)\n    };\n  }\n};\n\nexport const makeCustomListValue = (v) => {\n  const lv = toListValue(v);\n  if (isObject(lv)) {\n    return {\n      ...toListValue(v),\n      isCustom: true,\n    };\n  } else { // only if undefined\n    return lv;\n  }\n};\n\n// convert {<value>: <title>, ..} or [value, ..] to normal [{value, title}, ..]\nexport const listValuesToArray = (listValuesObj) => {\n  if (Array.isArray(listValuesObj))\n    return listValuesObj.map(v => toListValue(v));\n  if (!isObject(listValuesObj))\n    return listValuesObj;\n  \n  let listValuesArr = [];\n  for (let v in listValuesObj) {\n    const title = listValuesObj[v];\n    listValuesArr.push(toListValue(v, title));\n  }\n  return listValuesArr;\n};\n\n// listValues can be {<value>: <title>, ..} or [{value, title}, ..] or [value, ..]\n// todo: same as getListValue() (but args are switched)\nexport const getItemInListValues = (listValues, value) => {\n  if (Array.isArray(listValues)) {\n    const values = listValues.map(v => toListValue(v));\n    return values.find(v => (\"\"+v.value === \"\"+value));\n  } else {\n    return listValues[value] !== undefined ? toListValue(value, listValues[value]) : undefined;\n  }\n};\n\nexport const getTitleInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.title : value;\n};\n\nexport const getValueInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.value : value;\n};\n\nexport const mapListValues = (listValues, mapFn) => {\n  let ret = [];\n  if (Array.isArray(listValues)) {\n    for (let v of listValues) {\n      const lv = mapFn(toListValue(v));\n      if (lv != null)\n        ret.push(lv);\n    }\n  } else {\n    for (let value in listValues) {\n      const lv = mapFn(toListValue(value, listValues[value]));\n      if (lv != null)\n        ret.push(lv);\n    }\n  }\n  return ret;\n};\n\nexport const searchListValue = (search, listValues) => \n  mapListValues(listValues, (lv) => (\n    `${lv.value}`.indexOf(search) != -1 || lv.title.indexOf(search) != -1\n      ? lv : null\n  ))\n    .filter(v => v !== null)\n    .shift();\n\nexport const getListValue = (selectedValue, listValues) => \n  mapListValues(listValues, \n    (lv) => (\"\"+lv.value === \"\"+selectedValue ? lv : null)\n  )\n    .filter(v => v !== null)\n    .shift();\n","import Immutable  from \"immutable\";\nimport {toImmutableList, isImmutable, applyToJS as immutableToJs} from \"./stuff\";\nimport {jsToImmutable} from \"../import/tree\";\n\nexport {toImmutableList, jsToImmutable, immutableToJs, isImmutable};\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreePath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.skip(1);\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreeSubpath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {Immutable.List} path\n * @return {Immutable.Map}\n */\nexport const getItemByPath = (tree, path) => {\n  let children = new Immutable.OrderedMap({ [tree.get(\"id\")] : tree });\n  let res = tree;\n  path.forEach((id) => {\n    res = children.get(id);\n    children = res.get(\"children1\");\n  });\n  return res;\n};\n\n\n/**\n * Remove `path` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\n// export const removePathsInTree = (tree) => {\n//   let newTree = tree;\n\n//   function _processNode (item, path) {\n//     const itemPath = path.push(item.get(\"id\"));\n//     if (item.get(\"path\")) {\n//       newTree = newTree.removeIn(expandTreePath(itemPath, \"path\"));\n//     }\n\n//     const children = item.get(\"children1\");\n//     if (children) {\n//       children.map((child, _childId) => {\n//         _processNode(child, itemPath);\n//       });\n//     }\n//   }\n\n//   _processNode(tree, new Immutable.List());\n\n//   return newTree;\n// };\n\n\n/**\n * Remove `isLocked` in items that inherit parent's `isLocked`\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const removeIsLockedInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, isParentLocked = false) {\n    const itemPath = path.push(item.get(\"id\"));\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    if (isParentLocked && isLocked) {\n      newTree = newTree.deleteIn(expandTreePath(itemPath, \"properties\", \"isLocked\"));\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, itemPath, isLocked || isParentLocked);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List());\n\n  return newTree;\n};\n\n\n/**\n * Set correct `path` and `id` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const fixPathsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return;\n    const currPath = item.get(\"path\");\n    const currId = item.get(\"id\");\n    const itemId = currId || nodeId;\n    const itemPath = path.push(itemId);\n    if (!currPath || !currPath.equals(itemPath)) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"path\"), itemPath);\n    }\n    if (!currId) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"id\"), itemId);\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      if (children.constructor.name == \"Map\") {\n        // protect: should be OrderedMap, not Map (issue #501)\n        newTree = newTree.setIn(\n          expandTreePath(itemPath, \"children1\"), \n          new Immutable.OrderedMap(children)\n        );\n      }\n      children.map((child, childId) => {\n        _processNode(child, itemPath, lev + 1, childId);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\nexport const fixEmptyGroupsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return false;\n    const itemId = item.get(\"id\") || nodeId;\n    const itemPath = path.push(itemId);\n\n    const children = item.get(\"children1\");\n    if (children) {\n      const allChildrenGone = children.map((child, childId) => {\n        return _processNode(child, itemPath, lev + 1, childId);\n      }).reduce((curr, v) => (curr && v), true);\n      if ((children.size == 0 || allChildrenGone) && lev > 0) {\n        newTree = newTree.deleteIn(expandTreePath(itemPath));\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @return {Object} {flat, items}\n */\nexport const getFlatTree = (tree) => {\n  let flat = [];\n  let items = {};\n  let realHeight = 0;\n\n  function _flatizeTree (item, path, insideCollapsed, insideLocked, insideRuleGroup, lev, info, parentType, caseId) {\n    const type = item.get(\"type\");\n    const collapsed = item.get(\"collapsed\");\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    const childrenIds = children ? children.map((_child, childId) => childId).valueSeq().toArray() : null;\n    const isRuleGroup = type == \"rule_group\";\n    // tip: count rule_group as 1 rule\n    const isLeaf = !insideRuleGroup && (!children || isRuleGroup);\n    const hasChildren = childrenIds?.length > 0;\n\n    const itemsBefore = flat.length;\n    const top = realHeight;\n    flat.push(id);\n    if (!insideCollapsed)\n      realHeight += 1;\n    info.height = (info.height || 0) + 1;\n\n    items[id] = {\n      type: type,\n      parent: path.length ? path[path.length-1] : null,\n      parentType: parentType,\n      caseId: type == \"case_group\" ? id : caseId,\n      isDefaultCase: type == \"case_group\" && !children,\n      path: path.concat(id),\n      lev: lev,\n      leaf: !children,\n      index: itemsBefore,\n      id: id,\n      children: childrenIds,\n      leafsCount: 0,\n      _top: itemsBefore,\n      //_height: (itemsAfter - itemsBefore),\n      top: (insideCollapsed ? null : top),\n      //height: height,\n      //bottom: (insideCollapsed ? null : top) + height,\n      collapsed: collapsed,\n      node: item,\n      isLocked: isLocked || insideLocked,\n    };\n\n    let depth;\n    if (children) {\n      let subinfo = {};\n      children.map((child, _childId) => {\n        _flatizeTree(\n          child, path.concat(id), \n          insideCollapsed || collapsed, insideLocked || isLocked, insideRuleGroup || isRuleGroup,\n          lev + 1, subinfo, type, type == \"case_group\" ? id : caseId\n        );\n      });\n      if (!collapsed) {\n        info.height = (info.height || 0) + (subinfo.height || 0);\n        if (hasChildren && !isRuleGroup) { // tip: don't count children of rule_group\n          depth = (subinfo.depth || 0) + 1;\n        }\n      }\n    }\n    \n    if (caseId && isLeaf) {\n      items[caseId].leafsCount++;\n    }\n\n    const itemsAfter = flat.length;\n    const _bottom = realHeight;\n    const height = info.height;\n        \n    Object.assign(items[id], {\n      _height: (itemsAfter - itemsBefore),\n      height: height,\n      bottom: (insideCollapsed ? null : top) + height,\n    });\n    if (depth != undefined) {\n      Object.assign(items[id], {\n        depth: depth,\n      });\n      info.depth = Math.max(info.depth || 0, depth);\n    }\n  }\n\n  _flatizeTree(tree, [], false, false, false, 0, {}, null, null);\n\n  for (let i = 0 ; i < flat.length ; i++) {\n    const prevId = i > 0 ? flat[i-1] : null;\n    const nextId = i < (flat.length-1) ? flat[i+1] : null;\n    let item = items[flat[i]];\n    item.prev = prevId;\n    item.next = nextId;\n  }\n\n  return {flat, items};\n};\n\n\n/**\n * Returns count of reorderable(!) nodes\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalReordableNodesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    const isRuleGroup = type == \"rule_group\";\n    cnt++;\n    //tip: rules in rule-group can be reordered only inside\n    if (children && !isRuleGroup) {\n      children.map((child, _childId) => {\n        _processNode(child, path.concat(id), lev + 1);\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt - 1; // -1 for root\n};\n\n/**\n * Returns count of rules (leafs, i.e. don't count groups)\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalRulesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    \n    if (type == \"rule\" || type == \"rule_group\") {\n      // tip: count rule_group as 1 rule\n      cnt++;\n    } else if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, path.concat(id), lev + 1);\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt;\n};\n\nexport const getTreeBadFields = (tree) => {\n  let badFields = [];\n\n  function _processNode (item, path, lev) {\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const valueError = item.getIn([\"properties\", \"valueError\"]);\n    const field = item.getIn([\"properties\", \"field\"]);\n    if (valueError && valueError.size > 0 && valueError.filter(v => v != null).size > 0) {\n      badFields.push(field);\n    }\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, path.concat(id), lev + 1);\n      });\n    }\n  }\n\n  if (tree)\n    _processNode(tree, [], 0);\n    \n  return Array.from(new Set(badFields));\n};\n\n\n// Remove fields that can be calced: \"id\", \"path\"\n// Remove empty fields: \"operatorOptions\"\nexport const getLightTree = (tree, children1AsArray = false) => {\n  let newTree = tree;\n\n  function _processNode (item, itemId) {\n    if (item.path)\n      delete item.path;\n    if (!children1AsArray && itemId)\n      delete item.id;\n    let properties = item.properties;\n    if (properties) {\n      if (properties.operatorOptions == null)\n        delete properties.operatorOptions;\n    }\n\n    const children = item.children1;\n    if (children) {\n      for (let id in children) {\n        _processNode(children[id], id);\n      }\n      if (children1AsArray) {\n        item.children1 = Object.values(children);\n      }\n    }\n  }\n\n  _processNode(tree, null);\n\n  return newTree;\n};\n\nexport const getSwitchValues = (tree) => {\n  let vals = [];\n  const children = tree.get(\"children1\");\n  if (children) {\n    children.map((child) => {\n      const value = child.getIn([\"properties\", \"value\"]);\n      let caseValue;\n      if (value && value.size == 1) {\n        caseValue = value.get(0);\n        if (Array.isArray(caseValue) && caseValue.length == 0) {\n          caseValue = null;\n        }\n      } else {\n        caseValue = null;\n      }\n      vals = [...vals, caseValue];\n    });\n  }\n\n  return vals;\n};\n\nexport const isEmptyTree = (tree) => (!tree.get(\"children1\") || tree.get(\"children1\").size == 0);\n\nexport const hasChildren = (tree, path) => tree.getIn(expandTreePath(path, \"children1\")).size > 0;\n\n\nexport const _fixImmutableValue = (v) => {\n  if (v?.toJS) {\n    const vJs = v?.toJS?.();\n    if (vJs?.func) {\n      // `v` is a func arg, keep Immutable\n      return v.toOrderedMap();\n    } else {\n      // for values of multiselect use Array instead of List\n      return vJs;\n    }\n  } else {\n    return v;\n  }\n};\n","import Immutable, { fromJS, Map } from \"immutable\";\nimport {validateTree} from \"../utils/validation\";\nimport {extendConfig} from \"../utils/configUtils\";\nimport {getTreeBadFields, getLightTree, _fixImmutableValue} from \"../utils/treeUtils\";\nimport {isJsonLogic} from \"../utils/stuff\";\n\nexport const getTree = (immutableTree, light = true, children1AsArray = true) => {\n  if (!immutableTree) return undefined;\n  let tree = immutableTree;\n  tree = tree.toJS();\n  if (light)\n    tree = getLightTree(tree, children1AsArray);\n  return tree;\n};\n\nexport const loadTree = (serTree) => {\n  if (isImmutableTree(serTree)) {\n    return serTree;\n  } else if (isTree(serTree)) {\n    return jsToImmutable(serTree);\n  } else if (typeof serTree == \"string\" && serTree.startsWith('[\"~#iM\"')) {\n    //tip: old versions of RAQB were saving tree with `transit.toJSON()`\n    // https://github.com/ukrbublik/react-awesome-query-builder/issues/69\n    throw \"You are trying to load query in obsolete serialization format (Immutable string) which is not supported in versions starting from 2.1.17\";\n  } else if (typeof serTree == \"string\") {\n    return jsToImmutable(JSON.parse(serTree));\n  } else throw \"Can't load tree!\";\n};\n\nexport const checkTree = (tree, config) => {\n  if (!tree) return undefined;\n  const extendedConfig = extendConfig(config, undefined, true);\n  return validateTree(tree, null, extendedConfig, extendedConfig);\n};\n\nexport const isValidTree = (tree) => {\n  return getTreeBadFields(tree).length == 0;\n};\n\nexport const isImmutableTree = (tree) => {\n  return Map.isMap(tree);\n};\n\nexport const isTree = (tree) => {\n  return typeof tree == \"object\" && (tree.type == \"group\" || tree.type == \"switch_group\");\n};\n\nexport {isJsonLogic};\n\nexport function jsToImmutable(tree) {\n  const imm = fromJS(tree, function (key, value, path) {\n    const isFuncArg = path\n      && path.length > 3\n      && path[path.length-1] === \"value\"\n      && path[path.length-3] === \"args\";\n    const isRuleValue = path\n      && path.length > 3\n      && path[path.length-1] === \"value\"\n      && path[path.length-2] === \"properties\";\n\n    let outValue;\n    if (key == \"properties\") {\n      outValue = value.toOrderedMap();\n\n      // `value` should be undefined instead of null\n      // JSON doesn't support undefined and replaces undefined -> null\n      // So fix: null -> undefined\n      for (let i = 0 ; i < 2 ; i++) {\n        if (outValue.get(\"value\")?.get(i) === null) {\n          outValue = outValue.setIn([\"value\", i], undefined);\n        }\n      }\n    } else if (isFuncArg) {\n      outValue = _fixImmutableValue(value);\n    } else if ((path ? isRuleValue : key == \"value\") && Immutable.Iterable.isIndexed(value)) {\n      outValue = value.map(_fixImmutableValue).toList();\n    } else if (key == \"asyncListValues\") {\n      // keep in JS format\n      outValue = value.toJS();\n    } else if (key == \"children1\" && Immutable.Iterable.isIndexed(value)) {\n      outValue = new Immutable.OrderedMap(value.map(child => [child.get(\"id\"), child]));\n    } else {\n      outValue = Immutable.Iterable.isIndexed(value) ? value.toList() : value.toOrderedMap();\n    }\n    return outValue;\n  });\n  return imm;\n}\n\n","import uuid from \"../utils/uuid\";\nimport {defaultValue, isJsonLogic, shallowEqual, logger} from \"../utils/stuff\";\nimport {getFieldConfig, extendConfig, normalizeField, getFuncConfig, iterateFuncs, getFieldParts} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {loadTree} from \"./tree\";\nimport {defaultConjunction, defaultGroupConjunction} from \"../utils/defaultUtils\";\n\nimport moment from \"moment\";\n\n// http://jsonlogic.com/\n\n// helpers\nconst arrayUniq = (arr) => Array.from(new Set(arr));\nconst arrayToObject = (arr) => arr.reduce((acc, [f, fc]) => ({ ...acc, [f]: fc }), {});\n\nconst createMeta = () => {\n  return {\n    errors: []\n  };\n};\n\nexport const loadFromJsonLogic = (logicTree, config) => {\n  return _loadFromJsonLogic(logicTree, config, false);\n};\n\nexport const _loadFromJsonLogic = (logicTree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = createMeta();\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  let jsTree = logicTree ? convertFromLogic(logicTree, conv, extendedConfig, \"rule\", meta) : undefined;\n  if (jsTree && jsTree.type != \"group\") {\n    jsTree = wrapInDefaultConj(jsTree, extendedConfig);\n  }\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from JsonLogic:\", meta.errors);\n    return immTree;\n  }\n};\n\n\nconst buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (typeof opConfig.jsonLogic == \"string\") {\n      // example: \"</2\", \"#in/1\"\n      const opk = (opConfig._jsonLogicIsRevArgs ? \"#\" : \"\") + opConfig.jsonLogic + \"/\" + defaultValue(opConfig.cardinality, 1);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else if(typeof opConfig.jsonLogic2 == \"string\") {\n      // example: all-in/1\"\n      const opk = opConfig.jsonLogic2 + \"/\" + defaultValue(opConfig.cardinality, 1);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.jsonLogicConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (const [funcPath, funcConfig] of iterateFuncs(config)) {\n    let fk;\n    if (funcConfig.jsonLogicIsMethod) {\n      fk = \"#\" + funcConfig.jsonLogic;\n    } else if (typeof funcConfig.jsonLogic == \"string\") {\n      fk = funcConfig.jsonLogic;\n    }\n    if (fk) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcPath);\n    }\n  }\n\n  const {groupVarKey, altVarKey} = config.settings.jsonLogic;\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    varKeys: [\"var\", groupVarKey, altVarKey],\n  };\n};\n\nconst convertFromLogic = (logic, conv, config, expectedType, meta, not = false, fieldConfig, widget, parentField = null, _isLockedLogic = false) => {\n  let op, vals;\n  if (isJsonLogic(logic)) {\n    op = Object.keys(logic)[0];\n    vals = logic[op];\n    if (!Array.isArray(vals))\n      vals = [ vals ];\n  }\n  \n  let ret;\n  const beforeErrorsCnt = meta.errors.length;\n\n  const {lockedOp} = config.settings.jsonLogic;\n  const isEmptyOp = op == \"!\" && (vals.length == 1 && vals[0] && isJsonLogic(vals[0]) && conv.varKeys.includes(Object.keys(vals[0])[0]));\n  const isRev = op == \"!\" && !isEmptyOp;\n  const isLocked = lockedOp && op == lockedOp;\n  if (isLocked) {\n    ret = convertFromLogic(vals[0], conv, config, expectedType, meta, not, fieldConfig, widget, parentField, true);\n  } else if (isRev) {\n    // reverse with not\n    ret = convertFromLogic(vals[0], conv, config, expectedType, meta, !not, fieldConfig, widget, parentField);\n  } else if(expectedType == \"val\") {\n    // not is not used here\n    ret = convertFieldRhs(op, vals, conv, config, not, meta, parentField) \n      || convertFuncRhs(op, vals, conv, config, not, fieldConfig, meta, parentField) \n      || convertValRhs(logic, fieldConfig, widget, config, meta);\n  } else if(expectedType == \"rule\") {\n    ret = convertConj(op, vals, conv, config, not, meta, parentField, false) \n    || convertOp(op, vals, conv, config, not, meta, parentField);\n  }\n\n  const afterErrorsCnt = meta.errors.length;\n  if (op != \"!\" && ret === undefined && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Can't parse logic ${JSON.stringify(logic)}`);\n  }\n\n  if (isLocked) {\n    ret.properties.isLocked = true;\n  }\n\n  return ret;\n};\n\n\nconst convertValRhs = (val, fieldConfig, widget, config, meta) => {\n  if (val === undefined)\n    val = fieldConfig?.defaultValue;\n  if (val === undefined) return undefined;\n  const widgetConfig = config.widgets[widget || fieldConfig?.mainWidget];\n  const fieldType = fieldConfig?.type;\n\n  if (!widgetConfig) {\n    meta.errors.push(`No widget for type ${fieldType}`);\n    return undefined;\n  }\n\n  if (isJsonLogic(val)) {\n    meta.errors.push(`Unexpected logic in value: ${JSON.stringify(val)}`);\n    return undefined;\n  }\n\n  // number of seconds -> time string\n  if (fieldType == \"time\" && typeof val == \"number\") {\n    const [h, m, s] = [Math.floor(val / 60 / 60) % 24, Math.floor(val / 60) % 60, val % 60];\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      const dateVal = new Date(val);\n      dateVal.setMilliseconds(0);\n      dateVal.setHours(h);\n      dateVal.setMinutes(m);\n      dateVal.setSeconds(s);\n      val = moment(dateVal).format(valueFormat);\n    } else {\n      val = `${h}:${m}:${s}`;\n    }\n  }\n\n  // \"2020-01-08T22:00:00.000Z\" -> Date object\n  if ([\"date\", \"datetime\"].includes(fieldType) && val && !(val instanceof Date)) {\n    try {\n      const dateVal = new Date(val);\n      if (dateVal instanceof Date && dateVal.toISOString() === val) {\n        val = dateVal;\n      }\n    } catch(e) {\n      meta.errors.push(`Can't convert value ${val} as Date`);\n      val = undefined;\n    }\n  }\n\n  // Date object -> formatted string\n  if (val instanceof Date && fieldConfig) {\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      val = moment(val).format(valueFormat);\n    }\n  }\n\n  let asyncListValues;\n  if (val && fieldConfig?.fieldSettings?.asyncFetch) {\n    const vals = Array.isArray(val) ? val : [val];\n    asyncListValues = vals;\n  }\n\n  return {\n    valueSrc: \"value\",\n    value: val,\n    valueType: widgetConfig.type,\n    asyncListValues\n  };\n};\n\nconst convertFieldRhs = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (conv.varKeys.includes(op) && typeof vals[0] == \"string\") {\n    const field = normalizeField(config, vals[0], parentField);\n    const fieldConfig = getFieldConfig(config, field);\n    if (!fieldConfig) {\n      meta.errors.push(`No config for field ${field}`);\n      return undefined;\n    }\n\n    return {\n      valueSrc: \"field\",\n      value: field,\n      valueType: fieldConfig.type,\n    };\n  }\n\n  return undefined;\n};\n\nconst convertLhs = (isGroup0, jlField, args, conv, config, not = null, fieldConfig = null, meta, parentField = null) => {\n  let k = Object.keys(jlField)[0];\n  let v = Object.values(jlField)[0];\n\n  const _parse = (k, v) => {\n    return convertFieldLhs(k, v, conv, config, not, meta, parentField)\n    || convertFuncLhs(k, v, conv, config, not, fieldConfig, meta, parentField);\n  };\n\n  const beforeErrorsCnt = meta.errors.length;\n  let field, fieldSrc, having, isGroup;\n  const parsed = _parse(k, v);\n  if (parsed) {\n    field = parsed.field;\n    fieldSrc = parsed.fieldSrc;\n  }\n  if (isGroup0) {\n    isGroup = true;\n    having = args[0];\n    args = [];\n  }\n  // reduce/filter for group ext\n  if (k == \"reduce\" && Array.isArray(v) && v.length == 3) {\n    let [filter, acc, init] = v;\n    if (isJsonLogic(filter) && init == 0\n      && isJsonLogic(acc)\n      && Array.isArray(acc[\"+\"]) && acc[\"+\"][0] == 1\n      && isJsonLogic(acc[\"+\"][1]) && acc[\"+\"][1][\"var\"] == \"accumulator\"\n    ) {\n      k = Object.keys(filter)[0];\n      v = Object.values(filter)[0];\n      if (k == \"filter\") {\n        let [group, filter] = v;\n        if (isJsonLogic(group)) {\n          k = Object.keys(group)[0];\n          v = Object.values(group)[0];\n          const parsedGroup = _parse(k, v);\n          if (parsedGroup) {\n            field = parsedGroup.field;\n            fieldSrc = parsedGroup.fieldSrc;\n            having = filter;\n            isGroup = true;\n          }\n        }\n      } else {\n        const parsedGroup = _parse(k, v);\n        if (parsedGroup) {\n          field = parsedGroup.field;\n          fieldSrc = parsedGroup.fieldSrc;\n          isGroup = true;\n        }\n      }\n    }\n  }\n  const afterErrorsCnt = meta.errors.length;\n\n  if (!field && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Unknown LHS ${JSON.stringify(jlField)}`);\n  }\n  if (!field) return;\n\n  return {\n    field, fieldSrc, having, isGroup, args\n  };\n};\n\nconst convertFieldLhs = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (!Array.isArray(vals))\n    vals = [ vals ];\n  const parsed = convertFieldRhs(op, vals, conv, config, not, meta, parentField);\n  if (parsed) {\n    return {\n      fieldSrc: \"field\",\n      field: parsed.value,\n    };\n  }\n  return undefined;\n};\n\nconst convertFuncLhs = (op, vals, conv, config, not, fieldConfig = null, meta, parentField = null) => {\n  const parsed = convertFuncRhs(op, vals, conv, config, not, fieldConfig, meta, parentField);\n  if (parsed) {\n    return {\n      fieldSrc: \"func\",\n      field: parsed.value,\n    };\n  }\n  return undefined;\n};\n\nconst convertFuncRhs = (op, vals, conv, config, not, fieldConfig = null, meta, parentField = null) => {\n  if (!op) return undefined;\n  let func, argsArr, funcKey;\n  const jsonLogicIsMethod = (op == \"method\");\n  if (jsonLogicIsMethod) {\n    let obj, opts;\n    [obj, func, ...opts] = vals;\n    argsArr = [obj, ...opts];\n  } else {\n    func = op;\n    argsArr = vals;\n  }\n\n  const fk = (jsonLogicIsMethod ? \"#\" : \"\") + func;\n  const returnType = fieldConfig?.type || fieldConfig?.returnType;\n  const funcKeys = (conv.funcs[fk] || []).filter(k => \n    (fieldConfig ? getFuncConfig(config, k).returnType == returnType : true)\n  );\n  if (funcKeys.length) {\n    funcKey = funcKeys[0];\n  } else {\n    const v = {[op]: vals};\n\n    for (const [f, fc] of iterateFuncs(config)) {\n      if (fc.jsonLogicImport && (returnType ? fc.returnType == returnType : true)) {\n        let parsed;\n        try {\n          parsed = fc.jsonLogicImport(v);\n        } catch(_e) {\n          // given expression `v` can't be parsed into function\n        }\n        if (parsed) {\n          funcKey = f;\n          argsArr = parsed;\n        }\n      }\n    }\n  }\n  if (!funcKey)\n    return undefined;\n\n  if (funcKey) {\n    const funcConfig = getFuncConfig(config, funcKey);\n    const argKeys = Object.keys(funcConfig.args || {});\n    let argsObj = argsArr.reduce((acc, val, ind) => {\n      const argKey = argKeys[ind];\n      const argConfig = funcConfig.args[argKey];\n      let argVal;\n      if (argConfig) {\n        argVal = convertFromLogic(val, conv, config, \"val\", meta, false, argConfig, null, parentField);\n      }\n      return argVal !== undefined ? {...acc, [argKey]: argVal} : acc;\n    }, {});\n\n    for (let argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      let argVal = argsObj[argKey];\n      if (argVal === undefined) {\n        argVal = argConfig?.defaultValue;\n        if (argVal !== undefined) {\n          argVal = {\n            value: argVal,\n            valueSrc: argVal?.func ? \"func\" : \"value\",\n            valueType: argConfig.type,\n          };\n        }\n        if (argVal === undefined) {\n          if (argConfig?.isOptional) {\n            //ignore\n          } else {\n            meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n            return undefined;\n          }\n        } else {\n          argsObj[argKey] = argVal;\n        }\n      }\n    }\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: argsObj\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  return undefined;\n};\n\n\nconst convertConj = (op, vals, conv, config, not, meta, parentField = null, isRuleGroup = false) => {\n  const conjKey = conv.conjunctions[op];\n  const {fieldSeparator} = config.settings;\n  // const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  // const isParentGroup = parentFieldConfig?.type == \"!group\";\n  if (conjKey) {\n    let type = \"group\";\n    const children = vals\n      .map(v => convertFromLogic(v, conv, config, \"rule\", meta, false, null, null, parentField))\n      .filter(r => r !== undefined)\n      .reduce((acc, r) => ({...acc, [r.id] : r}), {});\n    const complexFields = Object.values(children)\n      .map(v => v?.properties?.fieldSrc == \"field\" && v?.properties?.field)\n      .filter(f => f?.includes?.(fieldSeparator));\n    const complexFieldsGroupAncestors = Object.fromEntries(\n      arrayUniq(complexFields).map(f => {\n        const parts = f.split(fieldSeparator);\n        const ancs = Object.fromEntries(\n          parts.slice(0, -1)\n            .map((f, i, parts) => [...parts.slice(0, i), f])\n            .map(fp => [fp.join(fieldSeparator), getFieldConfig(config, fp)])\n            .filter(([_f, fc]) => fc?.type == \"!group\")\n        );\n        return [f, Object.keys(ancs)];\n      })\n    );\n    // const childrenInRuleGroup = Object.values(children)\n    //   .map(v => v?.properties?.fieldSrc == \"field\" && v?.properties?.field)\n    //   .map(f => complexFieldsGroupAncestors[f])\n    //   .filter(ancs => ancs && ancs.length);\n    // const usedRuleGroups = arrayUniq(Object.values(complexFieldsGroupAncestors).flat());\n    // const usedTopRuleGroups = topLevelFieldsFilter(usedRuleGroups);\n    \n    let properties = {\n      conjunction: conjKey,\n      not: not\n    };\n    const id = uuid();\n\n    let children1 = {};\n    let groupToId = {};\n    Object.entries(children).map(([k, v]) => {\n      if (v?.type == \"group\" || v?.type == \"rule_group\") {\n        // put as-is\n        children1[k] = v;\n      } else {\n        const field = v?.properties?.field;\n        const groupAncestors = complexFieldsGroupAncestors[field] || [];\n        const groupField = groupAncestors[groupAncestors.length - 1];\n        if (!groupField) {\n          // not in rule_group (can be simple field or in struct) - put as-is\n          if (v) {\n            children1[k] = v;\n          }\n        } else {\n          // wrap field in rule_group (with creating hierarchy if need)\n          let ch = children1;\n          let parentFieldParts = getFieldParts(parentField, config);\n          const groupPath = getFieldParts(groupField, config);\n          const isInParent = shallowEqual(parentFieldParts, groupPath.slice(0, parentFieldParts.length));\n          if (!isInParent)\n            parentFieldParts = []; // should not be\n          const traverseGroupFields = groupField\n            .split(fieldSeparator)\n            .slice(parentFieldParts.length)\n            .map((f, i, parts) => [...parentFieldParts, ...parts.slice(0, i), f].join(fieldSeparator))\n            .map((f) => ({f, fc: getFieldConfig(config, f) || {}}))\n            .filter(({fc}) => (fc.type != \"!struct\"));\n          traverseGroupFields.map(({f: gf, fc: gfc}, i) => {\n            let groupId = groupToId[gf];\n            if (!groupId) {\n              groupId = uuid();\n              groupToId[gf] = groupId;\n              ch[groupId] = {\n                type: \"rule_group\",\n                id: groupId,\n                children1: {},\n                properties: {\n                  conjunction: conjKey,\n                  not: false,\n                  field: gf,\n                  fieldSrc: \"field\",\n                  mode: gfc.mode,\n                }\n              };\n            }\n            ch = ch[groupId].children1;\n          });\n          ch[k] = v;\n        }\n      }\n    });\n\n    // tip: for isRuleGroup=true correct type and properties will be set out of this func\n\n    return {\n      type: type,\n      id: id,\n      children1: children1,\n      properties: properties\n    };\n  }\n\n  return undefined;\n};\n\n\n// const topLevelFieldsFilter = (fields) => {\n//   let arr = [...fields].sort((a, b) => (a.length - b.length));\n//   for (let i = 0 ; i < arr.length ; i++) {\n//     for (let j = i + 1 ; j < arr.length ; j++) {\n//       if (arr[j].indexOf(arr[i]) == 0) {\n//         // arr[j] is inside arr[i] (eg. \"a.b\" inside \"a\")\n//         arr.splice(j, 1);\n//         j--;\n//       }\n//     }\n//   }\n//   return arr;\n// };\n\nconst wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj) => {\n  if (!rule) return undefined;\n  return {\n    type: \"rule_group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n      not: false,\n      field: parentField,\n    }\n  };\n};\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not\n    }\n  };\n};\n\nconst parseRule = (op, arity, vals, parentField, conv, config, meta) => {\n  const submeta = createMeta();\n  let res = _parseRule(op, arity, vals, parentField, conv, config, false, submeta);\n  if (!res) {\n    // try reverse\n    res = _parseRule(op, arity, vals, parentField, conv, config, true, createMeta());\n  }\n  if (!res) {\n    meta.errors.push(submeta.errors.join(\"; \") || `Unknown op ${op}/${arity}`);\n    return undefined;\n  }\n  \n  return res;\n};\n\nconst _parseRule = (op, arity, vals, parentField, conv, config, isRevArgs, meta) => {\n  // config.settings.groupOperators are used for group count (cardinality = 0 is exception)\n  // but don't confuse with \"all-in\" or \"some-in\" for multiselect\n  const isAllOrSomeInForMultiselect = (op == \"all\" || op == \"some\") && isJsonLogic(vals[1]) && Object.keys(vals[1])[0] == \"in\";\n  const isGroup0 = !isAllOrSomeInForMultiselect && config.settings.groupOperators.includes(op);\n  const eqOps = [\"==\", \"!=\"];\n  let cardinality = isGroup0 ? 0 : arity - 1;\n  if (isGroup0)\n    cardinality = 0;\n  else if (eqOps.includes(op) && cardinality == 1 && vals[1] === null) {\n    arity = 1;\n    cardinality = 0;\n    vals = [vals[0]];\n  }\n\n  const opk = op + \"/\" + cardinality;\n  let opKeys = conv.operators[(isRevArgs ? \"#\" : \"\") + opk];\n  if (!opKeys)\n    return;\n  \n  let jlField, jlArgs = [];\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  if (rangeOps.includes(op) && arity == 3) {\n    jlField = vals[1];\n    jlArgs = [ vals[0], vals[2] ];\n  } else if (isRevArgs) {\n    jlField = vals[1];\n    jlArgs = [ vals[0] ];\n  } else {\n    [jlField, ...jlArgs] = vals;\n  }\n\n  if (!isJsonLogic(jlField)) {\n    meta.errors.push(`Incorrect operands for ${op}: ${JSON.stringify(vals)}`);\n    return;\n  }\n\n  const lhs = convertLhs(isGroup0, jlField, jlArgs, conv, config, null, null, meta, parentField);\n  if (!lhs) return;\n  const {\n    field, fieldSrc, having, isGroup, args\n  } = lhs;\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig) {\n    meta.errors.push(`No config for LHS ${field}`);\n    return;\n  }\n\n  let opKey = opKeys[0];\n  if (opKeys.length > 1 && fieldConfig && fieldConfig.operators) {\n    // eg. for \"equal\" and \"select_equals\"\n    opKeys = opKeys\n      .filter(k => fieldConfig.operators.includes(k));\n    if (opKeys.length == 0) {\n      meta.errors.push(`No corresponding ops for LHS ${field}`);\n      return;\n    }\n    opKey = opKeys[0];\n  }\n  \n  return {\n    field, fieldSrc, fieldConfig, opKey, args, having\n  };\n};\n\nconst convertOp = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (!op) return undefined;\n\n  const arity = vals.length;\n  if ((op == \"all\" || op == \"some\") && isJsonLogic(vals[1])) {\n    // special case for \"all-in\" and \"some-in\"\n    const op2 = Object.keys(vals[1])[0];\n    if (op2 == \"in\") {\n      vals = [\n        vals[0],\n        vals[1][op2][1]\n      ];\n      op = op + \"-\" + op2; // \"all-in\" and \"some-in\"\n    }\n  }\n\n  const parseRes = parseRule(op, arity, vals, parentField, conv, config, meta);\n  if (!parseRes) return undefined;\n  let {field, fieldSrc, fieldConfig, opKey, args, having} = parseRes;\n  let opConfig = config.operators[opKey];\n\n  // Group component in array mode can show NOT checkbox, so do nothing in this case\n  // Otherwise try to revert\n  const showNot = fieldConfig.showNot !== undefined ? fieldConfig.showNot : config.settings.showNot; \n  let canRev = true;\n  // if (fieldConfig.type == \"!group\" && fieldConfig.mode == \"array\" && showNot)\n  //   canRev = false;\n\n  let conj;\n  let havingVals;\n  let havingNot = false;\n  if (fieldConfig.type == \"!group\" && having) {\n    conj = Object.keys(having)[0];\n    havingVals = having[conj];\n    if (!Array.isArray(havingVals))\n      havingVals = [ havingVals ];\n\n    // Preprocess \"!\": Try to reverse op in single rule in having\n    // Eg. use `not_equal` instead of `not` `equal`\n    const isEmptyOp = conj == \"!\" && (havingVals.length == 1 && havingVals[0] && isJsonLogic(havingVals[0]) && conv.varKeys.includes(Object.keys(havingVals[0])[0]));\n    if (conj == \"!\" && !isEmptyOp) {\n      havingNot = true;\n      having = having[\"!\"];\n      conj = Object.keys(having)[0];\n      havingVals = having[conj];\n      if (!Array.isArray(havingVals))\n        havingVals = [ havingVals ];\n    }\n  }\n\n  // Use reversed op\n  if (not && canRev && opConfig.reversedOp) {\n    not = false;\n    opKey = opConfig.reversedOp;\n    opConfig = config.operators[opKey];\n  }\n\n  const widget = getWidgetForFieldOp(config, field, opKey, null);\n\n  const convertedArgs = args\n    .map(v => convertFromLogic(v, conv, config, \"val\", meta, false, fieldConfig, widget, parentField));\n  if (convertedArgs.filter(v => v === undefined).length) {\n    //meta.errors.push(`Undefined arg for field ${field} and op ${opKey}`);\n    return undefined;\n  }\n\n  let res;\n\n  let fieldType = fieldConfig.type;\n  if (fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n\n  if (fieldConfig.type == \"!group\" && having) {\n    if (conv.conjunctions[conj] !== undefined) {\n      // group\n      res = convertConj(conj, havingVals, conv, config, havingNot, meta, field, true);\n      havingNot = false;\n    } else {\n      // need to be wrapped in `rule_group`\n      const rule = convertOp(conj, havingVals, conv, config, havingNot, meta, field);\n      havingNot = false;\n      res = wrapInDefaultConjRuleGroup(rule, field, fieldConfig, config, conv.conjunctions[\"and\"]);\n    }\n    if (!res)\n      return undefined;\n    \n    res.type = \"rule_group\";\n    Object.assign(res.properties, {\n      field: field,\n      mode: fieldConfig.mode,\n      operator: opKey,\n    });\n    if (fieldConfig.mode == \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n    if (not) {\n      res = wrapInDefaultConj(res, config, not);\n    }\n  } else if (fieldConfig.type == \"!group\" && !having) {\n    res = {\n      type: \"rule_group\",\n      id: uuid(),\n      children1: {},\n      properties: {\n        conjunction: defaultGroupConjunction(config, fieldConfig),\n        not: not,\n        mode: fieldConfig.mode,\n        field: field,\n        operator: opKey,\n      }\n    };\n    if (fieldConfig.mode == \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n  } else {\n    const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n    const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n    res = {\n      type: \"rule\",\n      id: uuid(),\n      properties: {\n        field: field,\n        fieldSrc: fieldSrc,\n        operator: opKey,\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n        ...(asyncListValues ? {asyncListValues} : {}),\n      }\n    };\n    if (not) {\n      //meta.errors.push(`No rev op for ${opKey}`);\n      res = wrapInDefaultConj(res, config, not);\n    }\n  }\n\n  return res;\n};\n\n","import SqlStringOrig from \"sqlstring\";\n\nexport const SqlString = SqlStringOrig;\n\nSqlString.trim = (val) => {\n  if (val.charAt(0) == \"'\")\n    return val.substring(1, val.length-1);\n  else\n    return val;\n};\n\nSqlString.escapeLike = (val, any_start = true, any_end = true) => {\n  // normal escape\n  let res = SqlString.escape(val);\n  // unwrap ''\n  res = SqlString.trim(res);\n  // escape % and _\n  res = res.replace(/[%_]/g, \"\\\\$&\");\n  // wrap with % for LIKE\n  res = (any_start ? \"%\" : \"\") + res + (any_end ? \"%\" : \"\");\n  // wrap ''\n  res = \"'\" + res + \"'\";\n  return res;\n};\n\nexport const sqlEmptyValue = (fieldDef) => {\n  let v = \"''\";\n  const type = fieldDef?.type;\n  if (type == \"date\") {\n    //todo: support other SQL dialects?  0001-01-01 for oracle, 1970-01-01 for timestamp\n    v = \"'0000-00-00'\";\n  } else if (type == \"datetime\") {\n    v = \"'0000-00-00 00:00'\";\n  } else if (type == \"time\") {\n    v = \"'00:00'\";\n  } else if (type == \"number\") {\n    v = \"0\";\n  }\n  return v;\n};\n\nexport const mongoEmptyValue = (fieldDef) => {\n  let v = \"\";\n  const type = fieldDef?.type;\n  if (type == \"number\") {\n    v = 0;\n  }\n  return v;\n};\n\n\nconst spelEscapeString = (val) => {\n  // Strings are delimited by single quotes. To put a single quote itself in a string, use two single quote characters. \n  return \"'\" + val.replace(/'/g, \"''\") + \"'\";\n};\n\nconst spelInlineList = (vals, toArray = false) => {\n  // find java type of values\n  let javaType;\n  let jt;\n  const numberJavaTypes = [\"int\", \"float\"];\n  vals.map(v => {\n    if (v !== undefined && v !== null) {\n      if (typeof v === \"string\") {\n        jt = \"String\";\n      } else if (typeof v === \"number\") {\n        jt = Number.isInteger(v) ? \"int\" : \"float\";\n      } else throw new Error(`spelEscape: Can't use value ${v} in array`);\n\n      if (!javaType) {\n        javaType = jt;\n      } else if (javaType != jt) {\n        if (numberJavaTypes.includes(javaType) && numberJavaTypes.includes(jt)) {\n          // found int and float in collecton - use float\n          javaType = \"float\";\n        } else throw new Error(`spelEscape: Can't use different types in array: found ${javaType} and ${jt}`);\n      }\n    }\n  });\n  if (!javaType) {\n    javaType = \"String\"; //default if empty array\n  }\n\n  // for floats we should add 'f' to all items\n  let escapedVals;\n  if (javaType == \"float\") {\n    escapedVals = vals.map(v => spelEscape(v, true));\n  } else {\n    escapedVals = vals.map(v => spelEscape(v));\n  }\n\n  // build inline list or array\n  let res;\n  if (toArray) {\n    res = `new ${javaType}[]{${escapedVals.join(\", \")}}`;\n  } else {\n    res = `{${escapedVals.join(\", \")}}`;\n  }\n  \n  return res;\n};\n\nexport const spelFixList = (val) => {\n  // `{1,2}.contains(1)` NOT works\n  // `{1,2}.?[true].contains(1)` works\n  return `${val}.?[true]`;\n};\n\nexport const spelEscape = (val, numberToFloat = false, arrayToArray = false) => {\n  // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-ref-literal\n  if (val === undefined || val === null) {\n    return \"null\";\n  }\n  switch (typeof val) {\n  case \"boolean\":\n    return (val) ? \"true\" : \"false\";\n  case \"number\":\n    if (!Number.isFinite(val) || isNaN(val))\n      return undefined;\n    return val + (!Number.isInteger(val) || numberToFloat ? \"f\" : \"\");\n  case \"object\":\n    if (Array.isArray(val)) {\n      return spelInlineList(val, arrayToArray);\n    } else {\n      // see `spelFormatValue` for Date, LocalTime\n      throw new Error(\"spelEscape: Object is not supported\");\n    }\n  default: return spelEscapeString(val);\n  }\n};\n\nexport const spelFormatConcat = (parts) => {\n  if (parts && Array.isArray(parts) && parts.length) {\n    return parts\n      .map(part => {\n        if (part.type == \"const\") {\n          return spelEscape(part.value);\n        } else if (part.type == \"property\") {\n          return \"\"+part.value;\n        } else if (part.type == \"variable\") {\n          return \"#\"+part.value;\n        } return undefined;\n      })\n      .filter(r => r != undefined)\n      .join(\" + \");\n  } else {\n    return \"null\";\n  }\n};\n\n// `val` is {value, valueType, valueSrc}\n// If `valueType` == \"case_value\", `value` is array of such items (to be considered as concatenation)\nexport const spelImportConcat = (val) => {\n  if (val == undefined)\n    return [undefined, []];\n  let errors = [];\n  const parts = val.valueType == \"case_value\" ? val.value : [val];\n  const res = parts.map(child => {\n    if (child.valueSrc == \"value\") {\n      if (child.value === null) {\n        return undefined;\n      } else {\n        return {\n          type: \"const\", \n          value: child.value\n        };\n      }\n    } else if (child.valueSrc == \"field\") {\n      return {\n        type: (child.isVariable ? \"variable\" : \"property\"), \n        value: child.value\n      };\n    } else {\n      errors.push(`Unsupported valueSrc ${child.valueSrc} in concatenation`);\n    }\n  }).filter(v => v != undefined);\n  return [res, errors];\n};\n\nexport const stringifyForDisplay = (v) => (v == null ? \"NULL\" : v.toString());\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, extendConfig, getFieldParts\n} from \"../utils/configUtils\";\nimport {\n  getWidgetForFieldOp, formatFieldName, getFieldPartsConfigs, completeValue\n} from \"../utils/ruleUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {defaultValue, logger, widgetDefKeysToOmit, opDefKeysToOmit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport {spelEscape} from \"../utils/export\";\n\n// https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions\n\nexport const compareToSign = \"${0}.compareTo(${1})\";\nconst TypesWithCompareTo = {\n  datetime: true,\n  time: true,\n  date: true,\n};\n\nexport const spelFormat = (tree, config) => {\n  return _spelFormat(tree, config, false);\n};\n\nexport const _spelFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta, null);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SpEL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, parentField);\n  } else if (type == \"switch_group\") {\n    return formatSwitch(item, config, meta, parentField);\n  } else if (type == \"case_group\") {\n    return formatCase(item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\nconst formatCase = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  if (type != \"case_group\") {\n    meta.errors.push(`Unexpected child of type ${type} inside switch`);\n    return undefined;\n  }\n  const properties = item.get(\"properties\") || new Map();\n  \n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, null, parentField, \"!case_value\"\n  );\n\n  const cond = formatGroup(item, config, meta, parentField);\n  return [cond, formattedValue];\n};\n\nconst formatSwitch = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  if (!children) return undefined;\n  const cases = children\n    .map((currentChild) => formatCase(currentChild, config, meta, null))\n    .filter((currentChild) => typeof currentChild !== \"undefined\")\n    .valueSeq()\n    .toArray();\n  \n  if (!cases.length) return undefined;\n\n  if (cases.length == 1 && !cases[0][0]) {\n    // only 1 case without condition\n    return cases[0][1];\n  }\n\n  let filteredCases = [];\n  for (let i = 0 ; i < cases.length ; i++) {\n    if (i != (cases.length - 1) && !cases[i][0]) {\n      meta.errors.push(`No condition for case ${i}`);\n    } else {\n      filteredCases.push(cases[i]);\n      if (i == (cases.length - 1) && cases[i][0]) {\n        // no default - add null as default\n        filteredCases.push([undefined, null]);\n      }\n    }\n  }\n\n  let left = \"\", right = \"\";\n  for (let i = 0 ; i < filteredCases.length ; i++) {\n    let [cond, value] = filteredCases[i];\n    if (value == undefined)\n      value = \"null\";\n    if (cond == undefined)\n      cond = \"true\";\n    if (i != (filteredCases.length - 1)) {\n      left += `(${cond} ? ${value} : `;\n      right += \")\";\n    } else {\n      left += `${value}`;\n    }\n  }\n  return left + right;\n};\n\nconst formatGroup = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const not = properties.get(\"not\");\n\n  const isRuleGroup = type === \"rule_group\";\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const groupField = isRuleGroupArray ? field : parentField;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const isSpelArray = groupFieldDef.isSpelArray;\n  const {fieldSeparator} = config.settings;\n  \n  // check op for reverse\n  let groupOperator = properties.get(\"operator\");\n  if (!groupOperator && (!mode || mode == \"some\")) {\n    groupOperator = \"some\";\n  }\n  const realGroupOperator = checkOp(config, groupOperator, field);\n  const isGroupOpRev = realGroupOperator != groupOperator;\n  const realGroupOperatorDefinition = groupOperator && getOperatorConfig(config, realGroupOperator, field) || null;\n  const isGroup0 = isRuleGroup && (!realGroupOperator || realGroupOperatorDefinition.cardinality == 0);\n  \n  // build value for aggregation op\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realGroupOperator, parentField, null\n  );\n  \n  // build filter in aggregation\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n\n  if (isRuleGroupArray && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size)\n      return undefined;\n  }\n\n  const omitBrackets = isRuleGroup;\n  const filter = list.size ? conjunctionDefinition.spelFormatConj(list, conjunction, not, omitBrackets) : null;\n\n  // build result\n  let ret;\n  if (isRuleGroupArray) {\n    const formattedField = formatField(meta, config, field, parentField);\n    const sep = fieldSeparator || \".\";\n    const getSize = sep + (isSpelArray ? \"length\" : \"size()\");\n    const fullSize = `${formattedField}${getSize}`;\n    // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-collection-selection\n    const filteredSize = filter ? `${formattedField}.?[${filter}]${getSize}` : fullSize;\n    const groupValue = isGroup0 ? fullSize : formattedValue;\n    // format expression\n    ret = formatExpression(\n      meta, config, properties, filteredSize, groupValue, realGroupOperator, valueSrc, valueType, isGroupOpRev\n    );\n  } else {\n    ret = filter;\n  }\n  \n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, valueType) => {\n  const spelOp = operatorDefinition.spelOp;\n  if (!spelOp) return undefined;\n  const isSign = spelOp.includes(\"${0}\");\n  const isCompareTo = TypesWithCompareTo[valueType];\n  let sop = spelOp;\n  let fn;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  if (isCompareTo) {\n    // date1.compareTo(date2) >= 0\n    //   instead of\n    // date1 >= date2\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const compareRes = compareToSign.replace(/\\${(\\w+)}/g, (_, k) => (k == 0 ? field : (cardinality > 1 ? values[k-1] : values)));\n      return `${compareRes} ${sop} 0`;\n    };\n  } else if (isSign) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return spelOp.replace(/\\${(\\w+)}/g, (_, k) => (k == 0 ? field : (cardinality > 1 ? values[k-1] : values)));\n    };\n  } else if (cardinality == 0) {\n    // should not be\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sop} ${values}`;\n    };\n  }\n  return fn;\n};\n\nconst formatExpression = (meta, config, properties, formattedField, formattedValue, operator, valueSrc, valueType, isRev = false) => {\n  const field = properties.get(\"field\");\n  const opDef = getOperatorConfig(config, operator, field) || {};\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorOptions = properties.get(\"operatorOptions\");\n\n  //find fn to format expr\n  const fn = opDef.spelFormatOp || buildFnToFormatOp(operator, opDef, valueType);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n\n  //rev\n  if (isRev) {\n    ret = config.settings.spelFormatReverse(ret);\n  }\n\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrc}`);\n  }\n\n  return ret;\n};\n\nconst checkOp = (config, operator, field) => {\n  if (!operator) return undefined;\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n\n  let isRev = false;\n  const canFormatOp = opDef.spelOp || opDef.spelFormatOp;\n  const canFormatRevOp = revOpDef.spelOp || revOpDef.spelFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n  return operator;\n};\n\nconst formatRule = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  if (field == null || operator == null)\n    return undefined;\n\n  // check op for reverse\n  const realOp = checkOp(config, operator, field);\n  if (!realOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  const isRev = realOp != operator;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realOp, parentField, null\n  );\n  if (formattedValue === undefined)\n    return undefined;\n      \n  //format field\n  const formattedField = formatLhs(meta, config, field, fieldSrc, parentField);\n  if (formattedField === undefined)\n    return undefined;\n  \n  // format expression\n  let res = formatExpression(\n    meta, config, properties, formattedField, formattedValue, realOp, valueSrc, valueType, isRev\n  );\n  return res;\n};\n\nconst formatLhs = (meta, config, field, fieldSrc, parentField = null) => {\n  if (fieldSrc === \"func\")\n    return formatFunc(meta, config, field, parentField);\n  else\n    return formatField(meta, config, field, parentField);\n};\n\nconst formatItemValue = (config, properties, meta, operator, parentField, expectedValueType = null) => {\n  let field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  if (expectedValueType == \"!case_value\" || iValueType && iValueType.get(0) == \"case_value\") {\n    field = \"!case_value\";\n  }\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  \n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  \n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n      const fv = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDefinition, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (!( fvalue.size < cardinality || hasUndefinedValues )) {\n      formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n    }\n  }\n  \n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else {\n    if (typeof fieldWidgetDef.spelFormatValue === \"function\") {\n      const fn = fieldWidgetDef.spelFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = spelEscape(currentValue);\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field, parentField = null) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsConfigs = getFieldPartsConfigs(field, config, parentField);\n  const formatFieldFn = config.settings.formatSpelField;\n  const fieldName = formatFieldName(field, config, meta, parentField);\n  const fieldPartsMeta = fieldPartsConfigs.map(([key, cnf, parentCnf]) => {\n    let parent;\n    if (parentCnf) {\n      if (parentCnf.type == \"!struct\" || parentCnf.type == \"!group\" && parentCnf.mode == \"struct\")\n        parent = cnf.isSpelMap ? \"map\" : \"class\";\n      else if (parentCnf.type == \"!group\")\n        parent = cnf.isSpelItemMap ? \"[map]\" : \"[class]\";\n      else\n        parent = \"class\";\n    }\n    const isSpelVariable = cnf?.isSpelVariable;\n    return {\n      key,\n      parent,\n      isSpelVariable,\n      fieldSeparator\n    };\n  });\n  const formattedField = formatFieldFn.call(config.ctx, fieldName, parentField, fieldParts, fieldPartsMeta, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const doEscape = argConfig.spelEscapeForFormat ?? true;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = omit(getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc), [\"factory\"]);\n\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, null, null, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = omit( getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc), [\"factory\"] );\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, null, null, parentField, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = doEscape ? finalFormattedVal : (argValue ?? defaultValue);\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // uncomplete\n  }\n  \n  let ret;\n  if (typeof funcConfig.spelFormatFunc === \"function\") {\n    const fn = funcConfig.spelFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.spelFunc) {\n    // fill arg values\n    ret = funcConfig.spelFunc\n      .replace(/\\${(\\w+)}/g, (found, argKey) => {\n        return formattedArgs[argKey] ?? found;\n      });\n    // remove optional args (from end only)\n    const optionalArgs = Object.keys(funcConfig.args || {})\n      .reverse()\n      .filter(argKey => !!funcConfig.args[argKey].isOptional);\n    for (const argKey of optionalArgs) {\n      if (formattedArgs[argKey] != undefined)\n        break;\n      ret = ret.replace(new RegExp(\"(, )?\" + \"\\\\${\" + argKey + \"}\", \"g\"), \"\");\n    }\n    // missing required arg vals\n    ret = ret.replace(/\\${(\\w+)}/g, \"null\");\n  } else {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n  }\n  return ret;\n};\n","import { SpelExpressionEvaluator } from \"spel2js\";\nimport uuid from \"../utils/uuid\";\nimport {getFieldConfig, getFuncConfig, extendConfig, normalizeField, iterateFuncs} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {loadTree} from \"./tree\";\nimport {defaultConjunction, defaultGroupConjunction} from \"../utils/defaultUtils\";\nimport {logger, isJsonCompatible} from \"../utils/stuff\";\nimport moment from \"moment\";\nimport {compareToSign} from \"../export/spel\";\n\n// https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions\n\n// spel type => raqb type\nconst SpelPrimitiveTypes = {\n  number: \"number\",\n  string: \"text\",\n  boolean: \"boolean\",\n  null: \"null\" // should not be\n};\n// spel class => raqb type\nconst SpelPrimitiveClasses = {\n  String: \"text\",\n};\nconst ListValueType = \"multiselect\";\nconst isFuncableProperty = (p) => [\"length\"].includes(p);\n\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const loadFromSpel = (logicTree, config) => {\n  return _loadFromSpel(logicTree, config, true);\n};\n\nexport const _loadFromSpel = (spelStr, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  \n  let compiledExpression;\n  let convertedObj;\n  let jsTree = undefined;\n  try {\n    const compileRes = SpelExpressionEvaluator.compile(spelStr);\n    compiledExpression = compileRes._compiledExpression;\n  } catch (e) {\n    meta.errors.push(e);\n  }\n  \n  if (compiledExpression) {\n    //logger.debug(\"compiledExpression:\", compiledExpression);\n    convertedObj = postprocessCompiled(compiledExpression, meta);\n    logger.debug(\"convertedObj:\", convertedObj, meta);\n\n    jsTree = convertToTree(convertedObj, conv, extendedConfig, meta);\n    if (jsTree && jsTree.type != \"group\" && jsTree.type != \"switch_group\") {\n      jsTree = wrapInDefaultConj(jsTree, extendedConfig, convertedObj[\"not\"]);\n    }\n    logger.debug(\"jsTree:\", jsTree);\n  }\n\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from SpEL:\", meta.errors);\n    return immTree;\n  }\n};\n\nconst postprocessCompiled = (expr, meta, parentExpr = null) => {\n  const type = expr.getType();\n  let children = expr.getChildren().map(child => postprocessCompiled(child, meta, expr));\n\n  // flatize OR/AND\n  if (type == \"op-or\" || type == \"op-and\") {\n    children = children.reduce((acc, child) => {\n      const canFlatize = child.type == type && !child.not;\n      const flat = canFlatize ? child.children : [child];\n      return [...acc, ...flat];\n    }, []);\n  }\n\n  // unwrap NOT\n  if (type == \"op-not\") {\n    if (children.length != 1) {\n      meta.errors.push(`Operator NOT should have 1 child, but got ${children.length}}`);\n    }\n    return {\n      ...children[0],\n      not: !(children[0].not || false)\n    };\n  }\n\n  if (type == \"compound\") {\n    // remove `.?[true]`\n    children = children.filter(child => {\n      const isListFix = child.type == \"selection\" && child.children.length == 1 && child.children[0].type == \"boolean\" && child.children[0].val == true;\n      return !isListFix;\n    });\n    // aggregation\n    // eg. `results.?[product == 'abc'].length`\n    const selection = children.find(child => \n      child.type == \"selection\"\n    );\n    if (selection && selection.children.length != 1) {\n      meta.errors.push(`Selection should have 1 child, but got ${selection.children.length}`);\n    }\n    const filter = selection ? selection.children[0] : null;\n    let lastChild = children[children.length - 1];\n    const isSize = lastChild.type == \"method\" && lastChild.val.methodName == \"size\" \n      || lastChild.type == \"!func\" && lastChild.methodName == \"size\";\n    const isLength = lastChild.type == \"property\" && lastChild.val == \"length\";\n    const sourceParts = children.filter(child => \n      child !== selection && child !== lastChild\n    );\n    const source = {\n      type: \"compound\",\n      children: sourceParts\n    };\n    const isAggr = (isSize || isLength) && convertPath(sourceParts) != null;\n    if (isAggr) {\n      return {\n        type: \"!aggr\",\n        filter,\n        source\n      };\n    }\n    // remove `#this`, `#root`\n    children = children.filter(child => {\n      const isThis = child.type == \"variable\" && child.val == \"this\";\n      const isRoot = child.type == \"variable\" && child.val == \"root\";\n      return !(isThis || isRoot);\n    });\n    // indexer\n    children = children.map(child => {\n      if (child.type == \"indexer\" && child.children.length == 1) {\n        return {\n          type: \"indexer\", \n          val: child.children[0].val,\n          itype: child.children[0].type\n        };\n      } else {\n        return child;\n      }\n    });\n    // method\n    // if (lastChild.type == \"method\") {\n    //   // seems like obsolete code!\n    //   debugger\n    //   const obj = children.filter(child => \n    //     child !== lastChild\n    //   );\n    //   return {\n    //     type: \"!func\",\n    //     obj,\n    //     methodName: lastChild.val.methodName,\n    //     args: lastChild.val.args\n    //   };\n    // }\n    // !func\n    if (lastChild.type == \"!func\") {\n      const ret = {};\n      let curr = ret;\n      do {\n        Object.assign(curr, lastChild);\n        children = children.filter(child => child !== lastChild);\n        lastChild = children[children.length - 1];\n        if (lastChild?.type == \"!func\") {\n          curr.obj = {};\n          curr = curr.obj;\n        } else {\n          if (children.length > 1) {\n            curr.obj = {\n              type: \"compound\",\n              children\n            };\n          } else {\n            curr.obj = lastChild;\n          }\n        }\n      } while(lastChild?.type == \"!func\");\n      return ret;\n    }\n  }\n\n  // getRaw || getValue\n  let val;\n  try {\n    if (expr.getRaw) { // use my fork\n      val = expr.getRaw();\n    } else if (expr.getValue.length == 0) { // getValue not requires context arg -> can use\n      val = expr.getValue();\n    }\n  } catch(e) {\n    logger.error(\"[spel2js] Error in getValue()\", e);\n  }\n\n  // ternary\n  if (type == \"ternary\") {\n    val = flatizeTernary(children);\n  }\n\n  // convert method/function args\n  if (typeof val === \"object\" && val !== null) {\n    if (val.methodName || val.functionName) {\n      val.args = val.args.map(child => postprocessCompiled(child, meta, expr));\n    }\n  }\n  // convert list\n  if (type == \"list\") {\n    val = val.map(item => postprocessCompiled(item, meta, expr));\n\n    // fix whole expression wrapped in `{}`\n    if (!parentExpr && val.length == 1) {\n      return val[0];\n    }\n  }\n  // convert constructor\n  if (type == \"constructorref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in constructorref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!new\",\n      cls,\n      args\n    };\n  }\n  // convert type\n  if (type == \"typeref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in typeref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const _args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!type\",\n      cls\n    };\n  }\n  // convert function/method\n  if (type == \"function\" || type == \"method\") {\n    // `foo()` is method, `#foo()` is function\n    // let's use common property `methodName` and just add `isVar` for function\n    const {functionName, methodName, args} = val;\n    return {\n      type: \"!func\",\n      methodName: functionName || methodName,\n      isVar: type == \"function\",\n      args\n    };\n  }\n\n  return {\n    type,\n    children,\n    val,\n  };\n};\n\nconst flatizeTernary = (children) => {\n  let flat = [];\n  function _processTernaryChildren(tern) {\n    let [cond, if_val, else_val] = tern;\n    flat.push([cond, if_val]);\n    if (else_val?.type == \"ternary\") {\n      _processTernaryChildren(else_val.children);\n    } else {\n      flat.push([undefined, else_val]);\n    }\n  }\n  _processTernaryChildren(children);\n  return flat;\n};\n\nconst buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (opConfig.spelOps) {\n      // examples: \"==\", \"eq\", \".contains\", \"matches\" (can be used for starts_with, ends_with)\n      opConfig.spelOps.forEach(spelOp => {\n        const opk = spelOp; // + \"/\" + defaultValue(opConfig.cardinality, 1);\n        if (!operators[opk])\n          operators[opk] = [];\n        operators[opk].push(opKey);\n      });\n    } else if (opConfig.spelOp) {\n      const opk = opConfig.spelOp; // + \"/\" + defaultValue(opConfig.cardinality, 1);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else {\n      logger.log(`[spel] No spelOp for operator ${opKey}`);\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.spelConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (const [funcPath, funcConfig] of iterateFuncs(config)) {\n    let fks = [];\n    const {spelFunc} = funcConfig;\n    if (typeof spelFunc === \"string\") {\n      const optionalArgs = Object.keys(funcConfig.args || {})\n        .reverse()\n        .filter(argKey => !!funcConfig.args[argKey].isOptional || funcConfig.args[argKey].defaultValue != undefined);\n      const funcSignMain = spelFunc\n        .replace(/\\${(\\w+)}/g, (_, _k) => \"?\");\n      const funcSignsOptional = optionalArgs\n        .reduce((acc, argKey) => (\n          [\n            ...acc,\n            [\n              argKey,\n              ...(acc[acc.length-1] || []),\n            ]\n          ]\n        ), [])\n        .map(optionalArgKeys => (\n          spelFunc\n            .replace(/(?:, )?\\${(\\w+)}/g, (found, a) => (\n              optionalArgKeys.includes(a) ? \"\" : found\n            ))\n            .replace(/\\${(\\w+)}/g, (_, _k) => \"?\")\n        ));\n      fks = [\n        funcSignMain,\n        ...funcSignsOptional,\n      ];\n    }\n    for (const fk of fks) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcPath);\n    }\n  }\n\n  let valueFuncs = {};\n  for (let w in config.widgets) {\n    const widgetDef = config.widgets[w];\n    const {spelImportFuncs, type} = widgetDef;\n    if (spelImportFuncs) {\n      for (const fk of spelImportFuncs) {\n        if (typeof fk === \"string\") {\n          const fs = fk.replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n          const argsOrder = [...fk.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n          if (!valueFuncs[fs])\n            valueFuncs[fs] = [];\n          valueFuncs[fs].push({\n            w,\n            argsOrder\n          });\n        }\n      }\n    }\n  }\n\n  let opFuncs = {};\n  for (let op in config.operators) {\n    const opDef = config.operators[op];\n    const {spelOp} = opDef;\n    if (spelOp?.includes(\"${0}\")) {\n      const fs = spelOp.replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n      const argsOrder = [...spelOp.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n      if (!opFuncs[fs])\n        opFuncs[fs] = [];\n      opFuncs[fs].push({\n        op,\n        argsOrder\n      });\n    }\n  }\n  // Special .compareTo()\n  const compareToSS = compareToSign.replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n  opFuncs[compareToSS] = [{\n    op: \"!compare\",\n    argsOrder: [\"0\", \"1\"]\n  }];\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    valueFuncs,\n    opFuncs,\n  };\n};\n\nconst convertToTree = (spel, conv, config, meta, parentSpel = null) => {\n  if (!spel) return undefined;\n\n  let res, canParseAsArg = true;\n  if (spel.type.indexOf(\"op-\") === 0 || spel.type === \"matches\") {\n    res = convertOp(spel, conv, config, meta, parentSpel);\n  } else if (spel.type == \"!aggr\") {\n    const groupFieldValue = convertToTree(spel.source, conv, config, meta, {\n      ...spel, \n      _groupField: parentSpel?._groupField\n    });\n    let groupFilter = convertToTree(spel.filter, conv, config, meta, {\n      ...spel, \n      _groupField: groupFieldValue?.value\n    });\n    if (groupFilter?.type == \"rule\") {\n      groupFilter = wrapInDefaultConj(groupFilter, config, spel.filter.not);\n    }\n    res = {\n      groupFilter,\n      groupFieldValue\n    };\n    if (!parentSpel) {\n      // !aggr can't be in root, it should be compared with something\n      res = undefined;\n      meta.errors.push(\"Unexpected !aggr in root\");\n      canParseAsArg = false;\n    }\n  } else if (spel.type == \"ternary\") {\n    const children1 = {};\n    spel.val.forEach(v => {\n      const [cond, val] = v;\n      const caseI = buildCase(cond, val, conv, config, meta, spel);\n      if (caseI) {\n        children1[caseI.id] = caseI;\n      }\n    });\n    res = {\n      type: \"switch_group\",\n      id: uuid(),\n      children1,\n      properties: {}\n    };\n  }\n\n  if (!res && canParseAsArg) {\n    res = convertArg(spel, conv, config, meta, parentSpel);\n  }\n\n  if (res && !res.type && !parentSpel) {\n    // res is not a rule, it's value at root\n    // try to parse whole `\"1\"` as ternary\n    const sw = buildSimpleSwitch(spel, conv, config, meta);\n    if (sw) {\n      res = sw;\n    } else {\n      res = undefined;\n      meta.errors.push(`Can't convert rule of type ${spel.type}, it looks like var/literal`);\n    }\n  }\n  \n  return res;\n};\n\nconst convertOp = (spel, conv, config, meta, parentSpel = null) => {\n  let res;\n\n  let op = spel.type.startsWith(\"op-\") ? spel.type.slice(\"op-\".length) : spel.type;\n\n  // unary\n  const isUnary = (op == \"minus\" || op == \"plus\") && spel.children.length == 1;\n  if (isUnary) {\n    spel.isUnary = true;\n    return convertOp(spel.children[0], conv, config, meta, spel);\n  }\n\n  // between\n  let isBetweenNormal = (op == \"and\" && spel.children.length == 2 && spel.children[0].type == \"op-ge\" && spel.children[1].type == \"op-le\");\n  let isBetweenRev = (op == \"or\" && spel.children.length == 2 && spel.children[0].type == \"op-lt\" && spel.children[1].type == \"op-gt\");\n  let isBetween = isBetweenNormal || isBetweenRev;\n  if (isBetween) {\n    const [left, from] = spel.children[0].children;\n    const [right, to] = spel.children[1].children;\n    const isSameSource = compareArgs(left, right,  spel, conv, config, meta, parentSpel);\n    if (isSameSource) {\n      const _fromValue = from.val;\n      const _toValue = to.val;\n      const oneSpel = {\n        type: \"op-between\",\n        children: [\n          left,\n          from,\n          to\n        ]\n      };\n      return convertOp(oneSpel, conv, config, meta, parentSpel);\n    }\n  }\n\n  // find op\n  let opKeys = conv.operators[op];\n  if (op == \"eq\" && spel.children[1].type == \"null\") {\n    opKeys = [\"is_null\"];\n  } else if (op == \"ne\" && spel.children[1].type == \"null\") {\n    opKeys = [\"is_not_null\"];\n  } else if (op == \"le\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n    opKeys = [\"is_empty\"];\n  } else if (op == \"gt\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n    opKeys = [\"is_not_empty\"];\n  } else if (op == \"between\") {\n    opKeys = [\"between\"];\n  }\n\n  // convert children\n  const convertChildren = () => {\n    let newChildren = spel.children.map(child =>\n      convertToTree(child, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      })\n    );\n    if (newChildren.length >= 2 && newChildren?.[0]?.type == \"!compare\") {\n      newChildren = newChildren[0].children;\n    }\n    return newChildren;\n  };\n\n  if (op == \"and\" || op == \"or\") {\n    const children1 = {};\n    const vals = convertChildren();\n    vals.forEach(v => {\n      if (v) {\n        const id = uuid();\n        v.id = id;\n        if (v.type != undefined) {\n          children1[id] = v;\n        } else {\n          meta.errors.push(`Bad item in AND/OR: ${JSON.stringify(v)}`);\n        }\n      }\n    });\n    res = {\n      type: \"group\",\n      id: uuid(),\n      children1,\n      properties: {\n        conjunction: conv.conjunctions[op],\n        not: spel.not\n      }\n    };\n  } else if (opKeys) {\n    const vals = convertChildren();\n    const fieldObj = vals[0];\n    let convertedArgs = vals.slice(1);\n    const groupField = fieldObj?.groupFieldValue?.value;\n    const opArg = convertedArgs?.[0];\n    \n    let opKey = opKeys[0];\n    if (opKeys.length > 1) {\n      const valueType = vals[0]?.valueType || vals[1]?.valueType;\n      //todo: it's naive, use valueType\n      const field = fieldObj?.value;\n      const widgets = opKeys.map(op => ({op, widget: getWidgetForFieldOp(config, field, op)}));\n      logger.warn(`[spel] Spel operator ${op} can be mapped to ${opKeys}.`,\n        \"widgets:\", widgets, \"vals:\", vals, \"valueType=\", valueType);\n      \n      if (op == \"eq\" || op == \"ne\") {\n        const ws = widgets.find(({ op, widget }) => (widget && widget != \"field\"));\n        if (ws) {\n          opKey = ws.op;\n        }\n      }\n    }\n\n    // some/all/none\n    if (fieldObj?.groupFieldValue) {\n      if (opArg && opArg.groupFieldValue && opArg.groupFieldValue.valueSrc == \"field\" && opArg.groupFieldValue.value == groupField) {\n        // group.?[...].size() == group.size()\n        opKey = \"all\";\n        convertedArgs = [];\n      } else if (opKey == \"equal\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n        opKey = \"none\";\n        convertedArgs = [];\n      } else if (opKey == \"greater\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n        opKey = \"some\";\n        convertedArgs = [];\n      }\n    }\n\n    let canRev = true;\n    let needWrapReverse = false;\n    if (spel.not && canRev) {\n      const opConfig = config.operators[opKey];\n      if (opConfig.reversedOp) {\n        opKey = opConfig.reversedOp;\n        spel.not = false;\n      } else {\n        needWrapReverse = true;\n      }\n    }\n    \n    if (!fieldObj) {\n      // LHS can't be parsed\n    } else if (fieldObj.groupFieldValue) {\n      // 1. group\n      if (fieldObj.groupFieldValue.valueSrc != \"field\") {\n        meta.errors.push(`Expected group field ${JSON.stringify(fieldObj)}`);\n      }\n\n      res = buildRuleGroup(fieldObj, opKey, convertedArgs, config, meta);\n    } else {\n      // 2. not group\n      if (fieldObj.valueSrc != \"field\" && fieldObj.valueSrc != \"func\") {\n        meta.errors.push(`Expected field/func at LHS, but got ${JSON.stringify(fieldObj)}`);\n      }\n      const field = fieldObj.value;\n      res = buildRule(config, meta, field, opKey, convertedArgs);\n    }\n\n    if (needWrapReverse) {\n      if (res.type !== \"group\") {\n        res = wrapInDefaultConj(res, config, spel.not);\n      } else {\n        res.properties.not = !res.properties.not;\n      }\n    }\n  } else {\n    if (!parentSpel) {\n      // try to parse whole `\"str\" + prop + #var` as ternary\n      res = buildSimpleSwitch(spel, conv, config, meta);\n    }\n    // if (!res) {\n    //   meta.errors.push(`Can't convert op ${op}`);\n    // }\n  }\n  return res;\n};\n\nconst convertPath = (parts, meta = {}, expectingField = false) => {\n  let isError = false;\n  const res = parts.map(c => {\n    if (c.type == \"variable\" || c.type == \"property\" || c.type == \"indexer\" && c.itype == \"string\") {\n      return c.val;\n    } else {\n      isError = true;\n      expectingField && meta?.errors?.push?.(`Unexpected item in field path compound: ${JSON.stringify(c)}`);\n    }\n  });\n  return !isError ? res : undefined;\n};\n\nconst convertArg = (spel, conv, config, meta, parentSpel) => {\n  if (spel == undefined)\n    return undefined;\n  const {fieldSeparator} = config.settings;\n\n  if (spel.type == \"variable\" || spel.type == \"property\") {\n    // normal field\n    const field = normalizeField(config, spel.val, parentSpel?._groupField);\n    const fieldConfig = getFieldConfig(config, field);\n    const isVariable = spel.type == \"variable\";\n    return {\n      valueSrc: \"field\",\n      valueType: fieldConfig?.type,\n      isVariable,\n      value: field,\n    };\n  } else if (spel.type == \"compound\") {\n    // complex field\n    const parts = convertPath(spel.children, meta);\n    if (parts) {\n      const field = normalizeField(config, parts.join(fieldSeparator), parentSpel?._groupField);\n      const fieldConfig = getFieldConfig(config, field);\n      const isVariable = spel.children?.[0]?.type == \"variable\";\n      return {\n        valueSrc: \"field\",\n        valueType: fieldConfig?.type,\n        isVariable,\n        value: field,\n      };\n    } else {\n      // it's not complex field\n    }\n  } else if (SpelPrimitiveTypes[spel.type]) {\n    let value = spel.val;\n    const valueType = SpelPrimitiveTypes[spel.type];\n    if (parentSpel?.isUnary) {\n      value = -value;\n    }\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type == \"!new\" && SpelPrimitiveClasses[spel.cls.at(-1)]) {\n    const args = spel.args.map(v => convertArg(v, conv, config, meta, spel));\n    const value = args?.[0];\n    const valueType = SpelPrimitiveClasses[spel.cls.at(-1)];\n    return {\n      ...value,\n      valueType,\n    };\n  } else if (spel.type == \"list\") {\n    const values = spel.val.map(v => convertArg(v, conv, config, meta, spel));\n    const _itemType = values.length ? values[0]?.valueType : null;\n    const value = values.map(v => v?.value);\n    const valueType = ListValueType;\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type == \"op-plus\" && parentSpel?.type == \"ternary\") {\n    return buildCaseValueConcat(spel, conv, config, meta);\n  }\n\n  let maybe = convertFunc(spel, conv, config, meta, parentSpel);\n  if (maybe !== undefined) {\n    return maybe;\n  }\n\n  meta.errors.push(`Can't convert arg of type ${spel.type}`);\n  return undefined;\n};\n\nconst buildFuncSignatures = (spel) => {\n  // branches\n  const brns = [\n    {s: \"\", params: [], objs: []}\n  ];\n  _buildFuncSignatures(spel, brns);\n  return brns.map(({s, params}) => ({s, params})).reverse().filter(({s}) => s !== \"\" && s !== \"?\");\n};\n\n// a.toLower().toUpper()\n// ->\n// ?.toLower().toUpper()\n// ?.toUpper()\nconst _buildFuncSignatures = (spel, brns) => {\n  let params = [], s = \"\";\n  const { type, methodName, val, obj, args, isVar, cls, children } = spel;\n  const lastChild = children?.[children.length-1];\n  let currBrn = brns[brns.length-1];\n  if (type === \"!func\") {\n    // T(DateTimeFormat).forPattern(?).parseDateTime(?)  --  ok\n    // T(LocalDateTime).parse(?, T(DateTimeFormatter).ofPattern(?))  --  will not work\n    let o = obj;\n    while (o) {\n      const [s1, params1] = _buildFuncSignatures({...o, obj: null}, [{}]);\n      if (s1 !== \"?\") {\n        // start new branch\n        const newBrn = {\n          s: currBrn.s,\n          params: [...currBrn.params],\n          objs: [...currBrn.objs]\n        };\n        // finish old branch\n        currBrn.objs.unshift(\"?\");\n        currBrn.params.unshift(o);\n        // switch\n        brns.push(newBrn);\n        currBrn = brns[brns.length-1];\n      }\n      // step\n      currBrn.objs.unshift(s1);\n      currBrn.params.unshift(...params1);\n      o = o.type === \"!func\" ? o.obj : null;\n    }\n    for (const brn of brns) {\n      params = [\n        ...(brn?.params || []),\n        ...(args || []),\n      ];\n      s = \"\";\n      if (brn?.objs?.length)\n        s += brn.objs.join(\".\") + \".\";\n      s += (isVar ? \"#\" : \"\") + methodName;\n      s += \"(\" + (args || []).map(_ => \"?\").join(\", \") + \")\";\n      brn.s = s;\n      brn.params = params;\n    }\n  } else if (type === \"!new\") {\n    // new java.text.SimpleDateFormat('HH:mm:ss').parse('...')\n    params = args || [];\n    s = `new ${cls.join(\".\")}(${params.map(_ => \"?\").join(\", \")})`;\n  } else if (type === \"!type\") {\n    // T(java.time.LocalTime).parse('...')\n    s = `T(${cls.join(\".\")})`;\n  } else if (type === \"compound\" && lastChild.type === \"property\" && isFuncableProperty(lastChild.val)) {\n    // {1,2}.length  --  ok\n    // 'Hello World'.bytes.length  --  will not work\n    s = children.map((c) => {\n      if (c === lastChild)\n        return c.val;\n      const [s1, params1] = _buildFuncSignatures({...c, obj: null}, [{}]);\n      params.push(...params1);\n      return s1;\n    }).join(\".\");\n  } else {\n    params = [spel];\n    s = \"?\";\n  }\n\n  if (currBrn) {\n    currBrn.s = s;\n    currBrn.params = params;\n  }\n\n  return [s, params];\n};\n\nconst convertFunc = (spel, conv, config, meta, parentSpel) => {\n  // Build signatures\n  const convertFuncArg = v => convertArg(v, conv, config, meta, {\n    ...spel,\n    _groupField: parentSpel?._groupField\n  });\n  const fsigns = buildFuncSignatures(spel);\n  const firstSign = fsigns?.[0]?.s;\n  if (fsigns.length)\n    logger.debug(\"Signatures for \", spel, \":\", firstSign, fsigns);\n  \n  // 1. Try to parse as value\n  let maybeValue = convertFuncToValue(spel, conv, config, meta, parentSpel, fsigns, convertFuncArg);\n  if (maybeValue !== undefined)\n    return maybeValue;\n  \n  // 2. Try to parse as op\n  let maybeOp = convertFuncToOp(spel, conv, config, meta, parentSpel, fsigns, convertFuncArg);\n  if (maybeOp !== undefined)\n    return maybeOp;\n  \n  // 3. Try to parse as func\n  let funcKey, funcConfig, argsObj;\n  // try func signature matching\n  for (const {s, params} of fsigns) {\n    const funcKeys = conv.funcs[s];\n    if (funcKeys) {\n      // todo: here we can check arg types, if we have function overloading\n      funcKey = funcKeys[0];\n      funcConfig = getFuncConfig(config, funcKey);\n      const {spelFunc} = funcConfig;\n      const argsArr = params.map(convertFuncArg);\n      const argsOrder = [...spelFunc.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n      argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      break;\n    }\n  }\n  // try `spelImport`\n  if (!funcKey) {\n    for (const [f, fc] of iterateFuncs(config)) {\n      if (fc.spelImport) {\n        let parsed;\n        try {\n          parsed = fc.spelImport(spel);\n        } catch(_e) {\n          // can't be parsed\n        }\n        if (parsed) {\n          funcKey = f;\n          funcConfig = getFuncConfig(config, funcKey);\n          argsObj = {};\n          for (let argKey in parsed) {\n            argsObj[argKey] = convertFuncArg(parsed[argKey]);\n          }\n        }\n      }\n    }\n  }\n\n  // convert\n  if (funcKey) {\n    const funcArgs = {};\n    for (let argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      let argVal = argsObj[argKey];\n      if (argVal === undefined) {\n        argVal = argConfig?.defaultValue;\n        if (argVal === undefined) {\n          if (argConfig?.isOptional) {\n            //ignore\n          } else {\n            meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n            return undefined;\n          }\n        } else {\n          argVal = {\n            value: argVal,\n            valueSrc: argVal?.func ? \"func\" : \"value\",\n            valueType: argConfig.type,\n          };\n        }\n      }\n      if (argVal)\n        funcArgs[argKey] = argVal;\n    }\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: funcArgs\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  const {methodName} = spel;\n  if (methodName)\n    meta.errors.push(`Signature ${firstSign} - failed to convert`);\n  \n  return undefined;\n};\n\nconst convertFuncToValue = (spel, conv, config, meta, parentSpel, fsigns, convertFuncArg) => {\n  let errs, foundSign, foundWidget;\n  const candidates = [];\n\n  for (let w in config.widgets) {\n    const widgetDef = config.widgets[w];\n    const {spelImportFuncs} = widgetDef;\n    if (spelImportFuncs) {\n      for (let i = 0 ; i < spelImportFuncs.length ; i++) {\n        const fj = spelImportFuncs[i];\n        if (isObject(fj)) {\n          const bag = {};\n          if (isJsonCompatible(fj, spel, bag)) {\n            for (const k in bag) {\n              bag[k] = convertFuncArg(bag[k]);\n            }\n            candidates.push({\n              s: `widgets.${w}.spelImportFuncs[${i}]`,\n              w,\n              argsObj: bag,\n            });\n          }\n        }\n      }\n    }\n  }\n\n  for (const {s, params} of fsigns) {\n    const found = conv.valueFuncs[s] || [];\n    for (const {w, argsOrder} of found) {\n      const argsArr = params.map(convertFuncArg);\n      const argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      candidates.push({\n        s,\n        w,\n        argsObj,\n      });\n    }\n  }\n\n  for (const {s, w, argsObj} of candidates) {\n    const widgetDef = config.widgets[w];\n    const {spelImportValue, type} = widgetDef;\n    foundWidget = w;\n    foundSign = s;\n    errs = [];\n    for (const k in argsObj) {\n      if (![\"value\"].includes(argsObj[k].valueSrc)) {\n        errs.push(`${k} has unsupported value src ${argsObj[k].valueSrc}`);\n      }\n    }\n    let value = argsObj.v.value;\n    if (spelImportValue && !errs.length) {\n      [value, errs] = spelImportValue.call(config.ctx, argsObj.v, widgetDef, argsObj);\n      if (errs && !Array.isArray(errs))\n        errs = [errs];\n    }\n    if (!errs.length) {\n      return {\n        valueSrc: \"value\",\n        valueType: type,\n        value,\n      };\n    }\n  }\n\n  if (foundWidget && errs.length) {\n    meta.errors.push(`Signature ${foundSign} - looks like convertable to ${foundWidget}, but: ${errs.join(\"; \")}`);\n  }\n\n  return undefined;\n};\n\nconst convertFuncToOp = (spel, conv, config, meta, parentSpel, fsigns, convertFuncArg) => {\n  let errs, opKey, foundSign;\n  for (const {s, params} of fsigns) {\n    const found = conv.opFuncs[s] || [];\n    for (const {op, argsOrder} of found) {\n      const argsArr = params.map(convertFuncArg);\n      opKey = op;\n      if (op === \"!compare\") {\n        if (\n          parentSpel.type.startsWith(\"op-\")\n          && parentSpel.children.length == 2\n          && parentSpel.children[1].type == \"number\"\n          && parentSpel.children[1].val === 0\n        ) {\n          return {\n            type: \"!compare\",\n            children: argsArr,\n          };\n        } else {\n          errs.push(\"Result of compareTo() should be compared to 0\");\n        }\n      }\n      foundSign = s;\n      errs = [];\n      const opDef = config.operators[opKey];\n      const {spelOp, valueTypes} = opDef;\n      const argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      const field = argsObj[\"0\"];\n      const convertedArgs = Object.keys(argsObj).filter(k => parseInt(k) > 0).map(k => argsObj[k]);\n      \n      const valueType = argsArr.filter(a => !!a).find(({valueSrc}) => valueSrc === \"value\")?.valueType;\n      if (valueTypes && valueType && !valueTypes.includes(valueType)) {\n        errs.push(`Op supports types ${valueTypes}, but got ${valueType}`);\n      }\n      if (!errs.length) {\n        return buildRule(config, meta, field, opKey, convertedArgs, spel);\n      }\n    }\n  }\n\n  if (opKey && errs.length) {\n    meta.errors.push(`Signature ${foundSign} - looks like convertable to ${opKey}, but: ${errs.join(\"; \")}`);\n  }\n\n  return undefined;\n};\n\nconst buildRule = (config, meta, field, opKey, convertedArgs, spel) => {\n  if (convertedArgs.filter(v => v === undefined).length) {\n    return undefined;\n  }\n  let fieldSrc = field?.func ? \"func\" : \"field\";\n  if (isObject(field) && field.valueSrc) {\n    // if comed from convertFuncToOp()\n    fieldSrc = field.valueSrc;\n    field = field.value;\n  }\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig) {\n    meta.errors.push(`No config for field ${field}`);\n    return undefined;\n  }\n\n  let canRev = true;\n  let needWrapReverse = false;\n  if (spel?.not && canRev) {\n    const opConfig = config.operators[opKey];\n    if (opConfig.reversedOp) {\n      opKey = opConfig.reversedOp;\n      spel.not = false;\n    } else {\n      needWrapReverse = true;\n    }\n  }\n\n  const widget = getWidgetForFieldOp(config, field, opKey);\n  const widgetConfig = config.widgets[widget || fieldConfig.mainWidget];\n  const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n  const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n\n  let res = {\n    type: \"rule\",\n    id: uuid(),\n    properties: {\n      field,\n      fieldSrc,\n      operator: opKey,\n      value: convertedArgs.map(v => v.value),\n      valueSrc: convertedArgs.map(v => v.valueSrc),\n      valueType: convertedArgs.map(v => {\n        if (v.valueSrc == \"value\") {\n          return widgetConfig?.type || fieldConfig?.type || v.valueType;\n        }\n        return v.valueType;\n      }),\n      ...(asyncListValues ? {asyncListValues} : {}),\n    }\n  };\n\n  if (needWrapReverse) {\n    res = wrapInDefaultConj(res, config, spel?.not);\n    if (spel?.not) {\n      spel.not = false;\n    }\n  }\n\n  return res;\n};\n\nconst buildRuleGroup = ({groupFilter, groupFieldValue}, opKey, convertedArgs, config, meta) => {\n  if (groupFieldValue.valueSrc != \"field\")\n    throw `Bad groupFieldValue: ${JSON.stringify(groupFieldValue)}`;\n  const groupField = groupFieldValue.value;\n  let groupOpRule = buildRule(config, meta, groupField, opKey, convertedArgs);\n  if (!groupOpRule)\n    return undefined;\n  const fieldConfig = getFieldConfig(config, groupField);\n  const mode = fieldConfig?.mode;\n  let res;\n\n  if (groupFilter?.type === \"group\") {\n    res = {\n      ...(groupFilter || {}),\n      type: \"rule_group\",\n      properties: {\n        ...groupOpRule.properties,\n        ...(groupFilter?.properties || {}),\n        mode\n      }\n    };\n  } else if (groupFilter) {\n    // rule_group in rule_group\n    res = {\n      ...(groupOpRule || {}),\n      type: \"rule_group\",\n      children1: [ groupFilter ],\n      properties: {\n        ...groupOpRule.properties,\n        mode\n      }\n    };\n  } else {\n    res = {\n      ...(groupOpRule || {}),\n      type: \"rule_group\",\n      properties: {\n        ...groupOpRule.properties,\n        mode\n      }\n    };\n  }\n\n  if (!res.id)\n    res.id = uuid();\n  return res;\n};\n\n\nconst compareArgs = (left, right,  spel, conv, config, meta, parentSpel = null) => {\n  if (left.type == right.type) {\n    if (left.type == \"!aggr\") {\n      const [leftSource, rightSource] = [left.source, right.source].map(v => convertArg(v, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      }));\n      //todo: check same filter\n      return leftSource.value == rightSource.value;\n    } else {\n      const [leftVal, rightVal] = [left, right].map(v => convertArg(v, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      }));\n      return leftVal.value == rightVal.value;\n    }\n  }\n  return false;\n};\n\nconst buildSimpleSwitch = (val, conv, config, meta) => {\n  let children1 = {};\n  const cond = null;\n  const caseI = buildCase(cond, val, conv, config, meta);\n  if (caseI) {\n    children1[caseI.id] = caseI;\n  }\n  let res = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n  return res;\n};\n\nconst buildCase = (cond, val, conv, config, meta, spel = null) => {\n  const valProperties = buildCaseValProperties(config, meta, conv, val, spel);\n\n  let caseI;\n  if (cond) {\n    caseI = convertToTree(cond, conv, config, meta, spel);\n    if (caseI && caseI.type) {\n      if (caseI.type != \"group\") {\n        caseI = wrapInDefaultConj(caseI, config);\n      }\n      caseI.type = \"case_group\";\n    } else {\n      meta.errors.push(`Unexpected case: ${JSON.stringify(caseI)}`);\n      caseI = undefined;\n    }\n  } else {\n    caseI = {\n      id: uuid(),\n      type: \"case_group\",\n      properties: {}\n    };\n  }\n\n  if (caseI) {\n    caseI.properties = {\n      ...caseI.properties,\n      ...valProperties\n    };\n  }\n\n  return caseI;\n};\n\nconst buildCaseValueConcat = (spel, conv, config, meta) => {\n  let flat = [];\n  function _processConcatChildren(children) {\n    children.map(child => {\n      if (child.type == \"op-plus\") {\n        _processConcatChildren(child.children);\n      } else {\n        const convertedChild = convertArg(child, conv, config, meta, spel);\n        if (convertedChild) {\n          flat.push(convertedChild);\n        } else {\n          meta.errors.push(`Can't convert ${child.type} in concatenation`);\n        }\n      }\n    });\n  }\n  _processConcatChildren(spel.children);\n  return {\n    valueSrc: \"value\",\n    valueType: \"case_value\",\n    value: flat,\n  };\n};\n\nconst buildCaseValProperties = (config, meta, conv, val, spel = null) => {\n  let valProperties = {};\n  let convVal;\n  if (val?.type == \"op-plus\") {\n    convVal = buildCaseValueConcat(val, conv, config, meta);\n  } else {\n    convVal = convertArg(val, conv, config, meta, spel);\n  }\n  const widgetDef = config.widgets[\"case_value\"];\n  const importCaseValue = widgetDef?.spelImportValue;\n  if (importCaseValue) {\n    const [normVal, normErrors] = importCaseValue(convVal);\n    normErrors.map(e => meta.errors.push(e));\n    if (normVal) {\n      valProperties = {\n        value: [normVal],\n        valueSrc: [\"value\"],\n        valueType: [\"case_value\"]\n      };\n    }\n  } else {\n    meta.errors.push(\"No fucntion to import case value\");\n  }\n  return valProperties;\n};\n\nconst wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj) => {\n  if (!rule) return undefined;\n  return {\n    type: \"rule_group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n      not: false,\n      field: parentField,\n    }\n  };\n};\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not || false\n    }\n  };\n};\n","import Immutable from \"immutable\";\nimport uuid from \"./uuid\";\nimport {getFieldConfig, getOperatorConfig, getFieldParts} from \"./configUtils\";\nimport {getNewValueForFieldOp, getFirstField, getFirstOperator} from \"../utils/ruleUtils\";\nimport { isImmutable } from \"./stuff\";\nimport { jsToImmutable } from \"../import\";\n\n\nexport const getDefaultField = (config, canGetFirst = true, parentRuleGroupPath = null) => {\n  const {defaultField} = config.settings;\n  let f = (!parentRuleGroupPath ? defaultField : getDefaultSubField(config, parentRuleGroupPath))\n    || canGetFirst && getFirstField(config, parentRuleGroupPath)\n    || null;\n  // if default LHS is func, convert to Immutable\n  if (f != null && typeof f !== \"string\" && !isImmutable(f)) {\n    f = jsToImmutable(f);\n  }\n  return f;\n};\n\nexport const getDefaultSubField = (config, parentRuleGroupPath = null) => {\n  if (!parentRuleGroupPath)\n    return null;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const parentRuleGroupConfig = getFieldConfig(config, parentRuleGroupPath);\n  let f = parentRuleGroupConfig?.defaultField;\n  if (f) {\n    f = [...getFieldParts(parentRuleGroupPath), f].join(fieldSeparator);\n  }\n  return f;\n};\n\nexport const getDefaultFieldSrc = (config, canGetFirst = true) => {\n  return canGetFirst && config.settings.fieldSources?.[0] || \"field\";\n};\n\nexport const getDefaultOperator = (config, field, canGetFirst = true) => {\n  let {defaultOperator} = config.settings;\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOperators = fieldConfig?.operators || [];\n  if (defaultOperator && !fieldOperators.includes(defaultOperator))\n    defaultOperator = null;\n  let fieldDefaultOperator = fieldConfig?.defaultOperator;\n  if (fieldDefaultOperator && !fieldOperators.includes(fieldDefaultOperator))\n    fieldDefaultOperator = null;\n  if (!fieldDefaultOperator && canGetFirst)\n    fieldDefaultOperator = getFirstOperator(config, field);\n  const fieldHasExplicitDefOp = fieldConfig?._origDefaultOperator;\n  const op = fieldHasExplicitDefOp && fieldDefaultOperator || defaultOperator || fieldDefaultOperator;\n  return op;\n};\n\n//used for complex operators like proximity\nexport const defaultOperatorOptions = (config, operator, field) => {\n  let operatorConfig = operator ? getOperatorConfig(config, operator, field) : null;\n  if (!operatorConfig)\n    return null; //new Immutable.Map();\n  return operatorConfig.options ? new Immutable.Map(\n    operatorConfig.options\n    && operatorConfig.options.defaults || {}\n  ) : null;\n};\n\nexport const defaultRuleProperties = (config, parentRuleGroupPath = null, item = null, canUseDefaultFieldAndOp = true, canGetFirst = false) => {\n  let field = null, operator = null, fieldSrc = null;\n  const {showErrorMessage} = config.settings;\n  if (item) {\n    fieldSrc = item?.properties?.fieldSrc;\n    field = item?.properties?.field;\n    operator = item?.properties?.operator;\n  } else if (canUseDefaultFieldAndOp) {\n    field = getDefaultField(config, canGetFirst, parentRuleGroupPath);\n    if (field) {\n      fieldSrc = isImmutable(field) ? \"func\" : \"field\";\n    } else {\n      fieldSrc = getDefaultFieldSrc(config);\n    }\n    operator = getDefaultOperator(config, field, true);\n  } else {\n    fieldSrc = getDefaultFieldSrc(config);\n  }\n  let current = new Immutable.Map({\n    fieldSrc: fieldSrc,\n    field: field,\n    operator: operator,\n    value: new Immutable.List(),\n    valueSrc: new Immutable.List(),\n    //used for complex operators like proximity\n    operatorOptions: defaultOperatorOptions(config, operator, field),\n  });\n  if (showErrorMessage) {\n    current = current.set(\"valueError\", new Immutable.List());\n  }\n  \n  if (field && operator) {\n    let {newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, current, field, operator, \"operator\", false\n    );\n    current = current\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n  }\n  return current; \n};\n\n\nexport const defaultGroupConjunction = (config, fieldConfig = null) => {\n  fieldConfig = getFieldConfig(config, fieldConfig); // if `fieldConfig` is field name, not config\n  const conjs = fieldConfig && fieldConfig.conjunctions || Object.keys(config.conjunctions);\n  if (conjs.length == 1)\n    return conjs[0];\n  return config.settings.defaultGroupConjunction || config.settings.defaultConjunction || conjs[0];\n};\n\nexport const defaultConjunction = (config) =>\n  config.settings.defaultConjunction || Object.keys(config.conjunctions)[0];\n\nexport const defaultGroupProperties = (config, fieldConfig = null) => new Immutable.Map({\n  conjunction: defaultGroupConjunction(config, fieldConfig),\n  not: false\n});\n\nexport const defaultItemProperties = (config, item) => {\n  return item && item.type == \"group\" \n    ? defaultGroupProperties(config, item?.properties?.field) \n    : defaultRuleProperties(config, null, item);\n};\n\nexport const defaultRule = (id, config) => ({\n  [id]: new Immutable.Map({\n    type: \"rule\",\n    id: id,\n    properties: defaultRuleProperties(config)\n  })\n});\n\nexport const defaultRoot = (config, canAddDefaultRule = true) => {\n  return new Immutable.Map({\n    type: \"group\",\n    id: uuid(),\n    children1: new Immutable.OrderedMap(canAddDefaultRule ? { ...defaultRule(uuid(), config) } : {}),\n    properties: defaultGroupProperties(config)\n  });\n};\n\nexport const createListFromArray = (ids) => {\n  return new Immutable.List(ids);\n};\n\nexport const emptyProperies = () => new Immutable.Map();\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldSrc,\n} from \"./configUtils\";\nimport {getOperatorsForField, getWidgetForFieldOp, getNewValueForFieldOp, isCompletedValue, isEmptyRuleProperties} from \"../utils/ruleUtils\";\nimport {defaultValue, deepEqual, logger} from \"../utils/stuff\";\nimport {getItemInListValues} from \"../utils/listValues\";\nimport {defaultOperatorOptions} from \"../utils/defaultUtils\";\nimport {fixPathsInTree} from \"../utils/treeUtils\";\nimport omit from \"lodash/omit\";\nimport { List } from \"immutable\";\n\n\nconst typeOf = (v) => {\n  if (typeof v == \"object\" && v !== null && Array.isArray(v))\n    return \"array\";\n  else\n    return (typeof v);\n};\n\nconst isTypeOf = (v, type) => {\n  if (typeOf(v) == type)\n    return true;\n  if (type == \"number\" && !isNaN(v))\n    return true; //can be casted\n  return false;\n};\n\nexport const validateAndFixTree = (newTree, _oldTree, newConfig, oldConfig, removeEmptyGroups, removeIncompleteRules) => {\n  let tree = validateTree(newTree, _oldTree, newConfig, oldConfig, removeEmptyGroups, removeIncompleteRules);\n  tree = fixPathsInTree(tree);\n  return tree;\n};\n\nexport const validateTree = (tree, _oldTree, config, oldConfig, removeEmptyGroups, removeIncompleteRules) => {\n  if (removeEmptyGroups === undefined) {\n    removeEmptyGroups = config.settings.removeEmptyGroupsOnLoad;\n  }\n  if (removeIncompleteRules === undefined) {\n    removeIncompleteRules = config.settings.removeIncompleteRulesOnLoad;\n  }\n  const c = {\n    config, oldConfig, removeEmptyGroups, removeIncompleteRules\n  };\n  return validateItem(tree, [], null, {}, c);\n};\n\nfunction validateItem (item, path, itemId, meta, c) {\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\" || type == \"case_group\" || type == \"switch_group\") && children && children.size) {\n    return validateGroup(item, path, itemId, meta, c);\n  } else if (type === \"rule\") {\n    return validateRule(item, path, itemId, meta, c);\n  } else {\n    return item;\n  }\n}\n\nfunction validateGroup (item, path, itemId, meta, c) {\n  const {removeEmptyGroups} = c;\n  let id = item.get(\"id\");\n  let children = item.get(\"children1\");\n  const oldChildren = children;\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  //validate children\n  let submeta = {};\n  children = children\n    .map( (currentChild, childId) => validateItem(currentChild, path.concat(id), childId, submeta, c) );\n  if (removeEmptyGroups)\n    children = children.filter((currentChild) => (currentChild != undefined));\n  let sanitized = submeta.sanitized || (oldChildren.size != children.size);\n  if (!children.size && removeEmptyGroups && path.length) {\n    sanitized = true;\n    item = undefined;\n  }\n\n  if (sanitized)\n    meta.sanitized = true;\n  if (sanitized && item)\n    item = item.set(\"children1\", children);\n  return item;\n}\n\n\nfunction validateRule (item, path, itemId, meta, c) {\n  const {removeIncompleteRules, config, oldConfig} = c;\n  const {showErrorMessage} = config.settings;\n  let id = item.get(\"id\");\n  let properties = item.get(\"properties\");\n  let field = properties.get(\"field\") || null;\n  let fieldSrc = properties.get(\"fieldSrc\") || null;\n  let operator = properties.get(\"operator\") || null;\n  let operatorOptions = properties.get(\"operatorOptions\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let value = properties.get(\"value\");\n  let valueError = properties.get(\"valueError\");\n  const oldSerialized = {\n    field: field?.toJS?.() || field,\n    fieldSrc,\n    operator,\n    operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n    valueSrc: valueSrc ? valueSrc.toJS() : null,\n    value: value ? value.toJS() : null,\n    valueError: valueError ? valueError.toJS() : null,\n  };\n  let _wasValid = field && operator && value && !value.includes(undefined);\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  //validate field\n  const fieldDefinition = field ? getFieldConfig(config, field) : null;\n  if (field && !fieldDefinition) {\n    logger.warn(`No config for field ${field}`);\n    field = null;\n  }\n  if (field == null) {\n    properties = [\"operator\", \"operatorOptions\", \"valueSrc\", \"value\", \"valueError\"].reduce((map, key) => map.delete(key), properties);\n    operator = null;\n  }\n  if (!fieldSrc) {\n    fieldSrc = getFieldSrc(field);\n    properties = properties.set(\"fieldSrc\", fieldSrc);\n  }\n\n  //validate operator\n  // Backward compatibility: obsolete operator range_between\n  if (operator == \"range_between\" || operator == \"range_not_between\") {\n    operator = operator == \"range_between\" ? \"between\" : \"not_between\";\n    console.info(`Fixed operator ${properties.get(\"operator\")} to ${operator}`);\n    properties = properties.set(\"operator\", operator);\n  }\n  const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n  if (operator && !operatorDefinition) {\n    console.warn(`No config for operator ${operator}`);\n    operator = null;\n  }\n  const availOps = field ? getOperatorsForField(config, field) : [];\n  if (field) {\n    if (!availOps?.length) {\n      console.warn(`Type of field ${field} is not supported`);\n      operator = null;\n    } else if (operator && availOps.indexOf(operator) == -1) {\n      if (operator == \"is_empty\" || operator == \"is_not_empty\") {\n        // Backward compatibility: is_empty #494\n        operator = operator == \"is_empty\" ? \"is_null\" : \"is_not_null\";\n        console.info(`Fixed operator ${properties.get(\"operator\")} to ${operator} for ${field}`);\n        properties = properties.set(\"operator\", operator);\n      } else {\n        console.warn(`Operator ${operator} is not supported for field ${field}`);\n        operator = null;\n      }\n    }\n  }\n  if (operator == null) {\n    // do not unset operator ?\n    properties = properties.delete(\"operatorOptions\");\n    properties = properties.delete(\"valueSrc\");\n    properties = properties.delete(\"value\");\n    properties = properties.delete(\"valueError\");\n  }\n\n  //validate operator options\n  operatorOptions = properties.get(\"operatorOptions\");\n  let _operatorCardinality = operator ? defaultValue(operatorDefinition.cardinality, 1) : null;\n  if (!operator || operatorOptions && !operatorDefinition.options) {\n    operatorOptions = null;\n    properties = properties.delete(\"operatorOptions\");\n  } else if (operator && !operatorOptions && operatorDefinition.options) {\n    operatorOptions = defaultOperatorOptions(config, operator, field);\n    properties = properties.set(\"operatorOptions\", operatorOptions);\n  }\n\n  //validate values\n  valueSrc = properties.get(\"valueSrc\");\n  value = properties.get(\"value\");\n  const canFix = !showErrorMessage;\n  const isEndValue = true;\n  let {newValue, newValueSrc, newValueError} = getNewValueForFieldOp(config, oldConfig, properties, field, operator, null, canFix, isEndValue);\n  value = newValue;\n  valueSrc = newValueSrc;\n  valueError = newValueError;\n  properties = properties.set(\"value\", value);\n  properties = properties.set(\"valueSrc\", valueSrc);\n  if (showErrorMessage) {\n    properties = properties.set(\"valueError\", valueError);\n  } else {\n    properties = properties.delete(\"valueError\");\n  }\n\n  const newSerialized = {\n    field: field?.toJS?.() || field,\n    fieldSrc,\n    operator,\n    operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n    valueSrc: valueSrc ? valueSrc.toJS() : null,\n    value: value ? value.toJS() : null,\n    valueError: valueError ? valueError.toJS() : null,\n  };\n  const sanitized = !deepEqual(oldSerialized, newSerialized);\n  //const isCompleted = !!operator && !isEmptyRuleProperties(properties.toObject(), config, false);\n  const isValueCompleted = value \n    && value.filter((v, delta) => !isCompletedValue(v, valueSrc.get(delta), config)).size == 0;\n  const isFieldCompleted = isCompletedValue(field, fieldSrc, config);\n  const isCompleted = isFieldCompleted && operator && isValueCompleted;\n  if (sanitized)\n    meta.sanitized = true;\n  if (!isCompleted && removeIncompleteRules) {\n    let reason = \"Uncomplete rule\";\n    if (!isFieldCompleted) {\n      reason = \"Uncomplete LHS\";\n    } else {\n      reason = \"Uncomplete RHS\";\n      if (newSerialized.valueSrc?.[0] && newSerialized.valueSrc?.[0] != oldSerialized.valueSrc?.[0]) {\n        // eg. operator `starts_with` supports only valueSrc \"value\"\n        reason = `Bad value src ${newSerialized.valueSrc}`;\n      }\n    }\n    console.warn(\"[RAQB validate]\", \"Removing rule: \", oldSerialized, `Reason: ${reason}`);\n    item = undefined;\n  }\n  else if (sanitized)\n    item = item.set(\"properties\", properties);\n\n  return item;\n}\n\n\n/**\n * \n * @param {bool} canFix true is useful for func values to remove bad args\n * @param {bool} isEndValue false if value is in process of editing by user\n * @param {bool} isRawValue false is used only internally from validateFuncValue\n * @return {array} [validError, fixedValue] - if validError === null and canFix == true, fixedValue can differ from value if was fixed\n */\nexport const validateValue = (config, leftField, field, operator, value, valueType, valueSrc, asyncListValues, canFix = false, isEndValue = false, isRawValue = true) => {\n  let validError = null;\n  let fixedValue = value;\n\n  if (value != null) {\n    if (valueSrc == \"field\") {\n      [validError, fixedValue] = validateFieldValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, isEndValue, canFix);\n    } else if (valueSrc == \"func\") {\n      [validError, fixedValue] = validateFuncValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, isEndValue, canFix);\n    } else if (valueSrc == \"value\" || !valueSrc) {\n      [validError, fixedValue] = validateNormalValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, isEndValue, canFix);\n    }\n\n    if (!validError) {\n      const fieldConfig = getFieldConfig(config, field);\n      const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n      const fieldWidgetDefinition = omit(getFieldWidgetConfig(config, field, operator, w, valueSrc), [\"factory\"]);\n      const rightFieldDefinition = (valueSrc == \"field\" ? getFieldConfig(config, value) : null);\n      const fieldSettings = fieldWidgetDefinition; // widget definition merged with fieldSettings\n\n      const fn = fieldWidgetDefinition.validateValue;\n      if (typeof fn == \"function\") {\n        const args = [\n          fixedValue, \n          fieldSettings,\n          operator,\n          operatorDefinition\n        ];\n        if (valueSrc == \"field\")\n          args.push(rightFieldDefinition);\n        const validResult = fn.call(config.ctx, ...args);\n        if (typeof validResult == \"boolean\") {\n          if (validResult == false)\n            validError = \"Invalid value\";\n        } else {\n          validError = validResult;\n        }\n      }\n    }\n  }\n\n  if (isRawValue && validError) {\n    console.warn(\"[RAQB validate]\", `Field ${field}: ${validError}`);\n  }\n  \n  return [validError, fixedValue];\n};\n\nconst validateValueInList = (value, listValues, canFix, isEndValue, removeInvalidMultiSelectValuesOnLoad) => {\n  const values = List.isList(value) ? value.toJS() : (value instanceof Array ? [...value] : undefined);\n  if (values) {\n    const [goodValues, badValues] = values.reduce(([goodVals, badVals], val) => {\n      const vv = getItemInListValues(listValues, val);\n      if (vv == undefined) {\n        return [goodVals, [...badVals, val]];\n      } else {\n        return [[...goodVals, vv.value], badVals];\n      }\n    }, [[], []]);\n    const plural = badValues.length > 1;\n    const err = badValues.length ? `${plural ? \"Values\" : \"Value\"} ${badValues.join(\", \")} ${plural ? \"are\" : \"is\"} not in list of values` : null;\n    // always remove bad values at tree validation as user can't unselect them (except AntDesign widget)\n    if (removeInvalidMultiSelectValuesOnLoad !== undefined) {\n      canFix = removeInvalidMultiSelectValuesOnLoad;\n    } else {\n      canFix = canFix || isEndValue;\n    }\n    return [err, canFix ? goodValues : value];\n  } else {\n    const vv = getItemInListValues(listValues, value);\n    if (vv == undefined) {\n      return [`Value ${value} is not in list of values`, value];\n    } else {\n      value = vv.value;\n    }\n    return [null, value];\n  }\n};\n\n/**\n* \n*/\nconst validateNormalValue = (leftField, field, value, valueSrc, valueType, asyncListValues, config, operator = null, isEndValue = false, canFix = false) => {\n  if (field) {\n    const fieldConfig = getFieldConfig(config, field);\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const wConfig = config.widgets[w];\n    const wType = wConfig?.type;\n    const jsType = wConfig?.jsType;\n    const fieldSettings = fieldConfig.fieldSettings;\n    const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n    const isAsyncListValues = !!fieldSettings?.asyncFetch;\n    // todo: for select/multiselect value can be string or number\n    const canSkipCheck = listValues || isAsyncListValues; \n\n    if (valueType && wType && valueType != wType)\n      return [`Value should have type ${wType}, but got value of type ${valueType}`, value];\n    if (jsType && !isTypeOf(value, jsType) && !canSkipCheck) {\n      return [`Value should have JS type ${jsType}, but got value of type ${typeof value}`, value];\n    }\n\n    if (fieldSettings) {\n      const realListValues = asyncListValues || listValues;\n      if (realListValues && !fieldSettings.allowCustomValues) {\n        return validateValueInList(value, realListValues, canFix, isEndValue, config.settings.removeInvalidMultiSelectValuesOnLoad);\n      }\n      if (fieldSettings.min != null && value < fieldSettings.min) {\n        return [`Value ${value} < min ${fieldSettings.min}`, canFix ? fieldSettings.min : value];\n      }\n      if (fieldSettings.max != null && value > fieldSettings.max) {\n        return [`Value ${value} > max ${fieldSettings.max}`, canFix ? fieldSettings.max : value];\n      }\n    }\n  }\n\n  return [null, value];\n};\n\n\n/**\n* \n*/\nconst validateFieldValue = (leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null, isEndValue = false, canFix = false) => {\n  const {fieldSeparator} = config.settings;\n  const isFuncArg = typeof field == \"object\" && field?._isFuncArg;\n  const leftFieldStr = Array.isArray(leftField) ? leftField.join(fieldSeparator) : leftField;\n  const rightFieldStr = Array.isArray(value) ? value.join(fieldSeparator) : value;\n  const rightFieldDefinition = getFieldConfig(config, value);\n  if (!rightFieldDefinition)\n    return [`Unknown field ${value}`, value];\n  if (rightFieldStr == leftFieldStr && !isFuncArg)\n    return [`Can't compare field ${leftField} with itself`, value];\n  if (valueType && valueType != rightFieldDefinition.type)\n    return [`Field ${value} is of type ${rightFieldDefinition.type}, but expected ${valueType}`, value];\n  return [null, value];\n};\n\n/**\n* \n*/\nconst validateFuncValue = (leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null, isEndValue = false, canFix = false) => {\n  let fixedValue = value;\n\n  if (value) {\n    const funcKey = value.get(\"func\");\n    if (funcKey) {\n      const fieldDef = getFieldConfig(config, field);\n      if (fieldDef?.funcs) {\n        if (!fieldDef.funcs.includes(funcKey)) {\n          return [`Unsupported function ${funcKey}`, value];\n        }\n      }\n      if (fixedValue) {\n        const funcConfig = getFuncConfig(config, funcKey);\n        if (funcConfig) {\n          if (valueType && funcConfig.returnType != valueType)\n            return [`Function ${funcKey} should return value of type ${funcConfig.returnType}, but got ${valueType}`, value];\n          for (const argKey in funcConfig.args) {\n            const argConfig = funcConfig.args[argKey];\n            const args = fixedValue.get(\"args\");\n            const argVal = args ? args.get(argKey) : undefined;\n            const argDef = getFieldConfig(config, argConfig);\n            const argValue = argVal ? argVal.get(\"value\") : undefined;\n            const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n            if (argValue !== undefined) {\n              const [argValidError, fixedArgVal] = validateValue(\n                config, leftField, argDef, operator, argValue, argConfig.type, argValueSrc, asyncListValues, canFix, isEndValue, false\n              );\n              if (argValidError !== null) {\n                if (canFix) {\n                  fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n                  if (argConfig.defaultValue !== undefined) {\n                    fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], argConfig.defaultValue);\n                    fixedValue = fixedValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n                  }\n                } else {\n                  return [`Invalid value of arg ${argKey} for func ${funcKey}: ${argValidError}`, value];\n                }\n              } else if (fixedArgVal !== argValue) {\n                fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], fixedArgVal);\n              }\n            } else if (isEndValue && argConfig.defaultValue === undefined && !canFix && !argConfig.isOptional) {\n              return [`Value of arg ${argKey} for func ${funcKey} is required`, value];\n            }\n          }\n        } else return [`Unknown function ${funcKey}`, value];\n      }\n    } // else it's not function value\n  } // empty value\n\n  return [null, fixedValue];\n};\n","\nimport {getFieldConfig, getFuncConfig, getFuncSignature} from \"../utils/configUtils\";\nimport {filterValueSourcesForField, completeValue, selectTypes} from \"../utils/ruleUtils\";\nimport {validateValue} from \"../utils/validation\";\nimport Immutable from \"immutable\";\n\n// helpers\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\n\n/**\n * @param {Immutable.Map} value\n * @param {object} config\n * @return {Immutable.Map | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeFuncValue = (value, config) => {\n  if (!value)\n    return undefined;\n  const funcKey = value.get(\"func\");\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return undefined;\n  let complValue = value;\n  let tmpHasOptional = false;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const {valueSources, isOptional, defaultValue} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    const args = complValue.get(\"args\");\n    const argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = (argVal ? argVal.get(\"valueSrc\") : undefined) || argDefaultValueSrc;\n    if (argValue !== undefined) {\n      const completeArgValue = completeValue(argValue, argValueSrc, config);\n      if (completeArgValue === undefined) {\n        return undefined;\n      } else if (completeArgValue !== argValue) {\n        complValue = complValue.setIn([\"args\", argKey, \"value\"], completeArgValue);\n      }\n      if (tmpHasOptional) {\n        // has gap\n        return undefined;\n      }\n    } else if (defaultValue !== undefined && !isObject(defaultValue)) {\n      complValue = complValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n      complValue = complValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n    } else if (isOptional) {\n      // optional\n      tmpHasOptional = true;\n    } else {\n      // missing value\n      return undefined;\n    }\n  }\n  return complValue;\n};\n\n\n/**\n * @param {Immutable.Map} value \n * @return {array} - [usedFields, badFields]\n */\n// const getUsedFieldsInFuncValue = (value, config) => {\n//   let usedFields = [];\n//   let badFields = [];\n\n//   const _traverse = (value) => {\n//     const args = value && value.get(\"args\");\n//     if (!args) return;\n//     for (const arg of args.values()) {\n//       if (arg.get(\"valueSrc\") == \"field\") {\n//         const rightField = arg.get(\"value\");\n//         if (rightField) {\n//           const rightFieldDefinition = config ? getFieldConfig(config, rightField) : undefined;\n//           if (config && !rightFieldDefinition)\n//             badFields.push(rightField);\n//           else\n//             usedFields.push(rightField);\n//         }\n//       } else if (arg.get(\"valueSrc\") == \"func\") {\n//         _traverse(arg.get(\"value\"));\n//       }\n//     }\n//   };\n\n//   _traverse(value);\n\n//   return [usedFields, badFields];\n// };\n\n\n/**\n * Used @ FuncWidget\n * @param {Immutable.Map} value \n * @param {string} funcKey \n * @param {object} config \n */\nexport const setFunc = (value, funcKey, config) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  value = value || new Immutable.Map();\n  if (Array.isArray(funcKey)) {\n    // fix for cascader\n    funcKey = funcKey.join(fieldSeparator);\n  }\n  const oldFuncKey = value.get(\"func\");\n  const oldArgs = value.get(\"args\");\n  value = value.set(\"func\", funcKey);\n\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  const newFuncSignature = funcKey && getFuncSignature(config, funcKey);\n  const oldFuncSignature = oldFuncKey && getFuncSignature(config, oldFuncKey);\n  const keepArgsKeys = getCompatibleArgsOnFuncChange(oldFuncSignature, newFuncSignature, oldArgs, config);\n  if (keepArgsKeys.length) {\n    const argsKeys = Object.keys(newFuncSignature.args);\n    const deleteArgsKeys = argsKeys.filter(k => !keepArgsKeys.includes(k));\n    value = deleteArgsKeys.reduce((value, k) => value.deleteIn([\"args\", k]), value);\n  } else {\n    value = value.set(\"args\", new Immutable.Map());\n  }\n\n  // defaults\n  if (funcConfig) {\n    for (const argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      const {valueSources, defaultValue} = argConfig;\n      const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n      const firstValueSrc = filteredValueSources.length ? filteredValueSources[0] : undefined;\n      const defaultValueSrc = defaultValue ? (isObject(defaultValue) && !!defaultValue.func ? \"func\" : \"value\") : undefined;\n      const argDefaultValueSrc = defaultValueSrc || firstValueSrc;\n      const hasValue = value.getIn([\"args\", argKey]);\n      if (!hasValue) {\n        if (defaultValue !== undefined) {\n          value = value.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n        }\n        if (argDefaultValueSrc) {\n          value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n        }\n      }\n    }\n  }\n\n  return value;\n};\n\nconst getDefaultArgValue = ({defaultValue: value}) => {\n  if (isObject(value) && !Immutable.Map.isMap(value) && value.func) {\n    return Immutable.fromJS(value, function (k, v) {\n      return Immutable.Iterable.isIndexed(v) ? v.toList() : v.toOrderedMap();\n    });\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {*} argVal \n* @param {object} argConfig \n*/\nexport const setArgValue = (value, argKey, argVal, argConfig, config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey, \"value\"], argVal);\n\n    // set default arg value source\n    const valueSrc = value.getIn([\"args\", argKey, \"valueSrc\"]);\n    const {valueSources} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    let argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    if (!argDefaultValueSrc && filteredValueSources.includes(\"value\")) {\n      argDefaultValueSrc = \"value\";\n    }\n    if (!valueSrc && argDefaultValueSrc) {\n      value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {string} argValSrc \n* @param {object} argConfig \n*/\nexport const setArgValueSrc = (value, argKey, argValSrc, _argConfig, _config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey], new Immutable.Map({valueSrc: argValSrc}));\n  }\n  return value;\n};\n\n// see getFuncSignature in configUtils\nexport const getCompatibleArgsOnFuncChange = (s1, s2, argVals, config) => {\n  if (s1?.returnType != s2?.returnType)\n    return [];\n  const checkIndexes = false;\n  const keys = Object.keys(s2.args);\n  const compatibleKeys = keys.filter((k, i) => {\n    const arg2 = s2.args[k];\n    const arg1 = s1.args[k];\n    const oldInd = Object.keys(s1.args).indexOf(k);\n    if (!arg1 && (arg2.defaultValue !== undefined || arg2.isOptional)) {\n      return true;\n    }\n    if (checkIndexes && i !== oldInd) {\n      return false;\n    }\n    if (arg1?.type != arg2.type)\n      return false;\n    if (selectTypes.includes(arg2.type)) {\n      if (!arg1.listValuesType || arg1.listValuesType !== arg2.listValuesType)\n        return false;\n    }\n    if (argVals) {\n      const argVal = argVals.get(k);\n      const argValue = argVal?.get(\"value\");\n      const argValueSrc = argVal?.get(\"valueSrc\");\n      if (arg2.valueSources && !arg2.valueSources.includes(argValueSrc))\n        return false;\n      const leftField = null, operator = null, argDef = arg2, asyncListValues = null, canFix = false, isEndValue = true;\n      const [argValidError, _fixedArgVal] = validateValue(\n        config, leftField, argDef, operator, argValue, argDef.type, argValueSrc, asyncListValues, canFix, isEndValue, false\n      );\n      if (argValidError)\n        return false;\n    }\n\n    return true;\n  });\n  return compatibleKeys;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldRawConfig, getFuncConfig, getFieldParts,\n  isFieldDescendantOfField\n} from \"./configUtils\";\nimport {defaultValue, getFirstDefined} from \"../utils/stuff\";\nimport Immutable from \"immutable\";\nimport {validateValue} from \"../utils/validation\";\nimport last from \"lodash/last\";\nimport {completeFuncValue} from \"./funcUtils\";\n\nexport const selectTypes = [\n  \"select\",\n  \"multiselect\",\n  \"treeselect\",\n  \"treemultiselect\",\n];\n\n/**\n * @param {object} config\n * @param {object} oldConfig\n * @param {Immutable.Map} current\n * @param {string} newField\n * @param {string} newOperator\n * @param {string} changedProp\n * @return {object} - {canReuseValue, newValue, newValueSrc, newValueType, newValueError}\n */\nexport const getNewValueForFieldOp = function (config, oldConfig = null, current, newField, newOperator, changedProp = null, canFix = true, isEndValue = false) {\n  if (!oldConfig)\n    oldConfig = config;\n  const {keepInputOnChangeFieldSrc} = config.settings;\n  const currentField = current.get(\"field\");\n  const currentFieldType = current.get(\"fieldType\");\n  //const currentFieldSrc = current.get(\"fieldSrc\");\n  const currentOperator = current.get(\"operator\");\n  const currentValue = current.get(\"value\");\n  const currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n  const currentValueType = current.get(\"valueType\", new Immutable.List());\n  const currentAsyncListValues = current.get(\"asyncListValues\");\n\n  //const isValidatingTree = (changedProp === null);\n  const {convertableWidgets, clearValueOnChangeField, clearValueOnChangeOp, showErrorMessage} = config.settings;\n\n  //const currentOperatorConfig = getOperatorConfig(oldConfig, currentOperator);\n  const newOperatorConfig = getOperatorConfig(config, newOperator, newField);\n  //const currentOperatorCardinality = currentOperator ? defaultValue(currentOperatorConfig.cardinality, 1) : null;\n  const operatorCardinality = newOperator ? defaultValue(newOperatorConfig.cardinality, 1) : null;\n  const currentFieldConfig = getFieldConfig(oldConfig, currentField);\n  const newFieldConfig = getFieldConfig(config, newField);\n  const isOkWithoutField = !currentField && currentFieldType && keepInputOnChangeFieldSrc;\n  const currentType = currentFieldConfig?.type || currentFieldType;\n  const newType = newFieldConfig?.type || !newField && isOkWithoutField && currentType;\n\n  let canReuseValue = (currentField || isOkWithoutField) && currentOperator && newOperator && currentValue != undefined;\n  canReuseValue = canReuseValue\n    && (!changedProp \n      || changedProp == \"field\" && !clearValueOnChangeField \n      || changedProp == \"operator\" && !clearValueOnChangeOp);\n  canReuseValue = canReuseValue\n    && (currentType && newType && currentType == newType);\n  if (canReuseValue && selectTypes.includes(newType) && changedProp == \"field\") {\n    const newListValuesType = newFieldConfig?.listValuesType;\n    const currentListValuesType = currentFieldConfig?.listValuesType;\n    if (newListValuesType && newListValuesType === currentListValuesType) {\n      // ok\n    } else {\n      // different fields of select types has different listValues\n      canReuseValue = false;\n    }\n  }\n\n  // compare old & new widgets\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    const vs = currentValueSrc.get(i) || null;\n    const currentWidget = getWidgetForFieldOp(oldConfig, currentField, currentOperator, vs);\n    const newWidget = getWidgetForFieldOp(config, newField, newOperator, vs);\n    // need to also check value widgets if we changed operator and current value source was 'field'\n    // cause for select type op '=' requires single value and op 'in' requires array value\n    const currentValueWidget = vs == \"value\" ? currentWidget : getWidgetForFieldOp(oldConfig, currentField, currentOperator, \"value\");\n    const newValueWidget = vs == \"value\" ? newWidget : getWidgetForFieldOp(config, newField, newOperator, \"value\");\n\n    const canReuseWidget = newValueWidget == currentValueWidget\n      || (convertableWidgets[currentValueWidget] || []).includes(newValueWidget)\n      || !currentValueWidget && isOkWithoutField;\n    if (!canReuseWidget) {\n      canReuseValue = false;\n    }\n  }\n\n  if (currentOperator != newOperator && [currentOperator, newOperator].includes(\"proximity\"))\n    canReuseValue = false;\n\n  const firstWidgetConfig = getFieldWidgetConfig(config, newField, newOperator, null, currentValueSrc.first());\n  let valueSources = getValueSourcesForFieldOp(config, newField, newOperator, null);\n  if (!newField && isOkWithoutField) {\n    valueSources = Object.keys(config.settings.valueSourcesInfo);\n  }\n\n  let valueFixes = {};\n  let valueErrors = Array.from({length: operatorCardinality}, () => null);\n  if (canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      const v = currentValue.get(i);\n      const vType = currentValueType.get(i) || null;\n      const vSrc = currentValueSrc.get(i) || null;\n      let isValidSrc = (valueSources.find(v => v == vSrc) != null);\n      if (!isValidSrc && i > 0 && vSrc == null)\n        isValidSrc = true; // make exception for range widgets (when changing op from '==' to 'between')\n      const asyncListValues = currentAsyncListValues;\n      const [validateError, fixedValue] = validateValue(\n        config, newField, newField, newOperator, v, vType, vSrc, asyncListValues, canFix, isEndValue, true\n      );\n      const isValid = !validateError;\n      // Allow bad value with error message\n      // But not on field change - in that case just drop bad value that can't be reused\n      // ? Maybe we should also drop bad value on op change?\n      // For bad multiselect value we have both error message + fixed value.\n      //  If we show error message, it will gone on next tree validation\n      const fixValue = fixedValue !== v;\n      const dropValue = !isValidSrc || !isValid && (changedProp == \"field\" || !showErrorMessage && !fixValue);\n      const showValueError = !!validateError && showErrorMessage && !dropValue && !fixValue;\n      if (showValueError) {\n        valueErrors[i] = validateError;\n      }\n      if (fixValue) {\n        valueFixes[i] = fixedValue;\n      }\n      if (dropValue) {\n        canReuseValue = false;\n        break;\n      }\n    }\n  }\n\n  // reuse value OR get defaultValue for cardinality 1 (it means default range values is not supported yet, todo)\n  let newValue = null, newValueSrc = null, newValueType = null, newValueError = null;\n  newValue = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n    let v = undefined;\n    if (canReuseValue) {\n      if (i < currentValue.size) {\n        v = currentValue.get(i);\n        if (valueFixes[i] !== undefined) {\n          v = valueFixes[i];\n        }\n      }\n    } else if (operatorCardinality == 1) {\n      v = getFirstDefined([\n        newFieldConfig?.defaultValue,\n        newFieldConfig?.fieldSettings?.defaultValue,\n        firstWidgetConfig?.defaultValue\n      ]);\n    }\n    return v;\n  }));\n\n  newValueSrc = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n    let vs = null;\n    if (canReuseValue) {\n      if (i < currentValueSrc.size)\n        vs = currentValueSrc.get(i);\n    } else if (valueSources.length == 1) {\n      vs = valueSources[0];\n    } else if (valueSources.length > 1) {\n      vs = valueSources[0];\n    }\n    return vs;\n  }));\n\n  if (showErrorMessage) {\n    if (newOperatorConfig && newOperatorConfig.validateValues && newValueSrc.toJS().filter(vs => vs == \"value\" || vs == null).length == operatorCardinality) {\n      // last element in `valueError` list is for range validation error\n      const jsValues = firstWidgetConfig && firstWidgetConfig.toJS \n        ? newValue.toJS().map(v => firstWidgetConfig.toJS.call(config.ctx, v, firstWidgetConfig)) \n        : newValue.toJS();\n      const rangeValidateError = newOperatorConfig.validateValues(jsValues);\n      if (showErrorMessage) {\n        valueErrors.push(rangeValidateError);\n      }\n    }\n    newValueError = new Immutable.List(valueErrors);\n  }\n\n  newValueType = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n    let vt = null;\n    if (canReuseValue) {\n      if (i < currentValueType.size)\n        vt = currentValueType.get(i);\n    } else if (operatorCardinality == 1 && firstWidgetConfig && firstWidgetConfig.type !== undefined) {\n      vt = firstWidgetConfig.type;\n    } else if (operatorCardinality == 1 && newFieldConfig && newFieldConfig.type !== undefined) {\n      vt = newFieldConfig.type == \"!group\" ? \"number\" : newFieldConfig.type;\n    }\n    return vt;\n  }));\n\n  return {canReuseValue, newValue, newValueSrc, newValueType, newValueError, operatorCardinality};\n};\n\nexport const getFirstField = (config, parentRuleGroupPath = null) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parentPathArr = getFieldParts(parentRuleGroupPath, config);\n  const parentField = parentRuleGroupPath ? getFieldRawConfig(config, parentRuleGroupPath) : config;\n\n  let firstField = parentField, key = null, keysPath = [];\n  do {\n    const subfields = firstField === config ? config.fields : firstField?.subfields;\n    if (!subfields || !Object.keys(subfields).length) {\n      firstField = key = null;\n      break;\n    }\n    key = Object.keys(subfields)[0];\n    keysPath.push(key);\n    firstField = subfields[key];\n  } while (firstField.type == \"!struct\" || firstField.type == \"!group\");\n  return (parentPathArr || []).concat(keysPath).join(fieldSeparator);\n};\n\nexport const getOperatorsForType = (config, fieldType) => {\n  return config.types[fieldType]?.operators || null;\n};\n\nexport const getOperatorsForField = (config, field) => {\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOps = fieldConfig ? fieldConfig.operators : [];\n  return fieldOps;\n};\n\nexport const getFirstOperator = (config, field) => {\n  const fieldOps = getOperatorsForField(config, field);\n  return fieldOps?.[0] ?? null;\n};\n\nexport const getFuncPathLabels = (field, config, parentField = null) => {\n  return getFieldPathLabels(field, config, parentField, \"funcs\", \"subfields\");\n};\n\nexport const getFieldPathLabels = (field, config, parentField = null, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  const parentParts = getFieldParts(parentField, config);\n  const res = parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => [...parentParts, ...parts].join(fieldSeparator))\n    .map(part => {\n      const cnf = getFieldRawConfig(config, part, fieldsKey, subfieldsKey);\n      return cnf && cnf.label || last(part.split(fieldSeparator));\n    })\n    .filter(label => label != null);\n  return res;\n};\n\nexport const getFieldPartsConfigs = (field, config, parentField = null) => {\n  if (!field)\n    return null;\n  const parentFieldDef = parentField && getFieldRawConfig(config, parentField) || null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  const isDescendant = isFieldDescendantOfField(field, parentField, config);\n  const parentParts = !isDescendant ? [] : getFieldParts(parentField, config);\n  return parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => ({\n      part: [...parentParts, ...parts].join(fieldSeparator),\n      key: parts[parts.length - 1]\n    }))\n    .map(({part, key}) => {\n      const cnf = getFieldRawConfig(config, part);\n      return {key, cnf};\n    })\n    .map(({key, cnf}, ind, arr) => {\n      const parentCnf = ind > 0 ? arr[ind - 1].cnf : parentFieldDef;\n      return [key, cnf, parentCnf];\n    });\n};\n\nexport const getValueLabel = (config, field, operator, delta, valueSrc = null, isSpecialRange = false) => {\n  const isFuncArg = field && typeof field == \"object\" && !!field.func && !!field.arg;\n  const {showLabels} = config.settings;\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldWidgetConfig = getFieldWidgetConfig(config, field, operator, null, valueSrc) || {};\n  const mergedOpConfig = getOperatorConfig(config, operator, field) || {};\n    \n  const cardinality = isSpecialRange ? 1 : mergedOpConfig.cardinality;\n  let ret = null;\n  if (cardinality > 1) {\n    const valueLabels = fieldWidgetConfig.valueLabels || mergedOpConfig.valueLabels;\n    if (valueLabels)\n      ret = valueLabels[delta];\n    if (ret && typeof ret != \"object\") {\n      ret = {label: ret, placeholder: ret};\n    }\n    if (!ret) {\n      ret = {\n        label: config.settings.valueLabel + \" \" + (delta+1),\n        placeholder: config.settings.valuePlaceholder + \" \" + (delta+1),\n      };\n    }\n  } else {\n    let label = fieldWidgetConfig.valueLabel;\n    let placeholder = fieldWidgetConfig.valuePlaceholder;\n    if (isFuncArg) {\n      if (!label)\n        label = fieldConfig.label || field.arg;\n      if (!placeholder && !showLabels)\n        placeholder = fieldConfig.label || field.arg;\n    }\n\n    ret = {\n      label: label || config.settings.valueLabel, \n      placeholder: placeholder || config.settings.valuePlaceholder,\n    };\n  }\n  return ret;\n};\n\nfunction _getWidgetsAndSrcsForFieldOp (config, field, operator = null, valueSrc = null) {\n  let widgets = [];\n  let valueSrcs = [];\n  if (!field)\n    return {widgets, valueSrcs};\n  const isFuncArg = typeof field == \"object\" && (!!field.func && !!field.arg || field._isFuncArg);\n  const fieldConfig = getFieldConfig(config, field);\n  const opConfig = operator ? config.operators[operator] : null;\n  \n  if (fieldConfig?.widgets) {\n    for (const widget in fieldConfig.widgets) {\n      const widgetConfig = fieldConfig.widgets[widget];\n      if (!config.widgets[widget]) {\n        continue;\n      }\n      const widgetValueSrc = config.widgets[widget].valueSrc || \"value\";\n      let canAdd = true;\n      if (widget == \"field\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"field\"], fieldConfig).length > 0;\n      }\n      if (widget == \"func\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"func\"], fieldConfig).length > 0;\n      }\n      // If can't check operators, don't add\n      // Func args don't have operators\n      if (valueSrc == \"value\" && !widgetConfig.operators && !isFuncArg && field != \"!case_value\")\n        canAdd = false;\n      if (widgetConfig.operators && operator)\n        canAdd = canAdd && widgetConfig.operators.indexOf(operator) != -1;\n      if (valueSrc && valueSrc != widgetValueSrc && valueSrc != \"const\")\n        canAdd = false;\n      if (opConfig && opConfig.cardinality == 0 && (widgetValueSrc != \"value\"))\n        canAdd = false;\n      if (canAdd) {\n        widgets.push(widget);\n        let canAddValueSrc = fieldConfig.valueSources?.indexOf(widgetValueSrc) != -1;\n        if (opConfig?.valueSources?.indexOf(widgetValueSrc) == -1)\n          canAddValueSrc = false;\n        if (canAddValueSrc && !valueSrcs.find(v => v == widgetValueSrc))\n          valueSrcs.push(widgetValueSrc);\n      }\n    }\n  }\n\n  const widgetWeight = (w) => {\n    let wg = 0;\n    if (fieldConfig.preferWidgets) {\n      if (fieldConfig.preferWidgets.includes(w))\n        wg += (10 - fieldConfig.preferWidgets.indexOf(w));\n    } else if (w == fieldConfig.mainWidget) {\n      wg += 100;\n    }\n    if (w == \"field\") {\n      wg -= 1;\n    }\n    if (w == \"func\") {\n      wg -= 2;\n    }\n    return wg;\n  };\n\n  widgets.sort((w1, w2) => (widgetWeight(w2) - widgetWeight(w1)));\n    \n  return {widgets, valueSrcs};\n}\n\nexport const getWidgetsForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  return widgets;\n};\n\nexport const filterValueSourcesForField = (config, valueSrcs, fieldDefinition) => {\n  if (!fieldDefinition)\n    return valueSrcs;\n  const fieldType = fieldDefinition.type ?? fieldDefinition.returnType;\n  if (!valueSrcs)\n    valueSrcs = Object.keys(config.settings.valueSourcesInfo);\n  return valueSrcs.filter(vs => {\n    let canAdd = true;\n    if (vs == \"field\") {\n      if (config.__fieldsCntByType) {\n        // tip: LHS field can be used as arg in RHS function\n        const minCnt = fieldDefinition._isFuncArg ? 0 : 1;\n        canAdd = canAdd && config.__fieldsCntByType[fieldType] > minCnt;\n      }\n    }\n    if (vs == \"func\") {\n      if (config.__funcsCntByType)\n        canAdd = canAdd && !!config.__funcsCntByType[fieldType];\n      if (fieldDefinition.funcs)\n        canAdd = canAdd && fieldDefinition.funcs.length > 0;\n    }\n    return canAdd;\n  });\n};\n\nexport const getValueSourcesForFieldOp = (config, field, operator, fieldDefinition = null) => {\n  const {valueSrcs} = _getWidgetsAndSrcsForFieldOp(config, field, operator, null);\n  const filteredValueSrcs = filterValueSourcesForField(config, valueSrcs, fieldDefinition);\n  return filteredValueSrcs;\n};\n\nexport const getWidgetForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  let widget = null;\n  if (widgets.length)\n    widget = widgets[0];\n  return widget;\n};\n\n// can use alias (fieldName)\n// even if `parentField` is provided, `field` is still a full path\nexport const formatFieldName = (field, config, meta, parentField = null, options = {}) => {\n  if (!field) return;\n  const fieldDef = getFieldConfig(config, field) || {};\n  const {fieldSeparator} = config.settings;\n  const fieldParts = getFieldParts(field, config);\n  let fieldName = Array.isArray(field) ? field.join(fieldSeparator) : field;\n  if (options?.useTableName && fieldDef.tableName) { // legacy\n    const fieldPartsCopy = [...fieldParts];\n    fieldPartsCopy[0] = fieldDef.tableName;\n    fieldName = fieldPartsCopy.join(fieldSeparator);\n  }\n  if (fieldDef.fieldName) {\n    fieldName = fieldDef.fieldName;\n  }\n  if (parentField) {\n    const parentFieldDef = getFieldConfig(config, parentField) || {};\n    let parentFieldName = parentField;\n    if (fieldName.indexOf(parentFieldName + fieldSeparator) == 0) {\n      fieldName = fieldName.slice((parentFieldName + fieldSeparator).length);\n      // fieldName = \"#this.\" + fieldName; // ? for spel\n    } else {\n      if (fieldDef.fieldName) {\n        // ignore\n      } else {\n        meta.errors.push(`Can't cut group ${parentFieldName} from field ${fieldName}`);\n      }\n    }\n  }\n  return fieldName;\n};\n\n\nexport const isEmptyItem = (item, config, liteCheck = false) => {\n  const type = item.get(\"type\");\n  const mode = item.getIn([\"properties\", \"mode\"]);\n  if (type == \"rule_group\" && mode == \"array\") {\n    return isEmptyRuleGroupExt(item, config, liteCheck);\n  } else if (type == \"group\" || type == \"rule_group\") {\n    return isEmptyGroup(item, config, liteCheck);\n  } else {\n    return isEmptyRule(item, config, liteCheck);\n  }\n};\n\nconst isEmptyRuleGroupExt = (item, config, liteCheck = false) => {\n  const children = item.get(\"children1\");\n  const properties = item.get(\"properties\");\n  return isEmptyRuleGroupExtPropertiesAndChildren(properties.toObject(), children, config, liteCheck);\n};\n\nexport const isEmptyRuleGroupExtPropertiesAndChildren = (properties, children, config, liteCheck = false) => {\n  const operator = properties.operator;\n  const cardinality = config.operators[operator]?.cardinality ?? 1;\n  const filledParts = [\n    !isEmptyRuleProperties(properties, config, false),\n    cardinality > 0 ? true : !isEmptyGroupChildren(children, config, liteCheck),\n  ];\n  const filledCnt = filledParts.filter(f => !!f).length;\n  const isFilled = filledCnt == 2;\n  return !isFilled;\n};\n\nconst isEmptyGroup = (group, config, liteCheck = false) => {\n  const children = group.get(\"children1\");\n  return isEmptyGroupChildren(children, config, liteCheck);\n};\n\nexport const isEmptyGroupChildren = (children, config, liteCheck = false) => {\n  return !children || children.size == 0\n    || children.size > 0 && children.filter(ch => !isEmptyItem(ch, config, liteCheck)).size == 0;\n};\n\nexport const isEmptyRuleProperties = ({\n  field, fieldSrc, fieldType,\n  operator,\n  value, valueSrc, valueType,\n}, config, liteCheck = false) => {\n  const cardinality = config.operators[operator]?.cardinality ?? 1;\n  const filledParts = [\n    liteCheck ? (field !== null || fieldType != null) : isCompletedValue(field, fieldSrc, config, liteCheck),\n    !!operator,\n    value.filter((val, delta) => \n      isCompletedValue(val, valueSrc?.get?.(delta) || valueSrc?.[delta], config, liteCheck)\n    ).size >= cardinality\n  ];\n  const filledCnt = filledParts.filter(f => !!f).length;\n  const isFilled = filledCnt == 3;\n  return !isFilled;\n};\n\nconst isEmptyRule = (rule, config, liteCheck = false) => {\n  const properties = rule.get(\"properties\");\n  return isEmptyRuleProperties(properties.toObject(), config, liteCheck);\n};\n\nexport const isCompletedValue = (value, valueSrc, config, liteCheck = false) => {\n  if (!liteCheck && valueSrc == \"func\" && value) {\n    const funcKey = value.get(\"func\");\n    const funcConfig = getFuncConfig(config, funcKey);\n    if (funcConfig) {\n      const args = value.get(\"args\");\n      for (const argKey in funcConfig.args) {\n        const argConfig = funcConfig.args[argKey];\n        const argVal = args ? args.get(argKey) : undefined;\n        // const argDef = getFieldConfig(config, argConfig);\n        const argValue = argVal ? argVal.get(\"value\") : undefined;\n        const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n        if (argValue == undefined && argConfig?.defaultValue === undefined && !argConfig?.isOptional) {\n          // arg is not completed\n          return false;\n        }\n        if (argValue != undefined) {\n          if (!isCompletedValue(argValue, argValueSrc, config, liteCheck)) {\n            // arg is complex and is not completed\n            return false;\n          }\n        }\n      }\n      // all args are completed\n      return true;\n    }\n  }\n  return value != undefined;\n};\n\n/**\n * @param {*} value\n * @param {string} valueSrc - 'value' | 'field' | 'func'\n * @param {object} config\n * @return {* | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeValue = (value, valueSrc, config) => {\n  if (valueSrc == \"func\")\n    return completeFuncValue(value, config);\n  else\n    return value;\n};\n","import JL from \"json-logic-js\";\nimport moment from \"moment\";\n\nexport function applyJsonLogic(logic, data) {\n  return JL.apply(logic, data);\n}\n\nfunction addJsonLogicOperation(name, op) {\n  return JL.add_operation(name, op);\n}\n\nexport const customJsonLogicOperations = {\n  CALL: (fn, ctx, ...args) => (fn.call(ctx, ...args)),\n  JSX: (type, props) => ({type, props}),\n  mergeObjects: (obj1, obj2) => ({...obj1, ...obj2}),\n  fromEntries: (entries) => Object.fromEntries(entries),\n  strlen: (str) => (str?.length || 0),\n  regexTest: (str, pattern, flags) => str?.match(new RegExp(pattern, flags)) != null,\n  now: () => new Date(),\n  date_add: (date, val, dim) => { return moment(date).add(val, dim).toDate(); },\n  toLowerCase: (str) => str.toLowerCase(),\n  toUpperCase: (str) => str.toUpperCase(),\n};\n\nexport function addRequiredJsonLogicOperations() {\n  for (let k in customJsonLogicOperations) {\n    addJsonLogicOperation(k, customJsonLogicOperations[k]);\n  }\n}\n","import merge from \"lodash/merge\";\nimport pick from \"lodash/pick\";\nimport {isJsonLogic, isJSX, isDirtyJSX, cleanJSX, shallowEqual} from \"./stuff\";\nimport clone from \"clone\";\nimport JL from \"json-logic-js\";\nimport { addRequiredJsonLogicOperations, applyJsonLogic } from \"./jsonLogic\";\nimport { BasicFuncs } from \"..\";\nimport { getFieldRawConfig } from \"./configUtils\";\n\n// Add new operations for JsonLogic\naddRequiredJsonLogicOperations();\n\nexport { isJSX, isDirtyJSX, cleanJSX, applyJsonLogic };\n\nfunction applyJsonLogicWithPath(logic, data, path) {\n  let ret;\n  try {\n    ret = JL.apply(logic, data);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\nfunction callContextFn(_this, fn, args, path) {\n  let ret;\n  try {\n    ret = fn.call(_this, ...args);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\nexport const configKeys = [\"conjunctions\", \"fields\", \"types\", \"operators\", \"widgets\", \"settings\", \"funcs\", \"ctx\"];\n\n// type: \n//  x - iterate (with nesting `subfields`)\n//  \"r\" - RenderedReactElement\n//    Will be compiled with renderReactElement() into React element rendered with `React.createElement` (`ctx.RCE`)\n//  \"rf\" - JsonLogicFunction/string to render React\n//    JL data is { props, ctx }\n//    Should return {type, props} or string, where type or string - React component\n//    Can use { JSX: [\"SomeComponent\", {var: \"props\"}] } or just return \"SomeComponent\"\n//    Returned component will be searched in ctx.components/ctx.W/ctx.O, see getReactComponentFromCtx()\n//    Will be compiled with compileJsonLogicReact() into function with args (props, ctx) that will return renderReactElement()\n//  \"f\" - JsonLogicFunction/string\n//    JL data is { args, ctx } plus named args defined in `args` inside `compileMeta`\n//    Can use { CALL: [ {var: \"ctx.someFunc\"}, null, {var: \"args[0]\" }] } \n//    If string is passed, it's a path to function in ctx (with dot notation)\n//    Will be compiled with compileJsonLogic() into function with any args and `this` should be `ctx`\n\nconst compileMetaFieldSettings = {\n  asyncFetch: { type: \"f\", args: [\"search\", \"offset\"] },\n  labelYes: { type: \"r\" },\n  labelNo: { type: \"r\" },\n  marks: { type: \"r\", isArr: true },\n  validateValue: { type: \"f\", args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"] },\n};\n\nconst compileMetaWidget = {\n  ...compileMetaFieldSettings,\n  factory: { type: \"rf\" },\n  formatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"isForDisplay\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  sqlFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  spelFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  spelImportValue: { type: \"f\", args: [\"val\", \"wgtDef\", \"args\"] },\n  mongoFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  elasticSearchFormatValue: { type: \"f\", args: [\"queryType\", \"val\", \"op\", \"field\", \"config\"] },\n  jsonLogic: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  validateValue: { type: \"f\", args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"] }, // obsolete\n  toJS: { type: \"f\", args: [\"val\"] },\n};\n\nconst compileMetaOperator = {\n  options: { // proximity\n    factory: { type: \"rf\" },\n  },\n  formatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"isForDisplay\", \"fieldDef\"] },\n  mongoFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"useExpr\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  sqlFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  spelFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"field\", \"op\", \"vals\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  elasticSearchQueryType: { type: \"f\", ignore: \"string\", args: [\"valueType\"] },\n  textSeparators: { type: \"r\", isArr: true },\n};\n\nconst compileMetaConjunction = {\n  formatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"isForDisplay\"] },\n  sqlFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\"] },\n  spelFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"omitBrackets\"] },\n};\n\nconst compileMetaWidgetForType = {\n  widgetProps: compileMetaWidget,\n  opProps: compileMetaOperator\n};\n\nconst compileMetaFunc = {\n  renderBrackets: { type: \"r\", isArr: true },\n  renderSeps: { type: \"r\", isArr: true },\n\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"formattedArgs\"] },\n  jsonLogicImport: { type: \"f\", args: [\"val\"] },\n  spelImport: { type: \"f\", args: [\"spel\"] },\n  formatFunc: { type: \"f\", args: [\"formattedArgs\", \"isForDisplay\"] },\n  sqlFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n  mongoFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n  spelFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n};\n\nconst compileMetaSettings = {\n  locale: {\n    mui: { type: \"f\", args: [], invokeWith: [], ignore: \"jl\" },\n  },\n\n  canCompareFieldWithField: { type: \"f\", args: [\"leftField\", \"leftFieldConfig\", \"rightField\", \"rightFieldConfig\", \"op\"] },\n  formatReverse: { type: \"f\", args: [\"q\", \"op\", \"reversedOp\", \"operatorDefinition\", \"revOperatorDefinition\", \"isForDisplay\"] },\n  sqlFormatReverse: { type: \"f\", args: [\"q\"] },\n  spelFormatReverse: { type: \"f\", args: [\"q\"] },\n  formatField: { type: \"f\", args: [\"field\", \"parts\", \"label2\", \"fieldDefinition\", \"config\", \"isForDisplay\"] },\n  formatSpelField: { type: \"f\", args: [\"field\", \"parentField\", \"parts\", \"partsExt\", \"fieldDefinition\", \"config\"] },\n  formatAggr: { type: \"f\", args: [\"whereStr\", \"aggrField\", \"operator\", \"value\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"isForDisplay\", \"aggrFieldDef\"] },\n  \n  normalizeListValues: { type: \"f\", args: [\"listValues\", \"type\", \"fieldSettings\"] },\n\n  renderConfirm: { type: \"f\", args: [\"props\"] },\n  useConfirm: { type: \"f\", args: [] },\n\n  renderField: { type: \"rf\" },\n  renderOperator: { type: \"rf\" },\n  renderFunc: { type: \"rf\" },\n  renderConjs: { type: \"rf\" },\n  renderButton: { type: \"rf\" },\n  renderIcon: { type: \"rf\" },\n  renderButtonGroup: { type: \"rf\" },\n  renderValueSources: { type: \"rf\" },\n  renderFieldSources: { type: \"rf\" },\n  renderProvider: { type: \"rf\" },\n  renderSwitch: { type: \"rf\" },\n  renderSwitchPrefix: { type: \"r\" },\n\n  renderItem: { type: \"rf\" },\n  renderBeforeWidget: { type: \"rf\" },\n  renderAfterWidget: { type: \"rf\" },\n  renderBeforeActions: { type: \"rf\" },\n  renderAfterActions: { type: \"rf\" },\n  renderRuleError: { type: \"rf\" },\n};\n\nconst compileMeta = {\n  fields: {\n    x: {\n      fieldSettings: compileMetaFieldSettings,\n      widgets: {\n        x: compileMetaWidgetForType\n      },\n      mainWidgetProps: compileMetaWidget\n    },\n  },\n  widgets: {\n    x: compileMetaWidget\n  },\n  conjunctions: {\n    x: compileMetaConjunction\n  },\n  operators: {\n    x: compileMetaOperator\n  },\n  types: {\n    x: {\n      widgets: {\n        x: compileMetaWidgetForType\n      }\n    }\n  },\n  funcs: {\n    x: compileMetaFunc\n  },\n  settings: compileMetaSettings,\n};\n\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\n/////////////\n\nexport const compressConfig = (config, baseConfig) => {\n  if (config.__fieldNames) {\n    throw new Error(\"Don't apply `compressConfig()` to extended config\");\n  }\n  let zipConfig = pick(config, configKeys);\n  delete zipConfig.ctx;\n\n  const _clean = (target, base, path, meta) => {\n    if (isObject(target)) {\n      if (isDirtyJSX(target)) {\n        target = cleanJSX(target);\n      }\n      if (path[0] === \"funcs\" && !base) {\n        const funcKey = path[path.length - 1];\n        // todo: if there will be change in `BasicFuncs` when funcs can be nested, need to chnage code to find `base`\n        base = getFieldRawConfig({\n          funcs: meta.BasicFuncs\n        }, funcKey, \"funcs\", \"subfields\") || undefined;\n        if (base) {\n          target[\"$$key\"] = funcKey;\n        }\n      }\n      if (base !== undefined && isObject(base)) {\n        for (let k in base) {\n          if (Object.prototype.hasOwnProperty.call(base, k)) {\n            if (!Object.keys(target).includes(k) || target[k] === undefined && base[k] !== undefined) {\n              // deleted in target\n              target[k] = \"$$deleted\";\n            } else {\n              target[k] = _clean(target[k], base[k], [...path, k], meta);\n              if (target[k] === undefined) {\n                delete target[k];\n              }\n            }\n          }\n        }\n      }\n      for (let k in target) {\n        if (Object.prototype.hasOwnProperty.call(target, k)) {\n          if (!base || !Object.keys(base).includes(k)) {\n            // new in target\n            target[k] = _clean(target[k], base?.[k], [...path, k], meta);\n          }\n          if (target[k] === undefined) {\n            delete target[k];\n          }\n        }\n      }\n      if (Object.keys(target).length === 0) {\n        target = undefined;\n      }\n    } else if (Array.isArray(target)) {\n      // don't deep compare arrays, but allow clean JSX inside array\n      target.forEach((val, ind) => {\n        target[ind] = _clean(target[ind], undefined, [...path, ind], meta);\n      });\n    }\n\n    if (base !== undefined && shallowEqual(target, base, true)) {\n      return undefined;\n    }\n\n    if (typeof target === \"function\") {\n      throw new Error(`compressConfig: function at ${path.join(\".\")} should be converted to JsonLogic`);\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // ignore\n    } else if (rootKey === \"fields\") {\n      // just copy\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], {}, [rootKey]);\n    } else if (rootKey === \"funcs\") {\n      // leave only diff for every used func\n      zipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      for (let k in zipConfig[rootKey]) {\n        _clean(zipConfig[rootKey][k], null, [rootKey, k], {\n          BasicFuncs\n        });\n      }\n    } else {\n      // leave only diff\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], baseConfig[rootKey], [rootKey]);\n    }\n  }\n\n  return zipConfig;\n};\n\n\nexport const decompressConfig = (zipConfig, baseConfig, ctx) => {\n  if (!zipConfig.settings.useConfigCompress) {\n    throw new Error(\"Please enable `useConfigCompress` in config settings to use decompressConfig()\");\n  }\n  let unzipConfig = {};\n\n  const _mergeDeep = (target, mixin, path) => {\n    if (isObject(mixin)) {\n      if (!isObject(target)) {\n        target = {};\n      }\n      for (let k in mixin) {\n        if (Object.prototype.hasOwnProperty.call(mixin, k)) {\n          if (mixin[k] === \"$$deleted\") {\n            delete target[k];\n          } else {\n            target[k] = _mergeDeep(target[k], mixin[k], [...path, k]);\n          }\n        }\n      }\n    } else if (Array.isArray(mixin)) {\n      // don't merge arrays, just replace\n      target = clone(mixin);\n    } else {\n      target = mixin;\n    }\n\n    return target;\n  };\n\n  const _resolveAndMergeDeep = (target, path, meta) => {\n    // try to resolve by $$key and merge\n    let resolved = false;\n    if (isObject(target) && Object.prototype.hasOwnProperty.call(target, \"$$key\") && target[\"$$key\"]) {\n      const func = getFieldRawConfig({\n        funcs: meta.BasicFuncs\n      }, target[\"$$key\"], \"funcs\", \"subfields\");\n      if (func) {\n        // deep merge func <- zip\n        delete target[\"$$key\"];\n        target = _mergeDeep(clone(func), target, path);\n        resolved = true;\n      } else {\n        throw new Error(`decompressConfig: basic function not found by key ${target[\"$$key\"]} at ${path.join(\".\")}`);\n      }\n    }\n\n    if (!resolved) {\n      if (isObject(target)) {\n        // loop through object to find refs ($$key)\n        for (let k in target) {\n          if (Object.prototype.hasOwnProperty.call(target, k)) {\n            target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n          }\n        }\n      } else if (Array.isArray(target)) {\n        // also loop through array to find refs ($$key)\n        for (const k of target) {\n          target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n        }\n      }\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // simple deep merge\n      unzipConfig[rootKey] = merge({}, baseConfig.ctx || {}, ctx || {});\n    } else if (rootKey === \"funcs\") {\n      // use $$key to pick funcs from BasicFuncs\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      _resolveAndMergeDeep(unzipConfig[rootKey], [rootKey], {\n        BasicFuncs\n      });\n    } else if (rootKey === \"fields\") {\n      // just copy\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n    } else {\n      // deep merge base <- zip\n      unzipConfig[rootKey] = clone(baseConfig[rootKey] || {});\n      _mergeDeep(unzipConfig[rootKey], zipConfig[rootKey] || {}, [rootKey]);\n    }\n  }\n\n  return unzipConfig;\n};\n\n/////////////\n\nexport const compileConfig = (config) => {\n  if (config.__compliled) {\n    return config;\n  }\n\n  config = clone(config);\n\n  const opts = {\n    ctx: config.ctx,\n  };\n\n  const logs = [];\n  _compileConfigParts(config, config, opts, compileMeta, logs);\n  //console.log(logs.join(\"\\n\"));\n\n  Object.defineProperty(config, \"__compliled\", {\n    enumerable: false,\n    writable: false,\n    value: true\n  });\n\n  return config;\n};\n\nfunction _compileConfigParts(config, subconfig, opts, meta, logs, path = []) {\n  if (!subconfig) return;\n  const isRoot = !path.length;\n  for (const k in meta) {\n    const submeta = meta[k];\n    let newPath = k === \"x\" ? path : [...path, k];\n    // if (isRoot) {\n    //   //logs.push(`Cloned ${newPath.join(\".\")}`);\n    //   config[k] = clone(config[k]);\n    // }\n    if (submeta.type === \"r\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      if (submeta.isArr) {\n        for (const ind in val) {\n          const newVal = renderReactElement(val[ind], opts, [...newPath, ind]);\n          if (newVal !== val[ind]) {\n            logs.push(`Compiled ${newPath.join(\".\")}[${ind}]`);\n            val[ind] = newVal;\n          }\n        }\n      } else {\n        const newVal = renderReactElement(val, opts, newPath, undefined);\n        if (newVal !== val) {\n          logs.push(`Compiled R ${newPath.join(\".\")}`);\n          targetObj[k] = newVal;\n        }\n      }\n    } else if (submeta.type === \"rf\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      const newVal = compileJsonLogicReact(val, opts, newPath, submeta.ignore);\n      if (newVal !== val) {\n        logs.push(`Compiled JL-RF ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (submeta.type === \"f\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      let newVal = compileJsonLogic(val, opts, newPath, submeta.args, submeta.ignore);\n      if (submeta.invokeWith && newVal && typeof newVal === \"function\") {\n        newVal = newVal.call(null, ...submeta.invokeWith);\n      }\n      if (newVal !== val) {\n        logs.push(`Compiled JL-F ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (k === \"x\") {\n      for (const field in subconfig) {\n        newPath = [...path, field];\n        const def = subconfig[field];\n        _compileConfigParts(config, def, opts, submeta, logs, newPath);\n        if (def.subfields) {\n          // tip: need to pass `meta`, not `submeta`\n          _compileConfigParts(config, def.subfields, opts, meta, logs, newPath);\n        }\n      }\n    } else {\n      const def = subconfig[k];\n      _compileConfigParts(config, def, opts, submeta, logs, newPath);\n    }\n  }\n}\n\nfunction compileJsonLogicReact(jl, opts, path, ignore = undefined) {\n  if (isJsonLogic(jl)) {\n    return function(props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = {\n        props, ctx,\n      };\n      let re = applyJsonLogicWithPath(jl, data, path);\n      if (typeof re === \"string\") {\n        re = {\n          type: re,\n          props\n        };\n      }\n      \n      const ret = renderReactElement(re, {ctx}, path);\n      return ret;\n    };\n  } else if (typeof jl === \"string\") {\n    return function(props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, [props, ctx], path);\n      } else {\n        const re = {\n          type: jl,\n          props\n        };\n        const ret = renderReactElement(re, {ctx}, path);\n        return ret;\n      }\n    };\n  }\n  return jl;\n}\n\nfunction compileJsonLogic(jl, opts, path, argNames, ignore = undefined) {\n  if (isJsonLogic(jl) && ignore !== \"jl\") {\n    return function(...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = (argNames || []).reduce((acc, k, i) => ({...acc, [k]: args[i]}), {\n        args, ctx\n      });\n      const ret = applyJsonLogicWithPath(jl, data, path);\n      return ret;\n    }.bind(opts?.ctx);\n  } else if (typeof jl === \"string\" && ignore !== \"string\") {\n    return function(...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, args, path);\n      } else {\n        throw new Error(`${path.join(\".\")} :: Function ${jl} is not found in ctx`);\n      }\n    }.bind(opts?.ctx);\n  }\n  return jl;\n}\n\n\n\nfunction getReactComponentFromCtx(name, ctx) {\n  return ctx?.components?.[name] || ctx.W[name] || ctx.O[name];\n}\n\nfunction renderReactElement(jsx, opts, path, key = undefined) {\n  if (isJSX(jsx)) {\n    let { type, props } = jsx;\n    if (typeof type !== \"string\") {\n      throw new Error(`renderReactElement for ${path.join(\".\")}: type should be string`);\n    }\n    const Cmp = getReactComponentFromCtx(type, opts.ctx) || type.toLowerCase();\n    let children;\n    if (key !== undefined) {\n      props = { ...props, key };\n    }\n    if (props?.children) {\n      children = renderReactElement(props.children, opts, path);\n      props = { ...props, children };\n    }\n    const res = opts.ctx.RCE(Cmp, props);\n    return res;\n  } else if (jsx instanceof Array) {\n    return jsx.map((el, i) => renderReactElement(el, opts, path, \"\"+i));\n  }\n  return jsx;\n}\n","import merge from \"lodash/merge\";\nimport pick from \"lodash/pick\";\nimport uuid from \"../utils/uuid\";\nimport mergeWith from \"lodash/mergeWith\";\nimport {settings as defaultSettings} from \"../config/default\";\nimport moment from \"moment\";\nimport {mergeArraysSmart, logger, widgetDefKeysToOmit, deepFreeze} from \"./stuff\";\nimport {getWidgetForFieldOp} from \"./ruleUtils\";\nimport clone from \"clone\";\n\nimport { compileConfig } from \"./configSerialize\";\nexport * from \"./configSerialize\";\n\n/////////////\n\nexport const extendConfig = (config, configId, canCompile = true) => {\n  //operators, defaultOperator - merge\n  //widgetProps (including valueLabel, valuePlaceholder, hideOperator, operatorInlineLabel) - concrete by widget\n\n  if (config.__configId) {\n    return config;\n  }\n\n  // Clone (and compile if need)\n  if (canCompile && config.settings.useConfigCompress) {\n    if (config.__compliled) {\n      // already compiled\n      config = clone(config);\n    } else {\n      // will be cloned and compiled\n      config = compileConfig(config);\n    }\n  } else {\n    config = clone(config);\n  }\n\n  config.settings = mergeWith({}, defaultSettings, config.settings, mergeCustomizerNoArrays);\n\n  config.__fieldsCntByType = {};\n  config.__funcsCntByType = {};\n  config.__fieldNames = {};\n\n  _extendTypesConfig(config.types, config);\n  _extendFieldsConfig(config.fields, config);\n  _extendFuncArgsConfig(config.funcs, config);\n\n  const momentLocale = config.settings.locale.moment;\n  if (momentLocale) {\n    moment.locale(momentLocale);\n  }\n\n  Object.defineProperty(config, \"__configId\", {\n    enumerable: false,\n    writable: false,\n    value: configId || uuid()\n  });\n\n  deepFreeze(config);\n\n  return config;\n};\n\nfunction _extendTypesConfig(typesConfig, config) {\n  for (let type in typesConfig) {\n    let typeConfig = typesConfig[type];\n    _extendTypeConfig(type, typeConfig, config);\n  }\n}\n\nfunction _extendTypeConfig(type, typeConfig, config) {\n  let operators = null, defaultOperator = null;\n  typeConfig.mainWidget = typeConfig.mainWidget || Object.keys(typeConfig.widgets).filter(w => w != \"field\" && w != \"func\")[0];\n  for (let widget in typeConfig.widgets) {\n    let typeWidgetConfig = typeConfig.widgets[widget];\n    if (typeWidgetConfig.operators) {\n      let typeWidgetOperators = typeWidgetConfig.operators;\n      if (typeConfig.excludeOperators) {\n        typeWidgetOperators = typeWidgetOperators.filter(op => !typeConfig.excludeOperators.includes(op));\n      }\n      operators = mergeArraysSmart(operators, typeWidgetOperators);\n    }\n    if (typeWidgetConfig.defaultOperator)\n      defaultOperator = typeWidgetConfig.defaultOperator;\n    if (widget == typeConfig.mainWidget) {\n      typeWidgetConfig = merge({}, {widgetProps: typeConfig.mainWidgetProps || {}}, typeWidgetConfig);\n    }\n    typeConfig.widgets[widget] = typeWidgetConfig;\n  }\n  if (!typeConfig.valueSources)\n    typeConfig.valueSources = Object.keys(config.settings.valueSourcesInfo);\n  for (let valueSrc of typeConfig.valueSources) {\n    if (valueSrc != \"value\" && !typeConfig.widgets[valueSrc]) {\n      typeConfig.widgets[valueSrc] = {\n      };\n    }\n  }\n  if (!typeConfig.operators && operators)\n    typeConfig.operators = Array.from(new Set(operators)); //unique\n  if (!typeConfig.defaultOperator && defaultOperator)\n    typeConfig.defaultOperator = defaultOperator;\n}\n\nfunction _extendFieldsConfig(subconfig, config, path = []) {\n  for (let field in subconfig) {\n    _extendFieldConfig(subconfig[field], config, [...path, field]);\n    if (subconfig[field].subfields) {\n      _extendFieldsConfig(subconfig[field].subfields, config, [...path, field]);\n    }\n  }\n}\n\nfunction _extendFuncArgsConfig(subconfig, config, path = []) {\n  if (!subconfig) return;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  for (let funcKey in subconfig) {\n    const funcPath = [...path, funcKey].join(fieldSeparator);\n    const funcDef = subconfig[funcKey];\n    if (funcDef.returnType) {\n      if (!config.__funcsCntByType[funcDef.returnType])\n        config.__funcsCntByType[funcDef.returnType] = 0;\n      config.__funcsCntByType[funcDef.returnType]++;\n    }\n    for (let argKey in funcDef.args) {\n      _extendFieldConfig(funcDef.args[argKey], config, null, true);\n    }\n\n    // isOptional can be only in the end\n    if (funcDef.args) {\n      const argKeys = Object.keys(funcDef.args);\n      let tmpIsOptional = true;\n      for (const argKey of argKeys.reverse()) {\n        const argDef = funcDef.args[argKey];\n        if (!tmpIsOptional && argDef.isOptional) {\n          logger.info(`Arg ${argKey} for func ${funcPath} can't be optional`);\n          delete argDef.isOptional;\n        }\n        if (!argDef.isOptional)\n          tmpIsOptional = false;\n      }\n    }\n\n    if (funcDef.subfields) {\n      _extendFuncArgsConfig(funcDef.subfields, config, [...path, funcKey]);\n    }\n  }\n}\n\nfunction _extendFieldConfig(fieldConfig, config, path = null, isFuncArg = false) {\n  let operators = null, defaultOperator = null;\n  const typeConfig = config.types[fieldConfig.type];\n  const excludeOperatorsForField = fieldConfig.excludeOperators || [];\n  if (fieldConfig.type != \"!struct\" && fieldConfig.type != \"!group\") {\n    const keysToPutInFieldSettings = [\"listValues\", \"treeValues\", \"allowCustomValues\", \"validateValue\"];\n    if (!fieldConfig.fieldSettings)\n      fieldConfig.fieldSettings = {};\n    for (const k of keysToPutInFieldSettings) {\n      if (fieldConfig[k]) {\n        fieldConfig.fieldSettings[k] = fieldConfig[k];\n        delete fieldConfig[k];\n      }\n    }\n\n    // normalize listValues\n    if (fieldConfig.fieldSettings.listValues) {\n      if (config.settings.normalizeListValues) {\n        fieldConfig.fieldSettings.listValues = config.settings.normalizeListValues.call(\n          config.ctx,\n          fieldConfig.fieldSettings.listValues, fieldConfig.type, fieldConfig.fieldSettings\n        );\n      }\n    }\n    // same for treeValues\n    if (fieldConfig.fieldSettings.treeValues) {\n      if (config.settings.normalizeListValues) {\n        fieldConfig.fieldSettings.treeValues = config.settings.normalizeListValues.call(\n          config.ctx,\n          fieldConfig.fieldSettings.treeValues, fieldConfig.type, fieldConfig.fieldSettings\n        );\n      }\n    }\n\n    if (!typeConfig) {\n      //console.warn(`No type config for ${fieldConfig.type}`);\n      fieldConfig.disabled = true;\n      return;\n    }\n    if (!isFuncArg) {\n      if (!config.__fieldsCntByType[fieldConfig.type])\n        config.__fieldsCntByType[fieldConfig.type] = 0;\n      config.__fieldsCntByType[fieldConfig.type]++;\n    }\n\n    if (!fieldConfig.widgets)\n      fieldConfig.widgets = {};\n    if (isFuncArg)\n      fieldConfig._isFuncArg = true;\n    fieldConfig.mainWidget = fieldConfig.mainWidget || typeConfig.mainWidget;\n    fieldConfig.valueSources = fieldConfig.valueSources || typeConfig.valueSources;\n    const excludeOperatorsForType = typeConfig.excludeOperators || [];\n    for (let widget in typeConfig.widgets) {\n      let fieldWidgetConfig = fieldConfig.widgets[widget] || {};\n      const typeWidgetConfig = typeConfig.widgets[widget] || {};\n      if (!isFuncArg) {\n        //todo: why I've excluded isFuncArg ?\n        const excludeOperators = [...excludeOperatorsForField, ...excludeOperatorsForType];\n        const shouldIncludeOperators = fieldConfig.preferWidgets\n          && (widget == \"field\" || fieldConfig.preferWidgets.includes(widget))\n          || excludeOperators.length > 0;\n        if (fieldWidgetConfig.operators) {\n          const addOperators = fieldWidgetConfig.operators.filter(o => !excludeOperators.includes(o));\n          operators = [...(operators || []), ...addOperators];\n        } else if (shouldIncludeOperators && typeWidgetConfig.operators) {\n          const addOperators = typeWidgetConfig.operators.filter(o => !excludeOperators.includes(o));\n          operators = [...(operators || []), ...addOperators];\n        }\n        if (fieldWidgetConfig.defaultOperator)\n          defaultOperator = fieldWidgetConfig.defaultOperator;\n      }\n\n      if (widget == fieldConfig.mainWidget) {\n        fieldWidgetConfig = merge({}, {widgetProps: fieldConfig.mainWidgetProps || {}}, fieldWidgetConfig);\n      }\n      fieldConfig.widgets[widget] = fieldWidgetConfig;\n    }\n    if (!isFuncArg) {\n      if (!fieldConfig.operators && operators)\n        fieldConfig.operators = Array.from(new Set(operators));\n      fieldConfig._origDefaultOperator = fieldConfig.defaultOperator;\n      if (!fieldConfig.defaultOperator && defaultOperator)\n        fieldConfig.defaultOperator = defaultOperator;\n    }\n  }\n\n  const { fieldName, inGroup } = computeFieldName(config, path);\n  if (fieldName) {\n    fieldConfig.fieldName = fieldName;\n    if (!config.__fieldNames[fieldName])\n      config.__fieldNames[fieldName] = [];\n    config.__fieldNames[fieldName].push({fullPath: path, inGroup});\n  }\n}\n\n/////////////\n\nconst mergeCustomizerNoArrays = (objValue, srcValue, _key, _object, _source, _stack) => {\n  if (Array.isArray(objValue)) {\n    return srcValue;\n  }\n};\n\nexport function* iterateFuncs(config) {\n  yield* _iterateFields(config, config.funcs || {}, []);\n}\n\nexport function* iterateFields(config) {\n  yield* _iterateFields(config, config.fields || {}, []);\n}\n\nfunction* _iterateFields(config, subfields, path, subfieldsKey = \"subfields\") {\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  for (const fieldKey in subfields) {\n    const fieldConfig = subfields[fieldKey];\n    if (fieldConfig[subfieldsKey]) {\n      yield* _iterateFields(config, fieldConfig[subfieldsKey], [...path, fieldKey], subfieldsKey);\n    } else {\n      yield [\n        [...path, fieldKey].join(fieldSeparator),\n        fieldConfig\n      ];\n    }\n  }\n}\n\nexport const getFieldRawConfig = (config, field, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  if (field == \"!case_value\") {\n    return {\n      type: \"case_value\",\n      mainWidget: \"case_value\",\n      widgets: {\n        \"case_value\": config.widgets[\"case_value\"]\n      }\n    };\n  }\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const parts = getFieldParts(field, config);\n  const targetFields = config[fieldsKey];\n  if (!targetFields)\n    return null;\n\n  let fields = targetFields;\n  let fieldConfig = null;\n  let path = [];\n  for (let i = 0 ; i < parts.length ; i++) {\n    const part = parts[i];\n    path.push(part);\n    const pathKey = path.join(fieldSeparator);\n    fieldConfig = fields[pathKey];\n    if (i < parts.length-1) {\n      if (fieldConfig && fieldConfig[subfieldsKey]) {\n        fields = fieldConfig[subfieldsKey];\n        path = [];\n      } else {\n        fieldConfig = null;\n      }\n    }\n  }\n\n  return fieldConfig;\n};\n\nconst computeFieldName = (config, path) => {\n  if (!path)\n    return {};\n  const fieldSeparator = config.settings.fieldSeparator;\n  const {computedPath, computed, inGroup} = [...path].reduce(({computedPath, computed, inGroup}, f, i, arr) => {\n    const fullPath = [...arr.slice(0, i), f];\n    const fConfig = getFieldRawConfig(config, fullPath);\n    if (fConfig?.type === \"!group\" && i < arr.length-1) {\n      // don't include group in final field name\n      inGroup = fullPath.join(fieldSeparator);\n      computedPath = [];\n    } else if (fConfig?.fieldName) {\n      // tip: fieldName overrides path !\n      computed = true;\n      computedPath = [fConfig.fieldName];\n    } else {\n      computedPath = [...computedPath, f];\n    }\n    return {computedPath, computed, inGroup};\n  }, {computedPath: [], computed: false, inGroup: undefined});\n  return computed ? {\n    fieldName: computedPath.join(fieldSeparator),\n    inGroup,\n  } : {};\n};\n\n// if `field` is alias (fieldName), convert to original full path\nexport const normalizeField = (config, field, parentField = null) => {\n  // tip: if parentField is present, field is not full path\n  const fieldSeparator = config.settings.fieldSeparator;\n  const path = [\n    parentField,\n    ...field.split(fieldSeparator)\n  ].filter(f => f != null);\n  const findStr = field;\n  const normalizedPath = config.__fieldNames[findStr]?.find?.(({inGroup}) => {\n    if (inGroup)\n      return parentField?.startsWith(inGroup);\n    return true;\n  })?.fullPath;\n  return (normalizedPath || path).join(fieldSeparator);\n};\n\nexport const getFuncSignature = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null;\n  const {\n    returnType,\n    args,\n  } = funcConfig;\n  const argsSignature = Object.fromEntries(Object.entries(args || {}).map(([k, v]) => {\n    const argSignature = pick(v, [\n      \"type\",\n      \"valueSources\",\n      \"defaultValue\",\n      \"fieldSettings\",\n      // \"asyncListValues\", // not supported\n      \"isOptional\",\n    ]);\n    return [k, argSignature];\n  }));\n  const signature = {\n    returnType,\n    args: argsSignature,\n  };\n  return signature;\n};\n\nexport const getFuncConfig = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null; //throw new Error(\"Can't find func \" + func + \", please check your config\");\n  const typeConfig = config.types[funcConfig.returnType] || {};\n  return { ...typeConfig, ...funcConfig, type: funcConfig.returnType || funcConfig.type};\n};\n\nexport const getFuncArgConfig = (config, funcKey, argKey) => {\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return null; //throw new Error(`Can't find func ${funcKey}, please check your config`);\n  const argConfig = funcConfig.args && funcConfig.args[argKey] || null;\n  if (!argConfig)\n    return null; //throw new Error(`Can't find arg ${argKey} for func ${funcKey}, please check your config`);\n\n  //merge, but don't merge operators (rewrite instead)\n  const typeConfig = config.types[argConfig.type] || {};\n  let ret = mergeWith({}, typeConfig, argConfig || {}, mergeCustomizerNoArrays);\n\n  return ret;\n};\n\nexport const isFieldDescendantOfField = (field, parentField, config = null) => {\n  if (!parentField) return false;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const path = getFieldPath(field, config);\n  const parentPath = getFieldPath(parentField, config);\n  return path.startsWith(parentPath + fieldSeparator);\n};\n\nexport const getFieldPath = (field, config = null) => {\n  if (typeof field === \"string\")\n    return field;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  return getFieldParts(field, config).join(fieldSeparator);\n};\n\nexport const getFieldParts = (field, config = null) => {\n  if (!field)\n    return [];\n  if (Array.isArray(field))\n    return field;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  if (field?.func) {\n    return Array.isArray(field.func) ? field.func : field.func.split(fieldSeparator);\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    return field?.get?.(\"func\").split(fieldSeparator);\n  }\n  return field?.split?.(fieldSeparator) || [];\n};\n\nexport const getFieldPathParts = (field, config, onlyKeys = false) => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  if (onlyKeys)\n    return parts;\n  else\n    return parts\n      .map((_curr, ind, arr) => arr.slice(0, ind+1))\n      .map((parts) => parts.join(fieldSeparator));\n};\n\nexport const getFieldSrc = (field) => {\n  if (!field)\n    return null;\n  if (typeof field == \"object\") {\n    if (!field.func && !!field.type) {\n      // it's already a config\n      return \"field\";\n    }\n    if (field.func) {\n      if (field.func && field.arg) {\n        // it's func arg\n        return null;\n      } else {\n        // it's field func\n        return \"func\";\n      }\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return null;\n    } else {\n      // it's field func\n      return \"func\";\n    }\n  }\n  return \"field\";\n};\n\nexport const getFieldConfig = (config, field) => {\n  if (!field)\n    return null;\n  if (typeof field == \"object\") {\n    if (!field.func && !!field.type) {\n      // it's already a config\n      // if (!field.defaultOperator) {\n      //   // if not complete config..\n      //   // merge, but don't merge operators (rewrite instead)\n      //   const typeConfig = config.types[field.type] || {};\n      //   return mergeWith({}, typeConfig, field, mergeCustomizerNoArrays);\n      // }\n      return field;\n    }\n    if (field.func) {\n      if (field.func && field.arg) {\n        // it's func arg\n        return getFuncArgConfig(config, field.func, field.arg);\n      } else {\n        // it's field func\n        return getFuncConfig(config, field.func);\n      }\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return getFuncArgConfig(config, field.get(\"func\"), field.get(\"arg\"));\n    } else {\n      // it's field func\n      return getFuncConfig(config, field.get(\"func\"));\n    }\n  }\n\n  const fieldConfig = getFieldRawConfig(config, field);\n  if (!fieldConfig)\n    return null; //throw new Error(\"Can't find field \" + field + \", please check your config\");\n\n  //merge, but don't merge operators (rewrite instead)\n  const typeConfig = config.types[fieldConfig.type] || {};\n  let ret = mergeWith({}, typeConfig, fieldConfig || {}, mergeCustomizerNoArrays);\n\n  return ret;\n};\n\nexport const getOperatorConfig = (config, operator, field = null) => {\n  if (!operator)\n    return null;\n  const opConfig = config.operators[operator];\n  if (field) {\n    const fieldConfig = getFieldConfig(config, field);\n    const widget = getWidgetForFieldOp(config, field, operator, null);\n    const widgetConfig = config.widgets[widget] || {};\n    const fieldWidgetConfig = (fieldConfig && fieldConfig.widgets ? fieldConfig.widgets[widget] : {}) || {};\n    const widgetOpProps = (widgetConfig.opProps || {})[operator];\n    const fieldWidgetOpProps = (fieldWidgetConfig.opProps || {})[operator];\n    const mergedOpConfig = merge({}, opConfig, widgetOpProps, fieldWidgetOpProps);\n    return mergedOpConfig;\n  } else {\n    return opConfig;\n  }\n};\n\nexport const getFieldWidgetConfig = (config, field, operator, widget = null, valueSrc = null) => {\n  if (!field)\n    return null;\n  if (!(operator || widget) && valueSrc != \"const\" && field != \"!case_value\")\n    return null;\n  const fieldConfig = getFieldConfig(config, field);\n  if (!widget)\n    widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n  const widgetConfig = config.widgets[widget] || {};\n  const fieldWidgetConfig = (fieldConfig && fieldConfig.widgets ? fieldConfig.widgets[widget] : {}) || {};\n  const fieldWidgetProps = (fieldWidgetConfig.widgetProps || {});\n  const valueFieldSettings = (valueSrc == \"value\" || !valueSrc) && fieldConfig && fieldConfig.fieldSettings || {}; // useful to take 'validateValue'\n  const mergedConfig = merge({}, widgetConfig, fieldWidgetProps, valueFieldSettings);\n  return mergedConfig;\n};\n\nexport const _widgetDefKeysToOmit = widgetDefKeysToOmit;\n","import {defaultValue} from \"../utils/stuff\";\nimport {getFieldConfig, getOperatorConfig} from \"../utils/configUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {formatFieldName} from \"../utils/ruleUtils\";\nimport {Map} from \"immutable\";\n\n/*\n Build tree to http://querybuilder.js.org/ like format\n\n Example:\n {\n    \"condition\": \"AND\",\n    \"rules\": [\n        {\n            \"id\": \"price\",\n            \"field\": \"price\",\n            \"type\": \"double\",\n            \"input\": \"text\",\n            \"operator\": \"less\",\n            \"value\": \"10.25\"\n        },\n        {\n            \"condition\": \"OR\",\n            \"rules\": [\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"2\"\n                },\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"1\"\n                }\n            ]\n        }\n    ]\n }\n */\n\n\nexport const queryBuilderFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: []\n  };\n  const res = formatItem(item, config, meta);\n  if (!res)\n    return undefined;\n  return {\n    ...res, \n    ...meta\n  };\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") && children && children.size) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  const id = item.get(\"id\");\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const not = properties.get(\"not\");\n\n  const resultQuery = {\n    id,\n    rules: list.toList(),\n    condition: conjunction.toUpperCase(),\n    not,\n  };\n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const id = item.get(\"id\");\n\n  const operator = properties.get(\"operator\");\n  const options = properties.get(\"operatorOptions\");\n  let field = properties.get(\"field\");\n  let value = properties.get(\"value\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let valueType = properties.get(\"valueType\");\n  const hasUndefinedValues = value.filter(v => v === undefined).size > 0;\n\n  if (field == null || operator == null || hasUndefinedValues)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const fieldType = fieldDefinition.type || \"undefined\";\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const typeConfig = config.types[fieldDefinition.type] || {};\n  const fieldName = formatFieldName(field, config, meta);\n\n  if (value.size < cardinality)\n    return undefined;\n\n  if (meta.usedFields.indexOf(field) == -1)\n    meta.usedFields.push(field);\n  value = value.toArray();\n  valueSrc = valueSrc.toArray();\n  valueType = valueType?.toArray() || [];\n  let values = [];\n  for (let i = 0 ; i < value.length ; i++) {\n    const val = {\n      type: valueType[i],\n      value: value[i],\n    };\n    values.push(val);\n    if (valueSrc[i] == \"field\") {\n      const secondField = value[i];\n      if (meta.usedFields.indexOf(secondField) == -1)\n        meta.usedFields.push(secondField);\n    }\n  }\n  let operatorOptions = options ? options.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n      \n  let ruleQuery = {\n    id,\n    fieldName,\n    type: fieldType,\n    input: typeConfig.mainWidget,\n    operator,\n  };\n  if (operatorOptions)\n    ruleQuery.operatorOptions = operatorOptions;\n  ruleQuery.values = values;\n  return ruleQuery;\n};\n","import {defaultValue, widgetDefKeysToOmit, opDefKeysToOmit} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, extendConfig, getFieldParts\n} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp, formatFieldName, completeValue} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\n\n// http://jsonlogic.com/\n\n\nexport const jsonLogicFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: [],\n    errors: []\n  };\n  \n  const extendedConfig = extendConfig(config, undefined, false);\n  const logic = formatItem(item, extendedConfig, meta, true);\n  \n  // build empty data\n  const {errors, usedFields} = meta;\n  const {fieldSeparator} = extendedConfig.settings;\n  let data = {};\n  for (let ff of usedFields) {\n    //const fieldSrc = typeof ff === \"string\" ? \"field\" : \"func\";\n    const parts = getFieldParts(ff, config);\n    const def = getFieldConfig(extendedConfig, ff) || {};\n    let tmp = data;\n    for (let i = 0 ; i < parts.length ; i++) {\n      const p = parts[i];\n      const pdef = getFieldConfig(extendedConfig, parts.slice(0, i + 1)) || {};\n      if (i != parts.length - 1) {\n        if (pdef.type == \"!group\" && pdef.mode != \"struct\") {\n          if (!tmp[p])\n            tmp[p] = [{}];\n          tmp = tmp[p][0];\n        } else {\n          if (!tmp[p])\n            tmp[p] = {};\n          tmp = tmp[p];\n        }\n      } else {\n        if (!tmp[p])\n          tmp[p] = null; // can use def.type for sample values\n      }\n    }\n  }\n    \n  return {\n    errors,\n    logic,\n    data,\n  };\n};\n\n\nconst formatItem = (item, config, meta, isRoot, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const isLocked = properties.get(\"isLocked\");\n  const {lockedOp} = config.settings.jsonLogic;\n  let ret;\n  if (type === \"group\" || type === \"rule_group\") {\n    ret = formatGroup(item, config, meta, isRoot, parentField);\n  } else if (type === \"rule\") {\n    ret = formatRule(item, config, meta, parentField);\n  }\n  if (isLocked && ret && lockedOp) {\n    ret = { [lockedOp] : ret };\n  }\n  return ret;\n};\n\n\nconst formatGroup = (item, config, meta, isRoot, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n  \n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const conj = conjunctionDefinition.jsonLogicConj || conjunction.toLowerCase();\n  const not = properties.get(\"not\");\n\n  const isRuleGroup = (type === \"rule_group\" && !isRoot);\n  const groupField = isRuleGroup && mode != \"struct\" ? field : parentField;\n  const groupOperator = properties.get(\"operator\");\n  const groupOperatorDefinition = groupOperator && getOperatorConfig(config, groupOperator, field) || null;\n  const formattedValue = formatItemValue(config, properties, meta, groupOperator, parentField);\n  const isGroup0 = isRuleGroup && (!groupOperator || groupOperatorDefinition.cardinality == 0);\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, false, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  \n  if (isRuleGroup && mode != \"struct\" && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size)\n      return undefined;\n  }\n\n  let resultQuery = {};\n  if (list.size == 1 && !isRoot)\n    resultQuery = list.first();\n  else\n    resultQuery[conj] = list.toList().toJS();\n  \n  // revert\n  if (not) {\n    resultQuery = { \"!\": resultQuery };\n  }\n\n  // rule_group (issue #246)\n  if (isRuleGroup && mode != \"struct\") {\n    const formattedField = formatField(meta, config, field, parentField);\n    if (isGroup0) {\n      // config.settings.groupOperators\n      const op = groupOperator || \"some\";\n      resultQuery = {\n        [op]: [\n          formattedField,\n          resultQuery\n        ]\n      };\n    } else {\n      // there is rule for count\n      const filter = !list.size \n        ? formattedField\n        : {\n          \"filter\": [\n            formattedField,\n            resultQuery\n          ]\n        };\n      const count = {\n        \"reduce\": [\n          filter,\n          { \"+\": [1, { var: \"accumulator\" }] },\n          0\n        ]\n      };\n      resultQuery = formatLogic(config, properties, count, formattedValue, groupOperator);\n    }\n  }\n  \n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  operatorOptions = operatorOptions ? operatorOptions.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDefinition.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field) || {};\n\n  // check op\n  let isRev = false;\n  if (!operatorDefinition.jsonLogic && !revOperatorDefinition.jsonLogic) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!operatorDefinition.jsonLogic && revOperatorDefinition.jsonLogic) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n  }\n\n  const formattedValue = formatItemValue(config, properties, meta, operator, parentField);\n  if (formattedValue === undefined)\n    return undefined;\n\n  const formattedField\n    = fieldSrc === \"func\"\n      ? formatFunc(meta, config, field, parentField)\n      : formatField(meta, config, field, parentField);\n  if (formattedField === undefined)\n    return undefined;\n\n  return formatLogic(config, properties, formattedField, formattedValue, operator, operatorOptions, fieldDefinition, isRev);\n};\n\n\nconst formatItemValue = (config, properties, meta, operator, parentField) => {\n  const field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (iValue == undefined)\n    return undefined;\n  \n  let valueSrcs = [];\n  let valueTypes = [];\n  let oldUsedFields = meta.usedFields;\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDef = omit( getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"] );\n    const fv = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDefinition, operator, operatorDefinition, parentField, asyncListValues\n    );\n    if (fv !== undefined) {\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (fvalue.size < cardinality || hasUndefinedValues) {\n    meta.usedFields = oldUsedFields; // restore\n    return undefined;\n  }\n  return cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else if (typeof fieldWidgetDef.jsonLogic === \"function\") {\n    const fn = fieldWidgetDef.jsonLogic;\n    const args = [\n      currentValue,\n      {\n        ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n        asyncListValues\n      },\n      //useful options: valueFormat for date/time\n      omit(fieldWidgetDef, widgetDefKeysToOmit),\n    ];\n    if (operator) {\n      args.push(operator);\n      args.push(operatorDef);\n    }\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    ret = currentValue;\n  }\n  return ret;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  if (!funcConfig?.jsonLogic) {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = omit( getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc), [\"factory\"] );\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, null, null, parentField\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = omit( getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc), [\"factory\"] );\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, null, null, parentField\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // uncomplete\n  }\n\n  const formattedArgsArr = Object.values(formattedArgs);\n  let ret;\n  if (typeof funcConfig.jsonLogic === \"function\") {\n    const fn = funcConfig.jsonLogic;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const funcName = funcConfig.jsonLogic || funcLastKey;\n    const isMethod = !!funcConfig.jsonLogicIsMethod;\n    if (isMethod) {\n      const [obj, ...params] = formattedArgsArr;\n      if (params.length) {\n        ret = { \"method\": [ obj, funcName, params ] };\n      } else {\n        ret = { \"method\": [ obj, funcName ] };\n      }\n    } else {\n      ret = { [funcName]: formattedArgsArr };\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (meta, config, field, parentField = null) => {\n  const {fieldSeparator, jsonLogic} = config.settings;\n\n  let ret;\n  if (field) {\n    if (Array.isArray(field))\n      field = field.join(fieldSeparator);\n    const fieldDef = getFieldConfig(config, field) || {};\n    const fieldName = formatFieldName(field, config, meta, parentField);\n\n    let varName = fieldDef.jsonLogicVar || (fieldDef.type == \"!group\" ? jsonLogic.groupVarKey : \"var\");\n    ret = { [varName] : fieldName };\n    if (meta.usedFields.indexOf(field) == -1)\n      meta.usedFields.push(field);\n  }\n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, formattedField, formattedValue) => {\n  let formatteOp = operator;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const isReverseArgs = defaultValue(operatorDefinition._jsonLogicIsRevArgs, false);\n  if (typeof operatorDefinition.jsonLogic == \"string\")\n    formatteOp = operatorDefinition.jsonLogic;\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  const eqOps = [\"==\", \"!=\"];\n  const fn = (field, op, val, opDef, opOpts) => {\n    if (cardinality == 0 && eqOps.includes(formatteOp))\n      return { [formatteOp]: [formattedField, null] };\n    else if (cardinality == 0)\n      return { [formatteOp]: formattedField };\n    else if (cardinality == 1 && isReverseArgs)\n      return { [formatteOp]: [formattedValue, formattedField] };\n    else if (cardinality == 1)\n      return { [formatteOp]: [formattedField, formattedValue] };\n    else if (cardinality == 2 && rangeOps.includes(formatteOp))\n      return { [formatteOp]: [formattedValue[0], formattedField, formattedValue[1]] };\n    else\n      return { [formatteOp]: [formattedField, ...formattedValue] };\n  };\n  return fn;\n};\n\nconst formatLogic = (config, properties, formattedField, formattedValue, operator, operatorOptions = null, fieldDefinition = null, isRev = false) => {\n  const field = properties.get(\"field\");\n  //const fieldSrc = properties.get(\"fieldSrc\");\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let fn = typeof operatorDefinition.jsonLogic == \"function\" \n    ? operatorDefinition.jsonLogic \n    : buildFnToFormatOp(operator, operatorDefinition, formattedField, formattedValue);\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    omit(operatorDefinition, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n  ];\n  let ruleQuery = fn.call(config.ctx, ...args);\n\n  if (isRev) {\n    ruleQuery = { \"!\": ruleQuery };\n  }\n\n  return ruleQuery;\n};\n","import {defaultValue, widgetDefKeysToOmit, opDefKeysToOmit} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, extendConfig,\n} from \"../utils/configUtils\";\nimport {getFieldPathLabels, getWidgetForFieldOp, formatFieldName, completeValue} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {List, Map} from \"immutable\";\n\n\n// helpers\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const mongodbFormat = (tree, config) => {\n  return _mongodbFormat(tree, config, false);\n};\n\nexport const _mongodbFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem([], tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to MongoDb:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(parents, item, config, meta, _not, _canWrapExpr, _formatFieldName, _value);\n  } else if (type === \"rule\") {\n    return formatRule(parents, item, config, meta, _not, _canWrapExpr, _formatFieldName, _value);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\") || new List();\n  const {canShortMongoQuery, fieldSeparator} = config.settings;\n  const sep = fieldSeparator;\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  const groupField = type === \"rule_group\" ? properties.get(\"field\") : null;\n  const groupFieldName = formatFieldName(groupField, config, meta, realParentPath);\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode; //properties.get(\"mode\");\n  const canHaveEmptyChildren = groupField && mode == \"array\";\n\n  const not = _not ? !(properties.get(\"not\")) : (properties.get(\"not\"));\n  const list = children\n    .map((currentChild) => formatItem(\n      [...parents, item], currentChild, config, meta, not, mode != \"array\", mode == \"array\" ? (f => `$$el${sep}${f}`) : undefined)\n    )\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  let conjunctionDefinition = config.conjunctions[conjunction];\n  const reversedConj = conjunctionDefinition.reversedConj;\n  if (not && reversedConj) {\n    conjunction = reversedConj;\n    conjunctionDefinition = config.conjunctions[conjunction];\n  }\n  if (!conjunctionDefinition)\n    return undefined;\n  const mongoConj = conjunctionDefinition.mongoConj;\n\n  let resultQuery;\n  if (list.size == 1) {\n    resultQuery = list.first();\n  } else if (list.size > 1) {\n    const rules = list.toList().toJS();\n    const canShort = canShortMongoQuery && (mongoConj == \"$and\");\n    if (canShort) {\n      resultQuery = rules.reduce((acc, rule) => {\n        if (!acc) return undefined;\n        for (let k in rule) {\n          if (k[0] == \"$\") {\n            acc = undefined;\n            break;\n          }\n          if (acc[k] == undefined) {\n            acc[k] = rule[k];\n          } else {\n            // https://github.com/ukrbublik/react-awesome-query-builder/issues/182\n            let prev = acc[k], next = rule[k];\n            if (!isObject(prev)) {\n              prev = {\"$eq\": prev};\n            }\n            if (!isObject(next)) {\n              next = {\"$eq\": next};\n            }\n            const prevOp = Object.keys(prev)[0], nextOp = Object.keys(next)[0];\n            if (prevOp == nextOp) {\n              acc = undefined;\n              break;\n            }\n            acc[k] = Object.assign({}, prev, next);\n          }\n        }\n        return acc;\n      }, {});\n    }\n    if (!resultQuery) // can't be shorten\n      resultQuery = { [mongoConj] : rules };\n  }\n\n  if (groupField) {\n    if (mode == \"array\") {\n      const totalQuery = {\n        \"$size\": {\n          \"$ifNull\": [\n            \"$\" + groupFieldName,\n            []\n          ]\n        }\n      };\n      const filterQuery = resultQuery ? {\n        \"$size\": {\n          \"$ifNull\": [\n            {\n              \"$filter\": {\n                input: \"$\" + groupFieldName,\n                as: \"el\",\n                cond: resultQuery\n              }\n            },\n            []\n          ]\n        }\n      } : totalQuery;\n      resultQuery = formatItem(\n        parents, item.set(\"type\", \"rule\"), config, meta, false, false, (_f => filterQuery), totalQuery\n      );\n      resultQuery = { \"$expr\": resultQuery };\n    } else {\n      resultQuery = { [groupFieldName]: {\"$elemMatch\": resultQuery} };\n    }\n  }\n  return resultQuery;\n};\n\n\nconst formatRule = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  const properties = item.get(\"properties\") || new Map();\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  const iValue = properties.get(\"value\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  if (field == null || operator == null || iValue === undefined)\n    return undefined;\n\n  const fieldDef = getFieldConfig(config, field) || {};\n  let operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDefinition.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n\n  let not = _not;\n  if (not && reversedOp) {\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n    not = false;\n  }\n\n  let formattedField;\n  let useExpr = false;\n  if (fieldSrc == \"func\") {\n    [formattedField, useExpr] = formatFunc(meta, config, field, realParentPath);\n  } else {\n    formattedField = formatFieldName(field, config, meta, realParentPath);\n    if (_formatFieldName) {\n      useExpr = true;\n      formattedField = _formatFieldName(formattedField);\n    }\n  }\n  if (formattedField == undefined)\n    return undefined;\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n    const [fv, fvUseExpr] = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, realParentPath,  operator, operatorDefinition, asyncListValues\n    );\n    if (fv !== undefined) {\n      useExpr = useExpr || fvUseExpr;\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const wrapExpr = useExpr && _canWrapExpr;\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (fvalue.size < cardinality || hasUndefinedValues)\n    return undefined;\n  const formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n\n  //build rule\n  const fn = operatorDefinition.mongoFormatOp;\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  const args = [\n    formattedField,\n    operator,\n    _value !== undefined && formattedValue == null ? _value : formattedValue,\n    useExpr,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(operatorDefinition, opDefKeysToOmit),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ruleQuery = fn.call(config.ctx, ...args);\n  if (wrapExpr) {\n    ruleQuery = { \"$expr\": ruleQuery };\n  }\n  if (not) {\n    ruleQuery = { \"$not\": ruleQuery };\n  }\n  return ruleQuery;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, parentPath, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return [undefined, false];\n\n  let ret;\n  let useExpr = false;\n\n  if (valueSrc == \"field\") {\n    [ret, useExpr] = formatRightField(meta, config, currentValue, parentPath);\n  } else if (valueSrc == \"func\") {\n    [ret, useExpr] = formatFunc(meta, config, currentValue, parentPath);\n  } else {\n    if (typeof fieldWidgetDef.mongoFormatValue === \"function\") {\n      const fn = fieldWidgetDef.mongoFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = currentValue;\n    }\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatRightField = (meta, config, rightField, parentPath) => {\n  const {fieldSeparator} = config.settings;\n  let ret;\n  const useExpr = true;\n\n  if (rightField) {\n    const rightFieldDefinition = getFieldConfig(config, rightField) || {};\n    const fieldParts = getFieldParts(rightField, config);\n    const fieldPartsLabels = getFieldPathLabels(rightField, config);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n    const formatFieldFn = config.settings.formatField;\n    const rightFieldName = formatFieldName(rightField, config, meta, parentPath);\n    const formattedField = formatFieldFn(rightFieldName, fieldParts, fieldFullLabel, rightFieldDefinition, config, false);\n    ret = \"$\" + formattedField;\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentPath) => {\n  const useExpr = true;\n  let ret;\n\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return [undefined, false];\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = funcConfig.mongoFunc || funcLastKey;\n  const mongoArgsAsObject = funcConfig.mongoArgsAsObject;\n\n  let formattedArgs = {};\n  let argsCnt = 0;\n  let lastArg = undefined;\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    argsCnt++;\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = omit(getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc), [\"factory\"]);\n    const [formattedArgVal, _argUseExpr] = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return [undefined, false];\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = omit( getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc), [\"factory\"] );\n      let _;\n      ([formattedDefaultVal, _] = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n      ));\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return [undefined, false];\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n      lastArg = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return [undefined, false]; // uncomplete\n  }\n\n  if (typeof funcConfig.mongoFormatFunc === \"function\") {\n    const fn = funcConfig.mongoFormatFunc;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.mongoFormatFunc === null) {\n    meta.errors.push(`Functon ${funcName} is not supported`);\n    return [undefined, false];\n  } else {\n    if (mongoArgsAsObject)\n      ret = { [funcName]: formattedArgs };\n    else if (argsCnt == 1 && lastArg !== undefined)\n      ret = { [funcName]: lastArg };\n    else\n      ret = { [funcName]: Object.values(formattedArgs) };\n  }\n\n  return [ret, useExpr];\n};\n\n\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, extendConfig,\n} from \"../utils/configUtils\";\nimport {\n  getFieldPathLabels, getWidgetForFieldOp, formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {defaultValue, widgetDefKeysToOmit, opDefKeysToOmit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport {SqlString} from \"../utils/export\";\n\nexport const sqlFormat = (tree, config) => {\n  return _sqlFormat(tree, config, false);\n};\n\nexport const _sqlFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SQL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  const groupField = isRuleGroup ? properties.get(\"field\") : null;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode;\n  if (mode == \"array\") {\n    meta.errors.push(`Aggregation is not supported for ${groupField}`);\n  }\n\n  const not = properties.get(\"not\");\n  const canHaveEmptyChildren = false; //isRuleGroup && mode == \"array\";\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  return conjunctionDefinition.sqlFormatConj(list, conjunction, not);\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const sqlOp = operatorDefinition.sqlOp || operator;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, value, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp} ${value}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values.first();\n      const valTo = values.get(1);\n      return `${field} ${sqlOp} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = defaultValue(opDef.cardinality, 1);\n\n  // check op\n  let isRev = false;\n  const canFormatOp = opDef.sqlOp || opDef.sqlFormatOp;\n  const canFormatRevOp = revOpDef.sqlOp || revOpDef.sqlFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDefinition = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n    let fv = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDefinition, fieldDefinition, operator, opDef, asyncListValues\n    );\n    if (fv !== undefined) {\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (hasUndefinedValues || fvalue.size < cardinality)\n    return undefined;\n  const formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n\n  //find fn to format expr\n  const fn = opDef.sqlFormatOp || buildFnToFormatOp(operator, opDef);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n      \n  //format field\n  const formattedField = fieldSrc == \"func\"\n    ? formatFunc(meta, config, field)\n    : formatField(meta, config, field);\n  if (formattedField == undefined)\n    return undefined;\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n  ];\n\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n  if (isRev) {\n    ret = config.settings.sqlFormatReverse(ret);\n  }\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrcs.join(\", \")}`);\n    return undefined;\n  }\n  return ret;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue);\n  } else {\n    if (typeof fieldWidgetDef.sqlFormatValue === \"function\") {\n      const fn = fieldWidgetDef.sqlFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      if (Array.isArray(currentValue)) {\n        ret = currentValue.map(v => SqlString.escape(v));\n      } else {\n        ret = SqlString.escape(currentValue);\n      }\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsLabels = getFieldPathLabels(field, config);\n  const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n  const formatFieldFn = config.settings.formatField;\n  const fieldName = formatFieldName(field, config, meta, null, {useTableName: true});\n  const formattedField = formatFieldFn(fieldName, fieldParts, fieldFullLabel, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue) => {\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = funcConfig.sqlFunc || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // uncomplete\n  }\n\n  let ret;\n  if (typeof funcConfig.sqlFormatFunc === \"function\") {\n    const fn = funcConfig.sqlFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(formattedArgs)\n      .map(([k, v]) => v)\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, extendConfig,\n} from \"../utils/configUtils\";\nimport {\n  getFieldPathLabels, getWidgetForFieldOp, formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {defaultValue, widgetDefKeysToOmit, opDefKeysToOmit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\n\n\nexport const queryString = (item, config, isForDisplay = false) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(item, extendedConfig, meta, isForDisplay, null);\n\n  if (meta.errors.length)\n    console.warn(\"Errors while exporting to string:\", meta.errors);\n  return res;\n};\n\n\nconst formatItem = (item, config, meta, isForDisplay = false, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") ) {\n    return formatGroup(item, config, meta, isForDisplay, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, isForDisplay, parentField);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta, isForDisplay = false, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  // TIP: don't cut group for mode == 'struct' and don't do aggr format (maybe later)\n  const groupField = isRuleGroup && mode == \"array\" ? properties.get(\"field\") : null;\n  const canHaveEmptyChildren = isRuleGroup && mode == \"array\";\n  const not = properties.get(\"not\");\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, isForDisplay, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  const conjStr = list.size ? conjunctionDefinition.formatConj(list, conjunction, not, isForDisplay) : null;\n  \n  let ret;\n  if (groupField) {\n    const aggrArgs = formatRule(item, config, meta, isForDisplay, parentField, true);\n    if (aggrArgs) {\n      const isRev = aggrArgs.pop();\n      const args = [\n        conjStr,\n        ...aggrArgs\n      ];\n      ret = config.settings.formatAggr(...args);\n      if (isRev) {\n        ret = config.settings.formatReverse(ret, null, null, null, null, isForDisplay);\n      }\n    }\n  } else {\n    ret = conjStr;\n  }\n\n  return ret;\n};\n\n\nconst formatItemValue = (config, properties, meta, _operator, isForDisplay, parentField) => {\n  const field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operator = _operator || properties.get(\"operator\");\n  const operatorDef = getOperatorConfig(config, operator, field) || {};\n  const cardinality = defaultValue(operatorDef.cardinality, 1);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n      let fv = formatValue(\n        config, meta, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, isForDisplay, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (!( hasUndefinedValues || fvalue.size < cardinality )) {\n      formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n    }\n  }\n\n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const fop = operatorDefinition.labelForFormat || operator;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} ${fop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} ${fop} ${values}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const valFrom = values.first();\n      const valTo = values.get(1);\n      return `${field} ${fop} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta, isForDisplay = false, parentField = null, returnArgs = false) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  if (field == null || operator == null)\n    return undefined;\n  \n  const fieldDef = getFieldConfig(config, field) || {};\n  let operatorDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDef.reversedOp;\n  let revOperatorDef = getOperatorConfig(config, reversedOp, field) || {};\n  \n  //check op\n  let isRev = false;\n  let fn = operatorDef.formatOp;\n  if (!fn && reversedOp) {\n    fn = revOperatorDef.formatOp;\n    if (fn) {\n      isRev = true;\n      [operator, reversedOp] = [reversedOp, operator];\n      [operatorDef, revOperatorDef] = [revOperatorDef, operatorDef];\n    }\n  }\n\n  //find fn to format expr\n  if (!fn)\n    fn = buildFnToFormatOp(operator, operatorDef);\n  if (!fn)\n    return undefined;\n\n  //format field\n  const formattedField = fieldSrc === \"func\"\n    ? formatFunc(config, meta, field, isForDisplay, parentField)\n    : formatField(config, meta, field, isForDisplay, parentField);\n  if (formattedField == undefined)\n    return undefined;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, operator, isForDisplay, parentField\n  );\n  if (formattedValue === undefined)\n    return undefined;\n\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(operatorDef, opDefKeysToOmit),\n    operatorOptions,\n    isForDisplay,\n    fieldDef,\n    isRev,\n  ];\n\n  if (returnArgs) {\n    return args;\n  } else {\n    //format expr\n    let ret = fn.call(config.ctx, ...args);\n\n    //rev\n    if (isRev) {\n      ret = config.settings.formatReverse(ret, operator, reversedOp, operatorDef, revOperatorDef, isForDisplay);\n    }\n\n    return ret;\n  }\n};\n\n\nconst formatValue = (config, meta, value, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, opDef, isForDisplay, parentField = null, asyncListValues) => {\n  if (value === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(config, meta, value, isForDisplay, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(config, meta, value, isForDisplay, parentField);\n  } else {\n    if (typeof fieldWidgetDef.formatValue === \"function\") {\n      const fn = fieldWidgetDef.formatValue;\n      const args = [\n        value,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n        isForDisplay\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(opDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, value) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = value;\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (config, meta, field, isForDisplay, parentField = null, cutParentField = true) => {\n  const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n  let ret = null;\n  if (field) {\n    const fieldDefinition = getFieldConfig(config, field) || {};\n    const fieldParts = getFieldParts(field, config);\n    const fieldPartsLabels = getFieldPathLabels(field, config, cutParentField ? parentField : null);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparatorDisplay) : null;\n    const fieldLabel2 = fieldDefinition.label2 || fieldFullLabel;\n    const formatFieldFn = config.settings.formatField;\n    const fieldName = formatFieldName(field, config, meta, cutParentField ? parentField : null, {useTableName: true});\n    ret = formatFieldFn(fieldName, fieldParts, fieldLabel2, fieldDefinition, config, isForDisplay);\n  }\n  return ret;\n};\n\n\nconst formatFunc = (config, meta, funcValue, isForDisplay, parentField = null) => {\n  const funcKey = funcValue.get(\"func\");\n  const args = funcValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = isForDisplay && funcConfig.label || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  let formattedArgsWithNames = {};\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argName = isForDisplay && argConfig.label || argKey;\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      config, meta, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, isForDisplay, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      formattedDefaultVal = formatValue(\n        config, meta, defaultValue, defaultValueSrc, argConfig.type, fieldDef, argConfig, null, null, isForDisplay, parentField, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const [missedArgKey, missedArgName] of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n          //formattedArgsWithNames[missedArgName] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n      formattedArgsWithNames[argName] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push([argKey, argName]);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // uncomplete\n  }\n\n  let ret = null;\n  if (typeof funcConfig.formatFunc === \"function\") {\n    const fn = funcConfig.formatFunc;\n    const args = [\n      formattedArgs,\n      isForDisplay\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(isForDisplay ? formattedArgsWithNames : formattedArgs)\n      .map(([k, v]) => (isForDisplay ? `${k}: ${v}` : `${v}`))\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\n\n\n/**\n * Converts a string representation of top_left and bottom_right cords to\n * a ES geo_point required for query\n *\n * @param {string} geoPointString - comma separated string of lat/lon coods\n * @returns {{top_left: {lon: number, lat: number}, bottom_right: {lon: number, lat: number}}} - ES geoPoint formatted object\n * @private\n */\nfunction buildEsGeoPoint(geoPointString) {\n  if (geoPointString == null) {\n    return null;\n  }\n\n  const coordsNumberArray = geoPointString.split(\",\").map(Number);\n  return {\n    top_left: {\n      lat: coordsNumberArray[0],\n      lon: coordsNumberArray[1]\n    },\n    bottom_right: {\n      lat: coordsNumberArray[2],\n      lon: coordsNumberArray[3]\n    }\n  };\n}\n\n/**\n * Converts a dateTime string from the query builder to a ES range formatted object\n *\n * @param {string} dateTime - dateTime formatted string\n * @param {string} operator - query builder operator type, see constants.js and query builder docs\n * @returns {{lt: string}|{lte: string}|{gte: string}|{gte: string, lte: string}|undefined} - ES range query parameter\n *\n * @private\n */\nfunction buildEsRangeParameters(value, operator) {\n  // -- if value is greater than 1 then we assume this is a between operator : BUG this is wrong, a selectable list can have multiple values\n  if (value.length > 1) {\n    return {\n      gte: \"\".concat(value[0]),\n      lte: \"\".concat(value[1])\n    };\n  } // -- if value is only one we assume this is a date time query for a specific day\n\n  const dateTime = value[0]; //TODO: Rethink about this part, what if someone adds a new type of opperator\n\n  //todo: move this logic into config\n  switch (operator) {\n  case \"on_date\": //todo: not used\n  case \"not_on_date\":\n  case \"equal\":\n  case \"select_equals\":\n  case \"not_equal\":\n    return {\n      gte: \"\".concat(dateTime, \"||/d\"),\n      lte: \"\".concat(dateTime, \"||+1d\")\n    };\n\n  case \"less_or_equal\":\n    return {\n      lte: \"\".concat(dateTime)\n    };\n\n  case \"greater_or_equal\":\n    return {\n      gte: \"\".concat(dateTime)\n    };\n\n  case \"less\":\n    return {\n      lt: \"\".concat(dateTime)\n    };\n\n  case \"greater\":\n    return {\n      gt: \"\".concat(dateTime)\n    };\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Builds the DSL parameters for a Wildcard query\n *\n * @param {string} value - The match value\n * @returns {{value: string}} - The value = value parameter surrounded with * on each end\n * @private\n */\nfunction buildEsWildcardParameters(value) {\n  return {\n    value: \"*\" + value + \"*\"\n  };\n}\n\n/**\n * Takes the match type string from awesome query builder like 'greater_or_equal' and\n * returns the ES occurrence required for bool queries\n *\n * @param {string} combinator - query group type or rule condition\n * @param {bool} not\n * @returns {string} - ES occurrence type. See constants.js\n * @private\n */\nfunction determineOccurrence(combinator, not) {\n  //todo: move into config, like mongoConj\n  switch (combinator) {\n  case \"AND\":\n    return not ? \"must_not\" : \"must\";\n    // -- AND\n\n  case \"OR\":\n    return not ? \"should_not\" : \"should\";\n    // -- OR\n\n  case \"NOT\":\n    return not ? \"must\" : \"must_not\";\n    // -- NOT AND\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Determines what field to query off of given the operator type\n *\n * @param {string} fieldDataType - The type of data\n * @param {string} fullFieldName - A '.' separated string containing the property lineage (including self)\n * @param {string} queryType - The query type\n * @returns {string|*} - will be either the fullFieldName or fullFieldName.keyword\n * @private\n */\n//todo: not used\n// function determineQueryField(fieldDataType, fullFieldName, queryType) {\n//   if (fieldDataType === \"boolean\") {\n//     return fullFieldName;\n//   }\n\n//   switch (queryType) {\n//   case \"term\":\n//   case \"wildcard\":\n//     return \"\".concat(fullFieldName, \".keyword\");\n\n//   case \"geo_bounding_box\":\n//   case \"range\":\n//   case \"match\":\n//     return fullFieldName;\n\n//   default:\n//     console.error(\"Can't determine query field for query type \".concat(queryType));\n//     return null;\n//   }\n// }\n\nfunction buildRegexpParameters(value) {\n  return {\n    value: value\n  };\n}\n\nfunction determineField(fieldName, config) {\n  //todo: ElasticSearchTextField - not used\n  //return config.fields[fieldName].ElasticSearchTextField || fieldName;\n  return fieldName;\n}\n\nfunction buildParameters(queryType, value, operator, fieldName, config, syntax) {\n  const textField = determineField(fieldName, config);\n  switch (queryType) {\n  case \"filter\":\n    //todo: elasticSearchScript - not used\n    return {\n      script: config.operators[operator].elasticSearchScript(fieldName, value)\n    };\n\n  case \"exists\":\n    return { field: fieldName };\n\n  case \"match\":\n    return { [textField]: value[0] };\n\n  case \"term\":\n    return syntax === ES_7_SYNTAX\n      ? { [fieldName]: {\n        value: value[0]\n      }} : { [fieldName]: value[0] };\n\n  //todo: not used\n  // need to add geo type into RAQB or remove this code\n  case \"geo_bounding_box\":\n    return { [fieldName]: buildEsGeoPoint(value[0]) };\n\n  case \"range\":\n    return { [fieldName]: buildEsRangeParameters(value, operator) };\n\n  case \"wildcard\":\n    return { [fieldName]: buildEsWildcardParameters(value[0]) };\n\n  case \"regexp\":\n    return { [fieldName]: buildRegexpParameters(value[0]) };\n\n  default:\n    return undefined;\n  }\n}\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {string} fieldName - The name of the field you are building a rule for\n * @param {string} fieldDataType - The type of data this field holds\n * @param {string} value - The value of this rule\n * @param {string} operator - The condition on how the value is matched\n * @param {string} syntax - The version of ElasticSearch syntax to generate\n * @returns {object} - The ES rule\n * @private\n */\nfunction buildEsRule(fieldName, value, operator, config, valueSrc, syntax) {\n  if (!fieldName || !operator || value == undefined)\n    return undefined; // rule is not fully entered\n  let op = operator;\n  let opConfig = config.operators[op];\n  if (!opConfig)\n    return undefined; // unknown operator\n  let { elasticSearchQueryType } = opConfig;\n\n  // not\n  let not = false;\n  if (!elasticSearchQueryType && opConfig.reversedOp) {\n    not = true;\n    op = opConfig.reversedOp;\n    opConfig = config.operators[op];\n    ({ elasticSearchQueryType } = opConfig);\n  }\n  \n  // handle if value 0 has multiple values like a select in a array\n  const widget = getWidgetForFieldOp(config, fieldName, op, valueSrc);\n  const widgetConfig = config.widgets[widget];\n  if (!widgetConfig)\n    return undefined; // unknown widget\n  const { elasticSearchFormatValue } = widgetConfig;\n\n  /** In most cases the queryType will be static however in some casese (like between) the query type will change\n   * based on the data type. i.e. a between time will be different than between number, date, letters etc... */\n  let queryType;\n  if (typeof elasticSearchQueryType === \"function\") {\n    queryType = elasticSearchQueryType(widget);\n  } else {\n    queryType = elasticSearchQueryType;\n  }\n\n  if (!queryType) {\n    // Not supported\n    return undefined;\n  }\n\n  /** If a widget has a rule on how to format that data then use that otherwise use default way of determineing search parameters\n   * */\n  let parameters;\n  if (typeof elasticSearchFormatValue === \"function\") {\n    parameters = elasticSearchFormatValue(queryType, value, op, fieldName, config);\n  } else {\n    parameters = buildParameters(queryType, value, op, fieldName, config, syntax);\n  }\n\n  if (not) {\n    return {\n      bool: {\n        must_not: {\n          [queryType]: {...parameters}\n        }\n      }\n    };\n  } else {\n    return {\n      [queryType]: {...parameters}\n    };\n  }\n}\n\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {object} children - The contents of the group\n * @param {string} conjunction - The way the contents of the group are joined together i.e. AND OR\n * @param {bool} not\n * @param {Function} recursiveFxn - The recursive fxn to build the contents of the groups children\n * @private\n * @returns {object} - The ES group\n */\nfunction buildEsGroup(children, conjunction, not, recursiveFxn, config, syntax) {\n  if (!children || !children.size)\n    return undefined;\n  const childrenArray = children.valueSeq().toArray();\n  const occurrence = determineOccurrence(conjunction, not);\n  const result = childrenArray.map((c) => recursiveFxn(c, config, syntax)).filter(v => v !== undefined);\n  if (!result.length)\n    return undefined;\n  const resultFlat = result.flat(Infinity);\n  return {\n    bool: {\n      [occurrence]: resultFlat\n    }\n  };\n}\n\nexport const ES_7_SYNTAX = \"ES_7_SYNTAX\";\nexport const ES_6_SYNTAX = \"ES_6_SYNTAX\";\n\nexport function elasticSearchFormat(tree, config, syntax = ES_6_SYNTAX) {\n  // -- format the es dsl here\n  if (!tree) return undefined;\n  const type = tree.get(\"type\");\n  const properties = tree.get(\"properties\") || new Map();\n\n  if (type === \"rule\" && properties.get(\"field\")) {\n    // -- field is null when a new blank rule is added\n    const operator = properties.get(\"operator\");\n    const field = properties.get(\"field\");\n    const fieldSrc = properties.get(\"fieldSrc\");\n    const value = properties.get(\"value\").toJS();\n    const _valueType = properties.get(\"valueType\")?.get(0);\n    const valueSrc = properties.get(\"valueSrc\")?.get(0);\n\n    if (valueSrc === \"func\" || fieldSrc == \"func\") {\n      // -- elastic search doesn't support functions (that is post processing)\n      return;\n    }\n\n    if (value && Array.isArray(value[0])) {\n      //TODO : Handle case where the value has multiple values such as in the case of a list\n      return value[0].map((val) =>\n        buildEsRule(field, [val], operator, config, valueSrc, syntax)\n      );\n    } else {\n      return buildEsRule(field, value, operator, config, valueSrc, syntax);\n    }\n  }\n\n  if (type === \"group\" || type === \"rule_group\") {\n    const not = properties.get(\"not\");\n    let conjunction = properties.get(\"conjunction\");\n    if (!conjunction)\n      conjunction = defaultConjunction(config);\n    const children = tree.get(\"children1\");\n    return buildEsGroup(children, conjunction, not, elasticSearchFormat, config, syntax);\n  }\n}\n","import {sleep} from \"./stuff\";\nimport {listValuesToArray, getListValue, makeCustomListValue} from \"./listValues\";\n\n// simple polyfill for Next\nconst findLastIndex = (arr, fn) => {\n  if (arr.findLastIndex) {\n    return arr.findLastIndex(fn);\n  } else {\n    const ind = [...arr].reverse().findIndex(fn);\n    return ind == -1 ? -1 : (arr.length-1 - ind);\n  }\n};\n\nexport const simulateAsyncFetch = (all, cPageSize = 0, delay = 1000) => async (search, offset, meta) => {\n  const pageSize = meta?.pageSize != undefined ? meta.pageSize : cPageSize;\n  const filtered = listValuesToArray(all)\n    .filter(({title, value}) => search == null ? true : (\n      title.toUpperCase().indexOf(search.toUpperCase()) != -1\n      || `${value}`.toUpperCase().indexOf(search.toUpperCase()) != -1\n    ));\n  const pages = pageSize ? Math.ceil(filtered.length / pageSize) : 0;\n  const currentOffset = offset || 0;\n  const currentPage = pageSize ? Math.ceil(currentOffset / pageSize) : null;\n  const values = pageSize ? filtered.slice(currentOffset, currentOffset + pageSize) : filtered;\n  const newOffset = pageSize ? currentOffset + values.length : null;\n  const hasMore = pageSize ? (newOffset < filtered.length) : false;\n  if (delay) {\n    // console.debug(\"simulateAsyncFetch\", {\n    //   search, offset, values, hasMore, filtered\n    // });\n    await sleep(delay);\n  }\n  return {\n    values,\n    hasMore\n  };\n};\n\nexport const mergeListValues = (values, newValues, toStart = false, hideNewValues = false) => {\n  if (!newValues)\n    return values;\n  const old = values || [];\n  const newFiltered = newValues\n    .filter(v => old.find(av => \"\"+av.value == \"\"+v.value) == undefined)\n    .map(v => (hideNewValues ? {...v, isHidden: true} : v));\n  const merged = toStart ? [...newFiltered, ...old] : [...old, ...newFiltered];\n  return merged;\n};\n\nexport const optionToListValue = (val, listValues, allowCustomValues) => {\n  const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n  const item = getListValue(v, listValues);\n  const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n  const listValue = item || customItem;\n  const lvs = listValue ? [listValue] : undefined; //not allow []\n  return [v, lvs];\n};\n\nexport const optionsToListValues = (vals, listValues, allowCustomValues) => {\n  const newSelectedListValues = vals.map((val, _i) => {\n    const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n    const item = getListValue(v, listValues);\n    const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n    const listValue = item || customItem;\n    return listValue;\n  }).filter(o => o != undefined);\n  let newSelectedValues = newSelectedListValues\n    .map(o => (o?.value ?? o));\n  if (!newSelectedValues.length)\n    newSelectedValues = undefined; //not allow []\n  return [newSelectedValues, newSelectedListValues];\n};\n\nexport const listValueToOption = (lv) => {\n  if (lv == null) return null;\n  const {\n    title, value, disabled, groupTitle, grouplabel, renderTitle, children, label, isCustom, isHidden,\n    ...rest\n  } = lv;\n  let option = {\n    value,\n    title: title || label || children, // fix issue #930 for AntD\n  };\n  if (disabled)\n    option.disabled = disabled;\n  if (isCustom)\n    option.isCustom = isCustom;\n  if (isHidden)\n    option.isHidden = isHidden;\n  // group\n  if (groupTitle || grouplabel)\n    option.groupTitle = groupTitle || grouplabel;\n  // used only for MUI field autocomplete (if matchesType, render as bold)\n  if (renderTitle)\n    option.renderTitle = renderTitle;\n  option = {\n    ...option,\n    ...rest,\n  };\n  return option;\n};\n\nexport const fixListValuesGroupOrder = (listValues) => {\n  let newValues = [];\n  let groupTitles = [];\n  for (let lv of listValues) {\n    const i = findLastIndex(newValues, lv1 => {\n      return (lv1.groupTitle ?? \"\") == (lv.groupTitle ?? \"\");\n    });\n    if (lv.groupTitle != undefined && !groupTitles.includes(lv.groupTitle)) {\n      groupTitles.push(lv.groupTitle);\n      if (groupTitles.length === 1) {\n        // fix empty groupTitles\n        newValues = newValues.map(nv => ({...nv, groupTitle: \"\"}));\n      }\n    }\n    if (lv.groupTitle == undefined && groupTitles.length) {\n      // fix empty groupTitle\n      lv = {...lv, groupTitle: \"\"};\n    }\n    if (i != -1) {\n      newValues.splice(i+1, 0, lv);\n    } else {\n      newValues.push(lv);\n    }\n  }\n  return newValues;\n};\n\n\nexport { getListValue };\n","//import { customJsonLogicOperations } from \"../utils/jsonLogic\";\n\n// Tip: search for `customJsonLogicOperations` in codebase to see custom JL funcs we use in `jsonLogicCustomOps`\n\nconst NOW = {\n  label: \"Now\",\n  returnType: \"datetime\",\n  jsonLogic: \"now\",\n  jsonLogicCustomOps: {\n    now: {},\n  },\n  //spelFunc: \"new java.util.Date()\",\n  spelFunc: \"T(java.time.LocalDateTime).now()\",\n  sqlFormatFunc: () => \"NOW()\",\n  mongoFormatFunc: () => new Date(),\n  formatFunc: () => \"NOW\",\n};\n\nconst RELATIVE_DATETIME = {\n  label: \"Relative\",\n  returnType: \"datetime\",\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\"\", \"\", \"\"],\n  spelFormatFunc: ({date, op, val, dim}) => {\n    const dimPlural = dim.charAt(0).toUpperCase() + dim.slice(1) + \"s\";\n    const method = op + dimPlural;\n    return `${date}.${method}(${val})`;\n  },\n  spelImport: (spel) => {\n    let date, op, val, dim;\n    const matchRes = spel.methodName?.match(/^(minus|plus)(\\w+)s$/);\n    if (matchRes) {\n      dim = matchRes[2].toLowerCase();\n      op = matchRes[1];\n      if ([\"minus\", \"plus\"].includes(op)) {\n        if ([\"day\", \"week\", \"month\", \"year\"].includes(dim)) {\n          op = {type: \"string\", val: op};\n          dim = {type: \"string\", val: dim};\n          val = spel.args[0];\n          date = spel.obj;\n          return {date, op, val, dim};\n        }\n      }\n    }\n  },\n  jsonLogic: ({date, op, val, dim}) => ({\n    \"date_add\": [\n      date,\n      val * (op == \"minus\" ? -1 : +1),\n      dim\n    ]\n  }),\n  jsonLogicImport: (v) => {\n    const date = v[\"date_add\"][0];\n    const val = Math.abs(v[\"date_add\"][1]);\n    const op = v[\"date_add\"][1] >= 0 ? \"plus\" : \"minus\";\n    const dim = v[\"date_add\"][2];\n    return [date, op, val, dim];\n  },\n  jsonLogicCustomOps: {\n    date_add: {},\n  },\n  // MySQL\n  //todo: other SQL dialects?\n  sqlFormatFunc: ({date, op, val, dim}) => `DATE_ADD(${date}, INTERVAL ${parseInt(val) * (op == \"minus\" ? -1 : +1)} ${dim.replace(/^'|'$/g, \"\")})`,\n  mongoFormatFunc: null, //todo: support?\n  formatFunc: ({date, op, val, dim}) => (!val ? date : `${date} ${op == \"minus\" ? \"-\" : \"+\"} ${val} ${dim}`),\n  args: {\n    date: {\n      label: \"Date\",\n      type: \"datetime\",\n      defaultValue: {func: \"NOW\", args: []},\n      valueSources: [\"func\", \"field\", \"value\"],\n      spelEscapeForFormat: true,\n    },\n    op: {\n      label: \"Op\",\n      type: \"select\",\n      defaultValue: \"plus\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          plus: \"+\",\n          minus: \"-\",\n        },\n      },\n      spelEscapeForFormat: false,\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      fieldSettings: {\n        min: 0,\n      },\n      defaultValue: 0,\n      valueSources: [\"value\"],\n      spelEscapeForFormat: false,\n    },\n    dim: {\n      label: \"Dimension\",\n      type: \"select\",\n      defaultValue: \"day\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          day: \"day\",\n          week: \"week\",\n          month: \"month\",\n          year: \"year\",\n        },\n      },\n      spelEscapeForFormat: false,\n    },\n  }\n};\n\nconst LOWER = {\n  label: \"Lowercase\",\n  mongoFunc: \"$toLower\",\n  jsonLogic: \"toLowerCase\",\n  spelFunc: \"${str}.toLowerCase()\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toLowerCase: {}\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\", \"func\"],\n    },\n  }\n};\n\nconst UPPER = {\n  label: \"Uppercase\",\n  mongoFunc: \"$toUpper\",\n  jsonLogic: \"toUpperCase\",\n  spelFunc: \"${str}.toUpperCase()\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toUpperCase: {},\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\", \"func\"],\n    },\n  }\n};\n\nconst LINEAR_REGRESSION = {\n  label: \"Linear regression\",\n  returnType: \"number\",\n  formatFunc: ({coef, bias, val}, _) => `(${coef} * ${val} + ${bias})`,\n  sqlFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelImport: (spel) => {\n    let coef, val, bias, a;\n    if (spel.type === \"op-plus\") {\n      [a, bias] = spel.children;\n      if (a.type === \"op-multiply\") {\n        [coef, val] = a.children;\n        return {coef, val, bias};\n      }\n    }\n  },\n  mongoFormatFunc: ({coef, bias, val}) => ({\"$sum\": [{\"$multiply\": [coef, val]}, bias]}),\n  jsonLogic: ({coef, bias, val}) => ({ \"+\": [ {\"*\": [coef, val]}, bias ] }),\n  jsonLogicImport: (v) => {\n    const coef = v[\"+\"][0][\"*\"][0];\n    const val = v[\"+\"][0][\"*\"][1];\n    const bias = v[\"+\"][1];\n    return [coef, val, bias];\n  },\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\" * \", \" + \"],\n  args: {\n    coef: {\n      label: \"Coef\",\n      type: \"number\",\n      defaultValue: 1,\n      valueSources: [\"value\"],\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      valueSources: [\"value\", \"field\"],\n    },\n    bias: {\n      label: \"Bias\",\n      type: \"number\",\n      defaultValue: 0,\n      valueSources: [\"value\"],\n    }\n  }\n};\n\nexport {\n  LOWER,\n  UPPER,\n  NOW,\n  RELATIVE_DATETIME,\n  LINEAR_REGRESSION,\n};\n","import moment from \"moment\";\nimport {\n  SqlString, sqlEmptyValue, mongoEmptyValue, spelEscape, spelFixList,\n  stringifyForDisplay\n} from \"../utils/export\";\nimport {escapeRegExp} from \"../utils/stuff\";\nimport {getTitleInListValues} from \"../utils/listValues\";\n\n// helpers for mongo format\nexport const mongoFormatOp1 = (mop, mc, not,  field, _op, value, useExpr, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  const mv = mc(value, fieldDef);\n  if (mv === undefined)\n    return undefined;\n  if (not) {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: { \"$ne\": mv } }; // short form\n    return !useExpr\n      ? { [field]: { \"$not\": { [mop]: mv } } } \n      : { \"$not\": { [mop]: [$field, mv] } };\n  } else {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: mv }; // short form\n    return !useExpr\n      ? { [field]: { [mop]: mv } } \n      : { [mop]: [$field, mv] };\n  }\n};\n\nexport const mongoFormatOp2 = (mops, not,  field, _op, values, useExpr, valueSrcs, valueTypes, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  if (not) {\n    return !useExpr\n      ? { [field]: { \"$not\": { [mops[0]]: values[0], [mops[1]]: values[1] } } } \n      : {\"$not\":\n                {\"$and\": [\n                  { [mops[0]]: [ $field, values[0] ] },\n                  { [mops[1]]: [ $field, values[1] ] },\n                ]}\n      };\n  } else {\n    return !useExpr\n      ? { [field]: { [mops[0]]: values[0], [mops[1]]: values[1] } } \n      : {\"$and\": [\n        { [mops[0]]: [ $field, values[0] ] },\n        { [mops[1]]: [ $field, values[1] ] },\n      ]};\n  }\n};\n\nconst ctx = {\n  utils: {\n    SqlString,\n    moment,\n    mongoFormatOp1,\n    mongoFormatOp2,\n    mongoEmptyValue,\n    escapeRegExp,\n    sqlEmptyValue,\n    stringifyForDisplay,\n    getTitleInListValues,\n    spelEscape,\n    spelFixList,\n  },\n};\n\nexport default ctx;\n","import {settings as defaultSettings} from \"./default\";\nimport ctx from \"./ctx\";\n\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  AND: {\n    label: \"And\",\n    mongoConj: \"$and\",\n    jsonLogicConj: \"and\",\n    sqlConj: \"AND\",\n    spelConj: \"and\",\n    spelConjs: [\"and\", \"&&\"],\n    reversedConj: \"OR\",\n    formatConj: (children, conj, not, isForDisplay) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"AND\" : \"&&\") + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: (children, conj, not) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"AND\" + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    spelFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"&&\" + \" \") + (omitBrackets ? \"\" : \")\")\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n  },\n  OR: {\n    label: \"Or\",\n    mongoConj: \"$or\",\n    jsonLogicConj: \"or\",\n    sqlConj: \"OR\",\n    spelConj: \"or\",\n    spelConjs: [\"or\", \"||\"],\n    reversedConj: \"AND\",\n    formatConj: (children, conj, not, isForDisplay) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"OR\" : \"||\") + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: (children, conj, not) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"OR\" + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    spelFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"||\" + \" \") + (omitBrackets ? \"\" : \")\")\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n  },\n};\n\n//----------------------------  operators\n\n\n\nconst operators = {\n  equal: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    reversedOp: \"not_equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      const opStr = isForDisplay ? \"=\" : opDef.label;\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `NOT ${field}` : `${field}`;\n      else\n        return `${field} ${opStr} ${value}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  not_equal: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    reversedOp: \"equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `${field}` : `NOT ${field}`;\n      else\n        return `${field} ${opDef.label} ${value}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    jsonLogic: \"!=\",\n  },\n  less: {\n    label: \"<\",\n    labelForFormat: \"<\",\n    sqlOp: \"<\",\n    spelOp: \"<\",\n    spelOps: [\"<\", \"lt\"],\n    reversedOp: \"greater_or_equal\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$lt\", v => v, false, ...args); },\n    jsonLogic: \"<\",\n    elasticSearchQueryType: \"range\",\n  },\n  less_or_equal: {\n    label: \"<=\",\n    labelForFormat: \"<=\",\n    sqlOp: \"<=\",\n    spelOp: \"<=\",\n    spelOps: [\"<=\", \"le\"],\n    reversedOp: \"greater\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$lte\", v => v, false, ...args); },\n    jsonLogic: \"<=\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater: {\n    label: \">\",\n    labelForFormat: \">\",\n    sqlOp: \">\",\n    spelOp: \">\",\n    spelOps: [\">\", \"gt\"],\n    reversedOp: \"less_or_equal\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gt\", v => v, false, ...args); },\n    jsonLogic: \">\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater_or_equal: {\n    label: \">=\",\n    labelForFormat: \">=\",\n    sqlOp: \">=\",\n    spelOp: \">=\",\n    spelOps: [\">=\", \"ge\"],\n    reversedOp: \"less\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gte\", v => v, false, ...args); },\n    jsonLogic: \">=\",\n    elasticSearchQueryType: \"range\",\n  },\n  like: {\n    label: \"Contains\",\n    labelForFormat: \"Contains\",\n    reversedOp: \"not_like\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.contains(${1})\",\n    valueTypes: [\"text\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined), false, ...args); },\n    //jsonLogic: (field, op, val) => ({ \"in\": [val, field] }),\n    jsonLogic: \"in\",\n    _jsonLogicIsRevArgs: true,\n    valueSources: [\"value\"],\n    elasticSearchQueryType: \"regexp\",\n  },\n  not_like: {\n    isNotOp: true,\n    label: \"Not contains\",\n    reversedOp: \"like\",\n    labelForFormat: \"Not Contains\",\n    sqlOp: \"NOT LIKE\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined), true, ...args); },\n    valueSources: [\"value\"],\n  },\n  starts_with: {\n    label: \"Starts with\",\n    labelForFormat: \"Starts with\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.startsWith(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? \"^\" + this.utils.escapeRegExp(v) : undefined), false, ...args); },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  ends_with: {\n    label: \"Ends with\",\n    labelForFormat: \"Ends with\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.endsWith(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) + \"$\" : undefined), false, ...args); },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  between: {\n    label: \"Between\",\n    labelForFormat: \"BETWEEN\",\n    sqlOp: \"BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], false, ...args); },\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"not_between\",\n    jsonLogic: \"<=\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1] ? null : \"Invalid range\";\n      }\n      return null;\n    },\n    elasticSearchQueryType: function elasticSearchQueryType(type) {\n      return type === \"time\" ? \"filter\" : \"range\";\n    },\n  },\n  not_between: {\n    isNotOp: true,\n    label: \"Not between\",\n    labelForFormat: \"NOT BETWEEN\",\n    sqlOp: \"NOT BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} NOT BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], true, ...args); },\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"between\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1] ? null : \"Invalid range\";\n      }\n      return null;\n    },\n  },\n  is_empty: {\n    label: \"Is empty\",\n    labelForFormat: \"IS EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_not_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS EMPTY` : `!${field}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) = ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is empty or null\n      return `${field} <= ''`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null], false, ...args); },\n    jsonLogic: \"!\",\n  },\n  is_not_empty: {\n    isNotOp: true,\n    label: \"Is not empty\",\n    labelForFormat: \"IS NOT EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT EMPTY` : `!!${field}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) <> ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is not empty and not null\n      return `${field} > ''`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$nin\", (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null], false, ...args); },\n    jsonLogic: \"!!\",\n    elasticSearchQueryType: \"exists\",\n  },\n  is_null: {\n    label: \"Is null\",\n    labelForFormat: \"IS NULL\",\n    sqlOp: \"IS NULL\",\n    cardinality: 0,\n    reversedOp: \"is_not_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NULL` : `!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} == null`;\n    },\n    // check if value is null OR not exists\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => null, false, ...args); },\n    jsonLogic: \"==\",\n  },\n  is_not_null: {\n    label: \"Is not null\",\n    labelForFormat: \"IS NOT NULL\",\n    sqlOp: \"IS NOT NULL\",\n    cardinality: 0,\n    reversedOp: \"is_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT NULL` : `!!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} != null`;\n    },\n    // check if value exists and is not null\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => null, false, ...args); },\n    jsonLogic: \"!=\",\n    elasticSearchQueryType: \"exists\",\n  },\n  select_equals: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      return `${field} ${opStr} ${value}`;\n    },\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    reversedOp: \"select_not_equals\",\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_equals: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} != ${value}`;\n    },\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    reversedOp: \"select_equals\",\n    jsonLogic: \"!=\",\n  },\n  select_any_in: {\n    label: \"Any in\",\n    labelForFormat: \"IN\",\n    sqlOp: \"IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} IN (${values.join(\", \")})`;\n      else\n        return `${field} IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    valueTypes: [\"multiselect\"],\n    spelOp: \"${1}.contains(${0})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", v => v, false, ...args); },\n    reversedOp: \"select_not_any_in\",\n    jsonLogic: \"in\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_any_in: {\n    isNotOp: true,\n    label: \"Not in\",\n    labelForFormat: \"NOT IN\",\n    sqlOp: \"NOT IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT IN (${values.join(\", \")})`;\n      else\n        return `${field} NOT IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} NOT IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$nin\", v => v, false, ...args); },\n    reversedOp: \"select_any_in\",\n  },\n  // it's not \"contains all\", but \"contains any\" operator\n  multiselect_contains: {\n    label: \"Contains\",\n    labelForFormat: \"CONTAINS\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_not_contains\",\n    jsonLogic2: \"some-in\",\n    jsonLogic: (field, op, vals) => ({\n      \"some\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    //spelOp: \"${0}.containsAll(${1})\",\n    spelOp: \"T(CollectionUtils).containsAny(${0}, ${1})\",\n    elasticSearchQueryType: \"term\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", v => v, false, ...args); },\n  },\n  multiselect_not_contains: {\n    isNotOp: true,\n    label: \"Not contains\",\n    labelForFormat: \"NOT CONTAINS\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} NOT CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_contains\"\n  },\n  multiselect_equals: {\n    label: \"Equals\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      if (valueSrc == \"value\")\n        return `${field} ${opStr} [${values.join(\", \")}]`;\n      else\n        return `${field} ${opStr} ${values}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} = '${values.map(v => this.utils.SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    spelOp: \"${0}.equals(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    reversedOp: \"multiselect_not_equals\",\n    jsonLogic2: \"all-in\",\n    jsonLogic: (field, op, vals) => ({\n      // it's not \"equals\", but \"includes\" operator - just for example\n      \"all\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    elasticSearchQueryType: \"term\",\n  },\n  multiselect_not_equals: {\n    isNotOp: true,\n    label: \"Not equals\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} != [${values.join(\", \")}]`;\n      else\n        return `${field} != ${values}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} != '${values.map(v => this.utils.SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    reversedOp: \"multiselect_equals\",\n  },\n  proximity: {\n    label: \"Proximity search\",\n    cardinality: 2,\n    valueLabels: [\n      { label: \"Word 1\", placeholder: \"Enter first word\" },\n      { label: \"Word 2\", placeholder: \"Enter second word\" },\n    ],\n    textSeparators: [\n      //'Word 1',\n      //'Word 2'\n    ],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const prox = operatorOptions.get(\"proximity\");\n      return `${field} ${val1} NEAR/${prox} ${val2}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      // https://learn.microsoft.com/en-us/sql/relational-databases/search/search-for-words-close-to-another-word-with-near?view=sql-server-ver16#example-1\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const aVal1 = this.utils.SqlString.trim(val1);\n      const aVal2 = this.utils.SqlString.trim(val2);\n      const prox = operatorOptions.get(\"proximity\");\n      return `CONTAINS(${field}, 'NEAR((${aVal1}, ${aVal2}), ${prox})')`;\n    },\n    mongoFormatOp: undefined, // not supported\n    jsonLogic: undefined, // not supported\n    options: {\n      optionLabel: \"Near\", // label on top of \"near\" selectbox (for config.settings.showLabels==true)\n      optionTextBefore: \"Near\", // label before \"near\" selectbox (for config.settings.showLabels==false)\n      optionPlaceholder: \"Select words between\", // placeholder for \"near\" selectbox\n      minProximity: 2,\n      maxProximity: 10,\n      defaults: {\n        proximity: 2\n      },\n    },\n  },\n  some: {\n    label: \"Some\",\n    labelForFormat: \"SOME\",\n    cardinality: 0,\n    jsonLogic: \"some\",\n    spelFormatOp: (filteredSize) => `${filteredSize} > 0`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gt\", v => 0, false, ...args); },\n  },\n  all: {\n    label: \"All\",\n    labelForFormat: \"ALL\",\n    cardinality: 0,\n    jsonLogic: \"all\",\n    spelFormatOp: (filteredSize, op, fullSize) => `${filteredSize} == ${fullSize}`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n  },\n  none: {\n    label: \"None\",\n    labelForFormat: \"NONE\",\n    cardinality: 0,\n    jsonLogic: \"none\",\n    spelFormatOp: (filteredSize) => `${filteredSize} == 0`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => 0, false, ...args); },\n  }\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"String\",\n    valuePlaceholder: \"Enter string\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  textarea: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Text\",\n    valuePlaceholder: \"Enter text\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n    fullWidth: true,\n  },\n  number: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number\",\n    valueLabels: [\n      { label: \"Number from\", placeholder: \"Enter number from\" },\n      { label: \"Number to\", placeholder: \"Enter number to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef) {\n      const isFloat = wgtDef.step && !Number.isInteger(wgtDef.step);\n      return this.utils.spelEscape(val, isFloat);\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  slider: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number or move slider\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  select: {\n    type: \"select\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Value\",\n    valuePlaceholder: \"Select value\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      let valLabel = this.utils.getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, val);\n      return isForDisplay ? this.utils.stringifyForDisplay(valLabel) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  multiselect: {\n    type: \"multiselect\",\n    jsType: \"array\",\n    valueSrc: \"value\",\n    valueLabel: \"Values\",\n    valuePlaceholder: \"Select values\",\n    formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n      let valsLabels = vals.map(v => this.utils.getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, v));\n      return isForDisplay ? valsLabels.map(this.utils.stringifyForDisplay) : vals.map(JSON.stringify);\n    },\n    sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n      return vals.map(v => this.utils.SqlString.escape(v));\n    },\n    spelFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n      const isCallable = opDef && opDef.spelOp && opDef.spelOp.startsWith(\"${1}\");\n      let res = this.utils.spelEscape(vals); // inline list\n      if (isCallable) {\n        // `{1,2}.contains(1)` NOT works\n        // `{1,2}.?[true].contains(1)` works\n        res = this.utils.spelFixList(res);\n      }\n      return res;\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  date: {\n    type: \"date\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD\",\n    valueLabel: \"Date\",\n    valuePlaceholder: \"Enter date\",\n    valueLabels: [\n      { label: \"Date from\", placeholder: \"Enter date from\" },\n      { label: \"Date to\", placeholder: \"Enter date to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"YYYY-MM-DD\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD\");\n      const fmt = \"yyyy-MM-dd\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDate).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    spelImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDate\"],\n        },\n        methodName: \"parse\",\n        args: [\n          {var: \"v\"},\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [\n              {var: \"fmt\"}\n            ]\n          },\n        ],\n      }\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (args?.fmt?.value?.includes?.(\" \") || args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\"))\n        return [undefined, `Invalid date format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      return this.utils.moment(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  time: {\n    type: \"time\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    valueFormat: \"HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Time\",\n    valuePlaceholder: \"Enter time\",\n    valueLabels: [\n      { label: \"Time from\", placeholder: \"Enter time from\" },\n      { label: \"Time to\", placeholder: \"Enter time to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"HH:mm:ss\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const fmt = \"HH:mm:ss\";\n      const v = dateVal.format(\"HH:mm:ss\");\n      return `T(java.time.LocalTime).parse('${v}')`;\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n    },\n    spelImportFuncs: [\n      \"T(java.time.LocalTime).parse(${v})\",\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\"\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (args?.fmt && (!args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\") || args.fmt?.value?.includes(\" \")))\n        return [undefined, `Invalid time format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, \"HH:mm:ss\");\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    toJS: function (val, fieldSettings) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\") : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    elasticSearchFormatValue: function elasticSearchFormatValue(queryType, value, operator, fieldName) {\n      return {\n        script: {\n          script: {\n            source: \"doc[\".concat(fieldName, \"][0].getHour() >== params.min && doc[\").concat(fieldName, \"][0].getHour() <== params.max\"),\n            params: {\n              min: value[0],\n              max: value[1]\n            }\n          }\n        }\n      };\n    },\n  },\n  datetime: {\n    type: \"datetime\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Datetime\",\n    valuePlaceholder: \"Enter datetime\",\n    valueLabels: [\n      { label: \"Datetime from\", placeholder: \"Enter datetime from\" },\n      { label: \"Datetime to\", placeholder: \"Enter datetime to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat + \" \" + wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.toDate());\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD HH:mm:ss\");\n      const fmt = \"yyyy-MM-dd HH:mm:ss\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDateTime).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    spelImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDateTime\"],\n        },\n        methodName: \"parse\",\n        args: [\n          {var: \"v\"},\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [\n              {var: \"fmt\"}\n            ]\n          },\n        ],\n      }\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (!args?.fmt?.value?.includes?.(\" \"))\n        return [undefined, `Invalid datetime format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      return this.utils.moment(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  boolean: {\n    type: \"boolean\",\n    jsType: \"boolean\",\n    valueSrc: \"value\",\n    labelYes: \"Yes\",\n    labelNo: \"No\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? (val ? \"Yes\" : \"No\") : JSON.stringify(!!val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    defaultValue: false,\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  field: {\n    valueSrc: \"field\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay, op, opDef, rightFieldDef) => {\n      return isForDisplay ? (rightFieldDef.label || val) : val;\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef, rightFieldDef) => {\n      return val;\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return val;\n    },\n    valueLabel: \"Field to compare\",\n    valuePlaceholder: \"Select field to compare\",\n  },\n  func: {\n    valueSrc: \"func\",\n    valueLabel: \"Function\",\n    valuePlaceholder: \"Select function\",\n  },\n  case_value: {\n    valueSrc: \"value\",\n    type: \"case_value\",\n    spelFormatValue: function (val) {\n      return this.utils.spelEscape(val === \"\" ? null : val);\n    },\n    spelImportValue: (val) => {\n      return [val.value, []];\n    }\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  text: {\n    defaultOperator: \"equal\",\n    mainWidget: \"text\",\n    widgets: {\n      text: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"proximity\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      textarea: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      field: {\n        operators: [\n          //unary ops (like `is_empty`) will be excluded anyway, see getWidgetsForFieldOp()\n          \"equal\",\n          \"not_equal\",\n          \"proximity\", //can exclude if you want\n        ],\n      }\n    },\n  },\n  number: {\n    defaultOperator: \"equal\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      slider: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ],\n      },\n    },\n  },\n  date: {\n    defaultOperator: \"equal\",\n    widgets: {\n      date: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ]\n      }\n    },\n  },\n  time: {\n    defaultOperator: \"equal\",\n    widgets: {\n      time: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  datetime: {\n    defaultOperator: \"equal\",\n    widgets: {\n      datetime: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      }\n    },\n  },\n  select: {\n    mainWidget: \"select\",\n    defaultOperator: \"select_equals\",\n    widgets: {\n      select: {\n        operators: [\n          \"select_equals\",\n          \"select_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      multiselect: {\n        operators: [\n          \"select_any_in\",\n          \"select_not_any_in\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n    },\n  },\n  multiselect: {\n    defaultOperator: \"multiselect_equals\",\n    widgets: {\n      multiselect: {\n        operators: [\n          \"multiselect_contains\",\n          \"multiselect_not_contains\",\n          \"multiselect_equals\",\n          \"multiselect_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  boolean: {\n    defaultOperator: \"equal\",\n    widgets: {\n      boolean: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {\n          //you can enable this if you don't use fields as value sources\n          // hideOperator: true,\n          // operatorInlineLabel: \"is\",\n        }\n      },\n      field: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n        ],\n      }\n    },\n  },\n  \"!group\": {\n    defaultOperator: \"some\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        widgetProps: {\n          min: 0\n        },\n        operators: [\n          // w/o operand\n          \"some\",\n          \"all\",\n          \"none\",\n\n          // w/ operand - count\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n        ],\n        opProps: {\n          equal: {\n            label: \"Count ==\"\n          },\n          not_equal: {\n            label: \"Count !=\"\n          },\n          less: {\n            label: \"Count <\"\n          },\n          less_or_equal: {\n            label: \"Count <=\"\n          },\n          greater: {\n            label: \"Count >\"\n          },\n          greater_or_equal: {\n            label: \"Count >=\"\n          },\n          between: {\n            label: \"Count between\"\n          },\n          not_between: {\n            label: \"Count not between\"\n          }\n        }\n      }\n    }\n  },\n  \"case_value\": {\n    mainWidget: \"case_value\",\n    widgets: {\n      case_value: {}\n    }\n  },\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...defaultSettings,\n\n  convertableWidgets: {\n    \"number\": [\"slider\", \"rangeslider\"],\n    \"slider\": [\"number\", \"rangeslider\"],\n    \"rangeslider\": [\"number\", \"slider\"],\n    \"text\": [\"textarea\"],\n    \"textarea\": [\"text\"]\n  },\n\n  formatSpelField: function (field, parentField, parts, partsExt, fieldDefinition, config) {\n    let fieldName = partsExt.map(({key, parent, fieldSeparator: sep}, ind) => {\n      if (ind == 0) {\n        if (parent == \"[map]\")\n          return `#this[${this.utils.spelEscape(key)}]`;\n        else if (parent == \"[class]\")\n          return key;\n        else\n          return key;\n      } else {\n        if (parent == \"map\" || parent == \"[map]\")\n          return `[${this.utils.spelEscape(key)}]`;\n        else if (parent == \"class\" || parent == \"[class]\")\n          return `${sep}${key}`;\n        else\n          return `${sep}${key}`;\n      }\n    }).join(\"\");\n    if (fieldDefinition.fieldName) {\n      fieldName = field;\n    }\n    if (fieldDefinition.isSpelVariable) {\n      fieldName = \"#\" + fieldName;\n    }\n    return fieldName;\n  },\n  sqlFormatReverse: (q) => {\n    if (q == undefined) return undefined;\n    return \"NOT(\" + q + \")\";\n  },\n  spelFormatReverse: (q) => {\n    if (q == undefined) return undefined;\n    return \"!(\" + q + \")\";\n  },\n  formatReverse: (q, operator, reversedOp, operatorDefinition, revOperatorDefinition, isForDisplay) => {\n    if (q == undefined) return undefined;\n    if (isForDisplay)\n      return \"NOT (\" + q + \")\";\n    else\n      return \"!(\" + q + \")\";\n  },\n  formatAggr: (whereStr, aggrField, operator, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay, aggrFieldDef) => {\n    const {labelForFormat, cardinality} = opDef;\n    if (cardinality == 0) {\n      const cond = whereStr ? ` HAVE ${whereStr}` : \"\";\n      return `${labelForFormat} OF ${aggrField}${cond}`;\n    } else if (cardinality == undefined || cardinality == 1) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${value}`;\n    } else if (cardinality == 2) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      let valFrom = value.first();\n      let valTo = value.get(1);\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${valFrom} AND ${valTo}`;\n    }\n  },\n  jsonLogic: {\n    groupVarKey: \"var\",\n    altVarKey: \"var\",\n    lockedOp: \"locked\"\n  },\n  \n  canCompareFieldWithField: (leftField, leftFieldConfig, rightField, rightFieldConfig) => {\n    //for type == 'select'/'multiselect' you can check listValues\n    return true;\n  },\n\n  // enable compare fields\n  valueSourcesInfo: {\n    value: {\n      label: \"Value\"\n    },\n    field: {\n      label: \"Field\",\n      widget: \"field\",\n    },\n    func: {\n      label: \"Function\",\n      widget: \"func\",\n    }\n  },\n\n};\n\n//----------------------------\n\nconst _addMixins = (config, mixins, doAdd = true) => {\n  const mixinFuncs = {\n    rangeslider: mixinWidgetRangeslider,\n    treeselect: mixinWidgetTreeselect,\n    treemultiselect: mixinWidgetTreemultiselect,\n    rangeable__date: mixinRangeableWidget(\"date\", \"date\"),\n  };\n  for (const mixName of mixins) {\n    const mixinFunc = mixinFuncs[mixName];\n    if (mixinFunc) {\n      config = mixinFunc(config, doAdd);\n    } else {\n      throw new Error(`Can't ${doAdd ? \"add\": \"remove\"} mixin ${mixName}`);\n    }\n  }\n  return config;\n};\n\nconst addMixins = (config, mixins) => {\n  return _addMixins(config, mixins, true);\n};\nconst removeMixins = (config, mixins) => {\n  return _addMixins(config, mixins, false);\n};\n\nconst mixinRangeableWidget = (type, widget) => (config, addMixin = true) => {\n  let { types } = config;\n\n  types = {\n    ...types,\n    [type]: {\n      ...types[type],\n      widgets: {\n        ...types[type].widgets,\n      }\n    }\n  };\n\n  if (addMixin) {\n    types[type].widgets[widget] = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n          textSeparators: [null, null],\n        },\n        not_between: {\n          isSpecialRange: true,\n          textSeparators: [null, null],\n        }\n      },\n      ...types[type].widgets[widget],\n    };\n  } else {\n    delete types[type].widgets[widget];\n  }\n\n  return {\n    ...config,\n    types,\n  };\n};\n\nconst mixinWidgetRangeslider = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.rangeslider = {\n      type: \"number\",\n      jsType: \"number\",\n      valueSrc: \"value\",\n      valueLabel: \"Range\",\n      valuePlaceholder: \"Select range\",\n      valueLabels: [\n        { label: \"Number from\", placeholder: \"Enter number from\" },\n        { label: \"Number to\", placeholder: \"Enter number to\" },\n      ],\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      singleWidget: \"slider\",\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.rangeslider,\n    };\n  } else {\n    delete widgets.rangeslider;\n  }\n\n  types = {\n    ...types,\n    number: {\n      ...types.number,\n      widgets: {\n        ...types.number.widgets,\n      }\n    }\n  };\n\n  if (addMixin) {\n    types.number.widgets.rangeslider = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n        },\n        not_between: {\n          isSpecialRange: true,\n        }\n      },\n      operators: [\n        \"between\",\n        \"not_between\",\n        // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\",\n        \"is_not_null\",\n      ],\n      ...types.number.widgets.rangeslider,\n    };\n  } else {\n    delete types.number.widgets.rangeslider;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreeselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treeselect = {\n      type: \"treeselect\",\n      jsType: \"string\",\n      valueSrc: \"value\",\n      valueLabel: \"Value\",\n      valuePlaceholder: \"Select value\",\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        const treeData = fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues;\n        let valLabel = this.utils.getTitleInListValues(treeData, val);\n        return isForDisplay ? this.utils.stringifyForDisplay(valLabel) : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.treeselect,\n    };\n  } else {\n    delete widgets.treeselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treeselect = {\n      mainWidget: \"treeselect\",\n      defaultOperator: \"select_equals\",\n      widgets: {\n        treeselect: {\n          operators: [\n            \"select_equals\",\n            \"select_not_equals\"\n          ],\n        },\n        treemultiselect: {\n          operators: [\n            \"select_any_in\",\n            \"select_not_any_in\"\n          ],\n        },\n      },\n      ...types.treeselect,\n    };\n  } else {\n    delete types.treeselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreemultiselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treemultiselect = {\n      type: \"treemultiselect\",\n      jsType: \"array\",\n      valueSrc: \"value\",\n      valueLabel: \"Values\",\n      valuePlaceholder: \"Select values\",\n      formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n        const treeData = fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues;\n        let valsLabels = vals.map(v => this.utils.getTitleInListValues(treeData, v));\n        return isForDisplay ? valsLabels.map(this.utils.stringifyForDisplay) : vals.map(JSON.stringify);\n      },\n      sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n        return vals.map(v => this.utils.SqlString.escape(v));\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.treemultiselect,\n    };\n  } else {\n    delete widgets.treemultiselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treemultiselect = {\n      defaultOperator: \"multiselect_equals\",\n      widgets: {\n        treemultiselect: {\n          operators: [\n            \"multiselect_equals\",\n            \"multiselect_not_equals\",\n          ],\n        }\n      },\n      ...types.treemultiselect,\n    };\n  } else {\n    delete types.treemultiselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nexport const ConfigMixins = {\n  addMixins,\n  removeMixins,\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\n// Mixin advanced widgets just to allow using it on server-side eg. for export routines\nconfig = addMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_FIELD_SRC = \"SET_FIELD_SRC\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import Immutable, { fromJS } from \"immutable\";\nimport {\n  expandTreePath, expandTreeSubpath, getItemByPath, fixPathsInTree, \n  getTotalRulesCountInTree, fixEmptyGroupsInTree, isEmptyTree, hasChildren, removeIsLockedInTree\n} from \"../utils/treeUtils\";\nimport {\n  defaultRuleProperties, defaultGroupProperties, getDefaultOperator, \n  defaultOperatorOptions, defaultItemProperties\n} from \"../utils/defaultUtils\";\nimport * as constants from \"./constants\";\nimport uuid from \"../utils/uuid\";\nimport {\n  getFuncConfig, getFieldConfig, getFieldWidgetConfig, getOperatorConfig\n} from \"../utils/configUtils\";\nimport {\n  getOperatorsForField, getOperatorsForType, getFirstOperator, getWidgetForFieldOp,\n  getNewValueForFieldOp, isEmptyItem, selectTypes\n} from \"../utils/ruleUtils\";\nimport {deepEqual, defaultValue, applyToJS} from \"../utils/stuff\";\nimport {validateValue} from \"../utils/validation\";\nimport omit from \"lodash/omit\";\nimport mapValues from \"lodash/mapValues\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst addNewGroup = (state, path, type, groupUuid, properties, config, children = null, meta = {}) => {\n  const {shouldCreateEmptyGroup} = config.settings;\n  const groupPath = path.push(groupUuid);\n  const canAddNewRule = !shouldCreateEmptyGroup;\n  const isDefaultCase = !!meta?.isDefaultCase;\n\n  const origState = state;\n  state = addItem(state, path, type, groupUuid, defaultGroupProperties(config).merge(fromJS(properties) || {}), config, children);\n  if (state !== origState) {\n    if (!children && !isDefaultCase) {\n      state = state.setIn(expandTreePath(groupPath, \"children1\"), new Immutable.OrderedMap());\n\n      // Add one empty rule into new group\n      if (canAddNewRule) {\n        state = addItem(state, groupPath, \"rule\", uuid(), defaultRuleProperties(config), config);\n      }\n    }\n\n    state = fixPathsInTree(state);\n  }\n  \n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst removeGroup = (state, path, config) => {\n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.slice(0, -1);\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  if (isEmptyParentGroup && !canLeaveEmptyGroup) {\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n    \n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty(!) rule to root\n      const canUseDefaultFieldAndOp = false;\n      const canGetFirst = false;\n      state = addItem(\n        state, new Immutable.List(), \"rule\", uuid(), \n        defaultRuleProperties(config, undefined, undefined, canUseDefaultFieldAndOp, canGetFirst), \n        config\n      );\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nconst removeRule = (state, path, config) => {\n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.pop();\n  const parent = state.getIn(expandTreePath(parentPath));\n\n  const parentField = parent.getIn([\"properties\", \"field\"]);\n  const parentOperator = parent.getIn([\"properties\", \"operator\"]);\n  const parentValue = parent.getIn([\"properties\", \"value\", 0]);\n  const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  const parentOperatorConfig = parentOperator ? getOperatorConfig(config, parentOperator, parentField) : null;\n  const hasGroupCountRule = parentField && parentOperator && parentOperatorConfig.cardinality != 0; // && parentValue != undefined;\n  \n  const isParentRuleGroup = parent.get(\"type\") == \"rule_group\";\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  const canLeaveEmpty = isParentRuleGroup \n    ? hasGroupCountRule && parentFieldConfig.initialEmptyWhere\n    : canLeaveEmptyGroup;\n  \n  if (isEmptyParentGroup && !canLeaveEmpty) {\n    if (isParentRuleGroup) {\n      // deleted last rule from rule_group, so delete whole rule_group\n      state = state.deleteIn(expandTreePath(parentPath));\n    }\n\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n\n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty(!) rule to root\n      const canUseDefaultFieldAndOp = false;\n      const canGetFirst = false;\n      state = addItem(\n        state, new Immutable.List(), \"rule\", uuid(), \n        defaultRuleProperties(config, undefined, undefined, canUseDefaultFieldAndOp, canGetFirst), \n        config\n      );\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} not\n */\nconst setNot = (state, path, not) =>\n  state.setIn(expandTreePath(path, \"properties\", \"not\"), not);\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nconst setLock = (state, path, lock) =>\n  removeIsLockedInTree(state.setIn(expandTreePath(path, \"properties\", \"isLocked\"), lock));\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nconst setConjunction = (state, path, conjunction) =>\n  state.setIn(expandTreePath(path, \"properties\", \"conjunction\"), conjunction);\n\n// convert children deeply from JS to Immutable\nconst _addChildren1 = (config, item, children) => {\n  if (children && Array.isArray(children)) {\n    item.children1 = new Immutable.OrderedMap(\n      children.reduce((map, it) => {\n        const id1 = uuid();\n        const it1 = {\n          ...it,\n          properties: defaultItemProperties(config, it).merge(fromJS(it.properties) || {}),\n          id: id1\n        };\n        _addChildren1(config, it1, it1.children1);\n        //todo: guarantee order\n        return {\n          ...map,\n          [id1]: new Immutable.Map(it1)\n        };\n      }, {})\n    );\n  }\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} type\n * @param {string} id\n * @param {Immutable.OrderedMap} properties\n * @param {object} config\n */\nconst addItem = (state, path, type, id, properties, config, children = null) => {\n  if (type == \"switch_group\")\n    throw new Error(\"Can't add switch_group programmatically\");\n  const { maxNumberOfCases, maxNumberOfRules, maxNesting } = config.settings;\n  const rootType = state.get(\"type\");\n  const isTernary = rootType == \"switch_group\";\n  const targetItem = state.getIn(expandTreePath(path));\n  const caseGroup = isTernary ? state.getIn(expandTreePath(path.take(2))) : null;\n  const childrenPath = expandTreePath(path, \"children1\");\n  const targetChildren = state.getIn(childrenPath);\n  const hasChildren = !!targetChildren && targetChildren.size;\n  const targetChildrenSize = hasChildren ? targetChildren.size : null;\n  let currentNumber, maxNumber;\n  if (type == \"case_group\") {\n    currentNumber = targetChildrenSize;\n    maxNumber = maxNumberOfCases;\n  } else if (type == \"group\") {\n    currentNumber = path.size;\n    maxNumber = maxNesting;\n  } else if (targetItem?.get(\"type\") == \"rule_group\") {\n    // don't restrict\n  } else {\n    currentNumber = isTernary ? getTotalRulesCountInTree(caseGroup) : getTotalRulesCountInTree(state);\n    maxNumber = maxNumberOfRules;\n  }\n  const canAdd = maxNumber && currentNumber ? (currentNumber < maxNumber) : true;\n  \n  const item = {type, id, properties};\n  _addChildren1(config, item, children);\n\n  const isLastDefaultCase = type == \"case_group\" && hasChildren && targetChildren.last().get(\"children1\") == null;\n\n  if (canAdd) {\n    const newChildren = new Immutable.OrderedMap({\n      [id]: new Immutable.Map(item)\n    });\n    if (!hasChildren) {\n      state = state.setIn(childrenPath, newChildren);\n    } else if (isLastDefaultCase) {\n      const last = targetChildren.last();\n      const newChildrenWithLast = new Immutable.OrderedMap({\n        [id]: new Immutable.Map(item),\n        [last.get(\"id\")]: last\n      });\n      state = state.deleteIn(expandTreePath(childrenPath, \"children1\", last.get(\"id\")));\n      state = state.mergeIn(childrenPath, newChildrenWithLast);\n    } else {\n      state = state.mergeIn(childrenPath, newChildren);\n    }\n    state = fixPathsInTree(state);\n  }\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n */\nconst removeItem = (state, path) => {\n  state = state.deleteIn(expandTreePath(path));\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} fromPath\n * @param {Immutable.List} toPath\n * @param {string} placement, see constants PLACEMENT_*: PLACEMENT_AFTER, PLACEMENT_BEFORE, PLACEMENT_APPEND, PLACEMENT_PREPEND\n * @param {object} config\n */\nconst moveItem = (state, fromPath, toPath, placement, config) => {\n  const from = getItemByPath(state, fromPath);\n  const sourcePath = fromPath.pop();\n  const source = fromPath.size > 1 ? getItemByPath(state, sourcePath) : null;\n  const sourceChildren = source ? source.get(\"children1\") : null;\n\n  const to = getItemByPath(state, toPath);\n  const targetPath = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) ? toPath : toPath.pop();\n  const target = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) \n    ? to\n    : toPath.size > 1 ? getItemByPath(state, targetPath) : null;\n  const targetChildren = target ? target.get(\"children1\") : null;\n\n  if (!source || !target || !from)\n    return state;\n\n  const isSameParent = (source.get(\"id\") == target.get(\"id\"));\n  const isSourceInsideTarget = targetPath.size < sourcePath.size \n        && deepEqual(targetPath.toArray(), sourcePath.toArray().slice(0, targetPath.size));\n  const isTargetInsideSource = targetPath.size > sourcePath.size \n        && deepEqual(sourcePath.toArray(), targetPath.toArray().slice(0, sourcePath.size));\n  let sourceSubpathFromTarget = null;\n  let targetSubpathFromSource = null;\n  if (isSourceInsideTarget) {\n    sourceSubpathFromTarget = Immutable.List(sourcePath.toArray().slice(targetPath.size));\n  } else if (isTargetInsideSource) {\n    targetSubpathFromSource = Immutable.List(targetPath.toArray().slice(sourcePath.size));\n  }\n\n  let newTargetChildren = targetChildren, newSourceChildren = sourceChildren;\n  if (!isTargetInsideSource)\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  if (isSameParent) {\n    newTargetChildren = newSourceChildren;\n  } else if (isSourceInsideTarget) {\n    newTargetChildren = newTargetChildren.updateIn(expandTreeSubpath(sourceSubpathFromTarget, \"children1\"), (_oldChildren) => newSourceChildren);\n  }\n\n  if (placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) {\n    newTargetChildren = Immutable.OrderedMap().withMutations(r => {\n      for (let [itemId, item] of newTargetChildren.entries()) {\n        if (itemId == to.get(\"id\") && placement == constants.PLACEMENT_BEFORE) {\n          r.set(from.get(\"id\"), from);\n        }\n                \n        r.set(itemId, item);\n\n        if (itemId == to.get(\"id\") && placement == constants.PLACEMENT_AFTER) {\n          r.set(from.get(\"id\"), from);\n        }\n      }\n    });\n  } else if (placement == constants.PLACEMENT_APPEND) {\n    newTargetChildren = newTargetChildren.merge(Immutable.OrderedMap({[from.get(\"id\")]: from}));\n  } else if (placement == constants.PLACEMENT_PREPEND) {\n    newTargetChildren = Immutable.OrderedMap({[from.get(\"id\")]: from}).merge(newTargetChildren);\n  }\n\n  if (isTargetInsideSource) {\n    newSourceChildren = newSourceChildren.updateIn(expandTreeSubpath(targetSubpathFromSource, \"children1\"), (_oldChildren) => newTargetChildren);\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  }\n\n  if (!isSameParent && !isSourceInsideTarget)\n    state = state.updateIn(expandTreePath(sourcePath, \"children1\"), (_oldChildren) => newSourceChildren);\n  if (!isTargetInsideSource)\n    state = state.updateIn(expandTreePath(targetPath, \"children1\"), (_oldChildren) => newTargetChildren);\n\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nconst setFieldSrc = (state, path, srcKey, config) => {\n  const {keepInputOnChangeFieldSrc} = config.settings;\n\n  // get fieldType for \"memory effect\"\n  const currentRule = state.getIn(expandTreePath(path));\n  const currentType = currentRule.get(\"type\");\n  const currentProperties = currentRule.get(\"properties\");\n  const currentField = currentProperties.get(\"field\");\n  //const currentFieldSrc = currentProperties.get(\"fieldSrc\");\n  const currentFielType = currentProperties.get(\"fieldType\");\n  const currentFieldConfig = getFieldConfig(config, currentField);\n  let fieldType = currentFieldConfig?.type || currentFielType;\n  if (!fieldType || fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n  const canReuseValue = !selectTypes.includes(fieldType);\n  const keepInput = keepInputOnChangeFieldSrc && !isEmptyItem(currentRule, config, true) && canReuseValue;\n\n  if (!keepInput) {\n    // clear ALL properties\n    state = state.setIn(\n      expandTreePath(path, \"properties\"),\n      defaultRuleProperties(config, null, null, false)\n    );\n  } else {\n    // clear non-relevant properties\n    state = state.setIn(expandTreePath(path, \"properties\", \"field\"), null);\n    // set fieldType for \"memory effect\"\n    state = state.setIn(expandTreePath(path, \"properties\", \"fieldType\"), fieldType);\n  }\n\n  // set fieldSrc\n  state = state.setIn(expandTreePath(path, \"properties\", \"fieldSrc\"), srcKey);\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} field\n */\nconst setField = (state, path, newField, config, asyncListValues, __isInternal) => {\n  let isInternalValueChange;\n  if (!newField)\n    return {tree: removeItem(state, path), isInternalValueChange};\n\n  const {fieldSeparator, setOpOnChangeField, showErrorMessage, keepInputOnChangeFieldSrc} = config.settings;\n  if (Array.isArray(newField))\n    newField = newField.join(fieldSeparator);\n\n  const currentType = state.getIn(expandTreePath(path, \"type\"));\n  const currentProperties = state.getIn(expandTreePath(path, \"properties\"));\n  const wasRuleGroup = currentType == \"rule_group\";\n  const currentFieldSrc = currentProperties.get(\"fieldSrc\");\n  const newFieldConfig = getFieldConfig(config, newField);\n  if (!newFieldConfig) {\n    console.warn(`No config for LHS ${newField}`);\n    return {tree: state, isInternalValueChange};\n  }\n  let fieldType = newFieldConfig.type;\n  if (fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n  \n  const currentOperator = currentProperties.get(\"operator\");\n  const currentOperatorOptions = currentProperties.get(\"operatorOptions\");\n  const currentField = currentProperties.get(\"field\");\n  const currentValue = currentProperties.get(\"value\");\n  const _currentValueSrc = currentProperties.get(\"valueSrc\", new Immutable.List());\n  const _currentValueType = currentProperties.get(\"valueType\", new Immutable.List());\n\n  const isRuleGroup = newFieldConfig.type == \"!group\";\n  const isRuleGroupExt = isRuleGroup && newFieldConfig.mode == \"array\";\n  const isChangeToAnotherType = wasRuleGroup != isRuleGroup;\n  const wasOkWithoutField = !currentField && currentFieldSrc && currentOperator;\n\n  // If the newly selected field supports the same operator the rule currently\n  // uses, keep it selected.\n  const lastOp = newFieldConfig && newFieldConfig.operators?.indexOf(currentOperator) !== -1 ? currentOperator : null;\n  let newOperator = null;\n  const availOps = currentFieldSrc === \"func\" \n    ? getOperatorsForType(config, fieldType)\n    : getOperatorsForField(config, newField);\n  if (availOps && availOps.length == 1)\n    newOperator = availOps[0];\n  else if (availOps && availOps.length > 1) {\n    for (let strategy of setOpOnChangeField || []) {\n      if (strategy == \"keep\" && !isChangeToAnotherType)\n        newOperator = lastOp;\n      else if (strategy == \"default\")\n        newOperator = getDefaultOperator(config, newField, false);\n      else if (strategy == \"first\")\n        newOperator = getFirstOperator(config, newField);\n      if (newOperator) //found op for strategy\n        break;\n    }\n  }\n\n  if (!isRuleGroup && !newFieldConfig.operators) {\n    console.warn(`Type ${newFieldConfig.type} is not supported`);\n    return {tree: state, isInternalValueChange};\n  }\n\n  if (wasRuleGroup && !isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule\");\n    state = state.deleteIn(expandTreePath(path, \"children1\"));\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  if (isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule_group\");\n    const {canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality} = getNewValueForFieldOp(\n      config, config, currentProperties, newField, newOperator, \"field\", true\n    );\n    let groupProperties = defaultGroupProperties(config, newFieldConfig).merge({\n      field: newField,\n      fieldSrc: \"field\",\n      mode: newFieldConfig.mode,\n    });\n    if (isRuleGroupExt) {\n      groupProperties = groupProperties.merge({\n        operator: newOperator,\n        value: newValue,\n        valueSrc: newValueSrc,\n        valueType: newValueType,\n      });\n    }\n    state = state.setIn(expandTreePath(path, \"children1\"), new Immutable.OrderedMap());\n    state = state.setIn(expandTreePath(path, \"properties\"), groupProperties);\n    if (newFieldConfig.initialEmptyWhere && operatorCardinality == 1) { // just `COUNT(grp) > 1` without `HAVING ..`\n      // no childeren\n    } else {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, newField), config);\n    }\n    state = fixPathsInTree(state);\n  } else {\n    state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n      const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n        config, config, current, newField, newOperator, \"field\", true\n      );\n      if (showErrorMessage) {\n        current = current\n          .set(\"valueError\", newValueError);\n      }\n      const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, newField);\n      isInternalValueChange = __isInternal; //todo: filter edge cases?\n      return current\n        .set(\"field\", newField)\n        .delete(\"fieldType\") // remove \"memory effect\"\n        .set(\"fieldSrc\", currentFieldSrc)\n        .set(\"operator\", newOperator)\n        .set(\"operatorOptions\", newOperatorOptions)\n        .set(\"value\", newValue)\n        .set(\"valueSrc\", newValueSrc)\n        .set(\"valueType\", newValueType)\n        .delete(\"asyncListValues\");\n    }));\n  }\n\n  return {tree: state, isInternalValueChange};\n\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} operator\n */\nconst setOperator = (state, path, newOperator, config) => {\n  const {showErrorMessage} = config.settings;\n\n  const properties = state.getIn(expandTreePath(path, \"properties\"));\n  const children = state.getIn(expandTreePath(path, \"children1\"));\n  const currentField = properties.get(\"field\");\n  const currentFieldSrc = properties.get(\"fieldSrc\");\n  const fieldConfig = getFieldConfig(config, currentField);\n  const isRuleGroup = fieldConfig?.type == \"!group\";\n  const operatorConfig = getOperatorConfig(config, newOperator, currentField);\n  const operatorCardinality = operatorConfig ? defaultValue(operatorConfig.cardinality, 1) : null;\n\n  state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n    const currentField = current.get(\"field\");\n    const currentOperatorOptions = current.get(\"operatorOptions\");\n    const _currentValue = current.get(\"value\", new Immutable.List());\n    const _currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n    const _currentOperator = current.get(\"operator\");\n\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, current, currentField, newOperator, \"operator\", true\n    );\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n    const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, currentField);\n\n    if (!canReuseValue) {\n      current = current\n        .delete(\"asyncListValues\");\n    }\n\n    return current\n      .set(\"operator\", newOperator)\n      .set(\"operatorOptions\", newOperatorOptions)\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n  }));\n\n  if (isRuleGroup) {\n    if (operatorCardinality == 0 && children.size == 0) {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, currentField), config);\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n * @param {boolean} __isInternal\n */\nconst setValue = (state, path, delta, value, valueType, config, asyncListValues, __isInternal) => {\n  const {fieldSeparator, showErrorMessage} = config.settings;\n  let isInternalValueChange;\n  const valueSrc = state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\")) || null;\n  if (valueSrc === \"field\" && Array.isArray(value))\n    value = value.join(fieldSeparator);\n\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  //const fieldSrc = state.getIn(expandTreePath(path, \"properties\", \"fieldSrc\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? defaultValue(operatorConfig.cardinality, 1) : null;\n\n  const isEndValue = false;\n  const calculatedValueType = valueType || calculateValueType(value, valueSrc, config);\n  const canFix = false;\n  const [validateError, fixedValue] = validateValue(\n    config, field, field, operator, value, calculatedValueType, valueSrc, asyncListValues, canFix, isEndValue, true\n  );\n  const isValid = !validateError;\n  if (fixedValue !== value) {\n    // eg, get exact value from listValues (not string)\n    value = fixedValue;\n  }\n\n  // Additional validation for range values\n  if (showErrorMessage) {\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, w, valueSrc);\n    const valueSrcs = Array.from({length: operatorCardinality}, (_, i) => (state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", i + \"\")) || null));\n        \n    if (operatorConfig && operatorConfig.validateValues && valueSrcs.filter(vs => vs == \"value\" || vs == null).length == operatorCardinality) {\n      const values = Array.from({length: operatorCardinality}, (_, i) => (i == delta ? value : state.getIn(expandTreePath(path, \"properties\", \"value\", i + \"\")) || null));\n      const jsValues = fieldWidgetDefinition && fieldWidgetDefinition.toJS\n        ? values.map(v => fieldWidgetDefinition.toJS.call(config.ctx, v, fieldWidgetDefinition))\n        : values;\n      const rangeValidateError = operatorConfig.validateValues(jsValues);\n\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), rangeValidateError);\n    }\n  }\n  \n  const lastValueArr = state.getIn(expandTreePath(path, \"properties\", \"value\"));\n  if (!lastValueArr) {\n    state = state\n      .setIn(expandTreePath(path, \"properties\", \"value\"), new Immutable.List(new Array(operatorCardinality)))\n      .setIn(expandTreePath(path, \"properties\", \"valueType\"), new Immutable.List(new Array(operatorCardinality)))\n      .setIn(expandTreePath(path, \"properties\", \"valueError\"), new Immutable.List(new Array(operatorCardinality)));\n  }\n\n  const lastValue = state.getIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"));\n  const lastError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", delta));\n  const isLastEmpty = lastValue == undefined;\n  const isLastError = !!lastError;\n  if (isValid || showErrorMessage) {\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n    // set only good value\n    if (typeof value === \"undefined\") {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), undefined);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), null);\n    } else {\n      if (asyncListValues) {\n        state = state.setIn(expandTreePath(path, \"properties\", \"asyncListValues\"), asyncListValues);\n      }\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), value);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), calculatedValueType);\n      isInternalValueChange = __isInternal && !isLastEmpty && !isLastError;\n    }\n  }\n  if (showErrorMessage) {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), validateError);\n  }\n  if (__isInternal && (isValid && isLastError || !isValid && !isLastError)) {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), validateError);\n    isInternalValueChange = false;\n  }\n  \n  return {tree: state, isInternalValueChange};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nconst setValueSrc = (state, path, delta, srcKey, config) => {\n  const {showErrorMessage} = config.settings;\n\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  const fieldSrc = state.getIn(expandTreePath(path, \"properties\", \"fieldSrc\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n\n  state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), undefined);\n  state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), null);\n  state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n\n  if (showErrorMessage) {\n    // clear value error\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), null);\n\n    // if current operator is range, clear possible range error\n    const operatorConfig = getOperatorConfig(config, operator, field);\n    const operatorCardinality = operator ? defaultValue(operatorConfig.cardinality, 1) : null;\n    if (operatorConfig.validateValues) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), null);\n    }\n  }\n  \n  // set valueSrc\n  if (typeof srcKey === \"undefined\") {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), null);\n  } else {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), srcKey);\n  }\n\n  // maybe set default value\n  if (srcKey) {\n    const properties = state.getIn(expandTreePath(path, \"properties\"));\n    // this call should return canReuseValue = false and provide default value\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, properties, field, operator, \"valueSrc\", true\n    );\n    if (!canReuseValue && newValueSrc.get(delta) == srcKey) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), newValue.get(delta));\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), newValueType.get(delta));\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nconst setOperatorOption = (state, path, name, value) => {\n  return state.setIn(expandTreePath(path, \"properties\", \"operatorOptions\", name), value);\n};\n\n/**\n * @param {Immutable.Map} state\n */\nconst checkEmptyGroups = (state, config) => {\n  const {canLeaveEmptyGroup} = config.settings;\n  if (!canLeaveEmptyGroup) {\n    state = fixEmptyGroupsInTree(state);\n  }\n  return state;\n};\n\n\n/**\n * \n */\nconst calculateValueType = (value, valueSrc, config) => {\n  let calculatedValueType = null;\n  if (value) {\n    if (valueSrc === \"field\") {\n      const fieldConfig = getFieldConfig(config, value);\n      if (fieldConfig) {\n        calculatedValueType = fieldConfig.type;\n      }\n    } else if (valueSrc === \"func\") {\n      const funcKey = value.get(\"func\");\n      if (funcKey) {\n        const funcConfig = getFuncConfig(config, funcKey);\n        if (funcConfig) {\n          calculatedValueType = funcConfig.returnType;\n        }\n      }\n    }\n  }\n  return calculatedValueType;\n};\n\nconst getField = (state, path) => {\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  return field;\n};\n\nconst emptyDrag = {\n  dragging: {\n    id: null,\n    x: null,\n    y: null,\n    w: null,\n    h: null\n  },\n  mousePos: {},\n  dragStart: {\n    id: null,\n  },\n};\n\nconst getActionMeta = (action, state) => {\n  if (!action || !action.type)\n    return null;\n  const actionKeysToOmit = [\n    \"config\", \"asyncListValues\", \"__isInternal\"\n  ];\n  const actionTypesToIgnore = [\n    constants.SET_TREE,\n    constants.SET_DRAG_START,\n    constants.SET_DRAG_PROGRESS,\n    constants.SET_DRAG_END,\n  ];\n  let meta = mapValues(omit(action, actionKeysToOmit), applyToJS);\n  let affectedField = action.path && getField(state.tree, action.path) || action.field;\n  if (affectedField) {\n    if (affectedField?.toJS)\n      affectedField = affectedField.toJS();\n    meta.affectedField = affectedField;\n  }\n  if (actionTypesToIgnore.includes(action.type) || action.type.indexOf(\"@@redux\") == 0)\n    meta = null;\n  return meta;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {object} action\n */\nexport default (config, tree, getMemoizedTree, setLastTree) => {\n  const initTree = tree;\n  const emptyState = {\n    tree: initTree, \n    ...emptyDrag\n  };\n    \n  return (state = emptyState, action) => {\n    const unset = {__isInternalValueChange: undefined, __lastAction: undefined};\n    let set = {};\n    let actionMeta = getActionMeta(action, state);\n\n    switch (action?.type) {\n    case constants.SET_TREE: {\n      const validatedTree = getMemoizedTree(action.config, action.tree);\n      set.tree = validatedTree;\n      break;\n    }\n\n    case constants.ADD_CASE_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"case_group\", action.id, action.properties, action.config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.ADD_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"group\", action.id, action.properties, action.config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.REMOVE_GROUP: {\n      set.tree = removeGroup(state.tree, action.path, action.config);\n      break;\n    }\n\n    case constants.ADD_RULE: {\n      set.tree = addItem(state.tree, action.path, action.ruleType, action.id, action.properties, action.config, action.children);\n      break;\n    }\n\n    case constants.REMOVE_RULE: {\n      set.tree = removeRule(state.tree, action.path, action.config);\n      break;\n    }\n\n    case constants.SET_CONJUNCTION: {\n      set.tree = setConjunction(state.tree, action.path, action.conjunction);\n      break;\n    }\n\n    case constants.SET_NOT: {\n      set.tree = setNot(state.tree, action.path, action.not);\n      break;\n    }\n\n    case constants.SET_FIELD: {\n      const {tree, isInternalValueChange} = setField(\n        state.tree, action.path, action.field, action.config,\n        action.asyncListValues, action.__isInternal\n      );\n      set.__isInternalValueChange = isInternalValueChange;\n      set.tree = tree;\n      break;\n    }\n\n    case constants.SET_FIELD_SRC: {\n      set.tree = setFieldSrc(state.tree, action.path, action.srcKey, action.config);\n      break;\n    }\n\n    case constants.SET_LOCK: {\n      set.tree = setLock(state.tree, action.path, action.lock);\n      break;\n    }\n\n    case constants.SET_OPERATOR: {\n      set.tree = setOperator(state.tree, action.path, action.operator, action.config);\n      break;\n    }\n\n    case constants.SET_VALUE: {\n      const {tree, isInternalValueChange} = setValue(\n        state.tree, action.path, action.delta, action.value, action.valueType, action.config, action.asyncListValues, action.__isInternal\n      );\n      set.__isInternalValueChange = isInternalValueChange;\n      set.tree = tree;\n      break;\n    }\n\n    case constants.SET_VALUE_SRC: {\n      set.tree = setValueSrc(state.tree, action.path, action.delta, action.srcKey, action.config);\n      break;\n    }\n\n    case constants.SET_OPERATOR_OPTION: {\n      set.tree = setOperatorOption(state.tree, action.path, action.name, action.value);\n      break;\n    }\n\n    case constants.MOVE_ITEM: {\n      set.tree = moveItem(state.tree, action.fromPath, action.toPath, action.placement, action.config);\n      break;\n    }\n\n    case constants.SET_DRAG_START: {\n      set.dragStart = action.dragStart;\n      set.dragging = action.dragging;\n      set.mousePos = action.mousePos;\n      break;\n    }\n\n    case constants.SET_DRAG_PROGRESS: {\n      set.mousePos = action.mousePos;\n      set.dragging = action.dragging;\n      break;\n    }\n\n    case constants.SET_DRAG_END: {\n      set.tree = checkEmptyGroups(state.tree, config);\n      set = { ...set, ...emptyDrag };\n      break;\n    }\n\n    default: {\n      break;\n    }\n    }\n\n    if (actionMeta) {\n      set.__lastAction = actionMeta;\n    }\n\n    if (setLastTree && set.tree && state.tree) {\n      setLastTree(state.tree);\n    }\n    \n    return {...state, ...unset, ...set};\n  };\n\n};\n","import Immutable, {fromJS} from \"immutable\";\nimport {toImmutableList} from \"../utils/stuff\";\nimport * as constants from \"../stores/constants\";\nimport { defaultRuleProperties, defaultGroupProperties } from \"../utils/defaultUtils\";\nimport uuid from \"../utils/uuid\";\n\n\n/**\n * @param {object} config\n * @param {Immutable.Map} tree\n */\nexport const setTree = (config, tree) => ({\n  type: constants.SET_TREE,\n  tree: tree,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addRule = (config, path, properties, ruleType = \"rule\", children = null, parentRuleGroupPath = null) => ({\n  type: constants.ADD_RULE,\n  ruleType: ruleType,\n  children: children,\n  path: toImmutableList(path),\n  id: uuid(),\n  properties: defaultRuleProperties(config, parentRuleGroupPath).merge(fromJS(properties) || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeRule = (config, path) => ({\n  type: constants.REMOVE_RULE,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addDefaultCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(fromJS(properties) || {}),\n  config: config,\n  meta: {\n    isDefaultCase: true\n  }\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(fromJS(properties) || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(fromJS(properties) || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeGroup = (config, path) => ({\n  type: constants.REMOVE_GROUP,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Array} fromPath\n * @param {Array} toPath\n * @param {String} placement, see constants PLACEMENT_*\n */\nexport const moveItem = (config, fromPath, toPath, placement) => ({\n  type: constants.MOVE_ITEM,\n  fromPath: toImmutableList(fromPath),\n  toPath: toImmutableList(toPath),\n  placement: placement,\n  config: config,\n});\n","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nexport const setConjunction = (config, path, conjunction) => ({\n  type: constants.SET_CONJUNCTION,\n  path: toImmutableList(path),\n  conjunction: conjunction\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} not\n */\nexport const setNot = (config, path, not) => ({\n  type: constants.SET_NOT,\n  path: toImmutableList(path),\n  not: not\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nexport const setLock = (config, path, lock) => ({\n  type: constants.SET_LOCK,\n  path: toImmutableList(path),\n  lock: lock\n});","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} field\n */\nexport const setField = (config, path, field, asyncListValues, __isInternal) => ({\n  type: constants.SET_FIELD,\n  path: toImmutableList(path),\n  field: field,\n  config: config,\n  asyncListValues,\n  __isInternal,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {*} srcKey\n */\nexport const setFieldSrc = (config, path, srcKey) => ({\n  type: constants.SET_FIELD_SRC,\n  path: toImmutableList(path),\n  srcKey: srcKey,\n  config: config,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} operator\n */\nexport const setOperator = (config, path, operator) => ({\n  type: constants.SET_OPERATOR,\n  path: toImmutableList(path),\n  operator: operator,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n * @param {boolean} __isInternal\n */\nexport const setValue = (config, path, delta, value, valueType, asyncListValues, __isInternal) => ({\n  type: constants.SET_VALUE,\n  path: toImmutableList(path),\n  delta: delta,\n  value: value,\n  valueType: valueType,\n  asyncListValues: asyncListValues,\n  config: config,\n  __isInternal: __isInternal\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nexport const setValueSrc = (config, path, delta, srcKey) => ({\n  type: constants.SET_VALUE_SRC,\n  path: toImmutableList(path),\n  delta: delta,\n  srcKey: srcKey,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nexport const setOperatorOption = (config, path, name, value) => ({\n  type: constants.SET_OPERATOR_OPTION,\n  path: toImmutableList(path),\n  name: name,\n  value: value,\n  config: config\n});\n","import * as Export from \"./export\";\nimport * as Import from \"./import\";\nimport * as BasicUtils from \"./utils\";\nimport * as BasicFuncs from \"./config/funcs\";\nimport CoreConfig, { ConfigMixins } from \"./config\";\nimport TreeStore from \"./stores/tree\";\nimport * as TreeActions from \"./actions\";\n\nconst Utils = {...BasicUtils, ...Export, ...Import, ConfigMixins};\n\nexport {Utils, Export, Import, BasicFuncs, CoreConfig, TreeStore, TreeActions};\n","import { TreeStore } from \"@react-awesome-query-builder/core\";\nexport default TreeStore;\n","import React from \"react\";\n\nexport default React.createContext(); ","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_FIELD_SRC = \"SET_FIELD_SRC\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import * as constants from \"../stores/constants\";\n\n\n/**\n * @param {Object} mousePos\n * @param {Object} dragging\n */\nexport const setDragProgress = (mousePos, dragging) => ({\n  type: constants.SET_DRAG_PROGRESS,\n  mousePos: mousePos,\n  dragging: dragging,\n});\n\n/**\n * @param {Object} dragStart\n * @param {Object} dragging\n * @param {Object} mousePos\n */\nexport const setDragStart = (dragStart, dragging, mousePos) => ({\n  type: constants.SET_DRAG_START,\n  dragStart: dragStart,\n  dragging: dragging,\n  mousePos: mousePos,\n});\n\n/**\n *\n */\nexport const setDragEnd = () => ({\n  type: constants.SET_DRAG_END,\n});\n","import { TreeActions } from \"@react-awesome-query-builder/core\";\nimport * as drag from \"./drag\";\nconst { tree, group, rule } = TreeActions;\nexport {\n  tree,\n  group,\n  rule,\n  drag\n};\n","import pick from \"lodash/pick\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { extendConfig, configKeys } = Utils.ConfigUtils;\n\nconst pickConfig = (props) => {\n  return pick(props, configKeys);\n};\n\nexport const createConfigMemo = () => {\n  const configStore = new Map();\n  const maxSize = 2; // current and prev\n  let configId = 0;\n\n  const extendAndStore = (config) => {\n    const extendedConfig = extendConfig(config, ++configId);\n    if ((configStore.size + 1) > maxSize) {\n      configStore.delete(configStore.keys()[0]);\n    }\n    configStore.set(config, extendedConfig);\n    return extendedConfig;\n  };\n\n  const findBasic = (findConfig) => {\n    for (const basicConfig of configStore.keys()) {\n      const extConfig = configStore.get(basicConfig);\n      const found = configKeys.map(k => extConfig[k] === findConfig[k]).filter(v => !v).length === 0;\n      if (found) {\n        return basicConfig;\n      }\n    }\n    return findConfig;\n  };\n\n  const findExtended = (findConfig) => {\n    // strict find:\n    // return configStore.get(findConfig) || configStore.values().find(ec => ec === findConfig);\n\n    for (const savedConfig of configStore.keys()) {\n      const found = configKeys.map(k => savedConfig[k] === findConfig[k]).filter(v => !v).length === 0;\n      if (found) {\n        return configStore.get(savedConfig);\n      }\n    }\n\n    for (const extendedConfig of configStore.values()) {\n      const found = configKeys.map(k => extendedConfig[k] === findConfig[k]).filter(v => !v).length === 0;\n      if (found) {\n        return extendedConfig;\n      }\n    }\n\n    return null;\n  };\n\n  const findOrExtend = (config) => {\n    return findExtended(config) || extendAndStore(config);\n  };\n  \n  return {\n    getExtended: (props) => findOrExtend(pickConfig(props)),\n    getBasic: findBasic\n  };\n};\n","\nexport const defaultValue = (value, _default) => {\n  return (typeof value === \"undefined\") ? _default : value;\n};\n\nexport const truncateString = (str, n, useWordBoundary) => {\n  if (!n || str.length <= n) { return str; }\n  var subString = str.substr(0, n-1);\n  return (useWordBoundary \n    ? subString.substr(0, subString.lastIndexOf(\" \")) \n    : subString) + \"...\";\n};\n\nexport const immutableEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else {\n    return v1.equals(v2);\n  }\n};\n\n// const deepEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else if (Map.isMap(v1)) {\n//     return v1.equals(v2);\n//   } else {\n//     return JSON.stringify(v1) == JSON.stringify(v2);\n//   }\n// };\n\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (a && typeof a.equals === \"function\")\n    return a.equals(b);\n  else if (typeof a === \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n\nconst isDev = () => (typeof process !== \"undefined\" && process.env && process.env.NODE_ENV == \"development\");\n\nexport const getLogger = (devMode = false) => {\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\n\nexport const logger = getLogger();\n\n","import {immutableEqual} from \"../utils/stuff\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { validateAndFixTree } = Utils;\n\nexport const createValidationMemo = () => {\n  let originalTree;\n  let validatedTree;\n  let configId;\n\n  return (config, tree, oldConfig = undefined, sanitizeTree = true) => {\n    if (!tree) {\n      return null;\n    }\n    if (config.__configId === configId && (immutableEqual(tree, originalTree) || immutableEqual(tree, validatedTree))) {\n      return validatedTree;\n    } else {\n      configId = config.__configId;\n      originalTree = tree;\n      if (sanitizeTree === false) {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config, false, false);\n      } else {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config);\n      }\n      return validatedTree;\n    }\n  };\n};\n","import React from \"react\";\nimport mapValues from \"lodash/mapValues\";\nimport {shallowEqual} from \"./stuff\";\n\nconst getReactContainerType = (el) => {\n  if (el._reactRootContainer) {\n    return \"root\";\n  }\n  if (Object.getOwnPropertyNames(el).filter(k => k.startsWith(\"__reactContainer\")).length > 0) {\n    return \"container\";\n  }\n  return undefined;\n};\n\nconst getReactRootNodeType = (node) => {\n  if (!node) {\n    return undefined;\n  }\n  const type = getReactContainerType(node);\n  if (type !== undefined) {\n    return type;\n  } else {\n    return getReactRootNodeType(node.parentNode);\n  }\n};\n\nexport const isUsingLegacyReactDomRender = (node) => {\n  return getReactRootNodeType(node) === \"root\";\n};\n\n\nexport const liteShouldComponentUpdate = (self, config) => (nextProps, nextState) => {\n  const prevProps = self.props;\n  const prevState = self.state;\n\n  let should = nextProps != prevProps || nextState != prevState;\n  if (should) {\n    if (prevState == nextState && prevProps != nextProps) {\n      let chs = [];\n      for (let k in nextProps) {\n        let changed = (nextProps[k] != prevProps[k]);\n        if (changed) {\n          if (config[k] == \"ignore\")\n            changed = false;\n          else if (config[k] == \"shallow_deep\")\n            changed = !shallowEqual(nextProps[k], prevProps[k], true);\n          else if (config[k] == \"shallow\")\n            changed = !shallowEqual(nextProps[k], prevProps[k]);\n          else if (typeof config[k] == \"function\")\n            changed = config[k](nextProps[k], prevProps[k], nextState);\n        }\n        if (changed)\n          chs.push(k);\n      }\n      if (!chs.length)\n        should = false;\n    }\n  }\n  return should;\n};\n\nexport const pureShouldComponentUpdate = (self) => function(nextProps, nextState) {\n  return (\n    !shallowEqual(self.props, nextProps)\n    || !shallowEqual(self.state, nextState)\n  );\n};\n\nconst canUseOldComponentWillReceiveProps = () => {\n  const v = React.version.split(\".\").map(parseInt.bind(null, 10));\n  return v[0] == 16 && v[1] < 3 || v[0] < 16;\n};\n\nexport const useOnPropsChanged = (obj) => {\n  // 1. `shouldComponentUpdate` should be called after `componentWillReceiveProps`\n  // 2. `shouldComponentUpdate` should not be used for PureComponent\n\n  // Because `useOnPropsChanged` can only be applied to `Component` not `PureComponent`, make it pure now\n  if (!obj.shouldComponentUpdate) {\n    obj.shouldComponentUpdate = pureShouldComponentUpdate(obj);\n  }\n\n  if (canUseOldComponentWillReceiveProps()) {\n    // Use old method\n    obj.componentWillReceiveProps = (nextProps) => {\n      obj.onPropsChanged(nextProps);\n    };\n  } else {\n    // Simulate `componentWillReceiveProps` with `shouldComponentUpdate`\n    const origShouldComponentUpdate = obj.shouldComponentUpdate;\n    const newShouldComponentUpdate = function(nextProps, nextState) {\n      const shouldNotify = !shallowEqual(obj.props, nextProps);\n      if (shouldNotify) {\n        obj.onPropsChanged(nextProps);\n      }\n      const shouldUpdate = origShouldComponentUpdate.call(obj, nextProps, nextState);\n      return shouldUpdate;\n    };\n    obj.shouldComponentUpdate = newShouldComponentUpdate.bind(obj);\n  }\n};\n\nexport const bindActionCreators = (actionCreators, config, dispatch) =>\n  mapValues(actionCreators, (actionCreator) =>\n    (...args) => dispatch(actionCreator(config, ...args))\n  );\n","import React, { Component } from \"react\";\nimport merge from \"lodash/merge\";\nimport {connect} from \"react-redux\";\nimport context from \"../stores/context\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../actions\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {useOnPropsChanged, liteShouldComponentUpdate, bindActionCreators} from \"../utils/reactUtils\";\n\n\nclass Query extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    onChange: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    tree: PropTypes.any, //instanceOf(Immutable.Map)\n    //dispatch: PropTypes.func.isRequired,\n    //__isInternalValueChange\n    //__lastAction\n    //getMemoizedTree: PropTypes.func.isRequired,\n    //getBasicConfig: PropTypes.func.isRequired,\n    //sanitizeTree\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this._updateActions(props);\n\n    // For preventive validation (tree and config consistency)\n    // When config has changed from QueryContainer, \n    //  but new dispatched validated tree value is not in redux store yet (tree prop is old)\n    this.validatedTree = props.getMemoizedTree(props.config, props.tree, undefined, props.sanitizeTree);\n    this.oldValidatedTree = this.validatedTree;\n\n    //props.onChange && props.onChange(this.validatedTree, props.config);\n  }\n\n  _updateActions (props) {\n    const {config, dispatch} = props;\n    this.actions = bindActionCreators({...actions.tree, ...actions.group, ...actions.rule}, config, dispatch);\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    tree: (nextValue) => {\n      if (nextValue === this.oldValidatedTree && this.oldValidatedTree === this.validatedTree) {\n        // Got value dispatched from QueryContainer\n        // Ignore, because we've just rendered it\n        return false;\n      }\n      return true;\n    }\n  });\n\n  onPropsChanged(nextProps) {\n    const {onChange} = nextProps;\n    const oldConfig = this.props.config;\n    const newTree = nextProps.tree;\n    const oldTree = this.props.tree;\n    const newConfig = nextProps.config;\n\n    this.oldValidatedTree = this.validatedTree;\n    this.validatedTree = newTree;\n    if (oldConfig !== newConfig) {\n      this._updateActions(nextProps);\n      this.validatedTree = nextProps.getMemoizedTree(newConfig, newTree, oldConfig);\n    }\n\n    const validatedTreeChanged = !immutableEqual(this.validatedTree, this.oldValidatedTree);\n    if (validatedTreeChanged) {\n      const newBasicConfig = nextProps.getBasicConfig(newConfig);\n      onChange && onChange(this.validatedTree, newBasicConfig, nextProps.__lastAction);\n    }\n  }\n\n  render() {\n    const {config, renderBuilder, dispatch, __isInternalValueChange} = this.props;\n    const builderProps = {\n      tree: this.validatedTree,\n      actions: this.actions,\n      config: config,\n      dispatch: dispatch,\n      __isInternalValueChange\n    };\n\n    return renderBuilder(builderProps);\n  }\n}\n\n\nconst ConnectedQuery = connect(\n  (state) => {\n    return {\n      tree: state.tree,\n      __isInternalValueChange: state.__isInternalValueChange,\n      __lastAction: state.__lastAction,\n    };\n  },\n  null,\n  null,\n  {\n    context\n  }\n)(Query);\nConnectedQuery.displayName = \"ConnectedQuery\";\n\n\nexport default ConnectedQuery;\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport treeStoreReducer from \"../stores/tree\";\nimport context from \"../stores/context\";\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport * as actions from \"../actions\";\nimport {createConfigMemo} from \"../utils/configUtils\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {createValidationMemo} from \"../utils/validation\";\nimport {liteShouldComponentUpdate, useOnPropsChanged} from \"../utils/reactUtils\";\nimport ConnectedQuery from \"./Query\";\nconst {defaultRoot} = Utils.DefaultUtils;\n\n\nexport default class QueryContainer extends Component {\n  static propTypes = {\n    //config\n    conjunctions: PropTypes.object.isRequired,\n    fields: PropTypes.object.isRequired,\n    types: PropTypes.object.isRequired,\n    operators: PropTypes.object.isRequired,\n    widgets: PropTypes.object.isRequired,\n    settings: PropTypes.object.isRequired,\n    ctx: PropTypes.object.isRequired,\n\n    onChange: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    value: PropTypes.any, //instanceOf(Immutable.Map)\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    useOnPropsChanged(this);\n\n    const { getExtended, getBasic } = createConfigMemo();\n    this.getMemoizedConfig = getExtended;\n    this.getBasicConfig = getBasic;\n    this.getMemoizedTree = createValidationMemo();\n    \n    const config = this.getMemoizedConfig(props);\n    const {shouldCreateEmptyGroup} = config.settings;\n    const canAddDefaultRule = !shouldCreateEmptyGroup; // if prop `value` is not provided, can add default/empty rule?\n    const emptyTree = defaultRoot(config, canAddDefaultRule);\n    const sanitizeTree = !!props.value;\n    const tree = props.value || emptyTree;\n    const validatedTree = this.getMemoizedTree(config, tree, undefined, sanitizeTree);\n\n    const reducer = treeStoreReducer(config, validatedTree, this.getMemoizedTree, this.setLastTree);\n    const store = createStore(reducer);\n\n    this.config = config;\n    this.state = {\n      store\n    };\n    this.QueryWrapper = (pr) => config.settings.renderProvider(pr, config.ctx);\n  }\n\n  setLastTree = (lastTree) => {\n    if (this.prevTree) {\n      this.prevprevTree = this.prevTree;\n    }\n    this.prevTree = lastTree;\n  };\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    value: (nextValue, prevValue, state) => { return false; }\n  });\n\n  onPropsChanged(nextProps) {\n    // compare configs\n    const prevProps = this.props;\n    const oldConfig = this.config;\n    const nextConfig = this.getMemoizedConfig(nextProps);\n    const isConfigChanged = oldConfig !== nextConfig;\n\n    // compare trees\n    const storeValue = this.state.store.getState().tree;\n    const isTreeChanged = !immutableEqual(nextProps.value, this.props.value) && !immutableEqual(nextProps.value, storeValue);\n    const currentTree = isTreeChanged ? (nextProps.value || defaultRoot(nextProps)) : storeValue;\n    const isTreeTrulyChanged = isTreeChanged && !immutableEqual(nextProps.value, this.prevTree) && !immutableEqual(nextProps.value, this.prevprevTree);\n    this.sanitizeTree = isTreeTrulyChanged || isConfigChanged;\n\n    if (isConfigChanged) {\n      if (prevProps.settings.renderProvider !== nextProps.settings.renderProvider) {\n        this.QueryWrapper = (props) => nextConfig.settings.renderProvider(props, nextConfig.ctx);\n      }\n      this.config = nextConfig;\n    }\n    \n    if (isTreeChanged || isConfigChanged) {\n      const validatedTree = this.getMemoizedTree(nextConfig, currentTree, oldConfig, this.sanitizeTree);\n      //return Promise.resolve().then(() => {\n      this.state.store.dispatch(\n        actions.tree.setTree(nextConfig, validatedTree)\n      );\n      //});\n    }\n  }\n\n  render() {\n    // `get_children` is deprecated!\n    const {renderBuilder, get_children, onChange} = this.props;\n    const {store} = this.state;\n    const config = this.config;\n    const QueryWrapper = this.QueryWrapper;\n\n    return (\n      <QueryWrapper config={config}>\n        <Provider store={store} context={context}>\n          <ConnectedQuery\n            config={config}\n            getMemoizedTree={this.getMemoizedTree}\n            getBasicConfig={this.getBasicConfig}\n            sanitizeTree={this.sanitizeTree}\n            onChange={onChange}\n            renderBuilder={renderBuilder || get_children}\n          />\n        </Provider>\n      </QueryWrapper>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate} from \"../../utils/reactUtils\";\nimport {connect} from \"react-redux\";\nimport classNames from \"classnames\";\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nconst createRuleContainer = (Rule) => \n  class RuleContainer extends Component {\n    static propTypes = {\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      config: PropTypes.object.isRequired,\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      operator: PropTypes.string,\n      field: PropTypes.any,\n      fieldSrc: PropTypes.string,\n      fieldType: PropTypes.string,\n      actions: PropTypes.object.isRequired, //{removeRule: Function, setField, setFieldSrc, setOperator, setOperatorOption, setValue, setValueSrc, ...}\n      onDragStart: PropTypes.func,\n      value: PropTypes.any, //depends on widget\n      valueSrc: PropTypes.any,\n      asyncListValues: PropTypes.array,\n      valueError: PropTypes.any,\n      operatorOptions: PropTypes.object,\n      reordableNodesCnt: PropTypes.number,\n      parentField: PropTypes.string, //from RuleGroup\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      \n      this.dummyFn.isDummyFn = true;\n    }\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeRule(this.props.path);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    setField = (field, asyncListValues, __isInternal) => {\n      this.props.actions.setField(this.props.path, field, asyncListValues, __isInternal);\n    };\n\n    setFieldSrc = (srcKey) => {\n      this.props.actions.setFieldSrc(this.props.path, srcKey);\n    };\n\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    setOperatorOption = (name, value) => {\n      this.props.actions.setOperatorOption(this.props.path, name, value);\n    };\n\n    setValue = (delta, value, type, asyncListValues, __isInternal) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, __isInternal);\n    };\n\n    setValueSrc = (delta, srcKey) => {\n      this.props.actions.setValueSrc(this.props.path, delta, srcKey);\n    };\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    render() {\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const fieldConfig = getFieldConfig(this.props.config, this.props.field);\n      const fieldType = this.props.fieldType || fieldConfig?.type || null;\n      const {showErrorMessage} = this.props.config.settings;\n      const _isGroup = fieldConfig && fieldConfig.type == \"!struct\";\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n\n      const valueError = this.props.valueError;\n      const oneValueError = valueError && valueError.toArray().filter(e => !!e).shift() || null;\n      const hasError = oneValueError != null && showErrorMessage;\n\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"rule-container\", hasError ? \"rule-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Rule\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              setField={this.dummyFn}\n              setFieldSrc={this.dummyFn}\n              setOperator={this.dummyFn}\n              setOperatorOption={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              setValue={this.dummyFn}\n              setValueSrc={this.dummyFn}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueType={this.props.valueType || null}\n              valueError={this.props.valueError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Rule\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setFieldSrc={isInDraggingTempo ? this.dummyFn : this.setFieldSrc}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setOperatorOption={isInDraggingTempo ? this.dummyFn : this.setOperatorOption}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              setValueSrc={isInDraggingTempo ? this.dummyFn : this.setValueSrc}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueType={this.props.valueType || null}\n              valueError={this.props.valueError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Rule) => {\n  const ConnectedRuleContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createRuleContainer(Rule));\n  ConnectedRuleContainer.displayName = \"ConnectedRuleContainer\";\n\n  return ConnectedRuleContainer;\n};\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport {connect} from \"react-redux\";\nimport {logger} from \"../../utils/stuff\";\nimport context from \"../../stores/context\";\nimport * as constants from \"../../stores/constants\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../../actions\";\nimport {pureShouldComponentUpdate, useOnPropsChanged, isUsingLegacyReactDomRender} from \"../../utils/reactUtils\";\nconst {clone} = Utils;\nconst {getFlatTree} = Utils.TreeUtils;\n\nlet _isReorderingTree = false;\n\nconst createSortableContainer = (Builder, CanMoveFn = null) => \n  class SortableContainer extends Component {\n    static propTypes = {\n      tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n      actions: PropTypes.object.isRequired, // {moveItem: Function, ..}\n      //... see Builder\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.onPropsChanged(props);\n    }\n\n    onPropsChanged(nextProps) {\n      this.tree = getFlatTree(nextProps.tree);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (changed) {\n              //don't render <Builder> on dragging - appropriate redux-connected components will do it\n              if(k != \"dragging\" && k != \"mousePos\")\n                chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    componentDidUpdate(_prevProps, _prevState) {\n      let dragging = this.props.dragging;\n      let startDragging = this.props.dragStart;\n      _isReorderingTree = false;\n      if (startDragging && startDragging.id) {\n        dragging.itemInfo = this.tree.items[dragging.id];\n        if (dragging.itemInfo) {\n          if (dragging.itemInfo.index != startDragging.itemInfo.index || dragging.itemInfo.parent != startDragging.itemInfo.parent) {\n            const treeEl = startDragging.treeEl;\n            const treeElContainer = startDragging.treeElContainer;\n            const plhEl = this._getPlaceholderNodeEl(treeEl, true);\n            if (plhEl) {\n              const plX = plhEl.getBoundingClientRect().left + window.scrollX;\n              const plY = plhEl.getBoundingClientRect().top + window.scrollY;\n              const oldPlX = startDragging.plX;\n              const oldPlY = startDragging.plY;\n              const scrollTop = treeElContainer.scrollTop;\n              startDragging.plX = plX;\n              startDragging.plY = plY;\n              startDragging.itemInfo = clone(dragging.itemInfo);\n              startDragging.y = plhEl.offsetTop;\n              startDragging.x = plhEl.offsetLeft;\n              startDragging.clientY += (plY - oldPlY);\n              startDragging.clientX += (plX - oldPlX);\n              if (treeElContainer != document.body)\n                startDragging.scrollTop = scrollTop;\n\n              this.onDrag(this.props.mousePos, false);\n            }\n          }\n        }\n      }\n    }\n\n    _getNodeElById (treeEl, indexId, ignoreCache = false) {\n      if (indexId == null)\n        return null;\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[indexId];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      el = treeEl.querySelector('.group-or-rule-container[data-id=\"'+indexId+'\"]');\n      this._cacheEls[indexId] = el;\n      return el;\n    }\n\n    _getDraggableNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"draggable\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-draggable\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"draggable\"] = el;\n      return el;\n    }\n\n    _getPlaceholderNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"placeholder\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-placeholder\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"placeholder\"] = el;\n      return el;\n    }\n\n    _isScrollable(node) {\n      const overflowY = window.getComputedStyle(node)[\"overflow-y\"];\n      return (overflowY === \"scroll\" || overflowY === \"auto\") && (node.scrollHeight > node.offsetHeight);\n    }\n\n    _getScrollParent(node) {\n      if (node == null)\n        return null;\n    \n      if (node === document.body || this._isScrollable(node)) {\n        return node;\n      } else {\n        return this._getScrollParent(node.parentNode);\n      }\n    }\n\n    _getEventTarget = (e, dragStart) => {\n      return e && e.__mocked_window || document.body || window;\n    };\n\n    onDragStart = (id, dom, e) => {\n      let treeEl = dom.closest(\".query-builder\");\n      if (this._isUsingLegacyReactDomRender === undefined) {\n        this._isUsingLegacyReactDomRender = isUsingLegacyReactDomRender(treeEl);\n      }\n      document.body.classList.add(\"qb-dragging\");\n      treeEl.classList.add(\"qb-dragging\");\n      let treeElContainer = treeEl.closest(\".query-builder-container\") || treeEl;\n      treeElContainer = this._getScrollParent(treeElContainer) || document.body;\n      const scrollTop = treeElContainer.scrollTop;\n      \n      const _dragEl = this._getDraggableNodeEl(treeEl);\n      const _plhEl = this._getPlaceholderNodeEl(treeEl);\n\n      const tmpAllGroups = treeEl.querySelectorAll(\".group--children\");\n      const anyGroup = tmpAllGroups.length ? tmpAllGroups[0] : null;\n      let groupPadding;\n      if (anyGroup) {\n        groupPadding = window.getComputedStyle(anyGroup, null).getPropertyValue(\"padding-left\");\n        groupPadding = parseInt(groupPadding);\n      }\n\n      const dragging = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        w: dom.offsetWidth,\n        h: dom.offsetHeight,\n        itemInfo: this.tree.items[id],\n        paddingLeft: groupPadding,\n      };\n      const dragStart = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        scrollTop: scrollTop,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        itemInfo: clone(this.tree.items[id]),\n        treeEl: treeEl,\n        treeElContainer: treeElContainer,\n      };\n      const mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n\n      const target = this._getEventTarget(e, dragStart);\n      this.eventTarget = target;\n      target.addEventListener(\"mousemove\", this.onDrag);\n      target.addEventListener(\"mouseup\", this.onDragEnd);\n\n      this.props.setDragStart(dragStart, dragging, mousePos);\n    };\n\n\n    onDrag = (e, doHandleDrag = true) => {\n      let dragging = Object.assign({}, this.props.dragging);\n      let startDragging = this.props.dragStart;\n      const paddingLeft = dragging.paddingLeft; //this.props.paddingLeft;\n      const treeElContainer = startDragging.treeElContainer;\n      const scrollTop = treeElContainer.scrollTop;\n      dragging.itemInfo = this.tree.items[dragging.id];\n      if (!dragging.itemInfo) {\n        return;\n      }\n\n      let mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n      const startMousePos = {\n        clientX: startDragging.clientX,\n        clientY: startDragging.clientY,\n      };\n\n      if (e.__mock_dom) {\n        const treeEl = startDragging.treeEl;\n        const dragEl = this._getDraggableNodeEl(treeEl);\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        e.__mock_dom({treeEl, dragEl, plhEl});\n      }\n\n      //first init plX/plY\n      if (!startDragging.plX) {\n        const treeEl = startDragging.treeEl;\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        if (plhEl) {\n          startDragging.plX = plhEl.getBoundingClientRect().left + window.scrollX;\n          startDragging.plY = plhEl.getBoundingClientRect().top + window.scrollY;\n        }\n      }\n\n      const startX = startDragging.x;\n      const startY = startDragging.y;\n      const startClientX = startDragging.clientX;\n      const startClientY = startDragging.clientY;\n      const startScrollTop = startDragging.scrollTop;\n      const pos = {\n        x: startX + (e.clientX - startClientX),\n        y: startY + (e.clientY - startClientY) + (scrollTop - startScrollTop)\n      };\n      dragging.x = pos.x;\n      dragging.y = pos.y;\n      dragging.paddingLeft = paddingLeft;\n      dragging.mousePos = mousePos;\n      dragging.startMousePos = startMousePos;\n\n\n      this.props.setDragProgress(mousePos, dragging);\n\n      const moved = doHandleDrag ? this.handleDrag(dragging, e, CanMoveFn) : false;\n\n      if (!moved) {\n        if (e.preventDefault)\n          e.preventDefault();\n      }\n    };\n\n    onDragEnd = () => {\n      let treeEl = this.props.dragStart.treeEl;\n\n      this.props.setDragEnd();\n\n      treeEl.classList.remove(\"qb-dragging\");\n      document.body.classList.remove(\"qb-dragging\");\n      this._cacheEls = {};\n\n      const target = this.eventTarget || this._getEventTarget();\n      target.removeEventListener(\"mousemove\", this.onDrag);\n      target.removeEventListener(\"mouseup\", this.onDragEnd);\n    };\n    \n\n    handleDrag (dragInfo, e, canMoveFn) {\n      const canMoveBeforeAfterGroup = true;\n      const itemInfo = dragInfo.itemInfo;\n      const paddingLeft = dragInfo.paddingLeft;\n\n      let moveInfo = null;\n      const treeEl = this.props.dragStart.treeEl;\n      const dragId = dragInfo.id;\n      const dragEl = this._getDraggableNodeEl(treeEl);\n      const plhEl = this._getPlaceholderNodeEl(treeEl);\n      let dragRect, plhRect, hovRect, treeRect;\n      if (dragEl && plhEl) {\n        dragRect = dragEl.getBoundingClientRect();\n        plhRect = plhEl.getBoundingClientRect();\n        if (!plhRect.width) {\n          return;\n        }\n        let dragDirs = {hrz: 0, vrt: 0};\n        if (dragRect.top < plhRect.top)\n          dragDirs.vrt = -1; //up\n        else if (dragRect.bottom > plhRect.bottom)\n          dragDirs.vrt = +1; //down\n        if (dragRect.left > plhRect.left)\n          dragDirs.hrz = +1; //right\n        else if (dragRect.left < plhRect.left)\n          dragDirs.hrz = -1; //left\n\n        treeRect = treeEl.getBoundingClientRect();\n        const trgCoord = {\n          x: treeRect.left + (treeRect.right - treeRect.left) / 2,\n          y: dragDirs.vrt >= 0 ? dragRect.bottom : dragRect.top,\n        };\n        let hovCNodeEl;\n        if (e.__mocked_hov_container) {\n          hovCNodeEl = e.__mocked_hov_container;\n        } else {\n          const hovNodeEl = document.elementFromPoint(trgCoord.x, trgCoord.y-1);\n          hovCNodeEl = hovNodeEl ? hovNodeEl.closest(\".group-or-rule-container\") : null;\n          if (!hovCNodeEl && hovNodeEl && hovNodeEl.classList.contains(\"query-builder-container\")) {\n            // fix 2022-01-24 - get root .group-or-rule-container\n            const rootGroupContainer = hovNodeEl?.firstChild?.firstChild;\n            if (rootGroupContainer && rootGroupContainer.classList.contains(\"group-or-rule-container\")) {\n              hovCNodeEl = rootGroupContainer;\n            }\n          }\n        }\n        if (!hovCNodeEl) {\n          logger.log(\"out of tree bounds!\");\n        } else {\n          const isGroup = hovCNodeEl.classList.contains(\"group-container\");\n          const hovNodeId = hovCNodeEl.getAttribute(\"data-id\");\n          const hovEl = hovCNodeEl;\n          let doAppend = false;\n          let doPrepend = false;\n          if (hovEl) {\n            hovRect = hovEl.getBoundingClientRect();\n            const hovHeight = hovRect.bottom - hovRect.top;\n            const hovII = this.tree.items[hovNodeId];\n            if (!hovII) {\n              throw new Error(\"There is an issue with rendering. If you use Next.js, please check getServerSideProps() method.\");\n            }\n            let trgRect = null,\n              trgEl = null,\n              trgII = null,\n              altII = null; //for canMoveBeforeAfterGroup\n\n            if (dragDirs.vrt == 0) {\n              trgII = itemInfo;\n              trgEl = plhEl;\n              if (trgEl)\n                trgRect = trgEl.getBoundingClientRect();\n            } else {\n              if (isGroup) {\n                if (dragDirs.vrt > 0) { //down\n                  //take group header (for prepend only)\n                  const hovInnerEl = hovCNodeEl.getElementsByClassName(\"group--header\");\n                  const hovEl2 = hovInnerEl.length ? hovInnerEl[0] : null;\n                  if (hovEl2) {\n                    const hovRect2 = hovEl2.getBoundingClientRect();\n                    const hovHeight2 = hovRect2.bottom - hovRect2.top;\n                    const isOverHover = ((dragRect.bottom - hovRect2.top) > hovHeight2*3/4);\n                    if (isOverHover && hovII.top > dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect2;\n                      trgEl = hovEl2;\n                      doPrepend = true;\n                    }\n                  }\n                } else if (dragDirs.vrt < 0) { //up\n                  if (hovII.lev >= itemInfo.lev) {\n                    //take whole group\n                    const isClimbToHover = ((hovRect.bottom - dragRect.top) >= 2);\n                    if (isClimbToHover && hovII.top < dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                      doAppend = true;\n                    }\n                  }\n                }\n                if (!doPrepend && !doAppend || canMoveBeforeAfterGroup) {\n                  //take whole group and check if we can move before/after group\n                  const isOverHover = (dragDirs.vrt < 0 //up\n                    ? ((hovRect.bottom - dragRect.top) > (hovHeight-5))\n                    : ((dragRect.bottom - hovRect.top) > (hovHeight-5)));\n                  if (isOverHover) {\n                    if (!doPrepend && !doAppend) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                    }\n                    if (canMoveBeforeAfterGroup) {\n                      altII = hovII;\n                    }\n                  }\n                }\n              } else {\n                //check if we can move before/after group\n                const isOverHover = (dragDirs.vrt < 0 //up\n                  ? ((hovRect.bottom - dragRect.top) > hovHeight/2)\n                  : ((dragRect.bottom - hovRect.top) > hovHeight/2));\n                if (isOverHover) {\n                  trgII = hovII;\n                  trgRect = hovRect;\n                  trgEl = hovEl;\n                }\n              }\n            }\n\n            const isSamePos = (trgII && trgII.id == dragId);\n            if (trgRect) {\n              const dragLeftOffset = dragRect.left - treeRect.left;\n              const trgLeftOffset = trgRect.left - treeRect.left;\n              const _trgLev = trgLeftOffset / paddingLeft;\n              const dragLev = Math.max(0, Math.round(dragLeftOffset / paddingLeft));\n\n              //find all possible moves\n              let availMoves = [];\n              let altMoves = []; //alternatively can move after/before group, if can't move into it\n              if (isSamePos) {\n                //do nothing\n              } else {\n                if (isGroup) {\n                  if (doAppend) {\n                    availMoves.push([constants.PLACEMENT_APPEND, trgII, trgII.lev+1]);\n                  } else if (doPrepend) {\n                    availMoves.push([constants.PLACEMENT_PREPEND, trgII, trgII.lev+1]);\n                  }\n                  //alt\n                  if (canMoveBeforeAfterGroup && altII) {\n                    // fix 2022-01-24: do prepend/append instead of before/after for root\n                    const isToRoot = altII.lev == 0;\n                    // fix 2022-01-25: fix prepend/append instead of before/after for case_group\n                    const isToCase = altII.type == \"case_group\" && itemInfo.type != \"case_group\";\n                    let prevCaseId = altII.prev && this.tree.items[altII.prev].caseId;\n                    let nextCaseId = altII.next && this.tree.items[altII.next].caseId;\n                    if (itemInfo.caseId == prevCaseId)\n                      prevCaseId = null;\n                    if (itemInfo.caseId == nextCaseId)\n                      nextCaseId = null;\n                    const prevCase = prevCaseId && this.tree.items[prevCaseId];\n                    const nextCase = nextCaseId && this.tree.items[nextCaseId];\n\n                    if (dragDirs.vrt > 0) { //down\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_APPEND, altII, altII.lev+1]);\n                      } else if (isToCase && nextCase) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, nextCase, nextCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_AFTER, altII, altII.lev]);\n                      }\n                    } else if (dragDirs.vrt < 0) { //up\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, altII, altII.lev+1]);\n                      } else if (isToCase && prevCase) {\n                        altMoves.push([constants.PLACEMENT_APPEND, prevCase, prevCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_BEFORE, altII, altII.lev]);\n                      }\n                    }\n                  }\n                }\n                if (!doAppend && !doPrepend) {\n                  if (dragDirs.vrt < 0) { //up\n                    availMoves.push([constants.PLACEMENT_BEFORE, trgII, trgII.lev]);\n                  } else if (dragDirs.vrt > 0) { //down\n                    availMoves.push([constants.PLACEMENT_AFTER, trgII, trgII.lev]);\n                  }\n                }\n              }\n              \n              //add case\n              const addCaseII = am => {\n                const toII = am[1];\n                const fromCaseII = itemInfo.caseId ? this.tree.items[itemInfo.caseId] : null;\n                const toCaseII = toII.caseId ? this.tree.items[toII.caseId] : null;\n                return [...am, fromCaseII, toCaseII];\n              };\n              availMoves = availMoves.map(addCaseII);\n              altMoves = altMoves.map(addCaseII);\n\n              //sanitize\n              availMoves = availMoves.filter(am => {\n                const placement = am[0];\n                const trg = am[1];\n                if ((placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) && trg.parent == null)\n                  return false;\n                if (trg.collapsed && (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND))\n                  return false;\n\n                let isInside = (trg.id == itemInfo.id);\n                if (!isInside) {\n                  let tmp = trg;\n                  while (tmp.parent) {\n                    tmp = this.tree.items[tmp.parent];\n                    if (tmp.id == itemInfo.id) {\n                      isInside = true;\n                      break;\n                    }\n                  }\n                }\n                return !isInside;\n              }).map(am => {\n                const placement = am[0],\n                  toII = am[1],\n                  _lev = am[2],\n                  _fromCaseII = am[3],\n                  _toCaseII = am[4];\n                let toParentII = null;\n                if (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND)\n                  toParentII = toII;\n                else\n                  toParentII = this.tree.items[toII.parent];\n                if (toParentII && toParentII.parent == null)\n                  toParentII = null;\n                am[5] = toParentII;\n                return am;\n              });\n\n              let bestMode = null;\n              let filteredMoves = availMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              if (canMoveBeforeAfterGroup && filteredMoves.length == 0 && altMoves.length > 0) {\n                filteredMoves = altMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              }\n              const levs = filteredMoves.map(am => am[2]);\n              const curLev = itemInfo.lev;\n              const allLevs = levs.concat(curLev);\n              let closestDragLev = null;\n              if (allLevs.indexOf(dragLev) != -1)\n                closestDragLev = dragLev;\n              else if (dragLev > Math.max(...allLevs))\n                closestDragLev = Math.max(...allLevs);\n              else if (dragLev < Math.min(...allLevs))\n                closestDragLev = Math.min(...allLevs);\n              bestMode = filteredMoves.find(am => am[2] == closestDragLev);\n              if (!isSamePos && !bestMode && filteredMoves.length)\n                bestMode = filteredMoves[0];\n              moveInfo = bestMode;\n            }\n          }\n        }\n      }\n\n      if (moveInfo) {\n        this.move(itemInfo, moveInfo[1], moveInfo[0], moveInfo[3]);\n\n        // logger.log(\"DRAG-N-DROP\", JSON.stringify({\n        //   dragRect,\n        //   plhRect,\n        //   treeRect,\n        //   hovRect,\n        //   startMousePos: dragInfo.startMousePos,\n        //   mousePos: dragInfo.mousePos,\n        // }));\n        return true;\n      }\n\n      return false;\n    }\n\n    canMove (fromII, toII, placement, fromCaseII, toCaseII, toParentII, canMoveFn) {\n      if (!fromII || !toII)\n        return false;\n      if (fromII.id === toII.id)\n        return false;\n\n      const { canRegroup, canRegroupCases, maxNesting, maxNumberOfRules, canLeaveEmptyCase } = this.props.config.settings;\n      const newLev = toParentII ? toParentII.lev + 1 : toII.lev;\n      const newDepthLev = newLev + (fromII.depth || 0);\n      const isBeforeAfter = placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER;\n      const isPend = placement == constants.PLACEMENT_PREPEND || placement == constants.PLACEMENT_APPEND;\n      const isLev1 = isBeforeAfter && toII.lev == 1 || isPend && toII.lev == 0;\n      const isParentChange = fromII.parent != toII.parent;\n      const isStructChange = isPend || isParentChange;\n      // can't move `case_group` anywhere but before/after anoter `case_group`\n      const isForbiddenStructChange = fromII.type == \"case_group\" && !isLev1\n        // can't restruct `rule_group`\n        || fromII.parentType == \"rule_group\" || toII.type == \"rule_group\" || toII.parentType == \"rule_group\" \n        // only `case_group` can be placed under `switch_group`\n        || fromII.type != \"case_group\" && toII.type == \"case_group\" && isBeforeAfter\n        || fromII.type != \"case_group\" && toII.type == \"switch_group\"\n        // can't move rule/group to another case\n        || !canRegroupCases && fromII.caseId != toII.caseId;\n      const isLockedChange = toII.isLocked || fromII.isLocked || toParentII && toParentII.isLocked;\n      \n      if (maxNesting && newDepthLev > maxNesting)\n        return false;\n      \n      if (isStructChange && (!canRegroup || isForbiddenStructChange || isLockedChange))\n        return false;\n      \n      if (fromII.type != \"case_group\" && fromII.caseId != toII.caseId) {\n        const isLastFromCase = fromCaseII ? fromCaseII._height == 2 : false;\n        const newRulesInTargetCase = toCaseII ? toCaseII.leafsCount + 1 : 0;\n        if (maxNumberOfRules && newRulesInTargetCase > maxNumberOfRules)\n          return false;\n        if (isLastFromCase && !canLeaveEmptyCase)\n          return false;\n      }\n\n      if (fromII.type == \"case_group\" && (\n        fromII.isDefaultCase || toII.isDefaultCase\n        || toII.type == \"switch_group\" && placement == constants.PLACEMENT_APPEND\n      )) {\n        // leave default case alone\n        return false;\n      }\n\n      let res = true;\n      if (canMoveFn) {\n        res = canMoveFn(fromII.node.toJS(), toII.node.toJS(), placement, toParentII ? toParentII.node.toJS() : null);\n      }\n      return res;\n    }\n\n    move (fromII, toII, placement, toParentII) {\n      if (!this._isUsingLegacyReactDomRender) {\n        _isReorderingTree = true;\n      }\n      //logger.log(\"move\", fromII, toII, placement, toParentII);\n      this.props.actions.moveItem(fromII.path, toII.path, placement);\n    }\n\n    render() {\n      return <Builder\n        {...this.props}\n        onDragStart={this.onDragStart}\n      />;\n    }\n  };\n\n\nexport default (Builder, CanMoveFn = null) => {\n  const ConnectedSortableContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n        dragStart: state.dragStart,\n        mousePos: state.mousePos,\n      };\n    }, {\n      setDragStart: actions.drag.setDragStart,\n      setDragProgress: actions.drag.setDragProgress,\n      setDragEnd: actions.drag.setDragEnd,\n    },\n    null,\n    {\n      context\n    }\n  )(createSortableContainer(Builder, CanMoveFn));\n  ConnectedSortableContainer.displayName = \"ConnectedSortableContainer\";\n\n  return ConnectedSortableContainer;\n};\n\nexport { _isReorderingTree };\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { _isReorderingTree } from \"./SortableContainer\";\nimport classNames from \"classnames\";\n\n\nexport default (className) => (GroupOrRule) =>\n  class Draggable extends PureComponent {\n    static propTypes = {\n      isDraggingTempo: PropTypes.bool,\n      isDraggingMe: PropTypes.bool,\n      onDragStart: PropTypes.func,\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.wrapper = React.createRef();\n    }\n\n    handleDraggerMouseDown = (e) => {\n      var nodeId = this.props.id;\n      var dom = this.wrapper.current;\n        \n      if (this.props.onDragStart) {\n        this.props.onDragStart(nodeId, dom, e);\n      }\n    };\n\n    render () {\n      const {\n        isDraggingTempo,\n        isDraggingMe,\n        dragging,\n        ...otherProps\n      } = this.props;\n      const {\n        isTrueLocked,\n      } = otherProps;\n\n      let styles = {};\n      if (isDraggingMe && isDraggingTempo) {\n        if (_isReorderingTree) {\n          // don't apply old styles for dragging tempo during reorder\n        } else {\n          styles = {\n            top: dragging.y,\n            left: dragging.x,\n            width: dragging.w\n          };\n        }\n      }\n\n      const cn = classNames(className, \"group-or-rule\",\n        isDraggingMe && isDraggingTempo ? \"qb-draggable\" : null,\n        isDraggingMe && !isDraggingTempo ? \"qb-placeholder\" : null,\n        isTrueLocked ? \"locked\" : null\n      );\n\n      return (\n        <div\n          className={cn}\n          style={styles}\n          ref={this.wrapper}\n          data-id={this.props.id}\n        >\n          <GroupOrRule\n            handleDraggerMouseDown={this.handleDraggerMouseDown}\n            isDraggingMe={isDraggingMe}\n            isDraggingTempo={isDraggingTempo}\n            {...otherProps}\n          />\n        </div>\n      );\n    }\n\n  };\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport keys from \"lodash/keys\";\nimport pickBy from \"lodash/pickBy\";\nimport mapValues from \"lodash/mapValues\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFieldConfig, getOperatorConfig} = Utils.ConfigUtils;\n\n\nexport default class Operator extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.any,\n    selectedFieldType: PropTypes.string,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    readonly: PropTypes.bool,\n    //actions\n    setOperator: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"selectedOperator\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({config, selectedField, selectedFieldType, selectedOperator}) {\n    const fieldConfig = getFieldConfig(config, selectedField);\n    let operators = [...(fieldConfig?.operators || config.types[selectedFieldType]?.operators || [])];\n    if (!selectedField && !operators.includes(selectedOperator)) {\n      // eg. `prox` field was selected, then `fieldSrc` changed to `func`\n      // But `text` type excludes `proximity` operator in config, so add manually\n      operators.push(selectedOperator);\n    }\n    \n    const operatorsOptions \n      = mapValues(\n        pickBy(\n          config.operators, \n          (item, key) => operators?.indexOf(key) !== -1\n        ), \n        (_opts, op) => getOperatorConfig(config, op, selectedField)\n      );\n      \n    const items = this.buildOptions(config, operatorsOptions, operators);\n\n    const selectedOpts = operatorsOptions[selectedOperator] || {};\n    const placeholder = this.props.config.settings.operatorPlaceholder;\n    const selectedKey = selectedOperator;\n    const selectedKeys = selectedKey ? [selectedKey] : null;\n    const selectedPath = selectedKeys;\n    const selectedLabel = selectedOpts.label;\n    \n    return {\n      placeholder, items,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, fieldConfig\n    };\n  }\n\n  buildOptions(config, fields, ops) {\n    if (!fields || !ops)\n      return null;\n\n    return keys(fields).sort((a, b) => (ops.indexOf(a) - ops.indexOf(b))).map(fieldKey => {\n      const field = fields[fieldKey];\n      const label = field.label;\n      return {\n        key: fieldKey,\n        path: fieldKey,\n        label,\n      };\n    });\n  }\n\n  render() {\n    const {config, customProps, setOperator, readonly, id, groupId} = this.props;\n    const {renderOperator} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: setOperator,\n      ...this.meta\n    };\n    if (!renderProps.items)\n      return null;\n    return renderOperator(renderProps, config.ctx);\n  }\n\n\n}\n","import React from \"react\";\n\nconst Col = ({children, ...props}) => (<div {...props}>{children}</div>);\n\nconst dummyFn = () => {};\n\nconst DragIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"gray\" width=\"18px\" height=\"18px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"/>\n  </svg>\n);\n\nconst WithConfirmFn = (Cmp) => (\n  props => {\n    const {useConfirm} = props.config.settings;\n    const confirmFn = useConfirm ? useConfirm.call(props.config.ctx, props.config.ctx) : null;\n    return <Cmp {...props} confirmFn={confirmFn} />;\n  }\n);\n\nexport {\n  Col, dummyFn, DragIcon, WithConfirmFn\n};\n","import React, { PureComponent } from \"react\";\nimport Operator from \"./Operator\";\nimport {Col} from \"../utils\";\n\n\nexport default class OperatorWrapper extends PureComponent {\n  render() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, selectedOperator, setOperator, \n      selectedFieldParts, showOperator, showOperatorLabel, selectedFieldWidgetConfig, readonly, id, groupId\n    } = this.props;\n    const operator = showOperator\n            && <Col key={\"operators-for-\"+(selectedFieldParts || []).join(\"_\")} className=\"rule--operator\">\n              { config.settings.showLabels\n                    && <label className=\"rule--label\">{config.settings.operatorLabel}</label>\n              }\n              <Operator\n                key=\"operator\"\n                config={config}\n                selectedField={selectedField}\n                selectedFieldSrc={selectedFieldSrc}\n                selectedFieldType={selectedFieldType}\n                selectedOperator={selectedOperator}\n                setOperator={setOperator}\n                readonly={readonly}\n                id={id}\n                groupId={groupId}\n              />\n            </Col>;\n    const hiddenOperator = showOperatorLabel\n            && <Col key={\"operators-for-\"+(selectedFieldParts || []).join(\"_\")} className=\"rule--operator\">\n              <div className=\"rule--operator-wrapper\">\n                {config.settings.showLabels\n                  ? <label className=\"rule--label\">&nbsp;</label>\n                  : null}\n                <div className=\"rule--operator-text-wrapper\">\n                  <span className=\"rule--operator-text\">{selectedFieldWidgetConfig.operatorInlineLabel}</span>\n                </div>\n              </div>\n            </Col>;\n    return [\n      operator,\n      hiddenOperator\n    ];\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {getFieldPathLabels} = Utils.RuleUtils;\nconst {getFieldConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\n\n\nexport default class Field extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    parentField: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //actions\n    setField: PropTypes.func.isRequired,\n    setFieldSrc: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"config\", \"parentField\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({selectedField, selectedFieldType, config, parentField}) {\n    const selectedKey = selectedField;\n    const {maxLabelsLength, fieldSeparatorDisplay, fieldPlaceholder, fieldSeparator} = config.settings;\n    const isFieldSelected = !!selectedField;\n    const placeholder = !isFieldSelected ? truncateString(fieldPlaceholder, maxLabelsLength) : null;\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPathParts(selectedKey, config);\n    const selectedPath = getFieldPathParts(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2;\n\n    const parentFieldPath = getFieldParts(parentField, config);\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig && parentFieldConfig.subfields : config.fields;\n    const lookingForFieldType = !isFieldSelected && selectedFieldType;\n    const items = this.buildOptions(parentFieldPath, config, sourceFields, lookingForFieldType, parentFieldPath);\n\n    // Field source has been chnaged, no new field selected, but op & value remains\n    const errorText = lookingForFieldType ? \"Please select field\" : null;\n\n    return {\n      placeholder, items, parentField,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n      errorText,\n    };\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = getFieldParts(fieldKey, config);\n    let label = fieldOpts?.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  buildOptions(parentFieldPath, config, fields, fieldType = undefined, path = null, optGroup = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    const countFieldsMatchesType = (fields) => {\n      return Object.keys(fields || {}).reduce((acc, fieldKey) => {\n        const field = fields[fieldKey];\n        if (field.type === \"!struct\") {\n          return acc + countFieldsMatchesType(field.subfields);\n        } else {\n          return acc + (field.type === fieldType ? 1 : 0);\n        }\n      }, 0);\n    };\n\n    return keys(fields).map(fieldKey => {\n      const fullFieldPath = [...(path ?? []), fieldKey];\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fullFieldPath, config);\n      const partsLabels = getFieldPathLabels(fullFieldPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath?.length)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      const disabled = field.disabled;\n\n      if (field.hideForSelect)\n        return undefined;\n\n      if (field.type == \"!struct\") {\n        const items = this.buildOptions(parentFieldPath, config, field.subfields, fieldType, fullFieldPath, {\n          label,\n          tooltip,\n        });\n        const hasItemsMatchesType = countFieldsMatchesType(field.subfields) > 0;\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items,\n          matchesType: hasItemsMatchesType,\n        };\n      } else {\n        const matchesType = fieldType !== undefined ? field.type === fieldType : undefined;\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n          matchesType,\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  render() {\n    const {config, customProps, setField, setFieldSrc, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField,\n      setFieldSrc,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst { clone } = Utils;\nconst {getFieldConfig, getFuncConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\nconst {getFuncPathLabels, getWidgetForFieldOp} = Utils.RuleUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class FuncSelect extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldType: PropTypes.string,\n    fieldSrc: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n    isLHS: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n      \n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"fieldType\", \"fieldSrc\", \"operator\", \"isFuncArg\", \"isLHS\"];\n    const keysForMeta = [\"config\", \"field\", \"fieldType\", \"fieldSrc\", \"value\", \"isLHS\"];\n    const needUpdateItems = !this.items || keysForItems.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps, this.meta);\n    }\n  }\n\n  getItems({config, field, fieldType, isLHS, operator, parentFuncs, fieldDefinition, isFuncArg}, {lookingForFieldType}) {\n    const {canUseFuncForField} = config.settings;\n    const filteredFuncs = this.filterFuncs(config, config.funcs, field, fieldType, isLHS, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition);\n    const items = this.buildOptions(config, filteredFuncs, lookingForFieldType);\n    return items;\n  }\n\n  getMeta({config, field, fieldType, value, isLHS, isFuncArg}) {\n    const {funcPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedFuncKey = value;\n    const isFuncSelected = !!value;\n\n    const leftFieldConfig = getFieldConfig(config, field);\n    const leftFieldWidgetField = leftFieldConfig?.widgets?.field;\n    const leftFieldWidgetFieldProps = leftFieldWidgetField && leftFieldWidgetField.widgetProps || {};\n    const placeholder = !isFuncSelected ? funcPlaceholder : null;\n\n    const currFunc = isFuncSelected ? getFuncConfig(config, selectedFuncKey) : null;\n    const selectedOpts = currFunc || {};\n\n    const selectedKeys = getFieldPathParts(selectedFuncKey, config);\n    const selectedPath = getFieldPathParts(selectedFuncKey, config, true);\n    const selectedLabel = this.getFuncLabel(currFunc, selectedFuncKey, config);\n    const partsLabels = getFuncPathLabels(selectedFuncKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel)\n      selectedFullLabel = null;\n\n    const isRootFuncAtLHS = isLHS && !isFuncArg;\n    const lookingForFieldType = isRootFuncAtLHS && !isFuncSelected && fieldType;\n    // Field source has been chnaged, no new func selected, but op & value remains\n    const errorText = lookingForFieldType ? \"Please select function\" : null;\n  \n    return {\n      placeholder,\n      selectedKey: selectedFuncKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedFullLabel,\n      errorText,\n      lookingForFieldType,\n    };\n  }\n\n  filterFuncs(config, funcs, leftFieldFullkey, fieldType, isLHS, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition) {\n    funcs = clone(funcs);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    let expectedType;\n    let targetDefinition = leftFieldConfig;\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = widget && config.widgets[widget];\n    if (isFuncArg) {\n      targetDefinition = fieldDefinition;\n      expectedType = fieldDefinition?.type;\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else if (leftFieldConfig) {\n      expectedType = leftFieldConfig.type;\n    } else if (!isLHS) {\n      // no field at LHS, but can use type from \"memory effect\"\n      expectedType = fieldType;\n    }\n\n    function _filter(list, path) {\n      for (let funcKey in list) {\n        let subfields = list[funcKey].subfields;\n        let subpath = (path ? path : []).concat(funcKey);\n        let funcFullkey = subpath.join(fieldSeparator);\n        let funcConfig = getFuncConfig(config, funcFullkey);\n        if (funcConfig.type == \"!struct\") {\n          if(_filter(subfields, subpath) == 0)\n            delete list[funcKey];\n        } else {\n          let canUse = !expectedType || funcConfig.returnType == expectedType;\n          if (targetDefinition?.funcs)\n            canUse = canUse && targetDefinition.funcs.includes(funcFullkey);\n          if (canUseFuncForField)\n            canUse = canUse && canUseFuncForField(leftFieldFullkey, leftFieldConfig, funcFullkey, funcConfig, operator);\n          // don't use func in func (can be configurable, but usually users don't need this)\n          if (!funcConfig.allowSelfNesting && parentFuncs && parentFuncs.map(([func, _arg]) => func).includes(funcFullkey))\n            canUse = false;\n          if (!canUse)\n            delete list[funcKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(funcs, []);\n\n    return funcs;\n  }\n\n  buildOptions(config, funcs, fieldType = undefined, path = null, optGroup = null) {\n    if (!funcs)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    const countFieldsMatchesType = (fields) => {\n      return Object.keys(fields || {}).reduce((acc, fieldKey) => {\n        const field = fields[fieldKey];\n        if (field.type === \"!struct\") {\n          return acc + countFieldsMatchesType(field.subfields);\n        } else {\n          return acc + (field.type === fieldType ? 1 : 0);\n        }\n      }, 0);\n    };\n\n    return keys(funcs).map(funcKey => {\n      const fullFuncPath = [...(path ?? []), funcKey];\n      const func = funcs[funcKey];\n      const label = this.getFuncLabel(func, fullFuncPath, config);\n      const partsLabels = getFuncPathLabels(fullFuncPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label)\n        fullLabel = null;\n      const tooltip = func.tooltip;\n\n      if (func.type == \"!struct\") {\n        const items = this.buildOptions(config, func.subfields, fieldType, fullFuncPath, {\n          label,\n          tooltip,\n        });\n        const hasItemsMatchesType = countFieldsMatchesType(func.subfields) > 0;\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          items,\n          matchesType: hasItemsMatchesType,\n        };\n      } else {\n        const matchesType = fieldType !== undefined ? func.returnType === fieldType : undefined;\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n          matchesType,\n        };\n      }\n    });\n  }\n\n  getFuncLabel(funcOpts, funcKey, config) {\n    if (!funcKey) return null;\n    let fieldSeparator = config.settings.fieldSeparator;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let funcParts = getFieldParts(funcKey, config);\n    let label = funcOpts?.label || last(funcParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderFunc} = config.settings;\n    const renderProps = {\n      config,\n      customProps,\n      readonly,\n      setField: setValue,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderFunc(renderProps, config.ctx);\n  }\n\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { getTitleInListValues } = Utils.ListUtils;\nconst { _widgetDefKeysToOmit } = Utils.ConfigUtils;\nconst { _fixImmutableValue } = Utils.TreeUtils;\n\nexport default ({\n  delta, isFuncArg, valueSrc,\n  value: immValue, valueError: immValueError, asyncListValues,\n  isSpecialRange, fieldDefinition,\n  widget, widgetDefinition, widgetValueLabel, valueLabels, textSeparators, setValueHandler,\n  config, field, fieldSrc, fieldType, isLHS, operator, readonly, parentField, parentFuncs, id, groupId\n}) => {\n  const {factory: widgetFactory, ...fieldWidgetProps} = widgetDefinition;\n  const isConst = isFuncArg && fieldDefinition.valueSources && fieldDefinition.valueSources.length == 1 && fieldDefinition.valueSources[0] == \"const\";\n  const defaultValue = fieldDefinition.defaultValue;\n\n  if (!widgetFactory) {\n    return \"?\";\n  }\n  \n  // Widget value (if it's not a func with args) should NOT be Immutable\n  // Eg. for multiselect value should be a JS Array, not Immutable List\n  const fixedImmValue = immValue ? immValue.map(v => _fixImmutableValue(v)) : undefined;\n  let value = isSpecialRange \n    ? [fixedImmValue?.get(0), fixedImmValue?.get(1)] \n    : (fixedImmValue ? fixedImmValue.get(delta) : undefined);\n  const valueError = immValueError && (isSpecialRange \n    ? [immValueError.get(0), immValueError.get(1)]\n    : immValueError.get(delta)\n  ) || null;\n  if (isSpecialRange && value[0] === undefined && value[1] === undefined)\n    value = undefined;\n  const {fieldSettings} = fieldDefinition || {};\n  const widgetProps = omit({\n    ...fieldWidgetProps, \n    ...fieldSettings,\n    config: config,\n    field: field,\n    fieldSrc: fieldSrc,\n    fieldType: fieldType,\n    isLHS: isLHS,\n    parentField: parentField,\n    parentFuncs: parentFuncs,\n    fieldDefinition: fieldDefinition,\n    operator: operator,\n    delta: delta,\n    isSpecialRange: isSpecialRange,\n    isFuncArg: isFuncArg,\n    value: value,\n    valueError: valueError,\n    label: widgetValueLabel.label,\n    placeholder: widgetValueLabel.placeholder,\n    placeholders: valueLabels ? valueLabels.placeholder : null,\n    textSeparators: textSeparators,\n    setValue: setValueHandler,\n    readonly: readonly,\n    asyncListValues: asyncListValues,\n    id, groupId\n  }, [\n    ..._widgetDefKeysToOmit,\n    \"toJS\"\n  ]);\n\n  if (widget == \"field\") {\n    //\n  }\n\n  if (isConst && defaultValue) {\n    const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n    if (typeof defaultValue == \"boolean\") {\n      return defaultValue ? (widgetProps.labelYes || \"YES\") : (widgetProps.labelNo || \"NO\");\n    } else if (listValues) {\n      if (Array.isArray(defaultValue))\n        return defaultValue.map(v => getTitleInListValues(listValues, v) || v).join(\", \");\n      else\n        return (getTitleInListValues(listValues, defaultValue) || defaultValue);  \n    }\n    return \"\"+defaultValue;\n  }\n    \n  return widgetFactory(widgetProps, config.ctx);\n};\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\nimport {defaultValue} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport pick from \"lodash/pick\";\nimport WidgetFactory from \"./WidgetFactory\";\nimport classNames from \"classnames\";\nimport {Col} from \"../utils\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\nconst {getValueSourcesForFieldOp, getWidgetForFieldOp, getValueLabel} = Utils.RuleUtils;\nconst { createListFromArray } = Utils.DefaultUtils;\n\nconst funcArgDummyOpDef = {cardinality: 1};\n\nexport default class Widget extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //instanceOf(Immutable.List)\n    valueSrc: PropTypes.any, //instanceOf(Immutable.List)\n    valueError: PropTypes.any,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    operator: PropTypes.string,\n    readonly: PropTypes.bool,\n    asyncListValues: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    //actions\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    // for isFuncArg\n    isFuncArg: PropTypes.bool,\n    fieldFunc: PropTypes.string,\n    fieldArg: PropTypes.string,\n    leftField: PropTypes.any,\n    // for RuleGroupExt\n    isForRuleGroup: PropTypes.bool,\n    parentField: PropTypes.string,\n    // for func in func\n    parentFuncs: PropTypes.array,\n    isLHS: PropTypes.bool,\n    // for case_value\n    isCaseValue: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\n      \"config\", \"field\", \"fieldSrc\", \"fieldType\", \"fieldFunc\", \"fieldArg\", \"leftField\", \"operator\", \"valueSrc\", \"isFuncArg\", \"asyncListValues\", \"isLHS\"\n    ];\n    const needUpdateMeta = !this.meta \n          || keysForMeta\n            .map(k => (\n              nextProps[k] !== prevProps[k] \n                  //tip: for isFuncArg we need to wrap value in Imm list\n                  || k == \"isFuncArg\" && nextProps[\"isFuncArg\"] && nextProps[\"value\"] !== prevProps[\"value\"])\n            )\n            .filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  _setValue = (isSpecialRange, delta, widgetType, value, asyncListValues, __isInternal) => {\n    if (isSpecialRange && Array.isArray(value)) {\n      const oldRange = [this.props.value.get(0), this.props.value.get(1)];\n      if (oldRange[0] != value[0])\n        this.props.setValue(0, value[0], widgetType, asyncListValues, __isInternal);\n      if (oldRange[1] != value[1])\n        this.props.setValue(1, value[1], widgetType, asyncListValues, __isInternal);\n    } else {\n      this.props.setValue(delta, value, widgetType, asyncListValues, __isInternal);\n    }\n  };\n\n  _onChangeValueSrc = (delta, srcKey) => {\n    this.props.setValueSrc(delta, srcKey);\n  };\n\n  getMeta({\n    config, field: simpleField, fieldSrc, fieldType, fieldFunc, fieldArg, operator, valueSrc: valueSrcs, value: values,\n    isForRuleGroup, isCaseValue, isFuncArg, leftField, asyncListValues\n  }) {\n    const field = isFuncArg ? {func: fieldFunc, arg: fieldArg} : simpleField;\n    const isOkWithoutField = !simpleField && fieldType;\n    let iValueSrcs = valueSrcs;\n    let iValues = values;\n    if (isFuncArg || isForRuleGroup || isCaseValue) {\n      iValueSrcs = createListFromArray([valueSrcs]);\n      iValues = createListFromArray([values]);\n    }\n\n    let fieldDefinition = getFieldConfig(config, field);\n    if (!fieldDefinition && isOkWithoutField) {\n      fieldDefinition = config.types[fieldType];\n    }\n    let defaultWidget = getWidgetForFieldOp(config, field, operator);\n    if (!defaultWidget && isOkWithoutField) {\n      defaultWidget = config.types[fieldType]?.mainWidget;\n    }\n    const operatorDefinition = isFuncArg\n      ? funcArgDummyOpDef\n      : getOperatorConfig(config, operator, field);\n    if ((fieldDefinition == null || operatorDefinition == null) && !isCaseValue) {\n      return null;\n    }\n    const isSpecialRange = operatorDefinition?.isSpecialRange;\n    const isSpecialRangeForSrcField = isSpecialRange && (iValueSrcs.get(0) == \"field\" || iValueSrcs.get(1) == \"field\");\n    const isTrueSpecialRange = isSpecialRange && !isSpecialRangeForSrcField;\n    const cardinality = isTrueSpecialRange ? 1 : defaultValue(operatorDefinition?.cardinality, 1);\n    if (cardinality === 0) {\n      return null;\n    }\n\n    let valueSources = getValueSourcesForFieldOp(config, field, operator, fieldDefinition);\n    if (!field) {\n      valueSources = Object.keys(config.settings.valueSourcesInfo);\n    }\n    const widgets = range(0, cardinality).map(delta => {\n      const valueSrc = iValueSrcs.get(delta) || null;\n      let widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      let widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      if (isSpecialRangeForSrcField) {\n        widget = widgetDefinition.singleWidget;\n        widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      }\n      if (!widgetDefinition && isOkWithoutField) {\n        widget = [\"func\", \"field\"].includes(valueSrc) ? valueSrc : defaultWidget;\n        widgetDefinition = config.widgets[widget];\n      }\n      const widgetType = widgetDefinition?.type;\n      const valueLabel = getValueLabel(config, field, operator, delta, valueSrc, isTrueSpecialRange);\n      const widgetValueLabel = getValueLabel(config, field, operator, delta, null, isTrueSpecialRange);\n      const sepText = operatorDefinition?.textSeparators ? operatorDefinition?.textSeparators[delta] : null;\n      const setValueSrcHandler = this._onChangeValueSrc.bind(this, delta);\n\n      let valueLabels = null;\n      let textSeparators = null;\n      if (isSpecialRange) {\n        valueLabels = [\n          getValueLabel(config, field, operator, 0),\n          getValueLabel(config, field, operator, 1)\n        ];\n        valueLabels = {\n          placeholder: [ valueLabels[0].placeholder, valueLabels[1].placeholder ],\n          label: [ valueLabels[0].label, valueLabels[1].label ],\n        };\n        textSeparators = operatorDefinition?.textSeparators;\n      }\n\n      const setValueHandler = this._setValue.bind(this, isSpecialRange, delta, widgetType);\n\n      return {\n        valueSrc,\n        valueLabel,\n        widget,\n        sepText,\n        setValueSrcHandler,\n        widgetDefinition,\n        widgetValueLabel,\n        valueLabels,\n        textSeparators,\n        setValueHandler\n      };\n    });\n      \n    return {\n      defaultWidget,\n      fieldDefinition,\n      operatorDefinition,\n      isSpecialRange: isTrueSpecialRange,\n      cardinality,\n      valueSources,\n      widgets,\n      iValues, //correct for isFuncArg\n      aField: field, //correct for isFuncArg\n      asyncListValues,\n    };\n  }\n\n  renderWidget = (delta, meta, props) => {\n    const {config, isFuncArg, leftField, operator, value: values, valueError, readonly, parentField, parentFuncs, id, groupId, fieldSrc, fieldType, isLHS} = props;\n    const {settings} = config;\n    const { widgets, iValues, aField, valueSources } = meta;\n    const value = isFuncArg ? iValues : values;\n    const field = isFuncArg ? leftField : aField;\n    const {valueSrc, valueLabel} = widgets[delta];\n    const hasValueSources = valueSources.length > 1 && !readonly;\n    \n    const widgetLabel = settings.showLabels\n      ? <label className=\"rule--label\">{valueLabel.label}</label>\n      : null;\n    return (\n      <div key={\"widget-\"+field+\"-\"+delta} className={classNames(\n        valueSrc == \"func\" ? \"widget--func\" : \"widget--widget\",\n        hasValueSources ? \"widget--has-valuerscs\" : \"widget--has-no-valuerscs\"\n      )}>\n        {valueSrc == \"func\" ? null : widgetLabel}\n        <WidgetFactory\n          id={id}\n          groupId={groupId}\n          valueSrc={valueSrc}\n          delta={delta}\n          value={value}\n          valueError={valueError}\n          isFuncArg={isFuncArg}\n          isLHS={isLHS}\n          {...pick(meta, [\"isSpecialRange\", \"fieldDefinition\", \"asyncListValues\"])}\n          {...pick(widgets[delta], [\"widget\", \"widgetDefinition\", \"widgetValueLabel\", \"valueLabels\", \"textSeparators\", \"setValueHandler\"])}\n          config={config}\n          field={field}\n          fieldSrc={fieldSrc}\n          fieldType={fieldType}\n          parentField={parentField}\n          parentFuncs={parentFuncs}\n          operator={operator}\n          readonly={readonly}\n        />\n      </div>\n    );\n  };\n\n  renderValueSources = (delta, meta, props) => {\n    const {config, isFuncArg, leftField, operator, readonly} = props;\n    const {settings} = config;\n    const { valueSources, widgets, aField } = meta;\n    const field = isFuncArg ? leftField : aField;\n    const {valueSrc, setValueSrcHandler} = widgets[delta];\n    const {valueSourcesInfo, renderValueSources} = settings;\n    const valueSourcesOptions = valueSources.map(srcKey => [srcKey, {\n      label: valueSourcesInfo[srcKey].label\n    }]);\n    const ValueSources = (pr) => renderValueSources(pr, config.ctx);\n\n    const sourceLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return valueSources.length > 1 && !readonly\n      && <div key={\"valuesrc-\"+field+\"-\"+delta} className=\"widget--valuesrc\">\n        {sourceLabel}\n        <ValueSources\n          key={\"valuesrc-\"+delta}\n          delta={delta}\n          valueSources={valueSourcesOptions}\n          valueSrc={valueSrc}\n          config={config}\n          field={field}\n          operator={operator}\n          setValueSrc={setValueSrcHandler}\n          readonly={readonly}\n          title={settings.valueSourcesPopupTitle}\n        />\n      </div>;\n  };\n\n  renderSep = (delta, meta, props) => {\n    const {config} = props;\n    const {widgets} = meta;\n    const {settings} = config;\n    const {sepText} = widgets[delta];\n\n    const sepLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return sepText\n      && <div key={\"widget-separators-\"+delta} className={classNames(\n        \"widget--sep\",\n        delta == 0 && \"widget--sep-first\"\n      )} >\n        {sepLabel}\n        <span>{sepText}</span>\n      </div>;\n  };\n\n  renderWidgetDelta = (delta) => {\n    const sep = this.renderSep(delta, this.meta, this.props);\n    const sources = this.renderValueSources(delta, this.meta, this.props);\n    const widgetCmp = this.renderWidget(delta, this.meta, this.props);\n\n    return [\n      sep,\n      sources,\n      widgetCmp,\n    ];\n  };\n\n  render() {\n    if (!this.meta) return null;\n    const { defaultWidget, cardinality } = this.meta;\n    if (!defaultWidget) return null;\n    const name = defaultWidget;\n\n    return (\n      <Col\n        className={`rule--widget rule--widget--${name.toUpperCase()}`}\n        key={\"widget-col-\"+name}\n      >\n        {range(0, cardinality).map(this.renderWidgetDelta)}\n      </Col>\n    );\n  }\n\n}\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport FuncSelect from \"./FuncSelect\";\nimport Widget from \"./Widget\";\nimport {Col} from \"../utils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFuncConfig} = Utils.ConfigUtils;\nconst {setFunc, setArgValue, setArgValueSrc} = Utils.FuncUtils;\n\n\nexport default class FuncWidget extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.object, //instanceOf(Immutable.Map) //with keys 'func' and `args`\n    setValue: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n    isLHS: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"field\", \"operator\", \"value\", \"fieldSrc\", \"fieldType\", \"isLHS\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({config, field, operator, value}) {\n    const funcKey = value ? value.get(\"func\") : null;\n    const funcDefinition = funcKey ? getFuncConfig(config, funcKey) : null;\n\n    return {\n      funcDefinition, funcKey\n    };\n  }\n\n  setFunc = (funcKey) => {\n    this.props.setValue( setFunc(this.props.value, funcKey, this.props.config) );\n  };\n\n  setArgValue = (argKey, argVal, asyncListValues, __isInternal) => {\n    const {config} = this.props;\n    const {funcDefinition} = this.meta;\n    const {args} = funcDefinition;\n    const argDefinition = args[argKey];\n\n    this.props.setValue(\n      setArgValue(this.props.value, argKey, argVal, argDefinition, config),\n      asyncListValues,\n      __isInternal\n    );\n  };\n\n  setArgValueSrc = (argKey, argValSrc) => {\n    const {config} = this.props;\n    const {funcDefinition} = this.meta;\n    const {args} = funcDefinition;\n    const argDefinition = args[argKey];\n\n    this.props.setValue(\n      setArgValueSrc(this.props.value, argKey, argValSrc, argDefinition, config),\n    );\n  };\n\n  renderFuncSelect = () => {\n    const {config, field, fieldType, fieldSrc, isLHS, operator, customProps, value, readonly, parentFuncs, id, groupId, isFuncArg, fieldDefinition} = this.props;\n    const funcKey = value ? value.get(\"func\") : null;\n    const selectProps = {\n      value: funcKey,\n      setValue: this.setFunc,\n      config, field, fieldType, fieldSrc, isLHS, operator, customProps, readonly, parentFuncs, \n      isFuncArg, fieldDefinition,\n      id, groupId,\n    };\n    const {showLabels, funcLabel} = config.settings;\n    const widgetLabel = showLabels\n      ? <label className=\"rule--label\">{funcLabel}</label>\n      : null;\n\n    return (\n      <Col key=\"func\" className=\"rule--func\">\n        {widgetLabel}\n        <FuncSelect {...selectProps} />\n      </Col>\n    );\n  };\n\n  renderArgLabel = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix, label} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label\">\n        {label || argKey}\n      </Col>\n    );\n  };\n\n  renderArgLabelSep = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label-sep\">\n        {\":\"}\n      </Col>\n    );\n  };\n\n  renderArgVal = (funcKey, argKey, argDefinition) => {\n    const {config, field, fieldType, fieldSrc, isLHS, operator, value, readonly, parentFuncs, id, groupId} = this.props;\n    const arg = value ? value.getIn([\"args\", argKey]) : null;\n    const argVal = arg ? arg.get(\"value\") : undefined;\n    const defaultValueSource = argDefinition.valueSources.length == 1 ? argDefinition.valueSources[0] : undefined;\n    const argValSrc = arg ? (arg.get(\"valueSrc\") || defaultValueSource || \"value\") : defaultValueSource;\n\n    const widgetProps = {\n      config, \n      fieldFunc: funcKey,\n      fieldArg: argKey,\n      leftField: field,\n      fieldType, // type of leftField\n      fieldSrc, // src of leftField\n      isLHS,\n      operator: null,\n      value: argVal,\n      valueSrc: argValSrc,\n      setValue: this.setArgValue,\n      setValueSrc: this.setArgValueSrc,\n      funcKey,\n      argKey,\n      argDefinition,\n      readonly,\n      parentFuncs,\n      id,\n      groupId,\n    };\n    //tip: value & valueSrc will be converted to Immutable.List at <Widget>\n\n    return (\n      <Col className=\"rule--func--arg-value\">\n        <ArgWidget {...widgetProps} />\n      </Col>\n    );\n  };\n\n  renderArgSep = (argKey, argDefinition, argIndex, {renderSeps}) => {\n    if (!argIndex) return null;\n    return (\n      <Col className=\"rule--func--arg-sep\">\n        {renderSeps ? renderSeps[argIndex - 1] : \", \"}\n      </Col>\n    );\n  };\n\n  renderBracketBefore = ({renderBrackets}) => {\n    return (\n      <Col key=\"before_args\" className=\"rule--func--bracket-before\">\n        {renderBrackets ? renderBrackets[0] : \"(\"}\n      </Col>\n    );\n  };\n\n  renderBracketAfter = ({renderBrackets}) => {\n    return (\n      <Col key=\"after_args\" className=\"rule--func--bracket-after\">\n        {renderBrackets ? renderBrackets[1] : \")\"}\n      </Col>\n    );\n  };\n\n  renderFuncArgs = () => {\n    const {funcDefinition, funcKey} = this.meta;\n    if (!funcKey) return null;\n    const {args} = funcDefinition || {};\n    if (!args) return null;\n\n    return (\n      <>\n        {this.renderBracketBefore(funcDefinition)}\n        <Col key=\"args\" className=\"rule--func--args\">\n          {Object.keys(args).map((argKey, argIndex) => (\n            <Col key={`arg-${argKey}-${argIndex}`} className=\"rule--func--arg\">\n              {this.renderArgSep(argKey, args[argKey], argIndex, funcDefinition)}\n              {this.renderArgLabel(argKey, args[argKey])}\n              {this.renderArgLabelSep(argKey, args[argKey])}\n              {this.renderArgVal(funcKey, argKey, args[argKey])}\n            </Col>\n          ))}\n        </Col>\n        {this.renderBracketAfter(funcDefinition)}\n      </>\n    );\n  };\n\n  render() {\n    return (\n      <Col className=\"rule--func--wrapper\">\n        {this.renderFuncSelect()}\n        {this.renderFuncArgs()}\n      </Col>\n    );\n  }\n}\n\n\nclass ArgWidget extends Component {\n  static propTypes = {\n    funcKey: PropTypes.string.isRequired,\n    argKey: PropTypes.string.isRequired,\n    setValue: PropTypes.func.isRequired,\n    setValueSrc: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    isLHS: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"parentFuncs\", \"funcKey\", \"argKey\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({parentFuncs, funcKey, argKey}) {\n    const newParentFuncs = [...(parentFuncs || []), [funcKey, argKey]];\n\n    return {\n      parentFuncs: newParentFuncs\n    };\n  }\n\n  setValue = (_delta, value, _widgetType, asyncListValues, __isInternal) => {\n    const {setValue, argKey} = this.props;\n    setValue(argKey, value, asyncListValues, __isInternal);\n  };\n\n  setValueSrc = (_delta, valueSrc, _widgetType) => {\n    const {setValueSrc, argKey} = this.props;\n    setValueSrc(argKey, valueSrc);\n  };\n\n  render() {\n    const {parentFuncs} = this.meta;\n    return (\n      <Widget\n        {...this.props}\n        setValue={this.setValue}\n        setValueSrc={this.setValueSrc}\n        isFuncArg={true}\n        parentFuncs={parentFuncs}\n      />\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport Field from \"./Field\";\nimport {Col} from \"../utils\";\nimport FuncWidget from \"./FuncWidget\";\n\n\nexport default class FieldWrapper extends PureComponent {\n  render() {\n    const {classname, canSelectFieldSource} = this.props;\n    const fieldSources = canSelectFieldSource && this.renderFieldSources();\n    const field = this.renderField();\n    if (!canSelectFieldSource) {\n      return field;\n    } else {\n      return (\n        <Col className={\"rule--field-wrapper\"}>\n          {fieldSources}\n          {field}\n        </Col>\n      );\n    }\n  }\n\n  renderField = () => {\n    const {config, classname, selectedField, selectedFieldSrc, selectedFieldType, setField, parentField, readonly, id, groupId} = this.props;\n    const supportedFieldSrcs = [\"func\", \"field\"];\n    if (!supportedFieldSrcs.includes(selectedFieldSrc)) {\n      return \"?\";\n    }\n    const field = selectedFieldSrc === \"func\" ? (\n      <FuncWidget\n        isLHS={true}\n        config={config}\n        value={selectedField}\n        fieldSrc={selectedFieldSrc}\n        fieldType={selectedFieldType}\n        parentField={parentField}\n        setValue={setField}\n        readonly={readonly}\n        id={id}\n        groupId={groupId}\n        key={\"field-func-\" + id}\n      />\n    ) : (\n      <Field\n        config={config}\n        selectedField={selectedField}\n        selectedFieldSrc={selectedFieldSrc}\n        selectedFieldType={selectedFieldType}\n        parentField={parentField}\n        setField={setField}\n        customProps={config.settings.customFieldSelectProps}\n        readonly={readonly}\n        id={id}\n        groupId={groupId}\n        key={\"field-\" + id}\n      />\n    );\n    const fieldLabel = selectedFieldSrc === \"func\" ? config.settings.funcLabel : config.settings.fieldLabel;\n    const label = config.settings.showLabels && selectedFieldSrc !== \"func\" && <label className=\"rule--label\">{fieldLabel}</label>;\n    return (\n      <div key={selectedFieldSrc} className={classname}>\n        {label}\n        {field}\n      </div>\n    );\n  };\n\n  renderFieldSources = () => {\n    const { config, readonly, selectedFieldSrc, setFieldSrc, id } = this.props;\n    const { settings } = config;\n    const {\n      fieldSources,\n      valueSourcesInfo,\n      renderValueSources,\n    } = settings;\n    const fieldSourcesOptions = fieldSources.map((srcKey) => [\n      srcKey,\n      {\n        label: valueSourcesInfo[srcKey].label,\n      },\n    ]);\n    const ValueSources = (pr) => renderValueSources(pr, config.ctx);\n\n    const sourceLabel = settings.showLabels ? (\n      <label className=\"rule--label\">&nbsp;</label>\n    ) : null;\n\n    return (\n      fieldSources.length > 1 && !readonly && (\n        <div key={\"fieldsrc\"} className={\"rule--fieldsrc\"}>\n          {sourceLabel}\n          <ValueSources\n            key={\"fieldsrc-\" + id}\n            valueSources={fieldSourcesOptions}\n            valueSrc={selectedFieldSrc}\n            config={config}\n            setValueSrc={setFieldSrc}\n            readonly={readonly}\n            title={settings.fieldSourcesPopupTitle}\n          />\n        </div>\n      )\n    );\n  };\n}\n","import React, { PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nconst {getOperatorConfig} = Utils.ConfigUtils;\n\nexport default class OperatorOptions extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    operatorOptions: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string.isRequired,\n    readonly: PropTypes.bool,\n    //actions\n    setOperatorOption: PropTypes.func.isRequired,\n  };\n\n  render() {\n    if (!this.props.selectedOperator)\n      return null;\n    const operatorDefinitions = getOperatorConfig(this.props.config, this.props.selectedOperator, this.props.selectedField);\n    if (typeof operatorDefinitions.options === \"undefined\") {\n      return null;\n    }\n\n    const { factory: optionsFactory, ...basicOptionsProps } = operatorDefinitions.options;\n    const optionsProps = Object.assign({}, basicOptionsProps, {\n      config: this.props.config,\n      field: this.props.selectedField,\n      fieldSrc: this.props.selectedFieldSrc,\n      operator: this.props.selectedOperator,\n      options: this.props.operatorOptions,\n      setOption: this.props.setOperatorOption,\n      readonly: this.props.readonly,\n    });\n    const optionsCmp = optionsFactory(optionsProps, this.props.config.ctx);\n    const name = this.props.selectedOperator;\n\n    return (\n      <div className={`rule--operator rule--operator--${name.toUpperCase()}`}>\n        {optionsCmp}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport RuleContainer from \"../containers/RuleContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport Widget from \"../rule/Widget\";\nimport OperatorOptions from \"../rule/OperatorOptions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldParts} = Utils.ConfigUtils;\nconst {isEmptyRuleProperties} = Utils.RuleUtils;\n\n\nclass Rule extends Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    operatorOptions: PropTypes.object,\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //depends on widget\n    valueSrc: PropTypes.any,\n    valueType: PropTypes.any,\n    asyncListValues: PropTypes.array,\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    parentField: PropTypes.string, //from RuleGroup\n    valueError: PropTypes.any,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //path: PropTypes.instanceOf(Immutable.List),\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    setOperator: PropTypes.func,\n    setOperatorOption: PropTypes.func,\n    setLock: PropTypes.func,\n    removeSelf: PropTypes.func,\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    reordableNodesCnt: PropTypes.number,\n    totalRulesCnt: PropTypes.number,\n    parentReordableNodesCnt: PropTypes.number,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"selectedOperator\", \"config\", \"reordableNodesCnt\", \"isLocked\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({selectedField, selectedFieldType, selectedOperator, config, reordableNodesCnt, isLocked}) {\n    const {keepInputOnChangeFieldSrc} = config.settings;\n    const selectedFieldParts = getFieldParts(selectedField, config);\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    const isSelectedGroup = selectedFieldConfig && selectedFieldConfig.type == \"!struct\";\n    const isOkWithoutField = keepInputOnChangeFieldSrc && selectedFieldType;\n    const isFieldSelected = !!selectedField || isOkWithoutField;\n    const isFieldAndOpSelected = isFieldSelected && selectedOperator;\n    const selectedOperatorConfig = getOperatorConfig(config, selectedOperator, selectedField);\n    const selectedOperatorHasOptions = selectedOperatorConfig && selectedOperatorConfig.options != null;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator, null, null) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n\n    const showDragIcon = config.settings.canReorder && reordableNodesCnt > 1 && !isLocked;\n    const showOperator = isFieldSelected && !hideOperator;\n    const showOperatorLabel = isFieldSelected && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showWidget = isFieldAndOpSelected && !isSelectedGroup;\n    const showOperatorOptions = isFieldAndOpSelected && selectedOperatorHasOptions;\n\n    return {\n      selectedFieldParts, selectedFieldWidgetConfig,\n      showDragIcon, showOperator, showOperatorLabel, showWidget, showOperatorOptions\n    };\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeRuleConfirmOptions: confirmOptions} = config.settings;\n    const doRemove = () => {\n      this.props.removeSelf();\n    };\n    if (confirmOptions && !this.isEmptyCurrentRule()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      doRemove();\n    }\n  }\n\n  _buildWidgetProps({\n    selectedField, selectedFieldSrc, selectedFieldType,\n    selectedOperator, operatorOptions,\n    value, valueType, valueSrc, asyncListValues, valueError,\n    parentField,\n  }) {\n    return {\n      field: selectedField,\n      fieldSrc: selectedFieldSrc,\n      fieldType: selectedFieldType,\n      operator: selectedOperator,\n      operatorOptions,\n      value,\n      valueType,\n      valueSrc,\n      asyncListValues,\n      valueError,\n      parentField,\n    };\n  }\n\n  isEmptyCurrentRule() {\n    const {config} = this.props;\n    const ruleData = this._buildWidgetProps(this.props);\n    return isEmptyRuleProperties(ruleData, config);\n  }\n\n  renderField() {\n    const {\n      config, isLocked, parentField, groupId, id,\n      selectedFieldSrc, selectedField, selectedFieldType, setField, setFieldSrc,\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    // tip: don't allow function inside !group (yet)\n\n    return <FieldWrapper\n      key=\"field\"\n      classname={classNames(\n        selectedFieldSrc == \"func\" ? \"rule--field--func\" : \"rule--field\",\n      )}\n      config={config}\n      canSelectFieldSource={!parentField}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={!immutableFieldsMode ? setField : dummyFn}\n      setFieldSrc={!immutableFieldsMode ? setFieldSrc : dummyFn}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator () {\n    const {config, isLocked} = this.props;\n    const {\n      selectedFieldParts, selectedFieldWidgetConfig, showOperator, showOperatorLabel\n    } = this.meta;\n    const { immutableOpsMode } = config.settings;\n    \n    return <OperatorWrapper\n      key=\"operator\"\n      config={config}\n      selectedField={this.props.selectedField}\n      selectedFieldSrc={this.props.selectedFieldSrc}\n      selectedFieldType={this.props.selectedFieldType}\n      selectedOperator={this.props.selectedOperator}\n      setOperator={!immutableOpsMode ? this.props.setOperator : dummyFn}\n      selectedFieldParts={selectedFieldParts}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableOpsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  renderWidget() {\n    const {config, isLocked} = this.props;\n    const { showWidget } = this.meta;\n    const { immutableValuesMode } = config.settings;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      {...this._buildWidgetProps(this.props)}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      setValueSrc={!immutableValuesMode ? this.props.setValueSrc : dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderOperatorOptions() {\n    const {config} = this.props;\n    const { showOperatorOptions } = this.meta;\n    const { immutableOpsMode, immutableValuesMode } = config.settings;\n    if (!showOperatorOptions) return null;\n\n    const opOpts = <OperatorOptions\n      key=\"operatorOptions\"\n      selectedField={this.props.selectedField}\n      selectedOperator={this.props.selectedOperator}\n      operatorOptions={this.props.operatorOptions}\n      setOperatorOption={!immutableOpsMode ? this.props.setOperatorOption : dummyFn}\n      config={config}\n      readonly={immutableValuesMode}\n    />;\n\n    return (\n      <Col key={\"op-options-for-\"+this.props.selectedOperator} className=\"rule--operator-options\">\n        {opOpts}\n      </Col>\n    );\n  }\n\n  renderBeforeWidget() {\n    const {config} = this.props;\n    const { renderBeforeWidget } = config.settings;\n    return renderBeforeWidget \n        && <Col key={\"before-widget-for-\" +this.props.selectedOperator} className=\"rule--before-widget\">\n          {typeof renderBeforeWidget === \"function\" ? renderBeforeWidget(this.props, config.ctx) : renderBeforeWidget}\n        </Col>;\n  }\n\n  renderAfterWidget() {\n    const {config} = this.props;\n    const { renderAfterWidget } = config.settings;\n    return renderAfterWidget \n        && <Col key={\"after-widget-for-\" +this.props.selectedOperator} className=\"rule--after-widget\">\n          {typeof renderAfterWidget === \"function\" ? renderAfterWidget(this.props, config.ctx) : renderAfterWidget}\n        </Col>;\n  }\n\n  renderError() {\n    const {config, valueError} = this.props;\n    const { renderRuleError, showErrorMessage } = config.settings;\n    const oneValueError = valueError && valueError.toArray().filter(e => !!e).shift() || null;\n    return showErrorMessage && oneValueError \n        && <div className=\"rule--error\">\n          {renderRuleError ? renderRuleError({error: oneValueError}, config.ctx) : oneValueError}\n        </div>;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const { config } = this.props;\n    const { showDragIcon } = this.meta;\n    const { renderIcon } = config.settings;\n    const Icon = (pr) => renderIcon?.(pr, config.ctx);\n    const icon = <Icon\n      type=\"drag\"\n    />;\n    return showDragIcon && (<div \n      key=\"rule-drag-icon\"\n      onMouseDown={handleDraggerMouseDown}\n      className={\"qb-drag-handler rule--drag-handler\"}\n    >{icon}</div>);\n  }\n\n  renderDel() {\n    const {config, isLocked} = this.props;\n    const {\n      deleteLabel, \n      immutableGroupsMode, \n      renderButton,\n      renderIcon,\n      canDeleteLocked\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n\n    return !immutableGroupsMode && (!isLocked || isLocked && canDeleteLocked) && (\n      <Btn \n        type=\"delRule\" onClick={this.removeSelf} label={deleteLabel} config={config} renderIcon={Icon}\n      />\n    );\n  }\n\n  renderLock() {\n    const {config, isLocked, isTrueLocked, id} = this.props;\n    const {\n      lockLabel, lockedLabel, showLock,\n      renderSwitch\n    } = config.settings;\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n      \n    return showLock && !(isLocked && !isTrueLocked) && (\n      <Switch \n        type=\"lock\" id={id} value={isLocked} setValue={this.setLock} label={lockLabel} checkedLabel={lockedLabel} hideLabel={true} config={config}\n      />\n    );\n  }\n\n  render () {\n    const { showOperatorOptions, selectedFieldWidgetConfig } = this.meta;\n    const { valueSrc, value, config } = this.props;\n    const canShrinkValue = valueSrc.first() == \"value\" && !showOperatorOptions && value.size == 1 && selectedFieldWidgetConfig.fullWidth;\n    const { renderButtonGroup } = config.settings;\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const parts = [\n      this.renderField(),\n      this.renderOperator(),\n      this.renderBeforeWidget(),\n      this.renderWidget(),\n      this.renderAfterWidget(),\n      this.renderOperatorOptions(),\n    ];\n    const body = <div key=\"rule-body\" className={classNames(\"rule--body\", canShrinkValue && \"can--shrink--value\")}>{parts}</div>;\n\n    const error = this.renderError();\n    const drag = this.renderDrag();\n    const lock = this.renderLock();\n    const del = this.renderDel();\n      \n    return (\n      <>\n        {drag}\n        <div className=\"rule--body--wrapper\">\n          {body}{error}\n        </div>\n        <div className=\"rule--header\">\n          <BtnGrp config={config}>\n            {lock}\n            {del}\n          </BtnGrp>\n        </div>\n      </>\n    );\n  }\n\n}\n\n\nexport default RuleContainer(Draggable(\"rule\")(WithConfirmFn(Rule)));\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport mapValues from \"lodash/mapValues\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate, useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {connect} from \"react-redux\";\nconst {defaultGroupConjunction} = Utils.DefaultUtils;\n\n\nconst createGroupContainer = (Group, itemType) => \n  class GroupContainer extends Component {\n    static propTypes = {\n      config: PropTypes.object.isRequired,\n      actions: PropTypes.object.isRequired, //{setConjunction: Function, removeGroup, addGroup, addRule, ...}\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      not: PropTypes.bool,\n      conjunction: PropTypes.string,\n      children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n      onDragStart: PropTypes.func,\n      reordableNodesCnt: PropTypes.number,\n      field: PropTypes.any, // for RuleGroup\n      fieldSrc: PropTypes.string, // for RuleGroup\n      fieldType: PropTypes.string, // for RuleGroup\n      parentField: PropTypes.string, //from RuleGroup\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.selectedConjunction = this._selectedConjunction(props);\n      this.conjunctionOptions = this._getConjunctionOptions(props);\n      this.dummyFn.isDummyFn = true;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    onPropsChanged(nextProps) {\n      const {config, id, conjunction} = nextProps;\n      const oldConfig = this.props.config;\n      const oldConjunction = this.props.conjunction;\n      if (oldConfig != config || oldConjunction != conjunction) {\n        this.selectedConjunction = this._selectedConjunction(nextProps);\n        this.conjunctionOptions = this._getConjunctionOptions(nextProps);\n      }\n    }\n\n    _getConjunctionOptions (props) {\n      return mapValues(props.config.conjunctions, (item, index) => ({\n        id: `conjunction-${props.id}-${index}`,\n        name: `conjunction[${props.id}]`,\n        key: index,\n        label: item.label,\n        checked: index === this._selectedConjunction(props),\n      }));\n    }\n\n    _selectedConjunction = (props) => {\n      props = props || this.props;\n      return props.conjunction || defaultGroupConjunction(props.config, props.field);\n    };\n\n    setConjunction = (conj = null) => {\n      this.props.actions.setConjunction(this.props.path, conj);\n    };\n\n    setNot = (not = null) => {\n      this.props.actions.setNot(this.props.path, not);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeGroup(this.props.path);\n    };\n\n    addGroup = () => {\n      this.props.actions.addGroup(this.props.path);\n    };\n\n    addCaseGroup = () => {\n      this.props.actions.addCaseGroup(this.props.path);\n    };\n\n    addDefaultCaseGroup = () => {\n      this.props.actions.addDefaultCaseGroup(this.props.path);\n    };\n\n    addRule = () => {\n      const parentRuleGroupPath = itemType == \"rule_group\" ? this.props.field : null;\n      this.props.actions.addRule(this.props.path, undefined, undefined, undefined, parentRuleGroupPath);\n    };\n\n    // for RuleGroup\n    setField = (field, asyncListValues, __isInternal) => {\n      this.props.actions.setField(this.props.path, field, asyncListValues, __isInternal);\n    };\n\n    // for RuleGroupExt\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    setValue = (delta, value, type) => {\n      this.props.actions.setValue(this.props.path, delta, value, type);\n    };\n\n    render() {\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const currentNesting = this.props.path.size;\n      const maxNesting = this.props.config.settings.maxNesting;\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n      const fieldType = this.props.fieldType || null;\n\n      // Don't allow nesting further than the maximum configured depth and don't\n      // allow removal of the root group.\n      const allowFurtherNesting = typeof maxNesting === \"undefined\" || currentNesting < maxNesting;\n      const isRoot = currentNesting == 1;\n      return (\n        <div\n          className={\"group-or-rule-container group-container\"}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Group\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              isRoot={isRoot}\n              allowFurtherNesting={allowFurtherNesting}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={this.dummyFn}\n              setNot={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              addGroup={this.dummyFn}\n              addCaseGroup={this.dummyFn}\n              addDefaultCaseGroup={this.dummyFn}\n              addRule={this.dummyFn}\n              setField={this.dummyFn}\n              setOperator={this.dummyFn}\n              setValue={this.dummyFn}\n              value={this.props.value || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Group\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              isRoot={isRoot}\n              allowFurtherNesting={allowFurtherNesting}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={isInDraggingTempo ? this.dummyFn : this.setConjunction}\n              setNot={isInDraggingTempo ? this.dummyFn : this.setNot}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              addGroup={isInDraggingTempo ? this.dummyFn : this.addGroup}\n              addCaseGroup={isInDraggingTempo ? this.dummyFn : this.addCaseGroup}\n              addDefaultCaseGroup={isInDraggingTempo ? this.dummyFn : this.addDefaultCaseGroup}\n              addRule={isInDraggingTempo ? this.dummyFn : this.addRule}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              value={this.props.value || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Group, itemType) => {\n  const ConnectedGroupContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createGroupContainer(Group, itemType));\n  ConnectedGroupContainer.displayName = \"ConnectedGroupContainer\";\n\n  return ConnectedGroupContainer;\n};\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class GroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, addGroup, removeSelf, setLock, isLocked, isTrueLocked, id,\n      canAddGroup, canAddRule, canDeleteGroup\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, addGroupLabel, delGroupLabel, groupActionsPosition, \n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn\n      type=\"addRule\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n    const addGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addGroup\" onClick={addGroup} label={addGroupLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn\n      type=\"delGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {addGroupBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport startsWith from \"lodash/startsWith\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport classNames from \"classnames\";\nimport { Item } from \"./Item\";\nimport {GroupActions} from \"./GroupActions\";\nimport {WithConfirmFn, dummyFn} from \"../utils\";\nconst {isEmptyGroupChildren} = Utils.RuleUtils;\n\nconst defaultPosition = \"topRight\";\n\n\nexport class BasicGroup extends Component {\n  static propTypes = {\n    reordableNodesCnt: PropTypes.number,\n    conjunctionOptions: PropTypes.object.isRequired,\n    allowFurtherNesting: PropTypes.bool.isRequired,\n    isRoot: PropTypes.bool.isRequired,\n    not: PropTypes.bool,\n    selectedConjunction: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    path: PropTypes.any, //instanceOf(Immutable.List)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    onDragStart: PropTypes.func,\n    addRule: PropTypes.func.isRequired,\n    addGroup: PropTypes.func.isRequired,\n    removeSelf: PropTypes.func.isRequired,\n    setConjunction: PropTypes.func.isRequired,\n    setNot: PropTypes.func.isRequired,\n    setLock: PropTypes.func.isRequired,\n    actions: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n    this.renderItem = this.renderItem.bind(this);\n  }\n\n  isGroupTopPosition() {\n    return startsWith(this.props.config.settings.groupActionsPosition || defaultPosition, \"top\");\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeGroupConfirmOptions: confirmOptions} = config.settings;\n    const doRemove = () => {\n      this.props.removeSelf();\n    };\n    if (confirmOptions && !this.isEmptyCurrentGroup()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      doRemove();\n    }\n  }\n\n  isEmptyCurrentGroup() {\n    const {children1, config} = this.props;\n    return isEmptyGroupChildren(children1, config);\n  }\n\n  render() {\n    return <>\n      {this.renderHeaderWrapper()}\n      {this.renderChildrenWrapper()}\n      {this.renderFooterWrapper()}\n    </>;\n  }\n\n  showNot() {\n    const {config} = this.props;\n    return config.settings.showNot;\n  }\n\n  // show conjs for 2+ children?\n  showConjs() {\n    const {conjunctionOptions, children1, config} = this.props;\n    const conjunctionCount = Object.keys(conjunctionOptions).length;\n    return conjunctionCount > 1 || this.showNot();\n  }\n\n  isNoChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.size == 0 : true;\n  }\n\n\n  isOneChild() {\n    const {children1} = this.props;\n    return children1 ? children1.size < 2 : true;\n  }\n\n  renderChildrenWrapper() {\n    const {children1} = this.props;\n\n    return children1 && (\n      <div key=\"group-children\" className={classNames(\n        \"group--children\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        this.childrenClassName()\n      )}>{this.renderChildren()}</div>\n    );\n  }\n\n  childrenClassName = () => \"\";\n\n  renderHeaderWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n      )}>\n        {this.renderHeader()}\n        {isGroupTopPosition && this.renderBeforeActions()}\n        {isGroupTopPosition && this.renderActions()}\n        {isGroupTopPosition && this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderFooterWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return !isGroupTopPosition && (\n      <div key=\"group-footer\" className='group--footer'>\n        {this.renderBeforeActions()}\n        {this.renderActions()}\n        {this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderBeforeActions = () => {\n    const BeforeActions = this.props.config.settings.renderBeforeActions;\n    if (BeforeActions == undefined)\n      return null;\n\n    return typeof BeforeActions === \"function\" ? BeforeActions(this.props, this.props.config.ctx) : BeforeActions;\n  };\n\n  renderAfterActions = () => {\n    const AfterActions = this.props.config.settings.renderAfterActions;\n    if (AfterActions == undefined)\n      return null;\n\n    return typeof AfterActions === \"function\" ? AfterActions(this.props, this.props.config.ctx) : AfterActions;\n  };\n\n  renderActions() {\n    const {config, addRule, addGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <GroupActions\n      config={config}\n      addRule={addRule}\n      addGroup={addGroup}\n      canAddGroup={this.canAddGroup()}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  canAddGroup() {\n    return this.props.allowFurtherNesting;\n  }\n  canAddRule() {\n    const maxNumberOfRules = this.props.config.settings.maxNumberOfRules;\n    const totalRulesCnt = this.props.totalRulesCnt;\n    if (maxNumberOfRules) {\n      return totalRulesCnt < maxNumberOfRules;\n    }\n    return true;\n  }\n  canDeleteGroup() {\n    return !this.props.isRoot;\n  }\n\n  renderChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.valueSeq().map(this.renderItem).toArray() : null;\n  }\n\n  renderItem(item) {\n    const props = this.props;\n    const {config, actions, onDragStart, isLocked} = props;\n    const isRuleGroup = item.get(\"type\") == \"group\" && item.getIn([\"properties\", \"field\"]) != null;\n    const type = isRuleGroup ? \"rule_group\" : item.get(\"type\");\n    \n    return (\n      <Item\n        {...this.extraPropsForItem(item)}\n        key={item.get(\"id\")}\n        id={item.get(\"id\")}\n        groupId={props.id}\n        //path={props.path.push(item.get('id'))}\n        path={item.get(\"path\")}\n        type={type}\n        properties={item.get(\"properties\")}\n        config={config}\n        actions={actions}\n        children1={item.get(\"children1\")}\n        reordableNodesCnt={this.reordableNodesCntForItem(item)}\n        totalRulesCnt={this.totalRulesCntForItem(item)}\n        parentReordableNodesCnt={this.reordableNodesCnt()}\n        onDragStart={onDragStart}\n        isDraggingTempo={this.props.isDraggingTempo}\n        isParentLocked={isLocked}\n      />\n    );\n  }\n\n  extraPropsForItem(_item) {\n    return {};\n  }\n\n  reordableNodesCnt() {\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    return this.props.totalRulesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    return this.reordableNodesCnt();\n  }\n\n  showDragIcon() {\n    const { config, isRoot, isLocked } = this.props;\n    const reordableNodesCnt = this.reordableNodesCnt();\n    return config.settings.canReorder && !isRoot && reordableNodesCnt > 1 && !isLocked;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const { config } = this.props;\n    const { renderIcon } = config.settings;\n    const Icon = (pr) => renderIcon?.(pr, config.ctx);\n    const icon = <Icon\n      type=\"drag\"\n    />;\n    return this.showDragIcon() && (<div \n      key=\"group-drag-icon\"\n      onMouseDown={handleDraggerMouseDown}\n      className={\"qb-drag-handler group--drag-handler\"}\n    >{icon}</div>);\n  }\n\n  conjunctionOptions() {\n    const { conjunctionOptions } = this.props;\n    return conjunctionOptions;\n  }\n\n  renderConjs() {\n    const {\n      config, children1, id,\n      selectedConjunction, setConjunction, not, setNot, isLocked\n    } = this.props;\n\n    const {immutableGroupsMode, renderConjs, showNot: _showNot, notLabel} = config.settings;\n    const conjunctionOptions = this.conjunctionOptions();\n    if (!this.showConjs())\n      return null;\n    if (!children1 || !children1.size)\n      return null;\n\n    const renderProps = {\n      disabled: this.isOneChild(),\n      readonly: immutableGroupsMode || isLocked,\n      selectedConjunction: selectedConjunction,\n      setConjunction: immutableGroupsMode ? dummyFn : setConjunction,\n      conjunctionOptions: conjunctionOptions,\n      config: config,\n      not: not || false,\n      id: id,\n      setNot: immutableGroupsMode ? dummyFn : setNot,\n      notLabel: notLabel,\n      showNot: this.showNot(),\n      isLocked: isLocked\n    };\n    return renderConjs(renderProps, config.ctx);\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n}\n\nexport default GroupContainer(Draggable(\"group\")(WithConfirmFn(BasicGroup)), \"group\");\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, delGroupLabel,\n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} hideLabel={true} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addRuleGroup\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={\"group--actions\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupActions} from \"./RuleGroupActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {WithConfirmFn} from \"../utils\";\n\n\nclass RuleGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  childrenClassName = () => \"rule_group--children\";\n  \n  renderHeaderWrapper = () => null;\n  renderFooterWrapper = () => null;\n  renderConjs = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => false;\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1?.size || 0;\n  }\n\n  renderChildrenWrapper() {\n    return (\n      <>\n        {this.renderDrag()}\n        {this.renderField()}\n        {this.renderActions()}\n        {super.renderChildrenWrapper()}\n      </>\n    );\n  }\n\n  renderField() {\n    const { config, selectedField, selectedFieldSrc, selectedFieldType, setField, setFieldSrc, parentField, id, groupId, isLocked } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    \n    return <FieldWrapper\n      key=\"field\"\n      classname={\"group--field\"}\n      config={config}\n      canSelectFieldSource={false}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={setField}\n      setFieldSrc={setFieldSrc}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  extraPropsForItem(_item) {\n    return {\n      parentField: this.props.selectedField\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group\")(WithConfirmFn(RuleGroup)), \"rule_group\");\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupExtActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addSubRuleLabel, delGroupLabel,\n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addRuleGroupExt\" onClick={addRule} label={addSubRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={\"group--actions group--actions--tr\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupExtActions} from \"./RuleGroupExtActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\nconst {isEmptyRuleGroupExtPropertiesAndChildren} = Utils.RuleUtils;\n\n\nclass RuleGroupExt extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    value: PropTypes.any,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    setOperator: PropTypes.func,\n    setValue: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  childrenClassName = () => \"rule_group_ext--children\";\n  \n  renderFooterWrapper = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => true;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderGroupField()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderGroupField() {\n    return (\n      <div className={\"group--field--count--rule\"}>\n        {this.renderField()}\n        {this.renderOperator()}\n        {this.renderWidget()}\n      </div>\n    );\n  }\n\n  showNot() {\n    const {config, selectedField, selectedOperator} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField) || {};\n    return selectedFieldConfig.showNot != undefined ? selectedFieldConfig.showNot : config.settings.showNot;\n  }\n\n  conjunctionOptions() {\n    const {config, selectedField, selectedOperator} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField) || {};\n    let conjunctionOptions = super.conjunctionOptions();\n    if (selectedFieldConfig.conjunctions) {\n      let filtered = {};\n      for (let k of selectedFieldConfig.conjunctions) {\n        const options = conjunctionOptions[k];\n        if (options) {\n          filtered[k] = options;\n        }\n      }\n      conjunctionOptions = filtered;\n    }\n    return conjunctionOptions;\n  }\n\n  renderField() {\n    const { config, selectedField, selectedFieldSrc, selectedFieldType, setField, setFieldSrc, parentField, id, groupId, isLocked } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    \n    return <FieldWrapper\n      key=\"field\"\n      classname={\"rule--field\"}\n      config={config}\n      canSelectFieldSource={false}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={setField}\n      setFieldSrc={setFieldSrc}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator() {\n    const {config, selectedField, selectedFieldSrc, selectedOperator, setField, setOperator, isLocked} = this.props;\n    const { immutableFieldsMode } = config.settings;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n    const showOperatorLabel = selectedField && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showOperator = selectedField && !hideOperator;\n\n    return <OperatorWrapper\n      key=\"operator\"\n      classname={\"group--operator\"}\n      config={config}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedOperator={selectedOperator}\n      setOperator={setOperator}\n      selectedFieldPartsLabels={[\"group\"]}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableFieldsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    const {children1, config} = this.props;\n    const ruleData = this._buildWidgetProps(this.props);\n    return isEmptyRuleGroupExtPropertiesAndChildren(ruleData, children1, config);\n  }\n\n  _buildWidgetProps({\n    selectedField, selectedFieldSrc, selectedFieldType,\n    selectedOperator, operatorOptions,\n    value, valueType, valueSrc, asyncListValues, valueError,\n    parentField,\n  }) {\n    return {\n      field: selectedField,\n      fieldSrc: selectedFieldSrc,\n      fieldType: selectedFieldType,\n      operator: selectedOperator,\n      operatorOptions,\n      value,\n      valueType, // new Immutable.List([\"number\"])\n      valueSrc: [\"value\"], //new Immutable.List([\"value\"]), // should be fixed in isEmptyRuleGroupExtPropertiesAndChildren\n      //asyncListValues,\n      valueError : null,\n      parentField,\n    };\n  }\n\n  renderWidget() {\n    const {config, selectedField, selectedOperator, isLocked} = this.props;\n    const { immutableValuesMode } = config.settings;\n    const isFieldAndOpSelected = selectedField && selectedOperator;\n    const showWidget = isFieldAndOpSelected;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      isForRuleGroup={true}\n      {...this._buildWidgetProps(this.props)}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      setValueSrc={dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupExtActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1?.size || 0;\n  }\n\n  extraPropsForItem(_item) {\n    return {\n      parentField: this.props.selectedField\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group_ext\")(WithConfirmFn(RuleGroupExt)), \"rule_group\");\n\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class SwitchGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addCaseGroup, addDefaultCaseGroup, setLock, isLocked, isTrueLocked, id, canAddGroup, canAddDefault\n    } = this.props;\n    const {\n      immutableGroupsMode, addCaseLabel, addDefaultCaseLabel, groupActionsPosition, \n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addCaseGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addCaseGroup\" onClick={addCaseGroup} label={addCaseLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const addDefaultCaseGroupBtn = !immutableGroupsMode && canAddDefault && !isLocked && <Btn\n      type=\"addDefaultCaseGroup\" onClick={addDefaultCaseGroup} label={addDefaultCaseLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addCaseGroupBtn}\n          {addDefaultCaseGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {SwitchGroupActions} from \"./SwitchGroupActions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getTotalReordableNodesCountInTree, getTotalRulesCountInTree} = Utils.TreeUtils;\n\n\nclass SwitchGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  childrenClassName = () => \"switch_group--children\";\n  \n  renderFooterWrapper = () => null;\n  hasDefaultCase = () => {\n    return this.props.children1?.size && this.props.children1.filter(c => c.get(\"children1\") == null).size > 0;\n  };\n  canAddGroup() {\n    const { maxNumberOfCases } = this.props.config.settings;\n    const totalCasesCnt = this.props.children1?.size || 0;\n    if (maxNumberOfCases) {\n      return totalCasesCnt < maxNumberOfCases;\n    }\n    return true;\n  }\n  canAddRule() {\n    return false;\n  }\n\n  reordableNodesCnt() {\n    // result will be passed to each case's `parentReordableNodesCnt` prop\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n    return casesToReorder;\n  }\n\n  totalRulesCntForItem(item) {\n    return getTotalRulesCountInTree(item);\n  }\n\n  reordableNodesCntForItem(item) {\n    if (this.props.isLocked)\n      return 0;\n    const { canLeaveEmptyCase, canRegroupCases } = this.props.config.settings;\n\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n\n    const nodesInCase = getTotalReordableNodesCountInTree(item);\n    let cnt = nodesInCase;\n    if (cnt == 1 && canRegroupCases && canLeaveEmptyCase && casesToReorder > 1)\n      cnt = 111;\n    return cnt;\n  }\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        //this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderConjs() {\n    const { config } = this.props;\n    const { renderSwitchPrefix } = config.settings;\n    return renderSwitchPrefix || null;\n  }\n\n  showNot() {\n    return false;\n  }\n\n\n  renderActions() {\n    const {config, addCaseGroup, addDefaultCaseGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <SwitchGroupActions\n      config={config}\n      addCaseGroup={addCaseGroup}\n      addDefaultCaseGroup={addDefaultCaseGroup}\n      canAddDefault={!this.hasDefaultCase()}\n      canAddGroup={this.canAddGroup()}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n}\n\n\nexport default GroupContainer(Draggable(\"group switch_group\")(WithConfirmFn(SwitchGroup)), \"switch_group\");\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {GroupActions} from \"./GroupActions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\n\n\nclass CaseGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    parentReordableNodesCnt: PropTypes.number,\n    value: PropTypes.any,\n    setValue: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  isDefaultCase() {\n    return this.props.children1 == undefined;\n  }\n\n  reordableNodesCnt() {\n    // `parentReordableNodesCnt` is number of cases to reorder\n    return this.props.parentReordableNodesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    // `reordableNodesCnt` is number of nodes is current case\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    // `totalRulesCnt` is number of nodes is current case\n    return this.props.totalRulesCnt;\n  }\n\n  showDragIcon() {\n    // default impl of `showDragIcon()` uses `this.reordableNodesCnt()`\n    if (this.isDefaultCase())\n      return false;\n    return super.showDragIcon();\n  }\n\n  childrenClassName = () => \"case_group--children\";\n  \n  renderFooterWrapper = () => null;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeaderLeft()}\n        {this.renderHeaderCenter()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderChildrenWrapper() {\n    if (this.isDefaultCase())\n      return null;\n    // body has 2 columns: condition & value\n    return (\n      <div className={\"case_group--body\"}>\n        {this.renderCondition()}\n        {this.renderValue()}\n      </div>\n    );\n  }\n\n  renderHeaderLeft() {\n    if (this.isDefaultCase()) {\n      const { defaultCaseLabel } = this.props.config.settings;\n      return defaultCaseLabel || \"\";\n    }\n    // default impl:\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderCondition() {\n    if (this.isDefaultCase())\n      return null;\n    return super.renderChildrenWrapper();\n  }\n\n  renderHeaderCenter() {\n    if (this.isDefaultCase())\n      return this.renderValue();\n    else\n      return null;\n  }\n\n  canAddGroup() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddGroup();\n  }\n\n  canAddRule() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddRule();\n  }\n\n  renderValue() {\n    const { config, isLocked, value, setValue, id } = this.props;\n    const { immutableValuesMode } = config.settings;\n\n    const widget = <Widget\n      key=\"values\"\n      isCaseValue={true}\n      field={\"!case_value\"}\n      operator={null}\n      value={value}\n      valueSrc={\"value\"}\n      valueError={null}\n      config={config}\n      setValue={!immutableValuesMode ? setValue : dummyFn}\n      setValueSrc={dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={id}\n      groupId={null}\n    />;\n\n    return (\n      <Col className=\"case_group--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addGroup, addRule, isLocked, isTrueLocked, id} = this.props;\n    return <GroupActions\n      config={config}\n      addGroup={addGroup}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canAddGroup={this.canAddGroup()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    // used to confirm self-deletion\n    const { value } = this.props;\n    const oneValue = value && value.size ? value.get(0) : null;\n    const hasValue = oneValue != null && (Array.isArray(oneValue) ? oneValue.length > 0 : true);\n    return super.isEmptyCurrentGroup() && !hasValue;\n  }\n\n}\n\nexport default GroupContainer(Draggable(\"group case_group\")(WithConfirmFn(CaseGroup)), \"case_group\");\n\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Rule from \"./Rule\";\nimport Group from \"./Group\";\nimport RuleGroup from \"./RuleGroup\";\nimport RuleGroupExt from \"./RuleGroupExt\";\nimport SwitchGroup from \"./SwitchGroup\";\nimport CaseGroup from \"./CaseGroup\";\n\nconst types = [\n  \"rule\",\n  \"group\",\n  \"rule_group\",\n  \"switch_group\",\n  \"case_group\"\n];\n\nconst getProperties = (props) => {\n  const properties = props.properties?.toObject() || {};\n  const result = {...properties};\n  if (props.isParentLocked) {\n    result.isLocked = true;\n  }\n  if (properties.isLocked) {\n    result.isTrueLocked = true;\n  }\n  return result;\n};\n\nconst typeMap = {\n  rule: (props) => (\n    <Rule\n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      config={props.config}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  group: (props) => (\n    <Group \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  rule_group: (props) => (\n    <RuleGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  rule_group_ext: (props) => (\n    <RuleGroupExt \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  switch_group: (props) => (\n    <SwitchGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  case_group: (props) => (\n    <CaseGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n};\n\n\nclass Item extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    type: PropTypes.oneOf(types).isRequired,\n    path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n    properties: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    actions: PropTypes.object.isRequired,\n    reordableNodesCnt: PropTypes.number,\n    onDragStart: PropTypes.func,\n    parentField: PropTypes.string, //from RuleGroup\n    isDraggingTempo: PropTypes.bool,\n    isParentLocked: PropTypes.bool,\n  };\n\n  render() {\n    const { type, ...props } = this.props;\n    const mode = props.properties?.get(\"mode\");\n    const postfix = mode == \"array\" ? \"_ext\" : \"\";    \n    const renderItem = props.config.settings.renderItem;\n    let Cmp = typeMap[type + postfix];\n    if (renderItem) {\n      return renderItem({...props, type, itemComponent: Cmp}, props.config.ctx);\n    }\n    if (!Cmp) return null;\n    return Cmp(props);\n  }\n}\n\nexport { Item };\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Item } from \"./item/Item\";\nimport SortableContainer from \"./containers/SortableContainer\";\nimport {pureShouldComponentUpdate} from \"../utils/reactUtils\";\nconst { getTotalReordableNodesCountInTree, getTotalRulesCountInTree } = Utils.TreeUtils;\nconst { createListFromArray, emptyProperies } = Utils.DefaultUtils;\n\nclass Builder extends Component {\n  static propTypes = {\n    tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    config: PropTypes.object.isRequired,\n    actions: PropTypes.object.isRequired,\n    onDragStart: PropTypes.func,\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const prevProps = this.props;\n    let should = this.pureShouldComponentUpdate(nextProps, nextState);\n    if (should) {\n      let chs = [];\n      for (let k in nextProps) {\n        let changed = (nextProps[k] !== prevProps[k]);\n        if (changed && k != \"__isInternalValueChange\") {\n          chs.push(k);\n        }\n      }\n      if (!chs.length)\n        should = false;\n      //optimize render\n      if (chs.length == 1 && chs[0] == \"tree\" && nextProps.__isInternalValueChange)\n        should = false;\n    }\n    return should;\n  }\n\n  constructor(props) {\n    super(props);\n    this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n\n    this._updPath(props);\n  }\n\n  _updPath (props) {\n    const id = props.tree.get(\"id\");\n    this.path = createListFromArray([id]);\n  }\n\n  render() {\n    const tree = this.props.tree;\n    const rootType = tree.get(\"type\");\n    const isTernary = rootType == \"switch_group\";\n    const reordableNodesCnt = isTernary ? null : getTotalReordableNodesCountInTree(tree);\n    const totalRulesCnt = isTernary ? null : getTotalRulesCountInTree(tree);\n    const id = tree.get(\"id\");\n    return (\n      <Item \n        key={id}\n        id={id}\n        path={this.path}\n        type={rootType}\n        properties={tree.get(\"properties\") || emptyProperies()}\n        config={this.props.config}\n        actions={this.props.actions}\n        children1={tree.get(\"children1\") || emptyProperies()}\n        //tree={tree}\n        reordableNodesCnt={reordableNodesCnt}\n        totalRulesCnt={totalRulesCnt}\n        parentReordableNodesCnt={0}\n        onDragStart={this.props.onDragStart}\n      />\n    );\n  }\n}\n\nexport default SortableContainer(Builder);\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {clone} = Utils;\nconst {getFieldConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\nconst {getFieldPathLabels, getWidgetForFieldOp} = Utils.RuleUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class ValueField extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    value: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    parentField: PropTypes.string,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"fieldSrc\", \"fieldType\", \"operator\", \"isFuncArg\", \"parentField\"];\n    const keysForMeta = [\"config\", \"field\", \"fieldSrc\", \"fieldType\", \"operator\", \"value\", \"placeholder\", \"isFuncArg\", \"parentField\"];\n    const needUpdateItems = !this.items || keysForItems.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps);\n    }\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getItems({config, field, fieldType, operator, parentField, isFuncArg, fieldDefinition}) {\n    const {canCompareFieldWithField} = config.settings;\n    const fieldSeparator = config.settings.fieldSeparator;\n    const parentFieldPath = getFieldParts(parentField, config);\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig?.subfields : config.fields;\n\n    const filteredFields = this.filterFields(config, sourceFields, field, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition, fieldType);\n    const items = this.buildOptions(parentFieldPath, config, filteredFields, parentFieldPath);\n    return items;\n  }\n\n  getMeta({config, field, fieldType, operator, value, placeholder: customPlaceholder, isFuncArg, parentField}) {\n    const {fieldPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedKey = value;\n    const isFieldSelected = !!value;\n\n    const leftFieldConfig = field ? getFieldConfig(config, field) : {};\n    const leftFieldWidgetField = leftFieldConfig?.widgets?.field;\n    const leftFieldWidgetFieldProps = leftFieldWidgetField?.widgetProps || {};\n    const placeholder = isFieldSelected ? null \n      : (isFuncArg && customPlaceholder || leftFieldWidgetFieldProps.valuePlaceholder || fieldPlaceholder);\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPathParts(selectedKey, config);\n    const selectedPath = getFieldPathParts(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2;\n\n    return {\n      placeholder,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n    };\n  }\n\n  filterFields(config, fields, leftFieldFullkey, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition, fieldType) {\n    fields = clone(fields);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = config.widgets[widget];\n    let expectedType;\n    if (isFuncArg) {\n      expectedType = fieldDefinition?.type;\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else if (leftFieldConfig) {\n      expectedType = leftFieldConfig.type;\n    } else {\n      // no field at LHS, but can use type from \"memory effect\"\n      expectedType = fieldType;\n    }\n    \n    function _filter(list, path) {\n      for (let rightFieldKey in list) {\n        let subfields = list[rightFieldKey].subfields;\n        let subpath = (path ? path : []).concat(rightFieldKey);\n        let rightFieldFullkey = subpath.join(fieldSeparator);\n        let rightFieldConfig = getFieldConfig(config, rightFieldFullkey);\n        if (!rightFieldConfig) {\n          delete list[rightFieldKey];\n        } else if (rightFieldConfig.type == \"!struct\" || rightFieldConfig.type == \"!group\") {\n          if (_filter(subfields, subpath) == 0)\n            delete list[rightFieldKey];\n        } else {\n          // tip: LHS field can be used as arg in RHS function\n          let canUse = (!expectedType || rightFieldConfig.type == expectedType)\n            && (isFuncArg ? true : rightFieldFullkey != leftFieldFullkey);\n          let fn = canCompareFieldWithField || config.settings.canCompareFieldWithField;\n          if (fn)\n            canUse = canUse && fn(leftFieldFullkey, leftFieldConfig, rightFieldFullkey, rightFieldConfig, operator);\n          if (!canUse)\n            delete list[rightFieldKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(fields, parentFieldPath || []);\n\n    return fields;\n  }\n\n  buildOptions(parentFieldPath, config, fields, path = null, optGroup = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    return keys(fields).map(fieldKey => {\n      const fullFieldPath = [...(path ?? []), fieldKey];\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fullFieldPath, config);\n      const partsLabels = getFieldPathLabels(fullFieldPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n\n      if (field.hideForCompare)\n        return undefined;\n\n      if (field.type == \"!struct\" || field.type == \"!group\") {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items: this.buildOptions(parentFieldPath, config, field.subfields, fullFieldPath, {\n            label,\n            tooltip,\n          })\n        };\n      } else {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = getFieldParts(fieldKey, config);\n    let label = fieldOpts?.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      isValueField: true,\n      config,\n      customProps,\n      setField: setValue,\n      readonly,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, labelYes, labelNo, readonly, customProps = {}} = props;\n  const customRadioYesProps = customProps.radioYes || {};\n  const customRadioNoProps = customProps.radioNo || {};\n\n  const onCheckboxChange = e => setValue(e.target.checked);\n  const onRadioChange = e => setValue(e.target.value == \"true\");\n\n  // return <>\n  //     <input key={id}  type=\"checkbox\" id={id} checked={!!value} disabled={readonly} onChange={onCheckboxChange} />\n  //     <label style={{display: \"inline\"}} key={id+\"label\"}  htmlFor={id}>{value ? labelYes : labelNo}</label>\n  // </>;\n\n  return <>\n    <input type=\"radio\" value={true} checked={!!value} disabled={readonly} onChange={onRadioChange} { ...customRadioYesProps }/> {labelYes}\n    <input type=\"radio\" value={false} checked={!value} disabled={readonly} onChange={onRadioChange} { ...customRadioNoProps } /> {labelNo}\n  </>;\n\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <input\n      type=\"text\" \n      value={textValue} \n      placeholder={placeholder} \n      disabled={readonly} \n      onChange={onChange}\n      maxLength={maxLength}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, maxRows, fullWidth, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <textarea\n      value={textValue} \n      placeholder={placeholder}\n      disabled={readonly}\n      onChange={onChange}\n      maxLength={maxLength}\n      style={{\n        width: fullWidth ? \"100%\" : undefined\n      }}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"date\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"time\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    else\n      value = moment(new Date(value)).format(valueFormat);\n    setValue(value);\n  };\n\n  let dtValue = value;\n  if (!value)\n    dtValue = \"\";\n  else\n    dtValue = moment(value).format(\"YYYY-MM-DDTHH:mm\");\n  \n  return (\n    <input type=\"datetime-local\"  value={dtValue}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const getMultiSelectValues = (multiselect) => {\n    let values = [];\n    const options = multiselect.options;\n    for (let i = 0 ; i < options.length ; i++) {\n      const opt = options[i];\n      if (opt.selected) {\n        values.push(opt.value);\n      }\n    }\n    if (!values.length)\n      values = undefined; //not allow []\n    return values;\n  };\n\n  const onChange = e => setValue(getMultiSelectValues(e.target));\n  \n  return (\n    <select multiple\n      onChange={onChange}\n      value={value}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n    >\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const onChange = e => setValue(e.target.value);\n  \n  const hasValue = value != null;\n  return (\n    <select\n      onChange={onChange}\n      value={hasValue ? value : \"\"}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\"])}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <input type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps = {}, } = props;\n  const customInputProps = customProps.input || {};\n  const customSliderProps = customProps.slider || customProps;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <div style={{display: \"inline-flex\"}}>\n      <input key={\"number\"} type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customInputProps} />\n      <input key={\"range\"} type=\"range\"  value={numberValue} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customSliderProps} />\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({items, setField, selectedKey, readonly, errorText}) => {\n  const renderOptions = (fields) => (\n    fields.map(field => {\n      const {items, path, label, disabled, matchesType} = field;\n      if (items) {\n        return <optgroup disabled={disabled} key={path} label={label}>{renderOptions(items)}</optgroup>;\n      } else {\n        const style = matchesType ? { fontWeight: \"bold\" } : {};\n        return <option disabled={disabled} key={path} value={path} style={style}>{label}</option>;\n      }\n    })\n  );\n\n  const onChange = e => setField(e.target.value);\n  \n  const hasValue = selectedKey != null;\n  return (\n    <select \n      onChange={onChange}\n      value={hasValue ? selectedKey : \"\"}\n      disabled={readonly}\n      style={{ color: errorText ? \"red\" : null }}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions(items)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel}) => {\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(key => {\n      const {id, name, label, checked} = conjunctionOptions[key];\n      const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n      if ((readonly || disabled) && !checked)\n        return null;\n      return [\n        <input key={id+postfix} type=\"radio\" id={id+postfix} name={name+postfix} checked={checked} disabled={readonly || disabled} value={key} onChange={onChange} />\n        ,\n        <label key={id+postfix+\"label\"} htmlFor={id+postfix}>{label}</label>\n      ];\n    });\n  \n  const renderNot = () => {\n    const postfix = \"not\";\n    return [\n      <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={not} disabled={readonly} onChange={onNotChange} />\n      ,\n      <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{notLabel || \"NOT\"}</label>\n    ];\n  };\n\n  const onChange = e => setConjunction(e.target.value);\n\n  const onNotChange = e => setNot(e.target.checked);\n\n  return [\n    showNot && renderNot(),\n    showConj && renderOptions()\n  ];\n  \n};\n","import React from \"react\";\n\nconst typeToLabel = {\n  \"addRuleGroup\": \"+\",\n  \"addRuleGroupExt\": \"+\",\n  \"delGroup\": \"x\",\n  \"delRuleGroup\": \"x\",\n  \"delRule\": \"x\",\n};\n\nexport default ({type, label, onClick, readonly}) => {\n  const btnLabel = label || typeToLabel[type];\n  return <button onClick={onClick} type=\"button\" disabled={readonly}>{btnLabel}</button>;\n};\n","import React from \"react\";\nimport { DragIcon } from \"../../../utils\";\n\nexport default ({type}) => {\n  const typeToIcon = {\n  };\n  let icon = typeToIcon[type] || null;\n  if (!icon && type === \"drag\") {\n    icon = <DragIcon />;\n  }\n\n  return icon;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\n\nexport default ({config, valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => (\n      <option key={srcKey} value={srcKey}>{info.label}</option>\n    ))\n  );\n\n  const onChange = e => setValueSrc(e.target.value);\n  \n  return (\n    <select \n      onChange={onChange}\n      value={valueSrc || \"\"}\n      disabled={readonly}\n    >\n      {renderOptions(valueSources)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({value, setValue, label, id, config, type}) => {\n  const onChange = e => setValue(e.target.checked);\n  const postfix = type;\n  return [\n    <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={!!value} onChange={onChange} />\n    ,\n    <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{label}</label>\n  ];\n};\n","export default ({onOk, okText, cancelText, title}) => {\n  if (confirm(title)) {\n    onOk();\n  }\n};\n","import React from \"react\";\n\n// value widgets\nexport {default as VanillaBooleanWidget} from \"./value/VanillaBoolean\";\nexport {default as VanillaTextWidget} from \"./value/VanillaText\";\nexport {default as VanillaTextAreaWidget} from \"./value/VanillaTextArea\";\nexport {default as VanillaDateWidget} from \"./value/VanillaDate\";\nexport {default as VanillaTimeWidget} from \"./value/VanillaTime\";\nexport {default as VanillaDateTimeWidget} from \"./value/VanillaDateTime\";\nexport {default as VanillaMultiSelectWidget} from \"./value/VanillaMultiSelect\";\nexport {default as VanillaSelectWidget} from \"./value/VanillaSelect\";\nexport {default as VanillaNumberWidget} from \"./value/VanillaNumber\";\nexport {default as VanillaSliderWidget} from \"./value/VanillaSlider\";\n\n// field select widget\nexport {default as VanillaFieldSelect} from \"./core/VanillaFieldSelect\";\n\n// core components\nexport {default as VanillaConjs} from \"./core/VanillaConjs\";\nexport {default as VanillaButton} from \"./core/VanillaButton\";\nexport {default as VanillaIcon} from \"./core/VanillaIcon\";\nexport {default as VanillaButtonGroup} from \"./core/VanillaButtonGroup\";\nexport {default as VanillaValueSources} from \"./core/VanillaValueSources\";\nexport {default as VanillaSwitch} from \"./core/VanillaSwitch\";\nexport {default as vanillaConfirm} from \"./core/vanillaConfirm\";\n\nexport const VanillaProvider = ({config, children}) => children;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\n\nexport default class Proximity extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    setOption: PropTypes.func.isRequired,\n    options: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    minProximity: PropTypes.number,\n    maxProximity: PropTypes.number,\n    optionPlaceholder: PropTypes.string,\n    optionTextBefore: PropTypes.string,\n    optionLabel: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //children\n  };\n\n  static defaultProps = {\n    customProps: {},\n    minProximity: 2,\n    maxProximity: 10,\n    optionPlaceholder: \"Select words between\",\n    optionLabel: \"Words between\",\n    optionTextBefore: null,\n  };\n\n  handleChange = (value) => {\n    this.props.setOption(\"proximity\", parseInt(value));\n  };\n\n  render() {\n    const {\n      defaults, options, config, optionLabel, optionPlaceholder, customProps, \n      minProximity, maxProximity, optionTextBefore, readonly\n    } = this.props;\n    const {settings, widgets, ctx} = config;\n    const defaultProximity = defaults ? defaults.proximity : undefined;\n    const {showLabels} = settings;\n    const selectedProximity = options.get(\"proximity\", defaultProximity);\n    const proxValues = range(minProximity, maxProximity + 1).map((item) => ({title: item, value: item}));\n    const factory = widgets.select.factory;\n    const Select = (props) => factory(props, ctx);\n\n    return (\n      <div className=\"operator--PROXIMITY\">\n        <div className=\"operator--options\">\n          { showLabels\n            && <label className=\"rule--label\">{optionLabel}</label>\n          }\n          { !showLabels && optionTextBefore\n            && <div className=\"operator--options--sep\">\n              <span>{optionTextBefore}</span>\n            </div>\n          }\n          <Select\n            config={config}\n            value={selectedProximity}\n            listValues={proxValues}\n            setValue={this.handleChange}\n            readonly={readonly}\n            placeholder={optionPlaceholder}\n            {...customProps}\n          />\n        </div>\n        <div className=\"operator--widgets\">{this.props.children}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport * as Widgets from \"../components/widgets\";\nimport * as CustomOperators from \"../components/operators\";\nimport { CoreConfig, Utils } from \"@react-awesome-query-builder/core\";\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  ...CoreConfig.conjunctions,\n};\n\n//----------------------------  operators\n\nconst operators = {\n  ...CoreConfig.operators,\n  proximity: {\n    ...CoreConfig.operators.proximity,\n    options: {\n      ...CoreConfig.operators.proximity.options,\n      factory: (props, {RCE, O: {ProximityOperator}}) => RCE(ProximityOperator, props),\n    },\n  },\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    ...CoreConfig.widgets.text,\n    factory: (props, {RCE, W: {VanillaTextWidget}}) => RCE(VanillaTextWidget, props),\n  },\n  textarea: {\n    ...CoreConfig.widgets.textarea,\n    factory: (props, {RCE, W: {VanillaTextAreaWidget}}) => RCE(VanillaTextAreaWidget, props),\n  },\n  number: {\n    ...CoreConfig.widgets.number,\n    factory: (props, {RCE, W: {VanillaNumberWidget}}) => RCE(VanillaNumberWidget, props),\n  },\n  slider: {\n    ...CoreConfig.widgets.slider,\n    factory: (props, {RCE, W: {VanillaSliderWidget}}) => RCE(VanillaSliderWidget, props),\n  },\n  select: {\n    ...CoreConfig.widgets.select,\n    factory: (props, {RCE, W: {VanillaSelectWidget}}) => RCE(VanillaSelectWidget, props),\n  },\n  multiselect: {\n    ...CoreConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {VanillaMultiSelectWidget}}) => RCE(VanillaMultiSelectWidget, props),\n  },\n  date: {\n    ...CoreConfig.widgets.date,\n    factory: (props, {RCE, W: {VanillaDateWidget}}) => RCE(VanillaDateWidget, props),\n  },\n  time: {\n    ...CoreConfig.widgets.time,\n    factory: (props, {RCE, W: {VanillaTimeWidget}}) => RCE(VanillaTimeWidget, props),\n  },\n  datetime: {\n    ...CoreConfig.widgets.datetime,\n    factory: (props, {RCE, W: {VanillaDateTimeWidget}}) => RCE(VanillaDateTimeWidget, props),\n  },\n  boolean: {\n    ...CoreConfig.widgets.boolean,\n    factory: (props, {RCE, W: {VanillaBooleanWidget}}) => RCE(VanillaBooleanWidget, props),\n  },\n  field: {\n    ...CoreConfig.widgets.field,\n    factory: (props, {RCE, W: {ValueFieldWidget}}) => RCE(ValueFieldWidget, props),\n    customProps: {\n      showSearch: true\n    }\n  },\n  func: {\n    ...CoreConfig.widgets.func,\n    factory: (props, {RCE, W: {FuncWidget}}) => RCE(FuncWidget, props),\n    customProps: {\n      //showSearch: true\n    }\n  },\n  case_value: {\n    ...CoreConfig.widgets.case_value,\n    // simple text value\n    factory: (props, {RCE, W: {VanillaTextWidget}}) =>  RCE(VanillaTextWidget, props),\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  ...CoreConfig.types,\n  select: {\n    ...CoreConfig.types.select,\n    widgets: {\n      ...CoreConfig.types.select.widgets,\n      select: {\n        ...CoreConfig.types.select.widgets.select,\n        widgetProps: {\n          customProps: {\n            showSearch: true\n          }\n        },\n      }\n    }\n  }\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...CoreConfig.settings,\n\n  renderField: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderOperator: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderFunc: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderConjs: (props, {RCE, W: {VanillaConjs}}) => RCE(VanillaConjs, props),\n  renderSwitch: (props, {RCE, W: {VanillaSwitch}}) => RCE(VanillaSwitch, props),\n  renderButton: (props, {RCE, W: {VanillaButton}}) => RCE(VanillaButton, props),\n  renderIcon: (props, {RCE, W: {VanillaIcon}}) => RCE(VanillaIcon, props),\n  renderButtonGroup: (props, {RCE, W: {VanillaButtonGroup}}) => RCE(VanillaButtonGroup, props),\n  renderProvider: (props, {RCE, W: {VanillaProvider}}) => RCE(VanillaProvider, props),\n  renderValueSources: (props, {RCE, W: {VanillaValueSources}}) => RCE(VanillaValueSources, props),\n  renderFieldSources: (props, {RCE, W: {VanillaValueSources}}) => RCE(VanillaValueSources, props),\n  renderConfirm: (props, {W: {vanillaConfirm}}) => vanillaConfirm(props),\n  renderSwitchPrefix: \"Conditions\",\n\n  customFieldSelectProps: {\n    showSearch: true\n  },\n\n  defaultSliderWidth: \"200px\",\n  defaultSelectWidth: \"200px\",\n  defaultSearchWidth: \"100px\",\n  defaultMaxRows: 5,\n  renderSize: \"small\",\n  maxLabelsLength: 100,\n\n  showLock: false,\n  showNot: true,\n  forceShowConj: false,\n  groupActionsPosition: \"topRight\", // oneOf [topLeft, topCenter, topRight, bottomLeft, bottomCenter, bottomRight]\n  \n};\n\n//----------------------------\n\nconst ctx = {\n  ...CoreConfig.ctx,\n  W: {\n    ...Widgets\n  },\n  O: {\n    ...CustomOperators\n  },\n  RCE: (C, P) => React.createElement(C, P),\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\nconfig = Utils.ConfigMixins.removeMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport debounce from \"lodash/debounce\";\nconst { mergeListValues, listValueToOption, optionToListValue, optionsToListValues, fixListValuesGroupOrder } = Utils.Autocomplete;\nconst { mapListValues, listValuesToArray, getListValue, makeCustomListValue, searchListValue, getItemInListValues } = Utils.ListUtils;\n\nfunction sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\nconst useListValuesAutocomplete = ({\n  asyncFetch, useLoadMore, useAsyncSearch, forceAsyncSearch,\n  asyncListValues: selectedAsyncListValues,\n  listValues: staticListValues, allowCustomValues,\n  value: selectedValue, setValue, placeholder, \n  config\n}, {\n  debounceTimeout,\n  multiple,\n  uif\n}) => {\n  const knownSpecialValues = [\"LOAD_MORE\", \"LOADING_MORE\"];\n  const loadMoreTitle = \"Load more...\";\n  const loadingMoreTitle = \"Loading more...\";\n  const aPlaceholder = forceAsyncSearch ? \"Type to search\" : placeholder;\n\n  // state\n  const [open, setOpen] = React.useState(false);\n  const [asyncFetchMeta, setAsyncFetchMeta] = React.useState(undefined);\n  const [loadingCnt, setLoadingCnt] = React.useState(0);\n  const [isLoadingMore, setIsLoadingMore] = React.useState(false);\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [asyncListValues, setAsyncListValues] = React.useState(undefined);\n\n  // ref\n  const asyncFectchCnt = React.useRef(0);\n  const componentIsMounted = React.useRef(0);\n  const isSelectedLoadMore = React.useRef(false);\n\n  // compute\n  const nSelectedAsyncListValues = listValuesToArray(selectedAsyncListValues);\n  const listValues = asyncFetch\n    ? (selectedAsyncListValues ? mergeListValues(asyncListValues, nSelectedAsyncListValues, true) : asyncListValues)\n    : staticListValues;\n  let listValuesToDisplay = asyncFetch\n    ? asyncListValues\n    : staticListValues;\n  if (allowCustomValues && inputValue && !searchListValue(inputValue, asyncListValues)) {\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, [makeCustomListValue(inputValue)], true);\n  }\n  if (asyncFetch && !asyncListValues && selectedAsyncListValues && !inputValue && !open && uif === \"antd\") {\n    // for initial loading, to resolve \"a\" -> \"A\"\n    listValuesToDisplay = listValues;\n  }\n  if (asyncFetch && !allowCustomValues && selectedAsyncListValues && uif === \"mui\") {\n    // to prevent warning, when select A, search E -> A is missing in options\n    //  MUI: The value provided to Autocomplete is invalid.\n    //  None of the options match with `\"a\"`.\n    //  You can use the `isOptionEqualToValue` prop to customize the equality test.\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, nSelectedAsyncListValues, true, true);\n  }\n  //const isDirtyInitialListValues = asyncListValues == undefined && selectedAsyncListValues && selectedAsyncListValues.length && typeof selectedAsyncListValues[0] != \"object\";\n  const isLoading = loadingCnt > 0;\n  const canInitialLoad = open && asyncFetch\n    && asyncListValues === undefined\n    && (forceAsyncSearch ? inputValue : true);\n  const isInitialLoading = canInitialLoad && isLoading;\n  const canLoadMore = !isInitialLoading && listValues && listValues.length > 0\n    && asyncFetchMeta && asyncFetchMeta.hasMore && (asyncFetchMeta.filter || \"\") === inputValue;\n  const canShowLoadMore = !isLoading && canLoadMore;\n  const options = mapListValues(listValuesToDisplay, listValueToOption);\n  const hasValue = selectedValue != null;\n  const selectedListValue = !multiple && hasValue ? getListValue(selectedValue, listValues) : null;\n  // const selectedListValues = multiple && hasValue ? selectedValue.map(v => getItemInListValues(listValues, v)) : [];\n\n  // fetch\n  const fetchListValues = async (filter = null, isLoadMore = false) => {\n    // clear obsolete meta\n    if (!isLoadMore && asyncFetchMeta) {\n      setAsyncFetchMeta(undefined);\n    }\n\n    const offset = isLoadMore && asyncListValues ? asyncListValues.length : 0;\n    const meta = isLoadMore && asyncFetchMeta || !useLoadMore && { pageSize: 0 };\n\n    const newAsyncFetchCnt = ++asyncFectchCnt.current;\n    const res = await asyncFetch.call(config?.ctx, filter, offset, meta);\n    const isFetchCancelled = asyncFectchCnt.current != newAsyncFetchCnt;\n    if (isFetchCancelled || !componentIsMounted.current) {\n      return null;\n    }\n\n    const { values, hasMore, meta: newMeta } = res?.values\n      ? res\n      : { values: res } // fallback, if response contains just array, not object\n    ;\n    const nValues = listValuesToArray(values);\n    let assumeHasMore;\n    let newValues;\n    if (isLoadMore) {\n      newValues = mergeListValues(asyncListValues, nValues, false);\n      assumeHasMore = newValues.length > asyncListValues.length;\n    } else {\n      newValues = nValues;\n      if (useLoadMore) {\n        assumeHasMore = newValues.length > 0;\n      }\n    }\n\n    // save new meta\n    const realNewMeta = hasMore != null || newMeta != null || assumeHasMore != null ? {\n      ...(assumeHasMore != null ? { hasMore: assumeHasMore } : {}),\n      ...(hasMore != null ? { hasMore } : {}),\n      ...(newMeta != null ? newMeta : {}),\n      filter\n    } : undefined;\n    if (realNewMeta) {\n      setAsyncFetchMeta(realNewMeta);\n    }\n\n    return newValues;\n  };\n\n  const loadListValues = async (filter = null, isLoadMore = false) => {\n    setLoadingCnt(x => (x + 1));\n    setIsLoadingMore(isLoadMore);\n    const list = await fetchListValues(filter, isLoadMore);\n    if (!componentIsMounted.current) {\n      return;\n    }\n    if (list != null) {\n      // tip: null can be used for reject (eg, if user don't want to filter by input)\n      setAsyncListValues(list);\n    }\n    setLoadingCnt(x => (x - 1));\n    setIsLoadingMore(false);\n  };\n  const loadListValuesDebounced = React.useCallback(debounce(loadListValues, debounceTimeout), []);\n\n  React.useEffect(() => {\n    componentIsMounted.current++;\n    // Initial loading\n    if (canInitialLoad && loadingCnt == 0 && asyncFectchCnt.current == 0) {\n      (async () => {\n        await loadListValues();\n      })();\n    }\n    // Unmount\n    return () => {\n      componentIsMounted.current--;\n    };\n  }, [canInitialLoad]);\n\n  // Event handlers\n  const onOpen = () => {\n    setOpen(true);\n  };\n\n  const onClose = async (_e) => {\n    const isLoadMoreClick = isSelectedLoadMore.current;\n    if (isLoadMoreClick) {\n      isSelectedLoadMore.current = false;\n      if (multiple) {\n        // required for MUI\n        setOpen(false);\n      }\n    } else {\n      setOpen(false);\n    }\n\n    if (uif === \"mui\" && !isLoadMoreClick) {\n      // parity with Antd\n      const resetValue = \"\";\n      await onInputChange(null, resetValue, \"my-reset\");\n    }\n  };\n\n  const onDropdownVisibleChange = (open) => {\n    if (open) {\n      onOpen();\n    } else {\n      onClose();\n    }\n  };\n\n  const isSpecialValue = (option) => {\n    const specialValue = option?.specialValue || option?.value;\n    return knownSpecialValues.includes(specialValue);\n  };\n\n  const onChange = async (e, val, option) => {\n    // todo: don't rely on 3rd param. check MUI 6\n    const isClearingAll = multiple && uif === \"mui\" && option === \"clear\";\n    // if user removes all chars in search, don't clear selected value\n    const isClearingInput = !multiple && uif === \"mui\" && option === \"clear\" && e?.type === \"change\";\n    if (uif === \"mui\") {\n      option = val;\n      if (multiple) {\n        val = option.map(o => (o?.value ?? o));\n      } else {\n        val = option?.value ?? option;\n      }\n    }\n    const specialValue = multiple && Array.isArray(option) && option.map(opt => opt?.specialValue).find(v => !!v)\n      || option?.specialValue;\n    if (multiple && val && !Array.isArray(val)) {\n      val = [...(selectedValue || []), val];\n      option = null;\n    }\n    // if there are tags AND input and select is opened, clear input first\n    const shouldIgnore = isClearingAll && val.length === 0 && inputValue && open\n      || isClearingInput;\n    if (shouldIgnore) {\n      return;\n    }\n    const isAddingCustomOptionFromSearch \n      = multiple\n      && val.length && val.length > (selectedValue || []).length\n      && val[val.length-1] == inputValue\n      && !getListValue(inputValue, asyncListValues);\n\n    if (specialValue == \"LOAD_MORE\") {\n      setInputValue(inputValue);\n      isSelectedLoadMore.current = true;\n      await loadListValues(inputValue, true);\n    } else if (specialValue == \"LOADING_MORE\") {\n      isSelectedLoadMore.current = true;\n    } else {\n      if (multiple) {\n        const [newSelectedValues, newSelectedListValues] = optionsToListValues(val, listValues, allowCustomValues);\n        setValue(newSelectedValues, asyncFetch ? newSelectedListValues : undefined);\n        \n        if (isAddingCustomOptionFromSearch) {\n          await sleep(0);\n          await onInputChange(null, \"\", \"my-reset\");\n        }\n      } else {\n        const [v, lvs] = optionToListValue(val, listValues, allowCustomValues);\n        setValue(v, asyncFetch ? lvs : undefined);\n      }\n    }\n  };\n\n  const onInputChange = async (e, newInputValue, eventType) => {\n    // eventType=reset used by MUI on:\n    // - (single) initial set, select option - e = null, newInputValue = selected  (+1 call before with e != null)\n    // - (single/multi, -ACV) blur - e != null, newInputValue = ''\n    // - (multiple v5, -ACV) blur - e = null, newInputValue = '' # unwanted\n    // - (multiple) select option - e != null, newInputValue = ''\n    // - (multiple v4) delete tag while searching - e = null, newInputValue = ''  # unwanted\n    // - (multiple v4) select option while searching - e = null, newInputValue = ''  # unwanted\n\n    const shouldIgnore = uif === \"mui\" && eventType === \"reset\"\n    // && (\n    //   e != null\n    //   // for MUI 4 if search \"A\" and select any option -> should NOT reset search\n    //   // for MUI 5 if search \"A\" and close -> let's hold search but hide, as it's done in antd\n    //   || e === null && inputValue && multiple\n    // )\n    ;\n    const val = newInputValue;\n    if (val === loadMoreTitle || val === loadingMoreTitle || shouldIgnore) {\n      return;\n    }\n\n    if (newInputValue != inputValue) {\n      setInputValue(val);\n\n      const canSearchAsync = useAsyncSearch && (forceAsyncSearch ? !!val : true);\n      if (canSearchAsync) {\n        await loadListValuesDebounced(val);\n      } else if (useAsyncSearch && forceAsyncSearch) {\n        setAsyncListValues([]);\n      }\n    }\n  };\n\n  // Options\n  const extendOptions = (options) => {\n    const filtered = [...options];\n    if (useLoadMore) {\n      if (canShowLoadMore) {\n        filtered.push({\n          specialValue: \"LOAD_MORE\",\n          title: loadMoreTitle,\n        });\n      } else if (isLoadingMore) {\n        filtered.push({\n          specialValue: \"LOADING_MORE\",\n          title: loadingMoreTitle,\n          disabled: true\n        });\n      }\n    }\n    return filtered;\n  };\n\n  const getOptionSelected = (option, valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const selectedValue = valueOrOption.value != undefined ? valueOrOption.value : valueOrOption;\n    return option.value === selectedValue;\n  };\n\n  const getOptionDisabled = (valueOrOption) => {\n    return valueOrOption && valueOrOption.disabled;\n  };\n\n  const getOptionIsCustom = (valueOrOption) => {\n    if (valueOrOption?.isCustom)\n      return true;\n    const val = valueOrOption?.value ?? valueOrOption;\n    const lv = getListValue(val, listValues);\n    return lv?.isCustom || false;\n  };\n\n  const getOptionLabel = (valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const option = valueOrOption.value != undefined ? valueOrOption\n      : listValueToOption(getListValue(valueOrOption, listValues));\n    if (!option && valueOrOption.specialValue) {\n      // special last 'Load more...' item\n      return valueOrOption.title;\n    }\n    if (!option && allowCustomValues) {\n      // there is just string value, it's not item from list\n      return valueOrOption;\n    }\n    if (!option) {\n      // weird\n      return valueOrOption;\n    }\n    return option.title || option.label || option.value; // fallback to value\n  };\n\n  const fixedOptions = uif === \"mui\" ? fixListValuesGroupOrder(options) : options;\n\n  return {\n    options: fixedOptions,\n    listValues,\n    hasValue,\n    selectedListValue,\n\n    open,\n    onOpen,\n    onClose,\n    onDropdownVisibleChange,\n    onChange,\n    \n    inputValue,\n    onInputChange,\n    canShowLoadMore,\n    isInitialLoading,\n    isLoading,\n    isLoadingMore,\n    isSpecialValue,\n\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    aPlaceholder,\n  };\n};\n\nexport default useListValuesAutocomplete;\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport * as ReactUtils from \"./reactUtils\";\nimport { DragIcon } from \"../components/utils\";\nexport default { ...Utils, ReactUtils, DragIcon };\n","var map = {\n\t\"./es-us\": 88218,\n\t\"./es-us.js\": 88218,\n\t\"./ru\": 31313,\n\t\"./ru.js\": 31313\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 40164;"],"names":["mapListValues","Utils","ListUtils","useListValuesAutocomplete","Hooks","nonCheckedIcon","React","CheckBoxOutlineBlankIcon","fontSize","style","marginRight","marginTop","checkedIcon","CheckBoxIcon","emptyArray","props","allowCustomValues","multiple","disableClearable","selectedValue","value","customProps","readonly","config","filterOptionsConfig","errorText","defaultFilterOptionsConfig","stringify","useCallback","option","settings","listKeysForSearch","map","k","join","filterOptionsFn","createFilterOptions","_useListValuesAutocom","debounceTimeout","uif","open","onOpen","onClose","onChange","onInputChange","inputValue","options","isInitialLoading","isLoading","aPlaceholder","extendOptions","getOptionSelected","getOptionDisabled","getOptionIsCustom","getOptionLabel","selectedListValue","_config$settings","defaultSelectWidth","defaultSearchWidth","_ref","width","rest","_objectWithoutProperties","_excluded","customInputProps","input","inputWidth","omit","customAutocompleteProps","minWidth","undefined","placeholder","useStyles","makeStyles","theme","classesChip","root","height","label","marginBottom","useStylesChip","classes","FormControl","fullWidth","Autocomplete","_extends","disableCloseOnSelect","freeSolo","loading","disabled","readOnly","groupBy","groupTitle","renderInput","params","_selectedListValue$ti","shouldRenderSelected","selectedTitle","title","TextField","inputProps","_objectSpread","InputProps","endAdornment","CircularProgress","color","size","error","renderTags","getTagProps","index","className","titleSpan","Chip","key","renderOption","_ref2","selected","renderTitle","specialValue","isHidden","Box","filterOptions","filtered","mapFieldItemToOptionKeys","path","altLabel","tooltip","grouplabel","itemsToListValues","items","level","arguments","length","item","matchesType","prefix","repeat","_value2","_altLabel","flat","Infinity","fieldAdapter","selectedKey","setField","isValueField","listValues","fieldItemKeysForSearch","setValue","_asyncValues","isFieldAutocomplete","DragIcon","typeToIcon","DeleteIcon","AddIcon","DragHandle","typeToColor","hideLabelsFor","paper","padding","spacing","MaterialTextWidget","maxLength","textValue","e","val","target","MaterialTextAreaWidget","maxRows","defaultMaxRows","multiline","MaterialDateWidget","_window","_window$matchMedia","_window2","dateFormat","valueFormat","Picker","window","matchMedia","call","matches","useKeyboard","KeyboardDatePicker","DatePicker","format","isValid","formatSingleValue","MaterialDateTimeWidget","use12Hours","timeFormat","KeyboardDateTimePicker","DateTimePicker","dateTimeFormat","ampm","MaterialTimeWidget","KeyboardTimePicker","TimePicker","hasSeconds","indexOf","timeValue","moment","views","MaterialSelectWidget","hasValue","Select","autoWidth","displayEmpty","renderValue","_ref3","filter","v","shift","getListValueTitle","MenuItem","MaterialNumberWidget","min","max","step","numberValue","type","Number","MaterialSliderWidget","marks","defaultSliderWidth","customSliderProps","slider","sliderValue","muiMarks","Object","keys","InputCmp","onBlur","SliderCmp","Slider","_e","newValue","valueLabelDisplay","stylesSliderWrapper","marginLeft","paddingLeft","display","alignItems","flexWrap","MaterialRangeWidget","placeholders","textSeparators","useEffect","_slicedToArray","valueFrom","valueTo","setTimeout","oneValue","handleInputBlur","_toConsumableArray","_sliderValue","FromInputCmp","ToInputCmp","newValues","stylesInputWrapper","MaterialBooleanWidget","labelYes","labelNo","Typography","component","Grid","container","Switch","checked","MaterialMultiSelectWidget","selectedValues","selectedTitles","Checkbox","ListItemText","primary","MaterialAutocompleteWidget","MaterialFieldSelect","findLabel","fields","field","Array","isArray","some","pop","renderOptions","ListSubheader","disableSticky","MaterialFieldAutocomplete","MaterialAutocomplete","MaterialIcon","icon","Icon","MaterialButton","onClick","renderIcon","IconButton","Button","startIcon","MaterialButtonGroup","children","MaterialConjs","id","not","setNot","conjunctionOptions","setConjunction","showNot","notLabel","conjsCount","lessThenTwo","showConj","forceShowConj","ButtonGroup","disableElevation","variant","bind","_conjunctionOptions$k","name","postfix","isDummyFn","MaterialSwitch","checkedLabel","hideLabel","renderSize","showLabel","LockIcon","LockOpenIcon","FormControlLabel","control","MaterialValueSources","valueSources","valueSrc","setValueSrc","_React$useState","_React$useState2","anchorEl","setAnchorEl","handleClose","Boolean","event","currentTarget","handleOpen","ExpandMoreSharpIcon","Popover","anchorOrigin","vertical","horizontal","transformOrigin","disablePortal","FormLabel","RadioGroup","srcKey","info","Radio","MaterialConfirm","onOk","okText","cancelText","confirmFn","description","confirmationText","cancellationText","then","MaterialUseConfirm","useConfirm","MaterialProvider","settingsTheme","settingsLocale","locale","themeConfig","material","createTheme","base","withProviders","MuiPickersUtilsProvider","utils","MomentUtils","ConfirmProvider","ThemeProvider","BasicConfig","renderField","_props$customProps","RCE","_ref$W","W","showSearch","renderOperator","renderFunc","renderConjs","_ref4","renderSwitch","_ref5","renderButton","_ref6","_ref7","renderButtonGroup","_ref8","renderValueSources","_ref9","renderFieldSources","_ref10","renderProvider","_ref11","renderConfirm","_ref12","_ref13","widgets","text","factory","_ref14","textarea","_ref15","number","_ref16","multiselect","_ref17","_ref17$W","asyncFetch","select","_ref18","_ref18$W","_ref19","boolean","_ref20","date","_ref21","time","_ref22","datetime","_ref23","rangeslider","_ref24","types","ctx","MaterialWidgets","ConfigMixins","addMixins","query_builder_seed","timePart","Date","getTime","toString","substr","replace","c","r","Math","floor","random","isObject","_typeof","widgetDefKeysToOmit","opDefKeysToOmit","defaultValue","_default","deepEqual","v1","v2","Map","isMap","equals","JSON","shallowEqual","a","b","deep","arrA","arrB","len","i","shallowEqualArrays","objA","objB","aKeys","bKeys","shallowEqualObjects","isImmutable","toJS","toImmutableList","Immutable","applyToJS","escapeRegExp","string","cleanJSX","jsx","el","_i","isDirtyJSX","_cleaned$props","cleaned","includes","isJSX","isJsonLogic","logic","sleep","delay","Promise","resolve","mergeArraysSmart","arr1","arr2","op","orig","next","slice","after","reverse","find","before","x","reduce","acc","newOp","rel","relOp","ind","splice","deepFreeze","obj","forEach","prop","freeze","isJsonCompatible","tpl","bag","concat","getLogger","devMode","console","log","warn","debug","getFirstDefined","ret","arr","logger","formatField","parts","label2","fieldDefinition","isForDisplay","fieldSources","keepInputOnChangeFieldSrc","valueSourcesInfo","fieldSeparator","fieldSeparatorDisplay","canReorder","canRegroup","canDeleteLocked","canLeaveEmptyGroup","shouldCreateEmptyGroup","canShortMongoQuery","removeEmptyGroupsOnLoad","removeIncompleteRulesOnLoad","removeInvalidMultiSelectValuesOnLoad","setOpOnChangeField","groupOperators","defaultGroupConjunction","valueLabel","valuePlaceholder","fieldLabel","operatorLabel","funcLabel","fieldPlaceholder","funcPlaceholder","operatorPlaceholder","lockLabel","lockedLabel","deleteLabel","addGroupLabel","addCaseLabel","addDefaultCaseLabel","defaultCaseLabel","addRuleLabel","addSubRuleLabel","delGroupLabel","fieldSourcesPopupTitle","valueSourcesPopupTitle","removeRuleConfirmOptions","removeGroupConfirmOptions","toListValue","makeCustomListValue","lv","isCustom","listValuesToArray","listValuesObj","listValuesArr","push","getItemInListValues","getTitleInListValues","it","getValueInListValues","mapFn","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","f","searchListValue","search","getListValue","expandTreePath","_len","suffix","_key","interpose","withMutations","list","skip","apply","expandTreeSubpath","_len2","_key2","getItemByPath","tree","_defineProperty","get","res","removeIsLockedInTree","newTree","_processNode","isParentLocked","itemPath","isLocked","getIn","deleteIn","child","_childId","fixPathsInTree","lev","nodeId","currPath","currId","itemId","setIn","constructor","childId","fixEmptyGroupsInTree","allChildrenGone","curr","getFlatTree","realHeight","_flatizeTree","insideCollapsed","insideLocked","insideRuleGroup","parentType","caseId","depth","collapsed","childrenIds","_child","valueSeq","toArray","isRuleGroup","isLeaf","hasChildren","itemsBefore","top","parent","isDefaultCase","leaf","leafsCount","_top","node","subinfo","itemsAfter","assign","_height","bottom","prevId","nextId","prev","getTotalReordableNodesCountInTree","cnt","children1","getTotalRulesCountInTree","getTreeBadFields","badFields","valueError","from","Set","getLightTree","children1AsArray","properties","operatorOptions","values","getSwitchValues","vals","caseValue","isEmptyTree","_fixImmutableValue","_v$toJS","vJs","func","toOrderedMap","getTree","immutableTree","light","loadTree","serTree","isImmutableTree","isTree","jsToImmutable","startsWith","parse","checkTree","extendedConfig","extendConfig","validateTree","isValidTree","fromJS","outValue","isFuncArg","isRuleValue","_outValue$get","isIndexed","toList","loadFromJsonLogic","logicTree","_loadFromJsonLogic","returnErrors","meta","errors","conv","buildConv","jsTree","convertFromLogic","wrapInDefaultConj","immTree","operators","opKey","opConfig","jsonLogic","opk","_jsonLogicIsRevArgs","cardinality","jsonLogic2","conjunctions","conjKey","jsonLogicConj","toLowerCase","funcs","iterateFuncs","_step$value","funcPath","funcConfig","fk","jsonLogicIsMethod","_config$settings$json","varKeys","groupVarKey","altVarKey","expectedType","fieldConfig","widget","parentField","beforeErrorsCnt","lockedOp","isEmptyOp","isRev","convertFieldRhs","convertFuncRhs","convertValRhs","convertConj","convertOp","afterErrorsCnt","_fieldConfig$fieldSet","widgetConfig","mainWidget","fieldType","h","m","dateVal","setMilliseconds","setHours","setMinutes","setSeconds","toISOString","asyncListValues","fieldSettings","valueType","normalizeField","getFieldConfig","argsArr","funcKey","opts","_vals","_toArray","returnType","funcKeys","getFuncConfig","_step2","_iterator2","_step2$value","fc","jsonLogicImport","parsed","argKeys","args","argsObj","argVal","argKey","argConfig","_argVal","isOptional","complexFields","_v$properties","_v$properties2","fieldSrc","_f$includes","complexFieldsGroupAncestors","fromEntries","split","ancs","fp","conjunction","uuid","groupToId","entries","_v$properties3","groupAncestors","groupField","ch","parentFieldParts","getFieldParts","groupPath","gf","gfc","groupId","mode","rule","defaultConjunction","_parseRule","arity","isRevArgs","isGroup0","opKeys","jlField","jlArgs","_vals2","_vals3","lhs","having","isGroup","_parse","convertFieldLhs","convertFuncLhs","_v","_v2","init","_v3","_v4","group","parsedGroup","convertLhs","op2","parseRes","submeta","parseRule","conj","havingVals","havingNot","reversedOp","getWidgetForFieldOp","convertedArgs","parentFieldConfig","wrapInDefaultConjRuleGroup","operator","asyncListValuesArr","SqlString","SqlStringOrig","trim","charAt","substring","escapeLike","any_start","any_end","escape","sqlEmptyValue","fieldDef","mongoEmptyValue","spelFixList","spelEscape","numberToFloat","arrayToArray","isFinite","isNaN","isInteger","javaType","jt","escapedVals","numberJavaTypes","Error","spelInlineList","spelEscapeString","spelFormatConcat","part","spelImportConcat","isVariable","stringifyForDisplay","compareToSign","TypesWithCompareTo","spelFormat","_spelFormat","formatItem","formatGroup","formatRule","formatSwitch","formatCase","_formatItemValue","formatItemValue","_formatItemValue2","formattedValue","cases","currentChild","filteredCases","left","right","_filteredCases$_i","cond","List","conjunctionDefinition","isRuleGroupArray","isSpelArray","groupOperator","realGroupOperator","checkOp","isGroupOpRev","realGroupOperatorDefinition","getOperatorConfig","_formatItemValue3","_formatItemValue4","omitBrackets","spelFormatConj","formattedField","getSize","fullSize","filteredSize","formatExpression","opDef","fn","spelFormatOp","operatorDefinition","spelOp","isSign","isCompareTo","sop","compareRes","_","buildFnToFormatOp","spelFormatReverse","revOpDef","canFormatOp","canFormatRevOp","realOp","_formatItemValue5","_formatItemValue6","formatLhs","formatFunc","expectedValueType","iValueSrc","iValueType","iValue","valueSrcs","valueTypes","fvalue","currentValue","cValue","completeValue","fieldWidgetDef","getFieldWidgetConfig","fv","formatValue","hasUndefinedValues","first","operatorDef","spelFormatValue","pick","valFieldDefinition","fieldParts","fieldPartsConfigs","getFieldPartsConfigs","formatFieldFn","formatSpelField","fieldName","formatFieldName","fieldPartsMeta","cnf","parentCnf","isSpelMap","isSpelItemMap","isSpelVariable","formattedArgs","gaps","missingArgKeys","_argValue","_argConfig$spelEscape","defaultValueSrc","argValue","argValueSrc","argAsyncListValues","doEscape","spelEscapeForFormat","formattedArgVal","formattedDefaultVal","defaultWidget","defaultFieldWidgetDef","finalFormattedVal","_argValue2","missedArgKey","spelFormatFunc","spelFunc","found","_formattedArgs$argKey","optionalArgs","RegExp","SpelPrimitiveTypes","null","SpelPrimitiveClasses","String","loadFromSpel","_loadFromSpel","spelStr","compiledExpression","convertedObj","SpelExpressionEvaluator","compile","_compiledExpression","postprocessCompiled","convertToTree","expr","parentExpr","getType","getChildren","selection","lastChild","isSize","methodName","isLength","sourceParts","source","convertPath","isThis","isRoot","itype","_lastChild","_lastChild2","getRaw","getValue","flatizeTernary","functionName","qid","cls","_val","isVar","_processTernaryChildren","tern","_tern","if_val","else_val","_loop","spelOps","spelConj","_loop2","fks","funcSignMain","_k","funcSignsOptional","optionalArgKeys","_step3","_iterator3","valueFuncs","w","widgetDef","spelImportFuncs","fs","argsOrder","matchAll","opFuncs","spel","parentSpel","canParseAsArg","_groupFilter","groupFieldValue","_groupField","groupFilter","caseI","buildCase","convertArg","sw","buildSimpleSwitch","isUnary","isBetweenNormal","isBetweenRev","_spel$children$0$chil","_spel$children$1$chil","to","compareArgs","convertChildren","_newChildren","newChildren","_fieldObj$groupFieldV","_convertedArgs","fieldObj","opArg","_vals$","_vals$2","ws","needWrapReverse","buildRuleGroup","buildRule","expectingField","isError","_meta$errors","_meta$errors$push","_spel$children","at","_values$","buildCaseValueConcat","maybe","convertFunc","_buildFuncSignatures","brns","p","currBrn","o","_currBrn$params","_buildFuncSignatures2","_buildFuncSignatures3","s1","params1","newBrn","objs","unshift","_step4","_iterator4","_brn$objs","brn","_params","_buildFuncSignatures4","_buildFuncSignatures5","_fsigns$","convertFuncArg","fsigns","buildFuncSignatures","firstSign","maybeValue","convertFuncToValue","maybeOp","convertFuncToOp","_step5","_iterator5","_loop3","_step5$value","_step6","_iterator6","_step6$value","spelImport","funcArgs","errs","foundSign","foundWidget","candidates","fj","_step7","_iterator7","_step8","_step7$value","_iterator8","_loop4","_step8$value","_candidates","_candidates$_i","spelImportValue","_spelImportValue$call","_spelImportValue$call2","_step9","_iterator9","_step10","_step9$value","_iterator10","_loop5","_argsArr$filter$find","_step10$value","parseInt","_ret2","_field3","groupOpRule","_map","_map2","leftSource","rightSource","_map3","_map4","leftVal","rightVal","valProperties","buildCaseValProperties","_processConcatChildren","convertedChild","convVal","importCaseValue","_importCaseValue","_importCaseValue2","normVal","getDefaultField","canGetFirst","parentRuleGroupPath","defaultField","getDefaultSubField","getFirstField","parentRuleGroupConfig","getDefaultFieldSrc","_config$settings$fiel","getDefaultOperator","defaultOperator","fieldOperators","fieldDefaultOperator","getFirstOperator","_origDefaultOperator","defaultOperatorOptions","operatorConfig","defaults","defaultRuleProperties","_item$properties","_item$properties2","_item$properties3","canUseDefaultFieldAndOp","showErrorMessage","current","set","_getNewValueForFieldO","getNewValueForFieldOp","newValueSrc","newValueType","newValueError","conjs","defaultGroupProperties","defaultItemProperties","_item$properties4","defaultRule","defaultRoot","canAddDefaultRule","createListFromArray","ids","emptyProperies","validateAndFixTree","_oldTree","newConfig","oldConfig","removeEmptyGroups","removeIncompleteRules","validateItem","oldChildren","sanitized","validateGroup","_field","_field$toJS","_field2","_field2$toJS","oldSerialized","getFieldSrc","availOps","getOperatorsForField","newSerialized","isValueCompleted","delta","isCompletedValue","isFieldCompleted","isCompleted","_newSerialized$valueS","_newSerialized$valueS2","_oldSerialized$valueS","reason","validateRule","validateValue","leftField","canFix","isEndValue","isRawValue","validError","fixedValue","_validateFieldValue","validateFieldValue","_validateFieldValue2","_validateFuncValue","validateFuncValue","_validateFuncValue2","_validateNormalValue","validateNormalValue","_validateNormalValue2","fieldWidgetDefinition","rightFieldDefinition","validResult","wConfig","wType","jsType","treeValues","isAsyncListValues","canSkipCheck","typeOf","realListValues","isList","_values$reduce","goodVals","badVals","vv","_values$reduce2","goodValues","badValues","plural","validateValueInList","_valueSrc","_isFuncArg","leftFieldStr","rightFieldStr","argDef","_validateValue","_validateValue2","argValidError","fixedArgVal","completeFuncValue","complValue","tmpHasOptional","filteredValueSources","filterValueSourcesForField","argDefaultValueSrc","completeArgValue","getDefaultArgValue","setFunc","oldFuncKey","oldArgs","newFuncSignature","getFuncSignature","oldFuncSignature","keepArgsKeys","getCompatibleArgsOnFuncChange","firstValueSrc","setArgValue","setArgValueSrc","argValSrc","_argConfig","_config","s2","argVals","arg2","arg1","selectTypes","listValuesType","newField","newOperator","changedProp","currentField","currentFieldType","currentOperator","currentValueSrc","currentValueType","currentAsyncListValues","convertableWidgets","clearValueOnChangeField","clearValueOnChangeOp","newOperatorConfig","operatorCardinality","currentFieldConfig","newFieldConfig","isOkWithoutField","currentType","newType","canReuseValue","newListValuesType","currentListValuesType","vs","currentWidget","newWidget","currentValueWidget","newValueWidget","firstWidgetConfig","getValueSourcesForFieldOp","valueFixes","valueErrors","vType","vSrc","isValidSrc","validateError","fixValue","dropValue","_ignore","_newFieldConfig$field","validateValues","jsValues","rangeValidateError","vt","parentPathArr","firstField","getFieldRawConfig","keysPath","_firstField","subfields","getOperatorsForType","_config$types$fieldTy","_fieldOps$","fieldOps","getFuncPathLabels","getFieldPathLabels","fieldsKey","subfieldsKey","parentParts","_curr","last","parentFieldDef","isFieldDescendantOfField","getValueLabel","isSpecialRange","arg","showLabels","fieldWidgetConfig","mergedOpConfig","valueLabels","_getWidgetsAndSrcsForFieldOp","widgetValueSrc","canAdd","_fieldConfig$valueSou","_opConfig$valueSource","canAddValueSrc","widgetWeight","wg","preferWidgets","sort","w1","w2","getWidgetsForFieldOp","_fieldDefinition$type","__fieldsCntByType","minCnt","__funcsCntByType","useTableName","tableName","fieldPartsCopy","parentFieldName","isEmptyItem","liteCheck","isEmptyRuleGroupExt","isEmptyGroup","isEmptyRule","isEmptyRuleGroupExtPropertiesAndChildren","toObject","_config$operators$ope","_config$operators$ope2","isEmptyRuleProperties","isEmptyGroupChildren","_config$operators$ope3","_config$operators$ope4","_valueSrc$get","applyJsonLogic","data","JL","customJsonLogicOperations","CALL","JSX","mergeObjects","obj1","obj2","strlen","str","regexTest","pattern","flags","match","now","date_add","dim","add","toDate","toUpperCase","applyJsonLogicWithPath","message","callContextFn","_this","addRequiredJsonLogicOperations","configKeys","compileMetaFieldSettings","isArr","compileMetaWidget","sqlFormatValue","mongoFormatValue","elasticSearchFormatValue","compileMetaOperator","formatOp","mongoFormatOp","sqlFormatOp","ignore","elasticSearchQueryType","compileMetaWidgetForType","widgetProps","opProps","compileMeta","mainWidgetProps","formatConj","sqlFormatConj","renderBrackets","renderSeps","sqlFormatFunc","mongoFormatFunc","mui","invokeWith","canCompareFieldWithField","formatReverse","sqlFormatReverse","formatAggr","normalizeListValues","renderSwitchPrefix","renderItem","renderBeforeWidget","renderAfterWidget","renderBeforeActions","renderAfterActions","renderRuleError","compressConfig","baseConfig","__fieldNames","zipConfig","_clean","BasicFuncs","prototype","hasOwnProperty","_base","_configKeys","rootKey","clone","decompressConfig","useConfigCompress","unzipConfig","_mergeDeep","mixin","_resolveAndMergeDeep","resolved","_i2","_configKeys2","merge","compileConfig","__compliled","_compileConfigParts","defineProperty","enumerable","writable","subconfig","logs","newPath","targetObj","newVal","renderReactElement","compileJsonLogicReact","_newVal4","compileJsonLogic","def","jl","re","this","argNames","_ctx$components","_props","Cmp","components","O","_marked2","_regeneratorRuntime","iterateFields","allowArrayLike","Symbol","iterator","minLen","_arrayLikeToArray","test","_unsupportedIterableToArray","F","TypeError","normalCompletion","didErr","_e2","configId","canCompile","__configId","mergeWith","defaultSettings","mergeCustomizerNoArrays","typesConfig","_extendTypeConfig","_extendTypesConfig","_extendFieldsConfig","_extendFuncArgsConfig","momentLocale","typeConfig","typeWidgetConfig","typeWidgetOperators","excludeOperators","_extendFieldConfig","funcDef","tmpIsOptional","excludeOperatorsForField","_keysToPutInFieldSett","excludeOperatorsForType","shouldIncludeOperators","addOperators","_computeFieldName","computeFieldName","inGroup","fullPath","objValue","srcValue","_object","_source","_stack","_context","delegateYield","_iterateFields","stop","_marked","_context2","_callee","_config$settings2","fieldKey","_context3","t0","t1","_config$settings3","targetFields","_reduce","computedPath","computed","fConfig","_config$__fieldNames$","_config$__fieldNames$2","findStr","getFuncArgConfig","_config$settings4","getFieldPath","parentPath","_config$settings5","_config$settings6","_field$get","_field$split","_field$get2","getFieldPathParts","onlyKeys","_field$get3","_field$get4","widgetOpProps","fieldWidgetOpProps","fieldWidgetProps","valueFieldSettings","_widgetDefKeysToOmit","queryBuilderFormat","usedFields","rules","condition","_valueType","secondField","ruleQuery","jsonLogicFormat","ff","tmp","pdef","groupOperatorDefinition","resultQuery","formatLogic","var","revOperatorDefinition","oldUsedFields","funcParts","funcLastKey","formattedArgsArr","funcName","varName","jsonLogicVar","formatteOp","isReverseArgs","rangeOps","eqOps","opOpts","mongodbFormat","_mongodbFormat","parents","_not","_canWrapExpr","_formatFieldName","_value","sep","hasParentRuleGroup","realParentPath","groupFieldName","canHaveEmptyChildren","reversedConj","mongoConj","totalQuery","filterQuery","as","_f","useExpr","_formatFunc","_formatFunc2","_formatValue","_formatValue2","fvUseExpr","wrapExpr","_formatRightField","formatRightField","_formatRightField2","_formatFunc3","_formatFunc4","rightField","fieldPartsLabels","fieldFullLabel","mongoFunc","mongoArgsAsObject","argsCnt","lastArg","_formatValue3","_formatValue4","_formatValue5","_formatValue6","sqlFormat","_sqlFormat","sqlOp","valFrom","valTo","sqlFunc","argsStr","queryString","conjStr","aggrArgs","returnArgs","revOperatorDef","fop","labelForFormat","_operator","_fn","cutParentField","fieldLabel2","funcValue","formattedArgsWithNames","argName","buildEsRule","syntax","queryType","parameters","textField","determineField","script","elasticSearchScript","ES_7_SYNTAX","geoPointString","coordsNumberArray","top_left","lat","lon","bottom_right","buildEsGeoPoint","gte","lte","dateTime","lt","gt","buildEsRangeParameters","buildEsWildcardParameters","buildRegexpParameters","buildParameters","bool","must_not","ES_6_SYNTAX","elasticSearchFormat","_properties$get","_properties$get2","recursiveFxn","childrenArray","occurrence","combinator","determineOccurrence","result","resultFlat","buildEsGroup","simulateAsyncFetch","all","cPageSize","_asyncToGenerator","offset","pageSize","currentOffset","newOffset","hasMore","ceil","abrupt","_x","_x2","_x3","mergeListValues","toStart","hideNewValues","old","newFiltered","av","optionToListValue","_val$value","customItem","listValue","optionsToListValues","newSelectedListValues","_val$value2","newSelectedValues","_o$value","listValueToOption","fixListValuesGroupOrder","groupTitles","findLastIndex","findIndex","lv1","_lv1$groupTitle","_lv$groupTitle","nv","NOW","jsonLogicCustomOps","RELATIVE_DATETIME","method","_spel$methodName","matchRes","abs","plus","minus","day","week","month","year","LOWER","UPPER","LINEAR_REGRESSION","coef","bias","_a$children","mongoFormatOp1","mop","mc","_op","$field","mv","mongoFormatOp2","mops","_$not3","equal","opStr","_this$utils","not_equal","isNotOp","_this$utils2","less","_this$utils3","_len3","_key3","less_or_equal","_this$utils4","_len4","_key4","greater","_this$utils5","_len5","_key5","greater_or_equal","_this$utils6","_len6","_key6","like","_this$utils7","_len7","_key7","not_like","_this$utils8","_this2","_len8","_key8","starts_with","_this$utils9","_this3","_len9","_key9","ends_with","_this$utils10","_this4","_len10","_key10","between","_this$utils11","_len11","_key11","not_between","_this$utils12","_len12","_key12","is_empty","empty","_this$utils13","_this5","_len13","_key13","is_not_empty","_this$utils14","_this6","_len14","_key14","is_null","_this$utils15","_len15","_key15","is_not_null","_this$utils16","_len16","_key16","select_equals","_this$utils17","_len17","_key17","select_not_equals","_this$utils18","_len18","_key18","select_any_in","_this$utils19","_len19","_key19","select_not_any_in","_this$utils20","_len20","_key20","multiselect_contains","_this$utils21","_len21","_key21","multiselect_not_contains","multiselect_equals","_this7","_this$utils22","_len22","_key22","multiselect_not_equals","_this8","_this$utils23","_len23","_key23","proximity","val1","val2","prox","aVal1","aVal2","optionLabel","optionTextBefore","optionPlaceholder","minProximity","maxProximity","_this$utils24","_len24","_key24","_this$utils25","_len25","_key25","none","_this$utils26","_len26","_key26","wgtDef","isFloat","valLabel","_this9","valsLabels","_this10","isCallable","_args$fmt","_args$fmt$includes","_args$fmt2","_args$fmt2$toLowerCas","fmt","ISO_8601","_args$fmt3","_args$fmt3$toLowerCas","_args$fmt4","_args$fmt5","_args$fmt5$includes","rightFieldDef","case_value","partsExt","_this11","q","whereStr","aggrField","aggrFieldDef","leftFieldConfig","rightFieldConfig","_addMixins","mixins","doAdd","mixinFuncs","mixinWidgetRangeslider","treeselect","mixinWidgetTreeselect","treemultiselect","mixinWidgetTreemultiselect","rangeable__date","mixinRangeableWidget","mixName","mixinFunc","addMixin","singleWidget","treeData","_this12","_this13","removeMixins","AND","sqlConj","spelConjs","OR","ADD_GROUP","ADD_CASE_GROUP","REMOVE_GROUP","SET_CONJUNCTION","SET_NOT","ADD_RULE","REMOVE_RULE","SET_FIELD","SET_FIELD_SRC","SET_OPERATOR","SET_VALUE","SET_VALUE_SRC","SET_OPERATOR_OPTION","SET_LOCK","SET_TREE","MOVE_ITEM","PLACEMENT_AFTER","PLACEMENT_BEFORE","PLACEMENT_APPEND","PLACEMENT_PREPEND","SET_DRAG_PROGRESS","SET_DRAG_START","SET_DRAG_END","addNewGroup","state","groupUuid","canAddNewRule","origState","addItem","_addChildren1","id1","it1","currentNumber","maxNumber","maxNumberOfCases","maxNumberOfRules","maxNesting","isTernary","targetItem","caseGroup","take","childrenPath","targetChildren","targetChildrenSize","isLastDefaultCase","_Immutable$OrderedMap2","newChildrenWithLast","mergeIn","removeItem","emptyDrag","dragging","y","mousePos","dragStart","setTree","constants","addRule","ruleType","removeRule","addDefaultCaseGroup","addCaseGroup","addGroup","removeGroup","moveItem","fromPath","toPath","placement","setLock","lock","__isInternal","setFieldSrc","setOperator","setOperatorOption","BasicUtils","Export","Import","getMemoizedTree","setLastTree","emptyState","action","actionMeta","_affectedField","actionTypesToIgnore","mapValues","affectedField","getField","getActionMeta","validatedTree","parentOperator","parentOperatorConfig","hasGroupCountRule","isParentRuleGroup","isEmptyParentGroup","canLeaveEmpty","initialEmptyWhere","_setField","_newFieldConfig$opera","isInternalValueChange","currentProperties","wasRuleGroup","currentFieldSrc","currentOperatorOptions","isRuleGroupExt","isChangeToAnotherType","lastOp","strategy","groupProperties","updateIn","_getNewValueForFieldO2","newOperatorOptions","__isInternalValueChange","currentRule","currentFielType","_getNewValueForFieldO3","_setValue","calculatedValueType","calculateValueType","isLastEmpty","isLastError","_getNewValueForFieldO4","sourcePath","sourceChildren","targetPath","isSameParent","isSourceInsideTarget","isTargetInsideSource","sourceSubpathFromTarget","targetSubpathFromSource","newTargetChildren","newSourceChildren","_oldChildren","checkEmptyGroups","__lastAction","setDragProgress","setDragStart","setDragEnd","TreeActions","_Utils$ConfigUtils","ConfigUtils","createConfigMemo","configStore","getExtended","findConfig","savedConfig","_ret3","findExtended","extendAndStore","findOrExtend","pickConfig","getBasic","basicConfig","extConfig","_ret","truncateString","useWordBoundary","subString","lastIndexOf","immutableEqual","getReactRootNodeType","_reactRootContainer","getOwnPropertyNames","parentNode","isUsingLegacyReactDomRender","liteShouldComponentUpdate","self","nextProps","nextState","prevProps","prevState","should","chs","changed","pureShouldComponentUpdate","useOnPropsChanged","shouldComponentUpdate","componentWillReceiveProps","onPropsChanged","origShouldComponentUpdate","bindActionCreators","actionCreators","dispatch","actionCreator","Query","_Component","_inherits","_super","_classCallCheck","_assertThisInitialized","nextValue","oldValidatedTree","_updateActions","sanitizeTree","_createClass","actions","newBasicConfig","getBasicConfig","_this$props","renderBuilder","Component","propTypes","PropTypes","isRequired","ConnectedQuery","connect","context","displayName","DefaultUtils","QueryContainer","lastTree","prevTree","prevprevTree","prevValue","_createConfigMemo","getMemoizedConfig","originalTree","createValidationMemo","emptyTree","reducer","treeStoreReducer","store","createStore","QueryWrapper","pr","nextConfig","isConfigChanged","storeValue","getState","isTreeChanged","currentTree","isTreeTrulyChanged","get_children","Provider","TreeUtils","_isReorderingTree","GroupOrRule","_class","_PureComponent","Draggable","handleDraggerMouseDown","dom","wrapper","onDragStart","isDraggingTempo","isDraggingMe","otherProps","isTrueLocked","styles","cn","classNames","ref","PureComponent","Operator","getMeta","_config$types$selecte","selectedField","selectedFieldType","selectedOperator","operatorsOptions","pickBy","_opts","buildOptions","selectedOpts","selectedKeys","selectedPath","selectedLabel","ops","renderProps","selectedFieldSrc","Col","dummyFn","xmlns","viewBox","fill","d","WithConfirmFn","OperatorWrapper","selectedFieldParts","showOperator","showOperatorLabel","selectedFieldWidgetConfig","operatorInlineLabel","RuleUtils","Field","maxLabelsLength","isFieldSelected","currField","getFieldLabel","partsLabels","selectedFullLabel","selectedAltLabel","parentFieldPath","sourceFields","lookingForFieldType","fieldOpts","optGroup","countFieldsMatchesType","fullFieldPath","fullLabel","hideForSelect","hasItemsMatchesType","_Utils$RuleUtils","FuncSelect","needUpdateItems","getItems","isLHS","parentFuncs","canUseFuncForField","filteredFuncs","filterFuncs","_leftFieldConfig$widg","selectedFuncKey","isFuncSelected","leftFieldWidgetField","currFunc","getFuncLabel","leftFieldFullkey","targetDefinition","_filter","subpath","funcFullkey","_targetDefinition","canUse","allowSelfNesting","fullFuncPath","funcOpts","immValue","immValueError","widgetDefinition","widgetValueLabel","setValueHandler","widgetFactory","isConst","fixedImmValue","funcArgDummyOpDef","Widget","widgetType","oldRange","_onChangeValueSrc","renderWidget","iValues","aField","_widgets$delta","hasValueSources","widgetLabel","WidgetFactory","_widgets$delta2","setValueSrcHandler","valueSourcesOptions","ValueSources","sourceLabel","renderSep","sepText","sepLabel","renderWidgetDelta","simpleField","fieldFunc","fieldArg","isForRuleGroup","isCaseValue","iValueSrcs","isSpecialRangeForSrcField","isTrueSpecialRange","range","_widgetDefinition","_this$meta","_Utils$FuncUtils","FuncUtils","FuncWidget","_createSuper","argDefinition","funcDefinition","renderFuncSelect","selectProps","renderArgLabel","showPrefix","renderArgLabelSep","renderArgVal","_this$props2","defaultValueSource","ArgWidget","renderArgSep","argIndex","renderBracketBefore","renderBracketAfter","renderFuncArgs","_Component2","_super2","_delta","_widgetType","_this2$props","_this2$props2","FieldWrapper","classname","customFieldSelectProps","fieldSourcesOptions","_this$props3","canSelectFieldSource","OperatorOptions","operatorDefinitions","_operatorDefinitions$","optionsFactory","basicOptionsProps","optionsCmp","setOption","Rule","removeSelf","reordableNodesCnt","selectedFieldConfig","isSelectedGroup","isFieldAndOpSelected","selectedOperatorConfig","selectedOperatorHasOptions","hideOperator","showDragIcon","showWidget","showOperatorOptions","confirmOptions","doRemove","isEmptyCurrentRule","onCancel","ruleData","_buildWidgetProps","immutableFieldsMode","immutableOpsMode","_this$props4","immutableValuesMode","_this$props5","oneValueError","onMouseDown","_this$props6","immutableGroupsMode","Btn","_this$props7","showLock","_this$meta2","_this$props8","canShrinkValue","BtnGrp","renderOperatorOptions","body","renderError","drag","renderDrag","renderLock","del","renderDel","totalRulesCnt","parentReordableNodesCnt","ConnectedRuleContainer","RuleContainer","isInDraggingTempo","hasError","createRuleContainer","Group","itemType","ConnectedGroupContainer","GroupContainer","_selectedConjunction","selectedConjunction","_getConjunctionOptions","oldConjunction","currentNesting","allowFurtherNesting","createGroupContainer","groupActionsPositionList","topLeft","topCenter","topRight","bottomLeft","bottomCenter","bottomRight","GroupActions","canAddGroup","canAddRule","canDeleteGroup","groupActionsPosition","position","setLockSwitch","addRuleBtn","addGroupBtn","delGroupBtn","BasicGroup","childrenClassName","BeforeActions","AfterActions","isEmptyCurrentGroup","renderHeaderWrapper","renderChildrenWrapper","renderFooterWrapper","showConjs","isOneChild","renderChildren","isGroupTopPosition","isNoChildren","renderHeader","renderActions","Item","extraPropsForItem","reordableNodesCntForItem","totalRulesCntForItem","_item","RuleGroupActions","RuleGroup","_BasicGroup","_get","_getPrototypeOf","RuleGroupExtActions","RuleGroupExt","renderGroupField","selectedFieldPartsLabels","SwitchGroupActions","canAddDefault","addCaseGroupBtn","addDefaultCaseGroupBtn","_Utils$TreeUtils","SwitchGroup","hasDefaultCase","_this$props$children","_this$props$children2","totalCasesCnt","_this$props$children3","casesToReorder","_this$props$children4","_this$props$config$se","canLeaveEmptyCase","canRegroupCases","CaseGroup","renderHeaderLeft","renderHeaderCenter","renderCondition","getProperties","_props$properties","typeMap","rule_group","rule_group_ext","switch_group","case_group","_props$properties2","itemComponent","_Utils$DefaultUtils","Builder","_updPath","rootType","CanMoveFn","ConnectedSortableContainer","SortableContainer","_getEventTarget","__mocked_window","document","treeEl","closest","_isUsingLegacyReactDomRender","classList","groupPadding","treeElContainer","scrollTop","_getScrollParent","tmpAllGroups","_getDraggableNodeEl","_getPlaceholderNodeEl","querySelectorAll","anyGroup","getComputedStyle","getPropertyValue","offsetLeft","offsetTop","offsetWidth","offsetHeight","itemInfo","clientX","clientY","eventTarget","addEventListener","onDrag","onDragEnd","doHandleDrag","startDragging","startMousePos","__mock_dom","dragEl","plhEl","plX","getBoundingClientRect","scrollX","plY","scrollY","startX","startY","startClientX","startClientY","startScrollTop","pos","handleDrag","preventDefault","remove","_cacheEls","removeEventListener","_prevProps","_prevState","oldPlX","oldPlY","indexId","ignoreCache","contains","querySelector","els","getElementsByClassName","overflowY","scrollHeight","_isScrollable","dragInfo","canMoveFn","dragRect","plhRect","hovRect","treeRect","moveInfo","dragId","dragDirs","hrz","vrt","hovCNodeEl","trgCoord","__mocked_hov_container","hovNodeEl","elementFromPoint","_hovNodeEl$firstChild","rootGroupContainer","firstChild","hovNodeId","getAttribute","hovEl","doAppend","doPrepend","hovHeight","hovII","trgRect","trgEl","trgII","altII","hovInnerEl","hovEl2","hovRect2","hovHeight2","isSamePos","dragLeftOffset","dragLev","round","availMoves","altMoves","isToRoot","isToCase","prevCaseId","nextCaseId","prevCase","nextCase","addCaseII","am","toII","fromCaseII","toCaseII","bestMode","filteredMoves","trg","isInside","toParentII","canMove","levs","curLev","allLevs","closestDragLev","move","fromII","newDepthLev","isBeforeAfter","isPend","isLev1","isParentChange","isStructChange","isForbiddenStructChange","isLockedChange","isLastFromCase","newRulesInTargetCase","createSortableContainer","ValueField","needUpdateMeta","filteredFields","filterFields","customPlaceholder","leftFieldWidgetFieldProps","rightFieldKey","rightFieldFullkey","hideForCompare","customRadioYesProps","radioYes","customRadioNoProps","radioNo","onRadioChange","dtValue","opt","getMultiSelectValues","fontWeight","htmlFor","typeToLabel","btnLabel","confirm","VanillaProvider","Proximity","handleChange","defaultProximity","selectedProximity","proxValues","defaultProps","CoreConfig","ProximityOperator","VanillaTextWidget","VanillaTextAreaWidget","VanillaNumberWidget","VanillaSliderWidget","VanillaSelectWidget","VanillaMultiSelectWidget","VanillaDateWidget","VanillaTimeWidget","VanillaDateTimeWidget","VanillaBooleanWidget","ValueFieldWidget","VanillaFieldSelect","VanillaConjs","VanillaSwitch","VanillaButton","VanillaIcon","VanillaButtonGroup","VanillaValueSources","_ref25","_ref26","vanillaConfirm","Widgets","CustomOperators","C","P","_Utils$Autocomplete","_Utils$ListUtils","useLoadMore","useAsyncSearch","forceAsyncSearch","selectedAsyncListValues","staticListValues","knownSpecialValues","loadMoreTitle","loadingMoreTitle","setOpen","_React$useState3","_React$useState4","asyncFetchMeta","setAsyncFetchMeta","_React$useState5","_React$useState6","loadingCnt","setLoadingCnt","_React$useState7","_React$useState8","isLoadingMore","setIsLoadingMore","_React$useState9","_React$useState10","setInputValue","_React$useState11","_React$useState12","setAsyncListValues","asyncFectchCnt","componentIsMounted","isSelectedLoadMore","nSelectedAsyncListValues","listValuesToDisplay","canInitialLoad","canLoadMore","canShowLoadMore","fetchListValues","isLoadMore","newAsyncFetchCnt","newMeta","nValues","assumeHasMore","realNewMeta","_args","sent","loadListValues","_callee2","_args2","loadListValuesDebounced","debounce","_callee3","_callee4","isLoadMoreClick","_context4","_callee5","_option2","isClearingAll","isClearingInput","_option$value","_option","isAddingCustomOptionFromSearch","_optionsToListValues","_optionsToListValues2","_optionToListValue","_optionToListValue2","lvs","_context5","_x4","_callee6","newInputValue","eventType","shouldIgnore","_context6","_x5","_x6","_x7","onDropdownVisibleChange","isSpecialValue","valueOrOption","_valueOrOption$value","ReactUtils","webpackContext","req","webpackContextResolve","__webpack_require__","code","module","exports"],"sourceRoot":""}