{"version":3,"file":"15.bundle.js","mappings":"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AW,CACT,QACA,YACA,OACA,WACA,cACA,YACA,WACA,eACA,UACA,eAEF++B,YAAa,CAAC,EACdC,QAAS,CAAC,GAEZx6C,MAAO,CACLwb,UAAW,CAET,QACA,YACA,gBAKRnT,OAAQ,CACNmyB,gBAAiB,QACjBzc,WAAY,SACZhW,QAAS,CACPM,OAAQ,CACNmT,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,gBAGJ3e,OAAQ,CACN2e,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBAGA,UACA,kBAKRvS,KAAM,CACJuxB,gBAAiB,QACjBzyB,QAAS,CACPkB,KAAM,CACJuS,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKRrS,KAAM,CACJqxB,gBAAiB,QACjBzyB,QAAS,CACPoB,KAAM,CACJqS,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKRnS,SAAU,CACRmxB,gBAAiB,QACjBzyB,QAAS,CACPsB,SAAU,CACRmS,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKR7S,OAAQ,CACNoV,WAAY,SACZyc,gBAAiB,gBACjBzyB,QAAS,CACPY,OAAQ,CACN6S,UAAW,CACT,gBACA,oBAGA,UACA,gBAGJjT,YAAa,CACXiT,UAAW,CACT,gBACA,oBAGA,UACA,kBAKRjT,YAAa,CACXiyB,gBAAiB,qBACjBzyB,QAAS,CACPQ,YAAa,CACXiT,UAAW,CACT,uBACA,2BACA,qBACA,yBAGA,UACA,kBAKRzS,QAAS,CACPyxB,gBAAiB,QACjBzyB,QAAS,CACPgB,QAAS,CACPyS,UAAW,CACT,QACA,YACA,UACA,eAEF++B,YAAa,CAGX,GAGJv6C,MAAO,CACLwb,UAAW,CACT,QACA,gBAKR,SAAU,CACRgf,gBAAiB,OACjBzc,WAAY,SACZhW,QAAS,CACPM,OAAQ,CACNkyC,YAAa,CACXp+C,IAAK,GAEPqf,UAAW,CAET,OACA,MACA,OAGA,QACA,YACA,OACA,gBACA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","sources":["webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialSelect.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialFieldAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialIcon.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialButton.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialValueSources.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/index.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialText.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialTextArea.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialDate.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialDateTime.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialTime.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialNumber.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialSlider.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialRange.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialBoolean.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialConjs.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialSwitch.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialConfirm.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../core/modules/utils/uuid.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/listValues.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/treeUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/export.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/spel.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/defaultUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryString.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/validation/constains.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/validation/translations.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/validation.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/funcUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/ruleUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configSerialize.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/default.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configExtend.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryBuilder.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/mongoDb.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/sql.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/elasticSearch.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/autocomplete.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/funcs.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/ctx.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/group.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/rule.js","webpack://@react-awesome-query-builder/examples/../core/modules/index.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/context.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/drag.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/index.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/configUtils.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/validation.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/reactUtils.js","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Query.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/QueryContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/RuleContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/SortableContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/Draggable.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Operator.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/utils.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Field.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/WidgetFactory.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Widget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncWidget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FieldWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorOptions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Rule.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/GroupContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/GroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Group.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExtActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExt.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/CaseGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Item.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Builder.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/ValueField.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaBoolean.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaText.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTextArea.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDate.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDateTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaNumber.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSlider.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaConjs.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButton.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaIcon.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaValueSources.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaSwitch.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/vanillaConfirm.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/operators/Proximity.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/hooks/useListValuesAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/index.js","webpack://@react-awesome-query-builder/examples/../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ sync [/\\\\](es-us(\\.js)"],"sourcesContent":["import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = () =>\n    mapListValues(listValues, ({title, value}) => {\n      return <MenuItem key={value} value={value}>{title}</MenuItem>;\n    });\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  const renderValue = (selectedValue) => {\n    if (!readonly && selectedValue == null)\n      return placeholder;\n    return getListValueTitle(selectedValue);\n  };\n\n  const getListValueTitle = (selectedValue) => \n    mapListValues(listValues, ({title, value}) => \n      (value === selectedValue ? title : null)\n    )\n      .filter(v => v !== null)\n      .shift();\n  \n  const hasValue = value != null;\n\n  return (\n    <FormControl>\n      <Select\n        autoWidth\n        displayEmpty\n        label={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : \"\"}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        {...omit(customProps, [\"showSearch\", \"input\"])}\n      >\n        {renderOptions()}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = (selectedValues) => \n    mapListValues(listValues, ({title, value}) => {\n      return (\n        <MenuItem key={value} value={value}>\n          <Checkbox checked={selectedValues.indexOf(value) > -1} />\n          <ListItemText primary={title} />\n        </MenuItem>\n      );\n    });\n\n  const renderValue = (selectedValues) => {\n    if (!readonly && !selectedValues.length)\n      return placeholder;\n    const selectedTitles = mapListValues(listValues, ({title, value}) => (\n      selectedValues.indexOf(value) > -1 ? title : null\n    )).filter(v => v !== null);\n    return selectedTitles.join(\", \");\n  };\n\n  const hasValue = value != null && value.length > 0;\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  return (\n    <FormControl>\n      <Select multiple\n        autoWidth\n        displayEmpty\n        label={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : []}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n      >\n        {renderOptions(hasValue ? value : [])}\n      </Select>\n    </FormControl>\n  );\n};\n","import React, {useCallback} from \"react\";\nimport omit from \"lodash/omit\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Autocomplete, { createFilterOptions } from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport { Hooks, Utils } from \"@react-awesome-query-builder/ui\";\nconst { useListValuesAutocomplete } = Hooks;\n\nconst nonCheckedIcon = <CheckBoxOutlineBlankIcon fontSize=\"small\" style={{ marginRight: 10, marginTop: 4 }} />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" style={{ marginRight: 10, marginTop: 4 }} />;\nconst emptyArray = [];\n\n\nexport default (props) => {\n  const {\n    allowCustomValues, multiple, disableClearable,\n    value: selectedValue, customProps, readonly, config, filterOptionsConfig, errorText\n  } = props;\n  const stringifyOption = useCallback((option) => {\n    const keysForFilter = config.settings.listKeysForSearch;\n    const valueForFilter = keysForFilter\n      .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n      .join(\"\\0\");\n    return valueForFilter;\n  }, [config]);\n  const defaultFilterOptionsConfig = {\n    stringify: stringifyOption\n  };\n  const filterOptionsFn = createFilterOptions(filterOptionsConfig || defaultFilterOptionsConfig);\n\n  // hook\n  const {\n    open,\n    onOpen,\n    onClose,\n    onChange,\n    onInputChange,\n    inputValue,\n    options,\n    isInitialLoading,\n    isLoading,\n    aPlaceholder,\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    selectedListValue,\n  } = useListValuesAutocomplete(props, {\n    debounceTimeout: 100,\n    multiple,\n    uif: \"mui\"\n  });\n\n  // setings\n  const {defaultSelectWidth, defaultSearchWidth} = config.settings;\n  const {width, ...rest} = customProps || {};\n  let customInputProps = rest.input || {};\n  const inputWidth = customInputProps.width || defaultSearchWidth;\n  customInputProps = omit(customInputProps, [\"width\"]);\n  const customAutocompleteProps = omit(rest, [\"showSearch\", \"showCheckboxes\"]);\n\n  const fullWidth = true;\n  const minWidth = width || defaultSelectWidth;\n  const style = {\n    width: (multiple ? undefined : minWidth),\n    minWidth: minWidth\n  };\n  const placeholder = !readonly ? aPlaceholder : \"\";\n  const hasValue = selectedValue != null;\n  // should be simple value to prevent re-render!s\n  const value = hasValue ? selectedValue : (multiple ? emptyArray : null);\n\n  const filterOptions = (options, params) => {\n    const filtered = filterOptionsFn(options, params);\n    const extended = extendOptions(filtered);\n    return extended;\n  };\n\n  const groupBy = (option) => option?.groupTitle;\n\n  // styles\n  const useStyles = makeStyles((theme) => ({\n    // fix too small width\n    input: {\n      minWidth: inputWidth + \" !important\",\n    }\n  }));\n\n  const useStylesChip = makeStyles((theme) => ({\n    // fix height\n    root: {\n      height: \"auto\"\n    },\n    label: {\n      marginTop: \"3px\",\n      marginBottom: \"3px\",\n    }\n  }));\n\n  const classesChip = useStylesChip();\n  const classes = useStyles();\n\n  // render\n  const renderInput = (params) => {\n    // parity with Antd\n    const shouldRenderSelected = !multiple && !open;\n    const selectedTitle = selectedListValue?.title ?? \"\";\n    const shouldHide = multiple && !open;\n    const value = shouldRenderSelected ? selectedTitle : (shouldHide ? \"\" : inputValue ?? \"\");\n    return (\n      <TextField \n        {...params}\n        inputProps={{\n          ...params.inputProps,\n          value,\n        }}\n        InputProps={{\n          ...params.InputProps,\n          readOnly: readonly,\n          endAdornment: (\n            <React.Fragment>\n              {isLoading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n              {params.InputProps.endAdornment}\n            </React.Fragment>\n          ),\n        }}\n        disabled={readonly}\n        placeholder={placeholder}\n        error={!!errorText}\n        //onChange={onInputChange}\n        {...customInputProps}\n      />\n    );\n  };\n\n  const renderTags = (value, getTagProps) => value.map((option, index) => {\n    const className = getOptionIsCustom(option) ? \"customSelectOption\" : undefined;\n    const titleSpan = (\n      <span className={className}>\n        {getOptionLabel(option)}\n      </span>\n    );\n    return <Chip\n      key={option.value}\n      classes={classesChip}\n      label={titleSpan}\n      size={\"small\"}\n      //variant={getOptionIsCustom(option) ? \"outlined\" : undefined}\n      {...getTagProps({ index })}\n    />;\n  });\n\n  const renderOption = (option, { selected }) => {\n    const { title, renderTitle, value, specialValue, isHidden } = option;\n    const isSelected = selected;\n    //const isSelected = multiple ? (selectedValue || []).includes(value) : selectedValue == value;\n    const className = getOptionIsCustom(option) ? \"customSelectOption\" : undefined;\n    const titleSpan = (\n      <span className={className}>\n        {renderTitle || title}\n      </span>\n    );\n    if (isHidden)\n      return null;\n    if (multiple) {\n      if (specialValue)\n        return (\n          <Box>\n            {renderTitle || title}\n          </Box>\n        );\n      else\n        return (\n          <Box>\n            {selected ? checkedIcon : nonCheckedIcon}\n            {titleSpan}\n          </Box>\n        );\n    } else {\n      if (specialValue)\n        return <React.Fragment>{renderTitle || title}</React.Fragment>;\n      else\n        return <React.Fragment>{titleSpan}</React.Fragment>;\n    }\n  };\n\n  return (\n    <FormControl fullWidth={fullWidth}>\n      <Autocomplete\n        disableClearable={disableClearable}\n        disableCloseOnSelect={multiple}\n        fullWidth={fullWidth}\n        multiple={multiple}\n        style={style}\n        classes={classes}\n        freeSolo={allowCustomValues}\n        loading={isInitialLoading}\n        open={open}\n        onOpen={onOpen}\n        onClose={onClose}\n        inputValue={inputValue}\n        onInputChange={onInputChange}\n        label={placeholder}\n        onChange={onChange}\n        value={value}\n        getOptionSelected={getOptionSelected}\n        disabled={readonly}\n        readOnly={readonly}\n        options={options}\n        groupBy={groupBy}\n        getOptionLabel={getOptionLabel}\n        getOptionDisabled={getOptionDisabled}\n        renderInput={renderInput}\n        renderTags={renderTags}\n        renderOption={renderOption}\n        filterOptions={filterOptions}\n        {...customAutocompleteProps}\n      ></Autocomplete>\n    </FormControl>\n  );\n};\n","import React, {useCallback} from \"react\";\nimport MaterialAutocomplete from \"../value/MaterialAutocomplete\";\n\n// see type FieldItemSearchableKeys\nconst mapFieldItemToOptionKeys = {\n  key: \"_value2\",\n  path: \"value\",\n  label: \"title\",\n  altLabel: \"_altLabel\",\n  tooltip: \"tooltip\",\n  grouplabel: \"groupTitle\",\n};\n\nconst itemsToListValues = (items, level = 0) => (\n  items.map(item => {\n    const {items, path, key, label, altLabel, disabled, grouplabel, matchesType, tooltip} = item;\n    const prefix = \"\\u00A0\\u00A0\".repeat(level);\n    if (items) {\n      return itemsToListValues(items, level+1);\n    } else {\n      return {\n        title: label,\n        renderTitle: matchesType ? <b>{prefix+label}</b> : prefix+label,\n        value: path,\n        disabled,\n        groupTitle: level > 0 ? prefix+grouplabel : null,\n        tooltip: tooltip,\n        _value2: key,\n        _altLabel: altLabel,\n      };\n    }\n  }).flat(Infinity)\n);\n\nconst fieldAdapter = ({items, selectedKey, setField, isValueField, ...rest}, config) => {\n  const listValues = itemsToListValues(items);\n  const value = selectedKey;\n  const setValue = (value, _asyncValues) => {\n    if (!value && !isValueField) return undefined;\n    return setField(value);\n  };\n\n  const filterOptionsConfig = {\n    stringify: useCallback((option) => {\n      const keysForFilter = config.settings.fieldItemKeysForSearch\n        .map(k => mapFieldItemToOptionKeys[k]);\n      const valueForFilter = keysForFilter\n        .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n        .join(\"\\0\");\n      return valueForFilter;\n    }, [config])\n  };\n\n  return {\n    ...rest,\n    listValues,\n    setValue,\n    filterOptionsConfig,\n    allowCustomValues: false,\n    multiple: false,\n    disableClearable: !isValueField,\n    value,\n    isFieldAutocomplete: true,\n  };\n};\n\nexport default (props) => {\n  return <MaterialAutocomplete  {...fieldAdapter(props, props.config)} />;\n};\n","import React from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DragHandle from \"@material-ui/icons/DragHandle\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { DragIcon } = Utils;\n\nconst typeToIcon = {\n  \"delGroup\": <DeleteIcon />,\n  \"delRuleGroup\": <DeleteIcon />,\n  \"delRule\": <DeleteIcon />,\n  \"addRuleGroup\": <AddIcon />,\n  \"addRuleGroupExt\": <AddIcon />,\n  \"addRule\": <AddIcon />,\n  \"addGroup\": <AddIcon />,\n  \"drag\": <DragHandle />,\n};\n\nconst typeToColor = {\n  // \"addRule\": \"primary\",\n  // \"addGroup\": \"primary\",\n  // \"delGroup\": \"secondary\",\n  // \"delRuleGroup\": \"secondary\",\n  // \"delRule\": \"secondary\",\n  \"drag\": \"inherit\",\n};\n\nexport default ({type, readonly}) => {\n  let icon = typeToIcon[type] || null;\n  if (!icon && type === \"drag\") {\n    return <DragIcon />;\n  }\n\n  if (type === \"drag\") {\n    return (\n      <Icon\n        size=\"small\" \n        disabled={readonly} \n        color={typeToColor[type]}\n      >{icon}</Icon>\n    );\n  } else {\n    return icon;\n  }\n};\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst hideLabelsFor = {\n  \"addRuleGroup\": true,\n  \"addRuleGroupExt\": true,\n  \"delGroup\": true,\n  \"delRuleGroup\": true,\n  \"delRule\": true,\n};\n\nconst typeToColor = {\n  \"addRule\": \"primary\",\n  \"addGroup\": \"primary\",\n  \"delGroup\": \"secondary\",\n  \"delRuleGroup\": \"secondary\",\n  \"delRule\": \"secondary\",\n};\n\nexport default (props) => {\n  const {type, label, onClick, readonly, renderIcon} = props;\n  const iconProps = {\n    type,\n    readonly,\n  };\n  const icon = renderIcon?.(iconProps);\n\n  if (!label || hideLabelsFor[type]) {\n    return (\n      <IconButton\n        size=\"small\" \n        disabled={readonly} \n        onClick={onClick} \n        color={typeToColor[type]}\n      >{icon}</IconButton>\n    );\n  } else {\n    return (\n      <Button\n        size=\"small\" \n        disabled={readonly} \n        onClick={onClick} \n        color={typeToColor[type]} \n        startIcon={icon}\n      >{label}</Button>\n    );\n  }\n};\n","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ExpandMoreSharpIcon from \"@material-ui/icons/ExpandMoreSharp\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(1),\n  },\n}));\n\nexport default ({ valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const classes = useStyles();\n\n\n  const handleOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const toggleOpenClose = (event) => {\n    anchorEl ? handleClose() : handleOpen(event);\n  };\n\n  const handleChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValueSrc(e.target.value);\n    handleClose();\n  };\n\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => (\n      <FormControlLabel \n        key={srcKey} \n        value={srcKey} \n        checked={valueSrc == srcKey || !valueSrc && srcKey == \"value\"} \n        control={<Radio />} \n        label={info.label}\n      />\n    ))\n  );\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <div>\n      <IconButton size=\"small\" onClick={toggleOpenClose}>\n        <ExpandMoreSharpIcon />\n      </IconButton>\n    \n      <Popover    \n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n        onClose={handleClose}\n        classes={{\n          paper: classes.paper,\n        }}\n        disablePortal\n      >\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">{title}</FormLabel>\n          <RadioGroup value={valueSrc || \"value\"} onChange={handleChange}>\n            {renderOptions(valueSources)}\n          </RadioGroup>\n        </FormControl>\n      </Popover>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { ThemeProvider, createTheme } from \"@material-ui/core/styles\";\nimport { ConfirmProvider, useConfirm } from \"material-ui-confirm\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\n\n\n// value widgets\nimport MaterialTextWidget from \"./value/MaterialText\";\nimport MaterialTextAreaWidget from \"./value/MaterialTextArea\";\nimport MaterialDateWidget from \"./value/MaterialDate\";\nimport MaterialDateTimeWidget from \"./value/MaterialDateTime\";\nimport MaterialTimeWidget from \"./value/MaterialTime\";\nimport MaterialSelectWidget from \"./value/MaterialSelect\";\nimport MaterialNumberWidget from \"./value/MaterialNumber\";\nimport MaterialSliderWidget from \"./value/MaterialSlider\";\nimport MaterialRangeWidget from \"./value/MaterialRange\";\nimport MaterialBooleanWidget from \"./value/MaterialBoolean\";\nimport MaterialMultiSelectWidget from \"./value/MaterialMultiSelect\";\nimport MaterialAutocompleteWidget from \"./value/MaterialAutocomplete\";\n\n// field select widgets\nimport MaterialFieldSelect from \"./core/MaterialFieldSelect\";\nimport MaterialFieldAutocomplete from \"./core/MaterialFieldAutocomplete\";\n\n// core components\nimport MaterialIcon from \"./core/MaterialIcon\";\nimport MaterialButton from \"./core/MaterialButton\";\nimport MaterialButtonGroup from \"./core/MaterialButtonGroup\";\nimport MaterialConjs from \"./core/MaterialConjs\";\nimport MaterialSwitch from \"./core/MaterialSwitch\";\nimport MaterialValueSources from \"./core/MaterialValueSources\";\nimport MaterialConfirm from \"./core/MaterialConfirm\";\n\n// provider\nconst MaterialProvider = ({config, children}) => {\n  const settingsTheme = config.settings.theme || {};\n  const settingsLocale = config.settings.locale || {};\n  const themeConfig = settingsTheme.material;\n  const locale = settingsLocale.material;\n  const useTheme = themeConfig || locale;\n  const theme = useTheme ? createTheme(themeConfig, locale) : null;\n\n  const base = (<div className=\"mui\">{children}</div>);\n  const withProviders = (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      <ConfirmProvider>\n        {base}\n      </ConfirmProvider>\n    </MuiPickersUtilsProvider>\n  );\n  const withTheme = theme ? (\n    <ThemeProvider theme={theme}>\n      {withProviders}\n    </ThemeProvider>\n  ) : withProviders;\n\n  return withTheme;\n};\n\n\nexport default {\n  MaterialTextWidget,\n  MaterialTextAreaWidget,\n  MaterialDateWidget,\n  MaterialDateTimeWidget,\n  MaterialTimeWidget,\n  MaterialSelectWidget,\n  MaterialNumberWidget,\n  MaterialSliderWidget,\n  MaterialRangeWidget,\n  MaterialBooleanWidget,\n  MaterialMultiSelectWidget,\n  MaterialAutocompleteWidget,\n\n  MaterialFieldSelect,\n  MaterialFieldAutocomplete,\n\n  MaterialIcon,\n  MaterialButton,\n  MaterialButtonGroup,\n  MaterialConjs,\n  MaterialSwitch,\n  MaterialValueSources,\n  MaterialConfirm,\n  MaterialUseConfirm: useConfirm,\n\n  MaterialProvider,\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength} = props;\n\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n\n  const textValue = value || \"\";\n\n  return (\n    <FormControl>\n      <TextField \n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength, maxRows, fullWidth} = props;\n  const {defaultMaxRows} = config.settings;\n\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  \n  const textValue = value || \"\";\n\n  return (\n    <FormControl fullWidth={fullWidth}>\n      <TextField \n        fullWidth={fullWidth}\n        maxRows={maxRows || defaultMaxRows}\n        multiline={true}\n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport { KeyboardDatePicker, DatePicker } from \"@material-ui/pickers\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, readonly, customProps, dateFormat, valueFormat, placeholder} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const useKeyboard = window?.matchMedia\n    ? window.matchMedia?.(\"(pointer:fine), (pointer:none)\").matches\n    : props.useKeyboard;\n  const Picker = useKeyboard ? KeyboardDatePicker : DatePicker;\n\n  return (\n    <FormControl>\n      <Picker\n        readOnly={readonly}\n        disabled={readonly}\n        placeholder={!readonly ? placeholder : \"\"}\n        format={dateFormat}\n        value={value || null}\n        onChange={handleChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};","import React from \"react\";\nimport { DateTimePicker, KeyboardDateTimePicker } from \"@material-ui/pickers\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, dateFormat, timeFormat, valueFormat, customProps} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const useKeyboard = window?.matchMedia\n    ? window.matchMedia?.(\"(pointer:fine), (pointer:none)\").matches\n    : props.useKeyboard;\n  const Picker = useKeyboard ? KeyboardDateTimePicker : DateTimePicker;\n  const dateTimeFormat = dateFormat + \" \" + timeFormat;\n  \n  return (\n    <FormControl>\n      <Picker\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        placeholder={!readonly ? placeholder : \"\"}\n        format={dateTimeFormat}\n        value={value || null}\n        onChange={handleChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport { TimePicker, KeyboardTimePicker } from \"@material-ui/pickers\";\nimport moment from \"moment\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, timeFormat, valueFormat, customProps} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const useKeyboard = window?.matchMedia\n    ? window.matchMedia?.(\"(pointer:fine), (pointer:none)\").matches\n    : props.useKeyboard;\n  const Picker = useKeyboard ? KeyboardTimePicker : TimePicker;\n  const hasSeconds = timeFormat.indexOf(\":ss\") != -1;\n  const timeValue = value ? moment(value, timeFormat) : null;\n\n  return (\n    <FormControl>\n      <Picker\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        placeholder={!readonly ? placeholder : \"\"}\n        format={timeFormat}\n        value={timeValue || null}\n        onChange={handleChange}\n        views={hasSeconds ? [\"hours\", \"minutes\", \"seconds\"] : [\"hours\", \"minutes\"]}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps} = props;\n  \n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n\n  const numberValue = value == undefined ? \"\" : value;\n  \n  return (\n    <FormControl>\n      <TextField \n        type=\"number\"\n        value={numberValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          min: min,\n          max: max,\n          step: step,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {config, placeholder, customProps, value, setValue, min, max, step, marks, readonly} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  const handleSliderChange = (_e, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleInputChange = (e) => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n\n  const handleInputBlur = () => {\n    // TIP: Fix if typed value out of range in input\n    if (value < min) {\n      setValue(min);\n    } else if (value > max) {\n      setValue(max);\n    }\n  };\n\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n  \n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0\n  const inputValue = typeof value === \"number\" ? value : \"\";\n  const sliderValue = typeof value === \"number\" ? value : null;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = marks ? Object.keys(marks).map(v => ({value: v, label: marks[v]})) : false;\n\n\n  const InputCmp = (\n    <TextField \n      type=\"number\"\n      value={inputValue}\n      placeholder={placeholder}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChange}\n      onBlur={handleInputBlur}\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    alignItems: \"center\",\n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {InputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {config, placeholders, customProps, value, setValue, min, max, step, marks, readonly, textSeparators} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  useEffect(() => {\n    const [valueFrom, valueTo] = props.value || [undefined, undefined];\n    if (props.value && (valueFrom == undefined || valueTo == undefined)) {\n      // happens if we changed op from '==' to 'between'\n      // (I know, timeout is dirty hack..)\n      // setTimeout(() => {\n      //   const oneValue = valueFrom || valueTo;\n      //   const value = [oneValue, oneValue];\n      //   setValue(value);\n      // }, 1);\n    }\n  }, []);\n\n  const handleSliderChange = (_e, newValues) => {\n    setValue(newValues);\n  };\n\n  const handleInputChangeFrom = (e) => {\n    // TIP: need to use props.value instead of value\n    let valueFrom = e.target.value;\n    if (valueFrom === \"\" || valueFrom == null)\n      valueFrom = undefined;\n    else\n      valueFrom = Number(valueFrom);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[0] = valueFrom;\n    setValue(value);\n  };\n\n  const handleInputChangeTo = (e) => {\n    let valueTo = e.target.value;\n    if (valueTo === \"\" || valueTo == null)\n      valueTo = undefined;\n    else\n      valueTo = Number(valueTo);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[1] = valueTo;\n    setValue(value);\n  };\n\n  const handleInputBlur = () => {\n    // TIP: Fix if typed value out of range in inputs\n    if (!value) return;\n    if (value[0] < min) {\n      setValue([min, value[1]]);\n    } else if (value[1] > max) {\n      setValue([value[0], max]);\n    }\n  };\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = marks ? Object.keys(marks).map(v => ({value: v, label: marks[v]})) : false;\n\n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0, but null will cause problems with range mode\n  let sliderValue = value ? [...value] : [undefined, undefined];\n  let [valueFrom, valueTo] = sliderValue;\n  if (valueFrom == undefined) {\n    valueFrom = \"\";\n    sliderValue[0] = 0;\n  }\n  if (valueTo == undefined) {\n    valueTo = \"\";\n    sliderValue[1] = 0;\n  }\n  \n\n  const FromInputCmp = (\n    <TextField \n      type=\"number\"\n      value={valueFrom}\n      placeholder={placeholders[0]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeFrom}\n      onBlur={handleInputBlur}\n      {...customInputProps}\n    />\n  );\n\n  const ToInputCmp = (\n    <TextField \n      type=\"number\"\n      value={valueTo}\n      placeholder={placeholders[1]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeTo}\n      onBlur={handleInputBlur}\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {FromInputCmp}\n        </div>\n        <div className={\"widget--sep\"}>\n          <span>{ textSeparators[1] }</span>\n        </div>\n        <div style={stylesInputWrapper}>\n          {ToInputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default (props) => {\n  const { customProps, value, setValue, labelYes, labelNo, readonly } = props;\n\n  const onChange = () => {\n    setValue(!value);\n  };\n  \n  return (\n    <FormControl>\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\n          <Grid item component=\"span\">{labelNo}</Grid>\n          <Grid item component=\"span\">\n            <Switch\n              checked={!!value}\n              onChange={onChange}\n              disabled={readonly}\n              {...customProps}\n            />\n          </Grid>\n          <Grid item component=\"span\">{labelYes}</Grid>\n        </Grid>\n      </Typography>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default ({items, setField, selectedKey, readonly, placeholder, errorText}) => {\n  const renderOptions = (fields, level = 0) => (\n    fields.map(field => {\n      const {items, path, label, disabled, matchesType} = field;\n      const prefix = \"\\u00A0\\u00A0\".repeat(level);\n      if (items) {\n        return [\n          <ListSubheader disabled={disabled} key={path} disableSticky={true}>\n            {prefix && <span>{prefix}</span>}\n            {label}\n          </ListSubheader>,\n          renderOptions(items, level+1),\n        ];\n      } else {\n        return <MenuItem disabled={disabled} key={path} value={path}>\n          {prefix && <span>{prefix}</span>}\n          {matchesType ? <b>{label}</b> : label}\n        </MenuItem>;\n      }\n    })\n  );\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setField(e.target.value);\n  };\n\n  const renderValue = (selectedValue) => {\n    if (!readonly && !selectedValue)\n      return placeholder;\n    const findLabel = (fields) => {\n      return fields.map(field => {\n        if(!field.items) return field.path === selectedValue ? field.label : null;\n        return findLabel(field.items);\n      });\n    };\n    return findLabel(items).filter((v) => {\n      if (Array.isArray(v)) {\n        return v.some((value) => value !== null);\n      } else {\n        return v !== null;\n      }\n    }).pop();\n  };\n  \n  const hasValue = selectedKey != null;\n  return (\n    <FormControl>\n      <Select\n        error={!!errorText}\n        autoWidth\n        displayEmpty\n        label={placeholder}\n        onChange={onChange}\n        value={hasValue ? selectedKey : \"\"}\n        disabled={readonly}\n        renderValue={renderValue}\n      >\n        {renderOptions(items)}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default ({id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel}) => {\n  //TIP: disabled=true if only 1 rule; readonly=true if immutable mode\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(key => {\n      const {id, name, label, checked} = conjunctionOptions[key];\n      const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n      if ((readonly || disabled) && !checked)\n        return null;\n      return (\n        <Button \n          key={id+postfix} \n          id={id+postfix} \n          color={checked ? \"primary\" : \"default\"} \n          value={key} \n          onClick={onClick.bind(null, key)} \n          disabled={readonly || disabled}\n        >\n          {label}\n        </Button>\n      );\n    });\n  \n  const renderNot = () => {\n    if (readonly && !not)\n      return null;\n    return (\n      <Button \n        key={id}\n        id={id + \"__not\"}\n        color={not ? \"secondary\" : \"default\"} \n        onClick={onNotClick.bind(null, !not)} \n        disabled={readonly}\n      >\n        {notLabel || \"NOT\"}\n      </Button>\n    );\n  };\n\n  const onClick = value => setConjunction(value);\n  const onNotClick = checked => setNot(checked);\n\n  return (\n    <FormControl>\n      <ButtonGroup \n        disableElevation \n        variant=\"contained\" \n        size=\"small\" \n        disabled={readonly}\n      >\n        {showNot && renderNot()}\n        {showConj && renderOptions()}\n      </ButtonGroup>\n    </FormControl>\n  );\n  \n};\n","import React from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport LockIcon from \"@material-ui/icons/Lock\";\n\nexport default ({value, setValue, label, checkedLabel, hideLabel, id, config, type}) => {\n  const {renderSize} = config.settings;\n  const onChange = e => setValue(e.target.checked);\n  const onClick = () => setValue(!value);\n  const postfix = type;\n  const showLabel = value ? (checkedLabel || label) : label;\n  const icon = value ? <LockIcon /> : <LockOpenIcon />;\n\n  if (type == \"lock\") {\n    if (hideLabel) {\n      return <IconButton\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n      >{icon}</IconButton>;\n    } else {\n      return <Button\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n        startIcon={icon}\n      >{showLabel}</Button>;\n    }\n  }\n\n  return <FormControlLabel \n    control={<Switch\n      checked={!!value}\n      size={\"small\"}\n      onChange={onChange}\n    />} \n    label={showLabel} \n  />;\n};\n","export default ({onOk, okText, cancelText, title, confirmFn}) => {\n  confirmFn({ \n    description: title || \"Are you sure?\",\n    title: null,\n    confirmationText: okText || \"Ok\",\n    cancellationText: cancelText || \"Cancel\",\n  })\n    .then(onOk)\n    .catch(() => {});\n};\n","import React from \"react\";\nimport MaterialWidgets from \"../widgets\";\nimport { BasicConfig, Utils } from \"@react-awesome-query-builder/ui\";\n\n\nconst settings = {\n  ...BasicConfig.settings,\n\n  renderField: (props, {RCE, W: {MaterialFieldAutocomplete, MaterialFieldSelect}}) => props?.customProps?.showSearch \n    ? RCE(MaterialFieldAutocomplete, props)\n    : RCE(MaterialFieldSelect, props),\n  renderOperator: (props, {RCE, W: {MaterialFieldSelect}}) => RCE(MaterialFieldSelect, props),\n\n  renderFunc: (props, {RCE, W: {MaterialFieldSelect}}) => RCE(MaterialFieldSelect, props),\n  renderConjs: (props, {RCE, W: {MaterialConjs}}) => RCE(MaterialConjs, props),\n  renderSwitch: (props, {RCE, W: {MaterialSwitch}}) => RCE(MaterialSwitch, props),\n  renderButton: (props, {RCE, W: {MaterialButton}}) => RCE(MaterialButton, props),\n  renderIcon: (props, {RCE, W: {MaterialIcon}}) => RCE(MaterialIcon, props),\n  renderButtonGroup: (props, {RCE, W: {MaterialButtonGroup}}) => RCE(MaterialButtonGroup, props),\n  renderValueSources: (props, {RCE, W: {MaterialValueSources}}) => RCE(MaterialValueSources, props),\n  renderFieldSources: (props, {RCE, W: {MaterialValueSources}}) => RCE(MaterialValueSources, props),\n  renderProvider: (props, {RCE, W: {MaterialProvider}}) => RCE(MaterialProvider, props),\n  renderConfirm: (props, {W: {MaterialConfirm}}) => MaterialConfirm(props),\n  useConfirm: ({W: {MaterialUseConfirm}}) => MaterialUseConfirm(),\n};\n\n\nconst widgets = {\n  ...BasicConfig.widgets,\n  text: {\n    ...BasicConfig.widgets.text,\n    factory: (props, {RCE, W: {MaterialTextWidget}}) => RCE(MaterialTextWidget, props),\n  },\n  textarea: {\n    ...BasicConfig.widgets.textarea,\n    factory: (props, {RCE, W: {MaterialTextAreaWidget}}) => RCE(MaterialTextAreaWidget, props),\n  },\n  number: {\n    ...BasicConfig.widgets.number,\n    factory: (props, {RCE, W: {MaterialNumberWidget}}) => RCE(MaterialNumberWidget, props),\n  },\n  multiselect: {\n    ...BasicConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {MaterialAutocompleteWidget, MaterialMultiSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch) \n        ? RCE(MaterialAutocompleteWidget, {...props, multiple: true}) \n        : RCE(MaterialMultiSelectWidget, props);\n    },\n  },\n  select: {\n    ...BasicConfig.widgets.select,\n    factory: (props, {RCE, W: {MaterialAutocompleteWidget, MaterialSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch) \n        ? RCE(MaterialAutocompleteWidget, props) \n        : RCE(MaterialSelectWidget, props);\n    },\n  },\n  slider: {\n    ...BasicConfig.widgets.slider,\n    factory: (props, {RCE, W: {MaterialSliderWidget}}) => RCE(MaterialSliderWidget, props),\n  },\n  boolean: {\n    ...BasicConfig.widgets.boolean,\n    factory: (props, {RCE, W: {MaterialBooleanWidget}}) => RCE(MaterialBooleanWidget, props),\n  },\n  date: {\n    ...BasicConfig.widgets.date,\n    factory: (props, {RCE, W: {MaterialDateWidget}}) => RCE(MaterialDateWidget, props),\n  },\n  time: {\n    ...BasicConfig.widgets.time,\n    factory: (props, {RCE, W: {MaterialTimeWidget}}) => RCE(MaterialTimeWidget, props),\n  },\n  datetime: {\n    ...BasicConfig.widgets.datetime,\n    factory: (props, {RCE, W: {MaterialDateTimeWidget}}) => RCE(MaterialDateTimeWidget, props),\n  },\n\n  rangeslider: {\n    ...BasicConfig.widgets.rangeslider,\n    factory: (props, {RCE, W: {MaterialRangeWidget}}) => RCE(MaterialRangeWidget, props),\n  },\n};\n\n\nconst types = {\n  ...BasicConfig.types,\n};\n\nconst ctx = {\n  ...BasicConfig.ctx,\n  W: {\n    ...BasicConfig.ctx.W,\n    ...MaterialWidgets,\n  },\n};\n\nlet config = {\n  ...BasicConfig,\n  ctx,\n  types,\n  widgets,\n  settings,\n};\nconfig = Utils.ConfigMixins.addMixins(config, [\n  \"rangeslider\",\n]);\n\nexport default config;","// Had to make uuid use a constant seed so it would generate same sequence across runs. This was needed\n// so server side rendering and client side rendering yield same results (e.g. the uuid is used when rendering\n// the concunctions with their name and id)\nvar query_builder_seed = 0;\nexport default () => {\n  // Generate a random GUID http://stackoverflow.com/a/2117523.\n  const timePart = (new Date().getTime().toString(16)+\"FF\").substr(0,11);\n  const s = \"ssssssss-xxxx-4xxx-yxxx-x\".replace(/[xys]/g, (c) => {\n    const r = c === \"s\" ? Math.floor(Math.random() * 16) : (query_builder_seed++) & 0xf;\n    const v = c === \"x\" ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n  return s + timePart;\n};\n","import Immutable, { Map } from \"immutable\";\nimport omit from \"lodash/omit\";\nimport {default as uuid} from \"./uuid\";\n\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport {uuid};\n\nexport const widgetDefKeysToOmit = [\n  \"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\", \"spelImportFuncs\", \"spelImportValue\"\n];\n\nexport const opDefKeysToOmit = [\n  \"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"\n];\n\n// RegExp.quote = function (str) {\n//     return str.replace(/([.?*+^$[\\]\\\\(){}|-])/g, \"\\\\$1\");\n// };\n\nexport const getOpCardinality = (opDef) => {\n  return opDef?.cardinality ?? 1;\n};\n\n// const immutableEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else {\n//     return v1.equals(v2);\n//   }\n// };\n\nexport const deepEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else if (Map.isMap(v1)) {\n    return v1.equals(v2);\n  } else {\n    return JSON.stringify(v1) == JSON.stringify(v2);\n  }\n};\n\n// //Do sets have same values?\n// const eqSet = function (as, bs) {\n//   if (as.size !== bs.size) return false;\n//   for (var a of as) if (!bs.has(a)) return false;\n//   return true;\n// };\n\n\n// //Do arrays have same values?\n// const eqArrSet = function (arr1, arr2) {\n//   return eqSet(new Set(arr1), new Set(arr2));\n// };\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (Map.isMap(a))\n    return a.equals(b);\n  else if (typeof a == \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport const isImmutable = (v) => {\n  return typeof v === \"object\" && v !== null && typeof v.toJS === \"function\";\n};\n\nexport function toImmutableList(v) {\n  return (isImmutable(v) ? v : new Immutable.List(v));\n}\n\nexport function applyToJS(v) {\n  return (isImmutable(v) ? v.toJS() : v);\n}\n\nexport const escapeRegExp = (string) => {\n  return string.replace(/[.*+?^${}()|[\\]\\\\/]/g, \"\\\\$&\"); // $& means the whole matched string\n};\n\nexport const mergeCustomizerNoArrays = (objValue, srcValue, _key, _object, _source, _stack) => {\n  if (Array.isArray(objValue)) {\n    return srcValue;\n  }\n};\n\nexport const cleanJSX = (jsx) => {\n  const jsxKeys = [\"$$typeof\", \"_owner\", \"_store\", \"ref\", \"key\"];\n\n  const getName = (val) => {\n    if (typeof val === \"string\") {\n      return val;\n    } else if (typeof val === \"function\") {\n      return val.name;\n    }\n    return val;\n  };\n\n  if (jsx instanceof Array) {\n    return jsx.map((el, _i) => cleanJSX(el));\n  } else if (typeof jsx === \"object\" && jsx !== null) {\n    if (isDirtyJSX(jsx)) {\n      const cleaned = omit(jsx, jsxKeys);\n      if (cleaned.type) {\n        cleaned.type = getName(cleaned.type);\n      }\n      if (cleaned?.props?.children) {\n        cleaned.props.children = cleanJSX(cleaned.props.children);\n      }\n      return cleaned;\n    }\n  }\n  return jsx;\n};\n\nexport const isDirtyJSX = (jsx) => {\n  return typeof jsx === \"object\"\n    && jsx !== null\n    && !Array.isArray(jsx)\n    && Object.keys(jsx).includes(\"type\")\n    && Object.keys(jsx).includes(\"props\") // even if {}\n    && Object.keys(jsx).includes(\"key\") // even if null\n    && Object.keys(jsx).includes(\"ref\") // even if null\n    && Object.keys(jsx).includes(\"$$typeof\"); // Symbol(react.element)\n};\n\nexport const isJSX = (jsx) => (\n  typeof jsx === \"object\"\n  && jsx !== null\n  && !Array.isArray(jsx)\n  && typeof jsx[\"type\"] === \"string\"\n  && Object.keys(jsx).includes(\"props\")\n);\n\nexport const isJsonLogic = (logic) => {\n  let isJL = typeof logic === \"object\" // An object\n    && logic !== null // but not null\n    && !Array.isArray(logic) // and not an array\n    && Object.keys(logic).length === 1; // with exactly one key\n  if (isJL) {\n    // additional checks ?\n  }\n  return isJL;\n};\n\nexport function sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\n\n// [1, 4, 9] + [1, 5, 9] => [1, 4, 5, 9]\n// Used for merging arrays of operators for different widgets of 1 type\nexport function mergeArraysSmart(arr1, arr2) {\n  if (!arr1) arr1 = [];\n  if (!arr2) arr2 = [];\n  return arr2\n    .map(op => [op, arr1.indexOf(op)])\n    .map(([op, ind], i, orig) => {\n      if (ind == -1) {\n        const next = orig.slice(i+1);\n        const prev = orig.slice(0, i);\n        const after = prev.reverse().find(([_cop, ci]) => ci != -1);\n        const before = next.find(([_cop, ci]) => ci != -1);\n        if (before)\n          return [op, \"before\", before[0]];\n        else if (after)\n          return [op, \"after\", after[0]];\n        else\n          return [op, \"append\", null];\n      } else {\n      // already exists\n        return null;\n      }\n    })\n    .filter(x => x !== null)\n    .reduce((acc, [newOp, rel, relOp]) => {\n      const ind = acc.indexOf(relOp);\n      if (acc.indexOf(newOp) == -1) {\n        if (ind > -1) {\n        // insert after or before\n          acc.splice( ind + (rel == \"after\" ? 1 : 0), 0, newOp );\n        } else {\n        // insert to end or start\n          acc.splice( (rel == \"append\" ? Infinity : 0), 0, newOp );\n        }\n      }\n      return acc;\n    }, arr1.slice());\n}\n\nexport const deepFreeze = obj => {\n  if (typeof obj === \"object\" && obj !== null) {\n    Object.keys(obj).forEach(prop => {\n      deepFreeze(obj[prop]);\n    });\n    Object.freeze(obj);\n  }\n};\n\nexport const isJsonCompatible = (tpl, obj, bag = {}, path = []) => {\n  if (isObject(tpl)) {\n    if (tpl.var) {\n      bag[tpl.var] = obj;\n      return true;\n    }\n    if (!isObject(obj))\n      return false;\n    for (const k in tpl) {\n      const tv = tpl[k];\n      const ov = obj[k];\n      if (!isJsonCompatible(tv, ov, bag, [...path, k]))\n        return false;\n    }\n    return true;\n  } else if (Array.isArray(tpl)) {\n    if (!Array.isArray(obj))\n      return false;\n    for (let i = 0 ; i < tpl.length ; i++) {\n      const tv = tpl[i];\n      const ov = obj[i];\n      if (!isJsonCompatible(tv, ov, bag, [...path, i]))\n        return false;\n    }\n    return true;\n  } else {\n    return tpl === obj;\n  }\n};\n\nconst isDev = () => (typeof process !== \"undefined\" && process.env && process.env.NODE_ENV == \"development\");\n\nexport const getLogger = (devMode = false) => {\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\nexport const getFirstDefined = (arr = []) => {\n  let ret;\n  for (let i = 0 ; i < arr.length ; i++) {\n    const v = arr[i];\n    if (v !== undefined) {\n      ret = v;\n      break;\n    }\n  }\n  return ret;\n};\n\nexport const logger = getLogger();\n","\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const toListValue = (v, title) => {\n  if (v == null || v == \"\") {\n    return undefined;\n  } else if (isObject(v)) {\n    return {\n      ...v,\n      title: v.title || v.value, // fallback to value\n    };\n  } else {\n    return {\n      value: v,\n      title: (title !== undefined ? title : \"\"+v)\n    };\n  }\n};\n\nexport const makeCustomListValue = (v) => {\n  const lv = toListValue(v);\n  if (isObject(lv)) {\n    return {\n      ...toListValue(v),\n      isCustom: true,\n    };\n  } else { // only if undefined\n    return lv;\n  }\n};\n\n// convert {<value>: <title>, ..} or [value, ..] to normal [{value, title}, ..]\nexport const listValuesToArray = (listValuesObj) => {\n  if (Array.isArray(listValuesObj))\n    return listValuesObj.map(v => toListValue(v));\n  if (!isObject(listValuesObj))\n    return listValuesObj;\n  \n  let listValuesArr = [];\n  for (let v in listValuesObj) {\n    const title = listValuesObj[v];\n    listValuesArr.push(toListValue(v, title));\n  }\n  return listValuesArr;\n};\n\n// listValues can be {<value>: <title>, ..} or [{value, title}, ..] or [value, ..]\n// todo: same as getListValue() (but args are switched)\nexport const getItemInListValues = (listValues, value) => {\n  if (Array.isArray(listValues)) {\n    const values = listValues.map(v => toListValue(v));\n    return values.find(v => (\"\"+v.value === \"\"+value));\n  } else {\n    return listValues[value] !== undefined ? toListValue(value, listValues[value]) : undefined;\n  }\n};\n\nexport const getTitleInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.title : value;\n};\n\nexport const getValueInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.value : value;\n};\n\nexport const mapListValues = (listValues, mapFn) => {\n  let ret = [];\n  if (Array.isArray(listValues)) {\n    for (let v of listValues) {\n      const lv = mapFn(toListValue(v));\n      if (lv != null)\n        ret.push(lv);\n    }\n  } else {\n    for (let value in listValues) {\n      const lv = mapFn(toListValue(value, listValues[value]));\n      if (lv != null)\n        ret.push(lv);\n    }\n  }\n  return ret;\n};\n\nexport const searchListValue = (search, listValues) => \n  mapListValues(listValues, (lv) => (\n    `${lv.value}`.indexOf(search) != -1 || lv.title.indexOf(search) != -1\n      ? lv : null\n  ))\n    .filter(v => v !== null)\n    .shift();\n\nexport const getListValue = (selectedValue, listValues) => \n  mapListValues(listValues, \n    (lv) => (\"\"+lv.value === \"\"+selectedValue ? lv : null)\n  )\n    .filter(v => v !== null)\n    .shift();\n","import Immutable  from \"immutable\";\nimport {toImmutableList, isImmutable, applyToJS as immutableToJs} from \"./stuff\";\nimport {getTreeBadFields} from \"./validation\";\nimport {jsToImmutable} from \"../import/tree\";\nimport uuid from \"./uuid\";\n\nexport {\n  toImmutableList, jsToImmutable, immutableToJs, isImmutable,\n  // for backward compatibility\n  getTreeBadFields\n};\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreePath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.skip(1);\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreeSubpath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {Immutable.List} path\n * @return {Immutable.Map}\n */\nexport const getItemByPath = (tree, path) => {\n  let children = new Immutable.OrderedMap({ [tree.get(\"id\")] : tree });\n  let res = tree;\n  path.forEach((id) => {\n    res = children.get(id);\n    children = res?.get(\"children1\");\n  });\n  return res;\n};\n\n\n/**\n * Remove `path` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\n// export const removePathsInTree = (tree) => {\n//   let newTree = tree;\n\n//   function _processNode (item, path) {\n//     const itemPath = path.push(item.get(\"id\"));\n//     if (item.get(\"path\")) {\n//       newTree = newTree.removeIn(expandTreePath(itemPath, \"path\"));\n//     }\n\n//     const children = item.get(\"children1\");\n//     if (children) {\n//       children.map((child, _childId) => {\n//         _processNode(child, itemPath);\n//       });\n//     }\n//   }\n\n//   _processNode(tree, new Immutable.List());\n\n//   return newTree;\n// };\n\n\n/**\n * Remove `isLocked` in items that inherit parent's `isLocked`\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const removeIsLockedInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, isParentLocked = false) {\n    const itemPath = path.push(item.get(\"id\"));\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    if (isParentLocked && isLocked) {\n      newTree = newTree.deleteIn(expandTreePath(itemPath, \"properties\", \"isLocked\"));\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, itemPath, isLocked || isParentLocked);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List());\n\n  return newTree;\n};\n\n\n/**\n * Set correct `path` and `id` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const fixPathsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return;\n    const currPath = item.get(\"path\");\n    const currId = item.get(\"id\");\n    const itemId = currId || nodeId || uuid();\n    const itemPath = path.push(itemId);\n    if (!currPath || !currPath.equals(itemPath)) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"path\"), itemPath);\n    }\n    if (!currId) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"id\"), itemId);\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      if (children.constructor.name === \"Map\") {\n        // protect: should be OrderedMap, not Map (issue #501)\n        newTree = newTree.setIn(\n          expandTreePath(itemPath, \"children1\"), \n          new Immutable.OrderedMap(children)\n        );\n      }\n      children.map((child, childId) => {\n        _processNode(child, itemPath, lev + 1, childId);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\nexport const fixEmptyGroupsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return false;\n    const itemId = item.get(\"id\") || nodeId;\n    const itemPath = path.push(itemId);\n\n    const children = item.get(\"children1\");\n    if (children) {\n      const allChildrenGone = children.map((child, childId) => {\n        return _processNode(child, itemPath, lev + 1, childId);\n      }).reduce((curr, v) => (curr && v), true);\n      if ((children.size == 0 || allChildrenGone) && lev > 0) {\n        newTree = newTree.deleteIn(expandTreePath(itemPath));\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @return {Object} {flat, items}\n */\nexport const getFlatTree = (tree) => {\n  let flat = [];\n  let items = {};\n  let cases = [];\n  let visibleHeight = 0; // number of non-collapsed nodes\n  let globalLeafCount = 0;\n  let globalAtomicCount = 0;\n  let globalGroupCount = 0;\n  let globalCountByType = {};\n  // rule_group_ext can be counted as group  (group #x)\n  // or by similars (rule-group #x) (NOT both _ext and no ext)\n\n  function _flatizeTree (\n    item, path, insideCollapsed, insideLocked, insideRuleGroup, lev, caseId, childNo\n  ) {\n    const isRoot = item === tree;\n    const type = item.get(\"type\");\n    const collapsed = item.get(\"collapsed\");\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    const childrenIds = children ? children.map((_child, childId) => childId).valueSeq().toArray() : null;\n    const isRuleGroup = type === \"rule_group\";\n    const isRule = type === \"rule\";\n    const isGroup = type === \"group\";\n    const isCaseGroup = type === \"case_group\";\n    // tip: count rule_group as 1 atomic rule\n    const isAtomicRule = !insideRuleGroup && (!children || isRuleGroup);\n    const hasChildren = childrenIds?.length > 0;\n    const parentId = path.length ? path[path.length-1] : null;\n    const currentCaseId = isCaseGroup ? id : caseId;\n\n    // Calculations before\n    if (isCaseGroup) {\n      cases.push(id);\n      // reset counters\n      globalLeafCount = 0;\n      globalAtomicCount = 0;\n      globalGroupCount = 0;\n      globalCountByType = {};\n    }\n    const caseNo = currentCaseId ? cases.indexOf(currentCaseId) : null;\n    const itemsBefore = flat.length;\n    const top = visibleHeight;\n\n    let position;\n    if (!isRoot) {\n      position = {};\n      position.caseNo = caseNo;\n      position.globalNoByType = globalCountByType[type] || 0;\n      position.indexPath = [ ...path.slice(1).map(id => items[id].childNo), childNo ];\n      if (isRule) {\n        position.globalLeafNo = globalLeafCount;\n      } else if (isGroup) {\n        position.globalGroupNo = globalGroupCount;\n      }\n    }\n\n    flat.push(id);\n    items[id] = {\n      node: item,\n      index: itemsBefore, // index in `flat`\n      id: id,\n      type: type,\n      parent: parentId,\n      parentType: parentId ? items[parentId].type : null,\n      children: childrenIds,\n      childNo,\n      caseId: currentCaseId,\n      caseNo,\n      path: path.concat(id),\n      lev: lev, // depth level (0 for root node)\n      isLeaf: !children, // is atomic rule OR rule inside rule_group\n      isAtomicRule, // is atomic (rule or rule_group, but not rules inside rule_group)\n      isLocked: isLocked || insideLocked,\n      // vertical\n      top: (insideCollapsed ? null : top),\n      // for case\n      isDefaultCase: isCaseGroup ? !children : undefined,\n      atomicRulesCountInCase: isCaseGroup ? 0 : undefined,\n      // object with numbers indicating # of item in tree\n      position,\n      // unused\n      collapsed: collapsed,\n      _top: itemsBefore,\n      // @deprecated use isLeaf instead\n      leaf: !children,\n\n      // will be added later:\n      //  prev\n      //  next\n      //  depth  - for any group (children of rule_group are not counted, collapsed are not counted)\n      //  height  - visible height\n      //  bottom = (insideCollapsed ? null : top + height)\n      //  _height = (itemsAfter - itemsBefore)  - real height (incl. collapsed)\n    };\n\n    // Calculations before traversing children\n    let height = 0;\n    let depth = 0;\n    if (!insideCollapsed) {\n      visibleHeight += 1;\n      height += 1;\n      if (hasChildren && !collapsed && !isRuleGroup) {\n        // tip: don't count children of rule_group\n        depth += 1;\n      }\n      if (!isRoot && !isCaseGroup) {\n        isGroup && globalGroupCount++;\n        isAtomicRule && globalAtomicCount++;\n        isRule && globalLeafCount++;\n        globalCountByType[type] = (globalCountByType[type] || 0) + 1;\n      }\n    }\n    if (caseId && isAtomicRule) {\n      items[caseId].atomicRulesCountInCase++;\n    }\n\n    // Traverse children deeply\n    let maxChildDepth = 0;\n    let sumHeight = 0;\n    if (hasChildren) {\n      let childCount = 0;\n      children.map((child, childId) => {\n        if (child) {\n          _flatizeTree(\n            child, \n            path.concat(id), \n            insideCollapsed || collapsed, insideLocked || isLocked, insideRuleGroup || isRuleGroup,\n            lev + 1, currentCaseId, childCount\n          );\n          const childItem = items[childId];\n          // Calculations after deep traversing 1 child\n          maxChildDepth = Math.max(maxChildDepth, childItem.depth || 0);\n          sumHeight += childItem.height;\n          childCount++;\n        }\n      });\n    }\n\n    // Calculations after deep traversing ALL children\n    height += sumHeight;\n    depth += maxChildDepth;\n    const itemsAfter = flat.length;\n    const _height = itemsAfter - itemsBefore;\n    const bottom = (insideCollapsed ? null : top + height);\n\n    Object.assign(items[id], {\n      depth: children ? depth : undefined,\n      _height,\n      height,\n      bottom,\n    });\n  }\n\n  // Start recursion\n  _flatizeTree(tree, [], false, false, false, 0, null, null);\n\n  // Calc after recursion\n  for (let i = 0 ; i < flat.length ; i++) {\n    const prevId = i > 0 ? flat[i-1] : null;\n    const nextId = i < (flat.length-1) ? flat[i+1] : null;\n    let item = items[flat[i]];\n    item.prev = prevId;\n    item.next = nextId;\n  }\n\n  return {flat, items, cases};\n};\n\n\n/**\n * Returns count of reorderable(!) nodes\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalReordableNodesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    const isRuleGroup = type == \"rule_group\";\n    cnt++;\n    //tip: rules in rule-group can be reordered only inside\n    if (children && !isRuleGroup) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt - 1; // -1 for root\n};\n\n/**\n * Returns count of atomic rules (i.e. don't count groups; count rule_group as 1 atomic rule)\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalRulesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    \n    if (type == \"rule\" || type == \"rule_group\") {\n      // tip: count rule_group as 1 rule\n      cnt++;\n    } else if (children) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt;\n};\n\n\n// Remove fields that can be calced: \"id\", \"path\"\n// Remove empty fields: \"operatorOptions\"\nexport const getLightTree = (tree, deleteExcess = true, children1AsArray = true) => {\n  let newTree = tree;\n\n  function _processNode (item, itemId) {\n    if (deleteExcess && item.path) {\n      delete item.path;\n    }\n    if (deleteExcess && !children1AsArray && itemId) {\n      delete item.id;\n    }\n    let properties = item.properties;\n    if (properties) {\n      if (properties.operatorOptions == null) {\n        delete properties.operatorOptions;\n      }\n    }\n\n    const children = item.children1;\n    if (children) {\n      for (let id in children) {\n        if (children[id]) {\n          _processNode(children[id], id);\n        }\n      }\n      if (children1AsArray) {\n        item.children1 = Object.values(children);\n      }\n    }\n  }\n\n  _processNode(tree, null);\n\n  return newTree;\n};\n\nexport const getSwitchValues = (tree) => {\n  let vals = [];\n  const children = tree.get(\"children1\");\n  if (children) {\n    children.map((child) => {\n      const value = child.getIn([\"properties\", \"value\"]);\n      let caseValue;\n      if (value && value.size == 1) {\n        caseValue = value.get(0);\n        if (Array.isArray(caseValue) && caseValue.length == 0) {\n          caseValue = null;\n        }\n      } else {\n        caseValue = null;\n      }\n      vals = [...vals, caseValue];\n    });\n  }\n\n  return vals;\n};\n\nexport const isEmptyTree = (tree) => (!tree.get(\"children1\") || tree.get(\"children1\").size == 0);\n\nexport const hasChildren = (tree, path) => tree.getIn(expandTreePath(path, \"children1\")).size > 0;\n\n\nexport const _fixImmutableValue = (v) => {\n  if (v?.toJS) {\n    const vJs = v?.toJS?.();\n    if (vJs?.func) {\n      // `v` is a func, keep Immutable\n      return v.toOrderedMap();\n    } else {\n      // for values of multiselect use Array instead of List\n      return vJs;\n    }\n  } else {\n    return v;\n  }\n};\n","import Immutable, { fromJS, Map } from \"immutable\";\nimport {checkTree, isValidTree} from \"../utils/validation\";\nimport {getLightTree, _fixImmutableValue, fixPathsInTree} from \"../utils/treeUtils\";\nimport {isJsonLogic} from \"../utils/stuff\";\nimport uuid from \"../utils/uuid\";\n\nexport {\n  isJsonLogic,\n  // for backward compatibility:\n  checkTree, isValidTree\n};\n\nexport const getTree = (immutableTree, light = true, children1AsArray = true) => {\n  if (!immutableTree) return undefined;\n  let tree = immutableTree;\n  tree = tree.toJS();\n  tree = getLightTree(tree, light, children1AsArray);\n  return tree;\n};\n\nexport const loadTree = (serTree) => {\n  if (isImmutableTree(serTree)) {\n    return serTree;\n  } else if (isTree(serTree)) {\n    return fixPathsInTree(jsToImmutable(serTree));\n  } else if (typeof serTree == \"string\" && serTree.startsWith('[\"~#iM\"')) {\n    //tip: old versions of RAQB were saving tree with `transit.toJSON()`\n    // https://github.com/ukrbublik/react-awesome-query-builder/issues/69\n    throw new Error(\"You are trying to load query in obsolete serialization format (Immutable string) which is not supported in versions starting from 2.1.17\");\n  } else if (typeof serTree === \"string\") {\n    return fixPathsInTree(jsToImmutable(JSON.parse(serTree)));\n  } else throw new Error(\"Can't load tree!\");\n};\n\nexport const isImmutableTree = (tree) => {\n  return Map.isMap(tree);\n};\n\nexport const isTree = (tree) => {\n  return typeof tree == \"object\" && (tree.type == \"group\" || tree.type == \"switch_group\");\n};\n\nexport function jsToImmutable(tree) {\n  const imm = fromJS(tree, function (key, value, path) {\n    const isFuncArg = path\n      && path.length > 3\n      && path[path.length-1] === \"value\"\n      && path[path.length-3] === \"args\";\n    const isRuleValue = path\n      && path.length > 3\n      && path[path.length-1] === \"value\"\n      && path[path.length-2] === \"properties\";\n\n    let outValue;\n    if (key == \"properties\") {\n      outValue = value.toOrderedMap();\n\n      // `value` should be undefined instead of null\n      // JSON doesn't support undefined and replaces undefined -> null\n      // So fix: null -> undefined\n      for (let i = 0 ; i < 2 ; i++) {\n        if (outValue.get(\"value\")?.get?.(i) === null) {\n          outValue = outValue.setIn([\"value\", i], undefined);\n        }\n      }\n    } else if (isFuncArg) {\n      outValue = _fixImmutableValue(value);\n    } else if ((path ? isRuleValue : key == \"value\") && Immutable.Iterable.isIndexed(value)) {\n      outValue = value.map(_fixImmutableValue).toList();\n    } else if (key == \"asyncListValues\") {\n      // keep in JS format\n      outValue = value.toJS();\n    } else if (key == \"children1\" && Immutable.Iterable.isIndexed(value)) {\n      outValue = new Immutable.OrderedMap(value.map(child => [child?.get(\"id\") || uuid(), child]));\n    } else {\n      outValue = Immutable.Iterable.isIndexed(value) ? value.toList() : value.toOrderedMap();\n    }\n    return outValue;\n  });\n  return imm;\n}\n","import uuid from \"../utils/uuid\";\nimport {getOpCardinality, isJsonLogic, shallowEqual, logger} from \"../utils/stuff\";\nimport {getFieldConfig, extendConfig, normalizeField, getFuncConfig, iterateFuncs, getFieldParts} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {loadTree} from \"./tree\";\nimport {defaultConjunction, defaultGroupConjunction} from \"../utils/defaultUtils\";\n\nimport moment from \"moment\";\n\n// http://jsonlogic.com/\n\n// helpers\nconst arrayUniq = (arr) => Array.from(new Set(arr));\nconst arrayToObject = (arr) => arr.reduce((acc, [f, fc]) => ({ ...acc, [f]: fc }), {});\n\nconst createMeta = (parentMeta) => {\n  return {\n    errors: [],\n    settings: parentMeta?.settings,\n  };\n};\n\nexport const loadFromJsonLogic = (logicTree, config) => {\n  return _loadFromJsonLogic(logicTree, config, false);\n};\n\nexport const _loadFromJsonLogic = (logicTree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = createMeta();\n  meta.settings = {\n    allowUnknownFields: false,\n    returnErrors,\n  };\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  let jsTree = logicTree ? convertFromLogic(logicTree, conv, extendedConfig, \"rule\", meta) : undefined;\n  if (jsTree && jsTree.type != \"group\") {\n    jsTree = wrapInDefaultConj(jsTree, extendedConfig);\n  }\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from JsonLogic:\", meta.errors);\n    return immTree;\n  }\n};\n\n\nconst buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (typeof opConfig.jsonLogic == \"string\") {\n      // example: \"</2\", \"#in/1\"\n      const opk = (opConfig._jsonLogicIsRevArgs ? \"#\" : \"\") + opConfig.jsonLogic + \"/\" + getOpCardinality(opConfig);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else if(typeof opConfig.jsonLogic2 == \"string\") {\n      // example: all-in/1\"\n      const opk = opConfig.jsonLogic2 + \"/\" + getOpCardinality(opConfig);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.jsonLogicConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (const [funcPath, funcConfig] of iterateFuncs(config)) {\n    let fk;\n    if (funcConfig.jsonLogicIsMethod) {\n      fk = \"#\" + funcConfig.jsonLogic;\n    } else if (typeof funcConfig.jsonLogic == \"string\") {\n      fk = funcConfig.jsonLogic;\n    }\n    if (fk) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcPath);\n    }\n  }\n\n  const {groupVarKey, altVarKey} = config.settings.jsonLogic;\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    varKeys: [\"var\", groupVarKey, altVarKey],\n  };\n};\n\nconst convertFromLogic = (logic, conv, config, expectedType, meta, not = false, fieldConfig, widget, parentField = null, _isLockedLogic = false) => {\n  let op, vals;\n  if (isJsonLogic(logic)) {\n    op = Object.keys(logic)[0];\n    vals = logic[op];\n    if (!Array.isArray(vals))\n      vals = [ vals ];\n  }\n  \n  let ret;\n  const beforeErrorsCnt = meta.errors.length;\n\n  const {lockedOp} = config.settings.jsonLogic;\n  const isEmptyOp = op == \"!\" && (vals.length == 1 && vals[0] && isJsonLogic(vals[0]) && conv.varKeys.includes(Object.keys(vals[0])[0]));\n  const isRev = op == \"!\" && !isEmptyOp;\n  const isLocked = lockedOp && op == lockedOp;\n  if (isLocked) {\n    ret = convertFromLogic(vals[0], conv, config, expectedType, meta, not, fieldConfig, widget, parentField, true);\n  } else if (isRev) {\n    // reverse with not\n    ret = convertFromLogic(vals[0], conv, config, expectedType, meta, !not, fieldConfig, widget, parentField);\n  } else if(expectedType == \"val\") {\n    // not is not used here\n    ret = convertFieldRhs(op, vals, conv, config, not, meta, parentField) \n      || convertFuncRhs(op, vals, conv, config, not, fieldConfig, meta, parentField) \n      || convertValRhs(logic, fieldConfig, widget, config, meta);\n  } else if(expectedType == \"rule\") {\n    ret = convertConj(op, vals, conv, config, not, meta, parentField, false) \n    || convertOp(op, vals, conv, config, not, meta, parentField);\n  }\n\n  const afterErrorsCnt = meta.errors.length;\n  if (op != \"!\" && ret === undefined && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Can't parse logic ${JSON.stringify(logic)}`);\n  }\n\n  if (isLocked) {\n    ret.properties.isLocked = true;\n  }\n\n  return ret;\n};\n\n\nconst convertValRhs = (val, fieldConfig, widget, config, meta) => {\n  if (val === undefined)\n    val = fieldConfig?.defaultValue;\n  if (val === undefined) return undefined;\n  const widgetConfig = config.widgets[widget || fieldConfig?.mainWidget];\n  const fieldType = fieldConfig?.type;\n\n  if (fieldType && !widgetConfig) {\n    meta.errors.push(`No widget for type ${fieldType}`);\n    return undefined;\n  }\n\n  if (isJsonLogic(val)) {\n    meta.errors.push(`Unexpected logic in value: ${JSON.stringify(val)}`);\n    return undefined;\n  }\n\n  // number of seconds -> time string\n  if (fieldType == \"time\" && typeof val == \"number\") {\n    const [h, m, s] = [Math.floor(val / 60 / 60) % 24, Math.floor(val / 60) % 60, val % 60];\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      const dateVal = new Date(val);\n      dateVal.setMilliseconds(0);\n      dateVal.setHours(h);\n      dateVal.setMinutes(m);\n      dateVal.setSeconds(s);\n      val = moment(dateVal).format(valueFormat);\n    } else {\n      val = `${h}:${m}:${s}`;\n    }\n  }\n\n  // \"2020-01-08T22:00:00.000Z\" -> Date object\n  if ([\"date\", \"datetime\"].includes(fieldType) && val && !(val instanceof Date)) {\n    try {\n      const dateVal = new Date(val);\n      if (dateVal instanceof Date && dateVal.toISOString() === val) {\n        val = dateVal;\n      }\n    } catch(e) {\n      meta.errors.push(`Can't convert value ${val} as Date`);\n      val = undefined;\n    }\n  }\n\n  // Date object -> formatted string\n  if (val instanceof Date && fieldConfig) {\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      val = moment(val).format(valueFormat);\n    }\n  }\n\n  let asyncListValues;\n  if (val && fieldConfig?.fieldSettings?.asyncFetch) {\n    const vals = Array.isArray(val) ? val : [val];\n    asyncListValues = vals;\n  }\n\n  return {\n    valueSrc: \"value\",\n    value: val,\n    valueType: widgetConfig?.type,\n    asyncListValues\n  };\n};\n\nconst convertFieldRhs = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (conv.varKeys.includes(op) && typeof vals[0] == \"string\") {\n    const field = normalizeField(config, vals[0], parentField);\n    const fieldConfig = getFieldConfig(config, field);\n    if (!fieldConfig && !meta.settings?.allowUnknownFields) {\n      meta.errors.push(`No config for field ${field}`);\n      return undefined;\n    }\n\n    return {\n      valueSrc: \"field\",\n      value: field,\n      valueType: fieldConfig?.type,\n    };\n  }\n\n  return undefined;\n};\n\nconst convertLhs = (isGroup0, jlField, args, conv, config, not = null, fieldConfig = null, meta, parentField = null) => {\n  let k = Object.keys(jlField)[0];\n  let v = Object.values(jlField)[0];\n\n  const _parse = (k, v) => {\n    return convertFieldLhs(k, v, conv, config, not, meta, parentField)\n    || convertFuncLhs(k, v, conv, config, not, fieldConfig, meta, parentField);\n  };\n\n  const beforeErrorsCnt = meta.errors.length;\n  let field, fieldSrc, having, isGroup;\n  const parsed = _parse(k, v);\n  if (parsed) {\n    field = parsed.field;\n    fieldSrc = parsed.fieldSrc;\n  }\n  if (isGroup0) {\n    isGroup = true;\n    having = args[0];\n    args = [];\n  }\n  // reduce/filter for group ext\n  if (k == \"reduce\" && Array.isArray(v) && v.length == 3) {\n    let [filter, acc, init] = v;\n    if (isJsonLogic(filter) && init == 0\n      && isJsonLogic(acc)\n      && Array.isArray(acc[\"+\"]) && acc[\"+\"][0] == 1\n      && isJsonLogic(acc[\"+\"][1]) && acc[\"+\"][1][\"var\"] == \"accumulator\"\n    ) {\n      k = Object.keys(filter)[0];\n      v = Object.values(filter)[0];\n      if (k == \"filter\") {\n        let [group, filter] = v;\n        if (isJsonLogic(group)) {\n          k = Object.keys(group)[0];\n          v = Object.values(group)[0];\n          const parsedGroup = _parse(k, v);\n          if (parsedGroup) {\n            field = parsedGroup.field;\n            fieldSrc = parsedGroup.fieldSrc;\n            having = filter;\n            isGroup = true;\n          }\n        }\n      } else {\n        const parsedGroup = _parse(k, v);\n        if (parsedGroup) {\n          field = parsedGroup.field;\n          fieldSrc = parsedGroup.fieldSrc;\n          isGroup = true;\n        }\n      }\n    }\n  }\n  const afterErrorsCnt = meta.errors.length;\n\n  if (!field && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Unknown LHS ${JSON.stringify(jlField)}`);\n  }\n  if (!field) return;\n\n  return {\n    field, fieldSrc, having, isGroup, args\n  };\n};\n\nconst convertFieldLhs = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (!Array.isArray(vals))\n    vals = [ vals ];\n  const parsed = convertFieldRhs(op, vals, conv, config, not, meta, parentField);\n  if (parsed) {\n    return {\n      fieldSrc: \"field\",\n      field: parsed.value,\n    };\n  }\n  return undefined;\n};\n\nconst convertFuncLhs = (op, vals, conv, config, not, fieldConfig = null, meta, parentField = null) => {\n  const parsed = convertFuncRhs(op, vals, conv, config, not, fieldConfig, meta, parentField);\n  if (parsed) {\n    return {\n      fieldSrc: \"func\",\n      field: parsed.value,\n    };\n  }\n  return undefined;\n};\n\nconst convertFuncRhs = (op, vals, conv, config, not, fieldConfig = null, meta, parentField = null) => {\n  if (!op) return undefined;\n  let func, argsArr, funcKey;\n  const jsonLogicIsMethod = (op == \"method\");\n  if (jsonLogicIsMethod) {\n    let obj, opts;\n    [obj, func, ...opts] = vals;\n    argsArr = [obj, ...opts];\n  } else {\n    func = op;\n    argsArr = vals;\n  }\n\n  const fk = (jsonLogicIsMethod ? \"#\" : \"\") + func;\n  const returnType = fieldConfig?.type || fieldConfig?.returnType;\n  const funcKeys = (conv.funcs[fk] || []).filter(k => \n    (fieldConfig ? getFuncConfig(config, k).returnType == returnType : true)\n  );\n  if (funcKeys.length) {\n    funcKey = funcKeys[0];\n  } else {\n    const v = {[op]: vals};\n\n    for (const [f, fc] of iterateFuncs(config)) {\n      if (fc.jsonLogicImport && (returnType ? fc.returnType == returnType : true)) {\n        let parsed;\n        try {\n          parsed = fc.jsonLogicImport(v);\n        } catch(_e) {\n          // given expression `v` can't be parsed into function\n        }\n        if (parsed) {\n          funcKey = f;\n          argsArr = parsed;\n        }\n      }\n    }\n  }\n  if (!funcKey)\n    return undefined;\n\n  if (funcKey) {\n    const funcConfig = getFuncConfig(config, funcKey);\n    const argKeys = Object.keys(funcConfig.args || {});\n    let argsObj = argsArr.reduce((acc, val, ind) => {\n      const argKey = argKeys[ind];\n      const argConfig = funcConfig.args[argKey];\n      let argVal;\n      if (argConfig) {\n        argVal = convertFromLogic(val, conv, config, \"val\", meta, false, argConfig, null, parentField);\n      }\n      return argVal !== undefined ? {...acc, [argKey]: argVal} : acc;\n    }, {});\n\n    for (let argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      let argVal = argsObj[argKey];\n      if (argVal === undefined) {\n        argVal = argConfig?.defaultValue;\n        if (argVal !== undefined) {\n          argVal = {\n            value: argVal,\n            valueSrc: argVal?.func ? \"func\" : \"value\",\n            valueType: argConfig.type,\n          };\n        }\n        if (argVal === undefined) {\n          if (argConfig?.isOptional) {\n            //ignore\n          } else {\n            meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n            return undefined;\n          }\n        } else {\n          argsObj[argKey] = argVal;\n        }\n      }\n    }\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: argsObj\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  return undefined;\n};\n\n\nconst convertConj = (op, vals, conv, config, not, meta, parentField = null, isRuleGroup = false) => {\n  const conjKey = conv.conjunctions[op];\n  const {fieldSeparator} = config.settings;\n  // const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  // const isParentGroup = parentFieldConfig?.type == \"!group\";\n  if (conjKey) {\n    let type = \"group\";\n    const children = vals\n      .map(v => convertFromLogic(v, conv, config, \"rule\", meta, false, null, null, parentField))\n      .filter(r => r !== undefined)\n      .reduce((acc, r) => ({...acc, [r.id] : r}), {});\n    const complexFields = Object.values(children)\n      .map(v => v?.properties?.fieldSrc == \"field\" && v?.properties?.field)\n      .filter(f => f?.includes?.(fieldSeparator));\n    const complexFieldsGroupAncestors = Object.fromEntries(\n      arrayUniq(complexFields).map(f => {\n        const parts = f.split(fieldSeparator);\n        const ancs = Object.fromEntries(\n          parts.slice(0, -1)\n            .map((f, i, parts) => [...parts.slice(0, i), f])\n            .map(fp => [fp.join(fieldSeparator), getFieldConfig(config, fp)])\n            .filter(([_f, fc]) => fc?.type == \"!group\")\n        );\n        return [f, Object.keys(ancs)];\n      })\n    );\n    // const childrenInRuleGroup = Object.values(children)\n    //   .map(v => v?.properties?.fieldSrc == \"field\" && v?.properties?.field)\n    //   .map(f => complexFieldsGroupAncestors[f])\n    //   .filter(ancs => ancs && ancs.length);\n    // const usedRuleGroups = arrayUniq(Object.values(complexFieldsGroupAncestors).flat());\n    // const usedTopRuleGroups = topLevelFieldsFilter(usedRuleGroups);\n    \n    let properties = {\n      conjunction: conjKey,\n      not: not\n    };\n    const id = uuid();\n\n    let children1 = {};\n    let groupToId = {};\n    Object.entries(children).map(([k, v]) => {\n      if (v?.type == \"group\" || v?.type == \"rule_group\") {\n        // put as-is\n        children1[k] = v;\n      } else {\n        const field = v?.properties?.field;\n        const groupAncestors = complexFieldsGroupAncestors[field] || [];\n        const groupField = groupAncestors[groupAncestors.length - 1];\n        if (!groupField) {\n          // not in rule_group (can be simple field or in struct) - put as-is\n          if (v) {\n            children1[k] = v;\n          }\n        } else {\n          // wrap field in rule_group (with creating hierarchy if need)\n          let ch = children1;\n          let parentFieldParts = getFieldParts(parentField, config);\n          const groupPath = getFieldParts(groupField, config);\n          const isInParent = shallowEqual(parentFieldParts, groupPath.slice(0, parentFieldParts.length));\n          if (!isInParent)\n            parentFieldParts = []; // should not be\n          const traverseGroupFields = groupField\n            .split(fieldSeparator)\n            .slice(parentFieldParts.length)\n            .map((f, i, parts) => [...parentFieldParts, ...parts.slice(0, i), f].join(fieldSeparator))\n            .map((f) => ({f, fc: getFieldConfig(config, f) || {}}))\n            .filter(({fc}) => (fc.type != \"!struct\"));\n          traverseGroupFields.map(({f: gf, fc: gfc}, i) => {\n            let groupId = groupToId[gf];\n            if (!groupId) {\n              groupId = uuid();\n              groupToId[gf] = groupId;\n              ch[groupId] = {\n                type: \"rule_group\",\n                id: groupId,\n                children1: {},\n                properties: {\n                  conjunction: conjKey,\n                  not: false,\n                  field: gf,\n                  fieldSrc: \"field\",\n                  mode: gfc.mode,\n                }\n              };\n            }\n            ch = ch[groupId].children1;\n          });\n          ch[k] = v;\n        }\n      }\n    });\n\n    // tip: for isRuleGroup=true correct type and properties will be set out of this func\n\n    return {\n      type: type,\n      id: id,\n      children1: children1,\n      properties: properties\n    };\n  }\n\n  return undefined;\n};\n\n\n// const topLevelFieldsFilter = (fields) => {\n//   let arr = [...fields].sort((a, b) => (a.length - b.length));\n//   for (let i = 0 ; i < arr.length ; i++) {\n//     for (let j = i + 1 ; j < arr.length ; j++) {\n//       if (arr[j].indexOf(arr[i]) == 0) {\n//         // arr[j] is inside arr[i] (eg. \"a.b\" inside \"a\")\n//         arr.splice(j, 1);\n//         j--;\n//       }\n//     }\n//   }\n//   return arr;\n// };\n\nconst wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj) => {\n  if (!rule) return undefined;\n  return {\n    type: \"rule_group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n      not: false,\n      field: parentField,\n    }\n  };\n};\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not\n    }\n  };\n};\n\nconst parseRule = (op, arity, vals, parentField, conv, config, meta) => {\n  const submeta = createMeta(meta);\n  let res = _parseRule(op, arity, vals, parentField, conv, config, false, submeta);\n  if (!res) {\n    // try reverse\n    res = _parseRule(op, arity, vals, parentField, conv, config, true, createMeta(meta));\n  }\n  if (!res) {\n    meta.errors.push(submeta.errors.join(\"; \") || `Unknown op ${op}/${arity}`);\n    return undefined;\n  }\n  \n  return res;\n};\n\nconst _parseRule = (op, arity, vals, parentField, conv, config, isRevArgs, meta) => {\n  // config.settings.groupOperators are used for group count (cardinality = 0 is exception)\n  // but don't confuse with \"all-in\" or \"some-in\" for multiselect\n  const isAllOrSomeInForMultiselect\n    = (op == \"all\" || op == \"some\")\n    && isJsonLogic(vals[1])\n    && Object.keys(vals[1])[0] == \"in\"\n    && vals[1][\"in\"][0]?.[\"var\"] === \"\";\n  const isGroup0 = !isAllOrSomeInForMultiselect && config.settings.groupOperators.includes(op);\n  const eqOps = [\"==\", \"!=\"];\n  let cardinality = isGroup0 ? 0 : arity - 1;\n  if (isGroup0)\n    cardinality = 0;\n  else if (eqOps.includes(op) && cardinality == 1 && vals[1] === null) {\n    arity = 1;\n    cardinality = 0;\n    vals = [vals[0]];\n  }\n\n  const opk = op + \"/\" + cardinality;\n  let opKeys = conv.operators[(isRevArgs ? \"#\" : \"\") + opk];\n  if (!opKeys)\n    return;\n  \n  let jlField, jlArgs = [];\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  if (rangeOps.includes(op) && arity == 3) {\n    jlField = vals[1];\n    jlArgs = [ vals[0], vals[2] ];\n  } else if (isRevArgs) {\n    jlField = vals[1];\n    jlArgs = [ vals[0] ];\n  } else {\n    [jlField, ...jlArgs] = vals;\n  }\n\n  if (!isJsonLogic(jlField)) {\n    meta.errors.push(`Incorrect operands for ${op}: ${JSON.stringify(vals)}`);\n    return;\n  }\n\n  const lhs = convertLhs(isGroup0, jlField, jlArgs, conv, config, null, null, meta, parentField);\n  if (!lhs) return;\n  const {\n    field, fieldSrc, having, isGroup, args\n  } = lhs;\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig && !meta.settings?.allowUnknownFields) {\n    meta.errors.push(`No config for LHS ${field}`);\n    return;\n  }\n\n  let opKey = opKeys[0];\n  if (opKeys.length > 1 && fieldConfig && fieldConfig.operators) {\n    // eg. for \"equal\" and \"select_equals\"\n    opKeys = opKeys\n      .filter(k => fieldConfig.operators.includes(k));\n    if (opKeys.length == 0) {\n      meta.errors.push(`No corresponding ops for LHS ${field}`);\n      return;\n    }\n    opKey = opKeys[0];\n  }\n  \n  return {\n    field, fieldSrc, fieldConfig, opKey, args, having\n  };\n};\n\nconst convertOp = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (!op) return undefined;\n\n  const arity = vals.length;\n  if ((op == \"all\" || op == \"some\") && isJsonLogic(vals[1])) {\n    // special case for \"all-in\" and \"some-in\"\n    const op2 = Object.keys(vals[1])[0];\n    const isEmptyVar = vals[1][op2][0]?.[\"var\"] === \"\";\n    if (op2 == \"in\" && isEmptyVar) {\n      vals = [\n        vals[0],\n        vals[1][op2][1]\n      ];\n      op = op + \"-\" + op2; // \"all-in\" and \"some-in\"\n    }\n  }\n\n  const parseRes = parseRule(op, arity, vals, parentField, conv, config, meta);\n  if (!parseRes) return undefined;\n  let {field, fieldSrc, fieldConfig, opKey, args, having} = parseRes;\n  let opConfig = config.operators[opKey];\n\n  // Group component in array mode can show NOT checkbox, so do nothing in this case\n  // Otherwise try to revert\n  const showNot = fieldConfig?.showNot !== undefined ? fieldConfig.showNot : config.settings.showNot; \n  let canRev = true;\n  // if (fieldConfig.type == \"!group\" && fieldConfig.mode == \"array\" && showNot)\n  //   canRev = false;\n\n  let conj;\n  let havingVals;\n  let havingNot = false;\n  if (fieldConfig?.type == \"!group\" && having) {\n    conj = Object.keys(having)[0];\n    havingVals = having[conj];\n    if (!Array.isArray(havingVals))\n      havingVals = [ havingVals ];\n\n    // Preprocess \"!\": Try to reverse op in single rule in having\n    // Eg. use `not_equal` instead of `not` `equal`\n    const isEmptyOp = conj == \"!\" && (havingVals.length == 1 && havingVals[0] && isJsonLogic(havingVals[0]) && conv.varKeys.includes(Object.keys(havingVals[0])[0]));\n    if (conj == \"!\" && !isEmptyOp) {\n      havingNot = true;\n      having = having[\"!\"];\n      conj = Object.keys(having)[0];\n      havingVals = having[conj];\n      if (!Array.isArray(havingVals))\n        havingVals = [ havingVals ];\n    }\n  }\n\n  // Use reversed op\n  if (not && canRev && opConfig.reversedOp) {\n    not = false;\n    opKey = opConfig.reversedOp;\n    opConfig = config.operators[opKey];\n  }\n\n  const widget = getWidgetForFieldOp(config, field, opKey, null);\n\n  const convertedArgs = args\n    .map(v => convertFromLogic(v, conv, config, \"val\", meta, false, fieldConfig, widget, parentField));\n  if (convertedArgs.filter(v => v === undefined).length) {\n    //meta.errors.push(`Undefined arg for field ${field} and op ${opKey}`);\n    return undefined;\n  }\n\n  let res;\n\n  let fieldType = fieldConfig?.type;\n  if (fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n\n  if (fieldConfig?.type == \"!group\" && having) {\n    if (conv.conjunctions[conj] !== undefined) {\n      // group\n      res = convertConj(conj, havingVals, conv, config, havingNot, meta, field, true);\n      havingNot = false;\n    } else {\n      // need to be wrapped in `rule_group`\n      const rule = convertOp(conj, havingVals, conv, config, havingNot, meta, field);\n      havingNot = false;\n      res = wrapInDefaultConjRuleGroup(rule, field, fieldConfig, config, conv.conjunctions[\"and\"]);\n    }\n    if (!res)\n      return undefined;\n    \n    res.type = \"rule_group\";\n    Object.assign(res.properties, {\n      field: field,\n      mode: fieldConfig.mode,\n      operator: opKey,\n    });\n    if (fieldConfig.mode == \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n    if (not) {\n      res = wrapInDefaultConj(res, config, not);\n    }\n  } else if (fieldConfig?.type == \"!group\" && !having) {\n    res = {\n      type: \"rule_group\",\n      id: uuid(),\n      children1: {},\n      properties: {\n        conjunction: defaultGroupConjunction(config, fieldConfig),\n        not: not,\n        mode: fieldConfig.mode,\n        field: field,\n        operator: opKey,\n      }\n    };\n    if (fieldConfig.mode == \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n  } else {\n    const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n    const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n    res = {\n      type: \"rule\",\n      id: uuid(),\n      properties: {\n        field: field,\n        fieldSrc: fieldSrc,\n        operator: opKey,\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n        ...(asyncListValues ? {asyncListValues} : {}),\n      }\n    };\n    if (not) {\n      //meta.errors.push(`No rev op for ${opKey}`);\n      res = wrapInDefaultConj(res, config, not);\n    }\n  }\n\n  return res;\n};\n\n","import SqlStringOrig from \"sqlstring\";\n\nexport const SqlString = SqlStringOrig;\n\nSqlString.trim = (val) => {\n  if (val.charAt(0) == \"'\")\n    return val.substring(1, val.length-1);\n  else\n    return val;\n};\n\nSqlString.escapeLike = (val, any_start = true, any_end = true) => {\n  // normal escape\n  let res = SqlString.escape(val);\n  // unwrap ''\n  res = SqlString.trim(res);\n  // escape % and _\n  res = res.replace(/[%_]/g, \"\\\\$&\");\n  // wrap with % for LIKE\n  res = (any_start ? \"%\" : \"\") + res + (any_end ? \"%\" : \"\");\n  // wrap ''\n  res = \"'\" + res + \"'\";\n  return res;\n};\n\nexport const sqlEmptyValue = (fieldDef) => {\n  let v = \"''\";\n  const type = fieldDef?.type;\n  if (type == \"date\") {\n    //todo: support other SQL dialects?  0001-01-01 for oracle, 1970-01-01 for timestamp\n    v = \"'0000-00-00'\";\n  } else if (type == \"datetime\") {\n    v = \"'0000-00-00 00:00'\";\n  } else if (type == \"time\") {\n    v = \"'00:00'\";\n  } else if (type == \"number\") {\n    v = \"0\";\n  }\n  return v;\n};\n\nexport const mongoEmptyValue = (fieldDef) => {\n  let v = \"\";\n  const type = fieldDef?.type;\n  if (type == \"number\") {\n    v = 0;\n  }\n  return v;\n};\n\n\nconst spelEscapeString = (val) => {\n  // Strings are delimited by single quotes. To put a single quote itself in a string, use two single quote characters. \n  return \"'\" + val.replace(/'/g, \"''\") + \"'\";\n};\n\nconst spelInlineList = (vals, toArray = false) => {\n  // find java type of values\n  let javaType;\n  let jt;\n  const numberJavaTypes = [\"int\", \"float\"];\n  vals.map(v => {\n    if (v !== undefined && v !== null) {\n      if (typeof v === \"string\") {\n        jt = \"String\";\n      } else if (typeof v === \"number\") {\n        jt = Number.isInteger(v) ? \"int\" : \"float\";\n      } else throw new Error(`spelEscape: Can't use value ${v} in array`);\n\n      if (!javaType) {\n        javaType = jt;\n      } else if (javaType != jt) {\n        if (numberJavaTypes.includes(javaType) && numberJavaTypes.includes(jt)) {\n          // found int and float in collecton - use float\n          javaType = \"float\";\n        } else throw new Error(`spelEscape: Can't use different types in array: found ${javaType} and ${jt}`);\n      }\n    }\n  });\n  if (!javaType) {\n    javaType = \"String\"; //default if empty array\n  }\n\n  // for floats we should add 'f' to all items\n  let escapedVals;\n  if (javaType == \"float\") {\n    escapedVals = vals.map(v => spelEscape(v, true));\n  } else {\n    escapedVals = vals.map(v => spelEscape(v));\n  }\n\n  // build inline list or array\n  let res;\n  if (toArray) {\n    res = `new ${javaType}[]{${escapedVals.join(\", \")}}`;\n  } else {\n    res = `{${escapedVals.join(\", \")}}`;\n  }\n  \n  return res;\n};\n\nexport const spelFixList = (val) => {\n  // `{1,2}.contains(1)` NOT works\n  // `{1,2}.?[true].contains(1)` works\n  return `${val}.?[true]`;\n};\n\nexport const spelEscape = (val, numberToFloat = false, arrayToArray = false) => {\n  // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-ref-literal\n  if (val === undefined || val === null) {\n    return \"null\";\n  }\n  switch (typeof val) {\n  case \"boolean\":\n    return (val) ? \"true\" : \"false\";\n  case \"number\":\n    if (!Number.isFinite(val) || isNaN(val))\n      return undefined;\n    return val + (!Number.isInteger(val) || numberToFloat ? \"f\" : \"\");\n  case \"object\":\n    if (Array.isArray(val)) {\n      return spelInlineList(val, arrayToArray);\n    } else {\n      // see `spelFormatValue` for Date, LocalTime\n      throw new Error(\"spelEscape: Object is not supported\");\n    }\n  default: return spelEscapeString(val);\n  }\n};\n\nexport const spelFormatConcat = (parts) => {\n  if (parts && Array.isArray(parts) && parts.length) {\n    return parts\n      .map(part => {\n        if (part.type == \"const\") {\n          return spelEscape(part.value);\n        } else if (part.type == \"property\") {\n          return \"\"+part.value;\n        } else if (part.type == \"variable\") {\n          return \"#\"+part.value;\n        } return undefined;\n      })\n      .filter(r => r != undefined)\n      .join(\" + \");\n  } else {\n    return \"null\";\n  }\n};\n\n// `val` is {value, valueType, valueSrc}\n// If `valueType` == \"case_value\", `value` is array of such items (to be considered as concatenation)\nexport const spelImportConcat = (val) => {\n  if (val == undefined)\n    return [undefined, []];\n  let errors = [];\n  const parts = val.valueType == \"case_value\" ? val.value : [val];\n  const res = parts.map(child => {\n    if (child.valueSrc == \"value\") {\n      if (child.value === null) {\n        return undefined;\n      } else {\n        return {\n          type: \"const\", \n          value: child.value\n        };\n      }\n    } else if (child.valueSrc == \"field\") {\n      return {\n        type: (child.isVariable ? \"variable\" : \"property\"), \n        value: child.value\n      };\n    } else {\n      errors.push(`Unsupported valueSrc ${child.valueSrc} in concatenation`);\n    }\n  }).filter(v => v != undefined);\n  return [res, errors];\n};\n\nexport const stringifyForDisplay = (v) => (v == null ? \"NULL\" : v.toString());\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, extendConfig, getFieldParts\n} from \"../utils/configUtils\";\nimport {\n  getWidgetForFieldOp, formatFieldName, getFieldPartsConfigs, completeValue\n} from \"../utils/ruleUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, logger, widgetDefKeysToOmit, opDefKeysToOmit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport {spelEscape} from \"../utils/export\";\n\n// https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions\n\nexport const compareToSign = \"${0}.compareTo(${1})\";\nconst TypesWithCompareTo = {\n  datetime: true,\n  time: true,\n  date: true,\n};\n\nexport const spelFormat = (tree, config) => {\n  return _spelFormat(tree, config, false);\n};\n\nexport const _spelFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta, null);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SpEL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, parentField);\n  } else if (type == \"switch_group\") {\n    return formatSwitch(item, config, meta, parentField);\n  } else if (type == \"case_group\") {\n    return formatCase(item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\nconst formatCase = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  if (type != \"case_group\") {\n    meta.errors.push(`Unexpected child of type ${type} inside switch`);\n    return undefined;\n  }\n  const properties = item.get(\"properties\") || new Map();\n  \n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, null, parentField, \"!case_value\"\n  );\n\n  const cond = formatGroup(item, config, meta, parentField);\n  return [cond, formattedValue];\n};\n\nconst formatSwitch = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  if (!children) return undefined;\n  const cases = children\n    .map((currentChild) => formatCase(currentChild, config, meta, null))\n    .filter((currentChild) => typeof currentChild !== \"undefined\")\n    .valueSeq()\n    .toArray();\n  \n  if (!cases.length) return undefined;\n\n  if (cases.length == 1 && !cases[0][0]) {\n    // only 1 case without condition\n    return cases[0][1];\n  }\n\n  let filteredCases = [];\n  for (let i = 0 ; i < cases.length ; i++) {\n    if (i != (cases.length - 1) && !cases[i][0]) {\n      meta.errors.push(`No condition for case ${i}`);\n    } else {\n      filteredCases.push(cases[i]);\n      if (i == (cases.length - 1) && cases[i][0]) {\n        // no default - add null as default\n        filteredCases.push([undefined, null]);\n      }\n    }\n  }\n\n  let left = \"\", right = \"\";\n  for (let i = 0 ; i < filteredCases.length ; i++) {\n    let [cond, value] = filteredCases[i];\n    if (value == undefined)\n      value = \"null\";\n    if (cond == undefined)\n      cond = \"true\";\n    if (i != (filteredCases.length - 1)) {\n      left += `(${cond} ? ${value} : `;\n      right += \")\";\n    } else {\n      left += `${value}`;\n    }\n  }\n  return left + right;\n};\n\nconst formatGroup = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const not = properties.get(\"not\");\n\n  const isRuleGroup = type === \"rule_group\";\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const groupField = isRuleGroupArray ? field : parentField;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const isSpelArray = groupFieldDef.isSpelArray;\n  const {fieldSeparator} = config.settings;\n  \n  // check op for reverse\n  let groupOperator = properties.get(\"operator\");\n  if (!groupOperator && (!mode || mode == \"some\")) {\n    groupOperator = \"some\";\n  }\n  const realGroupOperator = checkOp(config, groupOperator, field);\n  const isGroupOpRev = realGroupOperator != groupOperator;\n  const realGroupOperatorDefinition = groupOperator && getOperatorConfig(config, realGroupOperator, field) || null;\n  const isGroup0 = isRuleGroup && (!realGroupOperator || realGroupOperatorDefinition.cardinality == 0);\n  \n  // build value for aggregation op\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realGroupOperator, parentField, null\n  );\n  \n  // build filter in aggregation\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n\n  if (isRuleGroupArray && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size)\n      return undefined;\n  }\n\n  const omitBrackets = isRuleGroup;\n  const filter = list.size ? conjunctionDefinition.spelFormatConj(list, conjunction, not, omitBrackets) : null;\n\n  // build result\n  let ret;\n  if (isRuleGroupArray) {\n    const formattedField = formatField(meta, config, field, parentField);\n    const sep = fieldSeparator || \".\";\n    const getSize = sep + (isSpelArray ? \"length\" : \"size()\");\n    const fullSize = `${formattedField}${getSize}`;\n    // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-collection-selection\n    const filteredSize = filter ? `${formattedField}.?[${filter}]${getSize}` : fullSize;\n    const groupValue = isGroup0 ? fullSize : formattedValue;\n    // format expression\n    ret = formatExpression(\n      meta, config, properties, filteredSize, groupValue, realGroupOperator, valueSrc, valueType, isGroupOpRev\n    );\n  } else {\n    ret = filter;\n  }\n  \n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, valueType) => {\n  const spelOp = operatorDefinition.spelOp;\n  if (!spelOp) return undefined;\n  const isSign = spelOp.includes(\"${0}\");\n  const isCompareTo = TypesWithCompareTo[valueType];\n  let sop = spelOp;\n  let fn;\n  const cardinality = getOpCardinality(operatorDefinition);\n  if (isCompareTo) {\n    // date1.compareTo(date2) >= 0\n    //   instead of\n    // date1 >= date2\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const compareRes = compareToSign.replace(/\\${(\\w+)}/g, (_, k) => (k == 0 ? field : (cardinality > 1 ? values[k-1] : values)));\n      return `${compareRes} ${sop} 0`;\n    };\n  } else if (isSign) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return spelOp.replace(/\\${(\\w+)}/g, (_, k) => (k == 0 ? field : (cardinality > 1 ? values[k-1] : values)));\n    };\n  } else if (cardinality == 0) {\n    // should not be\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sop} ${values}`;\n    };\n  }\n  return fn;\n};\n\nconst formatExpression = (meta, config, properties, formattedField, formattedValue, operator, valueSrc, valueType, isRev = false) => {\n  const field = properties.get(\"field\");\n  const opDef = getOperatorConfig(config, operator, field) || {};\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorOptions = properties.get(\"operatorOptions\");\n\n  //find fn to format expr\n  const fn = opDef.spelFormatOp || buildFnToFormatOp(operator, opDef, valueType);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n\n  //rev\n  if (isRev) {\n    ret = config.settings.spelFormatReverse(ret);\n  }\n\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrc}`);\n  }\n\n  return ret;\n};\n\nconst checkOp = (config, operator, field) => {\n  if (!operator) return undefined;\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n\n  let isRev = false;\n  const canFormatOp = opDef.spelOp || opDef.spelFormatOp;\n  const canFormatRevOp = revOpDef.spelOp || revOpDef.spelFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n  return operator;\n};\n\nconst formatRule = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  if (field == null || operator == null)\n    return undefined;\n\n  // check op for reverse\n  const realOp = checkOp(config, operator, field);\n  if (!realOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  const isRev = realOp != operator;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realOp, parentField, null\n  );\n  if (formattedValue === undefined)\n    return undefined;\n      \n  //format field\n  const formattedField = formatLhs(meta, config, field, fieldSrc, parentField);\n  if (formattedField === undefined)\n    return undefined;\n  \n  // format expression\n  let res = formatExpression(\n    meta, config, properties, formattedField, formattedValue, realOp, valueSrc, valueType, isRev\n  );\n  return res;\n};\n\nconst formatLhs = (meta, config, field, fieldSrc, parentField = null) => {\n  if (fieldSrc === \"func\")\n    return formatFunc(meta, config, field, parentField);\n  else\n    return formatField(meta, config, field, parentField);\n};\n\nconst formatItemValue = (config, properties, meta, operator, parentField, expectedValueType = null) => {\n  let field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  if (expectedValueType == \"!case_value\" || iValueType && iValueType.get(0) == \"case_value\") {\n    field = \"!case_value\";\n  }\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const cardinality = getOpCardinality(operatorDefinition);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  \n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  \n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n      const fv = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDefinition, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (!( fvalue.size < cardinality || hasUndefinedValues )) {\n      formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n    }\n  }\n  \n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc === \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc === \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else {\n    if (typeof fieldWidgetDef.spelFormatValue === \"function\") {\n      const fn = fieldWidgetDef.spelFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = spelEscape(currentValue);\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field, parentField = null) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsConfigs = getFieldPartsConfigs(field, config, parentField);\n  const formatFieldFn = config.settings.formatSpelField;\n  const fieldName = formatFieldName(field, config, meta, parentField);\n  const fieldPartsMeta = fieldPartsConfigs.map(([key, cnf, parentCnf]) => {\n    let parent;\n    if (parentCnf) {\n      if (parentCnf.type == \"!struct\" || parentCnf.type == \"!group\" && parentCnf.mode == \"struct\")\n        parent = cnf.isSpelMap ? \"map\" : \"class\";\n      else if (parentCnf.type == \"!group\")\n        parent = cnf.isSpelItemMap ? \"[map]\" : \"[class]\";\n      else\n        parent = \"class\";\n    }\n    const isSpelVariable = cnf?.isSpelVariable;\n    return {\n      key,\n      parent,\n      isSpelVariable,\n      fieldSeparator\n    };\n  });\n  const formattedField = formatFieldFn.call(config.ctx, fieldName, parentField, fieldParts, fieldPartsMeta, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const doEscape = argConfig.spelEscapeForFormat ?? true;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = omit(getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc), [\"factory\"]);\n\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, null, null, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = omit( getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc), [\"factory\"] );\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, null, null, parentField, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = doEscape ? finalFormattedVal : (argValue ?? defaultValue);\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n  \n  let ret;\n  if (typeof funcConfig.spelFormatFunc === \"function\") {\n    const fn = funcConfig.spelFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.spelFunc) {\n    // fill arg values\n    ret = funcConfig.spelFunc\n      .replace(/\\${(\\w+)}/g, (found, argKey) => {\n        return formattedArgs[argKey] ?? found;\n      });\n    // remove optional args (from end only)\n    const optionalArgs = Object.keys(funcConfig.args || {})\n      .reverse()\n      .filter(argKey => !!funcConfig.args[argKey].isOptional);\n    for (const argKey of optionalArgs) {\n      if (formattedArgs[argKey] != undefined)\n        break;\n      ret = ret.replace(new RegExp(\"(, )?\" + \"\\\\${\" + argKey + \"}\", \"g\"), \"\");\n    }\n    // missing required arg vals\n    ret = ret.replace(/\\${(\\w+)}/g, \"null\");\n  } else {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n  }\n  return ret;\n};\n","import { SpelExpressionEvaluator } from \"spel2js\";\nimport uuid from \"../utils/uuid\";\nimport {getFieldConfig, getFuncConfig, extendConfig, normalizeField, iterateFuncs} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {loadTree} from \"./tree\";\nimport {defaultConjunction, defaultGroupConjunction} from \"../utils/defaultUtils\";\nimport {getOpCardinality, logger, isJsonCompatible} from \"../utils/stuff\";\nimport moment from \"moment\";\nimport {compareToSign} from \"../export/spel\";\n\n// https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions\n\n// spel type => raqb type\nconst SpelPrimitiveTypes = {\n  number: \"number\",\n  string: \"text\",\n  boolean: \"boolean\",\n  null: \"null\" // should not be\n};\n// spel class => raqb type\nconst SpelPrimitiveClasses = {\n  String: \"text\",\n};\nconst ListValueType = \"multiselect\";\nconst isFuncableProperty = (p) => [\"length\"].includes(p);\n\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const loadFromSpel = (logicTree, config) => {\n  return _loadFromSpel(logicTree, config, true);\n};\n\nexport const _loadFromSpel = (spelStr, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  \n  let compiledExpression;\n  let convertedObj;\n  let jsTree = undefined;\n  try {\n    const compileRes = SpelExpressionEvaluator.compile(spelStr);\n    compiledExpression = compileRes._compiledExpression;\n  } catch (e) {\n    meta.errors.push(e);\n  }\n  \n  if (compiledExpression) {\n    //logger.debug(\"compiledExpression:\", compiledExpression);\n    convertedObj = postprocessCompiled(compiledExpression, meta);\n    logger.debug(\"convertedObj:\", convertedObj, meta);\n\n    jsTree = convertToTree(convertedObj, conv, extendedConfig, meta);\n    if (jsTree && jsTree.type != \"group\" && jsTree.type != \"switch_group\") {\n      jsTree = wrapInDefaultConj(jsTree, extendedConfig, convertedObj[\"not\"]);\n    }\n    logger.debug(\"jsTree:\", jsTree);\n  }\n\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from SpEL:\", meta.errors);\n    return immTree;\n  }\n};\n\nconst postprocessCompiled = (expr, meta, parentExpr = null) => {\n  const type = expr.getType();\n  let children = expr.getChildren().map(child => postprocessCompiled(child, meta, expr));\n\n  // flatize OR/AND\n  if (type == \"op-or\" || type == \"op-and\") {\n    children = children.reduce((acc, child) => {\n      const canFlatize = child.type == type && !child.not;\n      const flat = canFlatize ? child.children : [child];\n      return [...acc, ...flat];\n    }, []);\n  }\n\n  // unwrap NOT\n  if (type == \"op-not\") {\n    if (children.length != 1) {\n      meta.errors.push(`Operator NOT should have 1 child, but got ${children.length}}`);\n    }\n    return {\n      ...children[0],\n      not: !(children[0].not || false)\n    };\n  }\n\n  if (type == \"compound\") {\n    // remove `.?[true]`\n    children = children.filter(child => {\n      const isListFix = child.type == \"selection\" && child.children.length == 1 && child.children[0].type == \"boolean\" && child.children[0].val == true;\n      return !isListFix;\n    });\n    // aggregation\n    // eg. `results.?[product == 'abc'].length`\n    const selection = children.find(child => \n      child.type == \"selection\"\n    );\n    if (selection && selection.children.length != 1) {\n      meta.errors.push(`Selection should have 1 child, but got ${selection.children.length}`);\n    }\n    const filter = selection ? selection.children[0] : null;\n    let lastChild = children[children.length - 1];\n    const isSize = lastChild.type == \"method\" && lastChild.val.methodName == \"size\" \n      || lastChild.type == \"!func\" && lastChild.methodName == \"size\";\n    const isLength = lastChild.type == \"property\" && lastChild.val == \"length\";\n    const sourceParts = children.filter(child => \n      child !== selection && child !== lastChild\n    );\n    const source = {\n      type: \"compound\",\n      children: sourceParts\n    };\n    const isAggr = (isSize || isLength) && convertPath(sourceParts) != null;\n    if (isAggr) {\n      return {\n        type: \"!aggr\",\n        filter,\n        source\n      };\n    }\n    // remove `#this`, `#root`\n    children = children.filter(child => {\n      const isThis = child.type == \"variable\" && child.val == \"this\";\n      const isRoot = child.type == \"variable\" && child.val == \"root\";\n      return !(isThis || isRoot);\n    });\n    // indexer\n    children = children.map(child => {\n      if (child.type == \"indexer\" && child.children.length == 1) {\n        return {\n          type: \"indexer\", \n          val: child.children[0].val,\n          itype: child.children[0].type\n        };\n      } else {\n        return child;\n      }\n    });\n    // method\n    // if (lastChild.type == \"method\") {\n    //   // seems like obsolete code!\n    //   debugger\n    //   const obj = children.filter(child => \n    //     child !== lastChild\n    //   );\n    //   return {\n    //     type: \"!func\",\n    //     obj,\n    //     methodName: lastChild.val.methodName,\n    //     args: lastChild.val.args\n    //   };\n    // }\n    // !func\n    if (lastChild.type == \"!func\") {\n      const ret = {};\n      let curr = ret;\n      do {\n        Object.assign(curr, lastChild);\n        children = children.filter(child => child !== lastChild);\n        lastChild = children[children.length - 1];\n        if (lastChild?.type == \"!func\") {\n          curr.obj = {};\n          curr = curr.obj;\n        } else {\n          if (children.length > 1) {\n            curr.obj = {\n              type: \"compound\",\n              children\n            };\n          } else {\n            curr.obj = lastChild;\n          }\n        }\n      } while(lastChild?.type == \"!func\");\n      return ret;\n    }\n  }\n\n  // getRaw || getValue\n  let val;\n  try {\n    if (expr.getRaw) { // use my fork\n      val = expr.getRaw();\n    } else if (expr.getValue.length == 0) { // getValue not requires context arg -> can use\n      val = expr.getValue();\n    }\n  } catch(e) {\n    logger.error(\"[spel2js] Error in getValue()\", e);\n  }\n\n  // ternary\n  if (type == \"ternary\") {\n    val = flatizeTernary(children);\n  }\n\n  // convert method/function args\n  if (typeof val === \"object\" && val !== null) {\n    if (val.methodName || val.functionName) {\n      val.args = val.args.map(child => postprocessCompiled(child, meta, expr));\n    }\n  }\n  // convert list\n  if (type == \"list\") {\n    val = val.map(item => postprocessCompiled(item, meta, expr));\n\n    // fix whole expression wrapped in `{}`\n    if (!parentExpr && val.length == 1) {\n      return val[0];\n    }\n  }\n  // convert constructor\n  if (type == \"constructorref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in constructorref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!new\",\n      cls,\n      args\n    };\n  }\n  // convert type\n  if (type == \"typeref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in typeref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const _args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!type\",\n      cls\n    };\n  }\n  // convert function/method\n  if (type == \"function\" || type == \"method\") {\n    // `foo()` is method, `#foo()` is function\n    // let's use common property `methodName` and just add `isVar` for function\n    const {functionName, methodName, args} = val;\n    return {\n      type: \"!func\",\n      methodName: functionName || methodName,\n      isVar: type == \"function\",\n      args\n    };\n  }\n\n  return {\n    type,\n    children,\n    val,\n  };\n};\n\nconst flatizeTernary = (children) => {\n  let flat = [];\n  function _processTernaryChildren(tern) {\n    let [cond, if_val, else_val] = tern;\n    flat.push([cond, if_val]);\n    if (else_val?.type == \"ternary\") {\n      _processTernaryChildren(else_val.children);\n    } else {\n      flat.push([undefined, else_val]);\n    }\n  }\n  _processTernaryChildren(children);\n  return flat;\n};\n\nconst buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (opConfig.spelOps) {\n      // examples: \"==\", \"eq\", \".contains\", \"matches\" (can be used for starts_with, ends_with)\n      opConfig.spelOps.forEach(spelOp => {\n        const opk = spelOp; // + \"/\" + getOpCardinality(opConfig);\n        if (!operators[opk])\n          operators[opk] = [];\n        operators[opk].push(opKey);\n      });\n    } else if (opConfig.spelOp) {\n      const opk = opConfig.spelOp; // + \"/\" + getOpCardinality(opConfig);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else {\n      logger.log(`[spel] No spelOp for operator ${opKey}`);\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.spelConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (const [funcPath, funcConfig] of iterateFuncs(config)) {\n    let fks = [];\n    const {spelFunc} = funcConfig;\n    if (typeof spelFunc === \"string\") {\n      const optionalArgs = Object.keys(funcConfig.args || {})\n        .reverse()\n        .filter(argKey => !!funcConfig.args[argKey].isOptional || funcConfig.args[argKey].defaultValue != undefined);\n      const funcSignMain = spelFunc\n        .replace(/\\${(\\w+)}/g, (_, _k) => \"?\");\n      const funcSignsOptional = optionalArgs\n        .reduce((acc, argKey) => (\n          [\n            ...acc,\n            [\n              argKey,\n              ...(acc[acc.length-1] || []),\n            ]\n          ]\n        ), [])\n        .map(optionalArgKeys => (\n          spelFunc\n            .replace(/(?:, )?\\${(\\w+)}/g, (found, a) => (\n              optionalArgKeys.includes(a) ? \"\" : found\n            ))\n            .replace(/\\${(\\w+)}/g, (_, _k) => \"?\")\n        ));\n      fks = [\n        funcSignMain,\n        ...funcSignsOptional,\n      ];\n    }\n    for (const fk of fks) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcPath);\n    }\n  }\n\n  let valueFuncs = {};\n  for (let w in config.widgets) {\n    const widgetDef = config.widgets[w];\n    const {spelImportFuncs, type} = widgetDef;\n    if (spelImportFuncs) {\n      for (const fk of spelImportFuncs) {\n        if (typeof fk === \"string\") {\n          const fs = fk.replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n          const argsOrder = [...fk.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n          if (!valueFuncs[fs])\n            valueFuncs[fs] = [];\n          valueFuncs[fs].push({\n            w,\n            argsOrder\n          });\n        }\n      }\n    }\n  }\n\n  let opFuncs = {};\n  for (let op in config.operators) {\n    const opDef = config.operators[op];\n    const {spelOp} = opDef;\n    if (spelOp?.includes(\"${0}\")) {\n      const fs = spelOp.replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n      const argsOrder = [...spelOp.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n      if (!opFuncs[fs])\n        opFuncs[fs] = [];\n      opFuncs[fs].push({\n        op,\n        argsOrder\n      });\n    }\n  }\n  // Special .compareTo()\n  const compareToSS = compareToSign.replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n  opFuncs[compareToSS] = [{\n    op: \"!compare\",\n    argsOrder: [\"0\", \"1\"]\n  }];\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    valueFuncs,\n    opFuncs,\n  };\n};\n\nconst convertToTree = (spel, conv, config, meta, parentSpel = null) => {\n  if (!spel) return undefined;\n\n  let res, canParseAsArg = true;\n  if (spel.type.indexOf(\"op-\") === 0 || spel.type === \"matches\") {\n    res = convertOp(spel, conv, config, meta, parentSpel);\n  } else if (spel.type == \"!aggr\") {\n    const groupFieldValue = convertToTree(spel.source, conv, config, meta, {\n      ...spel, \n      _groupField: parentSpel?._groupField\n    });\n    let groupFilter = convertToTree(spel.filter, conv, config, meta, {\n      ...spel, \n      _groupField: groupFieldValue?.value\n    });\n    if (groupFilter?.type == \"rule\") {\n      groupFilter = wrapInDefaultConj(groupFilter, config, spel.filter.not);\n    }\n    res = {\n      groupFilter,\n      groupFieldValue\n    };\n    if (!parentSpel) {\n      // !aggr can't be in root, it should be compared with something\n      res = undefined;\n      meta.errors.push(\"Unexpected !aggr in root\");\n      canParseAsArg = false;\n    }\n  } else if (spel.type == \"ternary\") {\n    const children1 = {};\n    spel.val.forEach(v => {\n      const [cond, val] = v;\n      const caseI = buildCase(cond, val, conv, config, meta, spel);\n      if (caseI) {\n        children1[caseI.id] = caseI;\n      }\n    });\n    res = {\n      type: \"switch_group\",\n      id: uuid(),\n      children1,\n      properties: {}\n    };\n  }\n\n  if (!res && canParseAsArg) {\n    res = convertArg(spel, conv, config, meta, parentSpel);\n  }\n\n  if (res && !res.type && !parentSpel) {\n    // res is not a rule, it's value at root\n    // try to parse whole `\"1\"` as ternary\n    const sw = buildSimpleSwitch(spel, conv, config, meta);\n    if (sw) {\n      res = sw;\n    } else {\n      res = undefined;\n      meta.errors.push(`Can't convert rule of type ${spel.type}, it looks like var/literal`);\n    }\n  }\n  \n  return res;\n};\n\nconst convertOp = (spel, conv, config, meta, parentSpel = null) => {\n  let res;\n\n  let op = spel.type.startsWith(\"op-\") ? spel.type.slice(\"op-\".length) : spel.type;\n\n  // unary\n  const isUnary = (op == \"minus\" || op == \"plus\") && spel.children.length == 1;\n  if (isUnary) {\n    spel.isUnary = true;\n    return convertOp(spel.children[0], conv, config, meta, spel);\n  }\n\n  // between\n  let isBetweenNormal = (op == \"and\" && spel.children.length == 2 && spel.children[0].type == \"op-ge\" && spel.children[1].type == \"op-le\");\n  let isBetweenRev = (op == \"or\" && spel.children.length == 2 && spel.children[0].type == \"op-lt\" && spel.children[1].type == \"op-gt\");\n  let isBetween = isBetweenNormal || isBetweenRev;\n  if (isBetween) {\n    const [left, from] = spel.children[0].children;\n    const [right, to] = spel.children[1].children;\n    const isSameSource = compareArgs(left, right,  spel, conv, config, meta, parentSpel);\n    if (isSameSource) {\n      const _fromValue = from.val;\n      const _toValue = to.val;\n      const oneSpel = {\n        type: \"op-between\",\n        children: [\n          left,\n          from,\n          to\n        ]\n      };\n      return convertOp(oneSpel, conv, config, meta, parentSpel);\n    }\n  }\n\n  // find op\n  let opKeys = conv.operators[op];\n  if (op == \"eq\" && spel.children[1].type == \"null\") {\n    opKeys = [\"is_null\"];\n  } else if (op == \"ne\" && spel.children[1].type == \"null\") {\n    opKeys = [\"is_not_null\"];\n  } else if (op == \"le\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n    opKeys = [\"is_empty\"];\n  } else if (op == \"gt\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n    opKeys = [\"is_not_empty\"];\n  } else if (op == \"between\") {\n    opKeys = [\"between\"];\n  }\n\n  // convert children\n  const convertChildren = () => {\n    let newChildren = spel.children.map(child =>\n      convertToTree(child, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      })\n    );\n    if (newChildren.length >= 2 && newChildren?.[0]?.type == \"!compare\") {\n      newChildren = newChildren[0].children;\n    }\n    return newChildren;\n  };\n\n  if (op == \"and\" || op == \"or\") {\n    const children1 = {};\n    const vals = convertChildren();\n    vals.forEach(v => {\n      if (v) {\n        const id = uuid();\n        v.id = id;\n        if (v.type != undefined) {\n          children1[id] = v;\n        } else {\n          meta.errors.push(`Bad item in AND/OR: ${JSON.stringify(v)}`);\n        }\n      }\n    });\n    res = {\n      type: \"group\",\n      id: uuid(),\n      children1,\n      properties: {\n        conjunction: conv.conjunctions[op],\n        not: spel.not\n      }\n    };\n  } else if (opKeys) {\n    const vals = convertChildren();\n    const fieldObj = vals[0];\n    let convertedArgs = vals.slice(1);\n    const groupField = fieldObj?.groupFieldValue?.value;\n    const opArg = convertedArgs?.[0];\n    \n    let opKey = opKeys[0];\n    if (opKeys.length > 1) {\n      const valueType = vals[0]?.valueType || vals[1]?.valueType;\n      //todo: it's naive, use valueType\n      const field = fieldObj?.value;\n      const widgets = opKeys.map(op => ({op, widget: getWidgetForFieldOp(config, field, op)}));\n      logger.warn(`[spel] Spel operator ${op} can be mapped to ${opKeys}.`,\n        \"widgets:\", widgets, \"vals:\", vals, \"valueType=\", valueType);\n      \n      if (op == \"eq\" || op == \"ne\") {\n        const ws = widgets.find(({ op, widget }) => (widget && widget != \"field\"));\n        if (ws) {\n          opKey = ws.op;\n        }\n      }\n    }\n\n    // some/all/none\n    if (fieldObj?.groupFieldValue) {\n      if (opArg && opArg.groupFieldValue && opArg.groupFieldValue.valueSrc == \"field\" && opArg.groupFieldValue.value == groupField) {\n        // group.?[...].size() == group.size()\n        opKey = \"all\";\n        convertedArgs = [];\n      } else if (opKey == \"equal\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n        opKey = \"none\";\n        convertedArgs = [];\n      } else if (opKey == \"greater\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n        opKey = \"some\";\n        convertedArgs = [];\n      }\n    }\n\n    let canRev = true;\n    let needWrapReverse = false;\n    if (spel.not && canRev) {\n      const opConfig = config.operators[opKey];\n      if (opConfig.reversedOp) {\n        opKey = opConfig.reversedOp;\n        spel.not = false;\n      } else {\n        needWrapReverse = true;\n      }\n    }\n    \n    if (!fieldObj) {\n      // LHS can't be parsed\n    } else if (fieldObj.groupFieldValue) {\n      // 1. group\n      if (fieldObj.groupFieldValue.valueSrc != \"field\") {\n        meta.errors.push(`Expected group field ${JSON.stringify(fieldObj)}`);\n      }\n\n      res = buildRuleGroup(fieldObj, opKey, convertedArgs, config, meta);\n    } else {\n      // 2. not group\n      if (fieldObj.valueSrc != \"field\" && fieldObj.valueSrc != \"func\") {\n        meta.errors.push(`Expected field/func at LHS, but got ${JSON.stringify(fieldObj)}`);\n      }\n      const field = fieldObj.value;\n      res = buildRule(config, meta, field, opKey, convertedArgs);\n    }\n\n    if (needWrapReverse) {\n      if (res.type !== \"group\") {\n        res = wrapInDefaultConj(res, config, spel.not);\n      } else {\n        res.properties.not = !res.properties.not;\n      }\n    }\n  } else {\n    if (!parentSpel) {\n      // try to parse whole `\"str\" + prop + #var` as ternary\n      res = buildSimpleSwitch(spel, conv, config, meta);\n    }\n    // if (!res) {\n    //   meta.errors.push(`Can't convert op ${op}`);\n    // }\n  }\n  return res;\n};\n\nconst convertPath = (parts, meta = {}, expectingField = false) => {\n  let isError = false;\n  const res = parts.map(c => {\n    if (c.type == \"variable\" || c.type == \"property\" || c.type == \"indexer\" && c.itype == \"string\") {\n      return c.val;\n    } else {\n      isError = true;\n      expectingField && meta?.errors?.push?.(`Unexpected item in field path compound: ${JSON.stringify(c)}`);\n    }\n  });\n  return !isError ? res : undefined;\n};\n\nconst convertArg = (spel, conv, config, meta, parentSpel) => {\n  if (spel == undefined)\n    return undefined;\n  const {fieldSeparator} = config.settings;\n\n  if (spel.type == \"variable\" || spel.type == \"property\") {\n    // normal field\n    const field = normalizeField(config, spel.val, parentSpel?._groupField);\n    const fieldConfig = getFieldConfig(config, field);\n    const isVariable = spel.type == \"variable\";\n    return {\n      valueSrc: \"field\",\n      valueType: fieldConfig?.type,\n      isVariable,\n      value: field,\n    };\n  } else if (spel.type == \"compound\") {\n    // complex field\n    const parts = convertPath(spel.children, meta);\n    if (parts) {\n      const field = normalizeField(config, parts.join(fieldSeparator), parentSpel?._groupField);\n      const fieldConfig = getFieldConfig(config, field);\n      const isVariable = spel.children?.[0]?.type == \"variable\";\n      return {\n        valueSrc: \"field\",\n        valueType: fieldConfig?.type,\n        isVariable,\n        value: field,\n      };\n    } else {\n      // it's not complex field\n    }\n  } else if (SpelPrimitiveTypes[spel.type]) {\n    let value = spel.val;\n    const valueType = SpelPrimitiveTypes[spel.type];\n    if (parentSpel?.isUnary) {\n      value = -value;\n    }\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type == \"!new\" && SpelPrimitiveClasses[spel.cls.at(-1)]) {\n    const args = spel.args.map(v => convertArg(v, conv, config, meta, spel));\n    const value = args?.[0];\n    const valueType = SpelPrimitiveClasses[spel.cls.at(-1)];\n    return {\n      ...value,\n      valueType,\n    };\n  } else if (spel.type == \"list\") {\n    const values = spel.val.map(v => convertArg(v, conv, config, meta, spel));\n    const _itemType = values.length ? values[0]?.valueType : null;\n    const value = values.map(v => v?.value);\n    const valueType = ListValueType;\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type == \"op-plus\" && parentSpel?.type == \"ternary\") {\n    return buildCaseValueConcat(spel, conv, config, meta);\n  }\n\n  let maybe = convertFunc(spel, conv, config, meta, parentSpel);\n  if (maybe !== undefined) {\n    return maybe;\n  }\n\n  meta.errors.push(`Can't convert arg of type ${spel.type}`);\n  return undefined;\n};\n\nconst buildFuncSignatures = (spel) => {\n  // branches\n  const brns = [\n    {s: \"\", params: [], objs: []}\n  ];\n  _buildFuncSignatures(spel, brns);\n  return brns.map(({s, params}) => ({s, params})).reverse().filter(({s}) => s !== \"\" && s !== \"?\");\n};\n\n// a.toLower().toUpper()\n// ->\n// ?.toLower().toUpper()\n// ?.toUpper()\nconst _buildFuncSignatures = (spel, brns) => {\n  let params = [], s = \"\";\n  const { type, methodName, val, obj, args, isVar, cls, children } = spel;\n  const lastChild = children?.[children.length-1];\n  let currBrn = brns[brns.length-1];\n  if (type === \"!func\") {\n    // T(DateTimeFormat).forPattern(?).parseDateTime(?)  --  ok\n    // T(LocalDateTime).parse(?, T(DateTimeFormatter).ofPattern(?))  --  will not work\n    let o = obj;\n    while (o) {\n      const [s1, params1] = _buildFuncSignatures({...o, obj: null}, [{}]);\n      if (s1 !== \"?\") {\n        // start new branch\n        const newBrn = {\n          s: currBrn.s,\n          params: [...currBrn.params],\n          objs: [...currBrn.objs]\n        };\n        // finish old branch\n        currBrn.objs.unshift(\"?\");\n        currBrn.params.unshift(o);\n        // switch\n        brns.push(newBrn);\n        currBrn = brns[brns.length-1];\n      }\n      // step\n      currBrn.objs.unshift(s1);\n      currBrn.params.unshift(...params1);\n      o = o.type === \"!func\" ? o.obj : null;\n    }\n    for (const brn of brns) {\n      params = [\n        ...(brn?.params || []),\n        ...(args || []),\n      ];\n      s = \"\";\n      if (brn?.objs?.length)\n        s += brn.objs.join(\".\") + \".\";\n      s += (isVar ? \"#\" : \"\") + methodName;\n      s += \"(\" + (args || []).map(_ => \"?\").join(\", \") + \")\";\n      brn.s = s;\n      brn.params = params;\n    }\n  } else if (type === \"!new\") {\n    // new java.text.SimpleDateFormat('HH:mm:ss').parse('...')\n    params = args || [];\n    s = `new ${cls.join(\".\")}(${params.map(_ => \"?\").join(\", \")})`;\n  } else if (type === \"!type\") {\n    // T(java.time.LocalTime).parse('...')\n    s = `T(${cls.join(\".\")})`;\n  } else if (type === \"compound\" && lastChild.type === \"property\" && isFuncableProperty(lastChild.val)) {\n    // {1,2}.length  --  ok\n    // 'Hello World'.bytes.length  --  will not work\n    s = children.map((c) => {\n      if (c === lastChild)\n        return c.val;\n      const [s1, params1] = _buildFuncSignatures({...c, obj: null}, [{}]);\n      params.push(...params1);\n      return s1;\n    }).join(\".\");\n  } else {\n    params = [spel];\n    s = \"?\";\n  }\n\n  if (currBrn) {\n    currBrn.s = s;\n    currBrn.params = params;\n  }\n\n  return [s, params];\n};\n\nconst convertFunc = (spel, conv, config, meta, parentSpel) => {\n  // Build signatures\n  const convertFuncArg = v => convertArg(v, conv, config, meta, {\n    ...spel,\n    _groupField: parentSpel?._groupField\n  });\n  const fsigns = buildFuncSignatures(spel);\n  const firstSign = fsigns?.[0]?.s;\n  if (fsigns.length)\n    logger.debug(\"Signatures for \", spel, \":\", firstSign, fsigns);\n  \n  // 1. Try to parse as value\n  let maybeValue = convertFuncToValue(spel, conv, config, meta, parentSpel, fsigns, convertFuncArg);\n  if (maybeValue !== undefined)\n    return maybeValue;\n  \n  // 2. Try to parse as op\n  let maybeOp = convertFuncToOp(spel, conv, config, meta, parentSpel, fsigns, convertFuncArg);\n  if (maybeOp !== undefined)\n    return maybeOp;\n  \n  // 3. Try to parse as func\n  let funcKey, funcConfig, argsObj;\n  // try func signature matching\n  for (const {s, params} of fsigns) {\n    const funcKeys = conv.funcs[s];\n    if (funcKeys) {\n      // todo: here we can check arg types, if we have function overloading\n      funcKey = funcKeys[0];\n      funcConfig = getFuncConfig(config, funcKey);\n      const {spelFunc} = funcConfig;\n      const argsArr = params.map(convertFuncArg);\n      const argsOrder = [...spelFunc.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n      argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      break;\n    }\n  }\n  // try `spelImport`\n  if (!funcKey) {\n    for (const [f, fc] of iterateFuncs(config)) {\n      if (fc.spelImport) {\n        let parsed;\n        try {\n          parsed = fc.spelImport(spel);\n        } catch(_e) {\n          // can't be parsed\n        }\n        if (parsed) {\n          funcKey = f;\n          funcConfig = getFuncConfig(config, funcKey);\n          argsObj = {};\n          for (let argKey in parsed) {\n            argsObj[argKey] = convertFuncArg(parsed[argKey]);\n          }\n        }\n      }\n    }\n  }\n\n  // convert\n  if (funcKey) {\n    const funcArgs = {};\n    for (let argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      let argVal = argsObj[argKey];\n      if (argVal === undefined) {\n        argVal = argConfig?.defaultValue;\n        if (argVal === undefined) {\n          if (argConfig?.isOptional) {\n            //ignore\n          } else {\n            meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n            return undefined;\n          }\n        } else {\n          argVal = {\n            value: argVal,\n            valueSrc: argVal?.func ? \"func\" : \"value\",\n            valueType: argConfig.type,\n          };\n        }\n      }\n      if (argVal)\n        funcArgs[argKey] = argVal;\n    }\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: funcArgs\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  const {methodName} = spel;\n  if (methodName)\n    meta.errors.push(`Signature ${firstSign} - failed to convert`);\n  \n  return undefined;\n};\n\nconst convertFuncToValue = (spel, conv, config, meta, parentSpel, fsigns, convertFuncArg) => {\n  let errs, foundSign, foundWidget;\n  const candidates = [];\n\n  for (let w in config.widgets) {\n    const widgetDef = config.widgets[w];\n    const {spelImportFuncs} = widgetDef;\n    if (spelImportFuncs) {\n      for (let i = 0 ; i < spelImportFuncs.length ; i++) {\n        const fj = spelImportFuncs[i];\n        if (isObject(fj)) {\n          const bag = {};\n          if (isJsonCompatible(fj, spel, bag)) {\n            for (const k in bag) {\n              bag[k] = convertFuncArg(bag[k]);\n            }\n            candidates.push({\n              s: `widgets.${w}.spelImportFuncs[${i}]`,\n              w,\n              argsObj: bag,\n            });\n          }\n        }\n      }\n    }\n  }\n\n  for (const {s, params} of fsigns) {\n    const found = conv.valueFuncs[s] || [];\n    for (const {w, argsOrder} of found) {\n      const argsArr = params.map(convertFuncArg);\n      const argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      candidates.push({\n        s,\n        w,\n        argsObj,\n      });\n    }\n  }\n\n  for (const {s, w, argsObj} of candidates) {\n    const widgetDef = config.widgets[w];\n    const {spelImportValue, type} = widgetDef;\n    foundWidget = w;\n    foundSign = s;\n    errs = [];\n    for (const k in argsObj) {\n      if (![\"value\"].includes(argsObj[k].valueSrc)) {\n        errs.push(`${k} has unsupported value src ${argsObj[k].valueSrc}`);\n      }\n    }\n    let value = argsObj.v.value;\n    if (spelImportValue && !errs.length) {\n      [value, errs] = spelImportValue.call(config.ctx, argsObj.v, widgetDef, argsObj);\n      if (errs && !Array.isArray(errs))\n        errs = [errs];\n    }\n    if (!errs.length) {\n      return {\n        valueSrc: \"value\",\n        valueType: type,\n        value,\n      };\n    }\n  }\n\n  if (foundWidget && errs.length) {\n    meta.errors.push(`Signature ${foundSign} - looks like convertable to ${foundWidget}, but: ${errs.join(\"; \")}`);\n  }\n\n  return undefined;\n};\n\nconst convertFuncToOp = (spel, conv, config, meta, parentSpel, fsigns, convertFuncArg) => {\n  let errs, opKey, foundSign;\n  for (const {s, params} of fsigns) {\n    const found = conv.opFuncs[s] || [];\n    for (const {op, argsOrder} of found) {\n      const argsArr = params.map(convertFuncArg);\n      opKey = op;\n      if (op === \"!compare\") {\n        if (\n          parentSpel.type.startsWith(\"op-\")\n          && parentSpel.children.length == 2\n          && parentSpel.children[1].type == \"number\"\n          && parentSpel.children[1].val === 0\n        ) {\n          return {\n            type: \"!compare\",\n            children: argsArr,\n          };\n        } else {\n          errs.push(\"Result of compareTo() should be compared to 0\");\n        }\n      }\n      foundSign = s;\n      errs = [];\n      const opDef = config.operators[opKey];\n      const {spelOp, valueTypes} = opDef;\n      const argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      const field = argsObj[\"0\"];\n      const convertedArgs = Object.keys(argsObj).filter(k => parseInt(k) > 0).map(k => argsObj[k]);\n      \n      const valueType = argsArr.filter(a => !!a).find(({valueSrc}) => valueSrc === \"value\")?.valueType;\n      if (valueTypes && valueType && !valueTypes.includes(valueType)) {\n        errs.push(`Op supports types ${valueTypes}, but got ${valueType}`);\n      }\n      if (!errs.length) {\n        return buildRule(config, meta, field, opKey, convertedArgs, spel);\n      }\n    }\n  }\n\n  if (opKey && errs.length) {\n    meta.errors.push(`Signature ${foundSign} - looks like convertable to ${opKey}, but: ${errs.join(\"; \")}`);\n  }\n\n  return undefined;\n};\n\nconst buildRule = (config, meta, field, opKey, convertedArgs, spel) => {\n  if (convertedArgs.filter(v => v === undefined).length) {\n    return undefined;\n  }\n  let fieldSrc = field?.func ? \"func\" : \"field\";\n  if (isObject(field) && field.valueSrc) {\n    // if comed from convertFuncToOp()\n    fieldSrc = field.valueSrc;\n    field = field.value;\n  }\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig) {\n    meta.errors.push(`No config for field ${field}`);\n    return undefined;\n  }\n\n  let canRev = true;\n  let needWrapReverse = false;\n  if (spel?.not && canRev) {\n    const opConfig = config.operators[opKey];\n    if (opConfig.reversedOp) {\n      opKey = opConfig.reversedOp;\n      spel.not = false;\n    } else {\n      needWrapReverse = true;\n    }\n  }\n\n  const widget = getWidgetForFieldOp(config, field, opKey);\n  const widgetConfig = config.widgets[widget || fieldConfig.mainWidget];\n  const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n  const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n\n  let res = {\n    type: \"rule\",\n    id: uuid(),\n    properties: {\n      field,\n      fieldSrc,\n      operator: opKey,\n      value: convertedArgs.map(v => v.value),\n      valueSrc: convertedArgs.map(v => v.valueSrc),\n      valueType: convertedArgs.map(v => {\n        if (v.valueSrc == \"value\") {\n          return widgetConfig?.type || fieldConfig?.type || v.valueType;\n        }\n        return v.valueType;\n      }),\n      ...(asyncListValues ? {asyncListValues} : {}),\n    }\n  };\n\n  if (needWrapReverse) {\n    res = wrapInDefaultConj(res, config, spel?.not);\n    if (spel?.not) {\n      spel.not = false;\n    }\n  }\n\n  return res;\n};\n\nconst buildRuleGroup = ({groupFilter, groupFieldValue}, opKey, convertedArgs, config, meta) => {\n  if (groupFieldValue.valueSrc != \"field\")\n    throw `Bad groupFieldValue: ${JSON.stringify(groupFieldValue)}`;\n  const groupField = groupFieldValue.value;\n  let groupOpRule = buildRule(config, meta, groupField, opKey, convertedArgs);\n  if (!groupOpRule)\n    return undefined;\n  const fieldConfig = getFieldConfig(config, groupField);\n  const mode = fieldConfig?.mode;\n  let res;\n\n  if (groupFilter?.type === \"group\") {\n    res = {\n      ...(groupFilter || {}),\n      type: \"rule_group\",\n      properties: {\n        ...groupOpRule.properties,\n        ...(groupFilter?.properties || {}),\n        mode\n      }\n    };\n  } else if (groupFilter) {\n    // rule_group in rule_group\n    res = {\n      ...(groupOpRule || {}),\n      type: \"rule_group\",\n      children1: [ groupFilter ],\n      properties: {\n        ...groupOpRule.properties,\n        mode\n      }\n    };\n  } else {\n    res = {\n      ...(groupOpRule || {}),\n      type: \"rule_group\",\n      properties: {\n        ...groupOpRule.properties,\n        mode\n      }\n    };\n  }\n\n  if (!res.id)\n    res.id = uuid();\n  return res;\n};\n\n\nconst compareArgs = (left, right,  spel, conv, config, meta, parentSpel = null) => {\n  if (left.type == right.type) {\n    if (left.type == \"!aggr\") {\n      const [leftSource, rightSource] = [left.source, right.source].map(v => convertArg(v, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      }));\n      //todo: check same filter\n      return leftSource.value == rightSource.value;\n    } else {\n      const [leftVal, rightVal] = [left, right].map(v => convertArg(v, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      }));\n      return leftVal.value == rightVal.value;\n    }\n  }\n  return false;\n};\n\nconst buildSimpleSwitch = (val, conv, config, meta) => {\n  let children1 = {};\n  const cond = null;\n  const caseI = buildCase(cond, val, conv, config, meta);\n  if (caseI) {\n    children1[caseI.id] = caseI;\n  }\n  let res = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n  return res;\n};\n\nconst buildCase = (cond, val, conv, config, meta, spel = null) => {\n  const valProperties = buildCaseValProperties(config, meta, conv, val, spel);\n\n  let caseI;\n  if (cond) {\n    caseI = convertToTree(cond, conv, config, meta, spel);\n    if (caseI && caseI.type) {\n      if (caseI.type != \"group\") {\n        caseI = wrapInDefaultConj(caseI, config);\n      }\n      caseI.type = \"case_group\";\n    } else {\n      meta.errors.push(`Unexpected case: ${JSON.stringify(caseI)}`);\n      caseI = undefined;\n    }\n  } else {\n    caseI = {\n      id: uuid(),\n      type: \"case_group\",\n      properties: {}\n    };\n  }\n\n  if (caseI) {\n    caseI.properties = {\n      ...caseI.properties,\n      ...valProperties\n    };\n  }\n\n  return caseI;\n};\n\nconst buildCaseValueConcat = (spel, conv, config, meta) => {\n  let flat = [];\n  function _processConcatChildren(children) {\n    children.map(child => {\n      if (child.type == \"op-plus\") {\n        _processConcatChildren(child.children);\n      } else {\n        const convertedChild = convertArg(child, conv, config, meta, spel);\n        if (convertedChild) {\n          flat.push(convertedChild);\n        } else {\n          meta.errors.push(`Can't convert ${child.type} in concatenation`);\n        }\n      }\n    });\n  }\n  _processConcatChildren(spel.children);\n  return {\n    valueSrc: \"value\",\n    valueType: \"case_value\",\n    value: flat,\n  };\n};\n\nconst buildCaseValProperties = (config, meta, conv, val, spel = null) => {\n  let valProperties = {};\n  let convVal;\n  if (val?.type == \"op-plus\") {\n    convVal = buildCaseValueConcat(val, conv, config, meta);\n  } else {\n    convVal = convertArg(val, conv, config, meta, spel);\n  }\n  const widgetDef = config.widgets[\"case_value\"];\n  const importCaseValue = widgetDef?.spelImportValue;\n  if (importCaseValue) {\n    const [normVal, normErrors] = importCaseValue(convVal);\n    normErrors.map(e => meta.errors.push(e));\n    if (normVal) {\n      valProperties = {\n        value: [normVal],\n        valueSrc: [\"value\"],\n        valueType: [\"case_value\"]\n      };\n    }\n  } else {\n    meta.errors.push(\"No fucntion to import case value\");\n  }\n  return valProperties;\n};\n\nconst wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj) => {\n  if (!rule) return undefined;\n  return {\n    type: \"rule_group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n      not: false,\n      field: parentField,\n    }\n  };\n};\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not || false\n    }\n  };\n};\n","import Immutable from \"immutable\";\nimport uuid from \"./uuid\";\nimport {getFieldConfig, getOperatorConfig, getFieldParts, getFirstField} from \"./configUtils\";\nimport {getFirstOperator} from \"../utils/ruleUtils\";\nimport {getNewValueForFieldOp} from \"../utils/validation\";\nimport { isImmutable } from \"./stuff\";\nimport { jsToImmutable } from \"../import\";\n\n\nexport const getDefaultField = (config, canGetFirst = true, parentRuleGroupPath = null) => {\n  const {defaultField} = config.settings;\n  let f = (!parentRuleGroupPath ? defaultField : getDefaultSubField(config, parentRuleGroupPath))\n    || canGetFirst && getFirstField(config, parentRuleGroupPath)\n    || null;\n  // if default LHS is func, convert to Immutable\n  if (f != null && typeof f !== \"string\" && !isImmutable(f)) {\n    f = jsToImmutable(f);\n  }\n  return f;\n};\n\nexport const getDefaultSubField = (config, parentRuleGroupPath = null) => {\n  if (!parentRuleGroupPath)\n    return null;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const parentRuleGroupConfig = getFieldConfig(config, parentRuleGroupPath);\n  let f = parentRuleGroupConfig?.defaultField;\n  if (f) {\n    f = [...getFieldParts(parentRuleGroupPath), f].join(fieldSeparator);\n  }\n  return f;\n};\n\nexport const getDefaultFieldSrc = (config, canGetFirst = true) => {\n  return canGetFirst && config.settings.fieldSources?.[0] || \"field\";\n};\n\nexport const getDefaultOperator = (config, field, canGetFirst = true) => {\n  let {defaultOperator} = config.settings;\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOperators = fieldConfig?.operators || [];\n  if (defaultOperator && !fieldOperators.includes(defaultOperator))\n    defaultOperator = null;\n  let fieldDefaultOperator = fieldConfig?.defaultOperator;\n  if (fieldDefaultOperator && !fieldOperators.includes(fieldDefaultOperator))\n    fieldDefaultOperator = null;\n  if (!fieldDefaultOperator && canGetFirst)\n    fieldDefaultOperator = getFirstOperator(config, field);\n  const fieldHasExplicitDefOp = fieldConfig?._origDefaultOperator;\n  const op = fieldHasExplicitDefOp && fieldDefaultOperator || defaultOperator || fieldDefaultOperator;\n  return op;\n};\n\n//used for complex operators like proximity\nexport const defaultOperatorOptions = (config, operator, field) => {\n  let operatorConfig = operator ? getOperatorConfig(config, operator, field) : null;\n  if (!operatorConfig)\n    return null; //new Immutable.Map();\n  return operatorConfig.options ? new Immutable.Map(\n    operatorConfig.options\n    && operatorConfig.options.defaults || {}\n  ) : null;\n};\n\nexport const defaultRuleProperties = (config, parentRuleGroupPath = null, item = null, canUseDefaultFieldAndOp = true, canGetFirst = false) => {\n  let field = null, operator = null, fieldSrc = null;\n  const {showErrorMessage} = config.settings;\n  if (item) {\n    fieldSrc = item?.properties?.fieldSrc;\n    field = item?.properties?.field;\n    operator = item?.properties?.operator;\n  } else if (canUseDefaultFieldAndOp) {\n    field = getDefaultField(config, canGetFirst, parentRuleGroupPath);\n    if (field) {\n      fieldSrc = isImmutable(field) ? \"func\" : \"field\";\n    } else {\n      fieldSrc = getDefaultFieldSrc(config);\n    }\n    operator = getDefaultOperator(config, field, true);\n  } else {\n    fieldSrc = getDefaultFieldSrc(config);\n  }\n  let current = new Immutable.Map({\n    fieldSrc: fieldSrc,\n    field: field,\n    operator: operator,\n    value: new Immutable.List(),\n    valueSrc: new Immutable.List(),\n    //used for complex operators like proximity\n    operatorOptions: defaultOperatorOptions(config, operator, field),\n  });\n  if (showErrorMessage) {\n    current = current.set(\"valueError\", new Immutable.List());\n  }\n  \n  if (field && operator) {\n    const canFix = false;\n    let {newValue, newValueSrc, newValueType, newValueError, newFieldError} = getNewValueForFieldOp(\n      config, config, current, field, operator, \"operator\", canFix\n    );\n    current = current\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError)\n        .set(\"fieldError\", newFieldError);\n    }\n  }\n  return current; \n};\n\n\nexport const defaultGroupConjunction = (config, fieldConfig = null) => {\n  fieldConfig = getFieldConfig(config, fieldConfig); // if `fieldConfig` is field name, not config\n  const conjs = fieldConfig && fieldConfig.conjunctions || Object.keys(config.conjunctions);\n  if (conjs.length == 1)\n    return conjs[0];\n  return config.settings.defaultGroupConjunction || config.settings.defaultConjunction || conjs[0];\n};\n\nexport const defaultConjunction = (config) =>\n  config.settings.defaultConjunction || Object.keys(config.conjunctions)[0];\n\nexport const defaultGroupProperties = (config, fieldConfig = null) => new Immutable.Map({\n  conjunction: defaultGroupConjunction(config, fieldConfig),\n  not: false\n});\n\nexport const defaultItemProperties = (config, item) => {\n  return item && item.type == \"group\" \n    ? defaultGroupProperties(config, item?.properties?.field) \n    : defaultRuleProperties(config, null, item);\n};\n\nexport const defaultRule = (id, config) => ({\n  [id]: new Immutable.Map({\n    type: \"rule\",\n    id: id,\n    properties: defaultRuleProperties(config)\n  })\n});\n\nexport const defaultRoot = (config, canAddDefaultRule = true) => {\n  return new Immutable.Map({\n    type: \"group\",\n    id: uuid(),\n    children1: new Immutable.OrderedMap(canAddDefaultRule ? { ...defaultRule(uuid(), config) } : {}),\n    properties: defaultGroupProperties(config)\n  });\n};\n\nexport const createListFromArray = (ids) => {\n  return new Immutable.List(ids);\n};\n\nexport const emptyProperties = () => new Immutable.Map();\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, extendConfig,\n} from \"../utils/configUtils\";\nimport {\n  getFieldPathLabels, getWidgetForFieldOp, formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\n\n\nexport const queryString = (item, config, isForDisplay = false, isDebugMode = false) => {\n  //meta is mutable\n  let meta = {\n    errors: [],\n    settings: {\n      isForDisplay,\n      isDebugMode,\n    }\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(item, extendedConfig, meta, null);\n\n  if (meta.errors.length)\n    console.warn(\"Errors while exporting to string:\", meta.errors);\n  return res;\n};\n\n\nconst formatItem = (item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") ) {\n    return formatGroup(item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta, parentField = null) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  // TIP: don't cut group for mode == 'struct' and don't do aggr format (maybe later)\n  const groupField = isRuleGroup && mode == \"array\" ? properties.get(\"field\") : null;\n  const groupOperator = type === \"rule_group\" ? properties.get(\"operator\") : null;\n  const groupOperatorCardinality = groupOperator ? config.operators[groupOperator]?.cardinality ?? 1 : undefined;\n  const canHaveEmptyChildren = isRuleGroup && mode === \"array\" && groupOperatorCardinality >= 1;\n  const not = properties.get(\"not\");\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size && !isDebugMode) {\n    return undefined;\n  }\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  const conjStr = list.size ? conjunctionDefinition.formatConj(list, conjunction, not, isForDisplay) : null;\n  \n  let ret;\n  if (groupField) {\n    const aggrArgs = formatRule(item, config, meta, parentField, true);\n    if (aggrArgs) {\n      const isRev = aggrArgs.pop();\n      const args = [\n        conjStr,\n        ...aggrArgs\n      ];\n      ret = config.settings.formatAggr(...args);\n      if (isRev) {\n        ret = config.settings.formatReverse(ret, null, null, null, null, isForDisplay);\n      }\n    }\n  } else {\n    ret = conjStr;\n  }\n\n  if (isDebugMode && ret == null) {\n    ret = \"?\";\n  }\n  return ret;\n};\n\n\nconst formatItemValue = (config, properties, meta, _operator, parentField) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operator = _operator || properties.get(\"operator\");\n  const operatorDef = getOperatorConfig(config, operator, field) || {};\n  const cardinality = getOpCardinality(operatorDef);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  let fvalue;\n\n  if (iValue != undefined) {\n    fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = !isDebugMode ? completeValue(currentValue, valueSrc, config) : currentValue;\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n      let fv = formatValue(\n        config, meta, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    const isOK = !hasUndefinedValues && fvalue.size === cardinality;\n    if (isOK) {\n      formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n    }\n  }\n  if (isDebugMode && !formattedValue) {\n    formattedValue = cardinality > 1 ? new List(Array.from({length: cardinality}).map(\n      (_, i) => fvalue?.get(i) ?? \"?\")\n    ) : \"?\";\n  }\n\n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, meta) => {\n  const { isDebugMode } = meta.settings;\n  const fop = operatorDefinition?.labelForFormat || operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} ${fop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (isDebugMode && op === \"?\" && values === \"?\") {\n        return field && field !== \"?\" ? `${field} ?` : \"?\";\n      }\n      return `${field} ${fop} ${values}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const valFrom = values?.first?.();\n      const valTo = values?.get?.(1);\n      return `${field} ${fop} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta, parentField = null, returnArgs = false) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  if ((field == null || operator == null) && !isDebugMode)\n    return undefined;\n  \n  const fieldDef = getFieldConfig(config, field) || {};\n  let operatorDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDef.reversedOp;\n  let revOperatorDef = getOperatorConfig(config, reversedOp, field) || {};\n  \n  //check op\n  let isRev = false;\n  let fn = operatorDef.formatOp;\n  if (!fn && reversedOp) {\n    fn = revOperatorDef.formatOp;\n    if (fn) {\n      isRev = true;\n      [operator, reversedOp] = [reversedOp, operator];\n      [operatorDef, revOperatorDef] = [revOperatorDef, operatorDef];\n    }\n  }\n\n  if (isDebugMode && !operator) {\n    operator = \"?\";\n  }\n\n  //find fn to format expr\n  if (!fn)\n    fn = buildFnToFormatOp(operator, operatorDef, meta);\n  if (!fn)\n    return undefined;\n\n  //format field\n  const formattedField = fieldSrc === \"func\"\n    ? formatFunc(config, meta, field, parentField)\n    : formatField(config, meta, field, parentField);\n  if (formattedField == undefined)\n    return undefined;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, operator, parentField\n  );\n  if (formattedValue === undefined) {\n    return undefined;\n  }\n\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(operatorDef, opDefKeysToOmit),\n    operatorOptions,\n    isForDisplay,\n    fieldDef,\n    isRev,\n  ];\n\n  if (returnArgs) {\n    return args;\n  } else {\n    //format expr\n    let ret = fn.call(config.ctx, ...args);\n\n    //rev\n    if (isRev) {\n      ret = config.settings.formatReverse(ret, operator, reversedOp, operatorDef, revOperatorDef, isForDisplay);\n    }\n\n    return ret;\n  }\n};\n\n\nconst formatValue = (config, meta, value, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, opDef, parentField = null, asyncListValues) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  if (value === undefined) {\n    if (isDebugMode) {\n      if (fieldWidgetDef?.jsType === \"array\") {\n        return [];\n      }\n      return \"?\";\n    } else {\n      return undefined;\n    }\n  }\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(config, meta, value, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(config, meta, value, parentField);\n  } else {\n    if (typeof fieldWidgetDef.formatValue === \"function\") {\n      const fn = fieldWidgetDef.formatValue;\n      const args = [\n        value,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n        isForDisplay\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(opDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, value) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = value;\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (config, meta, field, parentField = null, cutParentField = true) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n  let ret = null;\n  if (field) {\n    const fieldDefinition = getFieldConfig(config, field) || {};\n    const fieldParts = getFieldParts(field, config);\n    const fieldPartsLabels = getFieldPathLabels(field, config, cutParentField ? parentField : null);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparatorDisplay) : null;\n    const fieldLabel2 = fieldDefinition.label2 || fieldFullLabel;\n    const formatFieldFn = config.settings.formatField;\n    const fieldName = formatFieldName(field, config, meta, cutParentField ? parentField : null, {useTableName: true});\n    ret = formatFieldFn(fieldName, fieldParts, fieldLabel2, fieldDefinition, config, isForDisplay);\n  } else if(isDebugMode) {\n    ret = \"?\";\n  }\n  return ret;\n};\n\n\nconst formatFunc = (config, meta, funcValue, parentField = null) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const funcKey = funcValue?.get?.(\"func\");\n  if (!funcKey) {\n    return isDebugMode ? \"?()\" : undefined;\n  }\n  const args = funcValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    if (!isDebugMode) {\n      meta.errors.push(`Func ${funcKey} is not defined in config`);\n      return undefined;\n    }\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = isForDisplay && funcConfig?.label || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  let formattedArgsWithNames = {};\n  const argsKeys = funcConfig ? Object.keys(funcConfig.args || {}) : args?.keySeq?.().toArray() || [];\n  for (const argKey of argsKeys) {\n    const argConfig = funcConfig?.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig || {};\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argName = isForDisplay && argConfig?.label || argKey;\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      config, meta, argValue, argValueSrc, argConfig?.type, fieldDef, argConfig, null, null, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n    }\n\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      formattedDefaultVal = formatValue(\n        config, meta, defaultValue, defaultValueSrc, argConfig?.type, fieldDef, argConfig, null, null, parentField, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const [missedArgKey, missedArgName] of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n          //formattedArgsWithNames[missedArgName] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n      formattedArgsWithNames[argName] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push([argKey, argName]);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    if (!isDebugMode) {\n      return undefined; // incomplete\n    }\n  }\n\n  let ret = null;\n  if (typeof funcConfig?.formatFunc === \"function\") {\n    const fn = funcConfig.formatFunc;\n    const args = [\n      formattedArgs,\n      isForDisplay\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(isForDisplay ? formattedArgsWithNames : formattedArgs)\n      .map(([k, v]) => (isForDisplay ? `${k}: ${v}` : `${v}`))\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","// Note: Don't use \":\" char inside strings, it's reserved as a namespace\n\nexport const EMPTY_GROUP = \"EMPTY_GROUP\";\nexport const EMPTY_RULE_GROUP = \"EMPTY_RULE_GROUP\";\nexport const EMPTY_QUERY = \"EMPTY_QUERY\";\nexport const EMPTY_CASE = \"EMPTY_CASE\";\nexport const NO_CONFIG_FOR_FIELD = \"NO_CONFIG_FOR_FIELD\";\nexport const NO_CONFIG_FOR_OPERATOR = \"NO_CONFIG_FOR_OPERATOR\";\nexport const FIXED_OPERATOR = \"FIXED_OPERATOR\";\nexport const NO_CONFIG_FOR_FUNCTION = \"NO_CONFIG_FOR_FUNCTION\";\nexport const INVALID_VALUE = \"INVALID_VALUE\";\nexport const INVALID_FUNC_ARG_VALUE = \"INVALID_FUNC_ARG_VALUE\";\nexport const UNSUPPORTED_FIELD_TYPE = \"UNSUPPORTED_FIELD_TYPE\";\nexport const UNSUPPORTED_OPERATOR_FOR_FIELD = \"UNSUPPORTED_OPERATOR_FOR_FIELD\";\nexport const INVALID_VALUE_SRC = \"INVALID_VALUE_SRC\";\nexport const INCOMPLETE_RULE = \"INCOMPLETE_RULE\";\nexport const INCOMPLETE_LHS = \"INCOMPLETE_LHS\";\nexport const INCOMPLETE_RHS = \"INCOMPLETE_RHS\";\nexport const BAD_MULTISELECT_VALUES = \"BAD_MULTISELECT_VALUES\";\nexport const BAD_SELECT_VALUE = \"BAD_SELECT_VALUE\";\nexport const INCORRECT_VALUE_TYPE = \"INCORRECT_VALUE_TYPE\";\nexport const INCORRECT_VALUE_JS_TYPE = \"INCORRECT_VALUE_JS_TYPE\";\nexport const VALUE_LENGTH_CONSTRAINT_FAIL = \"VALUE_LENGTH_CONSTRAINT_FAIL\";\nexport const VALUE_MIN_CONSTRAINT_FAIL = \"VALUE_MIN_CONSTRAINT_FAIL\";\nexport const VALUE_MAX_CONSTRAINT_FAIL = \"VALUE_MAX_CONSTRAINT_FAIL\";\nexport const NO_CONFIG_FOR_FIELD_VALUE = \"NO_CONFIG_FOR_FIELD_VALUE\";\nexport const CANT_COMPARE_FIELD_WITH_ITSELF = \"CANT_COMPARE_FIELD_WITH_ITSELF\";\nexport const CANT_COMPARE_FIELD_WITH_FIELD = \"CANT_COMPARE_FIELD_WITH_FIELD\";\nexport const INCORRECT_FIELD_TYPE = \"INCORRECT_FIELD_TYPE\";\nexport const UNSUPPORTED_FUNCTION_FOR_FIELD = \"UNSUPPORTED_FUNCTION_FOR_FIELD\";\nexport const REQUIRED_FUNCTION_ARG = \"REQUIRED_FUNCTION_ARG\";\nexport const INCORRECT_FUNCTION_RETURN_TYPE = \"INCORRECT_FUNCTION_RETURN_TYPE\";\nexport const INVALID_RANGE = \"INVALID_RANGE\";\n\nexport const ITEM_POSITION = \"ITEM_POSITION\";\nexport const ITEM_POSITION_ROOT = \"ITEM_POSITION_ROOT\";\nexport const ITEM_POSITION_WITH_INDEX_PATH = \"ITEM_POSITION_WITH_INDEX_PATH\";\nexport const ITEM_POSITION_IN_CASE = \"ITEM_POSITION_IN_CASE\";\n\n","import * as constants from \"./constains\";\n\nexport const translations = {\n  [constants.EMPTY_GROUP]: \"Empty group\",\n  [constants.EMPTY_RULE_GROUP]: \"No conditions for group field {{field}}\",\n  [constants.EMPTY_QUERY]: \"Empty query\",\n  [constants.EMPTY_CASE]: \"Empty case\",\n  [constants.NO_CONFIG_FOR_FIELD]: \"No config for field {{field}}\",\n  [constants.FIXED_OPERATOR]: \"Fixed operator {{from}} to {{to}} for field {{field}}\",\n  [constants.NO_CONFIG_FOR_OPERATOR]: \"No config for operator {{operator}}\",\n  [constants.NO_CONFIG_FOR_FUNCTION]: \"No config for function {{funcKey}}\",\n  [constants.INVALID_VALUE]: \"Invalid value\",\n  [constants.INVALID_FUNC_ARG_VALUE]: \"Invalid value of arg {{argName}} for func {{funcName}}: {{argValidationError}}\",\n  [constants.UNSUPPORTED_FIELD_TYPE]: \"Type of field {{field}} is not supported\",\n  [constants.UNSUPPORTED_OPERATOR_FOR_FIELD]: \"Operator {{operator}} is not supported for field {{field}}\",\n  [constants.INCOMPLETE_RULE]: \"Incomplete rule\",\n  [constants.INCOMPLETE_LHS]: \"Incomplete LHS\",\n  [constants.INCOMPLETE_RHS]: \"Incomplete RHS\",\n  [constants.INVALID_VALUE_SRC]: \"Invalid value src {{valueSrcs, list}}\",\n  [constants.BAD_MULTISELECT_VALUES+\"_one\"]: \"Value {{badValues, list}} is not in the list of allowed values\",\n  [constants.BAD_MULTISELECT_VALUES+\"_other\"]: \"Values {{badValues, list}} are not in the list of allowed values\",\n  [constants.BAD_SELECT_VALUE]: \"Value {{value}} is not in the list of allowed values\",\n  [constants.INCORRECT_VALUE_TYPE]: \"Value should have type {{wType}}, but got value of type {{valueType}}\",\n  [constants.INCORRECT_VALUE_JS_TYPE]: \"Value should have JS type {{jsType}}, but got value of type {{valueTypeof}}\",\n  [constants.VALUE_LENGTH_CONSTRAINT_FAIL]: \"Value {{value}} should have max length {{fieldSettings.maxLength}} but got {{length}}\",\n  [constants.VALUE_MIN_CONSTRAINT_FAIL]: \"Value {{value}} should be from {{fieldSettings.min}} to {{fieldSettings.max}}\",\n  [constants.VALUE_MAX_CONSTRAINT_FAIL]: \"Value {{value}} should be from {{fieldSettings.min}} to {{fieldSettings.max}}\",\n  [constants.NO_CONFIG_FOR_FIELD_VALUE]: \"No config for field {{field}}\",\n  [constants.CANT_COMPARE_FIELD_WITH_ITSELF]: \"Can't compare field {{field}} with itself\",\n  [constants.CANT_COMPARE_FIELD_WITH_FIELD]: \"Can't compare field {{leftField}} with {{rightField}}\",\n  [constants.INCORRECT_FIELD_TYPE]: \"Field {{field}} is of type {{type}}, but expected {{expected}}\",\n  [constants.UNSUPPORTED_FUNCTION_FOR_FIELD]: \"Unsupported function {{funcKey}} for field {{field}}\",\n  [constants.REQUIRED_FUNCTION_ARG]: \"Value of arg {{argName}} for func {{funcName}} is required\",\n  [constants.INCORRECT_FUNCTION_RETURN_TYPE]: \"Function {{funcKey}} should return value of type {{returnType}}, but got {{valueType}}\",\n  [constants.INVALID_RANGE]: \"Invalid range\",\n  \n  [constants.ITEM_POSITION_ROOT]: \"Root\",\n  [constants.ITEM_POSITION+\"__rule\"]: \"Leaf #{{globalLeafNo}}\",\n  [constants.ITEM_POSITION+\"__group\"]: \"Group #{{globalGroupNo}}\",\n  [constants.ITEM_POSITION+\"__rule_group\"]: \"Rule-group #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__case_group\"]: \"Case #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__rule__deleted\"]: \"Deleted leaf #{{globalLeafNo}}\",\n  [constants.ITEM_POSITION+\"__group__deleted\"]: \"Deleted group #{{globalGroupNo}}\",\n  [constants.ITEM_POSITION+\"__rule_group__deleted\"]: \"Deleted rule-group #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__case_group__deleted\"]: \"Deleted case #{{globalNoByType}}\",\n  [constants.ITEM_POSITION_IN_CASE]: \"{{str}} in case #{{caseNo}}\",\n  [constants.ITEM_POSITION_WITH_INDEX_PATH]: \"{{str}} (index path: {{indexPath, list}})\",\n};\n","import i18next from \"i18next\";\nimport { translations as validationTranslations } from \"./validation/translations\";\n\nexport const NSV = \"raqbvalidation\";\nexport const NSVP = `${NSV}:`;\n\nconst i18n = i18next.createInstance();\ni18n.init({\n  fallbackLng: \"en\",\n});\ni18n.addResources(\"en\", NSV, validationTranslations);\n\nexport const translateValidation = (key, args) => {\n  if (key?.str) {\n    // already translated\n    return key.str;\n  }\n  if (key?.key) {\n    return translateValidation(key.key, key.args);\n  }\n  if (args === null) {\n    return key;\n  }\n  return i18n.t(\n    key.includes(\":\") ? key : NSVP+key,\n    args\n  );\n};\n\nexport default i18n;\n","import omit from \"lodash/omit\";\nimport Immutable from \"immutable\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldSrc,\n  extendConfig} from \"./configUtils\";\nimport {\n  getOperatorsForField, getWidgetForFieldOp, whatRulePropertiesAreCompleted,\n  selectTypes, getValueSourcesForFieldOp,\n} from \"../utils/ruleUtils\";\nimport {getOpCardinality, getFirstDefined, deepEqual} from \"../utils/stuff\";\nimport {getItemInListValues} from \"../utils/listValues\";\nimport {defaultOperatorOptions} from \"../utils/defaultUtils\";\nimport {fixPathsInTree, getItemByPath, getFlatTree} from \"../utils/treeUtils\";\nimport {setFuncDefaultArg} from \"../utils/funcUtils\";\nimport {queryString} from \"../export/queryString\";\nimport * as constants from \"../i18n/validation/constains\";\nimport { translateValidation } from \"../i18n\";\n\nexport { translateValidation };\n\nconst typeOf = (v) => {\n  if (typeof v === \"object\" && v !== null && Array.isArray(v))\n    return \"array\";\n  else\n    return (typeof v);\n};\n\nconst isTypeOf = (v, type) => {\n  if (typeOf(v) === type)\n    return true;\n  if (type === \"number\" && !isNaN(v))\n    return true; //can be casted\n  return false;\n};\n\n// tip: If showErrorMessage is false, this function will always return true\nexport const isValidTree = (tree, config) => {\n  return getTreeBadFields(tree, config).length === 0;\n};\n\n// tip: If showErrorMessage is false, this function will always return []\n// tip: If LHS is func, func key will be used to put in array of bad fields (naive)\nexport const getTreeBadFields = (tree, config) => {\n  const {showErrorMessage} = config.settings;\n  let badFields = [];\n\n  function _processNode (item, path, lev) {\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const valueError = item.getIn([\"properties\", \"valueError\"]);\n    const fieldError = item.getIn([\"properties\", \"fieldError\"]);\n    const field = item.getIn([\"properties\", \"field\"]);\n    const fieldStr = field?.get?.(\"func\") ?? field;\n    const hasValueError = valueError?.size > 0 && valueError.filter(v => v != null).size > 0;\n    const isBad = hasValueError || !!fieldError;\n    if (isBad && showErrorMessage) {\n      // for showErrorMessage=false valueError/fieldError is used to hold last error, but actual value is always valid\n      badFields.push(fieldStr);\n    }\n    if (children) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  if (tree)\n    _processNode(tree, [], 0);\n\n  return Array.from(new Set(badFields));\n};\n\n// @deprecated\nexport const checkTree = (tree, config) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const options = {\n    removeEmptyGroups: config.settings.removeEmptyGroupsOnLoad,\n    removeIncompleteRules: config.settings.removeIncompleteRulesOnLoad,\n    removeEmptyRules: config.settings.removeEmptyRulesOnLoad,\n    forceFix: false,\n  };\n  const {fixedTree, allErrors, isSanitized} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    options\n  );\n  if (isSanitized && allErrors.length) {\n    console.warn(\"Tree check errors: \", allErrors);\n  }\n  return fixedTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @returns {ValidationItemErrors[]}\n*/\nexport const validateTree = (tree, config, options = {}) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const finalOptions = {\n    ...options,\n    // disbale sanitize options, just validate\n    removeEmptyGroups: false,\n    removeEmptyRules: false,\n    removeIncompleteRules: false,\n    forceFix: false,\n  };\n  const {allErrors} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    finalOptions\n  );\n  return allErrors;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @returns {{\n *   fixedTree: Immutable.Map, \n *   fixedErrors: ValidationItemErrors[],\n *   nonFixedErrors: ValidationItemErrors[],\n *   allErrors: ValidationItemErrors[],\n * }}\n */\nexport const sanitizeTree = (tree, config, options = {}) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const finalOptions = {\n    // defaults\n    removeEmptyGroups: true,\n    removeEmptyRules: true,\n    removeIncompleteRules: true,\n    forceFix: false,\n    ...options,\n  };\n  const {fixedTree, fixedErrors, nonFixedErrors, allErrors} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    finalOptions\n  );\n  return {fixedTree, fixedErrors, nonFixedErrors, allErrors};\n};\n\n// tip: Should be used only internally in createValidationMemo()\nexport const validateAndFixTree = (newTree, _oldTree, newConfig, oldConfig, removeEmptyGroups, removeEmptyRules, removeIncompleteRules) => {\n  if (removeEmptyGroups === undefined) {\n    removeEmptyGroups = newConfig.settings.removeEmptyGroupsOnLoad;\n  }\n  if (removeEmptyRules === undefined) {\n    removeEmptyRules = newConfig.settings.removeEmptyRulesOnLoad;\n  }\n  if (removeIncompleteRules === undefined) {\n    removeIncompleteRules = newConfig.settings.removeIncompleteRulesOnLoad;\n  }\n  const options = {\n    // sanitize options\n    removeEmptyGroups,\n    removeEmptyRules,\n    removeIncompleteRules,\n    forceFix: false,\n  };\n  let {fixedTree, allErrors, fixedErrors, nonFixedErrors, isSanitized} = _validateTree(\n    newTree, _oldTree, newConfig, oldConfig,\n    options\n  );\n  if (isSanitized && fixedErrors.length) {\n    console.warn(\"Fixed tree errors: \", fixedErrors);\n  }\n  // if (nonFixedErrors.length) {\n  //   console.info(\"Tree validation errors: \", nonFixedErrors);\n  // }\n  fixedTree = fixPathsInTree(fixedTree);\n  return fixedTree;\n};\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @typedef {{\n *   removeEmptyGroups?: boolean,\n *   removeEmptyRules?: boolean,\n *   removeIncompleteRules?: boolean,\n *   forceFix?: boolean,\n *   translateErrors?: boolean,\n *   includeStringifiedItems?: boolean,\n *   stringifyFixedItems?: boolean,\n *   stringifyItemsUserFriendly?: boolean,\n *   includeItemsPositions?: boolean,\n * }} SanitizeOptions\n * @typedef {{\n *   path: string[],\n *   errors: {\n *     key: string, args?: object | null, str?: string,\n *     side?: \"lhs\"|\"rhs\"|\"op\", delta?: number, fixed?: boolean, fixedTo?: any, fixedFrom?: any,\n *   }[],\n *   itemStr?: string,\n *   itemPosition?: {\n *     caseNo: number | null, globalNoByType: number, indexPath: number[], globalLeafNo?: number, globalGroupNo?: number,\n *     isDeleted: boolean, index: number, type: \"rule\"|\"group\"|\"rule_group\"\n *   },\n *   itemPositionStr?: string,\n * }} ValidationItemErrors\n * @returns {{\n *   fixedTree: Immutable.Map, \n *   allErrors: ValidationItemErrors[],\n *   fixedErrors: ValidationItemErrors[],\n *   nonFixedErrors: ValidationItemErrors[],\n *   isSanitized: boolean\n * }}\n */\nexport const _validateTree = (\n  tree, _oldTree, config, oldConfig, options\n) => {\n  if (!tree) {\n    return {\n      fixedTree: tree,\n      allErrors: [],\n      fixedErrors: [],\n      nonFixedErrors: [],\n      isSanitized: false,\n    };\n  }\n\n  const {\n    // sanitize options\n    removeEmptyGroups,\n    removeEmptyRules,\n    removeIncompleteRules,\n    forceFix,\n    // translation options\n    translateErrors = true,\n    includeStringifiedItems = true,\n    stringifyFixedItems = false,\n    stringifyItemsUserFriendly = true,\n    includeItemsPositions = true,\n  } = options || {};\n  const c = {\n    config, oldConfig, removeEmptyGroups, removeEmptyRules, removeIncompleteRules, forceFix,\n  };\n  const meta = {\n    errors: {},\n  };\n  const fixedTree = validateItem(tree, [], null, meta, c);\n  const isSanitized = meta.sanitized;\n\n  // build allErrors\n  const allErrors = [];\n  let flatItems, oldFlatItems;\n  if (includeItemsPositions) {\n    flatItems = getFlatTree(fixedTree).items;\n  }\n  for (const id in meta.errors) {\n    let { path, errors } = meta.errors[id];\n    if (translateErrors) {\n      errors = errors.map(e => {\n        return {\n          ...e,\n          str: translateValidation(e),\n        };\n      });\n    }\n    let errorItem = { path, errors };\n    if (includeStringifiedItems) {\n      const item = getItemByPath(stringifyFixedItems ? fixedTree : tree, path);\n      const isRoot = path.length === 1;\n      if (!isRoot && item.get(\"type\") !== \"group\") {\n        const isDebugMode = true;\n        const isForDisplay = stringifyItemsUserFriendly;\n        const itemStr = queryString(item, config, isForDisplay, isDebugMode);\n        errorItem.itemStr = itemStr;\n      }\n    }\n    if (includeItemsPositions) {\n      let flatItem = flatItems[id];\n      const isDeleted = !flatItem;\n      if (isDeleted) {\n        // get positions from old tree\n        if (!oldFlatItems) {\n          oldFlatItems = getFlatTree(tree).items;\n        }\n        flatItem = oldFlatItems[id];\n      }\n      if (flatItem) {\n        // build position object\n        const itemPosition = {\n          ...flatItem.position,\n          index: flatItem.index,\n          type: flatItem.type,\n          isDeleted,\n        };\n        errorItem.itemPosition = itemPosition;\n        // build position string\n        const trKey = !flatItem.index\n          ? constants.ITEM_POSITION_ROOT\n          : constants.ITEM_POSITION+\"__\"+flatItem.type+(isDeleted ? \"__deleted\" : \"\");\n        const trArgs = {\n          ...itemPosition\n        };\n        if (stringifyItemsUserFriendly) {\n          // convert indexes from 0-based to 1-based (user friendly)\n          for (const k of [\"caseNo\", \"globalLeafNo\", \"globalGroupNo\", \"globalNoByType\"]) {\n            if (trArgs[k] != undefined) {\n              trArgs[k] = trArgs[k] + 1;\n            }\n          }\n          trArgs.indexPath = itemPosition.indexPath?.map(ind => ind+1);\n        }\n        errorItem.itemPositionStr = translateValidation(trKey, trArgs);\n        if (flatItem.index) { // don't extend for root\n          if (flatItem.caseId && flatItem.type !== \"case_group\") {\n            errorItem.itemPositionStr = translateValidation(constants.ITEM_POSITION_IN_CASE, {\n              ...trArgs,\n              str: errorItem.itemPositionStr\n            });\n          }\n          errorItem.itemPositionStr = translateValidation(constants.ITEM_POSITION_WITH_INDEX_PATH, {\n            ...trArgs,\n            str: errorItem.itemPositionStr\n          });\n        }\n      }\n    }\n    allErrors.push(errorItem);\n  }\n\n  // split allErrors to fixedErrors and nonFixedErrors\n  let fixedErrors = [];\n  let nonFixedErrors = [];\n  for (const itemErrors of allErrors) {\n    const fixedItemErrors = itemErrors.errors.filter(e => !!e.fixed);\n    let nonFixedItemErrors = itemErrors.errors.filter(e => !e.fixed && e.key !== \"EMPTY_QUERY\");\n    if (fixedItemErrors.length) {\n      fixedErrors.push({\n        ...itemErrors,\n        errors: fixedItemErrors,\n      });\n    }\n    if (nonFixedItemErrors.length) {\n      nonFixedErrors.push({\n        ...itemErrors,\n        errors: nonFixedItemErrors,\n      });\n    }\n  }\n\n  return {\n    fixedTree, allErrors, fixedErrors, nonFixedErrors, isSanitized\n  };\n};\n\nfunction _addError(meta, item, path, err) {\n  const id = item.get(\"id\");\n  if (!meta.errors[id]) {\n    meta.errors[id] = {\n      path: [...path, id],\n      errors: [],\n    };\n  }\n  meta.errors[id].errors.push(err);\n}\n\nfunction _setErrorsAsFixed(meta, item) {\n  const id = item.get(\"id\");\n  if (meta.errors[id]) {\n    meta.errors[id].errors.map(e => {\n      e.fixed = true;\n    });\n  }\n}\n\nfunction validateItem (item, path, itemId, meta, c) {\n  const type = item?.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\" || type == \"case_group\" || type == \"switch_group\")) {\n    return validateGroup(item, path, itemId, meta, c);\n  } else if (type === \"rule\") {\n    return validateRule(item, path, itemId, meta, c);\n  } else {\n    return item;\n  }\n}\n\nfunction validateGroup (item, path, itemId, meta, c) {\n  const {removeEmptyGroups, removeIncompleteRules, forceFix, config} = c;\n  const {showErrorMessage} = config.settings;\n  const canFix = !showErrorMessage || forceFix;\n  let id = item.get(\"id\");\n  let children = item.get(\"children1\");\n  const isRoot = !path.length;\n  const oldChildren = children;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\");\n  const field = properties?.get(\"field\");\n  const mode = properties?.get(\"mode\");\n  const operator = properties?.get?.(\"operator\");\n  const isGroupExt = type === \"rule_group\" && mode === \"array\";\n  const isCase = type === \"case_group\";\n  const isDefaultCase = isCase && children == undefined;\n  const cardinality = operator ? config.operators[operator]?.cardinality ?? 1 : undefined;\n  // tip: for group operators some/none/all children ARE required, for group operator count children are NOT required\n  // tip: default case should contain only value\n  const childrenAreRequired = isCase ? !isDefaultCase : (isGroupExt ? cardinality == 0 : true);\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  if (isGroupExt) {\n    item = validateRule(item, path, itemId, meta, c);\n  }\n\n  //validate children\n  let submeta = {\n    errors: {}\n  };\n  children = children\n    ?.map( (currentChild, childId) => validateItem(currentChild, path.concat(id), childId, submeta, c) );\n  const nonEmptyChildren = children?.filter((currentChild) => (currentChild != undefined));\n  if (removeEmptyGroups) {\n    children = nonEmptyChildren;\n  }\n  let sanitized = submeta.sanitized || (oldChildren?.size != children?.size);\n  const isEmptyChildren = !nonEmptyChildren?.size;\n  let canDrop = removeEmptyGroups && !isRoot;\n  if (isGroupExt && field) {\n    // to remove rule-group like \"SOME cars\" (with SOME/ALL/NONE, but without filters), we need to rely on removeIncompleteRules\n    canDrop = removeIncompleteRules;\n  }\n  if (isEmptyChildren && childrenAreRequired) {\n    _addError(meta, item, path, {\n      key: isRoot\n        ? constants.EMPTY_QUERY\n        : isCase\n          ? constants.EMPTY_CASE\n          : isGroupExt\n            ? constants.EMPTY_RULE_GROUP\n            : constants.EMPTY_GROUP,\n      args: { field },\n      fixed: canDrop,\n    });\n    if (canDrop) {\n      _setErrorsAsFixed(meta, item);\n      item = undefined;\n    }\n  }\n\n  if (sanitized)\n    meta.sanitized = true;\n  if (sanitized && item)\n    item = item.set(\"children1\", children);\n\n  meta.errors = {\n    ...meta.errors,\n    ...(submeta?.errors || {}),\n  };\n  return item;\n}\n\n/**\n * @param {Immutable.Map} item\n * @returns {Immutable.Map}\n */\nfunction validateRule (item, path, itemId, meta, c) {\n  const {removeIncompleteRules, removeEmptyRules, forceFix, config, oldConfig} = c;\n  const {showErrorMessage} = config.settings;\n  const canFix = !showErrorMessage || forceFix;\n  const origItem = item;\n  let id = item.get(\"id\");\n  let properties = item.get(\"properties\");\n  if (!properties) {\n    const err = {\n      key: constants.INCOMPLETE_RULE,\n      args: {},\n      fixed: removeIncompleteRules || removeEmptyRules\n    };\n    _addError(meta, item, path, err);\n    return undefined;\n  }\n  let field = properties.get(\"field\") || null;\n  let fieldSrc = properties.get(\"fieldSrc\") || null;\n  let operator = properties.get(\"operator\") || null;\n  let operatorOptions = properties.get(\"operatorOptions\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let value = properties.get(\"value\");\n  let valueError = properties.get(\"valueError\");\n  let fieldError = properties.get(\"fieldError\");\n\n  const serializeRule = () => {\n    return {\n      field: field?.toJS?.() || field,\n      fieldSrc,\n      operator,\n      operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n      valueSrc: valueSrc ? valueSrc.toJS() : null,\n      value: value ? value.toJS() : null,\n      valueError: valueError ? valueError.toJS() : null,\n      fieldError: fieldError ? fieldError : null,\n    };\n  };\n\n  const oldSerialized = serializeRule();\n  //const _wasValid = field && operator && value && !value.includes(undefined);\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  //validate field\n  const fieldDefinition = field ? getFieldConfig(config, field) : null;\n  if (field && !fieldDefinition) {\n    _addError(meta, item, path, {\n      key: constants.NO_CONFIG_FOR_FIELD,\n      args: { field },\n      side: \"lhs\",\n      fixed: removeIncompleteRules || removeEmptyRules,\n    });\n    field = null;\n  }\n  if (field == null) {\n    properties = [\n      \"operator\", \"operatorOptions\", \"valueSrc\", \"value\", \"valueError\", \"fieldError\", \"field\"\n    ].reduce((map, key) => map.delete(key), properties);\n    operator = null;\n  }\n  if (!fieldSrc) {\n    fieldSrc = getFieldSrc(field);\n    properties = properties.set(\"fieldSrc\", fieldSrc);\n  }\n\n  //validate operator\n  // Backward compatibility: obsolete operator range_between\n  if (operator === \"range_between\" || operator === \"range_not_between\") {\n    operator = operator === \"range_between\" ? \"between\" : \"not_between\";\n    // _addError(meta, item, path, {\n    //   type: \"fix\",\n    //   key: constants.FIXED_OPERATOR,\n    //   args: { from: properties.get(\"operator\"), to: operator, field }\n    // });\n    properties = properties.set(\"operator\", operator);\n  }\n  const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n  if (operator && !operatorDefinition) {\n    _addError(meta, item, path, {\n      key: constants.NO_CONFIG_FOR_OPERATOR,\n      args: { operator },\n      side: \"op\",\n      fixed: removeIncompleteRules || removeEmptyRules,\n    });\n    operator = null;\n  }\n  const availOps = field ? getOperatorsForField(config, field) : [];\n  if (field) {\n    if (!availOps?.length) {\n      _addError(meta, item, path, {\n        key: constants.UNSUPPORTED_FIELD_TYPE,\n        args: { field },\n        side: \"lhs\",\n        fixed: removeIncompleteRules || removeEmptyRules,\n      });\n      operator = null;\n    } else if (operator && availOps.indexOf(operator) == -1) {\n      if (operator === \"is_empty\" || operator === \"is_not_empty\") {\n        // Backward compatibility: is_empty #494\n        operator = operator === \"is_empty\" ? \"is_null\" : \"is_not_null\";\n        // _addError(meta, item, path, {\n        //   type: \"fix\",\n        //   key: constants.FIXED_OPERATOR,\n        //   args: { from: properties.get(\"operator\"), to: operator, field }\n        // });\n        properties = properties.set(\"operator\", operator);\n      } else {\n        _addError(meta, item, path, {\n          key: constants.UNSUPPORTED_OPERATOR_FOR_FIELD,\n          args: { operator, field },\n          side: \"lhs\",\n          fixed: removeIncompleteRules || removeEmptyRules,\n        });\n        operator = null;\n      }\n    }\n  }\n  if (operator == null) {\n    // do not unset operator ?\n    properties = [\n      \"operatorOptions\", \"valueSrc\", \"value\", \"valueError\"\n    ].reduce((map, key) => map.delete(key), properties);\n  }\n\n  //validate operator options\n  operatorOptions = properties.get(\"operatorOptions\");\n  //const _operatorCardinality = operator ? getOpCardinality(operatorDefinition) : null;\n  if (!operator || operatorOptions && !operatorDefinition.options) {\n    operatorOptions = null;\n    properties = properties.delete(\"operatorOptions\");\n  } else if (operator && !operatorOptions && operatorDefinition.options) {\n    operatorOptions = defaultOperatorOptions(config, operator, field);\n    properties = properties.set(\"operatorOptions\", operatorOptions);\n  }\n\n  //validate values\n  valueSrc = properties.get(\"valueSrc\");\n  value = properties.get(\"value\");\n  const isEndValue = true;\n  let {\n    newValue, newValueSrc, newValueError, validationErrors, newFieldError, fixedField,\n  } = getNewValueForFieldOp(config, oldConfig, properties, field, operator, null, canFix, isEndValue);\n  value = newValue;\n  valueSrc = newValueSrc;\n  valueError = newValueError;\n  fieldError = newFieldError;\n  field = fixedField;\n  properties = properties.set(\"field\", field);\n  properties = properties.set(\"value\", value);\n  properties = properties.set(\"valueSrc\", valueSrc);\n  if (showErrorMessage) {\n    properties = properties\n      .set(\"valueError\", valueError)\n      .set(\"fieldError\", fieldError);\n  } else {\n    properties = properties\n      .delete(\"valueError\")\n      .delete(\"fieldError\");\n  }\n\n  const newSerialized = serializeRule();\n  const hasBeenSanitized = !deepEqual(oldSerialized, newSerialized);\n  const compl = whatRulePropertiesAreCompleted(properties.toObject(), config);\n  const isCompleted = compl.score >= 3;\n  if (hasBeenSanitized) {\n    meta.sanitized = true;\n    item = item.set(\"properties\", properties);\n  }\n  validationErrors?.map(e =>\n    _addError(meta, item, path, e)\n  );\n  if (!isCompleted) {\n    let shoudlRemoveRule = !compl.score ? removeEmptyRules : removeIncompleteRules;\n    // if (shoudlRemoveRule && showErrorMessage) {\n    //   // try to be not so rude about removing incomplete rule with functions\n    //   const complLite = whatRulePropertiesAreCompleted(properties.toObject(), config, true);\n    //   const isCompletedLite = complLite.score >= 3;\n    //   if (isCompletedLite) {\n    //     shoudlRemoveRule = false;\n    //   }\n    // }\n    let incError = { key: constants.INCOMPLETE_RULE, args: {} };\n    if (!compl.parts.field) {\n      incError.key = constants.INCOMPLETE_LHS;\n      incError.side = \"lhs\";\n    } else if(!compl.parts.value) {\n      incError.key = constants.INCOMPLETE_RHS;\n      incError.side = \"rhs\";\n      if (\n        newSerialized.valueSrc?.[0] && newSerialized.valueSrc?.[0] != oldSerialized.valueSrc?.[0]\n        && newSerialized.value?.[0] != undefined \n      ) {\n        // eg. operator `starts_with` supports only valueSrc \"value\"\n        incError.key = constants.INVALID_VALUE_SRC;\n        incError.args = {\n          valueSrcs: newSerialized.valueSrc\n        };\n      }\n    }\n    incError.fixed = shoudlRemoveRule;\n    _addError(meta, item, path, incError);\n    if (shoudlRemoveRule) {\n      _setErrorsAsFixed(meta, item);\n      item = undefined;\n    }\n  }\n\n  return item;\n}\n\n\n/**\n * \n * @param {bool} canFix true is useful for func values to remove bad args\n * @param {bool} isEndValue false if value is in process of editing by user\n * @return {array} [fixedValue, allErrors] - if `allErrors` is empty and `canFix` == true, `fixedValue` can differ from value if was fixed.\n *  `allErrors` is an array of {key, args, fixed, fixedFrom, fixedTo}\n *  If `args` === null, `key` should not be translated\n */\nexport const validateValue = (\n  config, leftField, field, operator, value, valueType, valueSrc, asyncListValues,\n  canFix = false, isEndValue = false, canDropArgs = false\n) => {\n  let allErrors = [];\n  let fixedValue = value;\n\n  if (value != null) {\n    if (valueSrc === \"field\") {\n      [fixedValue, allErrors] = validateFieldValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue);\n    } else if (valueSrc === \"func\") {\n      [fixedValue, allErrors] = validateFuncValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue, canDropArgs);\n    } else if (valueSrc === \"value\" || !valueSrc) {\n      [fixedValue, allErrors] = validateNormalValue(field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue);\n    }\n\n    let fixedAllErrors = !allErrors?.find(e => !e.fixed);\n    const shouldCallValidateFn = !!field\n      // `validateValue` should not be available for valueSrc === \"func\" or \"field\"\n      && ![\"field\", \"func\"].includes(valueSrc)\n      // eg. if value was > max, and fixed to max, but max value can not satisfy validateValue() in config\n      && (!allErrors?.length || fixedAllErrors);\n    if (shouldCallValidateFn) {\n      //todo: why not just take fieldSettings from fieldConfig, why need to use getFieldWidgetConfig() ??\n      // const fieldConfig = getFieldConfig(config, field);\n      // const fieldSettings = fieldConfig?.fieldSettings;\n      const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n      const fieldWidgetDefinition = omit(getFieldWidgetConfig(config, field, operator, w, valueSrc), [\"factory\"]);\n      const rightFieldDefinition = (valueSrc === \"field\" ? getFieldConfig(config, value) : null);\n      const fieldSettings = fieldWidgetDefinition; // widget definition merged with fieldSettings\n\n      const fn = fieldWidgetDefinition.validateValue;\n      if (typeof fn === \"function\") {\n        const args = [\n          fixedValue, \n          fieldSettings,\n          operator,\n          operatorDefinition\n        ];\n        if (valueSrc === \"field\")\n          args.push(rightFieldDefinition);\n        const validResult = fn.call(config.ctx, ...args);\n        if (typeof validResult === \"object\" && validResult !== null && !Array.isArray(validResult)) {\n          let newError;\n          if (validResult.error?.key) {\n            newError = {...validResult.error};\n          } else {\n            // Note: `null` means it's not translated string!\n            newError = {key: validResult.error, args: null};\n          }\n          if (validResult.fixedValue !== undefined && canFix) {\n            newError.fixed = true;\n            newError.fixedFrom = fixedValue;\n            newError.fixedTo = validResult.fixedValue;\n            fixedValue = validResult.fixedValue;\n          }\n          allErrors.push(newError);\n        } else if (typeof validResult === \"boolean\") {\n          if (validResult == false) {\n            allErrors.push({key: constants.INVALID_VALUE, args: {}});\n          }\n        } else if (typeof validResult === \"string\") {\n          allErrors.push({key: validResult, args: null});\n        }\n      }\n    }\n\n    // if can't fix value, use defaultValue\n    fixedAllErrors = !allErrors?.find(e => !e.fixed);\n    if (allErrors?.length && !fixedAllErrors && canFix) {\n      const fieldConfig = getFieldConfig(config, field);\n      const fieldSettings = fieldConfig?.fieldSettings;\n      const defaultValue = fieldSettings?.defaultValue;\n      if (defaultValue !== undefined) {\n        const lastError = allErrors[allErrors.length - 1];\n        lastError.fixed = true;\n        lastError.fixedFrom = fixedValue;\n        lastError.fixedTo = defaultValue;\n        fixedValue = defaultValue;\n        // mark all errors as fixed\n        allErrors.map(e => {\n          e.fixed = true;\n        });\n      }\n    }\n  }\n  \n  return [fixedValue, allErrors];\n};\n\n/**\n * \n */\nconst validateValueInList = (value, listValues, canFix, isEndValue, removeInvalidMultiSelectValuesOnLoad) => {\n  const values = Immutable.List.isList(value) ? value.toJS() : (value instanceof Array ? [...value] : undefined);\n  let fixedValue = value;\n  let allErrors = [];\n  if (values) {\n    const [goodValues, badValues] = values.reduce(([goodVals, badVals], val) => {\n      const vv = getItemInListValues(listValues, val);\n      if (vv == undefined) {\n        return [goodVals, [...badVals, val]];\n      } else {\n        return [[...goodVals, vv.value], badVals];\n      }\n    }, [[], []]);\n    const needFix = badValues.length > 0;\n    // always remove bad values at tree validation as user can't unselect them (except AntDesign widget)\n    canFix = canFix || removeInvalidMultiSelectValuesOnLoad === true;\n    fixedValue = canFix && needFix ? goodValues : value;\n    if (badValues.length) {\n      const fixed = canFix && needFix;\n      allErrors.push({\n        key: constants.BAD_MULTISELECT_VALUES,\n        args: { badValues, count: badValues.length },\n        fixed,\n        fixedFrom: fixed ? values : undefined,\n        fixedTo: fixed ? fixedValue : undefined,\n      });\n    }\n    return [fixedValue, allErrors];\n  } else {\n    const vv = getItemInListValues(listValues, value);\n    if (vv == undefined) {\n      fixedValue = canFix ? null : value;\n      allErrors.push({\n        key: constants.BAD_SELECT_VALUE,\n        args: { value },\n        fixed: canFix,\n        fixedFrom: canFix ? value : undefined,\n        fixedTo: canFix ? fixedValue : undefined,\n      });\n    } else {\n      fixedValue = vv.value;\n    }\n    return [fixedValue, allErrors];\n  }\n};\n\n/**\n * \n */\nconst validateNormalValue = (field, value, valueSrc, valueType, asyncListValues, config, operator = null, canFix = false, isEndValue = false) => {\n  let allErrors = [];\n  let fixedValue = value;\n  if (field) {\n    const fieldConfig = getFieldConfig(config, field);\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const wConfig = config.widgets[w];\n    const wType = wConfig?.type;\n    const jsType = wConfig?.jsType;\n    const fieldSettings = fieldConfig?.fieldSettings;\n    const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n    const isAsyncListValues = !!fieldSettings?.asyncFetch;\n    // todo: for select/multiselect value can be string or number\n    const canSkipTypeCheck = listValues || isAsyncListValues;\n\n    // validate type\n    if (valueType && wType && valueType != wType) {\n      allErrors.push({\n        key: constants.INCORRECT_VALUE_TYPE,\n        args: { wType, valueType }\n      });\n      return [value, allErrors];\n    }\n    if (jsType && !isTypeOf(value, jsType) && !canSkipTypeCheck) {\n      allErrors.push({\n        key: constants.INCORRECT_VALUE_JS_TYPE,\n        args: { jsType, valueTypeof: typeOf(value) }\n      });\n      return [value, allErrors];\n    }\n\n    if (fieldSettings) {\n      // validate against list of values\n      const realListValues = asyncListValues || listValues;\n      if (realListValues && !fieldSettings.allowCustomValues) {\n        [fixedValue, allErrors] = validateValueInList(\n          value, realListValues, canFix, isEndValue, config.settings.removeInvalidMultiSelectValuesOnLoad\n        );\n      }\n      // validate length\n      if (fieldSettings.maxLength > 0 && value != null && String(value).length > fieldSettings.maxLength) {\n        fixedValue = canFix ? String(value).substring(0, fieldSettings.maxLength) : value;\n        allErrors.push({\n          key: constants.VALUE_LENGTH_CONSTRAINT_FAIL,\n          args: { value, length: String(value).length, fieldSettings },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n      // validate min/max\n      if (fieldSettings.min != null && value < fieldSettings.min) {\n        fixedValue = canFix ? fieldSettings.min : value;\n        allErrors.push({\n          key: constants.VALUE_MIN_CONSTRAINT_FAIL,\n          args: { value, fieldSettings },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n      if (fieldSettings.max != null && value > fieldSettings.max) {\n        fixedValue = canFix ? fieldSettings.max : value;\n        allErrors.push({\n          key: constants.VALUE_MAX_CONSTRAINT_FAIL,\n          args: { value, fieldSettings },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n    }\n  }\n\n  return [fixedValue, allErrors];\n};\n\n\n/**\n * \n */\nconst validateFieldValue = (leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null, canFix = false, isEndValue = false) => {\n  const allErrors = [];\n  const {fieldSeparator, canCompareFieldWithField} = config.settings;\n  const isFuncArg = typeof field == \"object\" && field?._isFuncArg;\n  const leftFieldStr = Array.isArray(leftField) ? leftField.join(fieldSeparator) : leftField;\n  const leftFieldConfig = getFieldConfig(config, leftField);\n  const rightFieldStr = Array.isArray(value) ? value.join(fieldSeparator) : value;\n  const rightFieldConfig = getFieldConfig(config, value);\n  if (!rightFieldConfig) {\n    allErrors.push({\n      key: constants.NO_CONFIG_FOR_FIELD_VALUE,\n      args: { field: rightFieldStr }\n    });\n    return [value, allErrors];\n  }\n  if (leftField && rightFieldStr === leftFieldStr && !isFuncArg) {\n    allErrors.push({\n      key: constants.CANT_COMPARE_FIELD_WITH_ITSELF,\n      args: { field: leftFieldStr }\n    });\n    return [value, allErrors];\n  }\n  if (valueType && valueType != rightFieldConfig.type) {\n    allErrors.push({\n      key: constants.INCORRECT_FIELD_TYPE,\n      args: { field: rightFieldStr, type: rightFieldConfig.type, expected: valueType }\n    });\n    return [value, allErrors];\n  }\n  if (leftField && !isFuncArg && canCompareFieldWithField) {\n    const canUse = canCompareFieldWithField(\n      leftFieldStr, leftFieldConfig, rightFieldStr, rightFieldConfig, operator\n    );\n    if (!canUse) {\n      allErrors.push({\n        key: constants.CANT_COMPARE_FIELD_WITH_FIELD,\n        args: { leftField: leftFieldStr, rightField: rightFieldStr }\n      });\n      return [value, allErrors];\n    }\n  }\n  return [value];\n};\n\n/**\n * @param {bool} canDropArgs true only if user sets new func key\n */\nconst validateFuncValue = (\n  leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null,\n  canFix = false, isEndValue = false, canDropArgs = false\n) => {\n  let fixedValue = value;\n  const allErrors = [];\n\n  if (!value) {\n    // empty value\n    return [value];\n  }\n  const funcKey = value.get?.(\"func\");\n  if (!funcKey) {\n    // it's not a function value\n    return [value];\n  }\n  const fieldDef = getFieldConfig(config, field);\n  if (fieldDef?.funcs && !fieldDef.funcs.includes(funcKey)) {\n    allErrors.push({\n      key: constants.UNSUPPORTED_FUNCTION_FOR_FIELD,\n      args: { funcKey, field }\n    });\n    return [value, allErrors];\n  }\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    allErrors.push({\n      key: constants.NO_CONFIG_FOR_FUNCTION,\n      args: { funcKey }\n    });\n    return [value, allErrors];\n  }\n  const funcName = funcConfig.label ?? funcKey;\n  if (valueType && funcConfig.returnType != valueType) {\n    allErrors.push({\n      key: constants.INCORRECT_FUNCTION_RETURN_TYPE,\n      args: { funcKey, funcName, returnType: funcConfig.returnType, valueType }\n    });\n    return [value, allErrors];\n  }\n  //tip: Exception for canDropArgs (true only if changing func) - can fix/drop args to fit new func validations\n  canFix = canFix || canDropArgs;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const args = fixedValue.get(\"args\");\n    const argVal = args ? args.get(argKey) : undefined;\n    const argDef = getFieldConfig(config, argConfig);\n    const argName = argDef?.label ?? argKey;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValue !== undefined) {\n      const [fixedArgVal, argErrors] = validateValue(\n        config, leftField, argDef, operator, argValue, argConfig.type, argValueSrc, asyncListValues, canFix, isEndValue, canDropArgs,\n      );\n      const isValid = !argErrors?.length;\n      const willFix = canFix && fixedArgVal !== argValue;\n      //const willFixAllErrors = !isValid && willFix && !allErrors?.find(e => !e.fixed);\n      //tip: reset to default ONLY if isEndValue==true\n      const canDropOrReset = canFix && !isValid && !willFix && (isEndValue || canDropArgs);\n      if (willFix) {\n        fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], fixedArgVal);\n      }\n      if (canDropOrReset) {\n        // reset to default\n        fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n        fixedValue = setFuncDefaultArg(config, fixedValue, funcConfig, argKey);\n      }\n      if (!isValid) {\n        const firstError = argErrors.find(e => !e.fixed && !e.ignore) ?? argErrors.find(e => !e.fixed) ?? argErrors[0];\n        const fixed = willFix || canDropOrReset;\n        const ignore = argErrors.filter(e => !e.ignore).length === 0;\n        if (firstError) {\n          const argValidationError = translateValidation(firstError);\n          allErrors.push({\n            key: constants.INVALID_FUNC_ARG_VALUE,\n            args: {\n              funcKey, funcName, argKey, argName, argValidationError,\n              // more meta\n              argErrors,\n            },\n            ignore,\n            fixed,\n            fixedFrom: fixed ? argValue : undefined,\n            fixedTo: fixed ? (willFix ? fixedArgVal : argConfig.defaultValue) : undefined,\n          });\n        }\n      }\n    } else if (!argConfig.isOptional && (isEndValue || canDropArgs)) {\n      const canReset = canFix && argConfig.defaultValue !== undefined && (isEndValue || canDropArgs);\n      const canAddError = isEndValue;\n      //tip: Exception for canDropArgs (true only if changing func) - don't show error about required args\n      if (canAddError) {\n        allErrors.push({\n          key: constants.REQUIRED_FUNCTION_ARG,\n          args: { funcKey, funcName, argKey, argName },\n          fixed: canReset,\n          fixedTo: canReset ? argConfig.defaultValue : undefined,\n          ignore: !canReset, // tip: don't show error message in UI about missing arg after validation API call\n        });\n      }\n      if (canReset) {\n        // set default\n        fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n        fixedValue = setFuncDefaultArg(config, fixedValue, funcConfig, argKey);\n      }\n    }\n  }\n\n  return [fixedValue, allErrors];\n};\n\n/**\n * \n */\nexport const validateRange = (config, field, operator, values, valueSrcs) => {\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n  const valueSrcsArr = (valueSrcs.toJS ? valueSrcs.toJS() : valueSrcs);\n  const valuesArr = (values.toJS ? values.toJS() : values);\n  const areValueSrcsPureValues = valueSrcsArr.filter(vs => vs == \"value\" || vs == null).length == operatorCardinality;\n  let rangeError;\n  if (operatorConfig?.validateValues && areValueSrcsPureValues) {\n    const valueSrc = valueSrcsArr[0];\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, w, valueSrc);\n    const jsValues = fieldWidgetDefinition?.toJS\n      ? valuesArr.map(v => {\n        let jsVal = fieldWidgetDefinition.toJS.call(config.ctx, v, fieldWidgetDefinition);\n        if (jsVal instanceof Date) {\n          jsVal = jsVal.getTime();\n        }\n        return jsVal;\n      })\n      : valuesArr;\n    const validResult = operatorConfig.validateValues(jsValues);\n    if (typeof validResult === \"boolean\") {\n      if (validResult == false) {\n        rangeError = {\n          key: constants.INVALID_RANGE,\n          args: {\n            jsValues,\n            values: valuesArr,\n          }\n        };\n      }\n    }\n  }\n  return rangeError;\n};\n\n\n\n/**\n * @param {Immutable.Map} current\n * @param {string} changedProp\n * @param {boolean} canFix (default: false) true - eg. set value to max if it > max or revert or drop\n * @param {boolean} isEndValue (default: false) true - if value is in process of editing by user\n * @param {boolean} canDropArgs (default: false)\n * @return {{canReuseValue, newValue, newValueSrc, newValueType, fixedField, operatorCardinality,  newValueError, newFieldError, validationErrors}}\n */\nexport const getNewValueForFieldOp = function (\n  config, oldConfig = null, current, newField, newOperator, changedProp = null,\n  canFix = false, isEndValue = false, canDropArgs = false\n) {\n  //const isValidatingTree = (changedProp === null);\n  if (!oldConfig)\n    oldConfig = config;\n  const {\n    keepInputOnChangeFieldSrc, convertableWidgets, clearValueOnChangeField, clearValueOnChangeOp,\n  } = config.settings;\n  const currentField = current.get(\"field\");\n  const currentFieldType = current.get(\"fieldType\");\n  const currentFieldSrc = current.get(\"fieldSrc\");\n  const currentOperator = current.get(\"operator\");\n  const currentValue = current.get(\"value\");\n  const currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n  const currentValueType = current.get(\"valueType\", new Immutable.List());\n  const asyncListValues = current.get(\"asyncListValues\");\n\n  const currentOperatorConfig = getOperatorConfig(oldConfig, currentOperator);\n  const newOperatorConfig = getOperatorConfig(config, newOperator, newField);\n  const currentOperatorCardinality = currentOperator ? getOpCardinality(currentOperatorConfig) : null;\n  const operatorCardinality = newOperator ? getOpCardinality(newOperatorConfig) : null;\n  const currentFieldConfig = getFieldConfig(oldConfig, currentField);\n  const newFieldConfig = getFieldConfig(config, newField);\n  const isOkWithoutField = !currentField && currentFieldType && keepInputOnChangeFieldSrc;\n  const currentType = currentFieldConfig?.type || currentFieldType;\n  const newType = newFieldConfig?.type || !newField && isOkWithoutField && currentType;\n  const currentListValuesType = currentFieldConfig?.listValuesType;\n  const newListValuesType = newFieldConfig?.listValuesType;\n  const currentFieldSimpleValue = currentField?.get?.(\"func\") || currentField;\n  const newFieldSimpleValue = newField?.get?.(\"func\") || newField;\n  const hasFieldChanged = newFieldSimpleValue != currentFieldSimpleValue;\n\n  let validationErrors = [];\n\n  let canReuseValue = (currentField || isOkWithoutField) && currentOperator && newOperator && currentValue != undefined;\n  if (\n    !(currentType && newType && currentType == newType)\n    || changedProp === \"field\" && hasFieldChanged && clearValueOnChangeField\n    || changedProp === \"operator\" && clearValueOnChangeOp\n  ) {\n    canReuseValue = false;\n  }\n  if (hasFieldChanged && selectTypes.includes(newType)) {\n    if (newListValuesType && newListValuesType === currentListValuesType) {\n      // ok\n    } else {\n      // different fields of select types has different listValues\n      canReuseValue = false;\n    }\n  }\n\n  // validate func LHS\n  let newFieldError;\n  if (currentFieldSrc === \"func\" && newField) {\n    const [fixedField, fieldErrors] = validateValue(\n      config, null, null, newOperator, newField, newType, currentFieldSrc, asyncListValues, canFix, isEndValue, canDropArgs\n    );\n    const isValid = !fieldErrors?.length;\n    const willFix = fixedField !== newField;\n    const willFixAllErrors = !isValid && willFix && !fieldErrors.find(e => !e.fixed);\n    const willRevert = canFix && !isValid && !willFixAllErrors && !!changedProp && newField !== currentField;\n    const willDrop = false; //canFix && !isValid && !willFixAllErrors && !willRevert && !changedProp;\n    if (willDrop) {\n      newField = null;\n    } else if (willRevert) {\n      newField = currentField;\n    } else if (willFix) {\n      newField = fixedField;\n    }\n    if (!isValid) {\n      const showError = !isValid && !willFixAllErrors && !willDrop && !willRevert;\n      const firstError = fieldErrors.find(e => !e.fixed && !e.ignore);\n      if (showError && firstError) {\n        newFieldError = translateValidation(firstError);\n      }\n      // tip: even if we don't show errors, but revert LHS, put the reason of revert\n      fieldErrors.map(e => validationErrors.push({\n        side: \"lhs\",\n        ...e,\n        fixed: e.fixed || willRevert || willDrop,\n      }));\n    }\n  }\n\n  // compare old & new widgets\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    const vs = currentValueSrc.get(i) || null;\n    const currentWidget = getWidgetForFieldOp(oldConfig, currentField, currentOperator, vs);\n    const newWidget = getWidgetForFieldOp(config, newField, newOperator, vs);\n    // need to also check value widgets if we changed operator and current value source was 'field'\n    // cause for select type op '=' requires single value and op 'in' requires array value\n    const currentValueWidget = vs === \"value\" ? currentWidget\n      : getWidgetForFieldOp(oldConfig, currentField, currentOperator, \"value\");\n    const newValueWidget = vs === \"value\" ? newWidget\n      : getWidgetForFieldOp(config, newField, newOperator, \"value\");\n\n    const canReuseWidget = newValueWidget == currentValueWidget\n      || (convertableWidgets[currentValueWidget] || []).includes(newValueWidget)\n      || !currentValueWidget && isOkWithoutField;\n    if (!canReuseWidget) {\n      canReuseValue = false;\n    }\n  }\n\n  if (currentOperator != newOperator && [currentOperator, newOperator].includes(\"proximity\")) {\n    canReuseValue = false;\n  }\n\n  const firstValueSrc = currentValueSrc.first();\n  const firstWidgetConfig = getFieldWidgetConfig(config, newField, newOperator, null, firstValueSrc);\n  let valueSources = getValueSourcesForFieldOp(config, newField, newOperator, null);\n  if (!newField && isOkWithoutField) {\n    valueSources = Object.keys(config.settings.valueSourcesInfo);\n  }\n  const defaultValueSrc = valueSources[0];\n  let defaultValueType;\n  if (operatorCardinality == 1 && firstWidgetConfig && firstWidgetConfig.type !== undefined) {\n    defaultValueType = firstWidgetConfig.type;\n  } else if (operatorCardinality == 1 && newFieldConfig && newFieldConfig.type !== undefined) {\n    defaultValueType = newFieldConfig.type === \"!group\" ? \"number\" : newFieldConfig.type;\n  }\n\n  // changed operator from '==' to 'between'\n  let canExtendValueToRange = canReuseValue && changedProp === \"operator\"\n    && currentOperatorCardinality === 1 && operatorCardinality === 2;\n\n  let valueFixes = [];\n  let valueSrcFixes = [];\n  let valueTypeFixes = [];\n  let valueErrors = Array.from({length: operatorCardinality}, () => null);\n  if (canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      let v = currentValue.get(i);\n      let vType = currentValueType.get(i) || null;\n      let vSrc = currentValueSrc.get(i) || null;\n      if (canExtendValueToRange && i === 1) {\n        v = valueFixes[0] !== undefined ? valueFixes[0] : currentValue.get(0);\n        valueFixes[i] = v;\n        vType = currentValueType.get(0) || null;\n        vSrc = currentValueSrc.get(0) || null;\n      }\n      const isValidSrc = vSrc ? (valueSources.find(v => v == vSrc) !== undefined) : true;\n      const [fixedValue, allErrors] = validateValue(\n        config, newField, newField, newOperator, v, vType, vSrc, asyncListValues, canFix, isEndValue, canDropArgs\n      );\n      const isValid = !allErrors?.length;\n      // Allow bad value with error message\n      // But not on field change - in that case just drop bad value that can't be reused\n      // ? Maybe we should also drop bad value on op change?\n      // For bad multiselect value we have both error message + fixed value.\n      //  If we show error message, it will gone on next tree validation\n      const willFix = fixedValue !== v;\n      const willFixAllErrors = !isValid && willFix && !allErrors?.find(e => !e.fixed);\n      const allErrorsHandled = !allErrors?.find(e => !e.fixed && !e.ignore);\n     \n      // tip: is value src is invalid, drop ANYWAY\n      // tip: Edge case in demo:\n      //      Given \"login = LOWER(?)\", change config to not show errors -> \"LOWER(?)\" will be dropped\n      //      We don't want to drop func completely, so need to add `allErrorsAheHandled` or `vSrc !== \"func\"`\n      // todo: `hasFieldChanged` is not needed ?\n      const willDrop = !isValidSrc\n        || canFix && !isValid && !willFixAllErrors && (!allErrorsHandled || hasFieldChanged);\n      if (!isValid) {\n        // tip: even if we don't show errors, but drop bad values, put the reason of removal\n        allErrors?.map(e => validationErrors.push({\n          side: \"rhs\",\n          delta: i,\n          ...e,\n          fixed: e.fixed || willDrop,\n        }));\n      }\n      if (willDrop) {\n        valueFixes[i] = null;\n        if (i === 0) {\n          delete valueFixes[1];\n        }\n      }\n      const showError = !isValid && !willFix;\n      const firstError = allErrors?.find(e => !e.fixed && !e.ignore);\n      if (showError && firstError) {\n        valueErrors[i] = translateValidation(firstError);\n      }\n      if (willFix) {\n        valueFixes[i] = fixedValue;\n      }\n      if (canExtendValueToRange && i === 0 && !isValid && !willFix) {\n        // don't extend bad value to range\n        canExtendValueToRange = false;\n      }\n      if (canExtendValueToRange && i === 0 && [\"func\", \"field\"].includes(vSrc)) {\n        // don't extend func/field value, only primitive value\n        canExtendValueToRange = false;\n      }\n    }\n  }\n\n  // if can't reuse, get defaultValue\n  if (!canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      if (operatorCardinality === 1) {\n        // tip: default range values (for cardinality > 1) are not supported yet, todo\n        const dv = getFirstDefined([\n          newFieldConfig?.defaultValue,\n          newFieldConfig?.fieldSettings?.defaultValue,\n          firstWidgetConfig?.defaultValue\n        ]);\n        valueFixes[i] = dv;\n        if (dv?.func) {\n          valueSrcFixes[i] = \"func\";\n          //tip: defaultValue of src \"field\" is not supported, todo\n        }\n      }\n    }\n  }\n\n  // set default valueSrc and valueType\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    let vs = canReuseValue && currentValueSrc.get(i) || null;\n    let vt = canReuseValue && currentValueType.get(i) || null;\n    if (canReuseValue && canExtendValueToRange && i === 1) {\n      vs = valueSrcFixes[i] ?? currentValueSrc.get(0);\n      vt = valueTypeFixes[i] ?? currentValueType.get(0);\n      valueSrcFixes[i] = vs;\n      valueTypeFixes[i] = vt;\n    }\n    const isValidSrc = valueSources.includes(vs);\n    if (!isValidSrc) {\n      valueSrcFixes[i] = defaultValueSrc;\n    }\n    if (!vt) {\n      valueTypeFixes[i] = defaultValueType;\n    }\n  }\n\n  // build new values\n  let newValue = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n    return valueFixes[i] !== undefined ? valueFixes[i] : (canReuseValue ? currentValue.get(i) : undefined);\n  }));\n  const newValueSrc = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n    return valueSrcFixes[i] ?? (canReuseValue && currentValueSrc.get(i) || null);\n  }));\n  const newValueType = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n    return valueTypeFixes[i] ?? (canReuseValue && currentValueType.get(i) || null);\n  }));\n\n  // Validate range\n  const rangeErrorObj = validateRange(config, newField, newOperator, newValue, newValueSrc);\n  if (rangeErrorObj) {\n    // last element in `valueError` list is for range validation error\n    const rangeValidationError = translateValidation(rangeErrorObj);\n    const willFix = canFix && operatorCardinality >= 2;\n    const badValue = newValue;\n    if (willFix) {\n      valueFixes[1] = newValue.get(0);\n      newValue = newValue.set(1, valueFixes[1]);\n      valueErrors[1] = valueErrors[0];\n    }\n    const showError = !willFix;\n    if (showError) {\n      valueErrors.push(rangeValidationError);\n    }\n    validationErrors.push({\n      side: \"rhs\",\n      delta: -1,\n      ...rangeErrorObj,\n      fixed: willFix,\n      fixedFrom: willFix ? [badValue.get(0), badValue.get(1)] : undefined,\n      fixedTo: willFix ? [newValue.get(0), newValue.get(1)] : undefined\n    });\n  }\n\n  const newValueError = new Immutable.List(valueErrors);\n\n  return {\n    canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality, fixedField: newField,\n    newValueError, newFieldError, validationErrors,\n  };\n};\n","\nimport {getFieldConfig, getFuncConfig, getFuncSignature} from \"../utils/configUtils\";\nimport {filterValueSourcesForField, completeValue, selectTypes} from \"../utils/ruleUtils\";\nimport {validateValue} from \"../utils/validation\";\nimport Immutable from \"immutable\";\n\n// helpers\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\n\n/**\n * @param {Immutable.Map} value\n * @param {object} config\n * @return {Immutable.Map | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeFuncValue = (value, config) => {\n  if (!value)\n    return undefined;\n  const funcKey = value.get(\"func\");\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return undefined;\n  let complValue = value;\n  let tmpHasOptional = false;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const {valueSources, isOptional, defaultValue} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    const args = complValue.get(\"args\");\n    const argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = (argVal ? argVal.get(\"valueSrc\") : undefined) || argDefaultValueSrc;\n    if (argValue !== undefined) {\n      const completeArgValue = completeValue(argValue, argValueSrc, config);\n      if (completeArgValue === undefined) {\n        return undefined;\n      } else if (completeArgValue !== argValue) {\n        complValue = complValue.setIn([\"args\", argKey, \"value\"], completeArgValue);\n      }\n      if (tmpHasOptional) {\n        // has gap\n        return undefined;\n      }\n    } else if (defaultValue !== undefined && !isObject(defaultValue)) {\n      complValue = complValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n      complValue = complValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n    } else if (isOptional) {\n      // optional\n      tmpHasOptional = true;\n    } else {\n      // missing value\n      return undefined;\n    }\n  }\n  return complValue;\n};\n\n\n/**\n * @param {Immutable.Map} value \n * @return {array} - [usedFields, badFields]\n */\n// const getUsedFieldsInFuncValue = (value, config) => {\n//   let usedFields = [];\n//   let badFields = [];\n\n//   const _traverse = (value) => {\n//     const args = value && value.get(\"args\");\n//     if (!args) return;\n//     for (const arg of args.values()) {\n//       if (arg.get(\"valueSrc\") == \"field\") {\n//         const rightField = arg.get(\"value\");\n//         if (rightField) {\n//           const rightFieldDefinition = config ? getFieldConfig(config, rightField) : undefined;\n//           if (config && !rightFieldDefinition)\n//             badFields.push(rightField);\n//           else\n//             usedFields.push(rightField);\n//         }\n//       } else if (arg.get(\"valueSrc\") == \"func\") {\n//         _traverse(arg.get(\"value\"));\n//       }\n//     }\n//   };\n\n//   _traverse(value);\n\n//   return [usedFields, badFields];\n// };\n\n\n/**\n * Used @ FuncWidget\n * @param {Immutable.Map} value \n * @param {string} funcKey \n * @param {object} config \n * @param {boolean} canFixArgs\n */\nexport const setFunc = (value, funcKey, config, canFixArgs) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  value = value || new Immutable.Map();\n  if (Array.isArray(funcKey)) {\n    // fix for cascader\n    funcKey = funcKey.join(fieldSeparator);\n  }\n  const oldFuncKey = value.get(\"func\");\n  const oldArgs = value.get(\"args\");\n  value = value.set(\"func\", funcKey);\n\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  const newFuncSignature = funcKey && getFuncSignature(config, funcKey);\n  const oldFuncSignature = oldFuncKey && getFuncSignature(config, oldFuncKey);\n  const keepArgsKeys = getCompatibleArgsOnFuncChange(oldFuncSignature, newFuncSignature, oldArgs, config, canFixArgs);\n  if (keepArgsKeys.length) {\n    const argsKeys = Object.keys(newFuncSignature.args);\n    const deleteArgsKeys = argsKeys.filter(k => !keepArgsKeys.includes(k));\n    value = deleteArgsKeys.reduce((value, k) => value.deleteIn([\"args\", k]), value);\n  } else {\n    value = value.set(\"args\", new Immutable.Map());\n  }\n\n  // defaults\n  value = setFuncDefaultArgs(config, value, funcConfig);\n\n  return value;\n};\n\nconst setFuncDefaultArgs = (config, funcValue, funcConfig) => {\n  if (funcConfig) {\n    for (const argKey in funcConfig.args) {\n      funcValue = setFuncDefaultArg(config, funcValue, funcConfig, argKey);\n    }\n  }\n  return funcValue;\n};\n\nexport const setFuncDefaultArg = (config, funcValue, funcConfig, argKey) => {\n  const argConfig = funcConfig.args[argKey];\n  const {valueSources, defaultValue} = argConfig;\n  const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n  const firstValueSrc = filteredValueSources.length ? filteredValueSources[0] : undefined;\n  const defaultValueSrc = defaultValue ? (isObject(defaultValue) && !!defaultValue.func ? \"func\" : \"value\") : undefined;\n  const argDefaultValueSrc = defaultValueSrc || firstValueSrc;\n  const hasValue = funcValue.getIn([\"args\", argKey]);\n  if (!hasValue) {\n    if (defaultValue !== undefined) {\n      funcValue = funcValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n    }\n    if (argDefaultValueSrc) {\n      funcValue = funcValue.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return funcValue;\n};\n\nconst getDefaultArgValue = ({defaultValue: value}) => {\n  if (isObject(value) && !Immutable.Map.isMap(value) && value.func) {\n    return Immutable.fromJS(value, function (k, v) {\n      return Immutable.Iterable.isIndexed(v) ? v.toList() : v.toOrderedMap();\n    });\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {*} argVal \n* @param {object} argConfig \n*/\nexport const setArgValue = (value, argKey, argVal, argConfig, config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey, \"value\"], argVal);\n\n    // set default arg value source\n    const valueSrc = value.getIn([\"args\", argKey, \"valueSrc\"]);\n    const {valueSources} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    let argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    if (!argDefaultValueSrc && filteredValueSources.includes(\"value\")) {\n      argDefaultValueSrc = \"value\";\n    }\n    if (!valueSrc && argDefaultValueSrc) {\n      value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {string} argValSrc \n* @param {object} argConfig \n*/\nexport const setArgValueSrc = (value, argKey, argValSrc, _argConfig, _config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey], new Immutable.Map({valueSrc: argValSrc}));\n  }\n  return value;\n};\n\n// see getFuncSignature in configUtils\nexport const getCompatibleArgsOnFuncChange = (s1, s2, argVals, config, canFixArgs = false) => {\n  if (s1?.returnType != s2?.returnType)\n    return [];\n  const checkIndexes = false;\n  const keys = Object.keys(s2.args);\n  const compatibleKeys = keys.filter((k, i) => {\n    const arg2 = s2.args[k];\n    const arg1 = s1.args[k];\n    const oldInd = Object.keys(s1.args).indexOf(k);\n    if (!arg1 && (arg2.defaultValue !== undefined || arg2.isOptional)) {\n      return true;\n    }\n    if (checkIndexes && i !== oldInd) {\n      return false;\n    }\n    if (arg1?.type != arg2.type)\n      return false;\n    if (selectTypes.includes(arg2.type)) {\n      if (!arg1.listValuesType || arg1.listValuesType !== arg2.listValuesType)\n        return false;\n    }\n    if (argVals) {\n      const argVal = argVals.get(k);\n      const argValue = argVal?.get(\"value\");\n      const argValueSrc = argVal?.get(\"valueSrc\");\n      if (argValueSrc && arg2.valueSources && !arg2.valueSources.includes(argValueSrc))\n        return false;\n      const leftField = null, operator = null, argDef = arg2, asyncListValues = null, isEndValue = true;\n      const [_fixedArgVal, argValidErrors] = validateValue(\n        config, leftField, argDef, operator, argValue, argDef.type, argValueSrc, asyncListValues, canFixArgs, isEndValue\n      );\n      if (argValidErrors?.filter(e => !e.fixed)?.length)\n        return false;\n    }\n\n    return true;\n  });\n  return compatibleKeys;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldRawConfig, getFuncConfig, getFieldParts,\n  isFieldDescendantOfField\n} from \"./configUtils\";\nimport last from \"lodash/last\";\nimport {completeFuncValue} from \"./funcUtils\";\n\nexport const selectTypes = [\n  \"select\",\n  \"multiselect\",\n  \"treeselect\",\n  \"treemultiselect\",\n];\n\n\nexport const getOperatorsForType = (config, fieldType) => {\n  return config.types[fieldType]?.operators || null;\n};\n\nexport const getOperatorsForField = (config, field) => {\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOps = fieldConfig ? fieldConfig.operators : [];\n  return fieldOps;\n};\n\nexport const getFirstOperator = (config, field) => {\n  const fieldOps = getOperatorsForField(config, field);\n  return fieldOps?.[0] ?? null;\n};\n\nexport const calculateValueType = (value, valueSrc, config) => {\n  let calculatedValueType = null;\n  if (value) {\n    if (valueSrc === \"field\") {\n      const fieldConfig = getFieldConfig(config, value);\n      if (fieldConfig) {\n        calculatedValueType = fieldConfig.type;\n      }\n    } else if (valueSrc === \"func\") {\n      const funcKey = value.get(\"func\");\n      if (funcKey) {\n        const funcConfig = getFuncConfig(config, funcKey);\n        if (funcConfig) {\n          calculatedValueType = funcConfig.returnType || funcConfig.type;\n        }\n      }\n    }\n  }\n  return calculatedValueType;\n};\n\nexport const getFuncPathLabels = (field, config, parentField = null) => {\n  return getFieldPathLabels(field, config, parentField, \"funcs\", \"subfields\");\n};\n\nexport const getFieldPathLabels = (field, config, parentField = null, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  const parentParts = getFieldParts(parentField, config);\n  const res = parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => [...parentParts, ...parts].join(fieldSeparator))\n    .map(part => {\n      const cnf = getFieldRawConfig(config, part, fieldsKey, subfieldsKey);\n      return cnf && cnf.label || last(part.split(fieldSeparator));\n    })\n    .filter(label => label != null);\n  return res;\n};\n\nexport const getFieldPartsConfigs = (field, config, parentField = null) => {\n  if (!field)\n    return null;\n  const parentFieldDef = parentField && getFieldRawConfig(config, parentField) || null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  const isDescendant = isFieldDescendantOfField(field, parentField, config);\n  const parentParts = !isDescendant ? [] : getFieldParts(parentField, config);\n  return parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => ({\n      part: [...parentParts, ...parts].join(fieldSeparator),\n      key: parts[parts.length - 1]\n    }))\n    .map(({part, key}) => {\n      const cnf = getFieldRawConfig(config, part);\n      return {key, cnf};\n    })\n    .map(({key, cnf}, ind, arr) => {\n      const parentCnf = ind > 0 ? arr[ind - 1].cnf : parentFieldDef;\n      return [key, cnf, parentCnf];\n    });\n};\n\nexport const getValueLabel = (config, field, operator, delta, valueSrc = null, isSpecialRange = false) => {\n  const isFuncArg = field && typeof field == \"object\" && !!field.func && !!field.arg;\n  const {showLabels} = config.settings;\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldWidgetConfig = getFieldWidgetConfig(config, field, operator, null, valueSrc) || {};\n  const mergedOpConfig = getOperatorConfig(config, operator, field) || {};\n    \n  const cardinality = isSpecialRange ? 1 : mergedOpConfig.cardinality;\n  let ret = null;\n  if (cardinality > 1) {\n    const valueLabels = fieldWidgetConfig.valueLabels || mergedOpConfig.valueLabels;\n    if (valueLabels)\n      ret = valueLabels[delta];\n    if (ret && typeof ret != \"object\") {\n      ret = {label: ret, placeholder: ret};\n    }\n    if (!ret) {\n      ret = {\n        label: config.settings.valueLabel + \" \" + (delta+1),\n        placeholder: config.settings.valuePlaceholder + \" \" + (delta+1),\n      };\n    }\n  } else {\n    let label = fieldWidgetConfig.valueLabel;\n    let placeholder = fieldWidgetConfig.valuePlaceholder;\n    if (isFuncArg) {\n      if (!label)\n        label = fieldConfig.label || field.arg;\n      if (!placeholder && !showLabels)\n        placeholder = fieldConfig.label || field.arg;\n    }\n\n    ret = {\n      label: label || config.settings.valueLabel, \n      placeholder: placeholder || config.settings.valuePlaceholder,\n    };\n  }\n  return ret;\n};\n\nfunction _getWidgetsAndSrcsForFieldOp (config, field, operator = null, valueSrc = null) {\n  let widgets = [];\n  let valueSrcs = [];\n  if (!field)\n    return {widgets, valueSrcs};\n  const isFuncArg = typeof field === \"object\" && (!!field.func && !!field.arg || field._isFuncArg);\n  const fieldConfig = getFieldConfig(config, field);\n  const opConfig = operator ? config.operators[operator] : null;\n  \n  if (fieldConfig?.widgets) {\n    for (const widget in fieldConfig.widgets) {\n      const widgetConfig = fieldConfig.widgets[widget];\n      if (!config.widgets[widget]) {\n        continue;\n      }\n      const widgetValueSrc = config.widgets[widget].valueSrc || \"value\";\n      let canAdd = true;\n      if (widget == \"field\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"field\"], fieldConfig).length > 0;\n      }\n      if (widget == \"func\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"func\"], fieldConfig).length > 0;\n      }\n      // If can't check operators, don't add\n      // Func args don't have operators\n      if (valueSrc == \"value\" && !widgetConfig.operators && !isFuncArg && field != \"!case_value\")\n        canAdd = false;\n      if (widgetConfig.operators && operator)\n        canAdd = canAdd && widgetConfig.operators.indexOf(operator) != -1;\n      if (valueSrc && valueSrc != widgetValueSrc && valueSrc != \"const\")\n        canAdd = false;\n      if (opConfig && opConfig.cardinality == 0 && (widgetValueSrc != \"value\"))\n        canAdd = false;\n      if (canAdd) {\n        widgets.push(widget);\n        let canAddValueSrc = fieldConfig.valueSources?.indexOf(widgetValueSrc) != -1;\n        if (opConfig?.valueSources?.indexOf(widgetValueSrc) == -1)\n          canAddValueSrc = false;\n        if (canAddValueSrc && !valueSrcs.find(v => v == widgetValueSrc))\n          valueSrcs.push(widgetValueSrc);\n      }\n    }\n  }\n\n  const widgetWeight = (w) => {\n    let wg = 0;\n    if (fieldConfig.preferWidgets) {\n      if (fieldConfig.preferWidgets.includes(w))\n        wg += (10 - fieldConfig.preferWidgets.indexOf(w));\n    } else if (w == fieldConfig.mainWidget) {\n      wg += 100;\n    }\n    if (w == \"field\") {\n      wg -= 1;\n    }\n    if (w == \"func\") {\n      wg -= 2;\n    }\n    return wg;\n  };\n\n  widgets.sort((w1, w2) => (widgetWeight(w2) - widgetWeight(w1)));\n    \n  return {widgets, valueSrcs};\n}\n\nexport const getWidgetsForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  return widgets;\n};\n\nexport const filterValueSourcesForField = (config, valueSrcs, fieldDefinition) => {\n  if (!fieldDefinition)\n    return valueSrcs;\n  const fieldType = fieldDefinition.type ?? fieldDefinition.returnType;\n  if (!valueSrcs)\n    valueSrcs = Object.keys(config.settings.valueSourcesInfo);\n  return valueSrcs.filter(vs => {\n    let canAdd = true;\n    if (vs == \"field\") {\n      if (config.__fieldsCntByType) {\n        // tip: LHS field can be used as arg in RHS function\n        const minCnt = fieldDefinition._isFuncArg ? 0 : 1;\n        canAdd = canAdd && config.__fieldsCntByType[fieldType] > minCnt;\n      }\n    }\n    if (vs == \"func\") {\n      if (config.__funcsCntByType)\n        canAdd = canAdd && !!config.__funcsCntByType[fieldType];\n      if (fieldDefinition.funcs)\n        canAdd = canAdd && fieldDefinition.funcs.length > 0;\n    }\n    return canAdd;\n  });\n};\n\nexport const getValueSourcesForFieldOp = (config, field, operator, fieldDefinition = null) => {\n  const {valueSrcs} = _getWidgetsAndSrcsForFieldOp(config, field, operator, null);\n  const filteredValueSrcs = filterValueSourcesForField(config, valueSrcs, fieldDefinition);\n  return filteredValueSrcs;\n};\n\nexport const getWidgetForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  let widget = null;\n  if (widgets.length)\n    widget = widgets[0];\n  return widget;\n};\n\n// can use alias (fieldName)\n// even if `parentField` is provided, `field` is still a full path\nexport const formatFieldName = (field, config, meta, parentField = null, options = {}) => {\n  if (!field) return;\n  const fieldDef = getFieldConfig(config, field) || {};\n  const {fieldSeparator} = config.settings;\n  const fieldParts = getFieldParts(field, config);\n  let fieldName = Array.isArray(field) ? field.join(fieldSeparator) : field;\n  if (options?.useTableName && fieldDef.tableName) { // legacy\n    const fieldPartsCopy = [...fieldParts];\n    fieldPartsCopy[0] = fieldDef.tableName;\n    fieldName = fieldPartsCopy.join(fieldSeparator);\n  }\n  if (fieldDef.fieldName) {\n    fieldName = fieldDef.fieldName;\n  }\n  if (parentField) {\n    const parentFieldDef = getFieldConfig(config, parentField) || {};\n    let parentFieldName = parentField;\n    if (fieldName.indexOf(parentFieldName + fieldSeparator) == 0) {\n      fieldName = fieldName.slice((parentFieldName + fieldSeparator).length);\n      // fieldName = \"#this.\" + fieldName; // ? for spel\n    } else {\n      if (fieldDef.fieldName) {\n        // ignore\n      } else {\n        meta.errors.push(`Can't cut group ${parentFieldName} from field ${fieldName}`);\n      }\n    }\n  }\n  return fieldName;\n};\n\n\n/**\n * Used together with keepInputOnChangeFieldSrc\n */\nexport const isEmptyItem = (item, config) => {\n  const type = item.get(\"type\");\n  const mode = item.getIn([\"properties\", \"mode\"]);\n  if (type == \"rule_group\" && mode == \"array\") {\n    return isEmptyRuleGroupExt(item, config);\n  } else if (type == \"group\" || type == \"rule_group\") {\n    return isEmptyGroup(item, config);\n  } else {\n    return isEmptyRule(item, config);\n  }\n};\n\nconst isEmptyRuleGroupExt = (item, config) => {\n  const children = item.get(\"children1\");\n  const properties = item.get(\"properties\");\n  return isEmptyRuleGroupExtPropertiesAndChildren(properties.toObject(), children, config);\n};\n\n/**\n * Used to remove group ext without confirmation\n * \n * If group operator is count, children can be empty.\n * If group operator is some/none/all, there should be at least one non-empty (even incomplete) child.\n */\nexport const isEmptyRuleGroupExtPropertiesAndChildren = (properties, children, config) => {\n  const operator = properties.operator;\n  const cardinality = config.operators[operator]?.cardinality ?? 1;\n  const childrenAreRequired = cardinality == 0; // tip: for group operators some/none/all\n  const filledParts = {\n    group: !isEmptyRuleProperties(properties, config),\n    children: !isEmptyGroupChildren(children, config),\n  };\n  const hasEnough = filledParts.group && (childrenAreRequired ? filledParts.children : true);\n  return !hasEnough;\n};\n\nconst isEmptyGroup = (group, config) => {\n  const children = group.get(\"children1\");\n  return isEmptyGroupChildren(children, config);\n};\n\n/**\n * Used to remove group without confirmation\n * @returns {boolean} false if there is at least one (even incomplete) child\n */\nexport const isEmptyGroupChildren = (children, config) => {\n  const hasEnough = children?.size > 0 && children.filter(ch => !isEmptyItem(ch, config)).size > 0;\n  return !hasEnough;\n};\n\nconst isEmptyRule = (rule, config) => {\n  const properties = rule.get(\"properties\");\n  return isEmptyRuleProperties(properties?.toObject() || {}, config);\n};\n\n/**\n * Used to remove rule without confirmation\n * @param properties is an Object, but properties (like value) are Immutable\n * @returns {boolean} true if there is no enough data in rule\n */\nexport const isEmptyRuleProperties = (properties, config) => {\n  const liteCheck = true;\n  const scoreThreshold = 3;\n  const compl = whatRulePropertiesAreCompleted(properties, config, liteCheck);\n  const hasEnough = compl.score >= scoreThreshold;\n  return !hasEnough;\n};\n\n/**\n * Used to validate rule\n * @param properties is an Object, but its properties (like `value`) are Immutable\n * @param liteCheck true can be used to check that rule has enough data to ask confirmation before delete\n * @return {{parts: {field: boolean, operator: boolean, value: boolean}, score: number}}\n */\nexport const whatRulePropertiesAreCompleted = ({\n  field, fieldSrc, fieldType,\n  operator,\n  value, valueSrc, valueType,\n}, config, liteCheck = false) => {\n  const cardinality = config.operators[operator]?.cardinality ?? 1;\n  const valueSrcs = valueSrc?.get ? valueSrc.toJS() : valueSrc;\n\n  // tip: for liteCheck==true `score` should equal 3 if both LHS and RHS are at least partially filled\n  const res = { parts: {}, score: 0 };\n  res.parts.field = liteCheck ? (field != null) : isCompletedValue(field, fieldSrc, config);\n  res.parts.operator = !!operator;\n  res.parts.value = value?.filter((val, delta) => \n    isCompletedValue(val, valueSrcs?.[delta], config, liteCheck)\n  )?.size >= (liteCheck ? Math.min(cardinality, 1) : cardinality);\n  res.score = Object.keys(res.parts).filter(k => !!res.parts[k]).length;\n\n  if (liteCheck && res.score < 3) {\n    // Boost score to confirm deletion:\n    // - if RHS is empty, but LHS is a completed function\n    // - if LHS is empty (only fieldType is set), but there is a completed function in RHS\n    const deepCheck = true;\n    if (!res.parts.value && fieldSrc === \"func\" && isCompletedValue(field, fieldSrc, config, false, deepCheck)) {\n      res.score++;\n    }\n    if (!res.parts.field) {\n      value?.map((val, delta) => {\n        if (valueSrcs?.[delta] === \"func\" && isCompletedValue(val, valueSrcs?.[delta], config, false, deepCheck)) {\n          res.score++;\n        }\n      });\n    }\n  }\n\n  return res;\n};\n\nconst isCompletedValue = (value, valueSrc, config, liteCheck = false, deepCheck = true) => {\n  if (!liteCheck && valueSrc == \"func\" && value) {\n    const funcKey = value.get?.(\"func\");\n    const funcConfig = getFuncConfig(config, funcKey);\n    if (funcConfig) {\n      const args = value.get(\"args\");\n      for (const argKey in funcConfig.args) {\n        const argConfig = funcConfig.args[argKey];\n        const argVal = args ? args.get(argKey) : undefined;\n        // const argDef = getFieldConfig(config, argConfig);\n        const argValue = argVal ? argVal.get(\"value\") : undefined;\n        const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n        if (argValue == undefined && argConfig?.defaultValue === undefined && !argConfig?.isOptional) {\n          // arg is not completed\n          return false;\n        }\n        if (argValue != undefined) {\n          if (!isCompletedValue(argValue, argValueSrc, config, deepCheck ? liteCheck : true)) {\n            // arg is complex and is not completed\n            return false;\n          }\n        }\n      }\n      // all args are completed\n      return true;\n    }\n  }\n  return value != undefined;\n};\n\n/**\n * @param {*} value\n * @param {'value'|'field'|'func'} valueSrc\n * @param {object} config\n * @return {* | undefined}  undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeValue = (value, valueSrc, config) => {\n  if (valueSrc == \"func\")\n    return completeFuncValue(value, config);\n  else\n    return value;\n};\n","import JL from \"json-logic-js\";\nimport moment from \"moment\";\n\nexport function applyJsonLogic(logic, data) {\n  return JL.apply(logic, data);\n}\n\nfunction addJsonLogicOperation(name, op) {\n  return JL.add_operation(name, op);\n}\n\nexport const customJsonLogicOperations = {\n  CALL: (fn, ctx, ...args) => (fn.call(ctx, ...args)),\n  JSX: (type, props) => ({type, props}),\n  mergeObjects: (obj1, obj2) => ({...obj1, ...obj2}),\n  fromEntries: (entries) => Object.fromEntries(entries),\n  strlen: (str) => (str?.length || 0),\n  regexTest: (str, pattern, flags) => str?.match(new RegExp(pattern, flags)) != null,\n  now: () => new Date(),\n  date_add: (date, val, dim) => { return moment(date).add(val, dim).toDate(); },\n  toLowerCase: (str) => str.toLowerCase(),\n  toUpperCase: (str) => str.toUpperCase(),\n};\n\nexport function addRequiredJsonLogicOperations() {\n  for (let k in customJsonLogicOperations) {\n    addJsonLogicOperation(k, customJsonLogicOperations[k]);\n  }\n}\n","import merge from \"lodash/merge\";\nimport pick from \"lodash/pick\";\nimport {isJsonLogic, isJSX, isDirtyJSX, cleanJSX, shallowEqual} from \"./stuff\";\nimport clone from \"clone\";\nimport JL from \"json-logic-js\";\nimport { addRequiredJsonLogicOperations, applyJsonLogic } from \"./jsonLogic\";\nimport { BasicFuncs } from \"..\";\nimport { getFieldRawConfig } from \"./configUtils\";\n\n// Add new operations for JsonLogic\naddRequiredJsonLogicOperations();\n\nexport { isJSX, isDirtyJSX, cleanJSX, applyJsonLogic };\n\nfunction applyJsonLogicWithPath(logic, data, path) {\n  let ret;\n  try {\n    ret = JL.apply(logic, data);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\nfunction callContextFn(_this, fn, args, path) {\n  let ret;\n  try {\n    ret = fn.call(_this, ...args);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\nexport const configKeys = [\"conjunctions\", \"fields\", \"types\", \"operators\", \"widgets\", \"settings\", \"funcs\", \"ctx\"];\n\n// type: \n//  x - iterate (with nesting `subfields`)\n//  \"r\" - RenderedReactElement\n//    Will be compiled with renderReactElement() into React element rendered with `React.createElement` (`ctx.RCE`)\n//  \"rf\" - JsonLogicFunction/string to render React\n//    JL data is { props, ctx }\n//    Should return {type, props} or string, where type or string - React component\n//    Can use { JSX: [\"SomeComponent\", {var: \"props\"}] } or just return \"SomeComponent\"\n//    Returned component will be searched in ctx.components/ctx.W/ctx.O, see getReactComponentFromCtx()\n//    Will be compiled with compileJsonLogicReact() into function with args (props, ctx) that will return renderReactElement()\n//  \"f\" - JsonLogicFunction/string\n//    JL data is { args, ctx } plus named args defined in `args` inside `compileMeta`\n//    Can use { CALL: [ {var: \"ctx.someFunc\"}, null, {var: \"args[0]\" }] } \n//    If string is passed, it's a path to function in ctx (with dot notation)\n//    Will be compiled with compileJsonLogic() into function with any args and `this` should be `ctx`\n\nconst compileMetaFieldSettings = {\n  asyncFetch: { type: \"f\", args: [\"search\", \"offset\"] },\n  labelYes: { type: \"r\" },\n  labelNo: { type: \"r\" },\n  marks: { type: \"r\", isArr: true },\n  validateValue: { type: \"f\", args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"] },\n};\n\nconst compileMetaWidget = {\n  ...compileMetaFieldSettings,\n  factory: { type: \"rf\" },\n  formatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"isForDisplay\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  sqlFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  spelFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  spelImportValue: { type: \"f\", args: [\"val\", \"wgtDef\", \"args\"] },\n  mongoFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  elasticSearchFormatValue: { type: \"f\", args: [\"queryType\", \"val\", \"op\", \"field\", \"config\"] },\n  jsonLogic: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  validateValue: { type: \"f\", args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"] }, // obsolete\n  toJS: { type: \"f\", args: [\"val\"] },\n};\n\nconst compileMetaOperator = {\n  options: { // proximity\n    factory: { type: \"rf\" },\n  },\n  formatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"isForDisplay\", \"fieldDef\"] },\n  mongoFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"useExpr\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  sqlFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  spelFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"field\", \"op\", \"vals\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  elasticSearchQueryType: { type: \"f\", ignore: \"string\", args: [\"valueType\"] },\n  textSeparators: { type: \"r\", isArr: true },\n};\n\nconst compileMetaConjunction = {\n  formatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"isForDisplay\"] },\n  sqlFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\"] },\n  spelFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"omitBrackets\"] },\n};\n\nconst compileMetaWidgetForType = {\n  widgetProps: compileMetaWidget,\n  opProps: compileMetaOperator\n};\n\nconst compileMetaFunc = {\n  renderBrackets: { type: \"r\", isArr: true },\n  renderSeps: { type: \"r\", isArr: true },\n\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"formattedArgs\"] },\n  jsonLogicImport: { type: \"f\", args: [\"val\"] },\n  spelImport: { type: \"f\", args: [\"spel\"] },\n  formatFunc: { type: \"f\", args: [\"formattedArgs\", \"isForDisplay\"] },\n  sqlFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n  mongoFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n  spelFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n};\n\nconst compileMetaSettings = {\n  locale: {\n    mui: { type: \"f\", args: [], invokeWith: [], ignore: \"jl\" },\n  },\n\n  canCompareFieldWithField: { type: \"f\", args: [\"leftField\", \"leftFieldConfig\", \"rightField\", \"rightFieldConfig\", \"op\"] },\n  formatReverse: { type: \"f\", args: [\"q\", \"op\", \"reversedOp\", \"operatorDefinition\", \"revOperatorDefinition\", \"isForDisplay\"] },\n  sqlFormatReverse: { type: \"f\", args: [\"q\"] },\n  spelFormatReverse: { type: \"f\", args: [\"q\"] },\n  formatField: { type: \"f\", args: [\"field\", \"parts\", \"label2\", \"fieldDefinition\", \"config\", \"isForDisplay\"] },\n  formatSpelField: { type: \"f\", args: [\"field\", \"parentField\", \"parts\", \"partsExt\", \"fieldDefinition\", \"config\"] },\n  formatAggr: { type: \"f\", args: [\"whereStr\", \"aggrField\", \"operator\", \"value\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"isForDisplay\", \"aggrFieldDef\"] },\n  \n  normalizeListValues: { type: \"f\", args: [\"listValues\", \"type\", \"fieldSettings\"] },\n\n  renderConfirm: { type: \"f\", args: [\"props\"] },\n  useConfirm: { type: \"f\", args: [] },\n\n  renderField: { type: \"rf\" },\n  renderOperator: { type: \"rf\" },\n  renderFunc: { type: \"rf\" },\n  renderConjs: { type: \"rf\" },\n  renderButton: { type: \"rf\" },\n  renderIcon: { type: \"rf\" },\n  renderButtonGroup: { type: \"rf\" },\n  renderValueSources: { type: \"rf\" },\n  renderFieldSources: { type: \"rf\" },\n  renderProvider: { type: \"rf\" },\n  renderSwitch: { type: \"rf\" },\n  renderSwitchPrefix: { type: \"r\" },\n\n  renderItem: { type: \"rf\" },\n  renderBeforeWidget: { type: \"rf\" },\n  renderAfterWidget: { type: \"rf\" },\n  renderBeforeActions: { type: \"rf\" },\n  renderAfterActions: { type: \"rf\" },\n  renderRuleError: { type: \"rf\" },\n};\n\nconst compileMeta = {\n  fields: {\n    x: {\n      fieldSettings: compileMetaFieldSettings,\n      widgets: {\n        x: compileMetaWidgetForType\n      },\n      mainWidgetProps: compileMetaWidget\n    },\n  },\n  widgets: {\n    x: compileMetaWidget\n  },\n  conjunctions: {\n    x: compileMetaConjunction\n  },\n  operators: {\n    x: compileMetaOperator\n  },\n  types: {\n    x: {\n      widgets: {\n        x: compileMetaWidgetForType\n      }\n    }\n  },\n  funcs: {\n    x: {\n      ...compileMetaFunc,\n      ...compileMetaFieldSettings,\n      fieldSettings: compileMetaFieldSettings,\n      args: {\n        x: {\n          ...compileMetaFieldSettings,\n          fieldSettings: compileMetaFieldSettings,\n        }\n      }\n    }\n  },\n  settings: compileMetaSettings,\n};\n\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\n/////////////\n\nexport const compressConfig = (config, baseConfig) => {\n  if (config.__fieldNames) {\n    throw new Error(\"Don't apply `compressConfig()` to extended config\");\n  }\n  let zipConfig = pick(config, configKeys);\n  delete zipConfig.ctx;\n\n  const _clean = (target, base, path, meta) => {\n    if (isObject(target)) {\n      if (isDirtyJSX(target)) {\n        target = cleanJSX(target);\n      }\n      if (path[0] === \"funcs\" && !base) {\n        const funcKey = path[path.length - 1];\n        // todo: if there will be change in `BasicFuncs` when funcs can be nested, need to chnage code to find `base`\n        base = getFieldRawConfig({\n          funcs: meta.BasicFuncs\n        }, funcKey, \"funcs\", \"subfields\") || undefined;\n        if (base) {\n          target[\"$$key\"] = funcKey;\n        }\n      }\n      if (base !== undefined && isObject(base)) {\n        for (let k in base) {\n          if (Object.prototype.hasOwnProperty.call(base, k)) {\n            if (!Object.keys(target).includes(k) || target[k] === undefined && base[k] !== undefined) {\n              // deleted in target\n              target[k] = \"$$deleted\";\n            } else {\n              target[k] = _clean(target[k], base[k], [...path, k], meta);\n              if (target[k] === undefined) {\n                delete target[k];\n              }\n            }\n          }\n        }\n      }\n      for (let k in target) {\n        if (Object.prototype.hasOwnProperty.call(target, k)) {\n          if (!base || !Object.keys(base).includes(k)) {\n            // new in target\n            target[k] = _clean(target[k], base?.[k], [...path, k], meta);\n          }\n          if (target[k] === undefined) {\n            delete target[k];\n          }\n        }\n      }\n      if (Object.keys(target).length === 0) {\n        target = undefined;\n      }\n    } else if (Array.isArray(target)) {\n      // don't deep compare arrays, but allow clean JSX inside array\n      target.forEach((val, ind) => {\n        target[ind] = _clean(target[ind], undefined, [...path, ind], meta);\n      });\n    }\n\n    if (base !== undefined && shallowEqual(target, base, true)) {\n      return undefined;\n    }\n\n    if (typeof target === \"function\") {\n      throw new Error(`compressConfig: function at ${path.join(\".\")} should be converted to JsonLogic`);\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // ignore\n    } else if (rootKey === \"fields\") {\n      // just copy\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], {}, [rootKey]);\n    } else if (rootKey === \"funcs\") {\n      // leave only diff for every used func\n      zipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      for (let k in zipConfig[rootKey]) {\n        _clean(zipConfig[rootKey][k], null, [rootKey, k], {\n          BasicFuncs\n        });\n      }\n    } else {\n      // leave only diff\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], baseConfig[rootKey], [rootKey]);\n    }\n  }\n\n  return zipConfig;\n};\n\n\nexport const decompressConfig = (zipConfig, baseConfig, ctx) => {\n  if (!zipConfig.settings.useConfigCompress) {\n    throw new Error(\"Please enable `useConfigCompress` in config settings to use decompressConfig()\");\n  }\n  let unzipConfig = {};\n\n  const _mergeDeep = (target, mixin, path) => {\n    if (isObject(mixin)) {\n      if (!isObject(target)) {\n        target = {};\n      }\n      for (let k in mixin) {\n        if (Object.prototype.hasOwnProperty.call(mixin, k)) {\n          if (mixin[k] === \"$$deleted\") {\n            delete target[k];\n          } else {\n            target[k] = _mergeDeep(target[k], mixin[k], [...path, k]);\n          }\n        }\n      }\n    } else if (Array.isArray(mixin)) {\n      // don't merge arrays, just replace\n      target = clone(mixin);\n    } else {\n      target = mixin;\n    }\n\n    return target;\n  };\n\n  const _resolveAndMergeDeep = (target, path, meta) => {\n    // try to resolve by $$key and merge\n    let resolved = false;\n    if (isObject(target) && Object.prototype.hasOwnProperty.call(target, \"$$key\") && target[\"$$key\"]) {\n      const func = getFieldRawConfig({\n        funcs: meta.BasicFuncs\n      }, target[\"$$key\"], \"funcs\", \"subfields\");\n      if (func) {\n        // deep merge func <- zip\n        delete target[\"$$key\"];\n        target = _mergeDeep(clone(func), target, path);\n        resolved = true;\n      } else {\n        throw new Error(`decompressConfig: basic function not found by key ${target[\"$$key\"]} at ${path.join(\".\")}`);\n      }\n    }\n\n    if (!resolved) {\n      if (isObject(target)) {\n        // loop through object to find refs ($$key)\n        for (let k in target) {\n          if (Object.prototype.hasOwnProperty.call(target, k)) {\n            target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n          }\n        }\n      } else if (Array.isArray(target)) {\n        // also loop through array to find refs ($$key)\n        for (const k of target) {\n          target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n        }\n      }\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // simple deep merge\n      unzipConfig[rootKey] = merge({}, baseConfig.ctx || {}, ctx || {});\n    } else if (rootKey === \"funcs\") {\n      // use $$key to pick funcs from BasicFuncs\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      _resolveAndMergeDeep(unzipConfig[rootKey], [rootKey], {\n        BasicFuncs\n      });\n    } else if (rootKey === \"fields\") {\n      // just copy\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n    } else {\n      // deep merge base <- zip\n      unzipConfig[rootKey] = clone(baseConfig[rootKey] || {});\n      _mergeDeep(unzipConfig[rootKey], zipConfig[rootKey] || {}, [rootKey]);\n    }\n  }\n\n  return unzipConfig;\n};\n\n/////////////\n\nexport const compileConfig = (config) => {\n  if (config.__compliled) {\n    return config;\n  }\n\n  config = clone(config);\n\n  const opts = {\n    ctx: config.ctx,\n  };\n\n  const logs = [];\n  _compileConfigParts(config, config, opts, compileMeta, logs);\n  //console.log(logs.join(\"\\n\"));\n\n  Object.defineProperty(config, \"__compliled\", {\n    enumerable: false,\n    writable: false,\n    value: true\n  });\n\n  return config;\n};\n\nfunction _compileConfigParts(config, subconfig, opts, meta, logs, path = []) {\n  if (!subconfig) return;\n  const isRoot = !path.length;\n  for (const k in meta) {\n    const submeta = meta[k];\n    let newPath = k === \"x\" ? path : [...path, k];\n    // if (isRoot) {\n    //   //logs.push(`Cloned ${newPath.join(\".\")}`);\n    //   config[k] = clone(config[k]);\n    // }\n    if (submeta.type === \"r\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      if (submeta.isArr) {\n        for (const ind in val) {\n          const newVal = renderReactElement(val[ind], opts, [...newPath, ind]);\n          if (newVal !== val[ind]) {\n            logs.push(`Compiled ${newPath.join(\".\")}[${ind}]`);\n            val[ind] = newVal;\n          }\n        }\n      } else {\n        const newVal = renderReactElement(val, opts, newPath, undefined);\n        if (newVal !== val) {\n          logs.push(`Compiled R ${newPath.join(\".\")}`);\n          targetObj[k] = newVal;\n        }\n      }\n    } else if (submeta.type === \"rf\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      const newVal = compileJsonLogicReact(val, opts, newPath, submeta.ignore);\n      if (newVal !== val) {\n        logs.push(`Compiled JL-RF ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (submeta.type === \"f\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      let newVal = compileJsonLogic(val, opts, newPath, submeta.args, submeta.ignore);\n      if (submeta.invokeWith && newVal && typeof newVal === \"function\") {\n        newVal = newVal.call(null, ...submeta.invokeWith);\n      }\n      if (newVal !== val) {\n        logs.push(`Compiled JL-F ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (k === \"x\") {\n      for (const field in subconfig) {\n        newPath = [...path, field];\n        const def = subconfig[field];\n        _compileConfigParts(config, def, opts, submeta, logs, newPath);\n        if (def.subfields) {\n          // tip: need to pass `meta`, not `submeta`\n          _compileConfigParts(config, def.subfields, opts, meta, logs, newPath);\n        }\n      }\n    } else {\n      const def = subconfig[k];\n      _compileConfigParts(config, def, opts, submeta, logs, newPath);\n    }\n  }\n}\n\nfunction compileJsonLogicReact(jl, opts, path, ignore = undefined) {\n  if (isJsonLogic(jl)) {\n    return function(props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = {\n        props, ctx,\n      };\n      let re = applyJsonLogicWithPath(jl, data, path);\n      if (typeof re === \"string\") {\n        re = {\n          type: re,\n          props\n        };\n      }\n      \n      const ret = renderReactElement(re, {ctx}, path);\n      return ret;\n    };\n  } else if (typeof jl === \"string\") {\n    return function(props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, [props, ctx], path);\n      } else {\n        const re = {\n          type: jl,\n          props\n        };\n        const ret = renderReactElement(re, {ctx}, path);\n        return ret;\n      }\n    };\n  }\n  return jl;\n}\n\nfunction compileJsonLogic(jl, opts, path, argNames, ignore = undefined) {\n  if (isJsonLogic(jl) && ignore !== \"jl\") {\n    return function(...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = (argNames || []).reduce((acc, k, i) => ({...acc, [k]: args[i]}), {\n        args, ctx\n      });\n      const ret = applyJsonLogicWithPath(jl, data, path);\n      return ret;\n    }.bind(opts?.ctx);\n  } else if (typeof jl === \"string\" && ignore !== \"string\") {\n    return function(...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, args, path);\n      } else {\n        throw new Error(`${path.join(\".\")} :: Function ${jl} is not found in ctx`);\n      }\n    }.bind(opts?.ctx);\n  }\n  return jl;\n}\n\n\n\nfunction getReactComponentFromCtx(name, ctx) {\n  return ctx?.components?.[name] || ctx.W[name] || ctx.O[name];\n}\n\nfunction renderReactElement(jsx, opts, path, key = undefined) {\n  if (isJSX(jsx)) {\n    let { type, props } = jsx;\n    if (typeof type !== \"string\") {\n      throw new Error(`renderReactElement for ${path.join(\".\")}: type should be string`);\n    }\n    const Cmp = getReactComponentFromCtx(type, opts.ctx) || type.toLowerCase();\n    let children;\n    if (key !== undefined) {\n      props = { ...props, key };\n    }\n    if (props?.children) {\n      children = renderReactElement(props.children, opts, path);\n      props = { ...props, children };\n    }\n    const res = opts.ctx.RCE(Cmp, props);\n    return res;\n  } else if (jsx instanceof Array) {\n    return jsx.map((el, i) => renderReactElement(el, opts, path, \"\"+i));\n  }\n  return jsx;\n}\n","\n\nexport const settings = {\n  formatField: (field, parts, label2, fieldDefinition, config, isForDisplay) => {\n    if (isForDisplay)\n      return label2;\n    else\n      return field;\n  },\n\n\n  fieldSources: [\"field\"],\n  keepInputOnChangeFieldSrc: true,\n  fieldItemKeysForSearch: [\"label\", \"path\", \"altLabel\", \"grouplabel\"],\n  listKeysForSearch: [\"title\", \"value\"],\n  valueSourcesInfo: {\n    value: {},\n  },\n  fieldSeparator: \".\",\n  fieldSeparatorDisplay: \".\",\n  canReorder: true,\n  canRegroup: true,\n  canDeleteLocked: false,\n  canLeaveEmptyGroup: true,\n  shouldCreateEmptyGroup: false,\n  canShortMongoQuery: true,\n  removeEmptyGroupsOnLoad: true,\n  removeEmptyRulesOnLoad: true,\n  removeIncompleteRulesOnLoad: false,\n  removeInvalidMultiSelectValuesOnLoad: true,\n  optimizeRenderWithInternals: false,\n  showErrorMessage: false,\n  setOpOnChangeField: [\"keep\", \"default\"], // 'default' (default if present), 'keep' (keep prev from last field), 'first', 'none'\n  groupOperators: [\"some\", \"all\", \"none\"],\n\n  defaultGroupConjunction: \"AND\",\n\n  // localization\n  locale: {\n    moment: \"en\",\n  },\n  valueLabel: \"Value\",\n  valuePlaceholder: \"Value\",\n  fieldLabel: \"Field\",\n  operatorLabel: \"Operator\",\n  funcLabel: \"Function\",\n  fieldPlaceholder: \"Select field\",\n  funcPlaceholder: \"Select function\",\n  operatorPlaceholder: \"Select operator\",\n  lockLabel: \"Lock\",\n  lockedLabel: \"Locked\",\n  deleteLabel: \"Delete\",\n  addGroupLabel: \"Add group\",\n  addCaseLabel: \"Add condition\",\n  addDefaultCaseLabel: \"Add default condition\",\n  defaultCaseLabel: \"Default:\",\n  addRuleLabel: \"Add rule\",\n  addSubRuleLabel: \"Add sub rule\",\n  delGroupLabel: \"Delete\",\n  notLabel: \"Not\",\n  fieldSourcesPopupTitle: \"Select source\",\n  valueSourcesPopupTitle: \"Select value source\",\n  removeRuleConfirmOptions: null,\n  removeGroupConfirmOptions: null,\n\n};\n","import merge from \"lodash/merge\";\nimport uuid from \"./uuid\";\nimport mergeWith from \"lodash/mergeWith\";\nimport {settings as defaultSettings} from \"../config/default\";\nimport moment from \"moment\";\nimport {mergeArraysSmart, logger, deepFreeze, mergeCustomizerNoArrays} from \"./stuff\";\nimport clone from \"clone\";\n\nimport { compileConfig } from \"./configSerialize\";\nimport { getFieldRawConfig } from \"./configUtils\";\n\n\nexport const extendConfig = (config, configId, canCompile = true) => {\n  //operators, defaultOperator - merge\n  //widgetProps (including valueLabel, valuePlaceholder, hideOperator, operatorInlineLabel) - concrete by widget\n\n  if (config.__configId) {\n    return config;\n  }\n\n  // Clone (and compile if need)\n  if (canCompile && config.settings.useConfigCompress) {\n    if (config.__compliled) {\n      // already compiled\n      config = clone(config);\n    } else {\n      // will be cloned and compiled\n      config = compileConfig(config);\n    }\n  } else {\n    config = clone(config);\n  }\n\n  config.settings = mergeWith({}, defaultSettings, config.settings, mergeCustomizerNoArrays);\n\n  config.__fieldsCntByType = {};\n  config.__funcsCntByType = {};\n  config.__fieldNames = {};\n\n  extendTypesConfig(config.types, config);\n  extendFieldsConfig(config.fields, config);\n  extendFuncArgsConfig(config.funcs, config);\n\n  const momentLocale = config.settings.locale.moment;\n  if (momentLocale) {\n    moment.locale(momentLocale);\n  }\n\n  Object.defineProperty(config, \"__configId\", {\n    enumerable: false,\n    writable: false,\n    value: configId || uuid()\n  });\n\n  deepFreeze(config);\n\n  return config;\n};\n\nfunction extendTypesConfig(typesConfig, config) {\n  for (let type in typesConfig) {\n    let typeConfig = typesConfig[type];\n    extendTypeConfig(type, typeConfig, config);\n  }\n}\n\nfunction extendTypeConfig(type, typeConfig, config) {\n  let operators = null, defaultOperator = null;\n  typeConfig.mainWidget = typeConfig.mainWidget || Object.keys(typeConfig.widgets).filter(w => w != \"field\" && w != \"func\")[0];\n  for (let widget in typeConfig.widgets) {\n    let typeWidgetConfig = typeConfig.widgets[widget];\n    if (typeWidgetConfig.operators) {\n      let typeWidgetOperators = typeWidgetConfig.operators;\n      if (typeConfig.excludeOperators) {\n        typeWidgetOperators = typeWidgetOperators.filter(op => !typeConfig.excludeOperators.includes(op));\n      }\n      operators = mergeArraysSmart(operators, typeWidgetOperators);\n    }\n    if (typeWidgetConfig.defaultOperator)\n      defaultOperator = typeWidgetConfig.defaultOperator;\n    if (widget == typeConfig.mainWidget) {\n      typeWidgetConfig = merge({}, {widgetProps: typeConfig.mainWidgetProps || {}}, typeWidgetConfig);\n    }\n    typeConfig.widgets[widget] = typeWidgetConfig;\n  }\n  if (!typeConfig.valueSources)\n    typeConfig.valueSources = Object.keys(config.settings.valueSourcesInfo);\n  for (let valueSrc of typeConfig.valueSources) {\n    if (valueSrc != \"value\" && !typeConfig.widgets[valueSrc]) {\n      typeConfig.widgets[valueSrc] = {\n      };\n    }\n  }\n  if (!typeConfig.operators && operators)\n    typeConfig.operators = Array.from(new Set(operators)); //unique\n  if (!typeConfig.defaultOperator && defaultOperator)\n    typeConfig.defaultOperator = defaultOperator;\n}\n\nfunction extendFieldsConfig(subconfig, config, path = []) {\n  for (let field in subconfig) {\n    extendFieldConfig(subconfig[field], config, [...path, field]);\n    if (subconfig[field].subfields) {\n      extendFieldsConfig(subconfig[field].subfields, config, [...path, field]);\n    }\n  }\n}\n\nfunction extendFuncArgsConfig(subconfig, config, path = []) {\n  if (!subconfig) return;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  for (let funcKey in subconfig) {\n    const funcPath = [...path, funcKey].join(fieldSeparator);\n    const funcDef = subconfig[funcKey];\n    if (funcDef.returnType) {\n      if (!config.__funcsCntByType[funcDef.returnType])\n        config.__funcsCntByType[funcDef.returnType] = 0;\n      config.__funcsCntByType[funcDef.returnType]++;\n    }\n    extendFieldConfig(funcDef, config, null, false);\n\n    if (funcDef.args) {\n      for (let argKey in funcDef.args) {\n        extendFieldConfig(funcDef.args[argKey], config, null, true);\n      }\n      // isOptional can be only in the end\n      const argKeys = Object.keys(funcDef.args);\n      let tmpIsOptional = true;\n      for (const argKey of argKeys.reverse()) {\n        const argDef = funcDef.args[argKey];\n        if (!tmpIsOptional && argDef.isOptional) {\n          logger.info(`Arg ${argKey} for func ${funcPath} can't be optional`);\n          delete argDef.isOptional;\n        }\n        if (!argDef.isOptional)\n          tmpIsOptional = false;\n      }\n    }\n\n    if (funcDef.subfields) {\n      extendFuncArgsConfig(funcDef.subfields, config, [...path, funcKey]);\n    }\n  }\n}\n\nfunction extendFieldConfig(fieldConfig, config, path = null, isFuncArg = false) {\n  let operators = null, defaultOperator = null;\n  const typeConfig = config.types[fieldConfig.type || fieldConfig.returnType];\n  const isFunc = !!fieldConfig.returnType;\n  const excludeOperatorsForField = fieldConfig.excludeOperators || [];\n  if (fieldConfig.type != \"!struct\" && fieldConfig.type != \"!group\") {\n    const keysToPutInFieldSettings = [\"listValues\", \"treeValues\", \"allowCustomValues\", \"validateValue\"];\n    if (!fieldConfig.fieldSettings)\n      fieldConfig.fieldSettings = {};\n    for (const k of keysToPutInFieldSettings) {\n      if (fieldConfig[k]) {\n        fieldConfig.fieldSettings[k] = fieldConfig[k];\n        delete fieldConfig[k];\n      }\n    }\n\n    // normalize listValues\n    if (fieldConfig.fieldSettings.listValues) {\n      if (config.settings.normalizeListValues) {\n        fieldConfig.fieldSettings.listValues = config.settings.normalizeListValues.call(\n          config.ctx,\n          fieldConfig.fieldSettings.listValues, fieldConfig.type, fieldConfig.fieldSettings\n        );\n      }\n    }\n    // same for treeValues\n    if (fieldConfig.fieldSettings.treeValues) {\n      if (config.settings.normalizeListValues) {\n        fieldConfig.fieldSettings.treeValues = config.settings.normalizeListValues.call(\n          config.ctx,\n          fieldConfig.fieldSettings.treeValues, fieldConfig.type, fieldConfig.fieldSettings\n        );\n      }\n    }\n\n    if (!typeConfig) {\n      //console.warn(`No type config for ${fieldConfig.type}`);\n      fieldConfig.disabled = true;\n      return;\n    }\n    if (!isFuncArg && !isFunc) {\n      if (!config.__fieldsCntByType[fieldConfig.type])\n        config.__fieldsCntByType[fieldConfig.type] = 0;\n      config.__fieldsCntByType[fieldConfig.type]++;\n    }\n\n    if (isFuncArg)\n      fieldConfig._isFuncArg = true;\n\n    if (!isFunc) { // tip: func always have its own widget\n      fieldConfig.mainWidget = fieldConfig.mainWidget || typeConfig.mainWidget;\n      fieldConfig.valueSources = fieldConfig.valueSources || typeConfig.valueSources;\n      const excludeOperatorsForType = typeConfig.excludeOperators || [];\n      if (!fieldConfig.widgets)\n        fieldConfig.widgets = {};\n      for (let widget in typeConfig.widgets) {\n        let fieldWidgetConfig = fieldConfig.widgets[widget] || {};\n        const typeWidgetConfig = typeConfig.widgets[widget] || {};\n        if (!isFuncArg) {\n          const excludeOperators = [...excludeOperatorsForField, ...excludeOperatorsForType];\n          const shouldIncludeOperators = fieldConfig.preferWidgets\n            && (widget == \"field\" || fieldConfig.preferWidgets.includes(widget))\n            || excludeOperators.length > 0;\n          if (fieldWidgetConfig.operators) {\n            const addOperators = fieldWidgetConfig.operators.filter(o => !excludeOperators.includes(o));\n            operators = [...(operators || []), ...addOperators];\n          } else if (shouldIncludeOperators && typeWidgetConfig.operators) {\n            const addOperators = typeWidgetConfig.operators.filter(o => !excludeOperators.includes(o));\n            operators = [...(operators || []), ...addOperators];\n          }\n          if (fieldWidgetConfig.defaultOperator)\n            defaultOperator = fieldWidgetConfig.defaultOperator;\n        }\n\n        if (widget == fieldConfig.mainWidget) {\n          fieldWidgetConfig = merge({}, {widgetProps: fieldConfig.mainWidgetProps || {}}, fieldWidgetConfig);\n        }\n        fieldConfig.widgets[widget] = fieldWidgetConfig;\n      }\n    }\n    if (!isFuncArg) {\n      if (!fieldConfig.operators && operators)\n        fieldConfig.operators = Array.from(new Set(operators));\n      fieldConfig._origDefaultOperator = fieldConfig.defaultOperator;\n      if (!fieldConfig.defaultOperator && defaultOperator)\n        fieldConfig.defaultOperator = defaultOperator;\n    }\n  }\n\n  const { fieldName, inGroup } = computeFieldName(config, path);\n  if (fieldName) {\n    fieldConfig.fieldName = fieldName;\n    if (!config.__fieldNames[fieldName])\n      config.__fieldNames[fieldName] = [];\n    config.__fieldNames[fieldName].push({fullPath: path, inGroup});\n  }\n}\n\nfunction computeFieldName(config, path) {\n  if (!path)\n    return {};\n  const fieldSeparator = config.settings.fieldSeparator;\n  const {computedPath, computed, inGroup} = [...path].reduce(({computedPath, computed, inGroup}, f, i, arr) => {\n    const fullPath = [...arr.slice(0, i), f];\n    const fConfig = getFieldRawConfig(config, fullPath);\n    if (fConfig?.type === \"!group\" && i < arr.length-1) {\n      // don't include group in final field name\n      inGroup = fullPath.join(fieldSeparator);\n      computedPath = [];\n    } else if (fConfig?.fieldName) {\n      // tip: fieldName overrides path !\n      computed = true;\n      computedPath = [fConfig.fieldName];\n    } else {\n      computedPath = [...computedPath, f];\n    }\n    return {computedPath, computed, inGroup};\n  }, {computedPath: [], computed: false, inGroup: undefined});\n  return computed ? {\n    fieldName: computedPath.join(fieldSeparator),\n    inGroup,\n  } : {};\n}\n","import merge from \"lodash/merge\";\nimport pick from \"lodash/pick\";\nimport mergeWith from \"lodash/mergeWith\";\nimport {widgetDefKeysToOmit, mergeCustomizerNoArrays} from \"./stuff\";\nimport {getWidgetForFieldOp} from \"./ruleUtils\";\n\nexport * from \"./configSerialize\";\nexport * from \"./configExtend\";\nexport const _widgetDefKeysToOmit = widgetDefKeysToOmit; // for ui\n\n\nexport function* iterateFuncs(config) {\n  yield* _iterateFields(config, config.funcs || {}, []);\n}\n\nexport function* iterateFields(config) {\n  yield* _iterateFields(config, config.fields || {}, []);\n}\n\nfunction* _iterateFields(config, subfields, path, subfieldsKey = \"subfields\") {\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  for (const fieldKey in subfields) {\n    const fieldConfig = subfields[fieldKey];\n    if (fieldConfig[subfieldsKey]) {\n      yield* _iterateFields(config, fieldConfig[subfieldsKey], [...path, fieldKey], subfieldsKey);\n    } else {\n      yield [\n        [...path, fieldKey].join(fieldSeparator),\n        fieldConfig\n      ];\n    }\n  }\n}\n\nexport const getFieldRawConfig = (config, field, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  if (field == \"!case_value\") {\n    return {\n      type: \"case_value\",\n      mainWidget: \"case_value\",\n      widgets: {\n        \"case_value\": config.widgets[\"case_value\"]\n      }\n    };\n  }\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const parts = getFieldParts(field, config);\n  const targetFields = config[fieldsKey];\n  if (!targetFields)\n    return null;\n\n  let fields = targetFields;\n  let fieldConfig = null;\n  let path = [];\n  for (let i = 0 ; i < parts.length ; i++) {\n    const part = parts[i];\n    path.push(part);\n    const pathKey = path.join(fieldSeparator);\n    fieldConfig = fields[pathKey];\n    if (i < parts.length-1) {\n      if (fieldConfig && fieldConfig[subfieldsKey]) {\n        fields = fieldConfig[subfieldsKey];\n        path = [];\n      } else {\n        fieldConfig = null;\n      }\n    }\n  }\n\n  return fieldConfig;\n};\n\n\n// if `field` is alias (fieldName), convert to original full path\nexport const normalizeField = (config, field, parentField = null) => {\n  // tip: if parentField is present, field is not full path\n  const fieldSeparator = config.settings.fieldSeparator;\n  const path = [\n    parentField,\n    ...field.split(fieldSeparator)\n  ].filter(f => f != null);\n  const findStr = field;\n  const normalizedPath = config.__fieldNames[findStr]?.find?.(({inGroup}) => {\n    if (inGroup)\n      return parentField?.startsWith(inGroup);\n    return true;\n  })?.fullPath;\n  return (normalizedPath || path).join(fieldSeparator);\n};\n\nexport const getFuncSignature = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null;\n  const {\n    returnType,\n    args,\n  } = funcConfig;\n  const argsSignature = Object.fromEntries(Object.entries(args || {}).map(([k, v]) => {\n    const argSignature = pick(v, [\n      \"type\",\n      \"valueSources\",\n      \"defaultValue\",\n      \"fieldSettings\",\n      // \"asyncListValues\", // not supported\n      \"isOptional\",\n    ]);\n    return [k, argSignature];\n  }));\n  const signature = {\n    returnType,\n    args: argsSignature,\n  };\n  return signature;\n};\n\nexport const getFuncConfig = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null; //throw new Error(\"Can't find func \" + func + \", please check your config\");\n  const typeConfig = config.types[funcConfig.returnType] || {};\n  const ret = mergeWith({}, typeConfig, funcConfig, mergeCustomizerNoArrays);\n  ret.type = funcConfig.returnType || funcConfig.type;\n  return ret;\n};\n\nexport const getFuncArgConfig = (config, funcKey, argKey) => {\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return null; //throw new Error(`Can't find func ${funcKey}, please check your config`);\n  const argConfig = funcConfig.args && funcConfig.args[argKey] || null;\n  if (!argConfig)\n    return null; //throw new Error(`Can't find arg ${argKey} for func ${funcKey}, please check your config`);\n\n  //merge, but don't merge operators (rewrite instead)\n  const typeConfig = config.types[argConfig.type] || {};\n  const ret = mergeWith({}, typeConfig, argConfig || {}, mergeCustomizerNoArrays);\n  return ret;\n};\n\nexport const isFieldDescendantOfField = (field, parentField, config = null) => {\n  if (!parentField) return false;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const path = getFieldPath(field, config);\n  const parentPath = getFieldPath(parentField, config);\n  return path.startsWith(parentPath + fieldSeparator);\n};\n\nexport const getFieldPath = (field, config = null) => {\n  if (typeof field === \"string\")\n    return field;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  return getFieldParts(field, config).join(fieldSeparator);\n};\n\nexport const getFieldParts = (field, config = null) => {\n  if (!field)\n    return [];\n  if (Array.isArray(field))\n    return field;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  if (field?.func) {\n    return Array.isArray(field.func) ? field.func : field.func.split(fieldSeparator);\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    return field?.get?.(\"func\").split(fieldSeparator);\n  }\n  return field?.split?.(fieldSeparator) || [];\n};\n\nexport const getFieldPathParts = (field, config, onlyKeys = false) => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  if (onlyKeys)\n    return parts;\n  else\n    return parts\n      .map((_curr, ind, arr) => arr.slice(0, ind+1))\n      .map((parts) => parts.join(fieldSeparator));\n};\n\nexport const getFieldSrc = (field) => {\n  if (!field)\n    return null;\n  if (typeof field == \"object\") {\n    if (!field.func && !!field.type) {\n      // it's already a config\n      return \"field\";\n    }\n    if (field.func) {\n      if (field.func && field.arg) {\n        // it's func arg\n        return null;\n      } else {\n        // it's field func\n        return \"func\";\n      }\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return null;\n    } else {\n      // it's field func\n      return \"func\";\n    }\n  }\n  return \"field\";\n};\n\nexport const getFieldConfig = (config, field) => {\n  if (!field)\n    return null;\n  if (typeof field == \"object\") {\n    if (!field.func && !!field.type) {\n      // it's already a config\n      // if (!field.defaultOperator) {\n      //   // if not complete config..\n      //   // merge, but don't merge operators (rewrite instead)\n      //   const typeConfig = config.types[field.type] || {};\n      //   return mergeWith({}, typeConfig, field, mergeCustomizerNoArrays);\n      // }\n      return field;\n    }\n    if (field.func) {\n      if (field.func && field.arg) {\n        // it's func arg\n        return getFuncArgConfig(config, field.func, field.arg);\n      } else {\n        // it's field func\n        return getFuncConfig(config, field.func);\n      }\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return getFuncArgConfig(config, field.get(\"func\"), field.get(\"arg\"));\n    } else {\n      // it's field func\n      return getFuncConfig(config, field.get(\"func\"));\n    }\n  }\n\n  const fieldConfig = getFieldRawConfig(config, field);\n  if (!fieldConfig)\n    return null; //throw new Error(\"Can't find field \" + field + \", please check your config\");\n\n  //merge, but don't merge operators (rewrite instead)\n  const typeConfig = config.types[fieldConfig.type] || {};\n  let ret = mergeWith({}, typeConfig, fieldConfig || {}, mergeCustomizerNoArrays);\n\n  return ret;\n};\n\nexport const getOperatorConfig = (config, operator, field = null) => {\n  if (!operator)\n    return null;\n  const opConfig = config.operators[operator];\n  if (field) {\n    const fieldConfig = getFieldConfig(config, field);\n    const widget = getWidgetForFieldOp(config, field, operator, null);\n    const widgetConfig = config.widgets[widget] || {};\n    const fieldWidgetConfig = (fieldConfig && fieldConfig.widgets ? fieldConfig.widgets[widget] : {}) || {};\n    const widgetOpProps = (widgetConfig.opProps || {})[operator];\n    const fieldWidgetOpProps = (fieldWidgetConfig.opProps || {})[operator];\n    const mergedOpConfig = merge({}, opConfig, widgetOpProps, fieldWidgetOpProps);\n    return mergedOpConfig;\n  } else {\n    return opConfig;\n  }\n};\n\nexport const getFieldWidgetConfig = (config, field, operator, widget = null, valueSrc = null) => {\n  if (!field)\n    return null;\n  if (!(operator || widget) && valueSrc !== \"const\" && field !== \"!case_value\")\n    return null;\n  const fieldConfig = getFieldConfig(config, field);\n  if (!widget)\n    widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n  const widgetConfig = config.widgets[widget] || {};\n  const fieldWidgetConfig = (fieldConfig && fieldConfig.widgets ? fieldConfig.widgets[widget] : {}) || {};\n  const fieldWidgetProps = (fieldWidgetConfig.widgetProps || {});\n  const valueFieldSettings = (valueSrc === \"value\" || !valueSrc) && fieldConfig?.fieldSettings || {}; // useful to take 'validateValue'\n  const mergedConfig = merge({}, widgetConfig, fieldWidgetProps, valueFieldSettings);\n  return mergedConfig;\n};\n\nexport const getFirstField = (config, parentRuleGroupPath = null) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parentPathArr = getFieldParts(parentRuleGroupPath, config);\n  const parentField = parentRuleGroupPath ? getFieldRawConfig(config, parentRuleGroupPath) : config;\n\n  let firstField = parentField, key = null, keysPath = [];\n  do {\n    const subfields = firstField === config ? config.fields : firstField?.subfields;\n    if (!subfields || !Object.keys(subfields).length) {\n      firstField = key = null;\n      break;\n    }\n    key = Object.keys(subfields)[0];\n    keysPath.push(key);\n    firstField = subfields[key];\n  } while (firstField.type == \"!struct\" || firstField.type == \"!group\");\n  return (parentPathArr || []).concat(keysPath).join(fieldSeparator);\n};\n","import {getOpCardinality} from \"../utils/stuff\";\nimport {getFieldConfig, getOperatorConfig} from \"../utils/configUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {formatFieldName} from \"../utils/ruleUtils\";\nimport {Map} from \"immutable\";\n\n/*\n Build tree to http://querybuilder.js.org/ like format\n\n Example:\n {\n    \"condition\": \"AND\",\n    \"rules\": [\n        {\n            \"id\": \"price\",\n            \"field\": \"price\",\n            \"type\": \"double\",\n            \"input\": \"text\",\n            \"operator\": \"less\",\n            \"value\": \"10.25\"\n        },\n        {\n            \"condition\": \"OR\",\n            \"rules\": [\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"2\"\n                },\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"1\"\n                }\n            ]\n        }\n    ]\n }\n */\n\n\nexport const queryBuilderFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: []\n  };\n  const res = formatItem(item, config, meta);\n  if (!res)\n    return undefined;\n  return {\n    ...res, \n    ...meta\n  };\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") && children && children.size) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  const id = item.get(\"id\");\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const not = properties.get(\"not\");\n\n  const resultQuery = {\n    id,\n    rules: list.toList(),\n    condition: conjunction.toUpperCase(),\n    not,\n  };\n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const id = item.get(\"id\");\n\n  const operator = properties.get(\"operator\");\n  const options = properties.get(\"operatorOptions\");\n  let field = properties.get(\"field\");\n  let value = properties.get(\"value\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let valueType = properties.get(\"valueType\");\n  const hasUndefinedValues = value.filter(v => v === undefined).size > 0;\n\n  if (field == null || operator == null || hasUndefinedValues)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const fieldType = fieldDefinition.type || \"undefined\";\n  const cardinality = getOpCardinality(operatorDefinition);\n  const typeConfig = config.types[fieldDefinition.type] || {};\n  const fieldName = formatFieldName(field, config, meta);\n\n  if (value.size < cardinality)\n    return undefined;\n\n  if (meta.usedFields.indexOf(field) == -1)\n    meta.usedFields.push(field);\n  value = value.toArray();\n  valueSrc = valueSrc.toArray();\n  valueType = valueType?.toArray() || [];\n  let values = [];\n  for (let i = 0 ; i < value.length ; i++) {\n    const val = {\n      type: valueType[i],\n      value: value[i],\n    };\n    values.push(val);\n    if (valueSrc[i] == \"field\") {\n      const secondField = value[i];\n      if (meta.usedFields.indexOf(secondField) == -1)\n        meta.usedFields.push(secondField);\n    }\n  }\n  let operatorOptions = options ? options.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n      \n  let ruleQuery = {\n    id,\n    fieldName,\n    type: fieldType,\n    input: typeConfig.mainWidget,\n    operator,\n  };\n  if (operatorOptions)\n    ruleQuery.operatorOptions = operatorOptions;\n  ruleQuery.values = values;\n  return ruleQuery;\n};\n","import {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, extendConfig, getFieldParts\n} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp, formatFieldName, completeValue} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\n\n// http://jsonlogic.com/\n\n\nexport const jsonLogicFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: [],\n    errors: []\n  };\n  \n  const extendedConfig = extendConfig(config, undefined, false);\n  const logic = formatItem(item, extendedConfig, meta, true);\n  \n  // build empty data\n  const {errors, usedFields} = meta;\n  const {fieldSeparator} = extendedConfig.settings;\n  let data = {};\n  for (let ff of usedFields) {\n    //const fieldSrc = typeof ff === \"string\" ? \"field\" : \"func\";\n    const parts = getFieldParts(ff, config);\n    const def = getFieldConfig(extendedConfig, ff) || {};\n    let tmp = data;\n    for (let i = 0 ; i < parts.length ; i++) {\n      const p = parts[i];\n      const pdef = getFieldConfig(extendedConfig, parts.slice(0, i + 1)) || {};\n      if (i != parts.length - 1) {\n        if (pdef.type == \"!group\" && pdef.mode != \"struct\") {\n          if (!tmp[p])\n            tmp[p] = [{}];\n          tmp = tmp[p][0];\n        } else {\n          if (!tmp[p])\n            tmp[p] = {};\n          tmp = tmp[p];\n        }\n      } else {\n        if (!tmp[p])\n          tmp[p] = null; // can use def.type for sample values\n      }\n    }\n  }\n    \n  return {\n    errors,\n    logic,\n    data,\n  };\n};\n\n\nconst formatItem = (item, config, meta, isRoot, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const isLocked = properties.get(\"isLocked\");\n  const {lockedOp} = config.settings.jsonLogic;\n  let ret;\n  if (type === \"group\" || type === \"rule_group\") {\n    ret = formatGroup(item, config, meta, isRoot, parentField);\n  } else if (type === \"rule\") {\n    ret = formatRule(item, config, meta, parentField);\n  }\n  if (isLocked && ret && lockedOp) {\n    ret = { [lockedOp] : ret };\n  }\n  return ret;\n};\n\n\nconst formatGroup = (item, config, meta, isRoot, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n  \n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const conj = conjunctionDefinition.jsonLogicConj || conjunction.toLowerCase();\n  const not = properties.get(\"not\");\n\n  const isRuleGroup = (type === \"rule_group\" && !isRoot);\n  const groupField = isRuleGroup && mode != \"struct\" ? field : parentField;\n  const groupOperator = properties.get(\"operator\");\n  const groupOperatorDefinition = groupOperator && getOperatorConfig(config, groupOperator, field) || null;\n  const formattedValue = formatItemValue(config, properties, meta, groupOperator, parentField);\n  const isGroup0 = isRuleGroup && (!groupOperator || groupOperatorDefinition.cardinality == 0);\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, false, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  \n  if (isRuleGroup && mode != \"struct\" && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size)\n      return undefined;\n  }\n\n  let resultQuery = {};\n  if (list.size == 1 && !isRoot)\n    resultQuery = list.first();\n  else\n    resultQuery[conj] = list.toList().toJS();\n  \n  // revert\n  if (not) {\n    resultQuery = { \"!\": resultQuery };\n  }\n\n  // rule_group (issue #246)\n  if (isRuleGroup && mode != \"struct\") {\n    const formattedField = formatField(meta, config, field, parentField);\n    if (isGroup0) {\n      // config.settings.groupOperators\n      const op = groupOperator || \"some\";\n      resultQuery = {\n        [op]: [\n          formattedField,\n          resultQuery\n        ]\n      };\n    } else {\n      // there is rule for count\n      const filter = !list.size \n        ? formattedField\n        : {\n          \"filter\": [\n            formattedField,\n            resultQuery\n          ]\n        };\n      const count = {\n        \"reduce\": [\n          filter,\n          { \"+\": [1, { var: \"accumulator\" }] },\n          0\n        ]\n      };\n      resultQuery = formatLogic(config, properties, count, formattedValue, groupOperator);\n    }\n  }\n  \n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  operatorOptions = operatorOptions ? operatorOptions.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDefinition.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field) || {};\n\n  // check op\n  let isRev = false;\n  if (!operatorDefinition.jsonLogic && !revOperatorDefinition.jsonLogic) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!operatorDefinition.jsonLogic && revOperatorDefinition.jsonLogic) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n  }\n\n  const formattedValue = formatItemValue(config, properties, meta, operator, parentField);\n  if (formattedValue === undefined)\n    return undefined;\n\n  const formattedField\n    = fieldSrc === \"func\"\n      ? formatFunc(meta, config, field, parentField)\n      : formatField(meta, config, field, parentField);\n  if (formattedField === undefined)\n    return undefined;\n\n  return formatLogic(config, properties, formattedField, formattedValue, operator, operatorOptions, fieldDefinition, isRev);\n};\n\n\nconst formatItemValue = (config, properties, meta, operator, parentField) => {\n  const field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const cardinality = getOpCardinality(operatorDefinition);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (iValue == undefined)\n    return undefined;\n  \n  let valueSrcs = [];\n  let valueTypes = [];\n  let oldUsedFields = meta.usedFields;\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDef = omit( getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"] );\n    const fv = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDefinition, operator, operatorDefinition, parentField, asyncListValues\n    );\n    if (fv !== undefined) {\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (fvalue.size < cardinality || hasUndefinedValues) {\n    meta.usedFields = oldUsedFields; // restore\n    return undefined;\n  }\n  return cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else if (typeof fieldWidgetDef.jsonLogic === \"function\") {\n    const fn = fieldWidgetDef.jsonLogic;\n    const args = [\n      currentValue,\n      {\n        ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n        asyncListValues\n      },\n      //useful options: valueFormat for date/time\n      omit(fieldWidgetDef, widgetDefKeysToOmit),\n    ];\n    if (operator) {\n      args.push(operator);\n      args.push(operatorDef);\n    }\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    ret = currentValue;\n  }\n  return ret;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  if (!funcConfig?.jsonLogic) {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = omit( getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc), [\"factory\"] );\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, null, null, parentField\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = omit( getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc), [\"factory\"] );\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, null, null, parentField\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n\n  const formattedArgsArr = Object.values(formattedArgs);\n  let ret;\n  if (typeof funcConfig.jsonLogic === \"function\") {\n    const fn = funcConfig.jsonLogic;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const funcName = funcConfig.jsonLogic || funcLastKey;\n    const isMethod = !!funcConfig.jsonLogicIsMethod;\n    if (isMethod) {\n      const [obj, ...params] = formattedArgsArr;\n      if (params.length) {\n        ret = { \"method\": [ obj, funcName, params ] };\n      } else {\n        ret = { \"method\": [ obj, funcName ] };\n      }\n    } else {\n      ret = { [funcName]: formattedArgsArr };\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (meta, config, field, parentField = null) => {\n  const {fieldSeparator, jsonLogic} = config.settings;\n\n  let ret;\n  if (field) {\n    if (Array.isArray(field))\n      field = field.join(fieldSeparator);\n    const fieldDef = getFieldConfig(config, field) || {};\n    const fieldName = formatFieldName(field, config, meta, parentField);\n\n    let varName = fieldDef.jsonLogicVar || (fieldDef.type == \"!group\" ? jsonLogic.groupVarKey : \"var\");\n    ret = { [varName] : fieldName };\n    if (meta.usedFields.indexOf(field) == -1)\n      meta.usedFields.push(field);\n  }\n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, formattedField, formattedValue) => {\n  let formatteOp = operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  const isReverseArgs = operatorDefinition._jsonLogicIsRevArgs ?? false;\n  if (typeof operatorDefinition.jsonLogic == \"string\")\n    formatteOp = operatorDefinition.jsonLogic;\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  const eqOps = [\"==\", \"!=\"];\n  const fn = (field, op, val, opDef, opOpts) => {\n    if (cardinality == 0 && eqOps.includes(formatteOp))\n      return { [formatteOp]: [formattedField, null] };\n    else if (cardinality == 0)\n      return { [formatteOp]: formattedField };\n    else if (cardinality == 1 && isReverseArgs)\n      return { [formatteOp]: [formattedValue, formattedField] };\n    else if (cardinality == 1)\n      return { [formatteOp]: [formattedField, formattedValue] };\n    else if (cardinality == 2 && rangeOps.includes(formatteOp))\n      return { [formatteOp]: [formattedValue[0], formattedField, formattedValue[1]] };\n    else\n      return { [formatteOp]: [formattedField, ...formattedValue] };\n  };\n  return fn;\n};\n\nconst formatLogic = (config, properties, formattedField, formattedValue, operator, operatorOptions = null, fieldDefinition = null, isRev = false) => {\n  const field = properties.get(\"field\");\n  //const fieldSrc = properties.get(\"fieldSrc\");\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let fn = typeof operatorDefinition.jsonLogic == \"function\" \n    ? operatorDefinition.jsonLogic \n    : buildFnToFormatOp(operator, operatorDefinition, formattedField, formattedValue);\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    omit(operatorDefinition, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n  ];\n  let ruleQuery = fn.call(config.ctx, ...args);\n\n  if (isRev) {\n    ruleQuery = { \"!\": ruleQuery };\n  }\n\n  return ruleQuery;\n};\n","import {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, extendConfig,\n} from \"../utils/configUtils\";\nimport {getFieldPathLabels, getWidgetForFieldOp, formatFieldName, completeValue} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {List, Map} from \"immutable\";\n\n\n// helpers\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const mongodbFormat = (tree, config) => {\n  return _mongodbFormat(tree, config, false);\n};\n\nexport const _mongodbFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem([], tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to MongoDb:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(parents, item, config, meta, _not, _canWrapExpr, _formatFieldName, _value);\n  } else if (type === \"rule\") {\n    return formatRule(parents, item, config, meta, _not, _canWrapExpr, _formatFieldName, _value);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\") || new List();\n  const {canShortMongoQuery, fieldSeparator} = config.settings;\n  const sep = fieldSeparator;\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  const groupField = type === \"rule_group\" ? properties.get(\"field\") : null;\n  const groupOperator = type === \"rule_group\" ? properties.get(\"operator\") : null;\n  const groupOperatorCardinality = groupOperator ? config.operators[groupOperator]?.cardinality ?? 1 : undefined;\n  const groupFieldName = formatFieldName(groupField, config, meta, realParentPath);\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode; //properties.get(\"mode\");\n  const canHaveEmptyChildren = groupField && mode === \"array\" && groupOperatorCardinality >= 1;\n\n  const not = _not ? !(properties.get(\"not\")) : (properties.get(\"not\"));\n  const list = children\n    .map((currentChild) => formatItem(\n      [...parents, item], currentChild, config, meta, not, mode != \"array\", mode == \"array\" ? (f => `$$el${sep}${f}`) : undefined)\n    )\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  let conjunctionDefinition = config.conjunctions[conjunction];\n  const reversedConj = conjunctionDefinition.reversedConj;\n  if (not && reversedConj) {\n    conjunction = reversedConj;\n    conjunctionDefinition = config.conjunctions[conjunction];\n  }\n  if (!conjunctionDefinition)\n    return undefined;\n  const mongoConj = conjunctionDefinition.mongoConj;\n\n  let resultQuery;\n  if (list.size == 1) {\n    resultQuery = list.first();\n  } else if (list.size > 1) {\n    const rules = list.toList().toJS();\n    const canShort = canShortMongoQuery && (mongoConj == \"$and\");\n    if (canShort) {\n      resultQuery = rules.reduce((acc, rule) => {\n        if (!acc) return undefined;\n        for (let k in rule) {\n          if (k[0] == \"$\") {\n            acc = undefined;\n            break;\n          }\n          if (acc[k] == undefined) {\n            acc[k] = rule[k];\n          } else {\n            // https://github.com/ukrbublik/react-awesome-query-builder/issues/182\n            let prev = acc[k], next = rule[k];\n            if (!isObject(prev)) {\n              prev = {\"$eq\": prev};\n            }\n            if (!isObject(next)) {\n              next = {\"$eq\": next};\n            }\n            const prevOp = Object.keys(prev)[0], nextOp = Object.keys(next)[0];\n            if (prevOp == nextOp) {\n              acc = undefined;\n              break;\n            }\n            acc[k] = Object.assign({}, prev, next);\n          }\n        }\n        return acc;\n      }, {});\n    }\n    if (!resultQuery) // can't be shorten\n      resultQuery = { [mongoConj] : rules };\n  }\n\n  if (groupField) {\n    if (mode == \"array\") {\n      const totalQuery = {\n        \"$size\": {\n          \"$ifNull\": [\n            \"$\" + groupFieldName,\n            []\n          ]\n        }\n      };\n      const filterQuery = resultQuery ? {\n        \"$size\": {\n          \"$ifNull\": [\n            {\n              \"$filter\": {\n                input: \"$\" + groupFieldName,\n                as: \"el\",\n                cond: resultQuery\n              }\n            },\n            []\n          ]\n        }\n      } : totalQuery;\n      resultQuery = formatItem(\n        parents, item.set(\"type\", \"rule\"), config, meta, false, false, (_f => filterQuery), totalQuery\n      );\n      resultQuery = { \"$expr\": resultQuery };\n    } else {\n      resultQuery = { [groupFieldName]: {\"$elemMatch\": resultQuery} };\n    }\n  }\n  return resultQuery;\n};\n\n\nconst formatRule = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  const properties = item.get(\"properties\") || new Map();\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  const iValue = properties.get(\"value\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  if (field == null || operator == null || iValue === undefined)\n    return undefined;\n\n  const fieldDef = getFieldConfig(config, field) || {};\n  let operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDefinition.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = getOpCardinality(operatorDefinition);\n\n  let not = _not;\n  if (not && reversedOp) {\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n    not = false;\n  }\n\n  let formattedField;\n  let useExpr = false;\n  if (fieldSrc == \"func\") {\n    [formattedField, useExpr] = formatFunc(meta, config, field, realParentPath);\n  } else {\n    formattedField = formatFieldName(field, config, meta, realParentPath);\n    if (_formatFieldName) {\n      useExpr = true;\n      formattedField = _formatFieldName(formattedField);\n    }\n  }\n  if (formattedField == undefined)\n    return undefined;\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n      const [fv, fvUseExpr] = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, realParentPath,  operator, operatorDefinition, asyncListValues\n      );\n      if (fv !== undefined) {\n        useExpr = useExpr || fvUseExpr;\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (fvalue.size < cardinality || hasUndefinedValues)\n      return undefined;\n    formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n  }\n  const wrapExpr = useExpr && _canWrapExpr;\n\n  //build rule\n  const fn = operatorDefinition.mongoFormatOp;\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  const args = [\n    formattedField,\n    operator,\n    _value !== undefined && formattedValue == null ? _value : formattedValue,\n    useExpr,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(operatorDefinition, opDefKeysToOmit),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ruleQuery = fn.call(config.ctx, ...args);\n  if (wrapExpr) {\n    ruleQuery = { \"$expr\": ruleQuery };\n  }\n  if (not) {\n    ruleQuery = { \"$not\": ruleQuery };\n  }\n  return ruleQuery;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, parentPath, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return [undefined, false];\n\n  let ret;\n  let useExpr = false;\n\n  if (valueSrc == \"field\") {\n    [ret, useExpr] = formatRightField(meta, config, currentValue, parentPath);\n  } else if (valueSrc == \"func\") {\n    [ret, useExpr] = formatFunc(meta, config, currentValue, parentPath);\n  } else {\n    if (typeof fieldWidgetDef.mongoFormatValue === \"function\") {\n      const fn = fieldWidgetDef.mongoFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = currentValue;\n    }\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatRightField = (meta, config, rightField, parentPath) => {\n  const {fieldSeparator} = config.settings;\n  let ret;\n  const useExpr = true;\n\n  if (rightField) {\n    const rightFieldDefinition = getFieldConfig(config, rightField) || {};\n    const fieldParts = getFieldParts(rightField, config);\n    const fieldPartsLabels = getFieldPathLabels(rightField, config);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n    const formatFieldFn = config.settings.formatField;\n    const rightFieldName = formatFieldName(rightField, config, meta, parentPath);\n    const formattedField = formatFieldFn(rightFieldName, fieldParts, fieldFullLabel, rightFieldDefinition, config, false);\n    ret = \"$\" + formattedField;\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentPath) => {\n  const useExpr = true;\n  let ret;\n\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return [undefined, false];\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = funcConfig.mongoFunc || funcLastKey;\n  const mongoArgsAsObject = funcConfig.mongoArgsAsObject;\n\n  let formattedArgs = {};\n  let argsCnt = 0;\n  let lastArg = undefined;\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    argsCnt++;\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = omit(getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc), [\"factory\"]);\n    const [formattedArgVal, _argUseExpr] = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return [undefined, false];\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = omit( getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc), [\"factory\"] );\n      let _;\n      ([formattedDefaultVal, _] = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n      ));\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return [undefined, false];\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n      lastArg = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return [undefined, false]; // incomplete\n  }\n\n  if (typeof funcConfig.mongoFormatFunc === \"function\") {\n    const fn = funcConfig.mongoFormatFunc;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.mongoFormatFunc === null) {\n    meta.errors.push(`Functon ${funcName} is not supported`);\n    return [undefined, false];\n  } else {\n    if (mongoArgsAsObject)\n      ret = { [funcName]: formattedArgs };\n    else if (argsCnt == 1 && lastArg !== undefined)\n      ret = { [funcName]: lastArg };\n    else\n      ret = { [funcName]: Object.values(formattedArgs) };\n  }\n\n  return [ret, useExpr];\n};\n\n\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, extendConfig,\n} from \"../utils/configUtils\";\nimport {\n  getFieldPathLabels, getWidgetForFieldOp, formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport {SqlString} from \"../utils/export\";\n\nexport const sqlFormat = (tree, config) => {\n  return _sqlFormat(tree, config, false);\n};\n\nexport const _sqlFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SQL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  const groupField = isRuleGroup ? properties.get(\"field\") : null;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode;\n  if (mode == \"array\") {\n    meta.errors.push(`Aggregation is not supported for ${groupField}`);\n  }\n\n  const not = properties.get(\"not\");\n  const canHaveEmptyChildren = false; //isRuleGroup && mode == \"array\";\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  return conjunctionDefinition.sqlFormatConj(list, conjunction, not);\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const sqlOp = operatorDefinition.sqlOp || operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, value, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp} ${value}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values?.first?.();\n      const valTo = values?.get?.(1);\n      return `${field} ${sqlOp} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = getOpCardinality(opDef);\n\n  // check op\n  let isRev = false;\n  const canFormatOp = opDef.sqlOp || opDef.sqlFormatOp;\n  const canFormatRevOp = revOpDef.sqlOp || revOpDef.sqlFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDefinition = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n      let fv = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDefinition, fieldDefinition, operator, opDef, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (hasUndefinedValues || fvalue.size < cardinality)\n      return undefined;\n    formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n  }\n\n  //find fn to format expr\n  const fn = opDef.sqlFormatOp || buildFnToFormatOp(operator, opDef);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n      \n  //format field\n  const formattedField = fieldSrc == \"func\"\n    ? formatFunc(meta, config, field)\n    : formatField(meta, config, field);\n  if (formattedField == undefined)\n    return undefined;\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n  ];\n\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n  if (isRev) {\n    ret = config.settings.sqlFormatReverse(ret);\n  }\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrcs.join(\", \")}`);\n    return undefined;\n  }\n  return ret;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue);\n  } else {\n    if (typeof fieldWidgetDef.sqlFormatValue === \"function\") {\n      const fn = fieldWidgetDef.sqlFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      if (Array.isArray(currentValue)) {\n        ret = currentValue.map(v => SqlString.escape(v));\n      } else {\n        ret = SqlString.escape(currentValue);\n      }\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsLabels = getFieldPathLabels(field, config);\n  const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n  const formatFieldFn = config.settings.formatField;\n  const fieldName = formatFieldName(field, config, meta, null, {useTableName: true});\n  const formattedField = formatFieldFn(fieldName, fieldParts, fieldFullLabel, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = funcConfig.sqlFunc || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n\n  let ret;\n  if (typeof funcConfig.sqlFormatFunc === \"function\") {\n    const fn = funcConfig.sqlFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(formattedArgs)\n      .map(([k, v]) => v)\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\n\n\n/**\n * Converts a string representation of top_left and bottom_right cords to\n * a ES geo_point required for query\n *\n * @param {string} geoPointString - comma separated string of lat/lon coods\n * @returns {{top_left: {lon: number, lat: number}, bottom_right: {lon: number, lat: number}}} - ES geoPoint formatted object\n * @private\n */\nfunction buildEsGeoPoint(geoPointString) {\n  if (geoPointString == null) {\n    return null;\n  }\n\n  const coordsNumberArray = geoPointString.split(\",\").map(Number);\n  return {\n    top_left: {\n      lat: coordsNumberArray[0],\n      lon: coordsNumberArray[1]\n    },\n    bottom_right: {\n      lat: coordsNumberArray[2],\n      lon: coordsNumberArray[3]\n    }\n  };\n}\n\n/**\n * Converts a dateTime string from the query builder to a ES range formatted object\n *\n * @param {string} dateTime - dateTime formatted string\n * @param {string} operator - query builder operator type, see constants.js and query builder docs\n * @returns {{lt: string}|{lte: string}|{gte: string}|{gte: string, lte: string}|undefined} - ES range query parameter\n *\n * @private\n */\nfunction buildEsRangeParameters(value, operator) {\n  // -- if value is greater than 1 then we assume this is a between operator : BUG this is wrong, a selectable list can have multiple values\n  if (value.length > 1) {\n    return {\n      gte: \"\".concat(value[0]),\n      lte: \"\".concat(value[1])\n    };\n  } // -- if value is only one we assume this is a date time query for a specific day\n\n  const dateTime = value[0]; //TODO: Rethink about this part, what if someone adds a new type of opperator\n\n  //todo: move this logic into config\n  switch (operator) {\n  case \"on_date\": //todo: not used\n  case \"not_on_date\":\n  case \"equal\":\n  case \"select_equals\":\n  case \"not_equal\":\n    return {\n      gte: \"\".concat(dateTime, \"||/d\"),\n      lte: \"\".concat(dateTime, \"||+1d\")\n    };\n\n  case \"less_or_equal\":\n    return {\n      lte: \"\".concat(dateTime)\n    };\n\n  case \"greater_or_equal\":\n    return {\n      gte: \"\".concat(dateTime)\n    };\n\n  case \"less\":\n    return {\n      lt: \"\".concat(dateTime)\n    };\n\n  case \"greater\":\n    return {\n      gt: \"\".concat(dateTime)\n    };\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Builds the DSL parameters for a Wildcard query\n *\n * @param {string} value - The match value\n * @returns {{value: string}} - The value = value parameter surrounded with * on each end\n * @private\n */\nfunction buildEsWildcardParameters(value) {\n  return {\n    value: \"*\" + value + \"*\"\n  };\n}\n\n/**\n * Takes the match type string from awesome query builder like 'greater_or_equal' and\n * returns the ES occurrence required for bool queries\n *\n * @param {string} combinator - query group type or rule condition\n * @param {bool} not\n * @returns {string} - ES occurrence type. See constants.js\n * @private\n */\nfunction determineOccurrence(combinator, not) {\n  //todo: move into config, like mongoConj\n  switch (combinator) {\n  case \"AND\":\n    return not ? \"must_not\" : \"must\";\n    // -- AND\n\n  case \"OR\":\n    return not ? \"should_not\" : \"should\";\n    // -- OR\n\n  case \"NOT\":\n    return not ? \"must\" : \"must_not\";\n    // -- NOT AND\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Determines what field to query off of given the operator type\n *\n * @param {string} fieldDataType - The type of data\n * @param {string} fullFieldName - A '.' separated string containing the property lineage (including self)\n * @param {string} queryType - The query type\n * @returns {string|*} - will be either the fullFieldName or fullFieldName.keyword\n * @private\n */\n//todo: not used\n// function determineQueryField(fieldDataType, fullFieldName, queryType) {\n//   if (fieldDataType === \"boolean\") {\n//     return fullFieldName;\n//   }\n\n//   switch (queryType) {\n//   case \"term\":\n//   case \"wildcard\":\n//     return \"\".concat(fullFieldName, \".keyword\");\n\n//   case \"geo_bounding_box\":\n//   case \"range\":\n//   case \"match\":\n//     return fullFieldName;\n\n//   default:\n//     console.error(\"Can't determine query field for query type \".concat(queryType));\n//     return null;\n//   }\n// }\n\nfunction buildRegexpParameters(value) {\n  return {\n    value: value\n  };\n}\n\nfunction determineField(fieldName, config) {\n  //todo: ElasticSearchTextField - not used\n  //return config.fields[fieldName].ElasticSearchTextField || fieldName;\n  return fieldName;\n}\n\nfunction buildParameters(queryType, value, operator, fieldName, config, syntax) {\n  const textField = determineField(fieldName, config);\n  switch (queryType) {\n  case \"filter\":\n    //todo: elasticSearchScript - not used\n    return {\n      script: config.operators[operator].elasticSearchScript(fieldName, value)\n    };\n\n  case \"exists\":\n    return { field: fieldName };\n\n  case \"match\":\n    return { [textField]: value[0] };\n\n  case \"term\":\n    return syntax === ES_7_SYNTAX\n      ? { [fieldName]: {\n        value: value[0]\n      }} : { [fieldName]: value[0] };\n\n  //todo: not used\n  // need to add geo type into RAQB or remove this code\n  case \"geo_bounding_box\":\n    return { [fieldName]: buildEsGeoPoint(value[0]) };\n\n  case \"range\":\n    return { [fieldName]: buildEsRangeParameters(value, operator) };\n\n  case \"wildcard\":\n    return { [fieldName]: buildEsWildcardParameters(value[0]) };\n\n  case \"regexp\":\n    return { [fieldName]: buildRegexpParameters(value[0]) };\n\n  default:\n    return undefined;\n  }\n}\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {string} fieldName - The name of the field you are building a rule for\n * @param {string} fieldDataType - The type of data this field holds\n * @param {string} value - The value of this rule\n * @param {string} operator - The condition on how the value is matched\n * @param {string} syntax - The version of ElasticSearch syntax to generate\n * @returns {object} - The ES rule\n * @private\n */\nfunction buildEsRule(fieldName, value, operator, config, valueSrc, syntax) {\n  if (!fieldName || !operator || value == undefined)\n    return undefined; // rule is not fully entered\n  let op = operator;\n  let opConfig = config.operators[op];\n  if (!opConfig)\n    return undefined; // unknown operator\n  let { elasticSearchQueryType } = opConfig;\n\n  // not\n  let not = false;\n  if (!elasticSearchQueryType && opConfig.reversedOp) {\n    not = true;\n    op = opConfig.reversedOp;\n    opConfig = config.operators[op];\n    ({ elasticSearchQueryType } = opConfig);\n  }\n  \n  // handle if value 0 has multiple values like a select in a array\n  const widget = getWidgetForFieldOp(config, fieldName, op, valueSrc);\n  const widgetConfig = config.widgets[widget];\n  if (!widgetConfig)\n    return undefined; // unknown widget\n  const { elasticSearchFormatValue } = widgetConfig;\n\n  /** In most cases the queryType will be static however in some casese (like between) the query type will change\n   * based on the data type. i.e. a between time will be different than between number, date, letters etc... */\n  let queryType;\n  if (typeof elasticSearchQueryType === \"function\") {\n    queryType = elasticSearchQueryType(widget);\n  } else {\n    queryType = elasticSearchQueryType;\n  }\n\n  if (!queryType) {\n    // Not supported\n    return undefined;\n  }\n\n  /** If a widget has a rule on how to format that data then use that otherwise use default way of determineing search parameters\n   * */\n  let parameters;\n  if (typeof elasticSearchFormatValue === \"function\") {\n    parameters = elasticSearchFormatValue(queryType, value, op, fieldName, config);\n  } else {\n    parameters = buildParameters(queryType, value, op, fieldName, config, syntax);\n  }\n\n  if (not) {\n    return {\n      bool: {\n        must_not: {\n          [queryType]: {...parameters}\n        }\n      }\n    };\n  } else {\n    return {\n      [queryType]: {...parameters}\n    };\n  }\n}\n\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {object} children - The contents of the group\n * @param {string} conjunction - The way the contents of the group are joined together i.e. AND OR\n * @param {bool} not\n * @param {Function} recursiveFxn - The recursive fxn to build the contents of the groups children\n * @private\n * @returns {object} - The ES group\n */\nfunction buildEsGroup(children, conjunction, not, recursiveFxn, config, syntax) {\n  if (!children || !children.size)\n    return undefined;\n  const childrenArray = children.valueSeq().toArray();\n  const occurrence = determineOccurrence(conjunction, not);\n  const result = childrenArray.map((c) => recursiveFxn(c, config, syntax)).filter(v => v !== undefined);\n  if (!result.length)\n    return undefined;\n  const resultFlat = result.flat(Infinity);\n  return {\n    bool: {\n      [occurrence]: resultFlat\n    }\n  };\n}\n\nexport const ES_7_SYNTAX = \"ES_7_SYNTAX\";\nexport const ES_6_SYNTAX = \"ES_6_SYNTAX\";\n\nexport function elasticSearchFormat(tree, config, syntax = ES_6_SYNTAX) {\n  // -- format the es dsl here\n  if (!tree) return undefined;\n  const type = tree.get(\"type\");\n  const properties = tree.get(\"properties\") || new Map();\n\n  if (type === \"rule\" && properties.get(\"field\")) {\n    // -- field is null when a new blank rule is added\n    const operator = properties.get(\"operator\");\n    const field = properties.get(\"field\");\n    const fieldSrc = properties.get(\"fieldSrc\");\n    const value = properties.get(\"value\")?.toJS();\n    const _valueType = properties.get(\"valueType\")?.get(0);\n    const valueSrc = properties.get(\"valueSrc\")?.get(0);\n\n    if (valueSrc === \"func\" || fieldSrc == \"func\") {\n      // -- elastic search doesn't support functions (that is post processing)\n      return;\n    }\n\n    if (value && Array.isArray(value[0])) {\n      //TODO : Handle case where the value has multiple values such as in the case of a list\n      return value[0].map((val) =>\n        buildEsRule(field, [val], operator, config, valueSrc, syntax)\n      );\n    } else {\n      return buildEsRule(field, value, operator, config, valueSrc, syntax);\n    }\n  }\n\n  if (type === \"group\" || type === \"rule_group\") {\n    const not = properties.get(\"not\");\n    let conjunction = properties.get(\"conjunction\");\n    if (!conjunction)\n      conjunction = defaultConjunction(config);\n    const children = tree.get(\"children1\");\n    return buildEsGroup(children, conjunction, not, elasticSearchFormat, config, syntax);\n  }\n}\n","import {sleep} from \"./stuff\";\nimport {listValuesToArray, getListValue, makeCustomListValue} from \"./listValues\";\n\n// simple polyfill for Next\nconst findLastIndex = (arr, fn) => {\n  if (arr.findLastIndex) {\n    return arr.findLastIndex(fn);\n  } else {\n    const ind = [...arr].reverse().findIndex(fn);\n    return ind == -1 ? -1 : (arr.length-1 - ind);\n  }\n};\n\nexport const simulateAsyncFetch = (all, cPageSize = 0, delay = 1000) => async (search, offset, meta) => {\n  const pageSize = meta?.pageSize != undefined ? meta.pageSize : cPageSize;\n  const filtered = listValuesToArray(all)\n    .filter(({title, value}) => search == null ? true : (\n      title.toUpperCase().indexOf(search.toUpperCase()) != -1\n      || `${value}`.toUpperCase().indexOf(search.toUpperCase()) != -1\n    ));\n  const pages = pageSize ? Math.ceil(filtered.length / pageSize) : 0;\n  const currentOffset = offset || 0;\n  const currentPage = pageSize ? Math.ceil(currentOffset / pageSize) : null;\n  const values = pageSize ? filtered.slice(currentOffset, currentOffset + pageSize) : filtered;\n  const newOffset = pageSize ? currentOffset + values.length : null;\n  const hasMore = pageSize ? (newOffset < filtered.length) : false;\n  if (delay) {\n    // console.debug(\"simulateAsyncFetch\", {\n    //   search, offset, values, hasMore, filtered\n    // });\n    await sleep(delay);\n  }\n  return {\n    values,\n    hasMore\n  };\n};\n\nexport const mergeListValues = (values, newValues, toStart = false, hideNewValues = false) => {\n  if (!newValues)\n    return values;\n  const old = values || [];\n  const newFiltered = newValues\n    .filter(v => old.find(av => \"\"+av.value == \"\"+v.value) == undefined)\n    .map(v => (hideNewValues ? {...v, isHidden: true} : v));\n  const merged = toStart ? [...newFiltered, ...old] : [...old, ...newFiltered];\n  return merged;\n};\n\nexport const optionToListValue = (val, listValues, allowCustomValues) => {\n  const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n  const item = getListValue(v, listValues);\n  const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n  const listValue = item || customItem;\n  const lvs = listValue ? [listValue] : undefined; //not allow []\n  return [v, lvs];\n};\n\nexport const optionsToListValues = (vals, listValues, allowCustomValues) => {\n  const newSelectedListValues = vals.map((val, _i) => {\n    const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n    const item = getListValue(v, listValues);\n    const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n    const listValue = item || customItem;\n    return listValue;\n  }).filter(o => o != undefined);\n  let newSelectedValues = newSelectedListValues\n    .map(o => (o?.value ?? o));\n  if (!newSelectedValues.length)\n    newSelectedValues = undefined; //not allow []\n  return [newSelectedValues, newSelectedListValues];\n};\n\nexport const listValueToOption = (lv) => {\n  if (lv == null) return null;\n  const {\n    title, value, disabled, groupTitle, grouplabel, renderTitle, children, label, isCustom, isHidden,\n    ...rest\n  } = lv;\n  let option = {\n    value,\n    title: title || label || children, // fix issue #930 for AntD\n  };\n  if (disabled)\n    option.disabled = disabled;\n  if (isCustom)\n    option.isCustom = isCustom;\n  if (isHidden)\n    option.isHidden = isHidden;\n  // group\n  if (groupTitle || grouplabel)\n    option.groupTitle = groupTitle || grouplabel;\n  // used only for MUI field autocomplete (if matchesType, render as bold)\n  if (renderTitle)\n    option.renderTitle = renderTitle;\n  option = {\n    ...option,\n    ...rest,\n  };\n  return option;\n};\n\nexport const fixListValuesGroupOrder = (listValues) => {\n  let newValues = [];\n  let groupTitles = [];\n  for (let lv of listValues) {\n    const i = findLastIndex(newValues, lv1 => {\n      return (lv1.groupTitle ?? \"\") == (lv.groupTitle ?? \"\");\n    });\n    if (lv.groupTitle != undefined && !groupTitles.includes(lv.groupTitle)) {\n      groupTitles.push(lv.groupTitle);\n      if (groupTitles.length === 1) {\n        // fix empty groupTitles\n        newValues = newValues.map(nv => ({...nv, groupTitle: \"\"}));\n      }\n    }\n    if (lv.groupTitle == undefined && groupTitles.length) {\n      // fix empty groupTitle\n      lv = {...lv, groupTitle: \"\"};\n    }\n    if (i != -1) {\n      newValues.splice(i+1, 0, lv);\n    } else {\n      newValues.push(lv);\n    }\n  }\n  return newValues;\n};\n\n\nexport { getListValue };\n","//import { customJsonLogicOperations } from \"../utils/jsonLogic\";\n\n// Tip: search for `customJsonLogicOperations` in codebase to see custom JL funcs we use in `jsonLogicCustomOps`\n\nconst NOW = {\n  label: \"Now\",\n  returnType: \"datetime\",\n  jsonLogic: \"now\",\n  jsonLogicCustomOps: {\n    now: {},\n  },\n  //spelFunc: \"new java.util.Date()\",\n  spelFunc: \"T(java.time.LocalDateTime).now()\",\n  sqlFormatFunc: () => \"NOW()\",\n  mongoFormatFunc: () => new Date(),\n  formatFunc: () => \"NOW\",\n};\n\nconst RELATIVE_DATETIME = {\n  label: \"Relative\",\n  returnType: \"datetime\",\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\"\", \"\", \"\"],\n  spelFormatFunc: ({date, op, val, dim}) => {\n    const dimPlural = dim.charAt(0).toUpperCase() + dim.slice(1) + \"s\";\n    const method = op + dimPlural;\n    return `${date}.${method}(${val})`;\n  },\n  spelImport: (spel) => {\n    let date, op, val, dim;\n    const matchRes = spel.methodName?.match(/^(minus|plus)(\\w+)s$/);\n    if (matchRes) {\n      dim = matchRes[2].toLowerCase();\n      op = matchRes[1];\n      if ([\"minus\", \"plus\"].includes(op)) {\n        if ([\"day\", \"week\", \"month\", \"year\"].includes(dim)) {\n          op = {type: \"string\", val: op};\n          dim = {type: \"string\", val: dim};\n          val = spel.args[0];\n          date = spel.obj;\n          return {date, op, val, dim};\n        }\n      }\n    }\n  },\n  jsonLogic: ({date, op, val, dim}) => ({\n    \"date_add\": [\n      date,\n      val * (op == \"minus\" ? -1 : +1),\n      dim\n    ]\n  }),\n  jsonLogicImport: (v) => {\n    const date = v[\"date_add\"][0];\n    const val = Math.abs(v[\"date_add\"][1]);\n    const op = v[\"date_add\"][1] >= 0 ? \"plus\" : \"minus\";\n    const dim = v[\"date_add\"][2];\n    return [date, op, val, dim];\n  },\n  jsonLogicCustomOps: {\n    date_add: {},\n  },\n  // MySQL\n  //todo: other SQL dialects?\n  sqlFormatFunc: ({date, op, val, dim}) => `DATE_ADD(${date}, INTERVAL ${parseInt(val) * (op == \"minus\" ? -1 : +1)} ${dim.replace(/^'|'$/g, \"\")})`,\n  mongoFormatFunc: null, //todo: support?\n  formatFunc: ({date, op, val, dim}) => (!val ? date : `${date} ${op == \"minus\" ? \"-\" : \"+\"} ${val} ${dim}`),\n  args: {\n    date: {\n      label: \"Date\",\n      type: \"datetime\",\n      defaultValue: {func: \"NOW\", args: []},\n      valueSources: [\"func\", \"field\", \"value\"],\n      spelEscapeForFormat: true,\n    },\n    op: {\n      label: \"Op\",\n      type: \"select\",\n      defaultValue: \"plus\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          plus: \"+\",\n          minus: \"-\",\n        },\n      },\n      spelEscapeForFormat: false,\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      fieldSettings: {\n        min: 0,\n      },\n      defaultValue: 0,\n      valueSources: [\"value\"],\n      spelEscapeForFormat: false,\n    },\n    dim: {\n      label: \"Dimension\",\n      type: \"select\",\n      defaultValue: \"day\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          day: \"day\",\n          week: \"week\",\n          month: \"month\",\n          year: \"year\",\n        },\n      },\n      spelEscapeForFormat: false,\n    },\n  }\n};\n\nconst LOWER = {\n  label: \"Lowercase\",\n  mongoFunc: \"$toLower\",\n  jsonLogic: \"toLowerCase\",\n  spelFunc: \"${str}.toLowerCase()\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toLowerCase: {}\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\", \"func\"],\n    },\n  }\n};\n\nconst UPPER = {\n  label: \"Uppercase\",\n  mongoFunc: \"$toUpper\",\n  jsonLogic: \"toUpperCase\",\n  spelFunc: \"${str}.toUpperCase()\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toUpperCase: {},\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\", \"func\"],\n    },\n  }\n};\n\nconst LINEAR_REGRESSION = {\n  label: \"Linear regression\",\n  returnType: \"number\",\n  formatFunc: ({coef, bias, val}, _) => `(${coef} * ${val} + ${bias})`,\n  sqlFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelImport: (spel) => {\n    let coef, val, bias, a;\n    if (spel.type === \"op-plus\") {\n      [a, bias] = spel.children;\n      if (a.type === \"op-multiply\") {\n        [coef, val] = a.children;\n        return {coef, val, bias};\n      }\n    }\n  },\n  mongoFormatFunc: ({coef, bias, val}) => ({\"$sum\": [{\"$multiply\": [coef, val]}, bias]}),\n  jsonLogic: ({coef, bias, val}) => ({ \"+\": [ {\"*\": [coef, val]}, bias ] }),\n  jsonLogicImport: (v) => {\n    const coef = v[\"+\"][0][\"*\"][0];\n    const val = v[\"+\"][0][\"*\"][1];\n    const bias = v[\"+\"][1];\n    return [coef, val, bias];\n  },\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\" * \", \" + \"],\n  args: {\n    coef: {\n      label: \"Coef\",\n      type: \"number\",\n      defaultValue: 1,\n      valueSources: [\"value\"],\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      valueSources: [\"value\", \"field\"],\n    },\n    bias: {\n      label: \"Bias\",\n      type: \"number\",\n      defaultValue: 0,\n      valueSources: [\"value\"],\n    }\n  }\n};\n\nexport {\n  LOWER,\n  UPPER,\n  NOW,\n  RELATIVE_DATETIME,\n  LINEAR_REGRESSION,\n};\n","import moment from \"moment\";\nimport {\n  SqlString, sqlEmptyValue, mongoEmptyValue, spelEscape, spelFixList,\n  stringifyForDisplay\n} from \"../utils/export\";\nimport {escapeRegExp} from \"../utils/stuff\";\nimport {getTitleInListValues} from \"../utils/listValues\";\n\n// helpers for mongo format\nexport const mongoFormatOp1 = (mop, mc, not,  field, _op, value, useExpr, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  const mv = mc(value, fieldDef);\n  if (mv === undefined)\n    return undefined;\n  if (not) {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: { \"$ne\": mv } }; // short form\n    return !useExpr\n      ? { [field]: { \"$not\": { [mop]: mv } } } \n      : { \"$not\": { [mop]: [$field, mv] } };\n  } else {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: mv }; // short form\n    return !useExpr\n      ? { [field]: { [mop]: mv } } \n      : { [mop]: [$field, mv] };\n  }\n};\n\nexport const mongoFormatOp2 = (mops, not,  field, _op, values, useExpr, valueSrcs, valueTypes, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  if (not) {\n    return !useExpr\n      ? { [field]: { \"$not\": { [mops[0]]: values[0], [mops[1]]: values[1] } } } \n      : {\"$not\":\n                {\"$and\": [\n                  { [mops[0]]: [ $field, values[0] ] },\n                  { [mops[1]]: [ $field, values[1] ] },\n                ]}\n      };\n  } else {\n    return !useExpr\n      ? { [field]: { [mops[0]]: values[0], [mops[1]]: values[1] } } \n      : {\"$and\": [\n        { [mops[0]]: [ $field, values[0] ] },\n        { [mops[1]]: [ $field, values[1] ] },\n      ]};\n  }\n};\n\nconst ctx = {\n  utils: {\n    SqlString,\n    moment,\n    mongoFormatOp1,\n    mongoFormatOp2,\n    mongoEmptyValue,\n    escapeRegExp,\n    sqlEmptyValue,\n    stringifyForDisplay,\n    getTitleInListValues,\n    spelEscape,\n    spelFixList,\n  },\n};\n\nexport default ctx;\n","import {settings as defaultSettings} from \"./default\";\nimport ctx from \"./ctx\";\n\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  AND: {\n    label: \"And\",\n    mongoConj: \"$and\",\n    jsonLogicConj: \"and\",\n    sqlConj: \"AND\",\n    spelConj: \"and\",\n    spelConjs: [\"and\", \"&&\"],\n    reversedConj: \"OR\",\n    formatConj: (children, conj, not, isForDisplay) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"AND\" : \"&&\") + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: (children, conj, not) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"AND\" + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    spelFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"&&\" + \" \") + (omitBrackets ? \"\" : \")\")\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n  },\n  OR: {\n    label: \"Or\",\n    mongoConj: \"$or\",\n    jsonLogicConj: \"or\",\n    sqlConj: \"OR\",\n    spelConj: \"or\",\n    spelConjs: [\"or\", \"||\"],\n    reversedConj: \"AND\",\n    formatConj: (children, conj, not, isForDisplay) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"OR\" : \"||\") + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: (children, conj, not) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"OR\" + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    spelFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"||\" + \" \") + (omitBrackets ? \"\" : \")\")\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n  },\n};\n\n//----------------------------  operators\n\n\n\nconst operators = {\n  equal: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    reversedOp: \"not_equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      const opStr = isForDisplay ? \"=\" : opDef.label;\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `NOT ${field}` : `${field}`;\n      else\n        return `${field} ${opStr} ${value}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  not_equal: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    reversedOp: \"equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `${field}` : `NOT ${field}`;\n      else\n        return `${field} ${opDef.label} ${value}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    jsonLogic: \"!=\",\n  },\n  less: {\n    label: \"<\",\n    labelForFormat: \"<\",\n    sqlOp: \"<\",\n    spelOp: \"<\",\n    spelOps: [\"<\", \"lt\"],\n    reversedOp: \"greater_or_equal\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$lt\", v => v, false, ...args); },\n    jsonLogic: \"<\",\n    elasticSearchQueryType: \"range\",\n  },\n  less_or_equal: {\n    label: \"<=\",\n    labelForFormat: \"<=\",\n    sqlOp: \"<=\",\n    spelOp: \"<=\",\n    spelOps: [\"<=\", \"le\"],\n    reversedOp: \"greater\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$lte\", v => v, false, ...args); },\n    jsonLogic: \"<=\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater: {\n    label: \">\",\n    labelForFormat: \">\",\n    sqlOp: \">\",\n    spelOp: \">\",\n    spelOps: [\">\", \"gt\"],\n    reversedOp: \"less_or_equal\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gt\", v => v, false, ...args); },\n    jsonLogic: \">\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater_or_equal: {\n    label: \">=\",\n    labelForFormat: \">=\",\n    sqlOp: \">=\",\n    spelOp: \">=\",\n    spelOps: [\">=\", \"ge\"],\n    reversedOp: \"less\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gte\", v => v, false, ...args); },\n    jsonLogic: \">=\",\n    elasticSearchQueryType: \"range\",\n  },\n  like: {\n    label: \"Contains\",\n    labelForFormat: \"Contains\",\n    reversedOp: \"not_like\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.contains(${1})\",\n    valueTypes: [\"text\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined), false, ...args); },\n    //jsonLogic: (field, op, val) => ({ \"in\": [val, field] }),\n    jsonLogic: \"in\",\n    _jsonLogicIsRevArgs: true,\n    valueSources: [\"value\"],\n    elasticSearchQueryType: \"regexp\",\n  },\n  not_like: {\n    isNotOp: true,\n    label: \"Not contains\",\n    reversedOp: \"like\",\n    labelForFormat: \"Not Contains\",\n    sqlOp: \"NOT LIKE\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined), true, ...args); },\n    valueSources: [\"value\"],\n  },\n  starts_with: {\n    label: \"Starts with\",\n    labelForFormat: \"Starts with\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.startsWith(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? \"^\" + this.utils.escapeRegExp(v) : undefined), false, ...args); },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  ends_with: {\n    label: \"Ends with\",\n    labelForFormat: \"Ends with\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.endsWith(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) + \"$\" : undefined), false, ...args); },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  between: {\n    label: \"Between\",\n    labelForFormat: \"BETWEEN\",\n    sqlOp: \"BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], false, ...args); },\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"not_between\",\n    jsonLogic: \"<=\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1];\n      }\n      return null;\n    },\n    elasticSearchQueryType: function elasticSearchQueryType(type) {\n      return type === \"time\" ? \"filter\" : \"range\";\n    },\n  },\n  not_between: {\n    isNotOp: true,\n    label: \"Not between\",\n    labelForFormat: \"NOT BETWEEN\",\n    sqlOp: \"NOT BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} NOT BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], true, ...args); },\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"between\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1];\n      }\n      return null;\n    },\n  },\n  is_empty: {\n    label: \"Is empty\",\n    labelForFormat: \"IS EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_not_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS EMPTY` : `!${field}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) = ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is empty or null\n      return `${field} <= ''`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null], false, ...args); },\n    jsonLogic: \"!\",\n  },\n  is_not_empty: {\n    isNotOp: true,\n    label: \"Is not empty\",\n    labelForFormat: \"IS NOT EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT EMPTY` : `!!${field}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) <> ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is not empty and not null\n      return `${field} > ''`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$nin\", (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null], false, ...args); },\n    jsonLogic: \"!!\",\n    elasticSearchQueryType: \"exists\",\n  },\n  is_null: {\n    label: \"Is null\",\n    labelForFormat: \"IS NULL\",\n    sqlOp: \"IS NULL\",\n    cardinality: 0,\n    reversedOp: \"is_not_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NULL` : `!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} == null`;\n    },\n    // check if value is null OR not exists\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => null, false, ...args); },\n    jsonLogic: \"==\",\n  },\n  is_not_null: {\n    label: \"Is not null\",\n    labelForFormat: \"IS NOT NULL\",\n    sqlOp: \"IS NOT NULL\",\n    cardinality: 0,\n    reversedOp: \"is_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT NULL` : `!!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} != null`;\n    },\n    // check if value exists and is not null\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => null, false, ...args); },\n    jsonLogic: \"!=\",\n    elasticSearchQueryType: \"exists\",\n  },\n  select_equals: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      return `${field} ${opStr} ${value}`;\n    },\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    reversedOp: \"select_not_equals\",\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_equals: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} != ${value}`;\n    },\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    reversedOp: \"select_equals\",\n    jsonLogic: \"!=\",\n  },\n  select_any_in: {\n    label: \"Any in\",\n    labelForFormat: \"IN\",\n    sqlOp: \"IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} IN (${values.join(\", \")})`;\n      else\n        return `${field} IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    valueTypes: [\"multiselect\"],\n    spelOp: \"${1}.contains(${0})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", v => v, false, ...args); },\n    reversedOp: \"select_not_any_in\",\n    jsonLogic: \"in\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_any_in: {\n    isNotOp: true,\n    label: \"Not in\",\n    labelForFormat: \"NOT IN\",\n    sqlOp: \"NOT IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT IN (${values.join(\", \")})`;\n      else\n        return `${field} NOT IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} NOT IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$nin\", v => v, false, ...args); },\n    reversedOp: \"select_any_in\",\n  },\n  // it's not \"contains all\", but \"contains any\" operator\n  multiselect_contains: {\n    label: \"Contains\",\n    labelForFormat: \"CONTAINS\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_not_contains\",\n    jsonLogic2: \"some-in\",\n    jsonLogic: (field, op, vals) => ({\n      \"some\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    //spelOp: \"${0}.containsAll(${1})\",\n    spelOp: \"T(CollectionUtils).containsAny(${0}, ${1})\",\n    elasticSearchQueryType: \"term\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", v => v, false, ...args); },\n  },\n  multiselect_not_contains: {\n    isNotOp: true,\n    label: \"Not contains\",\n    labelForFormat: \"NOT CONTAINS\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} NOT CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_contains\"\n  },\n  multiselect_equals: {\n    label: \"Equals\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      if (valueSrc == \"value\")\n        return `${field} ${opStr} [${values.join(\", \")}]`;\n      else\n        return `${field} ${opStr} ${values}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} = '${values.map(v => this.utils.SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    spelOp: \"${0}.equals(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    reversedOp: \"multiselect_not_equals\",\n    jsonLogic2: \"all-in\",\n    jsonLogic: (field, op, vals) => ({\n      // it's not \"equals\", but \"includes\" operator - just for example\n      \"all\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    elasticSearchQueryType: \"term\",\n  },\n  multiselect_not_equals: {\n    isNotOp: true,\n    label: \"Not equals\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} != [${values.join(\", \")}]`;\n      else\n        return `${field} != ${values}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} != '${values.map(v => this.utils.SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    reversedOp: \"multiselect_equals\",\n  },\n  proximity: {\n    label: \"Proximity search\",\n    cardinality: 2,\n    valueLabels: [\n      { label: \"Word 1\", placeholder: \"Enter first word\" },\n      { label: \"Word 2\", placeholder: \"Enter second word\" },\n    ],\n    textSeparators: [\n      //'Word 1',\n      //'Word 2'\n    ],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const prox = operatorOptions.get(\"proximity\");\n      return `${field} ${val1} NEAR/${prox} ${val2}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      // https://learn.microsoft.com/en-us/sql/relational-databases/search/search-for-words-close-to-another-word-with-near?view=sql-server-ver16#example-1\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const aVal1 = this.utils.SqlString.trim(val1);\n      const aVal2 = this.utils.SqlString.trim(val2);\n      const prox = operatorOptions.get(\"proximity\");\n      return `CONTAINS(${field}, 'NEAR((${aVal1}, ${aVal2}), ${prox})')`;\n    },\n    mongoFormatOp: undefined, // not supported\n    jsonLogic: undefined, // not supported\n    options: {\n      optionLabel: \"Near\", // label on top of \"near\" selectbox (for config.settings.showLabels==true)\n      optionTextBefore: \"Near\", // label before \"near\" selectbox (for config.settings.showLabels==false)\n      optionPlaceholder: \"Select words between\", // placeholder for \"near\" selectbox\n      minProximity: 2,\n      maxProximity: 10,\n      defaults: {\n        proximity: 2\n      },\n    },\n  },\n  some: {\n    label: \"Some\",\n    labelForFormat: \"SOME\",\n    cardinality: 0,\n    jsonLogic: \"some\",\n    spelFormatOp: (filteredSize) => `${filteredSize} > 0`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gt\", v => 0, false, ...args); },\n  },\n  all: {\n    label: \"All\",\n    labelForFormat: \"ALL\",\n    cardinality: 0,\n    jsonLogic: \"all\",\n    spelFormatOp: (filteredSize, op, fullSize) => `${filteredSize} == ${fullSize}`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n  },\n  none: {\n    label: \"None\",\n    labelForFormat: \"NONE\",\n    cardinality: 0,\n    jsonLogic: \"none\",\n    spelFormatOp: (filteredSize) => `${filteredSize} == 0`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => 0, false, ...args); },\n  }\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"String\",\n    valuePlaceholder: \"Enter string\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  textarea: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Text\",\n    valuePlaceholder: \"Enter text\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n    fullWidth: true,\n  },\n  number: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number\",\n    valueLabels: [\n      { label: \"Number from\", placeholder: \"Enter number from\" },\n      { label: \"Number to\", placeholder: \"Enter number to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef) {\n      const isFloat = wgtDef.step && !Number.isInteger(wgtDef.step);\n      return this.utils.spelEscape(val, isFloat);\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  slider: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number or move slider\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  select: {\n    type: \"select\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Value\",\n    valuePlaceholder: \"Select value\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      let valLabel = this.utils.getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, val);\n      return isForDisplay ? this.utils.stringifyForDisplay(valLabel) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  multiselect: {\n    type: \"multiselect\",\n    jsType: \"array\",\n    valueSrc: \"value\",\n    valueLabel: \"Values\",\n    valuePlaceholder: \"Select values\",\n    formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n      let valsLabels = vals.map(v => this.utils.getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, v));\n      return isForDisplay ? valsLabels.map(this.utils.stringifyForDisplay) : vals.map(JSON.stringify);\n    },\n    sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n      return vals.map(v => this.utils.SqlString.escape(v));\n    },\n    spelFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n      const isCallable = opDef && opDef.spelOp && opDef.spelOp.startsWith(\"${1}\");\n      let res = this.utils.spelEscape(vals); // inline list\n      if (isCallable) {\n        // `{1,2}.contains(1)` NOT works\n        // `{1,2}.?[true].contains(1)` works\n        res = this.utils.spelFixList(res);\n      }\n      return res;\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  date: {\n    type: \"date\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD\",\n    valueLabel: \"Date\",\n    valuePlaceholder: \"Enter date\",\n    valueLabels: [\n      { label: \"Date from\", placeholder: \"Enter date from\" },\n      { label: \"Date to\", placeholder: \"Enter date to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"YYYY-MM-DD\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD\");\n      const fmt = \"yyyy-MM-dd\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDate).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    spelImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDate\"],\n        },\n        methodName: \"parse\",\n        args: [\n          {var: \"v\"},\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [\n              {var: \"fmt\"}\n            ]\n          },\n        ],\n      }\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (args?.fmt?.value?.includes?.(\" \") || args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\"))\n        return [undefined, `Invalid date format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      return this.utils.moment(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  time: {\n    type: \"time\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    valueFormat: \"HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Time\",\n    valuePlaceholder: \"Enter time\",\n    valueLabels: [\n      { label: \"Time from\", placeholder: \"Enter time from\" },\n      { label: \"Time to\", placeholder: \"Enter time to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"HH:mm:ss\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const fmt = \"HH:mm:ss\";\n      const v = dateVal.format(\"HH:mm:ss\");\n      return `T(java.time.LocalTime).parse('${v}')`;\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n    },\n    spelImportFuncs: [\n      \"T(java.time.LocalTime).parse(${v})\",\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\"\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (args?.fmt && (!args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\") || args.fmt?.value?.includes(\" \")))\n        return [undefined, `Invalid time format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, \"HH:mm:ss\");\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    toJS: function (val, fieldSettings) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\") : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    elasticSearchFormatValue: function elasticSearchFormatValue(queryType, value, operator, fieldName) {\n      return {\n        script: {\n          script: {\n            source: \"doc[\".concat(fieldName, \"][0].getHour() >== params.min && doc[\").concat(fieldName, \"][0].getHour() <== params.max\"),\n            params: {\n              min: value[0],\n              max: value[1]\n            }\n          }\n        }\n      };\n    },\n  },\n  datetime: {\n    type: \"datetime\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Datetime\",\n    valuePlaceholder: \"Enter datetime\",\n    valueLabels: [\n      { label: \"Datetime from\", placeholder: \"Enter datetime from\" },\n      { label: \"Datetime to\", placeholder: \"Enter datetime to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat + \" \" + wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.toDate());\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD HH:mm:ss\");\n      const fmt = \"yyyy-MM-dd HH:mm:ss\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDateTime).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    spelImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDateTime\"],\n        },\n        methodName: \"parse\",\n        args: [\n          {var: \"v\"},\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [\n              {var: \"fmt\"}\n            ]\n          },\n        ],\n      }\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (!args?.fmt?.value?.includes?.(\" \"))\n        return [undefined, `Invalid datetime format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      return this.utils.moment(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  boolean: {\n    type: \"boolean\",\n    jsType: \"boolean\",\n    valueSrc: \"value\",\n    labelYes: \"Yes\",\n    labelNo: \"No\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? (val ? \"Yes\" : \"No\") : JSON.stringify(!!val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    defaultValue: false,\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  field: {\n    valueSrc: \"field\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay, op, opDef, rightFieldDef) => {\n      return isForDisplay ? (rightFieldDef.label || val) : val;\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef, rightFieldDef) => {\n      return val;\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return val;\n    },\n    valueLabel: \"Field to compare\",\n    valuePlaceholder: \"Select field to compare\",\n  },\n  func: {\n    valueSrc: \"func\",\n    valueLabel: \"Function\",\n    valuePlaceholder: \"Select function\",\n  },\n  case_value: {\n    valueSrc: \"value\",\n    type: \"case_value\",\n    spelFormatValue: function (val) {\n      return this.utils.spelEscape(val === \"\" ? null : val);\n    },\n    spelImportValue: (val) => {\n      return [val.value, []];\n    }\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  text: {\n    defaultOperator: \"equal\",\n    mainWidget: \"text\",\n    widgets: {\n      text: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"proximity\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      textarea: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      field: {\n        operators: [\n          //unary ops (like `is_empty`) will be excluded anyway, see getWidgetsForFieldOp()\n          \"equal\",\n          \"not_equal\",\n          \"proximity\", //can exclude if you want\n        ],\n      }\n    },\n  },\n  number: {\n    defaultOperator: \"equal\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      slider: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ],\n      },\n    },\n  },\n  date: {\n    defaultOperator: \"equal\",\n    widgets: {\n      date: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ]\n      }\n    },\n  },\n  time: {\n    defaultOperator: \"equal\",\n    widgets: {\n      time: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  datetime: {\n    defaultOperator: \"equal\",\n    widgets: {\n      datetime: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      }\n    },\n  },\n  select: {\n    mainWidget: \"select\",\n    defaultOperator: \"select_equals\",\n    widgets: {\n      select: {\n        operators: [\n          \"select_equals\",\n          \"select_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      multiselect: {\n        operators: [\n          \"select_any_in\",\n          \"select_not_any_in\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n    },\n  },\n  multiselect: {\n    defaultOperator: \"multiselect_equals\",\n    widgets: {\n      multiselect: {\n        operators: [\n          \"multiselect_contains\",\n          \"multiselect_not_contains\",\n          \"multiselect_equals\",\n          \"multiselect_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  boolean: {\n    defaultOperator: \"equal\",\n    widgets: {\n      boolean: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {\n          //you can enable this if you don't use fields as value sources\n          // hideOperator: true,\n          // operatorInlineLabel: \"is\",\n        }\n      },\n      field: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n        ],\n      }\n    },\n  },\n  \"!group\": {\n    defaultOperator: \"some\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        widgetProps: {\n          min: 0\n        },\n        operators: [\n          // w/o operand\n          \"some\",\n          \"all\",\n          \"none\",\n\n          // w/ operand - count\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n        ],\n        opProps: {\n          equal: {\n            label: \"Count ==\"\n          },\n          not_equal: {\n            label: \"Count !=\"\n          },\n          less: {\n            label: \"Count <\"\n          },\n          less_or_equal: {\n            label: \"Count <=\"\n          },\n          greater: {\n            label: \"Count >\"\n          },\n          greater_or_equal: {\n            label: \"Count >=\"\n          },\n          between: {\n            label: \"Count between\"\n          },\n          not_between: {\n            label: \"Count not between\"\n          }\n        }\n      }\n    }\n  },\n  \"case_value\": {\n    mainWidget: \"case_value\",\n    widgets: {\n      case_value: {}\n    }\n  },\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...defaultSettings,\n\n  convertableWidgets: {\n    \"number\": [\"slider\", \"rangeslider\"],\n    \"slider\": [\"number\", \"rangeslider\"],\n    \"rangeslider\": [\"number\", \"slider\"],\n    \"text\": [\"textarea\"],\n    \"textarea\": [\"text\"]\n  },\n\n  formatSpelField: function (field, parentField, parts, partsExt, fieldDefinition, config) {\n    let fieldName = partsExt.map(({key, parent, fieldSeparator: sep}, ind) => {\n      if (ind == 0) {\n        if (parent == \"[map]\")\n          return `#this[${this.utils.spelEscape(key)}]`;\n        else if (parent == \"[class]\")\n          return key;\n        else\n          return key;\n      } else {\n        if (parent == \"map\" || parent == \"[map]\")\n          return `[${this.utils.spelEscape(key)}]`;\n        else if (parent == \"class\" || parent == \"[class]\")\n          return `${sep}${key}`;\n        else\n          return `${sep}${key}`;\n      }\n    }).join(\"\");\n    if (fieldDefinition.fieldName) {\n      fieldName = field;\n    }\n    if (fieldDefinition.isSpelVariable) {\n      fieldName = \"#\" + fieldName;\n    }\n    return fieldName;\n  },\n  sqlFormatReverse: (q) => {\n    if (q == undefined) return undefined;\n    return \"NOT(\" + q + \")\";\n  },\n  spelFormatReverse: (q) => {\n    if (q == undefined) return undefined;\n    return \"!(\" + q + \")\";\n  },\n  formatReverse: (q, operator, reversedOp, operatorDefinition, revOperatorDefinition, isForDisplay) => {\n    if (q == undefined) return undefined;\n    if (isForDisplay)\n      return \"NOT (\" + q + \")\";\n    else\n      return \"!(\" + q + \")\";\n  },\n  formatAggr: (whereStr, aggrField, operator, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay, aggrFieldDef) => {\n    const {labelForFormat, cardinality} = opDef;\n    if (cardinality == 0) {\n      const cond = whereStr ? ` HAVE ${whereStr}` : \"\";\n      return `${labelForFormat} OF ${aggrField}${cond}`;\n    } else if (cardinality == undefined || cardinality == 1) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${value}`;\n    } else if (cardinality == 2) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      let valFrom = value.first();\n      let valTo = value.get(1);\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${valFrom} AND ${valTo}`;\n    }\n  },\n  jsonLogic: {\n    groupVarKey: \"var\",\n    altVarKey: \"var\",\n    lockedOp: \"locked\"\n  },\n  \n  canCompareFieldWithField: (leftField, leftFieldConfig, rightField, rightFieldConfig) => {\n    //for type == 'select'/'multiselect' you can check listValues\n    return true;\n  },\n\n  // enable compare fields\n  valueSourcesInfo: {\n    value: {\n      label: \"Value\"\n    },\n    field: {\n      label: \"Field\",\n      widget: \"field\",\n    },\n    func: {\n      label: \"Function\",\n      widget: \"func\",\n    }\n  },\n\n};\n\n//----------------------------\n\nconst _addMixins = (config, mixins, doAdd = true) => {\n  const mixinFuncs = {\n    rangeslider: mixinWidgetRangeslider,\n    treeselect: mixinWidgetTreeselect,\n    treemultiselect: mixinWidgetTreemultiselect,\n    rangeable__date: mixinRangeableWidget(\"date\", \"date\"),\n  };\n  for (const mixName of mixins) {\n    const mixinFunc = mixinFuncs[mixName];\n    if (mixinFunc) {\n      config = mixinFunc(config, doAdd);\n    } else {\n      throw new Error(`Can't ${doAdd ? \"add\": \"remove\"} mixin ${mixName}`);\n    }\n  }\n  return config;\n};\n\nconst addMixins = (config, mixins) => {\n  return _addMixins(config, mixins, true);\n};\nconst removeMixins = (config, mixins) => {\n  return _addMixins(config, mixins, false);\n};\n\nconst mixinRangeableWidget = (type, widget) => (config, addMixin = true) => {\n  let { types } = config;\n\n  types = {\n    ...types,\n    [type]: {\n      ...types[type],\n      widgets: {\n        ...types[type].widgets,\n      }\n    }\n  };\n\n  if (addMixin) {\n    types[type].widgets[widget] = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n          textSeparators: [null, null],\n        },\n        not_between: {\n          isSpecialRange: true,\n          textSeparators: [null, null],\n        }\n      },\n      ...types[type].widgets[widget],\n    };\n  } else {\n    delete types[type].widgets[widget];\n  }\n\n  return {\n    ...config,\n    types,\n  };\n};\n\nconst mixinWidgetRangeslider = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.rangeslider = {\n      type: \"number\",\n      jsType: \"number\",\n      valueSrc: \"value\",\n      valueLabel: \"Range\",\n      valuePlaceholder: \"Select range\",\n      valueLabels: [\n        { label: \"Number from\", placeholder: \"Enter number from\" },\n        { label: \"Number to\", placeholder: \"Enter number to\" },\n      ],\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      singleWidget: \"slider\",\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.rangeslider,\n    };\n  } else {\n    delete widgets.rangeslider;\n  }\n\n  types = {\n    ...types,\n    number: {\n      ...types.number,\n      widgets: {\n        ...types.number.widgets,\n      }\n    }\n  };\n\n  if (addMixin) {\n    types.number.widgets.rangeslider = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n        },\n        not_between: {\n          isSpecialRange: true,\n        }\n      },\n      operators: [\n        \"between\",\n        \"not_between\",\n        // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\",\n        \"is_not_null\",\n      ],\n      ...types.number.widgets.rangeslider,\n    };\n  } else {\n    delete types.number.widgets.rangeslider;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreeselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treeselect = {\n      type: \"treeselect\",\n      jsType: \"string\",\n      valueSrc: \"value\",\n      valueLabel: \"Value\",\n      valuePlaceholder: \"Select value\",\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        const treeData = fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues;\n        let valLabel = this.utils.getTitleInListValues(treeData, val);\n        return isForDisplay ? this.utils.stringifyForDisplay(valLabel) : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.treeselect,\n    };\n  } else {\n    delete widgets.treeselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treeselect = {\n      mainWidget: \"treeselect\",\n      defaultOperator: \"select_equals\",\n      widgets: {\n        treeselect: {\n          operators: [\n            \"select_equals\",\n            \"select_not_equals\"\n          ],\n        },\n        treemultiselect: {\n          operators: [\n            \"select_any_in\",\n            \"select_not_any_in\"\n          ],\n        },\n      },\n      ...types.treeselect,\n    };\n  } else {\n    delete types.treeselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreemultiselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treemultiselect = {\n      type: \"treemultiselect\",\n      jsType: \"array\",\n      valueSrc: \"value\",\n      valueLabel: \"Values\",\n      valuePlaceholder: \"Select values\",\n      formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n        const treeData = fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues;\n        let valsLabels = vals.map(v => this.utils.getTitleInListValues(treeData, v));\n        return isForDisplay ? valsLabels.map(this.utils.stringifyForDisplay) : vals.map(JSON.stringify);\n      },\n      sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n        return vals.map(v => this.utils.SqlString.escape(v));\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.treemultiselect,\n    };\n  } else {\n    delete widgets.treemultiselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treemultiselect = {\n      defaultOperator: \"multiselect_equals\",\n      widgets: {\n        treemultiselect: {\n          operators: [\n            \"multiselect_equals\",\n            \"multiselect_not_equals\",\n          ],\n        }\n      },\n      ...types.treemultiselect,\n    };\n  } else {\n    delete types.treemultiselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nexport const ConfigMixins = {\n  addMixins,\n  removeMixins,\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\n// Mixin advanced widgets just to allow using it on server-side eg. for export routines\nconfig = addMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_FIELD_SRC = \"SET_FIELD_SRC\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_FUNC_VALUE = \"SET_FUNC_VALUE\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import Immutable, { fromJS } from \"immutable\";\nimport {\n  expandTreePath, expandTreeSubpath, getItemByPath, fixPathsInTree, \n  getTotalRulesCountInTree, fixEmptyGroupsInTree, isEmptyTree, hasChildren, removeIsLockedInTree\n} from \"../utils/treeUtils\";\nimport {\n  defaultRuleProperties, defaultGroupProperties, getDefaultOperator, \n  defaultOperatorOptions, defaultItemProperties\n} from \"../utils/defaultUtils\";\nimport * as constants from \"./constants\";\nimport uuid from \"../utils/uuid\";\nimport {\n  getFuncConfig, getFieldConfig, getOperatorConfig\n} from \"../utils/configUtils\";\nimport {\n  getOperatorsForField, getOperatorsForType, getFirstOperator,\n  isEmptyItem, selectTypes, calculateValueType\n} from \"../utils/ruleUtils\";\nimport {deepEqual, getOpCardinality, applyToJS} from \"../utils/stuff\";\nimport {validateValue, validateRange, getNewValueForFieldOp} from \"../utils/validation\";\nimport {translateValidation} from \"../i18n\";\nimport omit from \"lodash/omit\";\nimport mapValues from \"lodash/mapValues\";\nimport {setFunc, setArgValue, setArgValueSrc} from \"../utils/funcUtils\";\n\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst addNewGroup = (state, path, type, generatedId, properties, config, children = null, meta = {}) => {\n  const groupUuid = properties?.get?.(\"id\") || generatedId;\n  const {shouldCreateEmptyGroup} = config.settings;\n  const groupPath = path.push(groupUuid);\n  const canAddNewRule = !shouldCreateEmptyGroup;\n  const isDefaultCase = !!meta?.isDefaultCase;\n\n  const origState = state;\n  state = addItem(state, path, type, groupUuid, defaultGroupProperties(config).merge(fromJS(properties) || {}), config, children);\n  if (state !== origState) {\n    if (!children && !isDefaultCase) {\n      state = state.setIn(expandTreePath(groupPath, \"children1\"), new Immutable.OrderedMap());\n\n      // Add one empty rule into new group\n      if (canAddNewRule) {\n        state = addItem(state, groupPath, \"rule\", uuid(), defaultRuleProperties(config), config);\n      }\n    }\n\n    state = fixPathsInTree(state);\n  }\n  \n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst removeGroup = (state, path, config) => {\n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.slice(0, -1);\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  if (isEmptyParentGroup && !canLeaveEmptyGroup) {\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n    \n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty(!) rule to root\n      const canUseDefaultFieldAndOp = false;\n      const canGetFirst = false;\n      state = addItem(\n        state, new Immutable.List(), \"rule\", uuid(), \n        defaultRuleProperties(config, undefined, undefined, canUseDefaultFieldAndOp, canGetFirst), \n        config\n      );\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nconst removeRule = (state, path, config) => {\n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.pop();\n  const parent = state.getIn(expandTreePath(parentPath));\n\n  const parentField = parent.getIn([\"properties\", \"field\"]);\n  const parentOperator = parent.getIn([\"properties\", \"operator\"]);\n  const parentValue = parent.getIn([\"properties\", \"value\", 0]);\n  const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  const parentOperatorConfig = parentOperator ? getOperatorConfig(config, parentOperator, parentField) : null;\n  const hasGroupCountRule = parentField && parentOperator && parentOperatorConfig.cardinality != 0; // && parentValue != undefined;\n  \n  const isParentRuleGroup = parent.get(\"type\") == \"rule_group\";\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  const canLeaveEmpty = isParentRuleGroup \n    ? hasGroupCountRule && parentFieldConfig.initialEmptyWhere\n    : canLeaveEmptyGroup;\n  \n  if (isEmptyParentGroup && !canLeaveEmpty) {\n    if (isParentRuleGroup) {\n      // deleted last rule from rule_group, so delete whole rule_group\n      state = state.deleteIn(expandTreePath(parentPath));\n    }\n\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n\n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty(!) rule to root\n      const canUseDefaultFieldAndOp = false;\n      const canGetFirst = false;\n      state = addItem(\n        state, new Immutable.List(), \"rule\", uuid(), \n        defaultRuleProperties(config, undefined, undefined, canUseDefaultFieldAndOp, canGetFirst), \n        config\n      );\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} not\n */\nconst setNot = (state, path, not) =>\n  state.setIn(expandTreePath(path, \"properties\", \"not\"), not);\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nconst setLock = (state, path, lock) =>\n  removeIsLockedInTree(state.setIn(expandTreePath(path, \"properties\", \"isLocked\"), lock));\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nconst setConjunction = (state, path, conjunction) =>\n  state.setIn(expandTreePath(path, \"properties\", \"conjunction\"), conjunction);\n\n// convert children deeply from JS to Immutable\nconst _addChildren1 = (config, item, children) => {\n  if (children && Array.isArray(children)) {\n    item.children1 = new Immutable.OrderedMap(\n      children.reduce((map, it) => {\n        const id1 = it.id ?? uuid();\n        const it1 = {\n          ...it,\n          properties: defaultItemProperties(config, it).merge(fromJS(it.properties) || {}),\n          id: id1\n        };\n        _addChildren1(config, it1, it1.children1);\n        //todo: guarantee order\n        return {\n          ...map,\n          [id1]: new Immutable.Map(it1)\n        };\n      }, {})\n    );\n  }\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} type\n * @param {string} id\n * @param {Immutable.OrderedMap} properties\n * @param {object} config\n */\nconst addItem = (state, path, type, generatedId, properties, config, children = null) => {\n  const id = properties?.get?.(\"id\") || generatedId;\n  if (type == \"switch_group\")\n    throw new Error(\"Can't add switch_group programmatically\");\n  const { maxNumberOfCases, maxNumberOfRules, maxNesting } = config.settings;\n  const rootType = state.get(\"type\");\n  const isTernary = rootType == \"switch_group\";\n  const targetItem = state.getIn(expandTreePath(path));\n  const caseGroup = isTernary ? state.getIn(expandTreePath(path.take(2))) : null;\n  const childrenPath = expandTreePath(path, \"children1\");\n  const targetChildren = state.getIn(childrenPath);\n  const hasChildren = !!targetChildren && targetChildren.size;\n  const targetChildrenSize = hasChildren ? targetChildren.size : null;\n  let currentNumber, maxNumber;\n  if (type == \"case_group\") {\n    currentNumber = targetChildrenSize;\n    maxNumber = maxNumberOfCases;\n  } else if (type == \"group\") {\n    currentNumber = path.size;\n    maxNumber = maxNesting;\n  } else if (targetItem?.get(\"type\") == \"rule_group\") {\n    // don't restrict\n  } else {\n    currentNumber = isTernary ? getTotalRulesCountInTree(caseGroup) : getTotalRulesCountInTree(state);\n    maxNumber = maxNumberOfRules;\n  }\n  const canAdd = maxNumber && currentNumber ? (currentNumber < maxNumber) : true;\n  \n  const item = {type, id, properties};\n  _addChildren1(config, item, children);\n\n  const isLastDefaultCase = type == \"case_group\" && hasChildren && targetChildren.last().get(\"children1\") == null;\n\n  if (canAdd) {\n    const newChildren = new Immutable.OrderedMap({\n      [id]: new Immutable.Map(item)\n    });\n    if (!hasChildren) {\n      state = state.setIn(childrenPath, newChildren);\n    } else if (isLastDefaultCase) {\n      const last = targetChildren.last();\n      const newChildrenWithLast = new Immutable.OrderedMap({\n        [id]: new Immutable.Map(item),\n        [last.get(\"id\")]: last\n      });\n      state = state.deleteIn(expandTreePath(childrenPath, \"children1\", last.get(\"id\")));\n      state = state.mergeIn(childrenPath, newChildrenWithLast);\n    } else {\n      state = state.mergeIn(childrenPath, newChildren);\n    }\n    state = fixPathsInTree(state);\n  }\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n */\nconst removeItem = (state, path) => {\n  state = state.deleteIn(expandTreePath(path));\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} fromPath\n * @param {Immutable.List} toPath\n * @param {string} placement, see constants PLACEMENT_*: PLACEMENT_AFTER, PLACEMENT_BEFORE, PLACEMENT_APPEND, PLACEMENT_PREPEND\n * @param {object} config\n */\nconst moveItem = (state, fromPath, toPath, placement, config) => {\n  const from = getItemByPath(state, fromPath);\n  const sourcePath = fromPath.pop();\n  const source = fromPath.size > 1 ? getItemByPath(state, sourcePath) : null;\n  const sourceChildren = source ? source.get(\"children1\") : null;\n\n  const to = getItemByPath(state, toPath);\n  const targetPath = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) ? toPath : toPath.pop();\n  const target = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) \n    ? to\n    : toPath.size > 1 ? getItemByPath(state, targetPath) : null;\n  const targetChildren = target ? target.get(\"children1\") : null;\n\n  if (!source || !target || !from)\n    return state;\n\n  const isSameParent = (source.get(\"id\") == target.get(\"id\"));\n  const isSourceInsideTarget = targetPath.size < sourcePath.size \n        && deepEqual(targetPath.toArray(), sourcePath.toArray().slice(0, targetPath.size));\n  const isTargetInsideSource = targetPath.size > sourcePath.size \n        && deepEqual(sourcePath.toArray(), targetPath.toArray().slice(0, sourcePath.size));\n  let sourceSubpathFromTarget = null;\n  let targetSubpathFromSource = null;\n  if (isSourceInsideTarget) {\n    sourceSubpathFromTarget = Immutable.List(sourcePath.toArray().slice(targetPath.size));\n  } else if (isTargetInsideSource) {\n    targetSubpathFromSource = Immutable.List(targetPath.toArray().slice(sourcePath.size));\n  }\n\n  let newTargetChildren = targetChildren, newSourceChildren = sourceChildren;\n  if (!isTargetInsideSource)\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  if (isSameParent) {\n    newTargetChildren = newSourceChildren;\n  } else if (isSourceInsideTarget) {\n    newTargetChildren = newTargetChildren.updateIn(expandTreeSubpath(sourceSubpathFromTarget, \"children1\"), (_oldChildren) => newSourceChildren);\n  }\n\n  if (placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) {\n    newTargetChildren = Immutable.OrderedMap().withMutations(r => {\n      for (let [itemId, item] of newTargetChildren.entries()) {\n        if (itemId == to.get(\"id\") && placement == constants.PLACEMENT_BEFORE) {\n          r.set(from.get(\"id\"), from);\n        }\n                \n        r.set(itemId, item);\n\n        if (itemId == to.get(\"id\") && placement == constants.PLACEMENT_AFTER) {\n          r.set(from.get(\"id\"), from);\n        }\n      }\n    });\n  } else if (placement == constants.PLACEMENT_APPEND) {\n    newTargetChildren = newTargetChildren.merge(Immutable.OrderedMap({[from.get(\"id\")]: from}));\n  } else if (placement == constants.PLACEMENT_PREPEND) {\n    newTargetChildren = Immutable.OrderedMap({[from.get(\"id\")]: from}).merge(newTargetChildren);\n  }\n\n  if (isTargetInsideSource) {\n    newSourceChildren = newSourceChildren.updateIn(expandTreeSubpath(targetSubpathFromSource, \"children1\"), (_oldChildren) => newTargetChildren);\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  }\n\n  if (!isSameParent && !isSourceInsideTarget)\n    state = state.updateIn(expandTreePath(sourcePath, \"children1\"), (_oldChildren) => newSourceChildren);\n  if (!isTargetInsideSource)\n    state = state.updateIn(expandTreePath(targetPath, \"children1\"), (_oldChildren) => newTargetChildren);\n\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {string} srcKey\n */\nconst setFieldSrc = (state, path, srcKey, config) => {\n  const {keepInputOnChangeFieldSrc} = config.settings;\n\n  // get fieldType for \"memory effect\"\n  const currentRule = state.getIn(expandTreePath(path));\n  const currentType = currentRule.get(\"type\");\n  const currentProperties = currentRule.get(\"properties\");\n  const currentField = currentProperties?.get(\"field\");\n  //const currentFieldSrc = currentProperties?.get(\"fieldSrc\");\n  const currentFielType = currentProperties?.get(\"fieldType\");\n  const currentFieldConfig = getFieldConfig(config, currentField);\n  let fieldType = currentFieldConfig?.type || currentFielType;\n  if (!fieldType || fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n  const canReuseValue = !selectTypes.includes(fieldType);\n  const keepInput = keepInputOnChangeFieldSrc && !isEmptyItem(currentRule, config) && canReuseValue;\n\n  if (!keepInput) {\n    // clear ALL properties\n    state = state.setIn(\n      expandTreePath(path, \"properties\"),\n      defaultRuleProperties(config, null, null, false)\n    );\n  } else {\n    // clear non-relevant properties\n    state = state.setIn(expandTreePath(path, \"properties\", \"field\"), null);\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"fieldError\"));\n    // set fieldType for \"memory effect\"\n    state = state.setIn(expandTreePath(path, \"properties\", \"fieldType\"), fieldType);\n  }\n\n  // set fieldSrc\n  state = state.setIn(expandTreePath(path, \"properties\", \"fieldSrc\"), srcKey);\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {Array} parentFuncs\n * @param {string | null} argKey\n * @param {*} argValue if argKey is null, it's new func key\n * @param {string | \"!valueSrc\"} valueType\n * @param {*} asyncListValues\n */\nconst setFuncValue = (config, state, path, delta, parentFuncs, argKey, argValue, valueType, asyncListValues, _meta = {}) => {\n  const {showErrorMessage} = config.settings;\n  const isLHS = delta === -1;\n  const currentProperties = state.getIn(expandTreePath(path, \"properties\"));\n  const currentField = currentProperties.get(\"field\");\n  const currentValue = currentProperties.get(\"value\");\n  const currentV = isLHS ? currentField : currentValue.getIn([delta]);\n\n  // go inwards\n  let funcsPath = [];\n  let targetFV = currentV;\n  for (const [funcK, argK] of parentFuncs || []) {\n    funcsPath.push([funcK, argK, targetFV]);\n    if (funcK !== targetFV.get(\"func\")) {\n      const funcPath = funcsPath.map(([f, a]) => `${f}(${a})`).join(\"/\") || \"root\";\n      throw new Error(\n        `In ${isLHS ? \"LHS\" : \"RHS\"} for path ${funcPath} expected func key ${funcK} but got ${parent.get(\"func\")}`\n      );\n    }\n    targetFV = targetFV.getIn([\"args\", argK, \"value\"]);\n  }\n\n  // modify\n  if (!argKey) {\n    const newFuncKey = argValue;\n    const canFixArgs = true; // try to fix args to fit new func validations, otherwise - drop invalid args\n    targetFV = setFunc(targetFV, newFuncKey, config, canFixArgs);\n    // allow drop invalid args / reset to default, but don't trigger error if some arg is required\n    // (not same as setting isEndValue = true)\n    _meta.canDropArgs = true;\n  } else {\n    const funcKey = targetFV.get(\"func\");\n    const funcDefinition = getFuncConfig(config, funcKey);\n    const {args} = funcDefinition;\n    const argDefinition = args[argKey];\n\n    if (valueType === \"!valueSrc\") {\n      targetFV = setArgValueSrc(targetFV, argKey, argValue, argDefinition, config);\n    } else {\n      targetFV = setArgValue(targetFV, argKey, argValue, argDefinition, config);\n    }\n  }\n\n  // go outwards\n  let newV = targetFV;\n  while (funcsPath.length) {\n    const [funcK, argK, parentFV] = funcsPath.pop();\n    const funcDefinition = getFuncConfig(config, funcK);\n    const {args} = funcDefinition;\n    const argDefinition = args[argK];\n    newV = setArgValue(parentFV, argK, newV, argDefinition, config);\n  }\n\n  if (isLHS) {\n    return setField(state, path, newV, config, asyncListValues, _meta);\n  } else {\n    return setValue(state, path, delta, newV, undefined, config, asyncListValues, _meta);\n  }\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string | Immutable.OrderedMap} newField\n */\nconst setField = (state, path, newField, config, asyncListValues, _meta = {}) => {\n  const { __isInternal, isEndValue, canDropArgs } = _meta;\n  let isInternalValueChange;\n  if (!newField)\n    return {tree: removeItem(state, path), isInternalValueChange};\n\n  const {fieldSeparator, setOpOnChangeField, showErrorMessage} = config.settings;\n  if (Array.isArray(newField))\n    newField = newField.join(fieldSeparator);\n\n  const currentType = state.getIn(expandTreePath(path, \"type\"));\n  const currentProperties = state.getIn(expandTreePath(path, \"properties\"));\n  const wasRuleGroup = currentType == \"rule_group\";\n  const currentFieldSrc = currentProperties?.get(\"fieldSrc\");\n  const currentFieldError = currentProperties?.get(\"fieldError\");\n  const newFieldConfig = getFieldConfig(config, newField);\n  if (!newFieldConfig) {\n    console.warn(`No config for LHS ${newField}`);\n    return {tree: state, isInternalValueChange};\n  }\n  let fieldType = newFieldConfig.type;\n  if (fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n\n  const currentOperator = currentProperties?.get(\"operator\");\n  const currentOperatorOptions = currentProperties?.get(\"operatorOptions\");\n  const currentField = currentProperties?.get(\"field\");\n  // const currentValue = currentProperties?.get(\"value\");\n  const currentValueErrorStr = currentProperties?.get(\"valueError\")?.join?.(\"|\");\n  // const _currentValueSrc = currentProperties?.get(\"valueSrc\", new Immutable.List());\n  // const _currentValueType = currentProperties?.get(\"valueType\", new Immutable.List());\n\n  const isRuleGroup = newFieldConfig.type == \"!group\";\n  const isRuleGroupExt = isRuleGroup && newFieldConfig.mode == \"array\";\n  const isChangeToAnotherType = wasRuleGroup != isRuleGroup;\n  // const wasOkWithoutField = !currentField && currentFieldSrc && currentOperator;\n\n  // If the newly selected field supports the same operator the rule currently\n  // uses, keep it selected.\n  const lastOp = newFieldConfig && newFieldConfig.operators?.indexOf(currentOperator) !== -1 ? currentOperator : null;\n  const isSameFunc = currentFieldSrc === \"func\" && currentField?.get?.(\"func\") === newField?.get?.(\"func\");\n  const forceKeepOp = isSameFunc && !!lastOp;\n  let newOperator = null;\n  const availOps = currentFieldSrc === \"func\" \n    ? getOperatorsForType(config, fieldType)\n    : getOperatorsForField(config, newField);\n  if (availOps && availOps.length == 1)\n    newOperator = availOps[0];\n  else if (forceKeepOp)\n    newOperator = lastOp;\n  else if (availOps && availOps.length > 1) {\n    for (let strategy of setOpOnChangeField) {\n      if (strategy == \"keep\" && !isChangeToAnotherType)\n        newOperator = lastOp;\n      else if (strategy == \"default\")\n        newOperator = getDefaultOperator(config, newField, false);\n      else if (strategy == \"first\")\n        newOperator = getFirstOperator(config, newField);\n      if (newOperator) //found op for strategy\n        break;\n    }\n  }\n\n  if (!isRuleGroup && !newFieldConfig.operators) {\n    console.warn(`Type ${newFieldConfig.type} is not supported`);\n    return {tree: state, isInternalValueChange};\n  }\n\n  if (wasRuleGroup && !isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule\");\n    state = state.deleteIn(expandTreePath(path, \"children1\"));\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  if (!currentProperties) {\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  const canFix = !showErrorMessage;\n  if (isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule_group\");\n    const {canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality} = getNewValueForFieldOp(\n      config, config, currentProperties, newField, newOperator, \"field\", canFix, isEndValue, canDropArgs\n    );\n    let groupProperties = defaultGroupProperties(config, newFieldConfig).merge({\n      field: newField,\n      fieldSrc: \"field\",\n      mode: newFieldConfig.mode,\n    });\n    if (isRuleGroupExt) {\n      groupProperties = groupProperties.merge({\n        operator: newOperator,\n        value: newValue,\n        valueSrc: newValueSrc,\n        valueType: newValueType,\n      });\n    }\n    state = state.setIn(expandTreePath(path, \"children1\"), new Immutable.OrderedMap());\n    state = state.setIn(expandTreePath(path, \"properties\"), groupProperties);\n    if (newFieldConfig.initialEmptyWhere && operatorCardinality == 1) { // just `COUNT(grp) > 1` without `HAVING ..`\n      // no children\n    } else {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, newField), config);\n    }\n    state = fixPathsInTree(state);\n  } else {\n    state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n      const {\n        canReuseValue, newValue, newValueSrc, newValueType, newValueError, newFieldError, fixedField\n      } = getNewValueForFieldOp(\n        config, config, current, newField, newOperator, \"field\", canFix, isEndValue, canDropArgs\n      );\n      const newValueErrorStr = newValueError?.join?.(\"|\");\n      let newCorrectField = newField;\n      const willFixField = (fixedField !== newField);\n      if (willFixField) {\n        newCorrectField = fixedField;\n      }\n      // tip: `newCorrectField` is SAFE to set: even if it can't be fixed, it is reverted to previous good field.\n      //      Unlike logic in `setValue()` action where we need to calc `canUpdValue`\n      const didFieldErrorChanged = showErrorMessage ? currentFieldError != newFieldError : !!currentFieldError != !!newFieldError;\n      const didValueErrorChanged = showErrorMessage ? currentValueErrorStr != newValueErrorStr : !!currentValueErrorStr != !!newValueErrorStr;\n      const didErrorChanged = didFieldErrorChanged || didValueErrorChanged;\n      isInternalValueChange = !!__isInternal && !didErrorChanged && !willFixField;\n      if (showErrorMessage || !!__isInternal && didErrorChanged) {\n        current = current.set(\"fieldError\", newFieldError);\n        current = current.set(\"valueError\", newValueError);\n      }\n      const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, newCorrectField);\n      current = current\n        .set(\"field\", newCorrectField)\n        .delete(\"fieldType\") // remove \"memory effect\"\n        .set(\"fieldSrc\", currentFieldSrc)\n        .set(\"operator\", newOperator)\n        .set(\"operatorOptions\", newOperatorOptions)\n        .set(\"value\", newValue)\n        .set(\"valueSrc\", newValueSrc)\n        .set(\"valueType\", newValueType);\n      if (!canReuseValue) {\n        current = current.delete(\"asyncListValues\");\n      }\n      return current;\n    }));\n  }\n\n  return {tree: state, isInternalValueChange};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} operator\n */\nconst setOperator = (state, path, newOperator, config) => {\n  const {showErrorMessage} = config.settings;\n\n  const properties = state.getIn(expandTreePath(path, \"properties\"));\n  const children = state.getIn(expandTreePath(path, \"children1\"));\n  const currentField = properties.get(\"field\");\n  const currentFieldSrc = properties.get(\"fieldSrc\");\n  const fieldConfig = getFieldConfig(config, currentField);\n  const isRuleGroup = fieldConfig?.type == \"!group\";\n  const operatorConfig = getOperatorConfig(config, newOperator, currentField);\n  const operatorCardinality = operatorConfig ? getOpCardinality(operatorConfig) : null;\n  const canFix = true;\n\n  state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n    const currentField = current.get(\"field\");\n    const currentOperatorOptions = current.get(\"operatorOptions\");\n    const _currentValue = current.get(\"value\", new Immutable.List());\n    const _currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n    const _currentOperator = current.get(\"operator\");\n\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, current, currentField, newOperator, \"operator\", canFix\n    );\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n    const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, currentField);\n\n    if (!canReuseValue) {\n      current = current\n        .delete(\"asyncListValues\");\n    }\n\n    return current\n      .set(\"operator\", newOperator)\n      .set(\"operatorOptions\", newOperatorOptions)\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n  }));\n\n  if (isRuleGroup) {\n    if (operatorCardinality == 0 && children.size == 0) {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, currentField), config);\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n */\nconst setValue = (state, path, delta, value, valueType, config, asyncListValues, _meta = {}) => {\n  const { __isInternal, canDropArgs, isEndValue } = _meta;\n  const {fieldSeparator, showErrorMessage} = config.settings;\n  let isInternalValueChange;\n  const valueSrc = state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\")) || null;\n  if (valueSrc === \"field\" && Array.isArray(value))\n    value = value.join(fieldSeparator);\n\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  //const fieldSrc = state.getIn(expandTreePath(path, \"properties\", \"fieldSrc\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n\n  const calculatedValueType = valueType || calculateValueType(value, valueSrc, config);\n  const canFix = !showErrorMessage;\n  const [fixedValue, allErrors] = validateValue(\n    config, field, field, operator, value, calculatedValueType, valueSrc, asyncListValues, canFix, isEndValue, canDropArgs\n  );\n  const firstError = allErrors?.find(e => !e.fixed && !e.ignore);\n  const validationError = firstError ? translateValidation(firstError) : null;\n  // tip: even if canFix == false, use fixedValue, it can SAFELY fix value of select\n  //  (get exact value from listValues, not string)\n  let willFix = fixedValue !== value;\n  if (willFix) {\n    value = fixedValue;\n  }\n\n  // init lists\n  state = initEmptyValueLists(state, path, config, operatorCardinality);\n\n  // Additional validation for range values\n  const values = Array.from({length: operatorCardinality}, (_, i) =>\n    (i == delta ? value : state.getIn(expandTreePath(path, \"properties\", \"value\", i + \"\")) || null));\n  const valueSrcs = Array.from({length: operatorCardinality}, (_, i) =>\n    (state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", i + \"\")) || null));\n  const rangeErrorObj = validateRange(config, field, operator, values, valueSrcs);\n  const rangeValidationError = rangeErrorObj ? translateValidation(rangeErrorObj) : null;\n\n  const isValid = !validationError && !rangeValidationError;\n  const lastValue = state.getIn(expandTreePath(path, \"properties\", \"value\", delta));\n  const lastError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", delta));\n  const lastRangeError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality));\n  const didDeltaErrorChanged = showErrorMessage ? lastError != validationError : !!lastError != !!validationError;\n  const didRangeErrorChanged = showErrorMessage ? lastRangeError != rangeValidationError : !!lastRangeError != !!rangeValidationError;\n  const didErrorChanged = didDeltaErrorChanged || didRangeErrorChanged;\n  const didEmptinessChanged = !!lastValue != !!value;\n  const canUpdValue = showErrorMessage ? true : isValid || willFix; // set only good value\n  isInternalValueChange = !!__isInternal && !didEmptinessChanged && !didErrorChanged && !willFix;\n\n  if (canUpdValue) {\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n    if (typeof value === \"undefined\") {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta), undefined);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta), null);\n    } else {\n      if (asyncListValues) {\n        state = state.setIn(expandTreePath(path, \"properties\", \"asyncListValues\"), asyncListValues);\n      }\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta), value);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta), calculatedValueType);\n    }\n  }\n  if (showErrorMessage || !!__isInternal && didErrorChanged) {\n    // check list\n    const lastValueErrorArr = state.getIn(expandTreePath(path, \"properties\", \"valueError\"));\n    if (!lastValueErrorArr) {\n      state = state\n        .setIn(expandTreePath(path, \"properties\", \"valueError\"), new Immutable.List(new Array(operatorCardinality)));\n    }\n    // set error at delta\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), validationError);\n    // set range error\n    if (operatorCardinality >= 2) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), rangeValidationError);\n    }\n  }\n\n  return {tree: state, isInternalValueChange};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nconst setValueSrc = (state, path, delta, srcKey, config, _meta = {}) => {\n  const {showErrorMessage} = config.settings;\n\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  //const fieldSrc = state.getIn(expandTreePath(path, \"properties\", \"fieldSrc\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n\n  // init lists\n  state = initEmptyValueLists(state, path, config, operatorCardinality);\n\n  state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), undefined);\n  state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), null);\n  state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n\n  if (showErrorMessage) {\n    // clear value error\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), null);\n\n    // if current operator is range, clear possible range error\n    if (operatorConfig.validateValues) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), null);\n    }\n  }\n  \n  // set valueSrc\n  if (typeof srcKey === \"undefined\") {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), null);\n  } else {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), srcKey);\n  }\n\n  // maybe set default value\n  if (srcKey) {\n    const properties = state.getIn(expandTreePath(path, \"properties\"));\n    // this call should return canReuseValue = false and provide default value\n    const canFix = true;\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, properties, field, operator, \"valueSrc\", canFix\n    );\n    if (!canReuseValue && newValueSrc.get(delta) == srcKey) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), newValue.get(delta));\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), newValueType.get(delta));\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nconst setOperatorOption = (state, path, name, value) => {\n  return state.setIn(expandTreePath(path, \"properties\", \"operatorOptions\", name), value);\n};\n\n/**\n * @param {Immutable.Map} state\n */\nconst checkEmptyGroups = (state, config) => {\n  const {canLeaveEmptyGroup} = config.settings;\n  if (!canLeaveEmptyGroup) {\n    state = fixEmptyGroupsInTree(state);\n  }\n  return state;\n};\n\nconst initEmptyValueLists = (state, path, config, operatorCardinality) => {\n  if (!operatorCardinality) {\n    const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n    const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n    const operatorConfig = getOperatorConfig(config, operator, field);\n    operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n  }\n\n  for (const k of [\"value\", \"valueType\", \"valueError\", \"valueSrc\"]) {\n    if (!state.getIn(expandTreePath(path, \"properties\", k))) {\n      state = state\n        .setIn(expandTreePath(path, \"properties\", k), new Immutable.List(\n          operatorCardinality ? Array.from({length: operatorCardinality}) : []\n        ));\n    }\n  }\n\n  return state;\n};\n\nconst getField = (state, path) => {\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  return field;\n};\n\nconst emptyDrag = {\n  dragging: {\n    id: null,\n    x: null,\n    y: null,\n    w: null,\n    h: null\n  },\n  mousePos: {},\n  dragStart: {\n    id: null,\n  },\n};\n\nconst getActionMeta = (action, state) => {\n  if (!action || !action.type)\n    return null;\n  const actionKeysToOmit = [\n    \"config\", \"asyncListValues\"\n  ];\n  const actionTypesToIgnore = [\n    constants.SET_TREE,\n    constants.SET_DRAG_START,\n    constants.SET_DRAG_PROGRESS,\n    constants.SET_DRAG_END,\n  ];\n  let meta = mapValues(omit(action, actionKeysToOmit), applyToJS);\n  let affectedField = action.path && getField(state.tree, action.path) || action.field;\n  if (affectedField) {\n    if (affectedField?.toJS)\n      affectedField = affectedField.toJS();\n    meta.affectedField = affectedField;\n  }\n  if (actionTypesToIgnore.includes(action.type) || action.type.indexOf(\"@@redux\") == 0)\n    meta = null;\n  return meta;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {object} action\n */\nexport default (initialConfig, tree, getMemoizedTree, setLastTree, getLastConfig) => {\n  const initTree = tree;\n  const emptyState = {\n    tree: initTree, \n    ...emptyDrag\n  };\n    \n  return (state = emptyState, action) => {\n    const config = getLastConfig?.() ?? action.config ?? initialConfig;\n    const unset = {__isInternalValueChange: undefined, __lastAction: undefined};\n    let set = {};\n    let actionMeta = getActionMeta(action, state);\n\n    switch (action?.type) {\n    case constants.SET_TREE: {\n      const validatedTree = getMemoizedTree(config, action.tree);\n      set.tree = validatedTree;\n      break;\n    }\n\n    case constants.ADD_CASE_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"case_group\", action.id, action.properties, config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.ADD_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"group\", action.id, action.properties, config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.REMOVE_GROUP: {\n      set.tree = removeGroup(state.tree, action.path, config);\n      break;\n    }\n\n    case constants.ADD_RULE: {\n      set.tree = addItem(state.tree, action.path, action.ruleType, action.id, action.properties, config, action.children);\n      break;\n    }\n\n    case constants.REMOVE_RULE: {\n      set.tree = removeRule(state.tree, action.path, config);\n      break;\n    }\n\n    case constants.SET_CONJUNCTION: {\n      set.tree = setConjunction(state.tree, action.path, action.conjunction);\n      break;\n    }\n\n    case constants.SET_NOT: {\n      set.tree = setNot(state.tree, action.path, action.not);\n      break;\n    }\n\n    case constants.SET_FIELD: {\n      const {optimizeRenderWithInternals} = config.settings;\n      const {tree, isInternalValueChange} = setField(\n        state.tree, action.path, action.field, config,\n        action.asyncListValues, action._meta\n      );\n      set.__isInternalValueChange = optimizeRenderWithInternals && isInternalValueChange;\n      set.tree = tree;\n      break;\n    }\n\n    case constants.SET_FIELD_SRC: {\n      set.tree = setFieldSrc(state.tree, action.path, action.srcKey, config);\n      break;\n    }\n\n    case constants.SET_LOCK: {\n      set.tree = setLock(state.tree, action.path, action.lock);\n      break;\n    }\n\n    case constants.SET_OPERATOR: {\n      set.tree = setOperator(state.tree, action.path, action.operator, config);\n      break;\n    }\n\n    case constants.SET_VALUE: {\n      const {optimizeRenderWithInternals} = config.settings;\n      const {tree, isInternalValueChange} = setValue(\n        state.tree, action.path, action.delta, action.value, action.valueType,  config,\n        action.asyncListValues, action._meta\n      );\n      set.__isInternalValueChange = optimizeRenderWithInternals && isInternalValueChange;\n      set.tree = tree;\n      break;\n    }\n\n    case constants.SET_FUNC_VALUE: {\n      const {optimizeRenderWithInternals} = config.settings;\n      const {tree, isInternalValueChange} = setFuncValue(\n        config, state.tree, action.path, action.delta, action.parentFuncs, \n        action.argKey, action.value, action.valueType,\n        action.asyncListValues, action._meta\n      );\n      set.__isInternalValueChange = optimizeRenderWithInternals && isInternalValueChange;\n      set.tree = tree;\n      break;\n    }\n\n    case constants.SET_VALUE_SRC: {\n      set.tree = setValueSrc(state.tree, action.path, action.delta, action.srcKey, config, action._meta);\n      break;\n    }\n\n    case constants.SET_OPERATOR_OPTION: {\n      set.tree = setOperatorOption(state.tree, action.path, action.name, action.value);\n      break;\n    }\n\n    case constants.MOVE_ITEM: {\n      set.tree = moveItem(state.tree, action.fromPath, action.toPath, action.placement, config);\n      break;\n    }\n\n    case constants.SET_DRAG_START: {\n      set.dragStart = action.dragStart;\n      set.dragging = action.dragging;\n      set.mousePos = action.mousePos;\n      break;\n    }\n\n    case constants.SET_DRAG_PROGRESS: {\n      set.mousePos = action.mousePos;\n      set.dragging = action.dragging;\n      break;\n    }\n\n    case constants.SET_DRAG_END: {\n      set.tree = checkEmptyGroups(state.tree, config);\n      set = { ...set, ...emptyDrag };\n      break;\n    }\n\n    default: {\n      break;\n    }\n    }\n\n    if (actionMeta) {\n      set.__lastAction = actionMeta;\n    }\n\n    if (setLastTree && set.tree && state.tree) {\n      setLastTree(state.tree);\n    }\n    \n    return {...state, ...unset, ...set};\n  };\n\n};\n","import Immutable, {fromJS} from \"immutable\";\nimport {toImmutableList} from \"../utils/stuff\";\nimport * as constants from \"../stores/constants\";\nimport { defaultRuleProperties, defaultGroupProperties } from \"../utils/defaultUtils\";\nimport uuid from \"../utils/uuid\";\n\n\n/**\n * @param {object} config\n * @param {Immutable.Map} tree\n */\nexport const setTree = (config, tree) => ({\n  type: constants.SET_TREE,\n  tree: tree,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addRule = (config, path, properties, ruleType = \"rule\", children = null, parentRuleGroupPath = null) => ({\n  type: constants.ADD_RULE,\n  ruleType: ruleType,\n  children: children,\n  path: toImmutableList(path),\n  id: uuid(),\n  properties: defaultRuleProperties(config, parentRuleGroupPath).merge(fromJS(properties) || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeRule = (config, path) => ({\n  type: constants.REMOVE_RULE,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addDefaultCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(fromJS(properties) || {}),\n  config: config,\n  meta: {\n    isDefaultCase: true\n  }\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(fromJS(properties) || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(fromJS(properties) || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeGroup = (config, path) => ({\n  type: constants.REMOVE_GROUP,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Array} fromPath\n * @param {Array} toPath\n * @param {String} placement, see constants PLACEMENT_*\n */\nexport const moveItem = (config, fromPath, toPath, placement) => ({\n  type: constants.MOVE_ITEM,\n  fromPath: toImmutableList(fromPath),\n  toPath: toImmutableList(toPath),\n  placement: placement,\n  config: config,\n});\n","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nexport const setConjunction = (config, path, conjunction) => ({\n  type: constants.SET_CONJUNCTION,\n  path: toImmutableList(path),\n  conjunction: conjunction\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} not\n */\nexport const setNot = (config, path, not) => ({\n  type: constants.SET_NOT,\n  path: toImmutableList(path),\n  not: not\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nexport const setLock = (config, path, lock) => ({\n  type: constants.SET_LOCK,\n  path: toImmutableList(path),\n  lock: lock\n});","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} field\n */\nexport const setField = (config, path, field, asyncListValues, _meta) => ({\n  type: constants.SET_FIELD,\n  path: toImmutableList(path),\n  field,\n  config,\n  asyncListValues,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {*} srcKey\n */\nexport const setFieldSrc = (config, path, srcKey) => ({\n  type: constants.SET_FIELD_SRC,\n  path: toImmutableList(path),\n  srcKey: srcKey,\n  config: config,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} operator\n */\nexport const setOperator = (config, path, operator) => ({\n  type: constants.SET_OPERATOR,\n  path: toImmutableList(path),\n  operator: operator,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n */\nexport const setValue = (config, path, delta, value, valueType, asyncListValues, _meta) => ({\n  type: constants.SET_VALUE,\n  path: toImmutableList(path),\n  delta,\n  value,\n  valueType,\n  asyncListValues,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nexport const setValueSrc = (config, path, delta, srcKey, _meta) => ({\n  type: constants.SET_VALUE_SRC,\n  path: toImmutableList(path),\n  delta,\n  srcKey,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {Array} parentFuncs\n * @param {string | null} argKey\n * @param {*} value\n * @param {string | \"!valueSrc\"} valueType\n * @param {*} asyncListValues\n */\nexport const setFuncValue = (config, path, delta, parentFuncs, argKey, value, valueType, asyncListValues, _meta) => ({\n  type: constants.SET_FUNC_VALUE,\n  path: toImmutableList(path),\n  delta,\n  parentFuncs,\n  argKey,\n  value,\n  valueType,\n  asyncListValues,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nexport const setOperatorOption = (config, path, name, value) => ({\n  type: constants.SET_OPERATOR_OPTION,\n  path: toImmutableList(path),\n  name: name,\n  value: value,\n  config: config\n});\n","import * as Export from \"./export\";\nimport * as Import from \"./import\";\nimport * as BasicUtils from \"./utils\";\nimport * as BasicFuncs from \"./config/funcs\";\nimport CoreConfig, { ConfigMixins } from \"./config\";\nimport TreeStore from \"./stores/tree\";\nimport * as TreeActions from \"./actions\";\n\nconst Utils = {\n  ...BasicUtils,\n  Export, Import,\n  // intrenal\n  ConfigMixins,\n  // expose import/export api to top level for convenience\n  ...Export, ...Import\n};\n\nexport {Utils, BasicFuncs, CoreConfig, TreeStore, TreeActions};\n","import { TreeStore } from \"@react-awesome-query-builder/core\";\nexport default TreeStore;\n","import React from \"react\";\n\nexport default React.createContext(); ","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_FIELD_SRC = \"SET_FIELD_SRC\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import * as constants from \"../stores/constants\";\n\n\n/**\n * @param {Object} mousePos\n * @param {Object} dragging\n */\nexport const setDragProgress = (mousePos, dragging) => ({\n  type: constants.SET_DRAG_PROGRESS,\n  mousePos: mousePos,\n  dragging: dragging,\n});\n\n/**\n * @param {Object} dragStart\n * @param {Object} dragging\n * @param {Object} mousePos\n */\nexport const setDragStart = (dragStart, dragging, mousePos) => ({\n  type: constants.SET_DRAG_START,\n  dragStart: dragStart,\n  dragging: dragging,\n  mousePos: mousePos,\n});\n\n/**\n *\n */\nexport const setDragEnd = () => ({\n  type: constants.SET_DRAG_END,\n});\n","import { TreeActions } from \"@react-awesome-query-builder/core\";\nimport * as drag from \"./drag\";\nconst { tree, group, rule } = TreeActions;\nexport {\n  tree,\n  group,\n  rule,\n  drag\n};\n","import pick from \"lodash/pick\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { extendConfig, configKeys } = Utils.ConfigUtils;\n\nconst pickConfig = (props) => {\n  return pick(props, configKeys);\n};\n\nexport const createConfigMemo = () => {\n  const configStore = new Map();\n  const maxSize = 2; // current and prev\n  let configId = 0;\n\n  const extendAndStore = (config) => {\n    const extendedConfig = extendConfig(config, ++configId);\n    if ((configStore.size + 1) > maxSize) {\n      configStore.delete(configStore.keys().next().value);\n    }\n    configStore.set(config, extendedConfig);\n    return extendedConfig;\n  };\n\n  const findBasic = (findConfig) => {\n    for (const basicConfig of configStore.keys()) {\n      const extConfig = configStore.get(basicConfig);\n      const found = configKeys.map(k => extConfig[k] === findConfig[k]).filter(v => !v).length === 0;\n      if (found) {\n        return basicConfig;\n      }\n    }\n    return findConfig;\n  };\n\n  const findExtended = (findConfig) => {\n    // strict find:\n    // return configStore.get(findConfig) || configStore.values().find(ec => ec === findConfig);\n\n    for (const savedConfig of configStore.keys()) {\n      const foundParts = configKeys.filter(k => savedConfig[k] === findConfig[k]);\n      const found = foundParts.length === configKeys.length;\n      if (found) {\n        return configStore.get(savedConfig);\n      }\n    }\n\n\n    for (const extendedConfig of configStore.values()) {\n      const foundParts = configKeys.filter(k => extendedConfig[k] === findConfig[k]);\n      const found = foundParts.length === configKeys.length;\n      if (found) {\n        return extendedConfig;\n      }\n    }\n\n    return null;\n  };\n\n  const findOrExtend = (config) => {\n    return findExtended(config) || extendAndStore(config);\n  };\n  \n  return {\n    getExtended: (props) => findOrExtend(pickConfig(props)),\n    getBasic: findBasic\n  };\n};\n","\nexport const getOpCardinality = (opDef) => {\n  return opDef?.cardinality ?? 1;\n};\n\nexport const truncateString = (str, n, useWordBoundary) => {\n  if (!n || !str || str.length <= n) { return str; }\n  var subString = str.substr(0, n-1);\n  return (useWordBoundary \n    ? subString.substr(0, subString.lastIndexOf(\" \")) \n    : subString) + \"...\";\n};\n\nexport const immutableEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else {\n    return v1?.equals(v2);\n  }\n};\n\n// const deepEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else if (Map.isMap(v1)) {\n//     return v1.equals(v2);\n//   } else {\n//     return JSON.stringify(v1) == JSON.stringify(v2);\n//   }\n// };\n\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (a && typeof a.equals === \"function\")\n    return a.equals(b);\n  else if (typeof a === \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n\nconst isDev = () => (typeof process !== \"undefined\" && process.env && process.env.NODE_ENV == \"development\");\n\nexport const getLogger = (devMode = false) => {\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\n\nexport const logger = getLogger();\n","import {immutableEqual} from \"../utils/stuff\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { validateAndFixTree } = Utils.Validation;\n\nexport const createValidationMemo = () => {\n  let originalTree;\n  let validatedTree;\n  let configId;\n\n  return (config, tree, oldConfig = undefined, sanitizeTree = true) => {\n    if (!tree) {\n      return null;\n    }\n    if (config.__configId === configId && (immutableEqual(tree, originalTree) || immutableEqual(tree, validatedTree))) {\n      return validatedTree;\n    } else {\n      configId = config.__configId;\n      originalTree = tree;\n      if (sanitizeTree === false) {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config, false, false, false);\n      } else {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config);\n      }\n      return validatedTree;\n    }\n  };\n};\n","import React from \"react\";\nimport mapValues from \"lodash/mapValues\";\nimport {shallowEqual} from \"./stuff\";\n\nconst getReactContainerType = (el) => {\n  if (el._reactRootContainer) {\n    return \"root\";\n  }\n  if (Object.getOwnPropertyNames(el).filter(k => k.startsWith(\"__reactContainer\")).length > 0) {\n    return \"container\";\n  }\n  return undefined;\n};\n\nconst getReactRootNodeType = (node) => {\n  if (!node) {\n    return undefined;\n  }\n  const type = getReactContainerType(node);\n  if (type !== undefined) {\n    return type;\n  } else {\n    return getReactRootNodeType(node.parentNode);\n  }\n};\n\nexport const isUsingLegacyReactDomRender = (node) => {\n  return getReactRootNodeType(node) === \"root\";\n};\n\n\nexport const liteShouldComponentUpdate = (self, config) => (nextProps, nextState) => {\n  const prevProps = self.props;\n  const prevState = self.state;\n\n  let should = nextProps != prevProps || nextState != prevState;\n  if (should) {\n    if (prevState == nextState && prevProps != nextProps) {\n      let chs = [];\n      for (let k in nextProps) {\n        let changed = (nextProps[k] != prevProps[k]);\n        if (changed) {\n          if (config[k] == \"ignore\")\n            changed = false;\n          else if (config[k] == \"shallow_deep\")\n            changed = !shallowEqual(nextProps[k], prevProps[k], true);\n          else if (config[k] == \"shallow\")\n            changed = !shallowEqual(nextProps[k], prevProps[k]);\n          else if (typeof config[k] == \"function\")\n            changed = config[k](nextProps[k], prevProps[k], nextState);\n        }\n        if (changed)\n          chs.push(k);\n      }\n      if (!chs.length)\n        should = false;\n    }\n  }\n  return should;\n};\n\nexport const pureShouldComponentUpdate = (self) => function(nextProps, nextState) {\n  return (\n    !shallowEqual(self.props, nextProps)\n    || !shallowEqual(self.state, nextState)\n  );\n};\n\nconst canUseOldComponentWillReceiveProps = () => {\n  const v = React.version.split(\".\").map(parseInt.bind(null, 10));\n  return v[0] == 16 && v[1] < 3 || v[0] < 16;\n};\n\nexport const useOnPropsChanged = (obj) => {\n  // 1. `shouldComponentUpdate` should be called after `componentWillReceiveProps`\n  // 2. `shouldComponentUpdate` should not be used for PureComponent\n\n  // Because `useOnPropsChanged` can only be applied to `Component` not `PureComponent`, make it pure now\n  if (!obj.shouldComponentUpdate) {\n    obj.shouldComponentUpdate = pureShouldComponentUpdate(obj);\n  }\n\n  if (canUseOldComponentWillReceiveProps()) {\n    // Use old method\n    obj.componentWillReceiveProps = (nextProps) => {\n      obj.onPropsChanged(nextProps);\n    };\n  } else {\n    // Simulate `componentWillReceiveProps` with `shouldComponentUpdate`\n    const origShouldComponentUpdate = obj.shouldComponentUpdate;\n    const newShouldComponentUpdate = function(nextProps, nextState) {\n      const shouldNotify = !shallowEqual(obj.props, nextProps);\n      if (shouldNotify) {\n        obj.onPropsChanged(nextProps);\n      }\n      const shouldUpdate = origShouldComponentUpdate.call(obj, nextProps, nextState);\n      return shouldUpdate;\n    };\n    obj.shouldComponentUpdate = newShouldComponentUpdate.bind(obj);\n  }\n};\n\nexport const bindActionCreators = (actionCreators, config, dispatch) =>\n  mapValues(actionCreators, (actionCreator) =>\n    (...args) => dispatch(actionCreator(config, ...args))\n  );\n","import React, { Component } from \"react\";\nimport merge from \"lodash/merge\";\nimport {connect} from \"react-redux\";\nimport context from \"../stores/context\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../actions\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {useOnPropsChanged, liteShouldComponentUpdate, bindActionCreators} from \"../utils/reactUtils\";\n\n\nclass Query extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    onChange: PropTypes.func,\n    onInit: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    tree: PropTypes.any, //instanceOf(Immutable.Map)\n    //dispatch: PropTypes.func.isRequired,\n    //__isInternalValueChange\n    //__lastAction\n    //getMemoizedTree: PropTypes.func.isRequired,\n    //getBasicConfig: PropTypes.func.isRequired,\n    //sanitizeTree\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this._updateActions(props);\n\n    // For preventive validation (tree and config consistency)\n    // When config has changed from QueryContainer, \n    //  but new dispatched validated tree value is not in redux store yet (tree prop is old)\n    this.validatedTree = props.getMemoizedTree(props.config, props.tree, undefined, props.sanitizeTree);\n    this.oldValidatedTree = this.validatedTree;\n\n    const basicConfig = props.getBasicConfig(props.config);\n    props.onInit && props.onInit(this.validatedTree, basicConfig, undefined, this.actions);\n  }\n\n  _updateActions (props) {\n    const {config, dispatch} = props;\n    this.actions = bindActionCreators({...actions.tree, ...actions.group, ...actions.rule}, config, dispatch);\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    tree: (nextValue) => {\n      if (nextValue === this.oldValidatedTree && this.oldValidatedTree === this.validatedTree) {\n        // Got value dispatched from QueryContainer\n        // Ignore, because we've just rendered it\n        return false;\n      }\n      return true;\n    }\n  });\n\n  onPropsChanged(nextProps) {\n    const {onChange} = nextProps;\n    const oldConfig = this.props.config;\n    const newTree = nextProps.tree;\n    const oldTree = this.props.tree;\n    const newConfig = nextProps.config;\n\n    this.oldValidatedTree = this.validatedTree;\n    this.validatedTree = newTree;\n    if (oldConfig !== newConfig) {\n      this._updateActions(nextProps);\n      this.validatedTree = nextProps.getMemoizedTree(newConfig, newTree, oldConfig);\n    }\n\n    const validatedTreeChanged = !immutableEqual(this.validatedTree, this.oldValidatedTree);\n    if (validatedTreeChanged) {\n      const newBasicConfig = nextProps.getBasicConfig(newConfig);\n      onChange && onChange(this.validatedTree, newBasicConfig, nextProps.__lastAction, this.actions);\n    }\n  }\n\n  render() {\n    const {config, renderBuilder, dispatch, __isInternalValueChange} = this.props;\n    const builderProps = {\n      tree: this.validatedTree,\n      actions: this.actions,\n      config: config,\n      dispatch: dispatch,\n      __isInternalValueChange\n    };\n\n    return renderBuilder(builderProps);\n  }\n}\n\n\nconst ConnectedQuery = connect(\n  (state) => {\n    return {\n      tree: state.tree,\n      __isInternalValueChange: state.__isInternalValueChange,\n      __lastAction: state.__lastAction,\n    };\n  },\n  null,\n  null,\n  {\n    context\n  }\n)(Query);\nConnectedQuery.displayName = \"ConnectedQuery\";\n\n\nexport default ConnectedQuery;\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport treeStoreReducer from \"../stores/tree\";\nimport context from \"../stores/context\";\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport * as actions from \"../actions\";\nimport {createConfigMemo} from \"../utils/configUtils\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {createValidationMemo} from \"../utils/validation\";\nimport {liteShouldComponentUpdate, useOnPropsChanged} from \"../utils/reactUtils\";\nimport ConnectedQuery from \"./Query\";\nconst {defaultRoot} = Utils.DefaultUtils;\n\n\nexport default class QueryContainer extends Component {\n  static propTypes = {\n    //config\n    conjunctions: PropTypes.object.isRequired,\n    fields: PropTypes.object.isRequired,\n    types: PropTypes.object.isRequired,\n    operators: PropTypes.object.isRequired,\n    widgets: PropTypes.object.isRequired,\n    settings: PropTypes.object.isRequired,\n    ctx: PropTypes.object.isRequired,\n\n    onChange: PropTypes.func,\n    onInit: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    value: PropTypes.any, //instanceOf(Immutable.Map)\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    useOnPropsChanged(this);\n\n    const { getExtended, getBasic } = createConfigMemo();\n    this.getMemoizedConfig = getExtended;\n    this.getBasicConfig = getBasic;\n    this.getMemoizedTree = createValidationMemo();\n    \n    const config = this.getMemoizedConfig(props);\n    const {shouldCreateEmptyGroup} = config.settings;\n    const canAddDefaultRule = !shouldCreateEmptyGroup; // if prop `value` is not provided, can add default/empty rule?\n    const emptyTree = defaultRoot(config, canAddDefaultRule);\n    const sanitizeTree = !!props.value;\n    const tree = props.value || emptyTree;\n    const validatedTree = this.getMemoizedTree(config, tree, undefined, sanitizeTree);\n\n    const reducer = treeStoreReducer(config, validatedTree, this.getMemoizedTree, this.setLastTree, this.getConfig);\n    const store = createStore(reducer);\n\n    this.config = config;\n    this.state = {\n      store\n    };\n    this.QueryWrapper = (pr) => config.settings.renderProvider(pr, config.ctx);\n  }\n\n  setLastTree = (lastTree) => {\n    if (this.prevTree) {\n      this.prevprevTree = this.prevTree;\n    }\n    this.prevTree = lastTree;\n  };\n\n  getConfig = () => {\n    return this.config;\n  };\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    value: (nextValue, prevValue, state) => { return false; }\n  });\n\n  onPropsChanged(nextProps) {\n    // compare configs\n    const prevProps = this.props;\n    const oldConfig = this.config;\n    const nextConfig = this.getMemoizedConfig(nextProps);\n    const isConfigChanged = oldConfig !== nextConfig;\n\n    // compare trees\n    const storeValue = this.state.store.getState().tree;\n    const isTreeChanged = !immutableEqual(nextProps.value, this.props.value) && !immutableEqual(nextProps.value, storeValue);\n    const currentTree = isTreeChanged ? (nextProps.value || defaultRoot(nextProps)) : storeValue;\n    const isTreeTrulyChanged = isTreeChanged && !immutableEqual(nextProps.value, this.prevTree) && !immutableEqual(nextProps.value, this.prevprevTree);\n    this.sanitizeTree = isTreeTrulyChanged || isConfigChanged;\n\n    if (isConfigChanged) {\n      if (prevProps.settings.renderProvider !== nextProps.settings.renderProvider) {\n        this.QueryWrapper = (props) => nextConfig.settings.renderProvider(props, nextConfig.ctx);\n      }\n      this.config = nextConfig;\n    }\n    \n    if (isTreeChanged || isConfigChanged) {\n      const validatedTree = this.getMemoizedTree(nextConfig, currentTree, oldConfig, this.sanitizeTree);\n      //return Promise.resolve().then(() => {\n      this.state.store.dispatch(\n        actions.tree.setTree(nextConfig, validatedTree)\n      );\n      //});\n    }\n  }\n\n  render() {\n    // `get_children` is deprecated!\n    const {renderBuilder, get_children, onChange, onInit} = this.props;\n    const {store} = this.state;\n    const config = this.config;\n    const QueryWrapper = this.QueryWrapper;\n\n    return (\n      <QueryWrapper config={config}>\n        <Provider store={store} context={context}>\n          <ConnectedQuery\n            config={config}\n            getMemoizedTree={this.getMemoizedTree}\n            getBasicConfig={this.getBasicConfig}\n            sanitizeTree={this.sanitizeTree}\n            onChange={onChange}\n            onInit={onInit}\n            renderBuilder={renderBuilder || get_children}\n          />\n        </Provider>\n      </QueryWrapper>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate} from \"../../utils/reactUtils\";\nimport {connect} from \"react-redux\";\nimport classNames from \"classnames\";\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nconst createRuleContainer = (Rule) => \n  class RuleContainer extends Component {\n    static propTypes = {\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      config: PropTypes.object.isRequired,\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      operator: PropTypes.string,\n      field: PropTypes.any,\n      fieldSrc: PropTypes.string,\n      fieldType: PropTypes.string,\n      actions: PropTypes.object.isRequired, //{removeRule: Function, setField, setFieldSrc, setOperator, setOperatorOption, setValue, setValueSrc, ...}\n      onDragStart: PropTypes.func,\n      value: PropTypes.any, //depends on widget\n      valueSrc: PropTypes.any,\n      asyncListValues: PropTypes.array,\n      valueError: PropTypes.any,\n      fieldError: PropTypes.string,\n      operatorOptions: PropTypes.object,\n      reordableNodesCnt: PropTypes.number,\n      parentField: PropTypes.string, //from RuleGroup\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      \n      this.dummyFn.isDummyFn = true;\n    }\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeRule(this.props.path);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    setField = (field, asyncListValues, _meta) => {\n      this.props.actions.setField(this.props.path, field, asyncListValues, _meta);\n    };\n\n    setFieldSrc = (srcKey) => {\n      this.props.actions.setFieldSrc(this.props.path, srcKey);\n    };\n\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    setOperatorOption = (name, value) => {\n      this.props.actions.setOperatorOption(this.props.path, name, value);\n    };\n\n    setValue = (delta, value, type, asyncListValues, _meta) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, _meta);\n    };\n\n    setValueSrc = (delta, srcKey, _meta) => {\n      this.props.actions.setValueSrc(this.props.path, delta, srcKey, _meta);\n    };\n\n    // can be used for both LHS and LHS\n    setFuncValue = (delta, parentFuncs, argKey, value, type, asyncListValues, _meta) => {\n      this.props.actions.setFuncValue(this.props.path, delta, parentFuncs, argKey, value, type, asyncListValues, _meta);\n    };\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    render() {\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const fieldConfig = getFieldConfig(this.props.config, this.props.field);\n      const fieldType = this.props.fieldType || fieldConfig?.type || null;\n      const {showErrorMessage} = this.props.config.settings;\n      const _isGroup = fieldConfig && fieldConfig.type == \"!struct\";\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n\n      const {valueError, fieldError} = this.props;\n      const oneError = [fieldError, ...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n      const hasError = oneError != null && showErrorMessage;\n\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"rule-container\", hasError ? \"rule-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Rule\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              setField={this.dummyFn}\n              setFieldSrc={this.dummyFn}\n              setFuncValue={this.dummyFn}\n              setOperator={this.dummyFn}\n              setOperatorOption={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              setValue={this.dummyFn}\n              setValueSrc={this.dummyFn}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueType={this.props.valueType || null}\n              valueError={this.props.valueError || null}\n              fieldError={this.props.fieldError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Rule\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setFieldSrc={isInDraggingTempo ? this.dummyFn : this.setFieldSrc}\n              setFuncValue={isInDraggingTempo ? this.dummyFn : this.setFuncValue}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setOperatorOption={isInDraggingTempo ? this.dummyFn : this.setOperatorOption}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              setValueSrc={isInDraggingTempo ? this.dummyFn : this.setValueSrc}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueType={this.props.valueType || null}\n              valueError={this.props.valueError || null}\n              fieldError={this.props.fieldError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Rule) => {\n  const ConnectedRuleContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createRuleContainer(Rule));\n  ConnectedRuleContainer.displayName = \"ConnectedRuleContainer\";\n\n  return ConnectedRuleContainer;\n};\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport {connect} from \"react-redux\";\nimport {logger} from \"../../utils/stuff\";\nimport context from \"../../stores/context\";\nimport * as constants from \"../../stores/constants\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../../actions\";\nimport {pureShouldComponentUpdate, useOnPropsChanged, isUsingLegacyReactDomRender} from \"../../utils/reactUtils\";\nconst {clone} = Utils;\nconst {getFlatTree} = Utils.TreeUtils;\n\nlet _isReorderingTree = false;\n\nconst createSortableContainer = (Builder, CanMoveFn = null) => \n  class SortableContainer extends Component {\n    static propTypes = {\n      tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n      actions: PropTypes.object.isRequired, // {moveItem: Function, ..}\n      //... see Builder\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.onPropsChanged(props);\n    }\n\n    onPropsChanged(nextProps) {\n      this.tree = getFlatTree(nextProps.tree);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (changed) {\n              //don't render <Builder> on dragging - appropriate redux-connected components will do it\n              if(k != \"dragging\" && k != \"mousePos\")\n                chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    componentDidUpdate(_prevProps, _prevState) {\n      let dragging = this.props.dragging;\n      let startDragging = this.props.dragStart;\n      _isReorderingTree = false;\n      if (startDragging && startDragging.id) {\n        dragging.itemInfo = this.tree.items[dragging.id];\n        if (dragging.itemInfo) {\n          if (dragging.itemInfo.index != startDragging.itemInfo.index || dragging.itemInfo.parent != startDragging.itemInfo.parent) {\n            const treeEl = startDragging.treeEl;\n            const treeElContainer = startDragging.treeElContainer;\n            const plhEl = this._getPlaceholderNodeEl(treeEl, true);\n            if (plhEl) {\n              const plX = plhEl.getBoundingClientRect().left + window.scrollX;\n              const plY = plhEl.getBoundingClientRect().top + window.scrollY;\n              const oldPlX = startDragging.plX;\n              const oldPlY = startDragging.plY;\n              const scrollTop = treeElContainer.scrollTop;\n              startDragging.plX = plX;\n              startDragging.plY = plY;\n              startDragging.itemInfo = clone(dragging.itemInfo);\n              startDragging.y = plhEl.offsetTop;\n              startDragging.x = plhEl.offsetLeft;\n              startDragging.clientY += (plY - oldPlY);\n              startDragging.clientX += (plX - oldPlX);\n              if (treeElContainer != document.body)\n                startDragging.scrollTop = scrollTop;\n\n              this.onDrag(this.props.mousePos, false);\n            }\n          }\n        }\n      }\n    }\n\n    _getNodeElById (treeEl, indexId, ignoreCache = false) {\n      if (indexId == null)\n        return null;\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[indexId];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      el = treeEl.querySelector('.group-or-rule-container[data-id=\"'+indexId+'\"]');\n      this._cacheEls[indexId] = el;\n      return el;\n    }\n\n    _getDraggableNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"draggable\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-draggable\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"draggable\"] = el;\n      return el;\n    }\n\n    _getPlaceholderNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"placeholder\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-placeholder\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"placeholder\"] = el;\n      return el;\n    }\n\n    _isScrollable(node) {\n      const overflowY = window.getComputedStyle(node)[\"overflow-y\"];\n      return (overflowY === \"scroll\" || overflowY === \"auto\") && (node.scrollHeight > node.offsetHeight);\n    }\n\n    _getScrollParent(node) {\n      if (node == null)\n        return null;\n    \n      if (node === document.body || this._isScrollable(node)) {\n        return node;\n      } else {\n        return this._getScrollParent(node.parentNode);\n      }\n    }\n\n    _getEventTarget = (e, dragStart) => {\n      return e && e.__mocked_window || document.body || window;\n    };\n\n    onDragStart = (id, dom, e) => {\n      let treeEl = dom.closest(\".query-builder\");\n      if (this._isUsingLegacyReactDomRender === undefined) {\n        this._isUsingLegacyReactDomRender = isUsingLegacyReactDomRender(treeEl);\n      }\n      document.body.classList.add(\"qb-dragging\");\n      treeEl.classList.add(\"qb-dragging\");\n      let treeElContainer = treeEl.closest(\".query-builder-container\") || treeEl;\n      treeElContainer = this._getScrollParent(treeElContainer) || document.body;\n      const scrollTop = treeElContainer.scrollTop;\n      \n      const _dragEl = this._getDraggableNodeEl(treeEl);\n      const _plhEl = this._getPlaceholderNodeEl(treeEl);\n\n      const tmpAllGroups = treeEl.querySelectorAll(\".group--children\");\n      const anyGroup = tmpAllGroups.length ? tmpAllGroups[0] : null;\n      let groupPadding;\n      if (anyGroup) {\n        groupPadding = window.getComputedStyle(anyGroup, null).getPropertyValue(\"padding-left\");\n        groupPadding = parseInt(groupPadding);\n      }\n\n      const dragging = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        w: dom.offsetWidth,\n        h: dom.offsetHeight,\n        itemInfo: this.tree.items[id],\n        paddingLeft: groupPadding,\n      };\n      const dragStart = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        scrollTop: scrollTop,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        itemInfo: clone(this.tree.items[id]),\n        treeEl: treeEl,\n        treeElContainer: treeElContainer,\n      };\n      const mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n\n      const target = this._getEventTarget(e, dragStart);\n      this.eventTarget = target;\n      target.addEventListener(\"mousemove\", this.onDrag);\n      target.addEventListener(\"mouseup\", this.onDragEnd);\n\n      this.props.setDragStart(dragStart, dragging, mousePos);\n    };\n\n\n    onDrag = (e, doHandleDrag = true) => {\n      let dragging = Object.assign({}, this.props.dragging);\n      let startDragging = this.props.dragStart;\n      const paddingLeft = dragging.paddingLeft; //this.props.paddingLeft;\n      const treeElContainer = startDragging.treeElContainer;\n      const scrollTop = treeElContainer.scrollTop;\n      dragging.itemInfo = this.tree.items[dragging.id];\n      if (!dragging.itemInfo) {\n        return;\n      }\n\n      let mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n      const startMousePos = {\n        clientX: startDragging.clientX,\n        clientY: startDragging.clientY,\n      };\n\n      if (e.__mock_dom) {\n        const treeEl = startDragging.treeEl;\n        const dragEl = this._getDraggableNodeEl(treeEl);\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        e.__mock_dom({treeEl, dragEl, plhEl});\n      }\n\n      //first init plX/plY\n      if (!startDragging.plX) {\n        const treeEl = startDragging.treeEl;\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        if (plhEl) {\n          startDragging.plX = plhEl.getBoundingClientRect().left + window.scrollX;\n          startDragging.plY = plhEl.getBoundingClientRect().top + window.scrollY;\n        }\n      }\n\n      const startX = startDragging.x;\n      const startY = startDragging.y;\n      const startClientX = startDragging.clientX;\n      const startClientY = startDragging.clientY;\n      const startScrollTop = startDragging.scrollTop;\n      const pos = {\n        x: startX + (e.clientX - startClientX),\n        y: startY + (e.clientY - startClientY) + (scrollTop - startScrollTop)\n      };\n      dragging.x = pos.x;\n      dragging.y = pos.y;\n      dragging.paddingLeft = paddingLeft;\n      dragging.mousePos = mousePos;\n      dragging.startMousePos = startMousePos;\n\n\n      this.props.setDragProgress(mousePos, dragging);\n\n      const moved = doHandleDrag ? this.handleDrag(dragging, e, CanMoveFn) : false;\n\n      if (!moved) {\n        if (e.preventDefault)\n          e.preventDefault();\n      }\n    };\n\n    onDragEnd = () => {\n      let treeEl = this.props.dragStart.treeEl;\n\n      this.props.setDragEnd();\n\n      treeEl.classList.remove(\"qb-dragging\");\n      document.body.classList.remove(\"qb-dragging\");\n      this._cacheEls = {};\n\n      const target = this.eventTarget || this._getEventTarget();\n      target.removeEventListener(\"mousemove\", this.onDrag);\n      target.removeEventListener(\"mouseup\", this.onDragEnd);\n    };\n    \n\n    handleDrag (dragInfo, e, canMoveFn) {\n      const canMoveBeforeAfterGroup = true;\n      const itemInfo = dragInfo.itemInfo;\n      const paddingLeft = dragInfo.paddingLeft;\n\n      let moveInfo = null;\n      const treeEl = this.props.dragStart.treeEl;\n      const dragId = dragInfo.id;\n      const dragEl = this._getDraggableNodeEl(treeEl);\n      const plhEl = this._getPlaceholderNodeEl(treeEl);\n      let dragRect, plhRect, hovRect, treeRect;\n      if (dragEl && plhEl) {\n        dragRect = dragEl.getBoundingClientRect();\n        plhRect = plhEl.getBoundingClientRect();\n        if (!plhRect.width) {\n          return;\n        }\n        let dragDirs = {hrz: 0, vrt: 0};\n        if (dragRect.top < plhRect.top)\n          dragDirs.vrt = -1; //up\n        else if (dragRect.bottom > plhRect.bottom)\n          dragDirs.vrt = +1; //down\n        if (dragRect.left > plhRect.left)\n          dragDirs.hrz = +1; //right\n        else if (dragRect.left < plhRect.left)\n          dragDirs.hrz = -1; //left\n\n        treeRect = treeEl.getBoundingClientRect();\n        const trgCoord = {\n          x: treeRect.left + (treeRect.right - treeRect.left) / 2,\n          y: dragDirs.vrt >= 0 ? dragRect.bottom : dragRect.top,\n        };\n        let hovCNodeEl;\n        if (e.__mocked_hov_container) {\n          hovCNodeEl = e.__mocked_hov_container;\n        } else {\n          const hovNodeEl = document.elementFromPoint(trgCoord.x, trgCoord.y-1);\n          hovCNodeEl = hovNodeEl ? hovNodeEl.closest(\".group-or-rule-container\") : null;\n          if (!hovCNodeEl && hovNodeEl && hovNodeEl.classList.contains(\"query-builder-container\")) {\n            // fix 2022-01-24 - get root .group-or-rule-container\n            const rootGroupContainer = hovNodeEl?.firstChild?.firstChild;\n            if (rootGroupContainer && rootGroupContainer.classList.contains(\"group-or-rule-container\")) {\n              hovCNodeEl = rootGroupContainer;\n            }\n          }\n        }\n        if (!hovCNodeEl) {\n          logger.log(\"out of tree bounds!\");\n        } else {\n          const isGroup = hovCNodeEl.classList.contains(\"group-container\");\n          const hovNodeId = hovCNodeEl.getAttribute(\"data-id\");\n          const hovEl = hovCNodeEl;\n          let doAppend = false;\n          let doPrepend = false;\n          if (hovEl) {\n            hovRect = hovEl.getBoundingClientRect();\n            const hovHeight = hovRect.bottom - hovRect.top;\n            const hovII = this.tree.items[hovNodeId];\n            if (!hovII) {\n              throw new Error(\"There is an issue with rendering. If you use Next.js, please check getServerSideProps() method.\");\n            }\n            let trgRect = null,\n              trgEl = null,\n              trgII = null,\n              altII = null; //for canMoveBeforeAfterGroup\n\n            if (dragDirs.vrt == 0) {\n              trgII = itemInfo;\n              trgEl = plhEl;\n              if (trgEl)\n                trgRect = trgEl.getBoundingClientRect();\n            } else {\n              if (isGroup) {\n                if (dragDirs.vrt > 0) { //down\n                  //take group header (for prepend only)\n                  const hovInnerEl = hovCNodeEl.getElementsByClassName(\"group--header\");\n                  const hovEl2 = hovInnerEl.length ? hovInnerEl[0] : null;\n                  if (hovEl2) {\n                    const hovRect2 = hovEl2.getBoundingClientRect();\n                    const hovHeight2 = hovRect2.bottom - hovRect2.top;\n                    const isOverHover = ((dragRect.bottom - hovRect2.top) > hovHeight2*3/4);\n                    if (isOverHover && hovII.top > dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect2;\n                      trgEl = hovEl2;\n                      doPrepend = true;\n                    }\n                  }\n                } else if (dragDirs.vrt < 0) { //up\n                  if (hovII.lev >= itemInfo.lev) {\n                    //take whole group\n                    const isClimbToHover = ((hovRect.bottom - dragRect.top) >= 2);\n                    if (isClimbToHover && hovII.top < dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                      doAppend = true;\n                    }\n                  }\n                }\n                if (!doPrepend && !doAppend || canMoveBeforeAfterGroup) {\n                  //take whole group and check if we can move before/after group\n                  const isOverHover = (dragDirs.vrt < 0 //up\n                    ? ((hovRect.bottom - dragRect.top) > (hovHeight-5))\n                    : ((dragRect.bottom - hovRect.top) > (hovHeight-5)));\n                  if (isOverHover) {\n                    if (!doPrepend && !doAppend) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                    }\n                    if (canMoveBeforeAfterGroup) {\n                      altII = hovII;\n                    }\n                  }\n                }\n              } else {\n                //check if we can move before/after group\n                const isOverHover = (dragDirs.vrt < 0 //up\n                  ? ((hovRect.bottom - dragRect.top) > hovHeight/2)\n                  : ((dragRect.bottom - hovRect.top) > hovHeight/2));\n                if (isOverHover) {\n                  trgII = hovII;\n                  trgRect = hovRect;\n                  trgEl = hovEl;\n                }\n              }\n            }\n\n            const isSamePos = (trgII && trgII.id == dragId);\n            if (trgRect) {\n              const dragLeftOffset = dragRect.left - treeRect.left;\n              const trgLeftOffset = trgRect.left - treeRect.left;\n              const _trgLev = trgLeftOffset / paddingLeft;\n              const dragLev = Math.max(0, Math.round(dragLeftOffset / paddingLeft));\n\n              //find all possible moves\n              let availMoves = [];\n              let altMoves = []; //alternatively can move after/before group, if can't move into it\n              if (isSamePos) {\n                //do nothing\n              } else {\n                if (isGroup) {\n                  if (doAppend) {\n                    availMoves.push([constants.PLACEMENT_APPEND, trgII, trgII.lev+1]);\n                  } else if (doPrepend) {\n                    availMoves.push([constants.PLACEMENT_PREPEND, trgII, trgII.lev+1]);\n                  }\n                  //alt\n                  if (canMoveBeforeAfterGroup && altII) {\n                    // fix 2022-01-24: do prepend/append instead of before/after for root\n                    const isToRoot = altII.lev == 0;\n                    // fix 2022-01-25: fix prepend/append instead of before/after for case_group\n                    const isToCase = altII.type == \"case_group\" && itemInfo.type != \"case_group\";\n                    let prevCaseId = altII.prev && this.tree.items[altII.prev].caseId;\n                    let nextCaseId = altII.next && this.tree.items[altII.next].caseId;\n                    if (itemInfo.caseId == prevCaseId)\n                      prevCaseId = null;\n                    if (itemInfo.caseId == nextCaseId)\n                      nextCaseId = null;\n                    const prevCase = prevCaseId && this.tree.items[prevCaseId];\n                    const nextCase = nextCaseId && this.tree.items[nextCaseId];\n\n                    if (dragDirs.vrt > 0) { //down\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_APPEND, altII, altII.lev+1]);\n                      } else if (isToCase && nextCase) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, nextCase, nextCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_AFTER, altII, altII.lev]);\n                      }\n                    } else if (dragDirs.vrt < 0) { //up\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, altII, altII.lev+1]);\n                      } else if (isToCase && prevCase) {\n                        altMoves.push([constants.PLACEMENT_APPEND, prevCase, prevCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_BEFORE, altII, altII.lev]);\n                      }\n                    }\n                  }\n                }\n                if (!doAppend && !doPrepend) {\n                  if (dragDirs.vrt < 0) { //up\n                    availMoves.push([constants.PLACEMENT_BEFORE, trgII, trgII.lev]);\n                  } else if (dragDirs.vrt > 0) { //down\n                    availMoves.push([constants.PLACEMENT_AFTER, trgII, trgII.lev]);\n                  }\n                }\n              }\n              \n              //add case\n              const addCaseII = am => {\n                const toII = am[1];\n                const fromCaseII = itemInfo.caseId ? this.tree.items[itemInfo.caseId] : null;\n                const toCaseII = toII.caseId ? this.tree.items[toII.caseId] : null;\n                return [...am, fromCaseII, toCaseII];\n              };\n              availMoves = availMoves.map(addCaseII);\n              altMoves = altMoves.map(addCaseII);\n\n              //sanitize\n              availMoves = availMoves.filter(am => {\n                const placement = am[0];\n                const trg = am[1];\n                if ((placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) && trg.parent == null)\n                  return false;\n                if (trg.collapsed && (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND))\n                  return false;\n\n                let isInside = (trg.id == itemInfo.id);\n                if (!isInside) {\n                  let tmp = trg;\n                  while (tmp.parent) {\n                    tmp = this.tree.items[tmp.parent];\n                    if (tmp.id == itemInfo.id) {\n                      isInside = true;\n                      break;\n                    }\n                  }\n                }\n                return !isInside;\n              }).map(am => {\n                const placement = am[0],\n                  toII = am[1],\n                  _lev = am[2],\n                  _fromCaseII = am[3],\n                  _toCaseII = am[4];\n                let toParentII = null;\n                if (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND)\n                  toParentII = toII;\n                else\n                  toParentII = this.tree.items[toII.parent];\n                if (toParentII && toParentII.parent == null)\n                  toParentII = null;\n                am[5] = toParentII;\n                return am;\n              });\n\n              let bestMode = null;\n              let filteredMoves = availMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              if (canMoveBeforeAfterGroup && filteredMoves.length == 0 && altMoves.length > 0) {\n                filteredMoves = altMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              }\n              const levs = filteredMoves.map(am => am[2]);\n              const curLev = itemInfo.lev;\n              const allLevs = levs.concat(curLev);\n              let closestDragLev = null;\n              if (allLevs.indexOf(dragLev) != -1)\n                closestDragLev = dragLev;\n              else if (dragLev > Math.max(...allLevs))\n                closestDragLev = Math.max(...allLevs);\n              else if (dragLev < Math.min(...allLevs))\n                closestDragLev = Math.min(...allLevs);\n              bestMode = filteredMoves.find(am => am[2] == closestDragLev);\n              if (!isSamePos && !bestMode && filteredMoves.length)\n                bestMode = filteredMoves[0];\n              moveInfo = bestMode;\n            }\n          }\n        }\n      }\n\n      if (moveInfo) {\n        this.move(itemInfo, moveInfo[1], moveInfo[0], moveInfo[3]);\n\n        // logger.log(\"DRAG-N-DROP\", JSON.stringify({\n        //   dragRect,\n        //   plhRect,\n        //   treeRect,\n        //   hovRect,\n        //   startMousePos: dragInfo.startMousePos,\n        //   mousePos: dragInfo.mousePos,\n        // }));\n        return true;\n      }\n\n      return false;\n    }\n\n    canMove (fromII, toII, placement, fromCaseII, toCaseII, toParentII, canMoveFn) {\n      if (!fromII || !toII)\n        return false;\n      if (fromII.id === toII.id)\n        return false;\n\n      const { canRegroup, canRegroupCases, maxNesting, maxNumberOfRules, canLeaveEmptyCase } = this.props.config.settings;\n      const newLev = toParentII ? toParentII.lev + 1 : toII.lev;\n      const newDepthLev = newLev + (fromII.depth || 0);\n      const isBeforeAfter = placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER;\n      const isPend = placement == constants.PLACEMENT_PREPEND || placement == constants.PLACEMENT_APPEND;\n      const isLev1 = isBeforeAfter && toII.lev == 1 || isPend && toII.lev == 0;\n      const isParentChange = fromII.parent != toII.parent;\n      const isStructChange = isPend || isParentChange;\n      // can't move `case_group` anywhere but before/after anoter `case_group`\n      const isForbiddenStructChange = fromII.type == \"case_group\" && !isLev1\n        // can't restruct `rule_group`\n        || fromII.parentType == \"rule_group\" || toII.type == \"rule_group\" || toII.parentType == \"rule_group\" \n        // only `case_group` can be placed under `switch_group`\n        || fromII.type != \"case_group\" && toII.type == \"case_group\" && isBeforeAfter\n        || fromII.type != \"case_group\" && toII.type == \"switch_group\"\n        // can't move rule/group to another case\n        || !canRegroupCases && fromII.caseId != toII.caseId;\n      const isLockedChange = toII.isLocked || fromII.isLocked || toParentII && toParentII.isLocked;\n      \n      if (maxNesting && newDepthLev > maxNesting)\n        return false;\n      \n      if (isStructChange && (!canRegroup || isForbiddenStructChange || isLockedChange))\n        return false;\n      \n      if (fromII.type != \"case_group\" && fromII.caseId != toII.caseId) {\n        const isLastFromCase = fromCaseII ? fromCaseII._height == 2 : false;\n        const newRulesInTargetCase = toCaseII ? toCaseII.atomicRulesCountInCase + 1 : 0;\n        if (maxNumberOfRules && newRulesInTargetCase > maxNumberOfRules)\n          return false;\n        if (isLastFromCase && !canLeaveEmptyCase)\n          return false;\n      }\n\n      if (fromII.type == \"case_group\" && (\n        fromII.isDefaultCase || toII.isDefaultCase\n        || toII.type == \"switch_group\" && placement == constants.PLACEMENT_APPEND\n      )) {\n        // leave default case alone\n        return false;\n      }\n\n      let res = true;\n      if (canMoveFn) {\n        res = canMoveFn(fromII.node.toJS(), toII.node.toJS(), placement, toParentII ? toParentII.node.toJS() : null);\n      }\n      return res;\n    }\n\n    move (fromII, toII, placement, toParentII) {\n      if (!this._isUsingLegacyReactDomRender) {\n        _isReorderingTree = true;\n      }\n      //logger.log(\"move\", fromII, toII, placement, toParentII);\n      this.props.actions.moveItem(fromII.path, toII.path, placement);\n    }\n\n    render() {\n      return <Builder\n        {...this.props}\n        onDragStart={this.onDragStart}\n      />;\n    }\n  };\n\n\nexport default (Builder, CanMoveFn = null) => {\n  const ConnectedSortableContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n        dragStart: state.dragStart,\n        mousePos: state.mousePos,\n      };\n    }, {\n      setDragStart: actions.drag.setDragStart,\n      setDragProgress: actions.drag.setDragProgress,\n      setDragEnd: actions.drag.setDragEnd,\n    },\n    null,\n    {\n      context\n    }\n  )(createSortableContainer(Builder, CanMoveFn));\n  ConnectedSortableContainer.displayName = \"ConnectedSortableContainer\";\n\n  return ConnectedSortableContainer;\n};\n\nexport { _isReorderingTree };\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { _isReorderingTree } from \"./SortableContainer\";\nimport classNames from \"classnames\";\n\n\nexport default (className) => (GroupOrRule) =>\n  class Draggable extends PureComponent {\n    static propTypes = {\n      isDraggingTempo: PropTypes.bool,\n      isDraggingMe: PropTypes.bool,\n      onDragStart: PropTypes.func,\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.wrapper = React.createRef();\n    }\n\n    handleDraggerMouseDown = (e) => {\n      var nodeId = this.props.id;\n      var dom = this.wrapper.current;\n        \n      if (this.props.onDragStart) {\n        this.props.onDragStart(nodeId, dom, e);\n      }\n    };\n\n    render () {\n      const {\n        isDraggingTempo,\n        isDraggingMe,\n        dragging,\n        ...otherProps\n      } = this.props;\n      const {\n        isTrueLocked,\n      } = otherProps;\n\n      let styles = {};\n      if (isDraggingMe && isDraggingTempo) {\n        if (_isReorderingTree) {\n          // don't apply old styles for dragging tempo during reorder\n        } else {\n          styles = {\n            top: dragging.y,\n            left: dragging.x,\n            width: dragging.w\n          };\n        }\n      }\n\n      const cn = classNames(className, \"group-or-rule\",\n        isDraggingMe && isDraggingTempo ? \"qb-draggable\" : null,\n        isDraggingMe && !isDraggingTempo ? \"qb-placeholder\" : null,\n        isTrueLocked ? \"locked\" : null\n      );\n\n      return (\n        <div\n          className={cn}\n          style={styles}\n          ref={this.wrapper}\n          data-id={this.props.id}\n        >\n          <GroupOrRule\n            handleDraggerMouseDown={this.handleDraggerMouseDown}\n            isDraggingMe={isDraggingMe}\n            isDraggingTempo={isDraggingTempo}\n            {...otherProps}\n          />\n        </div>\n      );\n    }\n\n  };\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport keys from \"lodash/keys\";\nimport pickBy from \"lodash/pickBy\";\nimport mapValues from \"lodash/mapValues\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFieldConfig, getOperatorConfig} = Utils.ConfigUtils;\n\n\nexport default class Operator extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.any,\n    selectedFieldType: PropTypes.string,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    readonly: PropTypes.bool,\n    //actions\n    setOperator: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"selectedOperator\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({config, selectedField, selectedFieldType, selectedOperator}) {\n    const fieldConfig = getFieldConfig(config, selectedField);\n    let operators = [...(fieldConfig?.operators || config.types[selectedFieldType]?.operators || [])];\n    if (!selectedField && !operators.includes(selectedOperator)) {\n      // eg. `prox` field was selected, then `fieldSrc` changed to `func`\n      // But `text` type excludes `proximity` operator in config, so add manually\n      operators.push(selectedOperator);\n    }\n    \n    const operatorsOptions \n      = mapValues(\n        pickBy(\n          config.operators, \n          (item, key) => operators?.indexOf(key) !== -1\n        ), \n        (_opts, op) => getOperatorConfig(config, op, selectedField)\n      );\n      \n    const items = this.buildOptions(config, operatorsOptions, operators);\n\n    const selectedOpts = operatorsOptions[selectedOperator] || {};\n    const placeholder = this.props.config.settings.operatorPlaceholder;\n    const selectedKey = selectedOperator;\n    const selectedKeys = selectedKey ? [selectedKey] : null;\n    const selectedPath = selectedKeys;\n    const selectedLabel = selectedOpts.label;\n    \n    return {\n      placeholder, items,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, fieldConfig\n    };\n  }\n\n  buildOptions(config, fields, ops) {\n    if (!fields || !ops)\n      return null;\n\n    return keys(fields).sort((a, b) => (ops.indexOf(a) - ops.indexOf(b))).map(fieldKey => {\n      const field = fields[fieldKey];\n      const label = field.label;\n      return {\n        key: fieldKey,\n        path: fieldKey,\n        label,\n      };\n    });\n  }\n\n  render() {\n    const {config, customProps, setOperator, readonly, id, groupId} = this.props;\n    const {renderOperator} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: setOperator,\n      ...this.meta\n    };\n    if (!renderProps.items)\n      return null;\n    return renderOperator(renderProps, config.ctx);\n  }\n\n\n}\n","import React from \"react\";\n\nconst Col = ({children, ...props}) => (<div {...props}>{children}</div>);\n\nconst dummyFn = () => {};\n\nconst DragIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"gray\" width=\"18px\" height=\"18px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"/>\n  </svg>\n);\n\nconst WithConfirmFn = (Cmp) => (\n  props => {\n    const {useConfirm} = props.config.settings;\n    const confirmFn = useConfirm ? useConfirm.call(props.config.ctx, props.config.ctx) : null;\n    return <Cmp {...props} confirmFn={confirmFn} />;\n  }\n);\n\nexport {\n  Col, dummyFn, DragIcon, WithConfirmFn\n};\n","import React, { PureComponent } from \"react\";\nimport Operator from \"./Operator\";\nimport {Col} from \"../utils\";\n\n\nexport default class OperatorWrapper extends PureComponent {\n  render() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, selectedOperator, setOperator, \n      selectedFieldParts, showOperator, showOperatorLabel, selectedFieldWidgetConfig, readonly, id, groupId\n    } = this.props;\n    const operator = showOperator\n            && <Col key={\"operators-for-\"+(selectedFieldParts || []).join(\"_\")} className=\"rule--operator\">\n              { config.settings.showLabels\n                    && <label className=\"rule--label\">{config.settings.operatorLabel}</label>\n              }\n              <Operator\n                key=\"operator\"\n                config={config}\n                selectedField={selectedField}\n                selectedFieldSrc={selectedFieldSrc}\n                selectedFieldType={selectedFieldType}\n                selectedOperator={selectedOperator}\n                setOperator={setOperator}\n                readonly={readonly}\n                id={id}\n                groupId={groupId}\n              />\n            </Col>;\n    const hiddenOperator = showOperatorLabel\n            && <Col key={\"operators-for-\"+(selectedFieldParts || []).join(\"_\")} className=\"rule--operator\">\n              <div className=\"rule--operator-wrapper\">\n                {config.settings.showLabels\n                  ? <label className=\"rule--label\">&nbsp;</label>\n                  : null}\n                <div className=\"rule--operator-text-wrapper\">\n                  <span className=\"rule--operator-text\">{selectedFieldWidgetConfig.operatorInlineLabel}</span>\n                </div>\n              </div>\n            </Col>;\n    return [\n      operator,\n      hiddenOperator\n    ];\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {getFieldPathLabels} = Utils.RuleUtils;\nconst {getFieldConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\n\n\nexport default class Field extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    parentField: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //actions\n    setField: PropTypes.func.isRequired,\n    setFieldSrc: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"config\", \"parentField\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({selectedField, selectedFieldType, config, parentField}) {\n    let selectedKey = selectedField;\n    const {maxLabelsLength, fieldSeparatorDisplay, fieldPlaceholder, fieldSeparator} = config.settings;\n    const isFieldSelected = !!selectedField;\n    const placeholder = !isFieldSelected ? truncateString(fieldPlaceholder, maxLabelsLength) : null;\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPathParts(selectedKey, config);\n    const selectedPath = getFieldPathParts(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2;\n\n    const parentFieldPath = getFieldParts(parentField, config);\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig && parentFieldConfig.subfields : config.fields;\n    const lookingForFieldType = !isFieldSelected && selectedFieldType;\n    const items = this.buildOptions(parentFieldPath, config, sourceFields, lookingForFieldType, parentFieldPath);\n\n    // Field source has been chnaged, no new field selected, but op & value remains\n    const errorText = lookingForFieldType ? \"Please select field\" : null;\n\n    if (selectedKey && typeof selectedKey === \"object\") {\n      // can happen due to incorrect rule state: field is Map{func, args} but fieldSrc is not \"func\"\n      selectedKey = undefined;\n    }\n\n    return {\n      placeholder, items, parentField,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n      errorText,\n    };\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = getFieldParts(fieldKey, config);\n    let label = fieldOpts?.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  buildOptions(parentFieldPath, config, fields, fieldType = undefined, path = null, optGroup = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    const countFieldsMatchesType = (fields) => {\n      return Object.keys(fields || {}).reduce((acc, fieldKey) => {\n        const field = fields[fieldKey];\n        if (field.type === \"!struct\") {\n          return acc + countFieldsMatchesType(field.subfields);\n        } else {\n          return acc + (field.type === fieldType ? 1 : 0);\n        }\n      }, 0);\n    };\n\n    return keys(fields).map(fieldKey => {\n      const fullFieldPath = [...(path ?? []), fieldKey];\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fullFieldPath, config);\n      const partsLabels = getFieldPathLabels(fullFieldPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath?.length)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      const disabled = field.disabled;\n\n      if (field.hideForSelect)\n        return undefined;\n\n      if (field.type == \"!struct\") {\n        const items = this.buildOptions(parentFieldPath, config, field.subfields, fieldType, fullFieldPath, {\n          label,\n          tooltip,\n        });\n        const hasItemsMatchesType = countFieldsMatchesType(field.subfields) > 0;\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items,\n          matchesType: hasItemsMatchesType,\n        };\n      } else {\n        const matchesType = fieldType !== undefined ? field.type === fieldType : undefined;\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n          matchesType,\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  setField = (field, asyncListValues, _meta = {}) => {\n    const {id} = this.props;\n    if (!_meta.widgetId) {\n      const widgetId = [\n        id,\n        \"L\",\n        -1,\n      ].join(\":\");\n      _meta.widgetId = widgetId;\n    }\n    this.props.setField(field, asyncListValues, _meta);\n  };\n\n  render() {\n    const {config, customProps, setFieldSrc, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: this.setField,\n      setFieldSrc,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst { clone } = Utils;\nconst {getFieldConfig, getFuncConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\nconst {getFuncPathLabels, getWidgetForFieldOp} = Utils.RuleUtils;\nconst {shallowEqual} = Utils.OtherUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class FuncSelect extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldType: PropTypes.string,\n    fieldSrc: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n    isLHS: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n      \n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"fieldType\", \"fieldSrc\", \"operator\", \"isFuncArg\", \"isLHS\", \"parentFuncs\"];\n    const keysForMeta = [\"config\", \"field\", \"fieldType\", \"fieldSrc\", \"value\", \"isLHS\"];\n    const needUpdateItems = !this.items || keysForItems.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      nextProps[k] !== prevProps[k]\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps, this.meta);\n    }\n  }\n\n  getItems({config, field, fieldType, isLHS, operator, parentFuncs, fieldDefinition, isFuncArg}, {lookingForFieldType}) {\n    const {canUseFuncForField} = config.settings;\n    const filteredFuncs = this.filterFuncs(\n      config, config.funcs, field, fieldType, isLHS, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition\n    );\n    const items = this.buildOptions(config, filteredFuncs, lookingForFieldType);\n    return items;\n  }\n\n  getMeta({config, _field, fieldType, value, isLHS, isFuncArg}) {\n    const {funcPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedFuncKey = value;\n    const isFuncSelected = !!value;\n\n    // const leftFieldConfig = getFieldConfig(config, field);\n    // const leftFieldWidgetField = leftFieldConfig?.widgets?.field;\n    // const leftFieldWidgetFieldProps = leftFieldWidgetField && leftFieldWidgetField.widgetProps || {};\n    const placeholder = !isFuncSelected ? funcPlaceholder : null;\n\n    const currFunc = isFuncSelected ? getFuncConfig(config, selectedFuncKey) : null;\n    const selectedOpts = currFunc || {};\n\n    const selectedKeys = getFieldPathParts(selectedFuncKey, config);\n    const selectedPath = getFieldPathParts(selectedFuncKey, config, true);\n    const selectedLabel = this.getFuncLabel(currFunc, selectedFuncKey, config);\n    const partsLabels = getFuncPathLabels(selectedFuncKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel)\n      selectedFullLabel = null;\n\n    const isRootFuncAtLHS = isLHS && !isFuncArg;\n    const lookingForFieldType = isRootFuncAtLHS && !isFuncSelected && fieldType;\n    // Field source has been chnaged, no new func selected, but op & value remains\n    const errorText = lookingForFieldType ? \"Please select function\" : null;\n  \n    return {\n      placeholder,\n      selectedKey: selectedFuncKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedFullLabel,\n      errorText,\n      lookingForFieldType,\n    };\n  }\n\n  filterFuncs(config, funcs, leftFieldFullkey, fieldType, isLHS, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition) {\n    funcs = clone(funcs);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    let expectedType;\n    let targetDefinition = leftFieldConfig;\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = widget && config.widgets[widget];\n    if (isFuncArg) {\n      targetDefinition = fieldDefinition;\n      expectedType = fieldDefinition?.type;\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else if (leftFieldConfig) {\n      expectedType = leftFieldConfig.type;\n    } else if (!isLHS) {\n      // no field at LHS, but can use type from \"memory effect\"\n      expectedType = fieldType;\n    }\n\n    function _filter(list, path) {\n      for (let funcKey in list) {\n        let subfields = list[funcKey].subfields;\n        let subpath = (path ? path : []).concat(funcKey);\n        let funcFullkey = subpath.join(fieldSeparator);\n        let funcConfig = getFuncConfig(config, funcFullkey);\n        if (funcConfig.type == \"!struct\") {\n          if(_filter(subfields, subpath) == 0)\n            delete list[funcKey];\n        } else {\n          let canUse = !expectedType || funcConfig.returnType == expectedType;\n          if (targetDefinition?.funcs)\n            canUse = canUse && targetDefinition.funcs.includes(funcFullkey);\n          if (canUseFuncForField)\n            canUse = canUse && canUseFuncForField(leftFieldFullkey, leftFieldConfig, funcFullkey, funcConfig, operator);\n          // don't use func in func (can be configurable, but usually users don't need this)\n          if (!funcConfig.allowSelfNesting && parentFuncs && parentFuncs.map(([func, _arg]) => func).includes(funcFullkey))\n            canUse = false;\n          if (!canUse)\n            delete list[funcKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(funcs, []);\n\n    return funcs;\n  }\n\n  buildOptions(config, funcs, fieldType = undefined, path = null, optGroup = null) {\n    if (!funcs)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    const countFieldsMatchesType = (fields) => {\n      return Object.keys(fields || {}).reduce((acc, fieldKey) => {\n        const field = fields[fieldKey];\n        if (field.type === \"!struct\") {\n          return acc + countFieldsMatchesType(field.subfields);\n        } else {\n          return acc + (field.type === fieldType ? 1 : 0);\n        }\n      }, 0);\n    };\n\n    return keys(funcs).map(funcKey => {\n      const fullFuncPath = [...(path ?? []), funcKey];\n      const func = funcs[funcKey];\n      const label = this.getFuncLabel(func, fullFuncPath, config);\n      const partsLabels = getFuncPathLabels(fullFuncPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label)\n        fullLabel = null;\n      const tooltip = func.tooltip;\n\n      if (func.type == \"!struct\") {\n        const items = this.buildOptions(config, func.subfields, fieldType, fullFuncPath, {\n          label,\n          tooltip,\n        });\n        const hasItemsMatchesType = countFieldsMatchesType(func.subfields) > 0;\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          items,\n          matchesType: hasItemsMatchesType,\n        };\n      } else {\n        const matchesType = fieldType !== undefined ? func.returnType === fieldType : undefined;\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n          matchesType,\n        };\n      }\n    });\n  }\n\n  getFuncLabel(funcOpts, funcKey, config) {\n    if (!funcKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let funcParts = getFieldParts(funcKey, config);\n    let label = funcOpts?.label || last(funcParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderFunc} = config.settings;\n    const renderProps = {\n      config,\n      customProps,\n      readonly,\n      setField: setValue,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderFunc(renderProps, config.ctx);\n  }\n\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { getTitleInListValues } = Utils.ListUtils;\nconst { _widgetDefKeysToOmit } = Utils.ConfigUtils;\nconst { _fixImmutableValue } = Utils.TreeUtils;\n\nexport default ({\n  delta, isFuncArg, valueSrc,\n  value: immValue, valueError: immValueError, fieldError, asyncListValues,\n  isSpecialRange, fieldDefinition,\n  widget, widgetDefinition, widgetValueLabel, valueLabels, textSeparators, setValueHandler, setFuncValue,\n  config, field, fieldSrc, fieldType, isLHS, operator, readonly, parentField, parentFuncs, id, groupId, widgetId,\n}) => {\n  const {factory: widgetFactory, ...fieldWidgetProps} = widgetDefinition;\n  const isConst = isFuncArg && fieldDefinition.valueSources && fieldDefinition.valueSources.length == 1 && fieldDefinition.valueSources[0] == \"const\";\n  const defaultValue = fieldDefinition.defaultValue;\n\n  if (!widgetFactory) {\n    return \"?\";\n  }\n  \n  // Widget value (if it's not a func with args) should NOT be Immutable\n  // Eg. for multiselect value should be a JS Array, not Immutable List\n  const fixedImmValue = immValue ? immValue.map(v => _fixImmutableValue(v)) : undefined;\n  let value = isSpecialRange \n    ? [fixedImmValue?.get(0), fixedImmValue?.get(1)] \n    : (fixedImmValue ? fixedImmValue.get(delta) : undefined);\n  const valueError = immValueError?.get && (isSpecialRange \n    ? [immValueError.get(0), immValueError.get(1), immValueError.get(2)]\n    : immValueError.get(delta)\n  ) || null;\n  const errorMessage = isLHS ? fieldError : valueError;\n  if (isSpecialRange && value[0] === undefined && value[1] === undefined)\n    value = undefined;\n  const {fieldSettings} = fieldDefinition || {};\n\n  const widgetProps = omit({\n    ...fieldWidgetProps, \n    ...fieldSettings,\n    config: config,\n    field: field,\n    fieldSrc: fieldSrc,\n    fieldType: fieldType,\n    isLHS: isLHS,\n    parentField: parentField,\n    parentFuncs: parentFuncs,\n    fieldDefinition: fieldDefinition,\n    operator: operator,\n    delta: delta,\n    isSpecialRange: isSpecialRange,\n    isFuncArg: isFuncArg,\n    value: value,\n    valueError,\n    fieldError,\n    errorMessage,\n    label: widgetValueLabel.label,\n    placeholder: widgetValueLabel.placeholder,\n    placeholders: valueLabels ? valueLabels.placeholder : null,\n    textSeparators: textSeparators,\n    setValue: setValueHandler,\n    setFuncValue,\n    readonly: readonly,\n    asyncListValues: asyncListValues,\n    id, groupId, widgetId,\n  }, [\n    ..._widgetDefKeysToOmit,\n    \"toJS\"\n  ]);\n\n  if (widget == \"field\") {\n    //\n  }\n\n  if (isConst && defaultValue) {\n    const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n    if (typeof defaultValue == \"boolean\") {\n      return defaultValue ? (widgetProps.labelYes || \"YES\") : (widgetProps.labelNo || \"NO\");\n    } else if (listValues) {\n      if (Array.isArray(defaultValue))\n        return defaultValue.map(v => getTitleInListValues(listValues, v) || v).join(\", \");\n      else\n        return (getTitleInListValues(listValues, defaultValue) || defaultValue);  \n    }\n    return \"\"+defaultValue;\n  }\n    \n  return widgetFactory(widgetProps, config.ctx);\n};\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\nimport {getOpCardinality} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport pick from \"lodash/pick\";\nimport WidgetFactory from \"./WidgetFactory\";\nimport classNames from \"classnames\";\nimport {Col} from \"../utils\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\nconst {getValueSourcesForFieldOp, getWidgetForFieldOp, getValueLabel} = Utils.RuleUtils;\nconst { createListFromArray } = Utils.DefaultUtils;\nconst {shallowEqual} = Utils.OtherUtils;\n\nconst funcArgDummyOpDef = {cardinality: 1};\n\nexport default class Widget extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //instanceOf(Immutable.List)\n    valueSrc: PropTypes.any, //instanceOf(Immutable.List)\n    valueError: PropTypes.any, //instanceOf(Immutable.List)\n    fieldError: PropTypes.string,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    operator: PropTypes.string,\n    readonly: PropTypes.bool,\n    asyncListValues: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    //actions\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    setFuncValue: PropTypes.func,\n    // for isFuncArg\n    isFuncArg: PropTypes.bool,\n    fieldFunc: PropTypes.string,\n    fieldArg: PropTypes.string,\n    leftField: PropTypes.any,\n    // for RuleGroupExt\n    isForRuleGroup: PropTypes.bool,\n    parentField: PropTypes.string,\n    // for func in func\n    parentFuncs: PropTypes.array,\n    isLHS: PropTypes.bool,\n    // for case_value\n    isCaseValue: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\n      \"config\", \"id\", \"parentFuncs\",\n      \"field\", \"fieldSrc\", \"fieldType\", \"fieldFunc\", \"fieldArg\", \"leftField\", \"operator\", \"valueSrc\", \"asyncListValues\",\n      \"isLHS\", \"isFuncArg\", \"isForRuleGroup\", \"isCaseValue\",\n    ];\n    const needUpdateMeta = !this.meta \n          || keysForMeta\n            .map(k => (\n              k === \"parentFuncs\"\n                ? !shallowEqual(nextProps[k], prevProps[k], true)\n                //tip: for isFuncArg we need to wrap value in Imm list\n                : k === \"isFuncArg\"\n                  ? nextProps[k] !== prevProps[k] || nextProps[\"isFuncArg\"] && nextProps[\"value\"] !== prevProps[\"value\"]\n                  : nextProps[k] !== prevProps[k]\n            ))\n            .filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  _setValue = (\n    isSpecialRange, delta, widgetType, widgetId, // bound!\n    value, asyncListValues, _meta = {}\n  ) => {\n    if (!_meta.widgetId) {\n      _meta.widgetId = widgetId;\n    }\n    if (isSpecialRange && Array.isArray(value)) {\n      const oldRange = [this.props.value.get(0), this.props.value.get(1)];\n      if (oldRange[0] != value[0])\n        this.props.setValue(0, value[0], widgetType, asyncListValues, _meta);\n      if (oldRange[1] != value[1])\n        this.props.setValue(1, value[1], widgetType, asyncListValues, _meta);\n    } else {\n      this.props.setValue(delta, value, widgetType, asyncListValues, _meta);\n    }\n  };\n\n  _setValueSrc = (\n    delta, widgetId, // bound!\n    srcKey\n  ) => {\n    const _meta = {\n      widgetId,\n    };\n    this.props.setValueSrc(delta, srcKey, _meta);\n  };\n\n  getMeta({\n    config, field: simpleField, fieldSrc, fieldType, fieldFunc, fieldArg, operator, valueSrc: valueSrcs, value: values,\n    isForRuleGroup, isCaseValue, isFuncArg, leftField, asyncListValues, parentFuncs, isLHS, id,\n  }) {\n    const field = isFuncArg ? {func: fieldFunc, arg: fieldArg} : simpleField;\n    const isOkWithoutField = !simpleField && fieldType;\n    let iValueSrcs = valueSrcs;\n    let iValues = values;\n    if (isFuncArg || isForRuleGroup || isCaseValue) {\n      iValueSrcs = createListFromArray([valueSrcs]);\n      iValues = createListFromArray([values]);\n    }\n\n    let fieldDefinition = getFieldConfig(config, field);\n    if (!fieldDefinition && isOkWithoutField) {\n      fieldDefinition = config.types[fieldType];\n    }\n    let defaultWidget = getWidgetForFieldOp(config, field, operator);\n    if (!defaultWidget && isOkWithoutField) {\n      defaultWidget = config.types[fieldType]?.mainWidget;\n    }\n    const operatorDefinition = isFuncArg\n      ? funcArgDummyOpDef\n      : getOperatorConfig(config, operator, field);\n    if ((fieldDefinition == null || operatorDefinition == null) && !isCaseValue) {\n      return null;\n    }\n    const isSpecialRange = operatorDefinition?.isSpecialRange;\n    const isSpecialRangeForSrcField = isSpecialRange && (iValueSrcs?.get(0) == \"field\" || iValueSrcs?.get(1) == \"field\");\n    const isTrueSpecialRange = isSpecialRange && !isSpecialRangeForSrcField;\n    const cardinality = isTrueSpecialRange ? 1 : getOpCardinality(operatorDefinition);\n    if (cardinality === 0) {\n      return null;\n    }\n\n    let valueSources = getValueSourcesForFieldOp(config, field, operator, fieldDefinition);\n    if (!field) {\n      valueSources = Object.keys(config.settings.valueSourcesInfo);\n    }\n    const widgets = range(0, cardinality).map(delta => {\n      const valueSrc = iValueSrcs?.get(delta) || null;\n      let widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      let widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      if (isSpecialRangeForSrcField) {\n        widget = widgetDefinition.singleWidget;\n        widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      }\n      if (!widgetDefinition && isOkWithoutField) {\n        widget = [\"func\", \"field\"].includes(valueSrc) ? valueSrc : defaultWidget;\n        widgetDefinition = config.widgets[widget];\n      }\n      const widgetType = widgetDefinition?.type;\n      const valueLabel = getValueLabel(config, field, operator, delta, valueSrc, isTrueSpecialRange);\n      const widgetValueLabel = getValueLabel(config, field, operator, delta, null, isTrueSpecialRange);\n      const sepText = operatorDefinition?.textSeparators ? operatorDefinition?.textSeparators[delta] : null;\n\n      let valueLabels = null;\n      let textSeparators = null;\n      if (isSpecialRange) {\n        valueLabels = [\n          getValueLabel(config, field, operator, 0),\n          getValueLabel(config, field, operator, 1)\n        ];\n        valueLabels = {\n          placeholder: [ valueLabels[0].placeholder, valueLabels[1].placeholder ],\n          label: [ valueLabels[0].label, valueLabels[1].label ],\n        };\n        textSeparators = operatorDefinition?.textSeparators;\n      }\n\n      const widgetId = [\n        id,\n        isLHS ? \"L\" : \"R\",\n        isLHS ? -1 : (delta || 0),\n        (parentFuncs || []).map(([f, a]) => `${f}(${a})`).join(\"/\"),\n      ].join(\":\");\n      const vsId = widgetId + \":\" + \"VS\";\n\n      const setValueSrcHandler = this._setValueSrc.bind(this, delta, vsId);\n      const setValueHandler = this._setValue.bind(this, isSpecialRange, delta, widgetType, widgetId);\n\n      return {\n        valueSrc,\n        valueLabel,\n        widget,\n        sepText,\n        widgetDefinition,\n        widgetValueLabel,\n        valueLabels,\n        textSeparators,\n        setValueSrcHandler,\n        setValueHandler,\n        widgetId,\n      };\n    });\n      \n    return {\n      defaultWidget,\n      fieldDefinition,\n      operatorDefinition,\n      isSpecialRange: isTrueSpecialRange,\n      cardinality,\n      valueSources,\n      widgets,\n      iValues, //correct for isFuncArg\n      aField: field, //correct for isFuncArg\n      asyncListValues,\n    };\n  }\n\n  renderWidget = (delta, meta, props) => {\n    const {\n      config, isFuncArg, leftField, operator, value: values, valueError, fieldError,\n      readonly, parentField, parentFuncs, id, groupId, fieldSrc, fieldType, isLHS, setFuncValue,\n    } = props;\n    const {settings} = config;\n    const { widgets, iValues, aField, valueSources } = meta;\n    const value = isFuncArg ? iValues : values;\n    const field = isFuncArg ? leftField : aField;\n    const { valueSrc, valueLabel, widgetId } = widgets[delta];\n    const hasValueSources = valueSources.length > 1 && !readonly;\n    \n    const widgetLabel = settings.showLabels\n      ? <label className=\"rule--label\">{valueLabel.label}</label>\n      : null;\n    return (\n      <div key={\"widget-\"+field+\"-\"+delta} className={classNames(\n        valueSrc == \"func\" ? \"widget--func\" : \"widget--widget\",\n        hasValueSources ? \"widget--has-valuerscs\" : \"widget--has-no-valuerscs\"\n      )}>\n        {valueSrc == \"func\" ? null : widgetLabel}\n        <WidgetFactory\n          id={id} // id of rule\n          groupId={groupId}\n          widgetId={widgetId}\n          valueSrc={valueSrc}\n          delta={delta}\n          value={value}\n          valueError={valueError}\n          fieldError={fieldError}\n          isFuncArg={isFuncArg}\n          isLHS={isLHS}\n          {...pick(meta, [\"isSpecialRange\", \"fieldDefinition\", \"asyncListValues\"])}\n          {...pick(widgets[delta], [\n            \"widget\", \"widgetDefinition\", \"widgetValueLabel\", \"valueLabels\", \"textSeparators\", \"setValueHandler\",\n          ])}\n          setFuncValue={setFuncValue}\n          config={config}\n          field={field}\n          fieldSrc={fieldSrc}\n          fieldType={fieldType}\n          parentField={parentField}\n          parentFuncs={parentFuncs}\n          operator={operator}\n          readonly={readonly}\n        />\n      </div>\n    );\n  };\n\n  renderValueSources = (delta, meta, props) => {\n    const {config, isFuncArg, leftField, operator, readonly} = props;\n    const {settings} = config;\n    const { valueSources, widgets, aField } = meta;\n    const field = isFuncArg ? leftField : aField;\n    const {valueSrc, setValueSrcHandler} = widgets[delta];\n    const {valueSourcesInfo, renderValueSources} = settings;\n    const valueSourcesOptions = valueSources.map(srcKey => [srcKey, {\n      label: valueSourcesInfo[srcKey].label\n    }]);\n    const ValueSources = (pr) => renderValueSources(pr, config.ctx);\n\n    const sourceLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return valueSources.length > 1 && !readonly\n      && <div key={\"valuesrc-\"+field+\"-\"+delta} className=\"widget--valuesrc\">\n        {sourceLabel}\n        <ValueSources\n          key={\"valuesrc-\"+delta}\n          delta={delta}\n          valueSources={valueSourcesOptions}\n          valueSrc={valueSrc}\n          config={config}\n          field={field}\n          operator={operator}\n          setValueSrc={setValueSrcHandler}\n          readonly={readonly}\n          title={settings.valueSourcesPopupTitle}\n        />\n      </div>;\n  };\n\n  renderSep = (delta, meta, props) => {\n    const {config} = props;\n    const {widgets} = meta;\n    const {settings} = config;\n    const {sepText} = widgets[delta];\n\n    const sepLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return sepText\n      && <div key={\"widget-separators-\"+delta} className={classNames(\n        \"widget--sep\",\n        delta == 0 && \"widget--sep-first\"\n      )} >\n        {sepLabel}\n        <span>{sepText}</span>\n      </div>;\n  };\n\n  renderWidgetDelta = (delta) => {\n    const sep = this.renderSep(delta, this.meta, this.props);\n    const sources = this.renderValueSources(delta, this.meta, this.props);\n    const widgetCmp = this.renderWidget(delta, this.meta, this.props);\n\n    return [\n      sep,\n      sources,\n      widgetCmp,\n    ];\n  };\n\n  render() {\n    if (!this.meta) return null;\n    const { defaultWidget, cardinality } = this.meta;\n    if (!defaultWidget) return null;\n    const name = defaultWidget;\n\n    return (\n      <Col\n        className={`rule--widget rule--widget--${name.toUpperCase()}`}\n        key={\"widget-col-\"+name}\n      >\n        {range(0, cardinality).map(this.renderWidgetDelta)}\n      </Col>\n    );\n  }\n\n}\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport FuncSelect from \"./FuncSelect\";\nimport Widget from \"./Widget\";\nimport {Col} from \"../utils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFuncConfig} = Utils.ConfigUtils;\nconst {setFunc, setArgValue, setArgValueSrc} = Utils.FuncUtils;\nconst {shallowEqual} = Utils.OtherUtils;\n\n\nexport default class FuncWidget extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    fieldError: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.object, //instanceOf(Immutable.Map) //with keys 'func' and `args`\n    setValue: PropTypes.func.isRequired,\n    setFuncValue: PropTypes.func,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n    isLHS: PropTypes.bool,\n    valueError: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"field\", \"operator\", \"value\", \"fieldSrc\", \"fieldType\", \"isLHS\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({config, field, operator, value}) {\n    const funcKey = value?.get?.(\"func\") ?? null;\n    const funcDefinition = funcKey ? getFuncConfig(config, funcKey) : null;\n\n    return {\n      funcDefinition, funcKey\n    };\n  }\n\n  setFunc = (funcKey, _meta = {}) => {\n    const { isLHS, delta, parentFuncs, id } = this.props;\n    if (!_meta.widgetId) {\n      const widgetId = [\n        id,\n        isLHS ? \"L\" : \"R\",\n        isLHS ? -1 : (delta || 0),\n        (parentFuncs || []).map(([f, a]) => `${f}(${a})`).join(\"/\"),\n        \"F\",\n      ].join(\":\");\n      _meta.widgetId = widgetId;\n    }\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (delta || 0), parentFuncs, null, funcKey, \"!func\", undefined, _meta\n    );\n\n    // old bubbling\n    // this.props.setValue(\n    //   setFunc(this.props.value, funcKey, this.props.config),\n    //   undefined,\n    //   _meta,\n    // );\n  };\n\n  setArgValue = (argKey, argVal, widgetType, asyncListValues, _meta) => {\n    const {config, delta, isLHS, parentFuncs} = this.props;\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (delta || 0), parentFuncs, argKey, argVal, widgetType, asyncListValues, _meta\n    );\n\n    // old bubbling\n    // const {funcDefinition} = this.meta;\n    // const {args} = funcDefinition;\n    // const argDefinition = args[argKey];\n    // this.props.setValue(\n    //   setArgValue(this.props.value, argKey, argVal, argDefinition, config),\n    //   asyncListValues,\n    //   _meta,\n    // );\n  };\n\n  setArgValueSrc = (argKey, argValSrc, _meta) => {\n    const {config, delta, isLHS, parentFuncs} = this.props;\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (delta || 0), parentFuncs, argKey, argValSrc, \"!valueSrc\", undefined, _meta\n    );\n\n    // old bubbling\n    // const {funcDefinition} = this.meta;\n    // const {args} = funcDefinition;\n    // const argDefinition = args[argKey];\n    // this.props.setValue(\n    //   setArgValueSrc(this.props.value, argKey, argValSrc, argDefinition, config),\n    //   undefined,\n    //   _meta,\n    // );\n  };\n\n  renderFuncSelect = () => {\n    const {config, field, fieldType, fieldSrc, isLHS, operator, customProps, value, readonly, parentFuncs, id, groupId, isFuncArg, fieldDefinition} = this.props;\n    const funcKey = value?.get?.(\"func\") ?? null;\n    const selectProps = {\n      value: funcKey,\n      setValue: this.setFunc,\n      config, field, fieldType, fieldSrc, isLHS, operator, customProps, readonly, parentFuncs, \n      isFuncArg, fieldDefinition,\n      id, groupId,\n    };\n    const {showLabels, funcLabel} = config.settings;\n    const widgetLabel = showLabels\n      ? <label className=\"rule--label\">{funcLabel}</label>\n      : null;\n\n    return (\n      <Col key=\"func\" className=\"rule--func\">\n        {widgetLabel}\n        <FuncSelect {...selectProps} />\n      </Col>\n    );\n  };\n\n  renderArgLabel = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix, label} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label\">\n        {label || argKey}\n      </Col>\n    );\n  };\n\n  renderArgLabelSep = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label-sep\">\n        {\":\"}\n      </Col>\n    );\n  };\n\n  renderArgVal = (funcKey, argKey, argDefinition) => {\n    const {\n      config, field, fieldType, fieldSrc, isLHS, operator, value, readonly, parentFuncs, id, groupId,\n      fieldError, valueError, setFuncValue,\n    } = this.props;\n    const arg = value ? value.getIn([\"args\", argKey]) : null;\n    const argVal = arg ? arg.get(\"value\") : undefined;\n    const defaultValueSource = argDefinition.valueSources.length == 1 ? argDefinition.valueSources[0] : undefined;\n    const argValSrc = arg ? (arg.get(\"valueSrc\") || defaultValueSource || \"value\") : defaultValueSource;\n\n    const widgetProps = {\n      config, \n      fieldFunc: funcKey,\n      fieldArg: argKey,\n      leftField: field,\n      fieldType, // type of leftField\n      fieldSrc, // src of leftField\n      fieldError, // error in LHS\n      valueError, // error in RHS\n      isLHS,\n      operator: null,\n      value: argVal,\n      valueSrc: argValSrc,\n      setValue: this.setArgValue,\n      setValueSrc: this.setArgValueSrc,\n      setFuncValue,\n      funcKey,\n      argKey,\n      argDefinition,\n      readonly,\n      parentFuncs,\n      id,\n      groupId,\n    };\n    //tip: value & valueSrc will be converted to Immutable.List at <Widget>\n\n    return (\n      <Col className=\"rule--func--arg-value\">\n        <ArgWidget {...widgetProps} />\n      </Col>\n    );\n  };\n\n  renderArgSep = (argKey, argDefinition, argIndex, {renderSeps}) => {\n    if (!argIndex) return null;\n    return (\n      <Col className=\"rule--func--arg-sep\">\n        {renderSeps ? renderSeps[argIndex - 1] : \", \"}\n      </Col>\n    );\n  };\n\n  renderBracketBefore = ({renderBrackets}) => {\n    return (\n      <Col key=\"before_args\" className=\"rule--func--bracket-before\">\n        {renderBrackets ? renderBrackets[0] : \"(\"}\n      </Col>\n    );\n  };\n\n  renderBracketAfter = ({renderBrackets}) => {\n    return (\n      <Col key=\"after_args\" className=\"rule--func--bracket-after\">\n        {renderBrackets ? renderBrackets[1] : \")\"}\n      </Col>\n    );\n  };\n\n  renderFuncArgs = () => {\n    const {funcDefinition, funcKey} = this.meta;\n    if (!funcKey) return null;\n    const {args} = funcDefinition || {};\n    if (!args) return null;\n\n    return (\n      <>\n        {this.renderBracketBefore(funcDefinition)}\n        <Col key={`args-${funcKey}`} className={`rule--func--args rule--func--${funcKey}--args`}>\n          {Object.keys(args).map((argKey, argIndex) => (\n            <Col key={`arg-${argKey}-${argIndex}`} className={`rule--func--arg rule--func--${funcKey}--arg--${argKey}`}>\n              {this.renderArgSep(argKey, args[argKey], argIndex, funcDefinition)}\n              {this.renderArgLabel(argKey, args[argKey])}\n              {this.renderArgLabelSep(argKey, args[argKey])}\n              {this.renderArgVal(funcKey, argKey, args[argKey])}\n            </Col>\n          ))}\n        </Col>\n        {this.renderBracketAfter(funcDefinition)}\n      </>\n    );\n  };\n\n  render() {\n    const { parentFuncs } = this.props;\n    const funcPath = parentFuncs ? parentFuncs.map(([f, a]) => `${f}_${a}`).join(\"-\") : \"root\";\n    const funcLevel = parentFuncs?.length || 0;\n    return (\n      <Col className={`rule--func--wrapper rule--func--wrapper--under-${funcPath} rule--func--wrapper--lev-${funcLevel}`}>\n        {this.renderFuncSelect()}\n        {this.renderFuncArgs()}\n      </Col>\n    );\n  }\n}\n\n\nclass ArgWidget extends Component {\n  static propTypes = {\n    funcKey: PropTypes.string.isRequired,\n    argKey: PropTypes.string.isRequired,\n    setValue: PropTypes.func.isRequired,\n    setValueSrc: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    isLHS: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"parentFuncs\", \"funcKey\", \"argKey\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({parentFuncs, funcKey, argKey}) {\n    const newParentFuncs = [...(parentFuncs || []), [funcKey, argKey]];\n\n    return {\n      parentFuncs: newParentFuncs\n    };\n  }\n\n  setValue = (_delta, value, widgetType, asyncListValues, _meta) => {\n    const {setValue, argKey} = this.props;\n    setValue(argKey, value, widgetType, asyncListValues, _meta);\n  };\n\n  setValueSrc = (_delta, valueSrc, _meta) => {\n    const {setValueSrc, argKey} = this.props;\n    setValueSrc(argKey, valueSrc, _meta);\n  };\n\n  render() {\n    const {parentFuncs} = this.meta;\n    return (\n      <Widget\n        {...this.props}\n        setValue={this.setValue}\n        setValueSrc={this.setValueSrc}\n        isFuncArg={true}\n        parentFuncs={parentFuncs}\n      />\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport Field from \"./Field\";\nimport {Col} from \"../utils\";\nimport FuncWidget from \"./FuncWidget\";\n\n\nexport default class FieldWrapper extends PureComponent {\n  render() {\n    const {classname, canSelectFieldSource} = this.props;\n    const fieldSources = canSelectFieldSource && this.renderFieldSources();\n    const field = this.renderField();\n    if (!canSelectFieldSource) {\n      return field;\n    } else {\n      return (\n        <Col className={\"rule--field-wrapper\"}>\n          {fieldSources}\n          {field}\n        </Col>\n      );\n    }\n  }\n\n  renderField = () => {\n    const {\n      config, classname, selectedField, selectedFieldSrc, selectedFieldType, \n      setField, setFuncValue, parentField, readonly, id, groupId,\n      fieldError, valueError,\n    } = this.props;\n    const supportedFieldSrcs = [\"func\", \"field\"];\n    if (!supportedFieldSrcs.includes(selectedFieldSrc)) {\n      return \"?\";\n    }\n    const field = selectedFieldSrc === \"func\" ? (\n      <FuncWidget\n        isLHS={true}\n        config={config}\n        value={selectedField}\n        fieldSrc={selectedFieldSrc}\n        fieldType={selectedFieldType}\n        fieldError={fieldError}\n        valueError={valueError}\n        parentField={parentField}\n        setValue={setField}\n        setFuncValue={setFuncValue}\n        readonly={readonly}\n        id={id}\n        groupId={groupId}\n        key={\"field-func-\" + id}\n      />\n    ) : (\n      <Field\n        config={config}\n        selectedField={selectedField}\n        selectedFieldSrc={selectedFieldSrc}\n        selectedFieldType={selectedFieldType}\n        parentField={parentField}\n        setField={setField}\n        customProps={config.settings.customFieldSelectProps}\n        readonly={readonly}\n        id={id}\n        groupId={groupId}\n        key={\"field-\" + id}\n      />\n    );\n    const fieldLabel = selectedFieldSrc === \"func\" ? config.settings.funcLabel : config.settings.fieldLabel;\n    const label = config.settings.showLabels && selectedFieldSrc !== \"func\" && <label className=\"rule--label\">{fieldLabel}</label>;\n    return (\n      <div key={selectedFieldSrc} className={classname}>\n        {label}\n        {field}\n      </div>\n    );\n  };\n\n  renderFieldSources = () => {\n    const { config, readonly, selectedFieldSrc, setFieldSrc, id } = this.props;\n    const { settings } = config;\n    const {\n      fieldSources,\n      valueSourcesInfo,\n      renderValueSources,\n    } = settings;\n    const fieldSourcesOptions = fieldSources.map((srcKey) => [\n      srcKey,\n      {\n        label: valueSourcesInfo[srcKey].label,\n      },\n    ]);\n    const ValueSources = (pr) => renderValueSources(pr, config.ctx);\n\n    const sourceLabel = settings.showLabels ? (\n      <label className=\"rule--label\">&nbsp;</label>\n    ) : null;\n\n    return (\n      fieldSources.length > 1 && !readonly && (\n        <div key={\"fieldsrc\"} className={\"rule--fieldsrc\"}>\n          {sourceLabel}\n          <ValueSources\n            key={\"fieldsrc-\" + id}\n            valueSources={fieldSourcesOptions}\n            valueSrc={selectedFieldSrc}\n            config={config}\n            setValueSrc={setFieldSrc}\n            readonly={readonly}\n            title={settings.fieldSourcesPopupTitle}\n          />\n        </div>\n      )\n    );\n  };\n}\n","import React, { PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nconst {getOperatorConfig} = Utils.ConfigUtils;\n\nexport default class OperatorOptions extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    operatorOptions: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string.isRequired,\n    readonly: PropTypes.bool,\n    //actions\n    setOperatorOption: PropTypes.func.isRequired,\n  };\n\n  render() {\n    if (!this.props.selectedOperator)\n      return null;\n    const operatorDefinitions = getOperatorConfig(this.props.config, this.props.selectedOperator, this.props.selectedField);\n    if (typeof operatorDefinitions.options === \"undefined\") {\n      return null;\n    }\n\n    const { factory: optionsFactory, ...basicOptionsProps } = operatorDefinitions.options;\n    const optionsProps = Object.assign({}, basicOptionsProps, {\n      config: this.props.config,\n      field: this.props.selectedField,\n      fieldSrc: this.props.selectedFieldSrc,\n      operator: this.props.selectedOperator,\n      options: this.props.operatorOptions,\n      setOption: this.props.setOperatorOption,\n      readonly: this.props.readonly,\n    });\n    const optionsCmp = optionsFactory(optionsProps, this.props.config.ctx);\n    const name = this.props.selectedOperator;\n\n    return (\n      <div className={`rule--operator rule--operator--${name.toUpperCase()}`}>\n        {optionsCmp}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport RuleContainer from \"../containers/RuleContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport Widget from \"../rule/Widget\";\nimport OperatorOptions from \"../rule/OperatorOptions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldParts} = Utils.ConfigUtils;\nconst {isEmptyRuleProperties} = Utils.RuleUtils;\n\n\nclass Rule extends Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    operatorOptions: PropTypes.object,\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //depends on widget\n    valueSrc: PropTypes.any,\n    valueType: PropTypes.any,\n    asyncListValues: PropTypes.array,\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    parentField: PropTypes.string, //from RuleGroup\n    valueError: PropTypes.any,\n    fieldError: PropTypes.string,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //path: PropTypes.instanceOf(Immutable.List),\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    setOperator: PropTypes.func,\n    setOperatorOption: PropTypes.func,\n    setLock: PropTypes.func,\n    removeSelf: PropTypes.func,\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    reordableNodesCnt: PropTypes.number,\n    totalRulesCnt: PropTypes.number,\n    parentReordableNodesCnt: PropTypes.number,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"selectedOperator\", \"config\", \"reordableNodesCnt\", \"isLocked\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({selectedField, selectedFieldType, selectedOperator, config, reordableNodesCnt, isLocked}) {\n    const {keepInputOnChangeFieldSrc} = config.settings;\n    const selectedFieldParts = getFieldParts(selectedField, config);\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    const isSelectedGroup = selectedFieldConfig && selectedFieldConfig.type == \"!struct\";\n    const isOkWithoutField = keepInputOnChangeFieldSrc && selectedFieldType;\n    const isFieldSelected = !!selectedField || isOkWithoutField;\n    const isFieldAndOpSelected = isFieldSelected && selectedOperator;\n    const selectedOperatorConfig = getOperatorConfig(config, selectedOperator, selectedField);\n    const selectedOperatorHasOptions = selectedOperatorConfig && selectedOperatorConfig.options != null;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator, null, null) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n\n    const showDragIcon = config.settings.canReorder && reordableNodesCnt > 1 && !isLocked;\n    const showOperator = isFieldSelected && !hideOperator;\n    const showOperatorLabel = isFieldSelected && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showWidget = isFieldAndOpSelected && !isSelectedGroup;\n    const showOperatorOptions = isFieldAndOpSelected && selectedOperatorHasOptions;\n\n    return {\n      selectedFieldParts, selectedFieldWidgetConfig,\n      showDragIcon, showOperator, showOperatorLabel, showWidget, showOperatorOptions\n    };\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeRuleConfirmOptions: confirmOptions} = config.settings;\n    const doRemove = () => {\n      this.props.removeSelf();\n    };\n    if (confirmOptions && !this.isEmptyCurrentRule()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      doRemove();\n    }\n  }\n\n  _buildWidgetProps({\n    selectedField, selectedFieldSrc, selectedFieldType,\n    selectedOperator, operatorOptions,\n    value, valueType, valueSrc, asyncListValues, valueError, fieldError,\n    parentField,\n  }) {\n    return {\n      field: selectedField,\n      fieldSrc: selectedFieldSrc,\n      fieldType: selectedFieldType,\n      operator: selectedOperator,\n      operatorOptions,\n      value,\n      valueType,\n      valueSrc,\n      asyncListValues,\n      valueError,\n      fieldError,\n      parentField,\n    };\n  }\n\n  isEmptyCurrentRule() {\n    const {config} = this.props;\n    const ruleData = this._buildWidgetProps(this.props);\n    return isEmptyRuleProperties(ruleData, config);\n  }\n\n  renderField() {\n    const {\n      config, isLocked, parentField, groupId, id,\n      selectedFieldSrc, selectedField, selectedFieldType, setField, setFuncValue, setFieldSrc, fieldError,\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    // tip: don't allow function inside !group (yet)\n\n    return <FieldWrapper\n      key=\"field\"\n      classname={classNames(\n        selectedFieldSrc == \"func\" ? \"rule--field--func\" : \"rule--field\",\n      )}\n      config={config}\n      canSelectFieldSource={!parentField}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      fieldError={fieldError}\n      setField={!immutableFieldsMode ? setField : dummyFn}\n      setFuncValue={!immutableFieldsMode ? setFuncValue : dummyFn}\n      setFieldSrc={!immutableFieldsMode ? setFieldSrc : dummyFn}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator () {\n    const {config, isLocked} = this.props;\n    const {\n      selectedFieldParts, selectedFieldWidgetConfig, showOperator, showOperatorLabel\n    } = this.meta;\n    const { immutableOpsMode } = config.settings;\n    \n    return <OperatorWrapper\n      key=\"operator\"\n      config={config}\n      selectedField={this.props.selectedField}\n      selectedFieldSrc={this.props.selectedFieldSrc}\n      selectedFieldType={this.props.selectedFieldType}\n      selectedOperator={this.props.selectedOperator}\n      setOperator={!immutableOpsMode ? this.props.setOperator : dummyFn}\n      selectedFieldParts={selectedFieldParts}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableOpsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  renderWidget() {\n    const {config, isLocked} = this.props;\n    const { showWidget } = this.meta;\n    const { immutableValuesMode } = config.settings;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      {...this._buildWidgetProps(this.props)}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      setValueSrc={!immutableValuesMode ? this.props.setValueSrc : dummyFn}\n      setFuncValue={!immutableValuesMode ? this.props.setFuncValue : dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderOperatorOptions() {\n    const {config} = this.props;\n    const { showOperatorOptions } = this.meta;\n    const { immutableOpsMode, immutableValuesMode } = config.settings;\n    if (!showOperatorOptions) return null;\n\n    const opOpts = <OperatorOptions\n      key=\"operatorOptions\"\n      selectedField={this.props.selectedField}\n      selectedOperator={this.props.selectedOperator}\n      operatorOptions={this.props.operatorOptions}\n      setOperatorOption={!immutableOpsMode ? this.props.setOperatorOption : dummyFn}\n      config={config}\n      readonly={immutableValuesMode}\n    />;\n\n    return (\n      <Col key={\"op-options-for-\"+this.props.selectedOperator} className=\"rule--operator-options\">\n        {opOpts}\n      </Col>\n    );\n  }\n\n  renderBeforeWidget() {\n    const {config} = this.props;\n    const { renderBeforeWidget } = config.settings;\n    return renderBeforeWidget \n        && <Col key={\"before-widget-for-\" +this.props.selectedOperator} className=\"rule--before-widget\">\n          {typeof renderBeforeWidget === \"function\" ? renderBeforeWidget(this.props, config.ctx) : renderBeforeWidget}\n        </Col>;\n  }\n\n  renderAfterWidget() {\n    const {config} = this.props;\n    const { renderAfterWidget } = config.settings;\n    return renderAfterWidget \n        && <Col key={\"after-widget-for-\" +this.props.selectedOperator} className=\"rule--after-widget\">\n          {typeof renderAfterWidget === \"function\" ? renderAfterWidget(this.props, config.ctx) : renderAfterWidget}\n        </Col>;\n  }\n\n  renderError() {\n    const {config, valueError, fieldError} = this.props;\n    const { renderRuleError, showErrorMessage } = config.settings;\n    const oneError = [fieldError, ...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n        && <div className=\"rule--error\">\n          {renderRuleError ? renderRuleError({error: oneError}, config.ctx) : oneError}\n        </div>;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const { config } = this.props;\n    const { showDragIcon } = this.meta;\n    const { renderIcon } = config.settings;\n    const Icon = (pr) => renderIcon?.(pr, config.ctx);\n    const icon = <Icon\n      type=\"drag\"\n    />;\n    return showDragIcon && (<div \n      key=\"rule-drag-icon\"\n      onMouseDown={handleDraggerMouseDown}\n      className={\"qb-drag-handler rule--drag-handler\"}\n    >{icon}</div>);\n  }\n\n  renderDel() {\n    const {config, isLocked} = this.props;\n    const {\n      deleteLabel, \n      immutableGroupsMode, \n      renderButton,\n      renderIcon,\n      canDeleteLocked\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n\n    return !immutableGroupsMode && (!isLocked || isLocked && canDeleteLocked) && (\n      <Btn \n        type=\"delRule\" onClick={this.removeSelf} label={deleteLabel} config={config} renderIcon={Icon}\n      />\n    );\n  }\n\n  renderLock() {\n    const {config, isLocked, isTrueLocked, id} = this.props;\n    const {\n      lockLabel, lockedLabel, showLock,\n      renderSwitch\n    } = config.settings;\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n      \n    return showLock && !(isLocked && !isTrueLocked) && (\n      <Switch \n        type=\"lock\" id={id} value={isLocked} setValue={this.setLock} label={lockLabel} checkedLabel={lockedLabel} hideLabel={true} config={config}\n      />\n    );\n  }\n\n  render () {\n    const { showOperatorOptions, selectedFieldWidgetConfig } = this.meta;\n    const { valueSrc, value, config } = this.props;\n    const canShrinkValue = valueSrc?.first() == \"value\" && !showOperatorOptions && value.size == 1 && selectedFieldWidgetConfig.fullWidth;\n    const { renderButtonGroup } = config.settings;\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const parts = [\n      this.renderField(),\n      this.renderOperator(),\n      this.renderBeforeWidget(),\n      this.renderWidget(),\n      this.renderAfterWidget(),\n      this.renderOperatorOptions(),\n    ];\n    const body = <div key=\"rule-body\" className={classNames(\"rule--body\", canShrinkValue && \"can--shrink--value\")}>{parts}</div>;\n\n    const error = this.renderError();\n    const drag = this.renderDrag();\n    const lock = this.renderLock();\n    const del = this.renderDel();\n      \n    return (\n      <>\n        {drag}\n        <div className=\"rule--body--wrapper\">\n          {body}{error}\n        </div>\n        <div className=\"rule--header\">\n          <BtnGrp config={config}>\n            {lock}\n            {del}\n          </BtnGrp>\n        </div>\n      </>\n    );\n  }\n\n}\n\n\nexport default RuleContainer(Draggable(\"rule\")(WithConfirmFn(Rule)));\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport mapValues from \"lodash/mapValues\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate, useOnPropsChanged} from \"../../utils/reactUtils\";\nimport classNames from \"classnames\";\nimport {connect} from \"react-redux\";\nconst {defaultGroupConjunction} = Utils.DefaultUtils;\n\n\nconst createGroupContainer = (Group, itemType) => \n  class GroupContainer extends Component {\n    static propTypes = {\n      config: PropTypes.object.isRequired,\n      actions: PropTypes.object.isRequired, //{setConjunction: Function, removeGroup, addGroup, addRule, ...}\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      not: PropTypes.bool,\n      conjunction: PropTypes.string,\n      children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n      onDragStart: PropTypes.func,\n      reordableNodesCnt: PropTypes.number,\n      field: PropTypes.any, // for RuleGroup\n      fieldSrc: PropTypes.string, // for RuleGroup\n      fieldType: PropTypes.string, // for RuleGroup\n      parentField: PropTypes.string, //from RuleGroup\n      valueError: PropTypes.any, // for RuleGroup\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.selectedConjunction = this._selectedConjunction(props);\n      this.conjunctionOptions = this._getConjunctionOptions(props);\n      this.dummyFn.isDummyFn = true;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    onPropsChanged(nextProps) {\n      const {config, id, conjunction} = nextProps;\n      const oldConfig = this.props.config;\n      const oldConjunction = this.props.conjunction;\n      if (oldConfig != config || oldConjunction != conjunction) {\n        this.selectedConjunction = this._selectedConjunction(nextProps);\n        this.conjunctionOptions = this._getConjunctionOptions(nextProps);\n      }\n    }\n\n    _getConjunctionOptions (props) {\n      return mapValues(props.config.conjunctions, (item, index) => ({\n        id: `conjunction-${props.id}-${index}`,\n        name: `conjunction[${props.id}]`,\n        key: index,\n        label: item.label,\n        checked: index === this._selectedConjunction(props),\n      }));\n    }\n\n    _selectedConjunction = (props) => {\n      props = props || this.props;\n      return props.conjunction || defaultGroupConjunction(props.config, props.field);\n    };\n\n    setConjunction = (conj = null) => {\n      this.props.actions.setConjunction(this.props.path, conj);\n    };\n\n    setNot = (not = null) => {\n      this.props.actions.setNot(this.props.path, not);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeGroup(this.props.path);\n    };\n\n    addGroup = () => {\n      this.props.actions.addGroup(this.props.path);\n    };\n\n    addCaseGroup = () => {\n      this.props.actions.addCaseGroup(this.props.path);\n    };\n\n    addDefaultCaseGroup = () => {\n      this.props.actions.addDefaultCaseGroup(this.props.path);\n    };\n\n    addRule = () => {\n      const parentRuleGroupPath = itemType == \"rule_group\" ? this.props.field : null;\n      this.props.actions.addRule(this.props.path, undefined, undefined, undefined, parentRuleGroupPath);\n    };\n\n    // for RuleGroup\n    setField = (field, asyncListValues, _meta) => {\n      this.props.actions.setField(this.props.path, field, asyncListValues, _meta);\n    };\n\n    // for RuleGroupExt\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    setValue = (delta, value, type, asyncListValues, _meta) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, _meta);\n    };\n\n    // can be used for both LHS and LHS\n    setFuncValue = (delta, parentFuncs, argKey, value, type, asyncListValues, _meta) => {\n      this.props.actions.setFuncValue(this.props.path, delta, parentFuncs, argKey, value, type, asyncListValues, _meta);\n    };\n\n    render() {\n      const {showErrorMessage} = this.props.config.settings;\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const currentNesting = this.props.path.size;\n      const maxNesting = this.props.config.settings.maxNesting;\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n      const fieldType = this.props.fieldType || null;\n\n      const {valueError} = this.props;\n      const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n      const hasError = oneError != null && showErrorMessage;\n\n      // Don't allow nesting further than the maximum configured depth and don't\n      // allow removal of the root group.\n      const allowFurtherNesting = typeof maxNesting === \"undefined\" || currentNesting < maxNesting;\n      const isRoot = currentNesting == 1;\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"group-container\", hasError ? \"group-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Group\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              isRoot={isRoot}\n              allowFurtherNesting={allowFurtherNesting}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={this.dummyFn}\n              setNot={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              addGroup={this.dummyFn}\n              addCaseGroup={this.dummyFn}\n              addDefaultCaseGroup={this.dummyFn}\n              addRule={this.dummyFn}\n              setField={this.dummyFn}\n              setFuncValue={this.dummyFn}\n              setOperator={this.dummyFn}\n              setValue={this.dummyFn}\n              value={this.props.value || null}\n              valueError={this.props.valueError || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Group\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              isRoot={isRoot}\n              allowFurtherNesting={allowFurtherNesting}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={isInDraggingTempo ? this.dummyFn : this.setConjunction}\n              setNot={isInDraggingTempo ? this.dummyFn : this.setNot}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              addGroup={isInDraggingTempo ? this.dummyFn : this.addGroup}\n              addCaseGroup={isInDraggingTempo ? this.dummyFn : this.addCaseGroup}\n              addDefaultCaseGroup={isInDraggingTempo ? this.dummyFn : this.addDefaultCaseGroup}\n              addRule={isInDraggingTempo ? this.dummyFn : this.addRule}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setFuncValue={isInDraggingTempo ? this.dummyFn : this.setFuncValue}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              value={this.props.value || null}\n              valueError={this.props.valueError || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Group, itemType) => {\n  const ConnectedGroupContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createGroupContainer(Group, itemType));\n  ConnectedGroupContainer.displayName = \"ConnectedGroupContainer\";\n\n  return ConnectedGroupContainer;\n};\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class GroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, addGroup, removeSelf, setLock, isLocked, isTrueLocked, id,\n      canAddGroup, canAddRule, canDeleteGroup\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, addGroupLabel, delGroupLabel, groupActionsPosition, \n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn\n      type=\"addRule\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n    const addGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addGroup\" onClick={addGroup} label={addGroupLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn\n      type=\"delGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {addGroupBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport startsWith from \"lodash/startsWith\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport classNames from \"classnames\";\nimport { Item } from \"./Item\";\nimport {GroupActions} from \"./GroupActions\";\nimport {WithConfirmFn, dummyFn} from \"../utils\";\nconst {isEmptyGroupChildren} = Utils.RuleUtils;\n\nconst defaultPosition = \"topRight\";\n\n\nexport class BasicGroup extends Component {\n  static propTypes = {\n    reordableNodesCnt: PropTypes.number,\n    conjunctionOptions: PropTypes.object.isRequired,\n    allowFurtherNesting: PropTypes.bool.isRequired,\n    isRoot: PropTypes.bool.isRequired,\n    not: PropTypes.bool,\n    selectedConjunction: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    path: PropTypes.any, //instanceOf(Immutable.List)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    onDragStart: PropTypes.func,\n    addRule: PropTypes.func.isRequired,\n    addGroup: PropTypes.func.isRequired,\n    removeSelf: PropTypes.func.isRequired,\n    setConjunction: PropTypes.func.isRequired,\n    setNot: PropTypes.func.isRequired,\n    setLock: PropTypes.func.isRequired,\n    actions: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n    this.renderItem = this.renderItem.bind(this);\n  }\n\n  isGroupTopPosition() {\n    return startsWith(this.props.config.settings.groupActionsPosition || defaultPosition, \"top\");\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeGroupConfirmOptions: confirmOptions} = config.settings;\n    const doRemove = () => {\n      this.props.removeSelf();\n    };\n    if (confirmOptions && !this.isEmptyCurrentGroup()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      doRemove();\n    }\n  }\n\n  isEmptyCurrentGroup() {\n    const {children1, config} = this.props;\n    return isEmptyGroupChildren(children1, config);\n  }\n\n  render() {\n    return <>\n      {this.renderHeaderWrapper()}\n      {this.renderChildrenWrapper()}\n      {this.renderFooterWrapper()}\n    </>;\n  }\n\n  showNot() {\n    const {config} = this.props;\n    return config.settings.showNot;\n  }\n\n  // show conjs for 2+ children?\n  showConjs() {\n    const {conjunctionOptions, children1, config} = this.props;\n    const conjunctionCount = Object.keys(conjunctionOptions).length;\n    return conjunctionCount > 1 || this.showNot();\n  }\n\n  isNoChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.size == 0 : true;\n  }\n\n\n  isOneChild() {\n    const {children1} = this.props;\n    return children1 ? children1.size < 2 : true;\n  }\n\n  renderChildrenWrapper() {\n    const {children1} = this.props;\n\n    return children1 && (\n      <div key=\"group-children\" className={classNames(\n        \"group--children\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        this.childrenClassName()\n      )}>{this.renderChildren()}</div>\n    );\n  }\n\n  childrenClassName = () => \"\";\n\n  renderHeaderWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n      )}>\n        {this.renderHeader()}\n        {isGroupTopPosition && this.renderBeforeActions()}\n        {isGroupTopPosition && this.renderActions()}\n        {isGroupTopPosition && this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderFooterWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return !isGroupTopPosition && (\n      <div key=\"group-footer\" className='group--footer'>\n        {this.renderBeforeActions()}\n        {this.renderActions()}\n        {this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderBeforeActions = () => {\n    const BeforeActions = this.props.config.settings.renderBeforeActions;\n    if (BeforeActions == undefined)\n      return null;\n\n    return typeof BeforeActions === \"function\" ? BeforeActions(this.props, this.props.config.ctx) : BeforeActions;\n  };\n\n  renderAfterActions = () => {\n    const AfterActions = this.props.config.settings.renderAfterActions;\n    if (AfterActions == undefined)\n      return null;\n\n    return typeof AfterActions === \"function\" ? AfterActions(this.props, this.props.config.ctx) : AfterActions;\n  };\n\n  renderActions() {\n    const {config, addRule, addGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <GroupActions\n      config={config}\n      addRule={addRule}\n      addGroup={addGroup}\n      canAddGroup={this.canAddGroup()}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  canAddGroup() {\n    return this.props.allowFurtherNesting;\n  }\n  canAddRule() {\n    const maxNumberOfRules = this.props.config.settings.maxNumberOfRules;\n    const totalRulesCnt = this.props.totalRulesCnt;\n    if (maxNumberOfRules) {\n      return totalRulesCnt < maxNumberOfRules;\n    }\n    return true;\n  }\n  canDeleteGroup() {\n    return !this.props.isRoot;\n  }\n\n  renderChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.valueSeq().map(this.renderItem).toArray() : null;\n  }\n\n  renderItem(item) {\n    if (!item) {\n      return undefined;\n    }\n    const props = this.props;\n    const {config, actions, onDragStart, isLocked} = props;\n    const isRuleGroup = item.get(\"type\") == \"group\" && item.getIn([\"properties\", \"field\"]) != null;\n    const type = isRuleGroup ? \"rule_group\" : item.get(\"type\");\n    \n    return (\n      <Item\n        {...this.extraPropsForItem(item)}\n        key={item.get(\"id\")}\n        id={item.get(\"id\")}\n        groupId={props.id}\n        //path={props.path.push(item.get('id'))}\n        path={item.get(\"path\")}\n        type={type}\n        properties={item.get(\"properties\")}\n        config={config}\n        actions={actions}\n        children1={item.get(\"children1\")}\n        reordableNodesCnt={this.reordableNodesCntForItem(item)}\n        totalRulesCnt={this.totalRulesCntForItem(item)}\n        parentReordableNodesCnt={this.reordableNodesCnt()}\n        onDragStart={onDragStart}\n        isDraggingTempo={this.props.isDraggingTempo}\n        isParentLocked={isLocked}\n      />\n    );\n  }\n\n  extraPropsForItem(_item) {\n    return {};\n  }\n\n  reordableNodesCnt() {\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    return this.props.totalRulesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    return this.reordableNodesCnt();\n  }\n\n  showDragIcon() {\n    const { config, isRoot, isLocked } = this.props;\n    const reordableNodesCnt = this.reordableNodesCnt();\n    return config.settings.canReorder && !isRoot && reordableNodesCnt > 1 && !isLocked;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const { config } = this.props;\n    const { renderIcon } = config.settings;\n    const Icon = (pr) => renderIcon?.(pr, config.ctx);\n    const icon = <Icon\n      type=\"drag\"\n    />;\n    return this.showDragIcon() && (<div \n      key=\"group-drag-icon\"\n      onMouseDown={handleDraggerMouseDown}\n      className={\"qb-drag-handler group--drag-handler\"}\n    >{icon}</div>);\n  }\n\n  conjunctionOptions() {\n    const { conjunctionOptions } = this.props;\n    return conjunctionOptions;\n  }\n\n  renderConjs() {\n    const {\n      config, children1, id,\n      selectedConjunction, setConjunction, not, setNot, isLocked\n    } = this.props;\n\n    const {immutableGroupsMode, renderConjs, showNot: _showNot, notLabel} = config.settings;\n    const conjunctionOptions = this.conjunctionOptions();\n    if (!this.showConjs())\n      return null;\n    if (!children1 || !children1.size)\n      return null;\n\n    const renderProps = {\n      disabled: this.isOneChild(),\n      readonly: immutableGroupsMode || isLocked,\n      selectedConjunction: selectedConjunction,\n      setConjunction: immutableGroupsMode ? dummyFn : setConjunction,\n      conjunctionOptions: conjunctionOptions,\n      config: config,\n      not: not || false,\n      id: id,\n      setNot: immutableGroupsMode ? dummyFn : setNot,\n      notLabel: notLabel,\n      showNot: this.showNot(),\n      isLocked: isLocked\n    };\n    return renderConjs(renderProps, config.ctx);\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n}\n\nexport default GroupContainer(Draggable(\"group\")(WithConfirmFn(BasicGroup)), \"group\");\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, delGroupLabel,\n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} hideLabel={true} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addRuleGroup\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={\"group--actions\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupActions} from \"./RuleGroupActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {WithConfirmFn} from \"../utils\";\n\n\nclass RuleGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  childrenClassName = () => \"rule_group--children\";\n  \n  renderHeaderWrapper = () => null;\n  renderFooterWrapper = () => null;\n  renderConjs = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => false;\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1?.size || 0;\n  }\n\n  renderChildrenWrapper() {\n    return (\n      <>\n        {this.renderDrag()}\n        {this.renderField()}\n        {this.renderActions()}\n        {super.renderChildrenWrapper()}\n      </>\n    );\n  }\n\n  renderField() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, setField, setFuncValue, setFieldSrc, \n      parentField, id, groupId, isLocked\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    \n    return <FieldWrapper\n      key=\"field\"\n      classname={\"group--field\"}\n      config={config}\n      canSelectFieldSource={false}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={setField}\n      setFuncValue={setFuncValue}\n      setFieldSrc={setFieldSrc}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  extraPropsForItem(_item) {\n    return {\n      parentField: this.props.selectedField\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group\")(WithConfirmFn(RuleGroup)), \"rule_group\");\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupExtActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addSubRuleLabel, delGroupLabel,\n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addRuleGroupExt\" onClick={addRule} label={addSubRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={\"group--actions group--actions--tr\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupExtActions} from \"./RuleGroupExtActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\nconst {isEmptyRuleGroupExtPropertiesAndChildren} = Utils.RuleUtils;\n\n\nclass RuleGroupExt extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    value: PropTypes.any,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    setOperator: PropTypes.func,\n    setValue: PropTypes.func,\n    valueError: PropTypes.any,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  childrenClassName = () => \"rule_group_ext--children\";\n  \n  renderFooterWrapper = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => true;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderGroupField()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderGroupField() {\n    return (\n      <div className={\"group--field--count--rule\"}>\n        {this.renderField()}\n        {this.renderOperator()}\n        {this.renderWidget()}\n        {this.renderError()}\n      </div>\n    );\n  }\n\n  renderError() {\n    const {config, valueError} = this.props;\n    const { renderRuleError, showErrorMessage } = config.settings;\n    const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n        && <div className=\"rule_group--error\">\n          {renderRuleError ? renderRuleError({error: oneError}, config.ctx) : oneError}\n        </div>;\n  }\n\n  showNot() {\n    const {config, selectedField, selectedOperator} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField) || {};\n    return selectedFieldConfig.showNot != undefined ? selectedFieldConfig.showNot : config.settings.showNot;\n  }\n\n  conjunctionOptions() {\n    const {config, selectedField, selectedOperator} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField) || {};\n    let conjunctionOptions = super.conjunctionOptions();\n    if (selectedFieldConfig.conjunctions) {\n      let filtered = {};\n      for (let k of selectedFieldConfig.conjunctions) {\n        const options = conjunctionOptions[k];\n        if (options) {\n          filtered[k] = options;\n        }\n      }\n      conjunctionOptions = filtered;\n    }\n    return conjunctionOptions;\n  }\n\n  renderField() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, setField, setFieldSrc, setFuncValue,\n      parentField, id, groupId, isLocked\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    \n    return <FieldWrapper\n      key=\"field\"\n      classname={\"rule--field\"}\n      config={config}\n      canSelectFieldSource={false}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={setField}\n      setFuncValue={setFuncValue}\n      setFieldSrc={setFieldSrc}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator() {\n    const {config, selectedField, selectedFieldSrc, selectedOperator, setField, setOperator, isLocked} = this.props;\n    const { immutableFieldsMode } = config.settings;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n    const showOperatorLabel = selectedField && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showOperator = selectedField && !hideOperator;\n\n    return <OperatorWrapper\n      key=\"operator\"\n      classname={\"group--operator\"}\n      config={config}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedOperator={selectedOperator}\n      setOperator={setOperator}\n      selectedFieldPartsLabels={[\"group\"]}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableFieldsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    const {children1, config} = this.props;\n    const ruleData = this._buildWidgetProps(this.props);\n    return isEmptyRuleGroupExtPropertiesAndChildren(ruleData, children1, config);\n  }\n\n  _buildWidgetProps({\n    selectedField, selectedFieldSrc, selectedFieldType,\n    selectedOperator, operatorOptions,\n    value, valueType, valueSrc, asyncListValues, valueError, fieldError,\n    parentField,\n  }) {\n    return {\n      field: selectedField,\n      fieldSrc: selectedFieldSrc,\n      fieldType: selectedFieldType,\n      operator: selectedOperator,\n      operatorOptions,\n      value,\n      valueType, // new Immutable.List([\"number\"])\n      valueSrc: [\"value\"], //new Immutable.List([\"value\"]), // should be fixed in isEmptyRuleGroupExtPropertiesAndChildren\n      //asyncListValues,\n      valueError,\n      fieldError: null,\n      parentField,\n    };\n  }\n\n  renderWidget() {\n    const {config, selectedField, selectedOperator, isLocked} = this.props;\n    const { immutableValuesMode } = config.settings;\n    const isFieldAndOpSelected = selectedField && selectedOperator;\n    const showWidget = isFieldAndOpSelected;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      isForRuleGroup={true}\n      {...this._buildWidgetProps(this.props)}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      setValueSrc={dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupExtActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1?.size || 0;\n  }\n\n  extraPropsForItem(_item) {\n    return {\n      parentField: this.props.selectedField\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group_ext\")(WithConfirmFn(RuleGroupExt)), \"rule_group\");\n\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class SwitchGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addCaseGroup, addDefaultCaseGroup, setLock, isLocked, isTrueLocked, id, canAddGroup, canAddDefault\n    } = this.props;\n    const {\n      immutableGroupsMode, addCaseLabel, addDefaultCaseLabel, groupActionsPosition, \n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addCaseGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addCaseGroup\" onClick={addCaseGroup} label={addCaseLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const addDefaultCaseGroupBtn = !immutableGroupsMode && canAddDefault && !isLocked && <Btn\n      type=\"addDefaultCaseGroup\" onClick={addDefaultCaseGroup} label={addDefaultCaseLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addCaseGroupBtn}\n          {addDefaultCaseGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {SwitchGroupActions} from \"./SwitchGroupActions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getTotalReordableNodesCountInTree, getTotalRulesCountInTree} = Utils.TreeUtils;\n\n\nclass SwitchGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  childrenClassName = () => \"switch_group--children\";\n  \n  renderFooterWrapper = () => null;\n  hasDefaultCase = () => {\n    return this.props.children1?.size && this.props.children1.filter(c => c.get(\"children1\") == null).size > 0;\n  };\n  canAddGroup() {\n    const { maxNumberOfCases } = this.props.config.settings;\n    const totalCasesCnt = this.props.children1?.size || 0;\n    if (maxNumberOfCases) {\n      return totalCasesCnt < maxNumberOfCases;\n    }\n    return true;\n  }\n  canAddRule() {\n    return false;\n  }\n\n  reordableNodesCnt() {\n    // result will be passed to each case's `parentReordableNodesCnt` prop\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n    return casesToReorder;\n  }\n\n  totalRulesCntForItem(item) {\n    return getTotalRulesCountInTree(item);\n  }\n\n  reordableNodesCntForItem(item) {\n    if (this.props.isLocked)\n      return 0;\n    const { canLeaveEmptyCase, canRegroupCases } = this.props.config.settings;\n\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n\n    const nodesInCase = getTotalReordableNodesCountInTree(item);\n    let cnt = nodesInCase;\n    if (cnt == 1 && canRegroupCases && canLeaveEmptyCase && casesToReorder > 1)\n      cnt = 111;\n    return cnt;\n  }\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        //this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderConjs() {\n    const { config } = this.props;\n    const { renderSwitchPrefix } = config.settings;\n    return renderSwitchPrefix || null;\n  }\n\n  showNot() {\n    return false;\n  }\n\n\n  renderActions() {\n    const {config, addCaseGroup, addDefaultCaseGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <SwitchGroupActions\n      config={config}\n      addCaseGroup={addCaseGroup}\n      addDefaultCaseGroup={addDefaultCaseGroup}\n      canAddDefault={!this.hasDefaultCase()}\n      canAddGroup={this.canAddGroup()}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n}\n\n\nexport default GroupContainer(Draggable(\"group switch_group\")(WithConfirmFn(SwitchGroup)), \"switch_group\");\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {GroupActions} from \"./GroupActions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\n\n\nclass CaseGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    parentReordableNodesCnt: PropTypes.number,\n    value: PropTypes.any,\n    setValue: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  isDefaultCase() {\n    return this.props.children1 == undefined;\n  }\n\n  reordableNodesCnt() {\n    // `parentReordableNodesCnt` is number of cases to reorder\n    return this.props.parentReordableNodesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    // `reordableNodesCnt` is number of nodes is current case\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    // `totalRulesCnt` is number of nodes is current case\n    return this.props.totalRulesCnt;\n  }\n\n  showDragIcon() {\n    // default impl of `showDragIcon()` uses `this.reordableNodesCnt()`\n    if (this.isDefaultCase())\n      return false;\n    return super.showDragIcon();\n  }\n\n  childrenClassName = () => \"case_group--children\";\n  \n  renderFooterWrapper = () => null;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeaderLeft()}\n        {this.renderHeaderCenter()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderChildrenWrapper() {\n    if (this.isDefaultCase())\n      return null;\n    // body has 2 columns: condition & value\n    return (\n      <div className={\"case_group--body\"}>\n        {this.renderCondition()}\n        {this.renderValue()}\n      </div>\n    );\n  }\n\n  renderHeaderLeft() {\n    if (this.isDefaultCase()) {\n      const { defaultCaseLabel } = this.props.config.settings;\n      return defaultCaseLabel || \"\";\n    }\n    // default impl:\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderCondition() {\n    if (this.isDefaultCase())\n      return null;\n    return super.renderChildrenWrapper();\n  }\n\n  renderHeaderCenter() {\n    if (this.isDefaultCase())\n      return this.renderValue();\n    else\n      return null;\n  }\n\n  canAddGroup() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddGroup();\n  }\n\n  canAddRule() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddRule();\n  }\n\n  renderValue() {\n    const { config, isLocked, value, setValue, id } = this.props;\n    const { immutableValuesMode } = config.settings;\n\n    const widget = <Widget\n      key=\"values\"\n      isCaseValue={true}\n      field={\"!case_value\"}\n      operator={null}\n      value={value}\n      valueSrc={\"value\"}\n      valueError={null}\n      fieldError={null}\n      config={config}\n      setValue={!immutableValuesMode ? setValue : dummyFn}\n      setValueSrc={dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={id}\n      groupId={null}\n    />;\n\n    return (\n      <Col className=\"case_group--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addGroup, addRule, isLocked, isTrueLocked, id} = this.props;\n    return <GroupActions\n      config={config}\n      addGroup={addGroup}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canAddGroup={this.canAddGroup()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    // used to confirm self-deletion\n    const { value } = this.props;\n    const oneValue = value && value.size ? value.get(0) : null;\n    const hasValue = oneValue != null && (Array.isArray(oneValue) ? oneValue.length > 0 : true);\n    return super.isEmptyCurrentGroup() && !hasValue;\n  }\n\n}\n\nexport default GroupContainer(Draggable(\"group case_group\")(WithConfirmFn(CaseGroup)), \"case_group\");\n\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Rule from \"./Rule\";\nimport Group from \"./Group\";\nimport RuleGroup from \"./RuleGroup\";\nimport RuleGroupExt from \"./RuleGroupExt\";\nimport SwitchGroup from \"./SwitchGroup\";\nimport CaseGroup from \"./CaseGroup\";\n\nconst types = [\n  \"rule\",\n  \"group\",\n  \"rule_group\",\n  \"switch_group\",\n  \"case_group\"\n];\n\nconst getProperties = (props) => {\n  const properties = props.properties?.toObject() || {};\n  const result = {...properties};\n  if (props.isParentLocked) {\n    result.isLocked = true;\n  }\n  if (properties.isLocked) {\n    result.isTrueLocked = true;\n  }\n  return result;\n};\n\nconst typeMap = {\n  rule: (props) => (\n    <Rule\n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      config={props.config}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  group: (props) => (\n    <Group \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  rule_group: (props) => (\n    <RuleGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  rule_group_ext: (props) => (\n    <RuleGroupExt \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  switch_group: (props) => (\n    <SwitchGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  case_group: (props) => (\n    <CaseGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n};\n\n\nclass Item extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    type: PropTypes.oneOf(types).isRequired,\n    path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n    properties: PropTypes.any, //instanceOf(Immutable.Map)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    actions: PropTypes.object.isRequired,\n    reordableNodesCnt: PropTypes.number,\n    onDragStart: PropTypes.func,\n    parentField: PropTypes.string, //from RuleGroup\n    isDraggingTempo: PropTypes.bool,\n    isParentLocked: PropTypes.bool,\n  };\n\n  render() {\n    const { type, ...props } = this.props;\n    const mode = props.properties?.get(\"mode\");\n    const postfix = mode == \"array\" ? \"_ext\" : \"\";    \n    const renderItem = props.config.settings.renderItem;\n    let Cmp = typeMap[type + postfix];\n    if (renderItem) {\n      return renderItem({...props, type, itemComponent: Cmp}, props.config.ctx);\n    }\n    if (!Cmp) return null;\n    return Cmp(props);\n  }\n}\n\nexport { Item };\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Item } from \"./item/Item\";\nimport SortableContainer from \"./containers/SortableContainer\";\nimport {pureShouldComponentUpdate} from \"../utils/reactUtils\";\nconst { getTotalReordableNodesCountInTree, getTotalRulesCountInTree } = Utils.TreeUtils;\nconst { createListFromArray, emptyProperties } = Utils.DefaultUtils;\n\nclass Builder extends Component {\n  static propTypes = {\n    tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    config: PropTypes.object.isRequired,\n    actions: PropTypes.object.isRequired,\n    onDragStart: PropTypes.func,\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const prevProps = this.props;\n    let should = this.pureShouldComponentUpdate(nextProps, nextState);\n    if (should) {\n      let chs = [];\n      for (let k in nextProps) {\n        let changed = (nextProps[k] !== prevProps[k]);\n        if (changed && k != \"__isInternalValueChange\") {\n          chs.push(k);\n        }\n      }\n      if (!chs.length)\n        should = false;\n      //optimize render\n      if (chs.length == 1 && chs[0] == \"tree\" && nextProps.__isInternalValueChange)\n        should = false;\n    }\n    return should;\n  }\n\n  constructor(props) {\n    super(props);\n    this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n\n    this._updPath(props);\n  }\n\n  _updPath (props) {\n    const id = props.tree.get(\"id\");\n    this.path = createListFromArray([id]);\n  }\n\n  render() {\n    const {\n      tree, config, actions, onDragStart,\n    } = this.props;\n    const rootType = tree.get(\"type\");\n    const isTernary = rootType == \"switch_group\";\n    const reordableNodesCnt = isTernary ? null : getTotalReordableNodesCountInTree(tree);\n    const totalRulesCnt = isTernary ? null : getTotalRulesCountInTree(tree);\n    const id = tree.get(\"id\");\n    return (\n      <Item \n        key={id}\n        id={id}\n        path={this.path}\n        type={rootType}\n        properties={tree.get(\"properties\") || emptyProperties()}\n        config={config}\n        actions={actions}\n        children1={tree.get(\"children1\") || emptyProperties()}\n        reordableNodesCnt={reordableNodesCnt}\n        totalRulesCnt={totalRulesCnt}\n        parentReordableNodesCnt={0}\n        onDragStart={onDragStart}\n      />\n    );\n  }\n}\n\nexport default SortableContainer(Builder);\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {clone} = Utils;\nconst {getFieldConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\nconst {getFieldPathLabels, getWidgetForFieldOp} = Utils.RuleUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class ValueField extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    value: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    parentField: PropTypes.string,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"fieldSrc\", \"fieldType\", \"operator\", \"isFuncArg\", \"parentField\"];\n    const keysForMeta = [\"config\", \"field\", \"fieldSrc\", \"fieldType\", \"operator\", \"value\", \"placeholder\", \"isFuncArg\", \"parentField\"];\n    const needUpdateItems = !this.items || keysForItems.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps);\n    }\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getItems({config, field, fieldType, operator, parentField, isFuncArg, fieldDefinition}) {\n    const {canCompareFieldWithField} = config.settings;\n    const fieldSeparator = config.settings.fieldSeparator;\n    const parentFieldPath = getFieldParts(parentField, config);\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig?.subfields : config.fields;\n\n    const filteredFields = this.filterFields(config, sourceFields, field, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition, fieldType);\n    const items = this.buildOptions(parentFieldPath, config, filteredFields, parentFieldPath);\n    return items;\n  }\n\n  getMeta({config, field, fieldType, operator, value, placeholder: customPlaceholder, isFuncArg, parentField}) {\n    const {fieldPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedKey = value;\n    const isFieldSelected = !!value;\n\n    const leftFieldConfig = field ? getFieldConfig(config, field) : {};\n    const leftFieldWidgetField = leftFieldConfig?.widgets?.field;\n    const leftFieldWidgetFieldProps = leftFieldWidgetField?.widgetProps || {};\n    const placeholder = isFieldSelected ? null \n      : (isFuncArg && customPlaceholder || leftFieldWidgetFieldProps.valuePlaceholder || fieldPlaceholder);\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPathParts(selectedKey, config);\n    const selectedPath = getFieldPathParts(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2;\n\n    return {\n      placeholder,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n    };\n  }\n\n  filterFields(config, fields, leftFieldFullkey, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition, fieldType) {\n    fields = clone(fields);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = config.widgets[widget];\n    let expectedType;\n    if (isFuncArg) {\n      expectedType = fieldDefinition?.type;\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else if (leftFieldConfig) {\n      expectedType = leftFieldConfig.type;\n    } else {\n      // no field at LHS, but can use type from \"memory effect\"\n      expectedType = fieldType;\n    }\n    \n    function _filter(list, path) {\n      for (let rightFieldKey in list) {\n        let subfields = list[rightFieldKey].subfields;\n        let subpath = (path ? path : []).concat(rightFieldKey);\n        let rightFieldFullkey = subpath.join(fieldSeparator);\n        let rightFieldConfig = getFieldConfig(config, rightFieldFullkey);\n        if (!rightFieldConfig) {\n          delete list[rightFieldKey];\n        } else if (rightFieldConfig.type == \"!struct\" || rightFieldConfig.type == \"!group\") {\n          if (_filter(subfields, subpath) == 0)\n            delete list[rightFieldKey];\n        } else {\n          // tip: LHS field can be used as arg in RHS function\n          let canUse = (!expectedType || rightFieldConfig.type == expectedType)\n            && (isFuncArg ? true : rightFieldFullkey != leftFieldFullkey);\n          let fn = canCompareFieldWithField || config.settings.canCompareFieldWithField;\n          if (fn)\n            canUse = canUse && fn(leftFieldFullkey, leftFieldConfig, rightFieldFullkey, rightFieldConfig, operator);\n          if (!canUse)\n            delete list[rightFieldKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(fields, parentFieldPath || []);\n\n    return fields;\n  }\n\n  buildOptions(parentFieldPath, config, fields, path = null, optGroup = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    return keys(fields).map(fieldKey => {\n      const fullFieldPath = [...(path ?? []), fieldKey];\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fullFieldPath, config);\n      const partsLabels = getFieldPathLabels(fullFieldPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n\n      if (field.hideForCompare)\n        return undefined;\n\n      if (field.type == \"!struct\" || field.type == \"!group\") {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items: this.buildOptions(parentFieldPath, config, field.subfields, fullFieldPath, {\n            label,\n            tooltip,\n          })\n        };\n      } else {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = getFieldParts(fieldKey, config);\n    let label = fieldOpts?.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      isValueField: true,\n      config,\n      customProps,\n      setField: setValue,\n      readonly,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, labelYes, labelNo, readonly, widgetId, customProps = {}} = props;\n  const customRadioYesProps = customProps.radioYes || {};\n  const customRadioNoProps = customProps.radioNo || {};\n\n  const onCheckboxChange = e => setValue(e.target.checked);\n  const onRadioChange = e => setValue(e.target.value == \"true\");\n\n  // return <>\n  //     <input key={widgetId}  type=\"checkbox\" id={widgetId} checked={!!value} disabled={readonly} onChange={onCheckboxChange} />\n  //     <label style={{display: \"inline\"}} key={id+\"label\"}  htmlFor={widgetId}>{value ? labelYes : labelNo}</label>\n  // </>;\n\n  return <>\n    <input type=\"radio\" value={true} checked={!!value} disabled={readonly} onChange={onRadioChange} { ...customRadioYesProps }/> {labelYes}\n    <input type=\"radio\" value={false} checked={!value} disabled={readonly} onChange={onRadioChange} { ...customRadioNoProps } /> {labelNo}\n  </>;\n\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <input\n      type=\"text\" \n      value={textValue} \n      placeholder={placeholder} \n      disabled={readonly} \n      onChange={onChange}\n      maxLength={maxLength}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, maxRows, fullWidth, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <textarea\n      value={textValue} \n      placeholder={placeholder}\n      disabled={readonly}\n      onChange={onChange}\n      maxLength={maxLength}\n      style={{\n        width: fullWidth ? \"100%\" : undefined\n      }}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"date\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"time\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    else\n      value = moment(new Date(value)).format(valueFormat);\n    setValue(value);\n  };\n\n  let dtValue = value;\n  if (!value)\n    dtValue = \"\";\n  else\n    dtValue = moment(value).format(\"YYYY-MM-DDTHH:mm\");\n  \n  return (\n    <input type=\"datetime-local\"  value={dtValue}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const getMultiSelectValues = (multiselect) => {\n    let values = [];\n    const options = multiselect.options;\n    for (let i = 0 ; i < options.length ; i++) {\n      const opt = options[i];\n      if (opt.selected) {\n        values.push(opt.value);\n      }\n    }\n    if (!values.length)\n      values = undefined; //not allow []\n    return values;\n  };\n\n  const onChange = e => setValue(getMultiSelectValues(e.target));\n  \n  return (\n    <select multiple\n      onChange={onChange}\n      value={value}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n    >\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const onChange = e => setValue(e.target.value);\n  \n  const hasValue = value != null;\n  return (\n    <select\n      onChange={onChange}\n      value={hasValue ? value : \"\"}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\"])}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <input type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps = {}, } = props;\n  const customInputProps = customProps.input || {};\n  const customSliderProps = customProps.slider || customProps;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <div style={{display: \"inline-flex\"}}>\n      <input key={\"number\"} type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customInputProps} />\n      <input key={\"range\"} type=\"range\"  value={numberValue} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customSliderProps} />\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({items, setField, selectedKey, readonly, errorText}) => {\n  const renderOptions = (fields) => (\n    fields.map(field => {\n      const {items, path, label, disabled, matchesType} = field;\n      if (items) {\n        return <optgroup disabled={disabled} key={path} label={label}>{renderOptions(items)}</optgroup>;\n      } else {\n        const style = matchesType ? { fontWeight: \"bold\" } : {};\n        return <option disabled={disabled} key={path} value={path} style={style}>{label}</option>;\n      }\n    })\n  );\n\n  const onChange = e => setField(e.target.value);\n  \n  const hasValue = selectedKey != null;\n  return (\n    <select \n      onChange={onChange}\n      value={hasValue ? selectedKey : \"\"}\n      disabled={readonly}\n      style={{ color: errorText ? \"red\" : null }}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions(items)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel}) => {\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(key => {\n      const {id, name, label, checked} = conjunctionOptions[key];\n      const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n      if ((readonly || disabled) && !checked)\n        return null;\n      return [\n        <input key={id+postfix} type=\"radio\" id={id+postfix} name={name+postfix} checked={checked} disabled={readonly || disabled} value={key} onChange={onChange} />\n        ,\n        <label key={id+postfix+\"label\"} htmlFor={id+postfix}>{label}</label>\n      ];\n    });\n  \n  const renderNot = () => {\n    const postfix = \"not\";\n    return [\n      <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={not} disabled={readonly} onChange={onNotChange} />\n      ,\n      <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{notLabel || \"NOT\"}</label>\n    ];\n  };\n\n  const onChange = e => setConjunction(e.target.value);\n\n  const onNotChange = e => setNot(e.target.checked);\n\n  return [\n    showNot && renderNot(),\n    showConj && renderOptions()\n  ];\n  \n};\n","import React from \"react\";\n\nconst typeToLabel = {\n  \"addRuleGroup\": \"+\",\n  \"addRuleGroupExt\": \"+\",\n  \"delGroup\": \"x\",\n  \"delRuleGroup\": \"x\",\n  \"delRule\": \"x\",\n};\n\nexport default ({type, label, onClick, readonly}) => {\n  const btnLabel = label || typeToLabel[type];\n  return <button onClick={onClick} type=\"button\" disabled={readonly}>{btnLabel}</button>;\n};\n","import React from \"react\";\nimport { DragIcon } from \"../../../utils\";\n\nexport default ({type}) => {\n  const typeToIcon = {\n  };\n  let icon = typeToIcon[type] || null;\n  if (!icon && type === \"drag\") {\n    icon = <DragIcon />;\n  }\n\n  return icon;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\n\nexport default ({config, valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => (\n      <option key={srcKey} value={srcKey}>{info.label}</option>\n    ))\n  );\n\n  const onChange = e => setValueSrc(e.target.value);\n  \n  return (\n    <select \n      onChange={onChange}\n      value={valueSrc || \"\"}\n      disabled={readonly}\n    >\n      {renderOptions(valueSources)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({value, setValue, label, id, config, type}) => {\n  const onChange = e => setValue(e.target.checked);\n  const postfix = type;\n  return [\n    <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={!!value} onChange={onChange} />\n    ,\n    <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{label}</label>\n  ];\n};\n","export default ({onOk, okText, cancelText, title}) => {\n  if (confirm(title)) {\n    onOk();\n  }\n};\n","import React from \"react\";\n\n// value widgets\nexport {default as VanillaBooleanWidget} from \"./value/VanillaBoolean\";\nexport {default as VanillaTextWidget} from \"./value/VanillaText\";\nexport {default as VanillaTextAreaWidget} from \"./value/VanillaTextArea\";\nexport {default as VanillaDateWidget} from \"./value/VanillaDate\";\nexport {default as VanillaTimeWidget} from \"./value/VanillaTime\";\nexport {default as VanillaDateTimeWidget} from \"./value/VanillaDateTime\";\nexport {default as VanillaMultiSelectWidget} from \"./value/VanillaMultiSelect\";\nexport {default as VanillaSelectWidget} from \"./value/VanillaSelect\";\nexport {default as VanillaNumberWidget} from \"./value/VanillaNumber\";\nexport {default as VanillaSliderWidget} from \"./value/VanillaSlider\";\n\n// field select widget\nexport {default as VanillaFieldSelect} from \"./core/VanillaFieldSelect\";\n\n// core components\nexport {default as VanillaConjs} from \"./core/VanillaConjs\";\nexport {default as VanillaButton} from \"./core/VanillaButton\";\nexport {default as VanillaIcon} from \"./core/VanillaIcon\";\nexport {default as VanillaButtonGroup} from \"./core/VanillaButtonGroup\";\nexport {default as VanillaValueSources} from \"./core/VanillaValueSources\";\nexport {default as VanillaSwitch} from \"./core/VanillaSwitch\";\nexport {default as vanillaConfirm} from \"./core/vanillaConfirm\";\n\nexport const VanillaProvider = ({config, children}) => children;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\n\nexport default class Proximity extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    setOption: PropTypes.func.isRequired,\n    options: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    minProximity: PropTypes.number,\n    maxProximity: PropTypes.number,\n    optionPlaceholder: PropTypes.string,\n    optionTextBefore: PropTypes.string,\n    optionLabel: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //children\n  };\n\n  static defaultProps = {\n    customProps: {},\n    minProximity: 2,\n    maxProximity: 10,\n    optionPlaceholder: \"Select words between\",\n    optionLabel: \"Words between\",\n    optionTextBefore: null,\n  };\n\n  handleChange = (value) => {\n    this.props.setOption(\"proximity\", parseInt(value));\n  };\n\n  render() {\n    const {\n      defaults, options, config, optionLabel, optionPlaceholder, customProps, \n      minProximity, maxProximity, optionTextBefore, readonly\n    } = this.props;\n    const {settings, widgets, ctx} = config;\n    const defaultProximity = defaults ? defaults.proximity : undefined;\n    const {showLabels} = settings;\n    const selectedProximity = options.get(\"proximity\", defaultProximity);\n    const proxValues = range(minProximity, maxProximity + 1).map((item) => ({title: item, value: item}));\n    const factory = widgets.select.factory;\n    const Select = (props) => factory(props, ctx);\n\n    return (\n      <div className=\"operator--PROXIMITY\">\n        <div className=\"operator--options\">\n          { showLabels\n            && <label className=\"rule--label\">{optionLabel}</label>\n          }\n          { !showLabels && optionTextBefore\n            && <div className=\"operator--options--sep\">\n              <span>{optionTextBefore}</span>\n            </div>\n          }\n          <Select\n            config={config}\n            value={selectedProximity}\n            listValues={proxValues}\n            setValue={this.handleChange}\n            readonly={readonly}\n            placeholder={optionPlaceholder}\n            {...customProps}\n          />\n        </div>\n        <div className=\"operator--widgets\">{this.props.children}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport * as Widgets from \"../components/widgets\";\nimport * as CustomOperators from \"../components/operators\";\nimport { CoreConfig, Utils } from \"@react-awesome-query-builder/core\";\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  ...CoreConfig.conjunctions,\n};\n\n//----------------------------  operators\n\nconst operators = {\n  ...CoreConfig.operators,\n  proximity: {\n    ...CoreConfig.operators.proximity,\n    options: {\n      ...CoreConfig.operators.proximity.options,\n      factory: (props, {RCE, O: {ProximityOperator}}) => RCE(ProximityOperator, props),\n    },\n  },\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    ...CoreConfig.widgets.text,\n    factory: (props, {RCE, W: {VanillaTextWidget}}) => RCE(VanillaTextWidget, props),\n  },\n  textarea: {\n    ...CoreConfig.widgets.textarea,\n    factory: (props, {RCE, W: {VanillaTextAreaWidget}}) => RCE(VanillaTextAreaWidget, props),\n  },\n  number: {\n    ...CoreConfig.widgets.number,\n    factory: (props, {RCE, W: {VanillaNumberWidget}}) => RCE(VanillaNumberWidget, props),\n  },\n  slider: {\n    ...CoreConfig.widgets.slider,\n    factory: (props, {RCE, W: {VanillaSliderWidget}}) => RCE(VanillaSliderWidget, props),\n  },\n  select: {\n    ...CoreConfig.widgets.select,\n    factory: (props, {RCE, W: {VanillaSelectWidget}}) => RCE(VanillaSelectWidget, props),\n  },\n  multiselect: {\n    ...CoreConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {VanillaMultiSelectWidget}}) => RCE(VanillaMultiSelectWidget, props),\n  },\n  date: {\n    ...CoreConfig.widgets.date,\n    factory: (props, {RCE, W: {VanillaDateWidget}}) => RCE(VanillaDateWidget, props),\n  },\n  time: {\n    ...CoreConfig.widgets.time,\n    factory: (props, {RCE, W: {VanillaTimeWidget}}) => RCE(VanillaTimeWidget, props),\n  },\n  datetime: {\n    ...CoreConfig.widgets.datetime,\n    factory: (props, {RCE, W: {VanillaDateTimeWidget}}) => RCE(VanillaDateTimeWidget, props),\n  },\n  boolean: {\n    ...CoreConfig.widgets.boolean,\n    factory: (props, {RCE, W: {VanillaBooleanWidget}}) => RCE(VanillaBooleanWidget, props),\n  },\n  field: {\n    ...CoreConfig.widgets.field,\n    factory: (props, {RCE, W: {ValueFieldWidget}}) => RCE(ValueFieldWidget, props),\n    customProps: {\n      showSearch: true\n    }\n  },\n  func: {\n    ...CoreConfig.widgets.func,\n    factory: (props, {RCE, W: {FuncWidget}}) => RCE(FuncWidget, props),\n    customProps: {\n      //showSearch: true\n    }\n  },\n  case_value: {\n    ...CoreConfig.widgets.case_value,\n    // simple text value\n    factory: (props, {RCE, W: {VanillaTextWidget}}) =>  RCE(VanillaTextWidget, props),\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  ...CoreConfig.types,\n  select: {\n    ...CoreConfig.types.select,\n    widgets: {\n      ...CoreConfig.types.select.widgets,\n      select: {\n        ...CoreConfig.types.select.widgets.select,\n        widgetProps: {\n          customProps: {\n            showSearch: true\n          }\n        },\n      }\n    }\n  }\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...CoreConfig.settings,\n\n  renderField: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderOperator: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderFunc: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderConjs: (props, {RCE, W: {VanillaConjs}}) => RCE(VanillaConjs, props),\n  renderSwitch: (props, {RCE, W: {VanillaSwitch}}) => RCE(VanillaSwitch, props),\n  renderButton: (props, {RCE, W: {VanillaButton}}) => RCE(VanillaButton, props),\n  renderIcon: (props, {RCE, W: {VanillaIcon}}) => RCE(VanillaIcon, props),\n  renderButtonGroup: (props, {RCE, W: {VanillaButtonGroup}}) => RCE(VanillaButtonGroup, props),\n  renderProvider: (props, {RCE, W: {VanillaProvider}}) => RCE(VanillaProvider, props),\n  renderValueSources: (props, {RCE, W: {VanillaValueSources}}) => RCE(VanillaValueSources, props),\n  renderFieldSources: (props, {RCE, W: {VanillaValueSources}}) => RCE(VanillaValueSources, props),\n  renderConfirm: (props, {W: {vanillaConfirm}}) => vanillaConfirm(props),\n  renderSwitchPrefix: \"Conditions\",\n\n  customFieldSelectProps: {\n    showSearch: true\n  },\n\n  defaultSliderWidth: \"200px\",\n  defaultSelectWidth: \"200px\",\n  defaultSearchWidth: \"100px\",\n  defaultMaxRows: 5,\n  renderSize: \"small\",\n  maxLabelsLength: 100,\n\n  showLock: false,\n  showNot: true,\n  forceShowConj: false,\n  groupActionsPosition: \"topRight\", // oneOf [topLeft, topCenter, topRight, bottomLeft, bottomCenter, bottomRight]\n  \n};\n\n//----------------------------\n\nconst ctx = {\n  ...CoreConfig.ctx,\n  W: {\n    ...Widgets\n  },\n  O: {\n    ...CustomOperators\n  },\n  RCE: (C, P) => React.createElement(C, P),\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\nconfig = Utils.ConfigMixins.removeMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport debounce from \"lodash/debounce\";\nconst { mergeListValues, listValueToOption, optionToListValue, optionsToListValues, fixListValuesGroupOrder } = Utils.Autocomplete;\nconst { mapListValues, listValuesToArray, getListValue, makeCustomListValue, searchListValue, getItemInListValues } = Utils.ListUtils;\n\nfunction sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\nconst useListValuesAutocomplete = ({\n  asyncFetch, useLoadMore, useAsyncSearch, forceAsyncSearch,\n  asyncListValues: selectedAsyncListValues,\n  listValues: staticListValues, allowCustomValues,\n  value: selectedValue, setValue, placeholder, \n  config\n}, {\n  debounceTimeout,\n  multiple,\n  uif,\n  isFieldAutocomplete,\n}) => {\n  const knownSpecialValues = [\"LOAD_MORE\", \"LOADING_MORE\"];\n  const loadMoreTitle = \"Load more...\";\n  const loadingMoreTitle = \"Loading more...\";\n  const aPlaceholder = forceAsyncSearch ? \"Type to search\" : placeholder;\n\n  // state\n  const [open, setOpen] = React.useState(false);\n  const [asyncFetchMeta, setAsyncFetchMeta] = React.useState(undefined);\n  const [loadingCnt, setLoadingCnt] = React.useState(0);\n  const [isLoadingMore, setIsLoadingMore] = React.useState(false);\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [asyncListValues, setAsyncListValues] = React.useState(undefined);\n\n  // ref\n  const asyncFectchCnt = React.useRef(0);\n  const componentIsMounted = React.useRef(0);\n  const isSelectedLoadMore = React.useRef(false);\n\n  // compute\n  const nSelectedAsyncListValues = React.useMemo(() => (\n    listValuesToArray(selectedAsyncListValues)\n  ), [\n    selectedAsyncListValues,\n  ]);\n  const listValues = React.useMemo(() => (\n    asyncFetch\n      ? (selectedAsyncListValues ? mergeListValues(asyncListValues, nSelectedAsyncListValues, true) : asyncListValues)\n      : listValuesToArray(staticListValues)\n  ), [\n    asyncFetch,\n    selectedAsyncListValues,\n    asyncListValues,\n    staticListValues,\n  ]);\n  // todo: useMemo for calcing listValuesToDisplay ?\n  let listValuesToDisplay = asyncFetch\n    ? asyncListValues\n    : listValuesToArray(staticListValues);\n  if (allowCustomValues && inputValue && !searchListValue(inputValue, asyncListValues)) {\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, [makeCustomListValue(inputValue)], true);\n  }\n  if (asyncFetch && !asyncListValues && selectedAsyncListValues && !inputValue && !open && uif === \"antd\") {\n    // for initial loading, to resolve \"a\" -> \"A\"\n    listValuesToDisplay = listValues;\n  }\n  if (asyncFetch && !allowCustomValues && selectedAsyncListValues && uif === \"mui\") {\n    // to prevent warning, when select A, search E -> A is missing in options\n    //  MUI: The value provided to Autocomplete is invalid.\n    //  None of the options match with `\"a\"`.\n    //  You can use the `isOptionEqualToValue` prop to customize the equality test.\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, nSelectedAsyncListValues, true, true);\n  }\n  //const isDirtyInitialListValues = asyncListValues == undefined && selectedAsyncListValues && selectedAsyncListValues.length && typeof selectedAsyncListValues[0] != \"object\";\n  const isLoading = loadingCnt > 0;\n  const canInitialLoad = open && asyncFetch\n    && asyncListValues === undefined\n    && (forceAsyncSearch ? inputValue : true);\n  const isInitialLoading = canInitialLoad && isLoading;\n  const canLoadMore = !isInitialLoading && listValues && listValues.length > 0\n    && asyncFetchMeta && asyncFetchMeta.hasMore && (asyncFetchMeta.filter || \"\") === inputValue;\n  const canShowLoadMore = !isLoading && canLoadMore;\n  const options = mapListValues(listValuesToDisplay, listValueToOption);\n  const hasValue = selectedValue != null;\n  const selectedListValue = !multiple && hasValue ? getListValue(selectedValue, listValues) : null;\n  // const selectedListValues = multiple && hasValue ? selectedValue.map(v => getItemInListValues(listValues, v)) : [];\n\n  // fetch\n  const fetchListValues = async (filter = null, isLoadMore = false) => {\n    // clear obsolete meta\n    if (!isLoadMore && asyncFetchMeta) {\n      setAsyncFetchMeta(undefined);\n    }\n\n    const offset = isLoadMore && asyncListValues ? asyncListValues.length : 0;\n    const meta = isLoadMore && asyncFetchMeta || !useLoadMore && { pageSize: 0 };\n\n    const newAsyncFetchCnt = ++asyncFectchCnt.current;\n    const res = await asyncFetch.call(config?.ctx, filter, offset, meta);\n    const isFetchCancelled = asyncFectchCnt.current != newAsyncFetchCnt;\n    if (isFetchCancelled || !componentIsMounted.current) {\n      return null;\n    }\n\n    const { values, hasMore, meta: newMeta } = res?.values\n      ? res\n      : { values: res } // fallback, if response contains just array, not object\n    ;\n    const nValues = listValuesToArray(values);\n    let assumeHasMore;\n    let newValues;\n    if (isLoadMore) {\n      newValues = mergeListValues(asyncListValues, nValues, false);\n      assumeHasMore = newValues.length > asyncListValues.length;\n    } else {\n      newValues = nValues;\n      if (useLoadMore) {\n        assumeHasMore = newValues.length > 0;\n      }\n    }\n\n    // save new meta\n    const realNewMeta = hasMore != null || newMeta != null || assumeHasMore != null ? {\n      ...(assumeHasMore != null ? { hasMore: assumeHasMore } : {}),\n      ...(hasMore != null ? { hasMore } : {}),\n      ...(newMeta != null ? newMeta : {}),\n      filter\n    } : undefined;\n    if (realNewMeta) {\n      setAsyncFetchMeta(realNewMeta);\n    }\n\n    return newValues;\n  };\n\n  const loadListValues = async (filter = null, isLoadMore = false) => {\n    setLoadingCnt(x => (x + 1));\n    setIsLoadingMore(isLoadMore);\n    const list = await fetchListValues(filter, isLoadMore);\n    if (!componentIsMounted.current) {\n      return;\n    }\n    if (list != null) {\n      // tip: null can be used for reject (eg, if user don't want to filter by input)\n      setAsyncListValues(list);\n    }\n    setLoadingCnt(x => (x - 1));\n    setIsLoadingMore(false);\n  };\n  const loadListValuesDebounced = React.useCallback(debounce(loadListValues, debounceTimeout), []);\n\n  React.useEffect(() => {\n    componentIsMounted.current++;\n    // Initial loading\n    if (canInitialLoad && loadingCnt == 0 && asyncFectchCnt.current == 0) {\n      (async () => {\n        await loadListValues();\n      })();\n    }\n    // Unmount\n    return () => {\n      componentIsMounted.current--;\n    };\n  }, [canInitialLoad]);\n\n  // Event handlers\n  const onOpen = () => {\n    setOpen(true);\n  };\n\n  const onClose = async (_e) => {\n    const isLoadMoreClick = isSelectedLoadMore.current;\n    if (isLoadMoreClick) {\n      isSelectedLoadMore.current = false;\n      if (multiple) {\n        // required for MUI\n        setOpen(false);\n      }\n    } else {\n      setOpen(false);\n    }\n\n    if (uif === \"mui\" && !isLoadMoreClick) {\n      // parity with Antd\n      const resetValue = \"\";\n      await onInputChange(null, resetValue, \"my-reset\");\n    }\n  };\n\n  const onDropdownVisibleChange = (open) => {\n    if (open) {\n      onOpen();\n    } else {\n      onClose();\n    }\n  };\n\n  const isSpecialValue = (option) => {\n    const specialValue = option?.specialValue || option?.value;\n    return knownSpecialValues.includes(specialValue);\n  };\n\n  const onChange = async (e, val, option) => {\n    // todo: don't rely on 3rd param. check MUI 6\n    const isClearingAll = multiple && uif === \"mui\" && option === \"clear\";\n    // if user removes all chars in search, don't clear selected value\n    const isClearingInput = !multiple && uif === \"mui\" && option === \"clear\" && e?.type === \"change\";\n    const isClearingSingle = !multiple && uif === \"mui\" && option === \"clear\" && e?.type !== \"change\";\n    if (uif === \"mui\") {\n      option = val;\n      if (multiple) {\n        val = option.map(o => (o?.value ?? o));\n      } else {\n        val = option?.value ?? option;\n      }\n    }\n    const specialValue = multiple && Array.isArray(option) && option.map(opt => opt?.specialValue).find(v => !!v)\n      || option?.specialValue;\n    if (multiple && val && !Array.isArray(val)) {\n      val = [...(selectedValue || []), val];\n      option = null;\n    }\n    // if there are tags AND input and select is opened, clear input first\n    const shouldIgnore = isClearingAll && val.length === 0 && inputValue && open\n      || isClearingInput;\n    if (shouldIgnore) {\n      return;\n    }\n    const isAddingCustomOptionFromSearch \n      = multiple\n      && val.length && val.length > (selectedValue || []).length\n      && val[val.length-1] == inputValue\n      && !getListValue(inputValue, asyncListValues);\n\n    if (specialValue == \"LOAD_MORE\") {\n      setInputValue(inputValue);\n      isSelectedLoadMore.current = true;\n      await loadListValues(inputValue, true);\n    } else if (specialValue == \"LOADING_MORE\") {\n      isSelectedLoadMore.current = true;\n    } else {\n      if (multiple) {\n        const [newSelectedValues, newSelectedListValues] = optionsToListValues(val, listValues, allowCustomValues);\n        setValue(newSelectedValues, asyncFetch ? newSelectedListValues : undefined);\n        \n        if (isAddingCustomOptionFromSearch) {\n          await sleep(0);\n          await onInputChange(null, \"\", \"my-reset\");\n        }\n      } else {\n        const [v, lvs] = optionToListValue(val, listValues, allowCustomValues);\n        setValue(v, asyncFetch ? lvs : undefined);\n        if (isClearingSingle && isFieldAutocomplete) {\n          // Fix issue when dropdown stays visible after clicking \"X\"\n          await sleep(0);\n          setOpen(false);\n        }\n      }\n    }\n  };\n\n  const onInputChange = async (e, newInputValue, eventType) => {\n    // eventType=reset used by MUI on:\n    // - (single) initial set, select option - e = null, newInputValue = selected  (+1 call before with e != null)\n    // - (single/multi, -ACV) blur - e != null, newInputValue = ''\n    // - (multiple v5, -ACV) blur - e = null, newInputValue = '' # unwanted\n    // - (multiple) select option - e != null, newInputValue = ''\n    // - (multiple v4) delete tag while searching - e = null, newInputValue = ''  # unwanted\n    // - (multiple v4) select option while searching - e = null, newInputValue = ''  # unwanted\n\n    const shouldIgnore = uif === \"mui\" && eventType === \"reset\"\n    // && (\n    //   e != null\n    //   // for MUI 4 if search \"A\" and select any option -> should NOT reset search\n    //   // for MUI 5 if search \"A\" and close -> let's hold search but hide, as it's done in antd\n    //   || e === null && inputValue && multiple\n    // )\n    ;\n    const val = newInputValue;\n    if (val === loadMoreTitle || val === loadingMoreTitle || shouldIgnore) {\n      return;\n    }\n\n    if (newInputValue != inputValue) {\n      setInputValue(val);\n\n      const canSearchAsync = useAsyncSearch && (forceAsyncSearch ? !!val : true);\n      if (canSearchAsync) {\n        await loadListValuesDebounced(val);\n      } else if (useAsyncSearch && forceAsyncSearch) {\n        setAsyncListValues([]);\n      }\n    }\n  };\n\n  // Options\n  const extendOptions = (options) => {\n    const filtered = [...options];\n    if (useLoadMore) {\n      if (canShowLoadMore) {\n        filtered.push({\n          specialValue: \"LOAD_MORE\",\n          title: loadMoreTitle,\n        });\n      } else if (isLoadingMore) {\n        filtered.push({\n          specialValue: \"LOADING_MORE\",\n          title: loadingMoreTitle,\n          disabled: true\n        });\n      }\n    }\n    return filtered;\n  };\n\n  const getOptionSelected = (option, valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const selectedValue = valueOrOption.value != undefined ? valueOrOption.value : valueOrOption;\n    return option.value === selectedValue;\n  };\n\n  const getOptionDisabled = (valueOrOption) => {\n    return valueOrOption && valueOrOption.disabled;\n  };\n\n  const getOptionIsCustom = (valueOrOption) => {\n    if (valueOrOption?.isCustom)\n      return true;\n    const val = valueOrOption?.value ?? valueOrOption;\n    const lv = getListValue(val, listValues);\n    return lv?.isCustom || false;\n  };\n\n  const getOptionLabel = (valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const option = valueOrOption.value != undefined ? valueOrOption\n      : listValueToOption(getListValue(valueOrOption, listValues));\n    if (!option && valueOrOption.specialValue) {\n      // special last 'Load more...' item\n      return valueOrOption.title;\n    }\n    if (!option && allowCustomValues) {\n      // there is just string value, it's not item from list\n      return valueOrOption;\n    }\n    if (!option) {\n      // weird\n      return valueOrOption;\n    }\n    return option.title || option.label || option.value; // fallback to value\n  };\n\n  const fixedOptions = uif === \"mui\" ? fixListValuesGroupOrder(options) : options;\n\n  return {\n    options: fixedOptions,\n    listValues,\n    hasValue,\n    selectedListValue,\n\n    open,\n    onOpen,\n    onClose,\n    onDropdownVisibleChange,\n    onChange,\n    \n    inputValue,\n    onInputChange,\n    canShowLoadMore,\n    isInitialLoading,\n    isLoading,\n    isLoadingMore,\n    isSpecialValue,\n\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    aPlaceholder,\n  };\n};\n\nexport default useListValuesAutocomplete;\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport * as ReactUtils from \"./reactUtils\";\nimport { DragIcon } from \"../components/utils\";\nexport default { ...Utils, ReactUtils, DragIcon };\n","var map = {\n\t\"./es-us\": 88218,\n\t\"./es-us.js\": 88218,\n\t\"./ru\": 31313,\n\t\"./ru.js\": 31313\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 40164;"],"names":["mapListValues","Utils","ListUtils","useListValuesAutocomplete","Hooks","nonCheckedIcon","React","CheckBoxOutlineBlankIcon","fontSize","style","marginRight","marginTop","checkedIcon","CheckBoxIcon","emptyArray","props","allowCustomValues","multiple","disableClearable","selectedValue","value","customProps","readonly","config","filterOptionsConfig","errorText","defaultFilterOptionsConfig","stringify","useCallback","option","settings","listKeysForSearch","map","k","join","filterOptionsFn","createFilterOptions","_useListValuesAutocom","debounceTimeout","uif","open","onOpen","onClose","onChange","onInputChange","inputValue","options","isInitialLoading","isLoading","aPlaceholder","extendOptions","getOptionSelected","getOptionDisabled","getOptionIsCustom","getOptionLabel","selectedListValue","_config$settings","defaultSelectWidth","defaultSearchWidth","_ref","width","rest","_objectWithoutProperties","_excluded","customInputProps","input","inputWidth","omit","customAutocompleteProps","minWidth","undefined","placeholder","useStyles","makeStyles","theme","classesChip","root","height","label","marginBottom","useStylesChip","classes","FormControl","fullWidth","Autocomplete","_extends","disableCloseOnSelect","freeSolo","loading","disabled","readOnly","groupBy","groupTitle","renderInput","params","_selectedListValue$ti","shouldRenderSelected","selectedTitle","title","TextField","inputProps","_objectSpread","InputProps","endAdornment","CircularProgress","color","size","error","renderTags","getTagProps","index","className","titleSpan","Chip","key","renderOption","_ref2","selected","renderTitle","specialValue","isHidden","Box","filterOptions","filtered","mapFieldItemToOptionKeys","path","altLabel","tooltip","grouplabel","itemsToListValues","items","level","arguments","length","item","matchesType","prefix","repeat","_value2","_altLabel","flat","Infinity","fieldAdapter","selectedKey","setField","isValueField","listValues","fieldItemKeysForSearch","setValue","_asyncValues","isFieldAutocomplete","DragIcon","typeToIcon","DeleteIcon","AddIcon","DragHandle","typeToColor","hideLabelsFor","paper","padding","spacing","MaterialTextWidget","maxLength","textValue","e","val","target","MaterialTextAreaWidget","maxRows","defaultMaxRows","multiline","MaterialDateWidget","_window","_window$matchMedia","_window2","dateFormat","valueFormat","Picker","window","matchMedia","call","matches","useKeyboard","KeyboardDatePicker","DatePicker","format","isValid","formatSingleValue","MaterialDateTimeWidget","use12Hours","timeFormat","KeyboardDateTimePicker","DateTimePicker","dateTimeFormat","ampm","MaterialTimeWidget","KeyboardTimePicker","TimePicker","hasSeconds","indexOf","timeValue","moment","views","MaterialSelectWidget","hasValue","Select","autoWidth","displayEmpty","renderValue","_ref3","filter","v","shift","getListValueTitle","MenuItem","MaterialNumberWidget","min","max","step","numberValue","type","Number","MaterialSliderWidget","marks","defaultSliderWidth","customSliderProps","slider","sliderValue","muiMarks","Object","keys","InputCmp","onBlur","SliderCmp","Slider","_e","newValue","valueLabelDisplay","stylesSliderWrapper","marginLeft","paddingLeft","display","alignItems","flexWrap","MaterialRangeWidget","placeholders","textSeparators","useEffect","_slicedToArray","handleInputBlur","_toConsumableArray","_sliderValue","valueFrom","valueTo","FromInputCmp","ToInputCmp","newValues","stylesInputWrapper","MaterialBooleanWidget","labelYes","labelNo","Typography","component","Grid","container","Switch","checked","MaterialMultiSelectWidget","selectedValues","selectedTitles","Checkbox","ListItemText","primary","MaterialAutocompleteWidget","MaterialFieldSelect","findLabel","fields","field","Array","isArray","some","pop","renderOptions","ListSubheader","disableSticky","MaterialFieldAutocomplete","MaterialAutocomplete","MaterialIcon","icon","Icon","MaterialButton","onClick","renderIcon","IconButton","Button","startIcon","MaterialButtonGroup","children","MaterialConjs","id","not","setNot","conjunctionOptions","setConjunction","showNot","notLabel","conjsCount","lessThenTwo","showConj","forceShowConj","ButtonGroup","disableElevation","variant","bind","_conjunctionOptions$k","name","postfix","isDummyFn","MaterialSwitch","checkedLabel","hideLabel","renderSize","showLabel","LockIcon","LockOpenIcon","FormControlLabel","control","MaterialValueSources","valueSources","valueSrc","setValueSrc","_React$useState","_React$useState2","anchorEl","setAnchorEl","handleClose","Boolean","event","currentTarget","handleOpen","ExpandMoreSharpIcon","Popover","anchorOrigin","vertical","horizontal","transformOrigin","disablePortal","FormLabel","RadioGroup","srcKey","info","Radio","MaterialConfirm","onOk","okText","cancelText","confirmFn","description","confirmationText","cancellationText","then","MaterialUseConfirm","useConfirm","MaterialProvider","settingsTheme","settingsLocale","locale","themeConfig","material","createTheme","base","withProviders","MuiPickersUtilsProvider","utils","MomentUtils","ConfirmProvider","ThemeProvider","BasicConfig","renderField","_props$customProps","RCE","_ref$W","W","showSearch","renderOperator","renderFunc","renderConjs","_ref4","renderSwitch","_ref5","renderButton","_ref6","_ref7","renderButtonGroup","_ref8","renderValueSources","_ref9","renderFieldSources","_ref10","renderProvider","_ref11","renderConfirm","_ref12","_ref13","widgets","text","factory","_ref14","textarea","_ref15","number","_ref16","multiselect","_ref17","_ref17$W","asyncFetch","select","_ref18","_ref18$W","_ref19","boolean","_ref20","date","_ref21","time","_ref22","datetime","_ref23","rangeslider","_ref24","types","ctx","MaterialWidgets","ConfigMixins","addMixins","query_builder_seed","timePart","Date","getTime","toString","substr","replace","c","r","Math","floor","random","isObject","_typeof","widgetDefKeysToOmit","opDefKeysToOmit","getOpCardinality","opDef","_opDef$cardinality","cardinality","deepEqual","v1","v2","Map","isMap","equals","JSON","shallowEqual","a","b","deep","arrA","arrB","len","i","shallowEqualArrays","objA","objB","aKeys","bKeys","shallowEqualObjects","isImmutable","toJS","toImmutableList","Immutable","applyToJS","escapeRegExp","string","mergeCustomizerNoArrays","objValue","srcValue","_key","_object","_source","_stack","cleanJSX","jsx","el","_i","isDirtyJSX","_cleaned$props","cleaned","includes","isJSX","isJsonLogic","logic","sleep","delay","Promise","resolve","setTimeout","mergeArraysSmart","arr1","arr2","op","orig","next","slice","after","reverse","find","before","x","reduce","acc","newOp","rel","relOp","ind","splice","deepFreeze","obj","forEach","prop","freeze","isJsonCompatible","tpl","bag","concat","getLogger","devMode","console","log","warn","debug","getFirstDefined","ret","arr","logger","toListValue","makeCustomListValue","lv","isCustom","listValuesToArray","listValuesObj","listValuesArr","push","getItemInListValues","getTitleInListValues","it","getValueInListValues","mapFn","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","f","searchListValue","search","getListValue","expandTreePath","_len","suffix","interpose","withMutations","list","skip","apply","expandTreeSubpath","_len2","_key2","getItemByPath","tree","_defineProperty","get","res","_res","removeIsLockedInTree","newTree","_processNode","isParentLocked","itemPath","isLocked","getIn","deleteIn","child","_childId","fixPathsInTree","lev","nodeId","currPath","currId","itemId","uuid","setIn","constructor","childId","fixEmptyGroupsInTree","allChildrenGone","curr","getFlatTree","cases","visibleHeight","globalLeafCount","globalGroupCount","globalCountByType","_flatizeTree","insideCollapsed","insideLocked","insideRuleGroup","caseId","childNo","isRoot","collapsed","childrenIds","_child","valueSeq","toArray","isRuleGroup","isRule","isGroup","isCaseGroup","isAtomicRule","hasChildren","parentId","currentCaseId","position","caseNo","itemsBefore","top","globalNoByType","indexPath","globalLeafNo","globalGroupNo","node","parent","parentType","isLeaf","isDefaultCase","atomicRulesCountInCase","_top","leaf","depth","maxChildDepth","sumHeight","childCount","childItem","_height","bottom","assign","prevId","nextId","prev","getTotalReordableNodesCountInTree","cnt","children1","getTotalRulesCountInTree","getLightTree","deleteExcess","children1AsArray","properties","operatorOptions","values","getSwitchValues","vals","caseValue","isEmptyTree","_fixImmutableValue","_v$toJS","vJs","func","toOrderedMap","getTree","immutableTree","light","loadTree","serTree","isImmutableTree","isTree","jsToImmutable","startsWith","Error","parse","fromJS","outValue","isFuncArg","isRuleValue","_outValue$get","_outValue$get$get","_outValue$get2","isIndexed","toList","createMeta","parentMeta","errors","loadFromJsonLogic","logicTree","_loadFromJsonLogic","returnErrors","meta","allowUnknownFields","extendedConfig","extendConfig","conv","buildConv","jsTree","convertFromLogic","wrapInDefaultConj","immTree","operators","opKey","opConfig","jsonLogic","opk","_jsonLogicIsRevArgs","jsonLogic2","conjunctions","conjKey","jsonLogicConj","toLowerCase","funcs","iterateFuncs","_step$value","funcPath","funcConfig","fk","jsonLogicIsMethod","_config$settings$json","varKeys","groupVarKey","altVarKey","expectedType","fieldConfig","widget","parentField","beforeErrorsCnt","lockedOp","isEmptyOp","isRev","convertFieldRhs","convertFuncRhs","convertValRhs","convertConj","convertOp","afterErrorsCnt","_fieldConfig$fieldSet","defaultValue","widgetConfig","mainWidget","fieldType","h","m","dateVal","setMilliseconds","setHours","setMinutes","setSeconds","toISOString","asyncListValues","fieldSettings","valueType","_meta$settings","normalizeField","getFieldConfig","argsArr","funcKey","opts","_vals","_toArray","returnType","funcKeys","getFuncConfig","_step2","_iterator2","_step2$value","fc","jsonLogicImport","parsed","argKeys","args","argsObj","argVal","argKey","argConfig","_argVal","isOptional","fieldSeparator","complexFields","_v$properties","_v$properties2","fieldSrc","_f$includes","complexFieldsGroupAncestors","fromEntries","from","Set","parts","split","ancs","fp","conjunction","groupToId","entries","_v$properties3","groupAncestors","groupField","ch","parentFieldParts","getFieldParts","groupPath","gf","gfc","groupId","mode","rule","defaultConjunction","_parseRule","arity","isRevArgs","_vals$1$in$","_meta$settings2","isGroup0","groupOperators","opKeys","jlField","jlArgs","_vals2","_vals3","lhs","having","_parse","convertFieldLhs","convertFuncLhs","_v","_v2","init","_v3","_v4","group","parsedGroup","convertLhs","_vals$1$op2$","op2","isEmptyVar","parseRes","submeta","parseRule","conj","havingVals","havingNot","reversedOp","getWidgetForFieldOp","convertedArgs","parentFieldConfig","defaultGroupConjunction","wrapInDefaultConjRuleGroup","operator","asyncListValuesArr","SqlString","SqlStringOrig","trim","charAt","substring","escapeLike","any_start","any_end","escape","sqlEmptyValue","fieldDef","mongoEmptyValue","spelFixList","spelEscape","numberToFloat","arrayToArray","isFinite","isNaN","isInteger","javaType","jt","escapedVals","numberJavaTypes","spelInlineList","spelEscapeString","spelFormatConcat","part","spelImportConcat","isVariable","stringifyForDisplay","compareToSign","TypesWithCompareTo","spelFormat","_spelFormat","formatItem","formatGroup","formatRule","formatSwitch","formatCase","_formatItemValue","formatItemValue","_formatItemValue2","formattedValue","currentChild","filteredCases","left","right","_filteredCases$_i","cond","List","conjunctionDefinition","isRuleGroupArray","isSpelArray","groupOperator","realGroupOperator","checkOp","isGroupOpRev","realGroupOperatorDefinition","getOperatorConfig","_formatItemValue3","_formatItemValue4","omitBrackets","spelFormatConj","formattedField","formatField","getSize","fullSize","filteredSize","formatExpression","fn","spelFormatOp","operatorDefinition","spelOp","isSign","isCompareTo","sop","compareRes","_","buildFnToFormatOp","spelFormatReverse","revOpDef","canFormatOp","canFormatRevOp","realOp","_formatItemValue5","_formatItemValue6","formatLhs","formatFunc","expectedValueType","iValueSrc","iValueType","iValue","valueSrcs","valueTypes","fvalue","currentValue","cValue","completeValue","fieldWidgetDef","getFieldWidgetConfig","fv","formatValue","hasUndefinedValues","first","operatorDef","spelFormatValue","pick","valFieldDefinition","fieldDefinition","fieldParts","fieldPartsConfigs","getFieldPartsConfigs","formatFieldFn","formatSpelField","fieldName","formatFieldName","fieldPartsMeta","cnf","parentCnf","isSpelMap","isSpelItemMap","isSpelVariable","_currentValue$get","_currentValue$get2","formattedArgs","gaps","missingArgKeys","_argValue","_argConfig$spelEscape","defaultValueSrc","argValue","argValueSrc","argAsyncListValues","doEscape","spelEscapeForFormat","formattedArgVal","formattedDefaultVal","defaultWidget","defaultFieldWidgetDef","finalFormattedVal","_argValue2","missedArgKey","spelFormatFunc","spelFunc","found","_formattedArgs$argKey","optionalArgs","RegExp","SpelPrimitiveTypes","null","SpelPrimitiveClasses","String","loadFromSpel","_loadFromSpel","spelStr","compiledExpression","convertedObj","SpelExpressionEvaluator","compile","_compiledExpression","postprocessCompiled","convertToTree","expr","parentExpr","getType","getChildren","selection","lastChild","isSize","methodName","isLength","sourceParts","source","convertPath","isThis","itype","_lastChild","_lastChild2","getRaw","getValue","flatizeTernary","functionName","qid","cls","_val","isVar","_processTernaryChildren","tern","_tern","if_val","else_val","_loop","spelOps","spelConj","_loop2","fks","funcSignMain","_k","funcSignsOptional","optionalArgKeys","_step3","_iterator3","valueFuncs","w","widgetDef","spelImportFuncs","fs","argsOrder","matchAll","opFuncs","spel","parentSpel","canParseAsArg","_groupFilter","groupFieldValue","_groupField","groupFilter","caseI","buildCase","convertArg","sw","buildSimpleSwitch","isUnary","isBetweenNormal","isBetweenRev","_spel$children$0$chil","_spel$children$1$chil","to","compareArgs","convertChildren","_newChildren","newChildren","_fieldObj$groupFieldV","_convertedArgs","fieldObj","opArg","_vals$","_vals$2","ws","needWrapReverse","buildRuleGroup","buildRule","expectingField","isError","_meta$errors","_meta$errors$push","_spel$children","at","_values$","buildCaseValueConcat","maybe","convertFunc","_buildFuncSignatures","brns","p","currBrn","o","_currBrn$params","_buildFuncSignatures2","_buildFuncSignatures3","s1","params1","newBrn","objs","unshift","_step4","_iterator4","_brn$objs","brn","_params","_buildFuncSignatures4","_buildFuncSignatures5","_fsigns$","convertFuncArg","fsigns","buildFuncSignatures","firstSign","maybeValue","convertFuncToValue","maybeOp","convertFuncToOp","_step5","_iterator5","_loop3","_step5$value","_step6","_iterator6","_step6$value","spelImport","funcArgs","errs","foundSign","foundWidget","candidates","fj","_step7","_iterator7","_step8","_step7$value","_iterator8","_loop4","_step8$value","_candidates","_candidates$_i","spelImportValue","_spelImportValue$call","_spelImportValue$call2","_step9","_iterator9","_step10","_step9$value","_iterator10","_loop5","_argsArr$filter$find","_step10$value","parseInt","_ret2","_field3","groupOpRule","_map","_map2","leftSource","rightSource","_map3","_map4","leftVal","rightVal","valProperties","buildCaseValProperties","_processConcatChildren","convertedChild","convVal","importCaseValue","_importCaseValue","_importCaseValue2","normVal","getDefaultField","canGetFirst","parentRuleGroupPath","defaultField","getDefaultSubField","getFirstField","parentRuleGroupConfig","getDefaultFieldSrc","_config$settings$fiel","fieldSources","getDefaultOperator","defaultOperator","fieldOperators","fieldDefaultOperator","getFirstOperator","_origDefaultOperator","defaultOperatorOptions","operatorConfig","defaults","defaultRuleProperties","_item$properties","_item$properties2","_item$properties3","canUseDefaultFieldAndOp","showErrorMessage","current","set","_getNewValueForFieldO","getNewValueForFieldOp","newValueSrc","newValueType","newValueError","newFieldError","conjs","defaultGroupProperties","defaultItemProperties","_item$properties4","defaultRule","defaultRoot","canAddDefaultRule","createListFromArray","ids","emptyProperties","queryString","isForDisplay","isDebugMode","_config$operators$gro","_config$operators$gro2","groupOperatorCardinality","canHaveEmptyChildren","conjStr","formatConj","aggrArgs","formatAggr","formatReverse","returnArgs","_meta$settings3","revOperatorDef","formatOp","fop","labelForFormat","_values$first","_values$get","valFrom","valTo","_operator","_fvalue$get","_fvalue","_fn","_meta$settings4","jsType","cutParentField","_meta$settings5","_config$settings2","fieldSeparatorDisplay","fieldPartsLabels","getFieldPathLabels","fieldFullLabel","fieldLabel2","label2","useTableName","funcValue","_funcValue$get","_funcValue$get2","_args$keySeq","_meta$settings6","funcParts","funcLastKey","funcName","formattedArgsWithNames","keySeq","argName","argsStr","EMPTY_GROUP","EMPTY_RULE_GROUP","EMPTY_QUERY","EMPTY_CASE","NO_CONFIG_FOR_FIELD","NO_CONFIG_FOR_OPERATOR","NO_CONFIG_FOR_FUNCTION","INVALID_VALUE","INVALID_FUNC_ARG_VALUE","UNSUPPORTED_FIELD_TYPE","UNSUPPORTED_OPERATOR_FOR_FIELD","INVALID_VALUE_SRC","INCOMPLETE_RULE","INCOMPLETE_LHS","INCOMPLETE_RHS","BAD_MULTISELECT_VALUES","BAD_SELECT_VALUE","INCORRECT_VALUE_TYPE","INCORRECT_VALUE_JS_TYPE","VALUE_LENGTH_CONSTRAINT_FAIL","VALUE_MIN_CONSTRAINT_FAIL","VALUE_MAX_CONSTRAINT_FAIL","NO_CONFIG_FOR_FIELD_VALUE","CANT_COMPARE_FIELD_WITH_ITSELF","CANT_COMPARE_FIELD_WITH_FIELD","INCORRECT_FIELD_TYPE","UNSUPPORTED_FUNCTION_FOR_FIELD","REQUIRED_FUNCTION_ARG","INCORRECT_FUNCTION_RETURN_TYPE","INVALID_RANGE","ITEM_POSITION","ITEM_POSITION_ROOT","ITEM_POSITION_WITH_INDEX_PATH","ITEM_POSITION_IN_CASE","translations","_translations","constants","NSV","NSVP","i18n","i18next","fallbackLng","addResources","validationTranslations","translateValidation","str","t","typeOf","isValidTree","getTreeBadFields","badFields","_field$get","_field$get2","valueError","fieldError","fieldStr","checkTree","removeEmptyGroups","removeEmptyGroupsOnLoad","removeIncompleteRules","removeIncompleteRulesOnLoad","removeEmptyRules","removeEmptyRulesOnLoad","forceFix","_validateTree2","_validateTree","fixedTree","allErrors","isSanitized","validateTree","finalOptions","sanitizeTree","_validateTree4","fixedErrors","nonFixedErrors","validateAndFixTree","_oldTree","newConfig","oldConfig","_validateTree5","flatItems","oldFlatItems","_ref$translateErrors","translateErrors","_ref$includeStringifi","includeStringifiedItems","_ref$stringifyFixedIt","stringifyFixedItems","_ref$stringifyItemsUs","stringifyItemsUserFriendly","_ref$includeItemsPosi","includeItemsPositions","validateItem","sanitized","_meta$errors$id","errorItem","itemStr","flatItem","isDeleted","itemPosition","trKey","trArgs","_itemPosition$indexPa","_arr","itemPositionStr","_i2","_allErrors","itemErrors","fixedItemErrors","fixed","nonFixedItemErrors","_addError","_setErrorsAsFixed","_properties$get","_config$operators$ope","_config$operators$ope2","_children","_children2","_children3","oldChildren","isGroupExt","isCase","childrenAreRequired","validateRule","nonEmptyChildren","canDrop","validateGroup","canFix","serializeRule","_field","_field$toJS","oldSerialized","side","getFieldSrc","availOps","getOperatorsForField","validationErrors","fixedField","newSerialized","hasBeenSanitized","compl","whatRulePropertiesAreCompleted","toObject","isCompleted","score","shoudlRemoveRule","incError","_newSerialized$valueS","_newSerialized$valueS2","_oldSerialized$valueS","_newSerialized$value","validateValue","leftField","isEndValue","canDropArgs","fixedValue","_allErrors2","_allErrors3","_allErrors4","_allErrors5","_validateFieldValue","validateFieldValue","_validateFieldValue2","_validateFuncValue","validateFuncValue","_validateFuncValue2","_validateNormalValue","validateNormalValue","_validateNormalValue2","fixedAllErrors","fieldWidgetDefinition","rightFieldDefinition","_validResult$error","newError","validResult","fixedFrom","fixedTo","lastError","wConfig","wType","treeValues","isAsyncListValues","canSkipTypeCheck","valueTypeof","realListValues","_validateValueInList","removeInvalidMultiSelectValuesOnLoad","isList","_values$reduce","goodVals","badVals","vv","_values$reduce2","goodValues","badValues","needFix","count","validateValueInList","_validateValueInList2","_valueSrc","canCompareFieldWithField","_isFuncArg","leftFieldStr","leftFieldConfig","rightFieldStr","rightFieldConfig","expected","rightField","_value$get","_funcConfig$label","_argDef$label","argDef","_validateValue","_validateValue2","fixedArgVal","argErrors","willFix","canDropOrReset","setFuncDefaultArg","_argErrors$find","firstError","ignore","argValidationError","canReset","validateRange","rangeError","operatorCardinality","valueSrcsArr","valuesArr","areValueSrcsPureValues","vs","validateValues","jsValues","jsVal","_currentField$get","_newField","_newField$get","newField","newOperator","changedProp","keepInputOnChangeFieldSrc","convertableWidgets","clearValueOnChangeField","clearValueOnChangeOp","currentField","currentFieldType","currentFieldSrc","currentOperator","currentValueSrc","currentValueType","currentOperatorConfig","newOperatorConfig","currentOperatorCardinality","currentFieldConfig","newFieldConfig","isOkWithoutField","currentType","newType","currentListValuesType","listValuesType","newListValuesType","currentFieldSimpleValue","hasFieldChanged","canReuseValue","selectTypes","_validateValue3","_validateValue4","fieldErrors","willFixAllErrors","willRevert","showError","currentWidget","newWidget","currentValueWidget","newValueWidget","firstValueSrc","firstWidgetConfig","getValueSourcesForFieldOp","valueSourcesInfo","defaultValueType","canExtendValueToRange","valueFixes","valueSrcFixes","valueTypeFixes","valueErrors","_i3","vType","vSrc","isValidSrc","_validateValue5","_validateValue6","allErrorsHandled","willDrop","delta","_newFieldConfig$field","dv","_valueSrcFixes$_i","_valueTypeFixes$_i","vt","_ignore","_valueSrcFixes$i","_valueTypeFixes$i","rangeErrorObj","rangeValidationError","badValue","completeFuncValue","complValue","tmpHasOptional","filteredValueSources","filterValueSourcesForField","argDefaultValueSrc","completeArgValue","getDefaultArgValue","setFunc","canFixArgs","oldFuncKey","oldArgs","newFuncSignature","getFuncSignature","oldFuncSignature","keepArgsKeys","getCompatibleArgsOnFuncChange","setFuncDefaultArgs","setArgValue","setArgValueSrc","argValSrc","_argConfig","_config","s2","argVals","arg2","arg1","_argValidErrors$filte","argValidErrors","getOperatorsForType","_config$types$fieldTy","_fieldOps$","fieldOps","calculateValueType","calculatedValueType","getFuncPathLabels","fieldsKey","subfieldsKey","parentParts","_curr","getFieldRawConfig","last","parentFieldDef","isFieldDescendantOfField","getValueLabel","isSpecialRange","arg","showLabels","fieldWidgetConfig","mergedOpConfig","valueLabels","valueLabel","valuePlaceholder","_getWidgetsAndSrcsForFieldOp","widgetValueSrc","canAdd","_fieldConfig$valueSou","_opConfig$valueSource","canAddValueSrc","widgetWeight","wg","preferWidgets","sort","w1","w2","getWidgetsForFieldOp","_fieldDefinition$type","__fieldsCntByType","minCnt","__funcsCntByType","tableName","fieldPartsCopy","parentFieldName","isEmptyItem","isEmptyRuleGroupExt","isEmptyGroup","isEmptyRule","isEmptyRuleGroupExtPropertiesAndChildren","filledParts","isEmptyRuleProperties","isEmptyGroupChildren","_config$operators$ope3","_config$operators$ope4","_value$filter","liteCheck","isCompletedValue","deepCheck","applyJsonLogic","data","JL","customJsonLogicOperations","CALL","JSX","mergeObjects","obj1","obj2","strlen","regexTest","pattern","flags","match","now","date_add","dim","add","toDate","toUpperCase","applyJsonLogicWithPath","message","callContextFn","_this","addRequiredJsonLogicOperations","configKeys","compileMetaFieldSettings","isArr","compileMetaWidget","sqlFormatValue","mongoFormatValue","elasticSearchFormatValue","compileMetaOperator","mongoFormatOp","sqlFormatOp","elasticSearchQueryType","compileMetaWidgetForType","widgetProps","opProps","compileMeta","mainWidgetProps","sqlFormatConj","renderBrackets","renderSeps","sqlFormatFunc","mongoFormatFunc","mui","invokeWith","sqlFormatReverse","normalizeListValues","renderSwitchPrefix","renderItem","renderBeforeWidget","renderAfterWidget","renderBeforeActions","renderAfterActions","renderRuleError","compressConfig","baseConfig","__fieldNames","zipConfig","_clean","BasicFuncs","prototype","hasOwnProperty","_base","_configKeys","rootKey","clone","decompressConfig","useConfigCompress","unzipConfig","_mergeDeep","mixin","_resolveAndMergeDeep","resolved","_configKeys2","merge","compileConfig","__compliled","_compileConfigParts","defineProperty","enumerable","writable","subconfig","logs","newPath","targetObj","newVal","renderReactElement","compileJsonLogicReact","_newVal4","compileJsonLogic","def","subfields","jl","re","this","argNames","_ctx$components","_props","Cmp","components","O","canReorder","canRegroup","canDeleteLocked","canLeaveEmptyGroup","shouldCreateEmptyGroup","canShortMongoQuery","optimizeRenderWithInternals","setOpOnChangeField","fieldLabel","operatorLabel","funcLabel","fieldPlaceholder","funcPlaceholder","operatorPlaceholder","lockLabel","lockedLabel","deleteLabel","addGroupLabel","addCaseLabel","addDefaultCaseLabel","defaultCaseLabel","addRuleLabel","addSubRuleLabel","delGroupLabel","fieldSourcesPopupTitle","valueSourcesPopupTitle","removeRuleConfirmOptions","removeGroupConfirmOptions","configId","canCompile","__configId","mergeWith","defaultSettings","typesConfig","extendTypeConfig","extendTypesConfig","extendFieldsConfig","extendFuncArgsConfig","momentLocale","typeConfig","typeWidgetConfig","typeWidgetOperators","excludeOperators","extendFieldConfig","funcDef","tmpIsOptional","isFunc","excludeOperatorsForField","_keysToPutInFieldSett","excludeOperatorsForType","shouldIncludeOperators","addOperators","_computeFieldName","_reduce","computedPath","computed","inGroup","fullPath","fConfig","computeFieldName","_marked2","_regeneratorRuntime","iterateFields","_widgetDefKeysToOmit","_context","delegateYield","_iterateFields","stop","_marked","_context2","_callee","fieldKey","_context3","t0","t1","targetFields","_config$__fieldNames$","_config$__fieldNames$2","findStr","getFuncArgConfig","_config$settings3","getFieldPath","parentPath","_config$settings4","_config$settings5","_field$split","getFieldPathParts","onlyKeys","_field$get3","_field$get4","widgetOpProps","fieldWidgetOpProps","fieldWidgetProps","valueFieldSettings","parentPathArr","firstField","keysPath","_firstField","queryBuilderFormat","usedFields","rules","condition","_valueType","secondField","ruleQuery","jsonLogicFormat","ff","tmp","pdef","groupOperatorDefinition","resultQuery","formatLogic","var","revOperatorDefinition","oldUsedFields","formattedArgsArr","varName","jsonLogicVar","_operatorDefinition$_","formatteOp","isReverseArgs","rangeOps","eqOps","opOpts","mongodbFormat","_mongodbFormat","parents","_not","_canWrapExpr","_formatFieldName","_value","sep","hasParentRuleGroup","realParentPath","groupFieldName","reversedConj","mongoConj","totalQuery","filterQuery","as","_f","useExpr","_formatFunc","_formatFunc2","_formatValue","_formatValue2","fvUseExpr","wrapExpr","_formatRightField","formatRightField","_formatRightField2","_formatFunc3","_formatFunc4","mongoFunc","mongoArgsAsObject","argsCnt","lastArg","_formatValue3","_formatValue4","_formatValue5","_formatValue6","sqlFormat","_sqlFormat","sqlOp","sqlFunc","buildEsRule","syntax","queryType","parameters","textField","determineField","script","elasticSearchScript","ES_7_SYNTAX","geoPointString","coordsNumberArray","top_left","lat","lon","bottom_right","buildEsGeoPoint","gte","lte","dateTime","lt","gt","buildEsRangeParameters","buildEsWildcardParameters","buildRegexpParameters","buildParameters","bool","must_not","ES_6_SYNTAX","elasticSearchFormat","_properties$get2","_properties$get3","recursiveFxn","childrenArray","occurrence","combinator","determineOccurrence","result","resultFlat","buildEsGroup","simulateAsyncFetch","all","cPageSize","_asyncToGenerator","offset","pageSize","currentOffset","newOffset","hasMore","ceil","abrupt","_x","_x2","_x3","mergeListValues","toStart","hideNewValues","old","newFiltered","av","optionToListValue","_val$value","customItem","listValue","optionsToListValues","newSelectedListValues","_val$value2","newSelectedValues","_o$value","listValueToOption","fixListValuesGroupOrder","groupTitles","findLastIndex","findIndex","lv1","_lv1$groupTitle","_lv$groupTitle","nv","NOW","jsonLogicCustomOps","RELATIVE_DATETIME","method","_spel$methodName","matchRes","abs","plus","minus","day","week","month","year","LOWER","UPPER","LINEAR_REGRESSION","coef","bias","_a$children","mongoFormatOp1","mop","mc","_op","$field","mv","mongoFormatOp2","mops","_$not3","_field2","equal","opStr","_this$utils","not_equal","isNotOp","_this$utils2","less","_this$utils3","_len3","_key3","less_or_equal","_this$utils4","_len4","_key4","greater","_this$utils5","_len5","_key5","greater_or_equal","_this$utils6","_len6","_key6","like","_this$utils7","_len7","_key7","not_like","_this$utils8","_this2","_len8","_key8","starts_with","_this$utils9","_this3","_len9","_key9","ends_with","_this$utils10","_this4","_len10","_key10","between","_this$utils11","_len11","_key11","not_between","_this$utils12","_len12","_key12","is_empty","empty","_this$utils13","_this5","_len13","_key13","is_not_empty","_this$utils14","_this6","_len14","_key14","is_null","_this$utils15","_len15","_key15","is_not_null","_this$utils16","_len16","_key16","select_equals","_this$utils17","_len17","_key17","select_not_equals","_this$utils18","_len18","_key18","select_any_in","_this$utils19","_len19","_key19","select_not_any_in","_this$utils20","_len20","_key20","multiselect_contains","_this$utils21","_len21","_key21","multiselect_not_contains","multiselect_equals","_this7","_this$utils22","_len22","_key22","multiselect_not_equals","_this8","_this$utils23","_len23","_key23","proximity","val1","val2","prox","aVal1","aVal2","optionLabel","optionTextBefore","optionPlaceholder","minProximity","maxProximity","_this$utils24","_len24","_key24","_this$utils25","_len25","_key25","none","_this$utils26","_len26","_key26","wgtDef","isFloat","valLabel","_this9","valsLabels","_this10","isCallable","_args$fmt","_args$fmt$includes","_args$fmt2","_args$fmt2$toLowerCas","fmt","ISO_8601","_args$fmt3","_args$fmt3$toLowerCas","_args$fmt4","_args$fmt5","_args$fmt5$includes","rightFieldDef","case_value","partsExt","_this11","q","whereStr","aggrField","aggrFieldDef","_addMixins","mixins","doAdd","mixinFuncs","mixinWidgetRangeslider","treeselect","mixinWidgetTreeselect","treemultiselect","mixinWidgetTreemultiselect","rangeable__date","mixinRangeableWidget","mixName","mixinFunc","addMixin","singleWidget","treeData","_this12","_this13","removeMixins","AND","sqlConj","spelConjs","OR","ADD_GROUP","ADD_CASE_GROUP","REMOVE_GROUP","SET_CONJUNCTION","SET_NOT","ADD_RULE","REMOVE_RULE","SET_FIELD","SET_FIELD_SRC","SET_OPERATOR","SET_VALUE","SET_VALUE_SRC","SET_FUNC_VALUE","SET_OPERATOR_OPTION","SET_LOCK","SET_TREE","MOVE_ITEM","PLACEMENT_AFTER","PLACEMENT_BEFORE","PLACEMENT_APPEND","PLACEMENT_PREPEND","SET_DRAG_PROGRESS","SET_DRAG_START","SET_DRAG_END","addNewGroup","state","generatedId","groupUuid","canAddNewRule","origState","addItem","_addChildren1","_it$id","id1","it1","currentNumber","maxNumber","maxNumberOfCases","maxNumberOfRules","maxNesting","isTernary","targetItem","caseGroup","take","childrenPath","targetChildren","targetChildrenSize","isLastDefaultCase","_Immutable$OrderedMap2","newChildrenWithLast","mergeIn","removeItem","_currentProperties$ge","_currentProperties$ge2","_newFieldConfig$opera","isInternalValueChange","_meta","__isInternal","currentProperties","wasRuleGroup","currentFieldError","currentOperatorOptions","currentValueErrorStr","isRuleGroupExt","isChangeToAnotherType","lastOp","forceKeepOp","strategy","groupProperties","initialEmptyWhere","updateIn","_newValueError$join","_getNewValueForFieldO2","newValueErrorStr","newCorrectField","willFixField","didErrorChanged","newOperatorOptions","validationError","initEmptyValueLists","lastValue","lastRangeError","emptyDrag","dragging","y","mousePos","dragStart","setTree","addRule","ruleType","removeRule","addDefaultCaseGroup","addCaseGroup","addGroup","removeGroup","moveItem","fromPath","toPath","placement","setLock","lock","setFieldSrc","setOperator","setFuncValue","parentFuncs","setOperatorOption","BasicUtils","Export","Import","initialConfig","getMemoizedTree","setLastTree","getLastConfig","emptyState","_getLastConfig","action","actionMeta","_affectedField","actionTypesToIgnore","mapValues","affectedField","getField","getActionMeta","validatedTree","parentOperator","parentOperatorConfig","hasGroupCountRule","isParentRuleGroup","isEmptyParentGroup","canLeaveEmpty","_setField","__isInternalValueChange","currentRule","currentFielType","_getNewValueForFieldO3","_setValue","_setFuncValue","isLHS","funcsPath","targetFV","funcK","argK","argDefinition","newV","_funcsPath$pop","_funcsPath$pop2","parentFV","_getNewValueForFieldO4","sourcePath","sourceChildren","targetPath","isSameParent","isSourceInsideTarget","isTargetInsideSource","sourceSubpathFromTarget","targetSubpathFromSource","newTargetChildren","newSourceChildren","_oldChildren","checkEmptyGroups","__lastAction","setDragProgress","setDragStart","setDragEnd","TreeActions","_Utils$ConfigUtils","ConfigUtils","createConfigMemo","configStore","getExtended","findConfig","savedConfig","_ret3","findExtended","extendAndStore","findOrExtend","pickConfig","getBasic","basicConfig","extConfig","_ret","truncateString","useWordBoundary","subString","lastIndexOf","immutableEqual","Validation","getReactRootNodeType","_reactRootContainer","getOwnPropertyNames","parentNode","isUsingLegacyReactDomRender","liteShouldComponentUpdate","self","nextProps","nextState","prevProps","prevState","should","chs","changed","pureShouldComponentUpdate","useOnPropsChanged","shouldComponentUpdate","componentWillReceiveProps","onPropsChanged","origShouldComponentUpdate","bindActionCreators","actionCreators","dispatch","actionCreator","Query","_Component","_inherits","_super","_classCallCheck","_assertThisInitialized","nextValue","oldValidatedTree","_updateActions","getBasicConfig","onInit","actions","_createClass","newBasicConfig","_this$props","renderBuilder","Component","propTypes","PropTypes","isRequired","ConnectedQuery","connect","context","displayName","DefaultUtils","QueryContainer","lastTree","prevTree","prevprevTree","getConfig","prevValue","_createConfigMemo","getMemoizedConfig","originalTree","createValidationMemo","emptyTree","reducer","treeStoreReducer","store","createStore","QueryWrapper","pr","nextConfig","isConfigChanged","storeValue","getState","isTreeChanged","currentTree","isTreeTrulyChanged","get_children","Provider","TreeUtils","_isReorderingTree","GroupOrRule","_class","_PureComponent","Draggable","handleDraggerMouseDown","dom","wrapper","onDragStart","isDraggingTempo","isDraggingMe","otherProps","isTrueLocked","styles","cn","classNames","ref","PureComponent","Operator","getMeta","_config$types$selecte","selectedField","selectedFieldType","selectedOperator","operatorsOptions","pickBy","_opts","buildOptions","selectedOpts","selectedKeys","selectedPath","selectedLabel","ops","renderProps","selectedFieldSrc","Col","dummyFn","xmlns","viewBox","fill","d","WithConfirmFn","OperatorWrapper","selectedFieldParts","showOperator","showOperatorLabel","selectedFieldWidgetConfig","operatorInlineLabel","RuleUtils","Field","widgetId","maxLabelsLength","isFieldSelected","currField","getFieldLabel","partsLabels","selectedFullLabel","selectedAltLabel","parentFieldPath","sourceFields","lookingForFieldType","fieldOpts","optGroup","countFieldsMatchesType","fullFieldPath","fullLabel","hideForSelect","hasItemsMatchesType","_Utils$RuleUtils","OtherUtils","FuncSelect","needUpdateItems","getItems","canUseFuncForField","filteredFuncs","filterFuncs","selectedFuncKey","isFuncSelected","currFunc","getFuncLabel","leftFieldFullkey","targetDefinition","_filter","subpath","funcFullkey","_targetDefinition","canUse","allowSelfNesting","fullFuncPath","funcOpts","immValue","immValueError","widgetDefinition","widgetValueLabel","setValueHandler","widgetFactory","isConst","fixedImmValue","errorMessage","funcArgDummyOpDef","Widget","widgetType","oldRange","_setValueSrc","renderWidget","iValues","aField","_widgets$delta","hasValueSources","widgetLabel","WidgetFactory","_widgets$delta2","setValueSrcHandler","valueSourcesOptions","ValueSources","sourceLabel","renderSep","sepText","sepLabel","renderWidgetDelta","_iValueSrcs","_iValueSrcs2","simpleField","fieldFunc","fieldArg","isForRuleGroup","isCaseValue","iValueSrcs","isSpecialRangeForSrcField","isTrueSpecialRange","range","_iValueSrcs3","_widgetDefinition","vsId","_this$meta","_Utils$FuncUtils","FuncUtils","FuncWidget","_createSuper","_this$props2","_this$props3","renderFuncSelect","_value$get2","_this$props4","selectProps","renderArgLabel","showPrefix","renderArgLabelSep","renderArgVal","_this$props5","defaultValueSource","ArgWidget","renderArgSep","argIndex","renderBracketBefore","renderBracketAfter","renderFuncArgs","funcDefinition","_value$get3","_value$get4","funcLevel","_Component2","_super2","_delta","_this2$props","_this2$props2","FieldWrapper","classname","customFieldSelectProps","fieldSourcesOptions","canSelectFieldSource","OperatorOptions","operatorDefinitions","_operatorDefinitions$","optionsFactory","basicOptionsProps","optionsCmp","setOption","Rule","removeSelf","reordableNodesCnt","selectedFieldConfig","isSelectedGroup","isFieldAndOpSelected","selectedOperatorConfig","selectedOperatorHasOptions","hideOperator","showDragIcon","showWidget","showOperatorOptions","confirmOptions","doRemove","isEmptyCurrentRule","onCancel","ruleData","_buildWidgetProps","immutableFieldsMode","immutableOpsMode","immutableValuesMode","oneError","onMouseDown","_this$props6","immutableGroupsMode","Btn","_this$props7","showLock","_this$meta2","_this$props8","canShrinkValue","BtnGrp","renderOperatorOptions","body","renderError","drag","renderDrag","renderLock","del","renderDel","totalRulesCnt","parentReordableNodesCnt","ConnectedRuleContainer","RuleContainer","isInDraggingTempo","hasError","createRuleContainer","Group","itemType","ConnectedGroupContainer","GroupContainer","_selectedConjunction","selectedConjunction","_getConjunctionOptions","oldConjunction","currentNesting","allowFurtherNesting","createGroupContainer","groupActionsPositionList","topLeft","topCenter","topRight","bottomLeft","bottomCenter","bottomRight","GroupActions","canAddGroup","canAddRule","canDeleteGroup","groupActionsPosition","setLockSwitch","addRuleBtn","addGroupBtn","delGroupBtn","BasicGroup","childrenClassName","BeforeActions","AfterActions","isEmptyCurrentGroup","renderHeaderWrapper","renderChildrenWrapper","renderFooterWrapper","showConjs","isOneChild","renderChildren","isGroupTopPosition","isNoChildren","renderHeader","renderActions","Item","extraPropsForItem","reordableNodesCntForItem","totalRulesCntForItem","_item","RuleGroupActions","RuleGroup","_BasicGroup","_get","_getPrototypeOf","RuleGroupExtActions","RuleGroupExt","renderGroupField","selectedFieldPartsLabels","SwitchGroupActions","canAddDefault","addCaseGroupBtn","addDefaultCaseGroupBtn","_Utils$TreeUtils","SwitchGroup","hasDefaultCase","_this$props$children","_this$props$children2","totalCasesCnt","_this$props$children3","casesToReorder","_this$props$children4","_this$props$config$se","canLeaveEmptyCase","canRegroupCases","CaseGroup","renderHeaderLeft","renderHeaderCenter","renderCondition","oneValue","getProperties","_props$properties","typeMap","rule_group","rule_group_ext","switch_group","case_group","_props$properties2","itemComponent","_Utils$DefaultUtils","Builder","_updPath","rootType","CanMoveFn","ConnectedSortableContainer","SortableContainer","_getEventTarget","__mocked_window","document","treeEl","closest","_isUsingLegacyReactDomRender","classList","groupPadding","treeElContainer","scrollTop","_getScrollParent","tmpAllGroups","_getDraggableNodeEl","_getPlaceholderNodeEl","querySelectorAll","anyGroup","getComputedStyle","getPropertyValue","offsetLeft","offsetTop","offsetWidth","offsetHeight","itemInfo","clientX","clientY","eventTarget","addEventListener","onDrag","onDragEnd","doHandleDrag","startDragging","startMousePos","__mock_dom","dragEl","plhEl","plX","getBoundingClientRect","scrollX","plY","scrollY","startX","startY","startClientX","startClientY","startScrollTop","pos","handleDrag","preventDefault","remove","_cacheEls","removeEventListener","_prevProps","_prevState","oldPlX","oldPlY","indexId","ignoreCache","contains","querySelector","els","getElementsByClassName","overflowY","scrollHeight","_isScrollable","dragInfo","canMoveFn","dragRect","plhRect","hovRect","treeRect","moveInfo","dragId","dragDirs","hrz","vrt","hovCNodeEl","trgCoord","__mocked_hov_container","hovNodeEl","elementFromPoint","_hovNodeEl$firstChild","rootGroupContainer","firstChild","hovNodeId","getAttribute","hovEl","doAppend","doPrepend","hovHeight","hovII","trgRect","trgEl","trgII","altII","hovInnerEl","hovEl2","hovRect2","hovHeight2","isSamePos","dragLeftOffset","dragLev","round","availMoves","altMoves","isToRoot","isToCase","prevCaseId","nextCaseId","prevCase","nextCase","addCaseII","am","toII","fromCaseII","toCaseII","bestMode","filteredMoves","trg","isInside","toParentII","canMove","levs","curLev","allLevs","closestDragLev","move","fromII","newDepthLev","isBeforeAfter","isPend","isLev1","isParentChange","isStructChange","isForbiddenStructChange","isLockedChange","isLastFromCase","newRulesInTargetCase","createSortableContainer","ValueField","needUpdateMeta","filteredFields","filterFields","_leftFieldConfig$widg","customPlaceholder","leftFieldWidgetField","leftFieldWidgetFieldProps","rightFieldKey","rightFieldFullkey","hideForCompare","customRadioYesProps","radioYes","customRadioNoProps","radioNo","onRadioChange","dtValue","opt","getMultiSelectValues","fontWeight","htmlFor","typeToLabel","btnLabel","confirm","VanillaProvider","Proximity","handleChange","defaultProximity","selectedProximity","proxValues","defaultProps","CoreConfig","ProximityOperator","VanillaTextWidget","VanillaTextAreaWidget","VanillaNumberWidget","VanillaSliderWidget","VanillaSelectWidget","VanillaMultiSelectWidget","VanillaDateWidget","VanillaTimeWidget","VanillaDateTimeWidget","VanillaBooleanWidget","ValueFieldWidget","VanillaFieldSelect","VanillaConjs","VanillaSwitch","VanillaButton","VanillaIcon","VanillaButtonGroup","VanillaValueSources","_ref25","_ref26","vanillaConfirm","Widgets","CustomOperators","C","P","_Utils$Autocomplete","_Utils$ListUtils","useLoadMore","useAsyncSearch","forceAsyncSearch","selectedAsyncListValues","staticListValues","knownSpecialValues","loadMoreTitle","loadingMoreTitle","setOpen","_React$useState3","_React$useState4","asyncFetchMeta","setAsyncFetchMeta","_React$useState5","_React$useState6","loadingCnt","setLoadingCnt","_React$useState7","_React$useState8","isLoadingMore","setIsLoadingMore","_React$useState9","_React$useState10","setInputValue","_React$useState11","_React$useState12","setAsyncListValues","asyncFectchCnt","componentIsMounted","isSelectedLoadMore","nSelectedAsyncListValues","listValuesToDisplay","canInitialLoad","canLoadMore","canShowLoadMore","fetchListValues","isLoadMore","newAsyncFetchCnt","newMeta","nValues","assumeHasMore","realNewMeta","_args","sent","loadListValues","_callee2","_args2","loadListValuesDebounced","debounce","_callee3","_callee4","isLoadMoreClick","_context4","_callee5","_option2","isClearingAll","isClearingInput","isClearingSingle","_option$value","_option","isAddingCustomOptionFromSearch","_optionsToListValues","_optionsToListValues2","_optionToListValue","_optionToListValue2","lvs","_context5","_x4","_callee6","newInputValue","eventType","shouldIgnore","_context6","_x5","_x6","_x7","onDropdownVisibleChange","isSpecialValue","valueOrOption","_valueOrOption$value","ReactUtils","webpackContext","req","webpackContextResolve","__webpack_require__","code","module","exports"],"sourceRoot":""}