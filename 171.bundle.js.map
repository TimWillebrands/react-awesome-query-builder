{"version":3,"file":"171.bundle.js","mappings":"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CA,OACA,WACA,cACA,YACA,YACA,WACA,eACA,UACA,eAEFqgC,YAAa,CAAC,EACdC,QAAS,CAAC,GAEZxzC,SAAU,CACRkT,UAAW,CACT,QACA,YACA,OACA,WACA,cACA,YACA,WACA,eACA,UACA,eAEFqgC,YAAa,CAAC,EACdC,QAAS,CAAC,GAEZ34C,MAAO,CACLqY,UAAW,CAET,QACA,YACA,gBAKRhT,OAAQ,CACNyyB,gBAAiB,QACjBld,WAAY,SACZ7V,QAAS,CACPM,OAAQ,CACNgT,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,gBAGJrb,OAAQ,CACNqb,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBAGA,UACA,kBAKRpS,KAAM,CACJ6xB,gBAAiB,QACjB/yB,QAAS,CACPkB,KAAM,CACJoS,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKRlS,KAAM,CACJ2xB,gBAAiB,QACjB/yB,QAAS,CACPoB,KAAM,CACJkS,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKRhS,SAAU,CACRyxB,gBAAiB,QACjB/yB,QAAS,CACPsB,SAAU,CACRgS,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKR1S,OAAQ,CACNiV,WAAY,SACZkd,gBAAiB,gBACjB/yB,QAAS,CACPY,OAAQ,CACN0S,UAAW,CACT,gBACA,oBAGA,UACA,gBAGJ9S,YAAa,CACX8S,UAAW,CACT,gBACA,oBAGA,UACA,kBAKR9S,YAAa,CACXuyB,gBAAiB,qBACjB/yB,QAAS,CACPQ,YAAa,CACX8S,UAAW,CACT,uBACA,2BACA,qBACA,yBAGA,UACA,kBAKRtS,QAAS,CACP+xB,gBAAiB,QACjB/yB,QAAS,CACPgB,QAAS,CACPsS,UAAW,CACT,QACA,YACA,UACA,eAEFqgC,YAAa,CAGX,GAGJ14C,MAAO,CACLqY,UAAW,CACT,QACA,gBAKR,SAAU,CACRyf,gBAAiB,OACjBld,WAAY,SA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","sources":["webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiDate.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiDateTime.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiTime.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiFieldAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiIcon.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiButton.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiConjs.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiValueSources.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/index.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiText.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiTextArea.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiNumber.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiSlider.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiRange.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiBoolean.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiSwitch.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiConfirm.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../core/modules/utils/uuid.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/listValues.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/treeUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/export.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/spel.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/defaultUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryString.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/validation/constains.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/validation/translations.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/validation.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/funcUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/ruleUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configSerialize.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/default.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configMemo.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configExtend.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryBuilder.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/mongoDb.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/sql.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/elasticSearch.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/autocomplete.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/funcs.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/ctx.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/group.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/rule.js","webpack://@react-awesome-query-builder/examples/../core/modules/index.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/context.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/drag.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/index.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/validationMemo.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/reactUtils.js","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Query.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/QueryContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/RuleContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/SortableContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/Draggable.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Operator.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/utils.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Field.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/WidgetFactory.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Widget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncWidget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FieldWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorOptions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Rule.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/GroupContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/GroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Group.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExtActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExt.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/CaseGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Item.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Builder.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/ValueField.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaBoolean.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaText.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTextArea.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDate.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDateTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaNumber.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSlider.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaConjs.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButton.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaIcon.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaValueSources.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaSwitch.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/vanillaConfirm.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/operators/Proximity.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/hooks/useListValuesAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/index.js","webpack://@react-awesome-query-builder/examples/../../node_modules/.pnpm/moment@2.30.1/node_modules/moment/locale/ sync [/\\\\](es-us(\\.js)"],"sourcesContent":["import React from \"react\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { moment } = Utils;\nconst xdpVersion = xdpPackage?.version?.split(\".\")?.[0];\n\nexport default (props) => {\n  const {value, setValue, readonly, customProps, dateFormat, valueFormat, placeholder} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n  \n  const renderInput = (params) => \n    <TextField \n      size=\"small\" \n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion === \"6\" ? {\n    format: dateFormat,\n    slotProps: {\n      textField: {\n        size: \"small\",\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: dateFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  const aValue = value ? (xdpVersion === \"6\" ? moment(value, valueFormat) : value) : null;\n\n  return (\n    <FormControl>\n      <DatePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        value={aValue}\n        onChange={handleChange}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};","import React from \"react\";\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { moment } = Utils;\nconst xdpVersion = xdpPackage?.version?.split(\".\")?.[0];\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, dateFormat, timeFormat, valueFormat, customProps} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const dateTimeFormat = dateFormat + \" \" + timeFormat;\n  \n  const renderInput = (params) => \n    <TextField \n      size=\"small\" \n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion === \"6\" ? {\n    format: dateTimeFormat,\n    slotProps: {\n      textField: {\n        size: \"small\",\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: dateTimeFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  const aValue = value ? (xdpVersion === \"6\" ? moment(value, valueFormat) : value) : null;\n\n  return (\n    <FormControl>\n      <DateTimePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        value={aValue}\n        onChange={handleChange}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nimport { TimePicker } from \"@mui/x-date-pickers/TimePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nconst { moment } = Utils;\nconst xdpVersion = xdpPackage?.version?.split(\".\")?.[0];\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, timeFormat, valueFormat, customProps} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const hasSeconds = timeFormat.indexOf(\":ss\") != -1;\n  const timeValue = value ? moment(value, timeFormat) : null;\n\n  const renderInput = (params) => \n    <TextField \n      size=\"small\" \n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion === \"6\" ? {\n    format: timeFormat,\n    slotProps: {\n      textField: {\n        size: \"small\",\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: timeFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  return (\n    <FormControl>\n      <TimePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        value={timeValue}\n        onChange={handleChange}\n        views={hasSeconds ? [\"hours\", \"minutes\", \"seconds\"] : [\"hours\", \"minutes\"]}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = () =>\n    mapListValues(listValues, ({title, value}) => {\n      return <MenuItem key={value} value={value}>{title}</MenuItem>;\n    });\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  const renderValue = (selectedValue) => {\n    if (!readonly && selectedValue == null)\n      return placeholder;\n    return getListValueTitle(selectedValue);\n  };\n\n  const getListValueTitle = (selectedValue) => \n    mapListValues(listValues, ({title, value}) => \n      (value === selectedValue ? title : null)\n    )\n      .filter(v => v !== null)\n      .shift();\n  \n  const hasValue = value != null;\n\n  return (\n    <FormControl>\n      <Select\n        variant=\"standard\"\n        autoWidth\n        displayEmpty\n        placeholder={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : \"\"}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        size=\"small\"\n        {...omit(customProps, [\"showSearch\", \"input\"])}\n      >\n        {renderOptions()}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = (selectedValues) => \n    mapListValues(listValues, ({title, value}) => {\n      return (\n        <MenuItem key={value} value={value}>\n          <Checkbox checked={selectedValues.indexOf(value) > -1} />\n          <ListItemText primary={title} />\n        </MenuItem>\n      );\n    });\n\n  const renderValue = (selectedValues) => {\n    if (!readonly && !selectedValues.length)\n      return placeholder;\n    const selectedTitles = mapListValues(listValues, ({title, value}) => (\n      selectedValues.indexOf(value) > -1 ? title : null\n    )).filter(v => v !== null);\n    return selectedTitles.join(\", \");\n  };\n\n  const hasValue = value != null && value.length > 0;\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  return (\n    <FormControl>\n      <Select multiple\n        variant=\"standard\"\n        autoWidth\n        displayEmpty\n        label={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : []}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        size=\"small\"\n        {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n      >\n        {renderOptions(hasValue ? value : [])}\n      </Select>\n    </FormControl>\n  );\n};\n","import React, {useCallback} from \"react\";\nimport omit from \"lodash/omit\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Chip from \"@mui/material/Chip\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Check from \"@mui/icons-material/Check\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport { Hooks } from \"@react-awesome-query-builder/ui\";\nimport { useTheme } from \"@mui/material/styles\";\nconst { useListValuesAutocomplete } = Hooks;\nconst emptyArray = [];\n\n// tip: option can contain `group: {label, title}` intead of `groupTitle`\n// but it's internal format, made for field autocomplete\n// see `JSON.stringify(option.group)` and `JSON.parse(groupMaybeJson)`\n\nexport default (props) => {\n  const {\n    allowCustomValues, multiple, disableClearable,\n    value: selectedValue, customProps, readonly, config, filterOptionsConfig, errorText,\n    tooltipText, isFieldAutocomplete,\n  } = props;\n  const stringifyOption = useCallback((option) => {\n    const keysForFilter = config.settings.listKeysForSearch;\n    const valueForFilter = keysForFilter\n      .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n      .join(\"\\0\");\n    return valueForFilter;\n  }, [config]);\n  const defaultFilterOptionsConfig = {\n    stringify: stringifyOption\n  };\n  const filterOptionsFn = createFilterOptions(filterOptionsConfig || defaultFilterOptionsConfig);\n\n  // hook\n  const {\n    open,\n    onOpen,\n    onClose,\n    onChange,\n    onInputChange,\n    inputValue,\n    options,\n    isInitialLoading,\n    isLoading,\n    aPlaceholder,\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    selectedListValue,\n  } = useListValuesAutocomplete(props, {\n    debounceTimeout: 100,\n    multiple,\n    uif: \"mui\",\n    isFieldAutocomplete,\n  });\n\n  // settings\n  const {defaultSelectWidth, defaultSearchWidth} = config.settings;\n  const {width, ...rest} = customProps || {};\n  let customInputProps = rest.input || {};\n  const inputWidth = customInputProps.width || defaultSearchWidth; // todo: use as min-width for Autocomplete comp\n  customInputProps = omit(customInputProps, [\"width\"]);\n  const customAutocompleteProps = omit(rest, [\"showSearch\", \"showCheckboxes\"]);\n\n  const fullWidth = false;\n  const minWidth = width || defaultSelectWidth;\n  const style = {\n    width: (multiple ? undefined : minWidth),\n    minWidth: minWidth\n  };\n  const placeholder = !readonly ? aPlaceholder : \"\";\n\n  // For accessibility, always give the input field an aria-label\n  const ariaLabel = placeholder || config.settings.fieldPlaceholder;\n\n  const hasValue = selectedValue != null;\n  // should be simple value to prevent re-render!s\n  const value = hasValue ? selectedValue : (multiple ? emptyArray : null);\n\n  const filterOptions = (options, params) => {\n    const filtered = filterOptionsFn(options, params);\n    const extended = extendOptions(filtered);\n    return extended;\n  };\n\n  const groupBy = (option) => option?.group ? JSON.stringify(option.group) : option?.groupTitle;\n\n  const theme = useTheme();\n\n  // render\n  const renderInput = (params) => {\n    // parity with Antd\n    const shouldRenderSelected = !multiple && !open;\n    const selectedTitle = selectedListValue?.title ?? value?.toString() ?? \"\";\n    const shouldHide = multiple && !open;\n    const renderValue = shouldRenderSelected ? selectedTitle : (shouldHide ? \"\" : inputValue ?? value?.toString() ?? \"\");\n    return (\n      <TextField \n        variant=\"standard\"\n        {...params}\n        inputProps={{\n          \"aria-label\": ariaLabel,\n          ...params.inputProps,\n          value: renderValue,\n        }}\n        InputProps={{\n          ...params.InputProps,\n          readOnly: readonly,\n          endAdornment: (\n            <React.Fragment>\n              {isLoading ? <CircularProgress color=\"inherit\" size={20}  /> : null}\n              {params.InputProps.endAdornment}\n            </React.Fragment>\n          ),\n        }}\n        disabled={readonly}\n        placeholder={placeholder}\n        error={!!errorText}\n        //onChange={onInputChange}\n        {...customInputProps}\n      />\n    );\n  };\n\n  const GroupHeader = ({groupMaybeJson}) => {\n    if (!groupMaybeJson) return null;\n    let group = {\n      label: groupMaybeJson,\n    };\n    if (typeof groupMaybeJson === \"string\" && groupMaybeJson[0] === \"{\") {\n      try {\n        group = JSON.parse(groupMaybeJson);\n      } catch (_) {\n        // ignore\n      }\n    }\n    let groupLabel = group.label;\n    if (groupLabel && group.tooltip) {\n      groupLabel = (\n        <Tooltip title={group.tooltip} placement=\"left-start\"><span>{groupLabel}</span></Tooltip>\n      );\n    }\n    let res = (\n      <div style={{\n        position: \"sticky\",\n        top: \"-8px\",\n        padding: \"4px 10px\",\n        color: theme.palette.primary.main,\n        backgroundColor: theme.palette.background.default,\n      }}>\n        {groupLabel}\n      </div>\n    );\n    return res;\n  };\n\n  const GroupItems = ({children}) => {\n    return <>{children}</>;\n  };\n\n  const renderGroup = (params) => {\n    let res = (\n      <div key={params.key}>\n        <GroupHeader groupMaybeJson={params.group} />\n        <GroupItems>{params.children}</GroupItems>\n      </div>\n    );\n    return res;\n  };\n\n  const renderTags = (value, getTagProps) => value.map((option, index) => {\n    return <Chip\n      key={option.value}\n      label={getOptionLabel(option)}\n      size={\"small\"}\n      variant={getOptionIsCustom(option) ? \"outlined\" : \"filled\"}\n      {...getTagProps({ index })}\n    />;\n  });\n\n  const isOptionEqualToValue = (option, value) => {\n    return option?.value == value;\n  };\n\n  const renderOption = (props, option) => {\n    const { title, renderTitle, value, isHidden, tooltip, group, groupTitle } = option;\n    const isGrouped = groupTitle || group;\n    const isSelected = multiple ? (selectedValue || []).includes(value) : selectedValue == value;\n    const className = getOptionIsCustom(option) ? \"customSelectOption\" : undefined;\n    const prefix = !isFieldAutocomplete && isGrouped ? \"\\u00A0\\u00A0\" : \"\";\n    const finalTitle = (renderTitle || prefix + title);\n    let titleSpan = (\n      <span className={className}>\n        {finalTitle}\n      </span>\n    );\n    if (tooltip) {\n      titleSpan = (\n        <Tooltip title={tooltip} placement=\"left-start\">{titleSpan}</Tooltip>\n      );\n    }\n    if (isHidden)\n      return null;\n    if (option.specialValue) {\n      return <div {...props}>{finalTitle}</div>;\n    } else if (multiple) {\n      const itemContent = isSelected ? (\n        <><ListItemIcon><Check /></ListItemIcon>{titleSpan}</>\n      ) : (\n        <ListItemText inset>{titleSpan}</ListItemText>\n      );\n      return (\n        <MenuItem\n          {...props}\n          size={\"small\"}\n          selected={isSelected}\n        >{itemContent}</MenuItem>\n      );\n    } else {\n      return <div {...props}>{titleSpan}</div>;\n    }\n  };\n  \n  let res = (\n    <Autocomplete\n      disableClearable={disableClearable}\n      disableCloseOnSelect={multiple}\n      fullWidth={fullWidth}\n      multiple={multiple}\n      style={style}\n      freeSolo={allowCustomValues}\n      loading={isInitialLoading}\n      open={open}\n      onOpen={onOpen}\n      onClose={onClose}\n      inputValue={inputValue}\n      onInputChange={onInputChange}\n      label={placeholder}\n      onChange={onChange}\n      value={value}\n      disabled={readonly}\n      readOnly={readonly}\n      options={options}\n      groupBy={groupBy}\n      getOptionLabel={getOptionLabel}\n      getOptionDisabled={getOptionDisabled}\n      renderInput={renderInput}\n      renderGroup={renderGroup}\n      renderTags={renderTags}\n      renderOption={renderOption}\n      filterOptions={filterOptions}\n      isOptionEqualToValue={isOptionEqualToValue}\n      size=\"small\"\n      {...customAutocompleteProps}\n    />\n  );\n  if (tooltipText) {\n    res = (\n      <Tooltip title={!open ? tooltipText : null} placement=\"top-start\">{res}</Tooltip>\n    );\n  }\n  res = (\n    <FormControl fullWidth={fullWidth}>{res}</FormControl>\n  );\n  return res;\n};\n","import React, {useCallback} from \"react\";\nimport MuiAutocomplete from \"../value/MuiAutocomplete\";\n\n// see type FieldItemSearchableKeys\nconst mapFieldItemToOptionKeys = {\n  key: \"_value2\",\n  path: \"value\",\n  label: \"title\",\n  altLabel: \"_altLabel\",\n  tooltip: \"tooltip\",\n  grouplabel: \"groupTitle\",\n};\n\nconst itemsToListValues = (items, level = 0) => (\n  items.map(item => {\n    const {items, path, key, label, altLabel, disabled, grouplabel, group, matchesType, tooltip} = item;\n    const prefix = \"\\u00A0\\u00A0\".repeat(level);\n    if (items) {\n      return itemsToListValues(items, level+1);\n    } else {\n      return {\n        title: label,\n        renderTitle: matchesType ? <b>{prefix+label}</b> : prefix+label,\n        value: path,\n        disabled,\n        groupTitle: level > 0 ? prefix+grouplabel : null,\n        group: level > 0 ? {\n          ...group,\n          label: prefix+group.label,\n        } : null,\n        tooltip: tooltip,\n        _value2: key,\n        _altLabel: altLabel,\n      };\n    }\n  }).flat(Infinity)\n);\n\nconst fieldAdapter = ({\n  items, selectedKey, setField, isValueField,\n  selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n  ...rest\n}, config) => {\n  let tooltipText = selectedAltLabel || selectedFullLabel;\n  if (tooltipText == selectedLabel)\n    tooltipText = null;\n  const listValues = itemsToListValues(items);\n  const value = selectedKey;\n  const setValue = (value, _asyncValues) => {\n    if (!value && !isValueField) return undefined;\n    return setField(value);\n  };\n  const filterOptionsConfig = {\n    stringify: useCallback((option) => {\n      const keysForFilter = config.settings.fieldItemKeysForSearch\n        .map(k => mapFieldItemToOptionKeys[k]);\n      const valueForFilter = keysForFilter\n        .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n        .join(\"\\0\");\n      return valueForFilter;\n    }, [config])\n  };\n\n  return {\n    ...rest,\n    tooltipText,\n    listValues,\n    setValue,\n    filterOptionsConfig,\n    allowCustomValues: false,\n    multiple: false,\n    disableClearable: !isValueField,\n    value,\n    isFieldAutocomplete: true,\n  };\n};\n\nexport default (props) => {\n  return <MuiAutocomplete  {...fieldAdapter(props, props.config)} />;\n};\n","import React from \"react\";\nimport DragHandle from \"@mui/icons-material/DragHandle\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport Icon from \"@mui/material/Icon\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { DragIcon } = Utils;\n\nconst typeToIcon = {\n  \"delGroup\": <DeleteIcon />,\n  \"delRuleGroup\": <DeleteIcon />,\n  \"delRule\": <DeleteIcon />,\n  \"addRuleGroup\": <AddIcon />,\n  \"addRuleGroupExt\": <AddIcon />,\n  \"addRule\": <AddIcon />,\n  \"addGroup\": <AddIcon />,\n  \"drag\": <DragHandle />,\n};\n\nconst typeToColor = {\n  // \"addRule\": \"primary\",\n  // \"addGroup\": \"primary\",\n  // \"delGroup\": \"secondary\",\n  // \"delRuleGroup\": \"secondary\",\n  // \"delRule\": \"secondary\",\n  \"drag\": \"primary\",\n};\n\nexport default ({type, readonly}) => {\n  let icon = typeToIcon[type] || null;\n  if (!icon && type === \"drag\") {\n    return <DragIcon />;\n  }\n\n  if (type === \"drag\") {\n    return (\n      <Icon\n        size=\"small\" \n        disabled={readonly} \n        color={typeToColor[type]}\n      >{icon}</Icon>\n    );\n  } else {\n    return icon;\n  }\n};\n","import React, { memo } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\n\nconst hideLabelsFor = {\n  \"addRuleGroup\": true,\n  \"addRuleGroupExt\": true,\n  \"delGroup\": true,\n  \"delRuleGroup\": true,\n  \"delRule\": true,\n};\n\nconst typeToColor = {\n  \"addRule\": \"primary\",\n  \"addGroup\": \"primary\",\n  \"delGroup\": \"secondary\",\n  \"delRuleGroup\": \"secondary\",\n  \"delRule\": \"secondary\",\n};\n\nexport default memo((props) => {\n  const {type, label, onClick, readonly, renderIcon} = props;\n  const iconProps = {\n    type,\n    readonly,\n  };\n  const icon = renderIcon?.(iconProps);\n\n  if (!label || hideLabelsFor[type]) {\n    // For icons, use the label as aria-label for accessibility\n    return (\n      <IconButton\n        size=\"small\" \n        disabled={readonly} \n        onClick={onClick} \n        color={typeToColor[type]}\n        aria-label={label}\n      >{icon}</IconButton>\n    );\n  } else {\n    return (\n      <Button \n        size=\"small\" \n        disabled={readonly} \n        onClick={onClick} \n        color={typeToColor[type]} \n        startIcon={icon}\n      >{label}</Button>\n    );\n  }\n});\n","import React, { useCallback } from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport Button from \"@mui/material/Button\";\n\nconst Conj = React.memo(({\n  conjKey, id, name, label, checked,\n  setConjunction, readonly, disabled,\n}) => {\n  const onClick = useCallback(() => {\n    setConjunction(conjKey);\n  }, [conjKey, setConjunction]);\n  const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n  if ((readonly || disabled) && !checked) {\n    return null;\n  }\n  return (\n    <Button \n      key={id+postfix} \n      id={id+postfix} \n      color={checked ? \"primary\" : \"inherit\"} \n      value={conjKey} \n      onClick={onClick} \n      disabled={readonly || disabled}\n    >\n      {label}\n    </Button>\n  );\n});\n\nconst Conjs = React.memo(({\n  id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel\n}) => {\n  //TIP: disabled=true if only 1 rule; readonly=true if immutable mode\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(conjKey => {\n      const { id, name, label, checked } = conjunctionOptions[conjKey];\n      const conjProps = {\n        conjKey, id, name, label, checked,\n        setConjunction, readonly, disabled,\n      };\n      return (\n        <Conj key={id} {...conjProps} />\n      );\n    });\n  \n  const onNotClick = useCallback(() => {\n    setNot(!not);\n  }, [not, setNot]);\n\n  const renderNot = () => {\n    if (readonly && !not)\n      return null;\n    return (\n      <Button \n        key={id}\n        id={id + \"__not\"}\n        color={not ? \"error\" : \"inherit\"} \n        onClick={onNotClick} \n        disabled={readonly}\n      >\n        {notLabel || \"NOT\"}\n      </Button>\n    );\n  };\n\n  return (\n    <FormControl>\n      <ButtonGroup \n        disableElevation \n        variant=\"contained\" \n        size=\"small\"\n        disabled={readonly}\n      >\n        {showNot && renderNot()}\n        {showConj && renderOptions()}\n      </ButtonGroup>\n    </FormControl>\n  );\n});\n\nexport default Conjs;\n","import React, { useCallback } from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ExpandMoreSharpIcon from \"@mui/icons-material/ExpandMoreSharp\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Check from \"@mui/icons-material/Check\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\n\nconst ValueSource = React.memo(({ valueSrc, srcKey, handleChange, info }) => {\n  const isSelected = valueSrc == srcKey || !valueSrc && srcKey == \"value\";\n  const onClick = useCallback(\n    (e) => handleChange(e, srcKey),\n    [handleChange, srcKey]\n  );\n  return (\n    <MenuItem\n      value={srcKey}\n      selected={isSelected}\n      onClick={onClick}\n    >\n      {!isSelected && <ListItemText inset>{info.label}</ListItemText>}\n      {isSelected && <><ListItemIcon><Check /></ListItemIcon>{info.label}</>}\n    </MenuItem>\n  );\n});\n\nconst ValueSources = React.memo(({ valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleOpen = useCallback((event) => {\n    setAnchorEl(event.currentTarget);\n  }, [setAnchorEl]);\n\n  const handleClose = useCallback(() => {\n    setAnchorEl(null);\n  }, [setAnchorEl]);\n\n  const toggleOpenClose = useCallback((event) => {\n    anchorEl ? handleClose() : handleOpen(event);\n  }, [handleClose, handleOpen, anchorEl]);\n\n  const handleChange = useCallback((_e, srcKey) => {\n    setValueSrc(srcKey);\n    handleClose();\n  }, [handleClose, setValueSrc]);\n\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => {\n      return <ValueSource\n        key={srcKey}\n        valueSrc={valueSrc}\n        srcKey={srcKey}\n        handleChange={handleChange}\n        info={info}\n      />;\n    })\n  );\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <div>\n      <IconButton size=\"small\" onClick={toggleOpenClose}>\n        <ExpandMoreSharpIcon />\n      </IconButton>\n\n      <Menu\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n      >\n        <FormControl component=\"fieldset\" sx={{ p: 0 }}>\n          <FormLabel component=\"legend\" sx={{ p: 2, pt: 0, pb: 1 }}>{title}</FormLabel>\n          {renderOptions(valueSources)}\n        </FormControl>\n      </Menu>\n    </div>\n  );\n});\n\nexport default ValueSources;\n","import React from \"react\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport { ConfirmProvider, useConfirm } from \"material-ui-confirm\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterMoment } from \"@mui/x-date-pickers/AdapterMoment\"; // TODO: set moment to dayjs\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\n\nconst xdpVersion = xdpPackage?.version?.split(\".\")?.[0];\n\n// value widgets\nimport MuiTextWidget from \"./value/MuiText\";\nimport MuiTextAreaWidget from \"./value/MuiTextArea\";\nimport MuiDateWidget from \"./value/MuiDate\";\nimport MuiDateTimeWidget from \"./value/MuiDateTime\";\nimport MuiTimeWidget from \"./value/MuiTime\";\nimport MuiSelectWidget from \"./value/MuiSelect\";\nimport MuiNumberWidget from \"./value/MuiNumber\";\nimport MuiSliderWidget from \"./value/MuiSlider\";\nimport MuiRangeWidget from \"./value/MuiRange\";\nimport MuiBooleanWidget from \"./value/MuiBoolean\";\nimport MuiMultiSelectWidget from \"./value/MuiMultiSelect\";\nimport MuiAutocompleteWidget from \"./value/MuiAutocomplete\";\n\n// field select widgets\nimport MuiFieldSelect from \"./core/MuiFieldSelect\";\nimport MuiFieldAutocomplete from \"./core/MuiFieldAutocomplete\";\n\n// core components\nimport MuiIcon from \"./core/MuiIcon\";\nimport MuiButton from \"./core/MuiButton\";\nimport MuiButtonGroup from \"./core/MuiButtonGroup\";\nimport MuiConjs from \"./core/MuiConjs\";\nimport MuiSwitch from \"./core/MuiSwitch\";\nimport MuiValueSources from \"./core/MuiValueSources\";\nimport MuiConfirm from \"./core/MuiConfirm\";\n\n// provider\nconst MuiProvider = ({config, children}) => {\n  const settingsTheme = config.settings.theme || {};\n  const settingsLocale = config.settings.locale || {};\n  const momentLocale = settingsLocale.moment;\n  const themeConfig = settingsTheme.mui;\n  const locale = settingsLocale.mui;\n  const theme = createTheme(themeConfig, locale, { \n    palette: {\n      // neutral: {\n      //   main: \"#64748B\",\n      //   contrastText: \"#fff\"\n      // },\n    }\n  });\n\n  const locProviderProps = xdpVersion === \"6\" ? {\n    locale: momentLocale,\n  } : {\n    adapterLocale: momentLocale,\n  };\n\n  const base = (<div className=\"mui\">{children}</div>);\n  const withProviders = (\n    <LocalizationProvider dateAdapter={AdapterMoment} {...locProviderProps} >\n      <ConfirmProvider>\n        {base}\n      </ConfirmProvider>\n    </LocalizationProvider>\n  );\n  const withTheme = theme ? (\n    <ThemeProvider theme={theme}>\n      {withProviders}\n    </ThemeProvider>\n  ) : withProviders;\n\n  return withTheme;\n};\n\n\nexport default {\n  MuiTextWidget,\n  MuiTextAreaWidget,\n  MuiDateWidget,\n  MuiDateTimeWidget,\n  MuiTimeWidget,\n  MuiSelectWidget,\n  MuiNumberWidget,\n  MuiSliderWidget,\n  MuiRangeWidget,\n  MuiBooleanWidget,\n  MuiMultiSelectWidget,\n  MuiAutocompleteWidget,\n\n  MuiFieldSelect,\n  MuiFieldAutocomplete,\n\n  MuiIcon,\n  MuiButton,\n  MuiButtonGroup,\n  MuiConjs,\n  MuiSwitch,\n  MuiValueSources,\n  MuiConfirm,\n  MuiUseConfirm: useConfirm,\n\n  MuiProvider,\n};\n","import React, { useCallback } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength, errorMessage} = props;\n\n  const onChange = useCallback((e) => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n\n    setValue(val);\n  }, [setValue]);\n  const textValue = value || \"\";\n\n  return (\n    <FormControl>\n      <TextField \n        variant=\"standard\"\n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        size=\"small\"\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength, maxRows, fullWidth} = props;\n  const {defaultMaxRows} = config.settings;\n\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  \n  const textValue = value || \"\";\n\n  return (\n    <FormControl fullWidth={fullWidth}>\n      <TextField \n        variant=\"standard\"\n        fullWidth={fullWidth}\n        maxRows={maxRows || defaultMaxRows}\n        multiline={true}\n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        size=\"small\"\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps} = props;\n  \n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n\n  const numberValue = value == undefined ? \"\" : value;\n\n  const InputProps = useMemo(() => ({\n    readOnly: readonly,\n  }), [\n    readonly\n  ]);\n\n  const inputProps = useMemo(() => ({\n    min,\n    max,\n    step,\n  }), [\n    min, max, step\n  ]);\n  \n  return (\n    <FormControl>\n      <TextField \n        variant=\"standard\"\n        type=\"number\"\n        value={numberValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={InputProps}\n        inputProps={inputProps}\n        disabled={readonly}\n        onChange={onChange}\n        size=\"small\"\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React, { useCallback, useMemo } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {config, placeholder, customProps, value, setValue, min, max, step, marks, readonly} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  const handleSliderChange = useCallback((_e, newValue) => {\n    setValue(newValue);\n  }, [setValue]);\n\n  const handleInputChange = useCallback((e) => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  }, [setValue]);\n\n  const handleInputBlur = useCallback((e) => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    // TIP: Fix if typed value out of range in input\n    if (val < min) {\n      setValue(min);\n    } else if (val > max) {\n      setValue(max);\n    }\n  }, [setValue, min, max]);\n\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n  \n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0\n  const inputValue = typeof value === \"number\" ? value : \"\";\n  const sliderValue = typeof value === \"number\" ? value : null;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = useMemo(() => marks ? Object.keys(marks).map(v => ({\n    value: Number(v),\n    label: typeof marks[v] === \"object\" || typeof marks[v] === \"undefined\" ? marks[v] : <p>{marks[v]}</p>\n  })) : false, [marks]);\n\n  const InputProps = useMemo(() => ({\n    readOnly: readonly,\n  }), [\n    readonly\n  ]);\n\n  const inputProps = useMemo(() => ({\n    min,\n    max,\n    step,\n  }), [\n    min, max, step\n  ]);\n\n  const InputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={inputValue}\n      placeholder={placeholder}\n      InputProps={InputProps}\n      inputProps={inputProps}\n      disabled={readonly}\n      onChange={handleInputChange}\n      onBlur={handleInputBlur}\n      size=\"small\"\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      size=\"small\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    alignItems: \"center\",\n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {InputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {config, placeholders, customProps, value, setValue, min, max, step, marks, readonly, textSeparators} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  useEffect(() => {\n    const [valueFrom, valueTo] = props.value || [undefined, undefined];\n    if (props.value && (valueFrom == undefined || valueTo == undefined)) {\n      // happens if we changed op from '==' to 'between'\n      // (I know, timeout is dirty hack..)\n      // setTimeout(() => {\n      //   const oneValue = valueFrom || valueTo;\n      //   const value = [oneValue, oneValue];\n      //   setValue(value);\n      // }, 1);\n    }\n  }, []);\n\n  const handleSliderChange = (_e, newValues) => {\n    setValue(newValues);\n  };\n\n  const handleInputChangeFrom = (e) => {\n    // TIP: need to use props.value instead of value\n    let valueFrom = e.target.value;\n    if (valueFrom === \"\" || valueFrom == null)\n      valueFrom = undefined;\n    else\n      valueFrom = Number(valueFrom);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[0] = valueFrom;\n    setValue(value);\n  };\n\n  const handleInputChangeTo = (e) => {\n    let valueTo = e.target.value;\n    if (valueTo === \"\" || valueTo == null)\n      valueTo = undefined;\n    else\n      valueTo = Number(valueTo);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[1] = valueTo;\n    setValue(value);\n  };\n\n  const handleInputBlur = () => {\n    // TIP: Fix if typed value out of range in inputs\n    if (!value) return;\n    if (value[0] < min) {\n      setValue([min, value[1]]);\n    } else if (value[1] > max) {\n      setValue([value[0], max]);\n    }\n  };\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = marks ? Object.keys(marks).map(v => ({\n    value: Number(v),\n    label: typeof marks[v] === \"object\" || typeof marks[v] === \"undefined\" ? marks[v] : <p>{marks[v]}</p>\n  })) : false;\n\n\n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0, but null will cause problems with range mode\n  let sliderValue = value ? [...value] : [undefined, undefined];\n  let [valueFrom, valueTo] = sliderValue;\n  if (valueFrom == undefined) {\n    valueFrom = \"\";\n    sliderValue[0] = 0;\n  }\n  if (valueTo == undefined) {\n    valueTo = \"\";\n    sliderValue[1] = 0;\n  }\n  \n\n  const FromInputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={valueFrom}\n      placeholder={placeholders[0]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeFrom}\n      onBlur={handleInputBlur}\n      size=\"small\"\n      {...customInputProps}\n    />\n  );\n\n  const ToInputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={valueTo}\n      placeholder={placeholders[1]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeTo}\n      onBlur={handleInputBlur}\n      size=\"small\"\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      size=\"small\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {FromInputCmp}\n        </div>\n        <div className={\"widget--sep\"}>\n          <span>{ textSeparators[1] }</span>\n        </div>\n        <div style={stylesInputWrapper}>\n          {ToInputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Switch from \"@mui/material/Switch\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\n\nexport default (props) => {\n  const { customProps, value, setValue, labelYes, labelNo, readonly } = props;\n\n  const onChange = () => {\n    setValue(!value);\n  };\n  \n  return (\n    <FormControl>\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\n          <Grid item component=\"span\">{labelNo}</Grid>\n          <Grid item component=\"span\">\n            <Switch\n              checked={!!value}\n              onChange={onChange}\n              disabled={readonly}\n              {...customProps}\n            />\n          </Grid>\n          <Grid item component=\"span\">{labelYes}</Grid>\n        </Grid>\n      </Typography>\n    </FormControl>\n  );\n};\n","import React, {useCallback, useState} from \"react\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport ListSubheader from \"@mui/material/ListSubheader\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\nexport default ({\n  items, setField, selectedKey, readonly, placeholder, errorText,\n  selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n}) => {\n  const [open, setOpen] = useState(false);\n\n  const onOpen = useCallback(() => {\n    setOpen(true);\n  }, [setOpen]);\n\n  const onClose = useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n\n  const renderOptions = (fields, level = 0) => (\n    Object.keys(fields).map(fieldKey => {\n      const field = fields[fieldKey];\n      const {items, path, label, disabled, matchesType, tooltip} = field;\n      const prefix = \"\\u00A0\\u00A0\".repeat(level);\n      let finalLabel = (\n        <span>\n          {prefix && <span>{prefix}</span>}\n          {matchesType ? <b>{label}</b> : label}\n        </span>\n      );\n      if (tooltip) {\n        finalLabel = (\n          <Tooltip title={tooltip} placement=\"left-start\">\n            {finalLabel}\n          </Tooltip>\n        );\n      }\n      if (items) {\n        return [\n          <ListSubheader disabled={disabled} key={path} disableSticky={true}>\n            {finalLabel}\n          </ListSubheader>,\n          renderOptions(items, level+1),\n        ];\n      } else {\n        return (\n          <MenuItem disabled={disabled} key={path} value={path}>\n            {finalLabel}\n          </MenuItem>\n        );\n      }\n    })\n  );\n\n  const onChange = useCallback(e => {\n    if (e.target.value === undefined)\n      return;\n    setField(e.target.value);\n  }, [setField]);\n\n  const renderValue = useCallback((selectedValue) => {\n    if (!readonly && !selectedValue)\n      return placeholder;\n    const findLabel = (fields) => {\n      return fields.map(field => {\n        if(!field.items) return field.path === selectedValue ? field.label : null;\n        return findLabel(field.items);\n      });\n    };\n    const label = findLabel(items).filter((v) => {\n      if (Array.isArray(v)) {\n        return v.some((value) => value !== null);\n      } else {\n        return v !== null;\n      }\n    }).pop();\n    return label;\n  }, [readonly, placeholder, items]);\n  \n  const hasValue = selectedKey != null;\n  let tooltipText = selectedAltLabel || selectedFullLabel;\n  if (tooltipText == selectedLabel)\n    tooltipText = null;\n  let res = (\n    <Select\n      error={!!errorText}\n      variant=\"standard\"\n      autoWidth\n      displayEmpty\n      placeholder={placeholder}\n      onChange={onChange}\n      value={hasValue ? selectedKey : \"\"}\n      disabled={readonly}\n      renderValue={renderValue}\n      size=\"small\"\n      open={open}\n      onOpen={onOpen}\n      onClose={onClose}\n    >\n      {renderOptions(items)}\n    </Select>\n  );\n  if (tooltipText) {\n    res = (\n      <Tooltip title={!open ? tooltipText : null}>{res}</Tooltip>\n    );\n  }\n  res = <FormControl>{res}</FormControl>;\n  return res;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\nimport Switch from \"@mui/material/Switch\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Button from \"@mui/material/Button\";\nimport LockOpenIcon from \"@mui/icons-material/LockOpen\";\nimport LockIcon from \"@mui/icons-material/Lock\";\n\nexport default ({value, setValue, label, checkedLabel, hideLabel, id, config, type}) => {\n  const {renderSize} = config.settings;\n  const onChange = e => setValue(e.target.checked);\n  const onClick = () => setValue(!value);\n  const postfix = type;\n  const showLabel = value ? (checkedLabel || label) : label;\n  const icon = value ? <LockIcon /> : <LockOpenIcon />;\n\n  if (type == \"lock\") {\n    if (hideLabel) {\n      return <IconButton\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n      >{icon}</IconButton>;\n    } else {\n      return <Button\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n        startIcon={icon}\n      >{showLabel}</Button>;\n    }\n  }\n\n  return <FormControlLabel \n    control={<Switch\n      checked={!!value}\n      size={\"small\"}\n      onChange={onChange}\n    />} \n    label={showLabel} \n  />;\n};\n","export default ({onOk, okText, cancelText, title, confirmFn}) => {\n  confirmFn({ \n    description: title || \"Are you sure?\",\n    title: null,\n    confirmationText: okText || \"Ok\",\n    cancellationText: cancelText || \"Cancel\",\n  })\n    .then(onOk)\n    .catch(() => {});\n};\n","import React from \"react\";\nimport MuiWidgets from \"../widgets\";\nimport { BasicConfig, Utils } from \"@react-awesome-query-builder/ui\";\n\n\nconst settings = {\n  ...BasicConfig.settings,\n\n  renderField: (props, {RCE, W: {MuiFieldAutocomplete, MuiFieldSelect}}) => props?.customProps?.showSearch \n    ? RCE(MuiFieldAutocomplete, props)\n    : RCE(MuiFieldSelect, props),\n  renderOperator: (props, {RCE, W: {MuiFieldSelect}}) => RCE(MuiFieldSelect, props),\n  renderFunc: (props, {RCE, W: {MuiFieldSelect}}) => RCE(MuiFieldSelect, props),\n  renderConjs: (props, {RCE, W: {MuiConjs}}) => RCE(MuiConjs, props),\n  renderSwitch: (props, {RCE, W: {MuiSwitch}}) => RCE(MuiSwitch, props),\n  renderButton: (props, {RCE, W: {MuiButton}}) => RCE(MuiButton, props),\n  renderIcon: (props, {RCE, W: {MuiIcon}}) => RCE(MuiIcon, props),\n  renderButtonGroup: (props, {RCE, W: {MuiButtonGroup}}) => RCE(MuiButtonGroup, props),\n  renderValueSources: (props, {RCE, W: {MuiValueSources}}) => RCE(MuiValueSources, props),\n  renderFieldSources: (props, {RCE, W: {MuiValueSources}}) => RCE(MuiValueSources, props),\n  renderProvider: (props, {RCE, W: {MuiProvider}}) => RCE(MuiProvider, props),\n  renderConfirm: (props, {W: {MuiConfirm}}) => MuiConfirm(props),\n  useConfirm: ({W: {MuiUseConfirm}}) => MuiUseConfirm(),\n};\n\nconst widgets = {\n  ...BasicConfig.widgets,\n  text: {\n    ...BasicConfig.widgets.text,\n    factory: (props, {RCE, W: {MuiTextWidget}}) => RCE(MuiTextWidget, props),\n  },\n  textarea: {\n    ...BasicConfig.widgets.textarea,\n    factory: (props, {RCE, W: {MuiTextAreaWidget}}) => RCE(MuiTextAreaWidget, props),\n  },\n  number: {\n    ...BasicConfig.widgets.number,\n    factory: (props, {RCE, W: {MuiNumberWidget}}) => RCE(MuiNumberWidget, props),\n  },\n  multiselect: {\n    ...BasicConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {MuiAutocompleteWidget, MuiMultiSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch) \n        ? RCE(MuiAutocompleteWidget, {...props, multiple: true}) \n        : RCE(MuiMultiSelectWidget, props);\n    },\n  },\n  select: {\n    ...BasicConfig.widgets.select,\n    factory: (props, {RCE, W: {MuiAutocompleteWidget, MuiSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch) \n        ? RCE(MuiAutocompleteWidget, props) \n        : RCE(MuiSelectWidget, props);\n    },\n  },\n  slider: {\n    ...BasicConfig.widgets.slider,\n    factory: (props, {RCE, W: {MuiSliderWidget}}) => RCE(MuiSliderWidget, props),\n  },\n  boolean: {\n    ...BasicConfig.widgets.boolean,\n    factory: (props, {RCE, W: {MuiBooleanWidget}}) => RCE(MuiBooleanWidget, props),\n  },\n  date: {\n    ...BasicConfig.widgets.date,\n    factory: (props, {RCE, W: {MuiDateWidget}}) => RCE(MuiDateWidget, props),\n  },\n  time: {\n    ...BasicConfig.widgets.time,\n    factory: (props, {RCE, W: {MuiTimeWidget}}) => RCE(MuiTimeWidget, props),\n  },\n  datetime: {\n    ...BasicConfig.widgets.datetime,\n    factory: (props, {RCE, W: {MuiDateTimeWidget}}) => RCE(MuiDateTimeWidget, props),\n  },\n  rangeslider: {\n    ...BasicConfig.widgets.rangeslider,\n    factory: (props, {RCE, W: {MuiRangeWidget}}) => RCE(MuiRangeWidget, props),\n  },\n};\n\nconst types = {\n  ...BasicConfig.types,\n};\n\nconst ctx = {\n  ...BasicConfig.ctx,\n  W: {\n    ...BasicConfig.ctx.W,\n    ...MuiWidgets,\n  },\n};\n\n\nlet config = {\n  ...BasicConfig,\n  ctx,\n  types,\n  widgets,\n  settings,\n};\nconfig = Utils.ConfigMixins.addMixins(config, [\n  \"rangeslider\",\n]);\n\nexport default config;\n","// Had to make uuid use a constant seed so it would generate same sequence across runs. This was needed\n// so server side rendering and client side rendering yield same results (e.g. the uuid is used when rendering\n// the concunctions with their name and id)\nvar query_builder_seed = 0;\nexport default () => {\n  // Generate a random GUID http://stackoverflow.com/a/2117523.\n  const timePart = (new Date().getTime().toString(16)+\"FF\").substr(0,11);\n  const s = \"ssssssss-xxxx-4xxx-yxxx-x\".replace(/[xys]/g, (c) => {\n    const r = c === \"s\" ? Math.floor(Math.random() * 16) : (query_builder_seed++) & 0xf;\n    const v = c === \"x\" ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n  return s + timePart;\n};\n","import Immutable, { Map } from \"immutable\";\nimport {default as uuid} from \"./uuid\";\n\nexport {uuid};\n\nexport const widgetDefKeysToOmit = [\n  \"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\", \"spelImportFuncs\", \"spelImportValue\"\n];\n\nexport const opDefKeysToOmit = [\n  \"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"\n];\n\nexport const isObject = (v) => {\n  return typeof v === \"object\" && v !== null && Object.prototype.toString.call(v) === \"[object Object]\";\n};\n\nexport const shallowCopy = (v) => {\n  if (typeof v === \"object\" && v !== null) {\n    if (Array.isArray(v)) {\n      return [...v];\n    } else if (isObject(v)) {\n      return {...v};\n    }\n  }\n  return v;\n};\n\nexport const omit = (obj, keys) => {\n  return Object.fromEntries(Object.entries(obj).filter(([k]) => !keys.includes(k)));\n};\n\n// RegExp.quote = function (str) {\n//     return str.replace(/([.?*+^$[\\]\\\\(){}|-])/g, \"\\\\$1\");\n// };\n\nexport const getOpCardinality = (opDef) => {\n  return opDef?.cardinality ?? 1;\n};\n\n// const immutableEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else {\n//     return v1.equals(v2);\n//   }\n// };\n\nexport const deepEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else if (Map.isMap(v1)) {\n    return v1.equals(v2);\n  } else {\n    return JSON.stringify(v1) == JSON.stringify(v2);\n  }\n};\n\n// //Do sets have same values?\n// const eqSet = function (as, bs) {\n//   if (as.size !== bs.size) return false;\n//   for (var a of as) if (!bs.has(a)) return false;\n//   return true;\n// };\n\n\n// //Do arrays have same values?\n// const eqArrSet = function (arr1, arr2) {\n//   return eqSet(new Set(arr1), new Set(arr2));\n// };\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (Map.isMap(a))\n    return a.equals(b);\n  else if (typeof a == \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport const isImmutable = (v) => {\n  return typeof v === \"object\" && v !== null && typeof v.toJS === \"function\";\n};\n\nexport function toImmutableList(v) {\n  return (isImmutable(v) ? v : new Immutable.List(v));\n}\n\nexport function applyToJS(v) {\n  return (isImmutable(v) ? v.toJS() : v);\n}\n\nexport const escapeRegExp = (string) => {\n  return string.replace(/[.*+?^${}()|[\\]\\\\/]/g, \"\\\\$&\"); // $& means the whole matched string\n};\n\nexport const mergeCustomizerNoArrays = (objValue, srcValue, _key, _object, _source, _stack) => {\n  if (Array.isArray(objValue)) {\n    return srcValue;\n  }\n};\n\nexport const cleanJSX = (jsx) => {\n  const jsxKeys = [\"$$typeof\", \"_owner\", \"_store\", \"ref\", \"key\"];\n\n  const getName = (val) => {\n    if (typeof val === \"string\") {\n      return val;\n    } else if (typeof val === \"function\") {\n      return val.name;\n    }\n    return val;\n  };\n\n  if (jsx instanceof Array) {\n    return jsx.map((el, _i) => cleanJSX(el));\n  } else if (typeof jsx === \"object\" && jsx !== null) {\n    if (isDirtyJSX(jsx)) {\n      const cleaned = omit(jsx, jsxKeys);\n      if (cleaned.type) {\n        cleaned.type = getName(cleaned.type);\n      }\n      if (cleaned?.props?.children) {\n        cleaned.props.children = cleanJSX(cleaned.props.children);\n      }\n      return cleaned;\n    }\n  }\n  return jsx;\n};\n\nexport const isDirtyJSX = (jsx) => {\n  return typeof jsx === \"object\"\n    && jsx !== null\n    && !Array.isArray(jsx)\n    && Object.keys(jsx).includes(\"type\")\n    && Object.keys(jsx).includes(\"props\") // even if {}\n    && Object.keys(jsx).includes(\"key\") // even if null\n    && Object.keys(jsx).includes(\"ref\") // even if null\n    && Object.keys(jsx).includes(\"$$typeof\"); // Symbol(react.element)\n};\n\nexport const isJSX = (jsx) => (\n  typeof jsx === \"object\"\n  && jsx !== null\n  && !Array.isArray(jsx)\n  && typeof jsx[\"type\"] === \"string\"\n  && Object.keys(jsx).includes(\"props\")\n);\n\nexport const isJsonLogic = (logic) => {\n  let isJL = typeof logic === \"object\" // An object\n    && logic !== null // but not null\n    && !Array.isArray(logic) // and not an array\n    && Object.keys(logic).length === 1; // with exactly one key\n  if (isJL) {\n    // additional checks ?\n  }\n  return isJL;\n};\n\nexport function sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\n\n// [1, 4, 9] + [1, 5, 9] => [1, 4, 5, 9]\n// Used for merging arrays of operators for different widgets of 1 type\nexport function mergeArraysSmart(arr1, arr2) {\n  if (!arr1) arr1 = [];\n  if (!arr2) arr2 = [];\n  return arr2\n    .map(op => [op, arr1.indexOf(op)])\n    .map(([op, ind], i, orig) => {\n      if (ind == -1) {\n        const next = orig.slice(i+1);\n        const prev = orig.slice(0, i);\n        const after = prev.reverse().find(([_cop, ci]) => ci != -1);\n        const before = next.find(([_cop, ci]) => ci != -1);\n        if (before)\n          return [op, \"before\", before[0]];\n        else if (after)\n          return [op, \"after\", after[0]];\n        else\n          return [op, \"append\", null];\n      } else {\n      // already exists\n        return null;\n      }\n    })\n    .filter(x => x !== null)\n    .reduce((acc, [newOp, rel, relOp]) => {\n      const ind = acc.indexOf(relOp);\n      if (acc.indexOf(newOp) == -1) {\n        if (ind > -1) {\n        // insert after or before\n          acc.splice( ind + (rel == \"after\" ? 1 : 0), 0, newOp );\n        } else {\n        // insert to end or start\n          acc.splice( (rel == \"append\" ? Infinity : 0), 0, newOp );\n        }\n      }\n      return acc;\n    }, arr1.slice());\n}\n\nexport const deepFreeze = obj => {\n  if (typeof obj === \"object\" && obj !== null && !isDirtyJSX(obj)) {\n    Object.keys(obj).forEach(prop => {\n      if (prop !== \"__cache\") {\n        deepFreeze(obj[prop]);\n      }\n    });\n    Object.freeze(obj);\n  }\n};\n\nexport const isJsonCompatible = (tpl, obj, bag = {}, path = []) => {\n  if (isObject(tpl)) {\n    if (tpl.var) {\n      bag[tpl.var] = obj;\n      return true;\n    }\n    if (!isObject(obj))\n      return false;\n    for (const k in tpl) {\n      const tv = tpl[k];\n      const ov = obj[k];\n      if (!isJsonCompatible(tv, ov, bag, [...path, k]))\n        return false;\n    }\n    return true;\n  } else if (Array.isArray(tpl)) {\n    if (!Array.isArray(obj))\n      return false;\n    for (let i = 0 ; i < tpl.length ; i++) {\n      const tv = tpl[i];\n      const ov = obj[i];\n      if (!isJsonCompatible(tv, ov, bag, [...path, i]))\n        return false;\n    }\n    return true;\n  } else {\n    return tpl === obj;\n  }\n};\n\nconst isDev = () => (typeof process !== \"undefined\" && process.env && process.env.NODE_ENV == \"development\");\n\nexport const getLogger = (devMode = false) => {\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\nexport const getFirstDefined = (arr = []) => {\n  let ret;\n  for (let i = 0 ; i < arr.length ; i++) {\n    const v = arr[i];\n    if (v !== undefined) {\n      ret = v;\n      break;\n    }\n  }\n  return ret;\n};\n\nexport const logger = getLogger();\n","\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const toListValue = (v, title) => {\n  if (v == null || v == \"\") {\n    return undefined;\n  } else if (isObject(v)) {\n    return {\n      ...v,\n      title: v.title || v.value, // fallback to value\n    };\n  } else {\n    return {\n      value: v,\n      title: (title !== undefined ? title : \"\"+v)\n    };\n  }\n};\n\nexport const makeCustomListValue = (v) => {\n  const lv = toListValue(v);\n  if (isObject(lv)) {\n    return {\n      ...toListValue(v),\n      isCustom: true,\n    };\n  } else { // only if undefined\n    return lv;\n  }\n};\n\n// convert {<value>: <title>, ..} or [value, ..] to normal [{value, title}, ..]\nexport const listValuesToArray = (listValuesObj) => {\n  if (Array.isArray(listValuesObj))\n    return listValuesObj.map(v => toListValue(v));\n  if (!isObject(listValuesObj))\n    return listValuesObj;\n  \n  let listValuesArr = [];\n  for (let v in listValuesObj) {\n    const title = listValuesObj[v];\n    listValuesArr.push(toListValue(v, title));\n  }\n  return listValuesArr;\n};\n\n// listValues can be {<value>: <title>, ..} or [{value, title}, ..] or [value, ..]\n// todo: same as getListValue() (but args are switched)\nexport const getItemInListValues = (listValues, value) => {\n  if (Array.isArray(listValues)) {\n    const values = listValues.map(v => toListValue(v));\n    return values.find(v => (\"\"+v.value === \"\"+value));\n  } else {\n    return listValues[value] !== undefined ? toListValue(value, listValues[value]) : undefined;\n  }\n};\n\nexport const getTitleInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.title : value;\n};\n\nexport const getValueInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.value : value;\n};\n\nexport const mapListValues = (listValues, mapFn) => {\n  let ret = [];\n  if (Array.isArray(listValues)) {\n    for (let v of listValues) {\n      const lv = mapFn(toListValue(v));\n      if (lv != null)\n        ret.push(lv);\n    }\n  } else {\n    for (let value in listValues) {\n      const lv = mapFn(toListValue(value, listValues[value]));\n      if (lv != null)\n        ret.push(lv);\n    }\n  }\n  return ret;\n};\n\nexport const searchListValue = (search, listValues) => \n  mapListValues(listValues, (lv) => (\n    `${lv.value}`.indexOf(search) != -1 || lv.title.indexOf(search) != -1\n      ? lv : null\n  ))\n    .filter(v => v !== null)\n    .shift();\n\nexport const getListValue = (selectedValue, listValues) => \n  mapListValues(listValues, \n    (lv) => (\"\"+lv.value === \"\"+selectedValue ? lv : null)\n  )\n    .filter(v => v !== null)\n    .shift();\n","import Immutable  from \"immutable\";\nimport {toImmutableList, isImmutable, applyToJS as immutableToJs} from \"./stuff\";\nimport {getTreeBadFields} from \"./validation\";\nimport {jsToImmutable} from \"../import/tree\";\nimport uuid from \"./uuid\";\n\nexport {\n  toImmutableList, jsToImmutable, immutableToJs, isImmutable,\n  // for backward compatibility\n  getTreeBadFields\n};\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreePath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.skip(1);\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreeSubpath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {Immutable.List} path\n * @return {Immutable.Map}\n */\nexport const getItemByPath = (tree, path) => {\n  let children = new Immutable.OrderedMap({ [tree.get(\"id\")] : tree });\n  let res = tree;\n  path.forEach((id) => {\n    res = children.get(id);\n    children = res?.get(\"children1\");\n  });\n  return res;\n};\n\n\n/**\n * Remove `path` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\n// export const removePathsInTree = (tree) => {\n//   let newTree = tree;\n\n//   function _processNode (item, path) {\n//     const itemPath = path.push(item.get(\"id\"));\n//     if (item.get(\"path\")) {\n//       newTree = newTree.removeIn(expandTreePath(itemPath, \"path\"));\n//     }\n\n//     const children = item.get(\"children1\");\n//     if (children) {\n//       children.map((child, _childId) => {\n//         _processNode(child, itemPath);\n//       });\n//     }\n//   }\n\n//   _processNode(tree, new Immutable.List());\n\n//   return newTree;\n// };\n\n\n/**\n * Remove `isLocked` in items that inherit parent's `isLocked`\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const removeIsLockedInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, isParentLocked = false) {\n    const itemPath = path.push(item.get(\"id\"));\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    if (isParentLocked && isLocked) {\n      newTree = newTree.deleteIn(expandTreePath(itemPath, \"properties\", \"isLocked\"));\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, itemPath, isLocked || isParentLocked);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List());\n\n  return newTree;\n};\n\n\n/**\n * Set correct `path` and `id` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const fixPathsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return;\n    const currPath = item.get(\"path\");\n    const currId = item.get(\"id\");\n    const itemId = currId || nodeId || uuid();\n    const itemPath = path.push(itemId);\n    if (!currPath || !currPath.equals(itemPath)) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"path\"), itemPath);\n    }\n    if (!currId) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"id\"), itemId);\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      if (children.constructor.name === \"Map\") {\n        // protect: should be OrderedMap, not Map (issue #501)\n        newTree = newTree.setIn(\n          expandTreePath(itemPath, \"children1\"), \n          new Immutable.OrderedMap(children)\n        );\n      }\n      children.map((child, childId) => {\n        _processNode(child, itemPath, lev + 1, childId);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\nexport const fixEmptyGroupsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return false;\n    const itemId = item.get(\"id\") || nodeId;\n    const itemPath = path.push(itemId);\n\n    const children = item.get(\"children1\");\n    if (children) {\n      const allChildrenGone = children.map((child, childId) => {\n        return _processNode(child, itemPath, lev + 1, childId);\n      }).reduce((curr, v) => (curr && v), true);\n      if ((children.size == 0 || allChildrenGone) && lev > 0) {\n        newTree = newTree.deleteIn(expandTreePath(itemPath));\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @return {Object} {flat, items}\n */\nexport const getFlatTree = (tree) => {\n  let flat = [];\n  let items = {};\n  let cases = [];\n  let visibleHeight = 0; // number of non-collapsed nodes\n  let globalLeafCount = 0;\n  let globalAtomicCount = 0;\n  let globalGroupCount = 0;\n  let globalCountByType = {};\n  // rule_group_ext can be counted as group  (group #x)\n  // or by similars (rule-group #x) (NOT both _ext and no ext)\n\n  function _flatizeTree (\n    item, path, insideCollapsed, insideLocked, insideRuleGroup, lev, caseId, childNo\n  ) {\n    const isRoot = item === tree;\n    const type = item.get(\"type\");\n    const collapsed = item.get(\"collapsed\");\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    const childrenIds = children ? children.map((_child, childId) => childId).valueSeq().toArray() : null;\n    const isRuleGroup = type === \"rule_group\";\n    const isRule = type === \"rule\";\n    const isGroup = type === \"group\";\n    const isCaseGroup = type === \"case_group\";\n    // tip: count rule_group as 1 atomic rule\n    const isAtomicRule = !insideRuleGroup && (!children || isRuleGroup);\n    const hasChildren = childrenIds?.length > 0;\n    const parentId = path.length ? path[path.length-1] : null;\n    const currentCaseId = isCaseGroup ? id : caseId;\n\n    // Calculations before\n    if (isCaseGroup) {\n      cases.push(id);\n      // reset counters\n      globalLeafCount = 0;\n      globalAtomicCount = 0;\n      globalGroupCount = 0;\n      globalCountByType = {};\n    }\n    const caseNo = currentCaseId ? cases.indexOf(currentCaseId) : null;\n    const itemsBefore = flat.length;\n    const top = visibleHeight;\n\n    let position;\n    if (!isRoot) {\n      position = {};\n      position.caseNo = caseNo;\n      position.globalNoByType = isCaseGroup ? caseNo : globalCountByType[type] || 0;\n      position.indexPath = [ ...path.slice(1).map(id => items[id].childNo), childNo ];\n      if (isRule) {\n        position.globalLeafNo = globalLeafCount;\n      } else if (isGroup) {\n        position.globalGroupNo = globalGroupCount;\n      }\n    }\n\n    flat.push(id);\n    items[id] = {\n      node: item,\n      index: itemsBefore, // index in `flat`\n      id: id,\n      type: type,\n      parent: parentId,\n      parentType: parentId ? items[parentId].type : null,\n      children: childrenIds,\n      childNo,\n      caseId: currentCaseId,\n      caseNo,\n      path: path.concat(id),\n      lev: lev, // depth level (0 for root node)\n      isLeaf: !children, // is atomic rule OR rule inside rule_group\n      isAtomicRule, // is atomic (rule or rule_group, but not rules inside rule_group)\n      isLocked: isLocked || insideLocked,\n      // vertical\n      top: (insideCollapsed ? null : top),\n      // for case\n      isDefaultCase: isCaseGroup ? !children : undefined,\n      atomicRulesCountInCase: isCaseGroup ? 0 : undefined,\n      // object with numbers indicating # of item in tree\n      position,\n      // unused\n      collapsed: collapsed,\n      _top: itemsBefore,\n      // @deprecated use isLeaf instead\n      leaf: !children,\n\n      // will be added later:\n      //  prev\n      //  next\n      //  depth  - for any group (children of rule_group are not counted, collapsed are not counted)\n      //  height  - visible height\n      //  bottom = (insideCollapsed ? null : top + height)\n      //  _height = (itemsAfter - itemsBefore)  - real height (incl. collapsed)\n    };\n\n    // Calculations before traversing children\n    let height = 0;\n    let depth = 0;\n    if (!insideCollapsed) {\n      visibleHeight += 1;\n      height += 1;\n      if (hasChildren && !collapsed && !isRuleGroup) {\n        // tip: don't count children of rule_group\n        depth += 1;\n      }\n      if (!isRoot && !isCaseGroup) {\n        isGroup && globalGroupCount++;\n        isAtomicRule && globalAtomicCount++;\n        isRule && globalLeafCount++;\n        globalCountByType[type] = (globalCountByType[type] || 0) + 1;\n      }\n    }\n    if (caseId && isAtomicRule) {\n      items[caseId].atomicRulesCountInCase++;\n    }\n\n    // Traverse children deeply\n    let maxChildDepth = 0;\n    let sumHeight = 0;\n    if (hasChildren) {\n      let childCount = 0;\n      children.map((child, childId) => {\n        if (child) {\n          _flatizeTree(\n            child, \n            path.concat(id), \n            insideCollapsed || collapsed, insideLocked || isLocked, insideRuleGroup || isRuleGroup,\n            lev + 1, currentCaseId, childCount\n          );\n          const childItem = items[childId];\n          // Calculations after deep traversing 1 child\n          maxChildDepth = Math.max(maxChildDepth, childItem.depth || 0);\n          sumHeight += childItem.height;\n          childCount++;\n        }\n      });\n    }\n\n    // Calculations after deep traversing ALL children\n    height += sumHeight;\n    depth += maxChildDepth;\n    const itemsAfter = flat.length;\n    const _height = itemsAfter - itemsBefore;\n    const bottom = (insideCollapsed ? null : top + height);\n\n    Object.assign(items[id], {\n      depth: children ? depth : undefined,\n      _height,\n      height,\n      bottom,\n    });\n  }\n\n  // Start recursion\n  _flatizeTree(tree, [], false, false, false, 0, null, null);\n\n  // Calc after recursion\n  for (let i = 0 ; i < flat.length ; i++) {\n    const prevId = i > 0 ? flat[i-1] : null;\n    const nextId = i < (flat.length-1) ? flat[i+1] : null;\n    let item = items[flat[i]];\n    item.prev = prevId;\n    item.next = nextId;\n  }\n\n  return {flat, items, cases};\n};\n\n\n/**\n * Returns count of reorderable(!) nodes\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalReordableNodesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    const isRuleGroup = type == \"rule_group\";\n    cnt++;\n    //tip: rules in rule-group can be reordered only inside\n    if (children && !isRuleGroup) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt - 1; // -1 for root\n};\n\n/**\n * Returns count of atomic rules (i.e. don't count groups; count rule_group as 1 atomic rule)\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalRulesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    \n    if (type == \"rule\" || type == \"rule_group\") {\n      // tip: count rule_group as 1 rule\n      cnt++;\n    } else if (children) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt;\n};\n\n\n// Remove fields that can be calced: \"id\", \"path\"\n// Remove empty fields: \"operatorOptions\"\nexport const getLightTree = (tree, deleteExcess = true, children1AsArray = true) => {\n  let newTree = tree;\n\n  function _processNode (item, itemId) {\n    if (deleteExcess && item.path) {\n      delete item.path;\n    }\n    if (deleteExcess && !children1AsArray && itemId) {\n      delete item.id;\n    }\n    let properties = item.properties;\n    if (properties) {\n      if (properties.operatorOptions == null) {\n        delete properties.operatorOptions;\n      }\n    }\n\n    const children = item.children1;\n    if (children) {\n      for (let id in children) {\n        if (children[id]) {\n          _processNode(children[id], id);\n        }\n      }\n      if (children1AsArray) {\n        item.children1 = Object.values(children);\n      }\n    }\n  }\n\n  _processNode(tree, null);\n\n  return newTree;\n};\n\nexport const getSwitchValues = (tree) => {\n  let vals = [];\n  const children = tree.get(\"children1\");\n  if (children) {\n    children.map((child) => {\n      const value = child.getIn([\"properties\", \"value\"]);\n      let caseValue;\n      if (value && value.size == 1) {\n        caseValue = value.get(0);\n        if (Array.isArray(caseValue) && caseValue.length == 0) {\n          caseValue = null;\n        }\n      } else {\n        caseValue = null;\n      }\n      vals = [...vals, caseValue];\n    });\n  }\n\n  return vals;\n};\n\nexport const isEmptyTree = (tree) => (!tree.get(\"children1\") || tree.get(\"children1\").size == 0);\n\nexport const hasChildren = (tree, path) => tree.getIn(expandTreePath(path, \"children1\")).size > 0;\n\n\nexport const _fixImmutableValue = (v) => {\n  if (v?.toJS) {\n    const vJs = v?.toJS?.();\n    if (vJs?.func) {\n      // `v` is a func, keep Immutable\n      return v.toOrderedMap();\n    } else {\n      // for values of multiselect use Array instead of List\n      return vJs;\n    }\n  } else {\n    return v;\n  }\n};\n","import Immutable, { fromJS, Map } from \"immutable\";\nimport {checkTree, isValidTree} from \"../utils/validation\";\nimport {getLightTree, _fixImmutableValue, fixPathsInTree} from \"../utils/treeUtils\";\nimport {isJsonLogic} from \"../utils/stuff\";\nimport uuid from \"../utils/uuid\";\n\nexport {\n  isJsonLogic,\n  // for backward compatibility:\n  checkTree, isValidTree\n};\n\nexport const getTree = (immutableTree, light = true, children1AsArray = true) => {\n  if (!immutableTree) return undefined;\n  let tree = immutableTree;\n  tree = tree.toJS();\n  tree = getLightTree(tree, light, children1AsArray);\n  return tree;\n};\n\nexport const loadTree = (serTree) => {\n  if (isImmutableTree(serTree)) {\n    return serTree;\n  } else if (isTree(serTree)) {\n    return fixPathsInTree(jsToImmutable(serTree));\n  } else if (typeof serTree == \"string\" && serTree.startsWith('[\"~#iM\"')) {\n    //tip: old versions of RAQB were saving tree with `transit.toJSON()`\n    // https://github.com/ukrbublik/react-awesome-query-builder/issues/69\n    throw new Error(\"You are trying to load query in obsolete serialization format (Immutable string) which is not supported in versions starting from 2.1.17\");\n  } else if (typeof serTree === \"string\") {\n    return fixPathsInTree(jsToImmutable(JSON.parse(serTree)));\n  } else throw new Error(\"Can't load tree!\");\n};\n\nexport const isImmutableTree = (tree) => {\n  return Map.isMap(tree);\n};\n\nexport const isTree = (tree) => {\n  return typeof tree == \"object\" && (tree.type == \"group\" || tree.type == \"switch_group\");\n};\n\nexport function jsToImmutable(tree) {\n  const imm = fromJS(tree, function (key, value, path) {\n    const isFuncArg = path\n      && path.length > 3\n      && path[path.length-1] === \"value\"\n      && path[path.length-3] === \"args\";\n    const isRuleValue = path\n      && path.length > 3\n      && path[path.length-1] === \"value\"\n      && path[path.length-2] === \"properties\";\n\n    let outValue;\n    if (key == \"properties\") {\n      outValue = value.toOrderedMap();\n\n      // `value` should be undefined instead of null\n      // JSON doesn't support undefined and replaces undefined -> null\n      // So fix: null -> undefined\n      for (let i = 0 ; i < 2 ; i++) {\n        if (outValue.get(\"value\")?.get?.(i) === null) {\n          outValue = outValue.setIn([\"value\", i], undefined);\n        }\n      }\n    } else if (isFuncArg) {\n      outValue = _fixImmutableValue(value);\n    } else if ((path ? isRuleValue : key == \"value\") && Immutable.Iterable.isIndexed(value)) {\n      outValue = value.map(_fixImmutableValue).toList();\n    } else if (key == \"asyncListValues\") {\n      // keep in JS format\n      outValue = value.toJS();\n    } else if (key == \"children1\" && Immutable.Iterable.isIndexed(value)) {\n      outValue = new Immutable.OrderedMap(value.map(child => [child?.get(\"id\") || uuid(), child]));\n    } else {\n      outValue = Immutable.Iterable.isIndexed(value) ? value.toList() : value.toOrderedMap();\n    }\n    return outValue;\n  });\n  return imm;\n}\n","import uuid from \"../utils/uuid\";\nimport {getOpCardinality, isJsonLogic, shallowEqual, logger} from \"../utils/stuff\";\nimport {getFieldConfig, extendConfig, normalizeField, getFuncConfig, iterateFuncs, getFieldParts} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {loadTree} from \"./tree\";\nimport {defaultConjunction, defaultGroupConjunction} from \"../utils/defaultUtils\";\n\nimport moment from \"moment\";\n\n// http://jsonlogic.com/\n\n// helpers\nconst arrayUniq = (arr) => Array.from(new Set(arr));\nconst arrayToObject = (arr) => arr.reduce((acc, [f, fc]) => ({ ...acc, [f]: fc }), {});\n\nconst createMeta = (parentMeta) => {\n  return {\n    errors: [],\n    settings: parentMeta?.settings,\n  };\n};\n\nexport const loadFromJsonLogic = (logicTree, config) => {\n  return _loadFromJsonLogic(logicTree, config, false);\n};\n\nexport const _loadFromJsonLogic = (logicTree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = createMeta();\n  meta.settings = {\n    allowUnknownFields: false,\n    returnErrors,\n  };\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  const jsTree = logicTree ? convertFromLogic(logicTree, conv, extendedConfig, [\"rule\", \"group\", \"switch\"], meta) : undefined;\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from JsonLogic:\", meta.errors);\n    return immTree;\n  }\n};\n\n\nconst buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (typeof opConfig.jsonLogic == \"string\") {\n      // example: \"</2\", \"#in/1\"\n      const opk = (opConfig._jsonLogicIsRevArgs ? \"#\" : \"\") + opConfig.jsonLogic + \"/\" + getOpCardinality(opConfig);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else if(typeof opConfig.jsonLogic2 == \"string\") {\n      // example: all-in/1\"\n      const opk = opConfig.jsonLogic2 + \"/\" + getOpCardinality(opConfig);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.jsonLogicConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (const [funcPath, funcConfig] of iterateFuncs(config)) {\n    let fk;\n    if (funcConfig.jsonLogicIsMethod) {\n      fk = \"#\" + funcConfig.jsonLogic;\n    } else if (typeof funcConfig.jsonLogic == \"string\") {\n      fk = funcConfig.jsonLogic;\n    }\n    if (fk) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcPath);\n    }\n  }\n\n  const {groupVarKey, altVarKey} = config.settings.jsonLogic;\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    varKeys: [\"var\", groupVarKey, altVarKey],\n  };\n};\n\n// expectedTypes - \"val\", \"rule\", \"group\", \"switch\", \"case_val\"\nconst convertFromLogic = (logic, conv, config, expectedTypes, meta, not = false, fieldConfig, widget, parentField = null, _isLockedLogic = false) => {\n  let op, vals;\n  if (isJsonLogic(logic)) {\n    op = Object.keys(logic)[0];\n    vals = logic[op];\n    if (!Array.isArray(vals))\n      vals = [ vals ];\n  }\n  \n  let ret;\n  const beforeErrorsCnt = meta.errors.length;\n\n  const {lockedOp} = config.settings.jsonLogic;\n  const isEmptyOp = op == \"!\" && (vals.length == 1 && vals[0] && isJsonLogic(vals[0]) && conv.varKeys.includes(Object.keys(vals[0])[0]));\n  const isRev = op == \"!\" && !isEmptyOp;\n  const isLocked = lockedOp && op == lockedOp;\n  const isSwitch = expectedTypes.includes(\"switch\");\n  const isRoot = isSwitch;\n  if (isLocked) {\n    ret = convertFromLogic(vals[0], conv, config, expectedTypes, meta, not, fieldConfig, widget, parentField, true);\n  } else if (isRev) {\n    // reverse with not\n    ret = convertFromLogic(vals[0], conv, config, expectedTypes, meta, !not, fieldConfig, widget, parentField);\n  } else if(expectedTypes.includes(\"val\")) {\n    // not is not used here\n    ret = convertFieldRhs(op, vals, conv, config, not, meta, parentField) \n      || convertFuncRhs(op, vals, conv, config, not, fieldConfig, meta, parentField) \n      || convertValRhs(logic, fieldConfig, widget, config, meta);\n  } else {\n    if (expectedTypes.includes(\"switch\")) {\n      ret = convertIf(op, vals, conv, config, not, meta, parentField);\n    }\n    if (ret == undefined && expectedTypes.includes(\"group\")) {\n      ret = convertConj(op, vals, conv, config, not, meta, parentField, false);\n    }\n    if (ret == undefined && expectedTypes.includes(\"rule\")) {\n      ret = convertOp(op, vals, conv, config, not, meta, parentField);\n    }\n    if (ret) {\n      if (isRoot && ![\"group\", \"switch_group\"].includes(ret.type)) {\n        ret = wrapInDefaultConj(ret, config);\n      }\n    }\n  }\n\n  const afterErrorsCnt = meta.errors.length;\n  if (op != \"!\" && ret === undefined && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Can't parse logic ${JSON.stringify(logic)}`);\n  }\n\n  if (isLocked) {\n    ret.properties.isLocked = true;\n  }\n\n  return ret;\n};\n\n\nconst convertValRhs = (val, fieldConfig, widget, config, meta) => {\n  if (val === undefined)\n    val = fieldConfig?.defaultValue;\n  if (val === undefined) return undefined;\n  widget = widget || fieldConfig?.mainWidget;\n  const widgetConfig = config.widgets[widget];\n  const fieldType = fieldConfig?.type;\n\n  if (fieldType && !widgetConfig) {\n    meta.errors.push(`No widget for type ${fieldType}`);\n    return undefined;\n  }\n\n  if (isJsonLogic(val)) {\n    meta.errors.push(`Unexpected logic in value: ${JSON.stringify(val)}`);\n    return undefined;\n  }\n\n  // number of seconds -> time string\n  if (fieldType === \"time\" && typeof val === \"number\") {\n    const [h, m, s] = [Math.floor(val / 60 / 60) % 24, Math.floor(val / 60) % 60, val % 60];\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      const dateVal = new Date(val);\n      dateVal.setMilliseconds(0);\n      dateVal.setHours(h);\n      dateVal.setMinutes(m);\n      dateVal.setSeconds(s);\n      val = moment(dateVal).format(valueFormat);\n    } else {\n      val = `${h}:${m}:${s}`;\n    }\n  }\n\n  // \"2020-01-08T22:00:00.000Z\" -> Date object\n  if ([\"date\", \"datetime\"].includes(fieldType) && val && !(val instanceof Date)) {\n    try {\n      const dateVal = new Date(val);\n      if (dateVal instanceof Date && dateVal.toISOString() === val) {\n        val = dateVal;\n      }\n    } catch(e) {\n      meta.errors.push(`Can't convert value ${val} as Date`);\n      val = undefined;\n    }\n  }\n\n  // Date object -> formatted string\n  if (val instanceof Date && fieldConfig) {\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      val = moment(val).format(valueFormat);\n    }\n  }\n\n  let asyncListValues;\n  if (val && fieldConfig?.fieldSettings?.asyncFetch) {\n    const vals = Array.isArray(val) ? val : [val];\n    asyncListValues = vals;\n  }\n\n  if (widgetConfig?.jsonLogicImport) {\n    try {\n      val = widgetConfig.jsonLogicImport.call(config.ctx, val);\n    } catch(e) {\n      meta.errors.push(`Can't import value ${val} using import func of widget ${widget}: ${e?.message ?? e}`);\n      val = undefined;\n    }\n  }\n\n  return {\n    valueSrc: \"value\",\n    value: val,\n    valueType: widgetConfig?.type,\n    asyncListValues\n  };\n};\n\nconst convertFieldRhs = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (conv.varKeys.includes(op) && typeof vals[0] == \"string\") {\n    const field = normalizeField(config, vals[0], parentField);\n    const fieldConfig = getFieldConfig(config, field);\n    if (!fieldConfig && !meta.settings?.allowUnknownFields) {\n      meta.errors.push(`No config for field ${field}`);\n      return undefined;\n    }\n\n    return {\n      valueSrc: \"field\",\n      value: field,\n      valueType: fieldConfig?.type,\n    };\n  }\n\n  return undefined;\n};\n\nconst convertLhs = (isGroup0, jlField, args, conv, config, not = null, fieldConfig = null, meta, parentField = null) => {\n  let k = Object.keys(jlField)[0];\n  let v = Object.values(jlField)[0];\n\n  const _parse = (k, v) => {\n    return convertFieldLhs(k, v, conv, config, not, meta, parentField)\n    || convertFuncLhs(k, v, conv, config, not, fieldConfig, meta, parentField);\n  };\n\n  const beforeErrorsCnt = meta.errors.length;\n  let field, fieldSrc, having, isGroup;\n  const parsed = _parse(k, v);\n  if (parsed) {\n    field = parsed.field;\n    fieldSrc = parsed.fieldSrc;\n  }\n  if (isGroup0) {\n    isGroup = true;\n    having = args[0];\n    args = [];\n  }\n  // reduce/filter for group ext\n  if (k == \"reduce\" && Array.isArray(v) && v.length == 3) {\n    let [filter, acc, init] = v;\n    if (isJsonLogic(filter) && init == 0\n      && isJsonLogic(acc)\n      && Array.isArray(acc[\"+\"]) && acc[\"+\"][0] == 1\n      && isJsonLogic(acc[\"+\"][1]) && acc[\"+\"][1][\"var\"] == \"accumulator\"\n    ) {\n      k = Object.keys(filter)[0];\n      v = Object.values(filter)[0];\n      if (k == \"filter\") {\n        let [group, filter] = v;\n        if (isJsonLogic(group)) {\n          k = Object.keys(group)[0];\n          v = Object.values(group)[0];\n          const parsedGroup = _parse(k, v);\n          if (parsedGroup) {\n            field = parsedGroup.field;\n            fieldSrc = parsedGroup.fieldSrc;\n            having = filter;\n            isGroup = true;\n          }\n        }\n      } else {\n        const parsedGroup = _parse(k, v);\n        if (parsedGroup) {\n          field = parsedGroup.field;\n          fieldSrc = parsedGroup.fieldSrc;\n          isGroup = true;\n        }\n      }\n    }\n  }\n  const afterErrorsCnt = meta.errors.length;\n\n  if (!field && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Unknown LHS ${JSON.stringify(jlField)}`);\n  }\n  if (!field) return;\n\n  return {\n    field, fieldSrc, having, isGroup, args\n  };\n};\n\nconst convertFieldLhs = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (!Array.isArray(vals))\n    vals = [ vals ];\n  const parsed = convertFieldRhs(op, vals, conv, config, not, meta, parentField);\n  if (parsed) {\n    return {\n      fieldSrc: \"field\",\n      field: parsed.value,\n    };\n  }\n  return undefined;\n};\n\nconst convertFuncLhs = (op, vals, conv, config, not, fieldConfig = null, meta, parentField = null) => {\n  const parsed = convertFuncRhs(op, vals, conv, config, not, fieldConfig, meta, parentField);\n  if (parsed) {\n    return {\n      fieldSrc: \"func\",\n      field: parsed.value,\n    };\n  }\n  return undefined;\n};\n\nconst convertFuncRhs = (op, vals, conv, config, not, fieldConfig = null, meta, parentField = null) => {\n  if (!op) return undefined;\n  let func, argsArr, funcKey;\n  const jsonLogicIsMethod = (op == \"method\");\n  if (jsonLogicIsMethod) {\n    let obj, opts;\n    [obj, func, ...opts] = vals;\n    argsArr = [obj, ...opts];\n  } else {\n    func = op;\n    argsArr = vals;\n  }\n\n  const fk = (jsonLogicIsMethod ? \"#\" : \"\") + func;\n  const returnType = fieldConfig?.type || fieldConfig?.returnType;\n  const funcKeys = (conv.funcs[fk] || []).filter(k => \n    (fieldConfig ? getFuncConfig(config, k).returnType == returnType : true)\n  );\n  if (funcKeys.length) {\n    funcKey = funcKeys[0];\n  } else {\n    const v = {[op]: vals};\n\n    for (const [f, fc] of iterateFuncs(config)) {\n      if (fc.jsonLogicImport && (returnType ? fc.returnType == returnType : true)) {\n        let parsed;\n        try {\n          parsed = fc.jsonLogicImport(v);\n        } catch(_e) {\n          // given expression `v` can't be parsed into function\n        }\n        if (parsed) {\n          funcKey = f;\n          argsArr = parsed;\n        }\n      }\n    }\n  }\n  if (!funcKey)\n    return undefined;\n\n  if (funcKey) {\n    const funcConfig = getFuncConfig(config, funcKey);\n    const argKeys = Object.keys(funcConfig.args || {});\n    let argsObj = argsArr.reduce((acc, val, ind) => {\n      const argKey = argKeys[ind];\n      const argConfig = funcConfig.args[argKey];\n      let argVal;\n      if (argConfig) {\n        argVal = convertFromLogic(val, conv, config, [\"val\"], meta, false, argConfig, null, parentField);\n      }\n      return argVal !== undefined ? {...acc, [argKey]: argVal} : acc;\n    }, {});\n\n    for (let argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      let argVal = argsObj[argKey];\n      if (argVal === undefined) {\n        argVal = argConfig?.defaultValue;\n        if (argVal !== undefined) {\n          argVal = {\n            value: argVal,\n            valueSrc: argVal?.func ? \"func\" : \"value\",\n            valueType: argConfig.type,\n          };\n        }\n        if (argVal === undefined) {\n          if (argConfig?.isOptional) {\n            //ignore\n          } else {\n            meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n            return undefined;\n          }\n        } else {\n          argsObj[argKey] = argVal;\n        }\n      }\n    }\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: argsObj\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  return undefined;\n};\n\n\nconst convertConj = (op, vals, conv, config, not, meta, parentField = null, isRuleGroup = false) => {\n  const conjKey = conv.conjunctions[op];\n  const {fieldSeparator} = config.settings;\n  // const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  // const isParentGroup = parentFieldConfig?.type == \"!group\";\n  if (conjKey) {\n    let type = \"group\";\n    const children = vals\n      .map(v => convertFromLogic(v, conv, config, [\"rule\", \"group\"], meta, false, null, null, parentField))\n      .filter(r => r !== undefined)\n      .reduce((acc, r) => ({...acc, [r.id] : r}), {});\n    const complexFields = Object.values(children)\n      .map(v => v?.properties?.fieldSrc == \"field\" && v?.properties?.field)\n      .filter(f => f?.includes?.(fieldSeparator));\n    const complexFieldsGroupAncestors = Object.fromEntries(\n      arrayUniq(complexFields).map(f => {\n        const parts = f.split(fieldSeparator);\n        const ancs = Object.fromEntries(\n          parts.slice(0, -1)\n            .map((f, i, parts) => [...parts.slice(0, i), f])\n            .map(fp => [fp.join(fieldSeparator), getFieldConfig(config, fp)])\n            .filter(([_f, fc]) => fc?.type == \"!group\")\n        );\n        return [f, Object.keys(ancs)];\n      })\n    );\n    // const childrenInRuleGroup = Object.values(children)\n    //   .map(v => v?.properties?.fieldSrc == \"field\" && v?.properties?.field)\n    //   .map(f => complexFieldsGroupAncestors[f])\n    //   .filter(ancs => ancs && ancs.length);\n    // const usedRuleGroups = arrayUniq(Object.values(complexFieldsGroupAncestors).flat());\n    // const usedTopRuleGroups = topLevelFieldsFilter(usedRuleGroups);\n    \n    let properties = {\n      conjunction: conjKey,\n      not: not\n    };\n    const id = uuid();\n\n    let children1 = {};\n    let groupToId = {};\n    Object.entries(children).map(([k, v]) => {\n      if (v?.type == \"group\" || v?.type == \"rule_group\") {\n        // put as-is\n        children1[k] = v;\n      } else {\n        const field = v?.properties?.field;\n        const groupAncestors = complexFieldsGroupAncestors[field] || [];\n        const groupField = groupAncestors[groupAncestors.length - 1];\n        if (!groupField) {\n          // not in rule_group (can be simple field or in struct) - put as-is\n          if (v) {\n            children1[k] = v;\n          }\n        } else {\n          // wrap field in rule_group (with creating hierarchy if need)\n          let ch = children1;\n          let parentFieldParts = getFieldParts(parentField, config);\n          const groupPath = getFieldParts(groupField, config);\n          const isInParent = shallowEqual(parentFieldParts, groupPath.slice(0, parentFieldParts.length));\n          if (!isInParent)\n            parentFieldParts = []; // should not be\n          const traverseGroupFields = groupField\n            .split(fieldSeparator)\n            .slice(parentFieldParts.length)\n            .map((f, i, parts) => [...parentFieldParts, ...parts.slice(0, i), f].join(fieldSeparator))\n            .map((f) => ({f, fc: getFieldConfig(config, f) || {}}))\n            .filter(({fc}) => (fc.type != \"!struct\"));\n          traverseGroupFields.map(({f: gf, fc: gfc}, i) => {\n            let groupId = groupToId[gf];\n            if (!groupId) {\n              groupId = uuid();\n              groupToId[gf] = groupId;\n              ch[groupId] = {\n                type: \"rule_group\",\n                id: groupId,\n                children1: {},\n                properties: {\n                  conjunction: conjKey,\n                  not: false,\n                  field: gf,\n                  fieldSrc: \"field\",\n                  mode: gfc.mode,\n                }\n              };\n            }\n            ch = ch[groupId].children1;\n          });\n          ch[k] = v;\n        }\n      }\n    });\n\n    // tip: for isRuleGroup=true correct type and properties will be set out of this func\n\n    return {\n      type: type,\n      id: id,\n      children1: children1,\n      properties: properties\n    };\n  }\n\n  return undefined;\n};\n\n\n// const topLevelFieldsFilter = (fields) => {\n//   let arr = [...fields].sort((a, b) => (a.length - b.length));\n//   for (let i = 0 ; i < arr.length ; i++) {\n//     for (let j = i + 1 ; j < arr.length ; j++) {\n//       if (arr[j].indexOf(arr[i]) == 0) {\n//         // arr[j] is inside arr[i] (eg. \"a.b\" inside \"a\")\n//         arr.splice(j, 1);\n//         j--;\n//       }\n//     }\n//   }\n//   return arr;\n// };\n\nconst wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj) => {\n  if (!rule) return undefined;\n  return {\n    type: \"rule_group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n      not: false,\n      field: parentField,\n    }\n  };\n};\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not\n    }\n  };\n};\n\nconst parseRule = (op, arity, vals, parentField, conv, config, meta) => {\n  const submeta = createMeta(meta);\n  let res = _parseRule(op, arity, vals, parentField, conv, config, false, submeta);\n  if (!res) {\n    // try reverse\n    res = _parseRule(op, arity, vals, parentField, conv, config, true, createMeta(meta));\n  }\n  if (!res) {\n    meta.errors.push(submeta.errors.join(\"; \") || `Unknown op ${op}/${arity}`);\n    return undefined;\n  }\n  \n  return res;\n};\n\nconst _parseRule = (op, arity, vals, parentField, conv, config, isRevArgs, meta) => {\n  // config.settings.groupOperators are used for group count (cardinality = 0 is exception)\n  // but don't confuse with \"all-in\" or \"some-in\" for multiselect\n  const isAllOrSomeInForMultiselect\n    = (op === \"all\" || op === \"some\")\n    && isJsonLogic(vals[1])\n    && Object.keys(vals[1])[0] == \"in\"\n    && vals[1][\"in\"][0]?.[\"var\"] === \"\";\n  const isGroup0 = !isAllOrSomeInForMultiselect && config.settings.groupOperators.includes(op);\n  const eqOps = [\"==\", \"!=\"];\n  let cardinality = isGroup0 ? 0 : arity - 1;\n  if (isGroup0)\n    cardinality = 0;\n  else if (eqOps.includes(op) && cardinality == 1 && vals[1] === null) {\n    arity = 1;\n    cardinality = 0;\n    vals = [vals[0]];\n  }\n\n  const opk = op + \"/\" + cardinality;\n  let opKeys = conv.operators[(isRevArgs ? \"#\" : \"\") + opk];\n  if (!opKeys)\n    return;\n  \n  let jlField, jlArgs = [];\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  if (rangeOps.includes(op) && arity == 3) {\n    jlField = vals[1];\n    jlArgs = [ vals[0], vals[2] ];\n  } else if (isRevArgs) {\n    jlField = vals[1];\n    jlArgs = [ vals[0] ];\n  } else {\n    [jlField, ...jlArgs] = vals;\n  }\n\n  if (!isJsonLogic(jlField)) {\n    meta.errors.push(`Incorrect operands for ${op}: ${JSON.stringify(vals)}`);\n    return;\n  }\n\n  const lhs = convertLhs(isGroup0, jlField, jlArgs, conv, config, null, null, meta, parentField);\n  if (!lhs) return;\n  const {\n    field, fieldSrc, having, isGroup, args\n  } = lhs;\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig && !meta.settings?.allowUnknownFields) {\n    meta.errors.push(`No config for LHS ${field}`);\n    return;\n  }\n\n  let opKey = opKeys[0];\n  if (opKeys.length > 1 && fieldConfig && fieldConfig.operators) {\n    // eg. for \"equal\" and \"select_equals\"\n    opKeys = opKeys\n      .filter(k => fieldConfig.operators.includes(k));\n    if (opKeys.length == 0) {\n      meta.errors.push(`No corresponding ops for LHS ${field}`);\n      return;\n    }\n    opKey = opKeys[0];\n  }\n  \n  return {\n    field, fieldSrc, fieldConfig, opKey, args, having\n  };\n};\n\nconst convertOp = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (!op) return undefined;\n\n  const arity = vals.length;\n  if ((op === \"all\" || op === \"some\") && isJsonLogic(vals[1])) {\n    // special case for \"all-in\" and \"some-in\"\n    const op2 = Object.keys(vals[1])[0];\n    const isEmptyVar = vals[1][op2][0]?.[\"var\"] === \"\";\n    if (op2 === \"in\" && isEmptyVar) {\n      vals = [\n        vals[0],\n        vals[1][op2][1]\n      ];\n      op = op + \"-\" + op2; // \"all-in\" and \"some-in\"\n    }\n  }\n\n  const parseRes = parseRule(op, arity, vals, parentField, conv, config, meta);\n  if (!parseRes) return undefined;\n  let {field, fieldSrc, fieldConfig, opKey, args, having} = parseRes;\n  let opConfig = config.operators[opKey];\n\n  // Group component in array mode can show NOT checkbox, so do nothing in this case\n  // Otherwise try to revert\n  const showNot = fieldConfig?.showNot !== undefined ? fieldConfig.showNot : config.settings.showNot; \n  let canRev = true;\n  // if (fieldConfig.type == \"!group\" && fieldConfig.mode == \"array\" && showNot)\n  //   canRev = false;\n\n  let conj;\n  let havingVals;\n  let havingNot = false;\n  if (fieldConfig?.type == \"!group\" && having) {\n    conj = Object.keys(having)[0];\n    havingVals = having[conj];\n    if (!Array.isArray(havingVals))\n      havingVals = [ havingVals ];\n\n    // Preprocess \"!\": Try to reverse op in single rule in having\n    // Eg. use `not_equal` instead of `not` `equal`\n    const isEmptyOp = conj == \"!\" && (havingVals.length == 1 && havingVals[0] && isJsonLogic(havingVals[0]) && conv.varKeys.includes(Object.keys(havingVals[0])[0]));\n    if (conj == \"!\" && !isEmptyOp) {\n      havingNot = true;\n      having = having[\"!\"];\n      conj = Object.keys(having)[0];\n      havingVals = having[conj];\n      if (!Array.isArray(havingVals))\n        havingVals = [ havingVals ];\n    }\n  }\n\n  // Use reversed op\n  if (not && canRev && opConfig.reversedOp) {\n    not = false;\n    opKey = opConfig.reversedOp;\n    opConfig = config.operators[opKey];\n  }\n\n  const widget = getWidgetForFieldOp(config, field, opKey, null);\n\n  const convertedArgs = args\n    .map(v => convertFromLogic(v, conv, config, [\"val\"], meta, false, fieldConfig, widget, parentField));\n  if (convertedArgs.filter(v => v === undefined).length) {\n    //meta.errors.push(`Undefined arg for field ${field} and op ${opKey}`);\n    return undefined;\n  }\n\n  let res;\n\n  let fieldType = fieldConfig?.type;\n  if (fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n\n  if (fieldConfig?.type == \"!group\" && having) {\n    if (conv.conjunctions[conj] !== undefined) {\n      // group\n      res = convertConj(conj, havingVals, conv, config, havingNot, meta, field, true);\n      havingNot = false;\n    } else {\n      // need to be wrapped in `rule_group`\n      const rule = convertOp(conj, havingVals, conv, config, havingNot, meta, field);\n      havingNot = false;\n      res = wrapInDefaultConjRuleGroup(rule, field, fieldConfig, config, conv.conjunctions[\"and\"]);\n    }\n    if (!res)\n      return undefined;\n    \n    res.type = \"rule_group\";\n    Object.assign(res.properties, {\n      field: field,\n      mode: fieldConfig.mode,\n      operator: opKey,\n    });\n    if (fieldConfig.mode == \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n    if (not) {\n      res = wrapInDefaultConj(res, config, not);\n    }\n  } else if (fieldConfig?.type == \"!group\" && !having) {\n    res = {\n      type: \"rule_group\",\n      id: uuid(),\n      children1: {},\n      properties: {\n        conjunction: defaultGroupConjunction(config, fieldConfig),\n        not: not,\n        mode: fieldConfig.mode,\n        field: field,\n        operator: opKey,\n      }\n    };\n    if (fieldConfig.mode === \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n  } else {\n    const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n    const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n    res = {\n      type: \"rule\",\n      id: uuid(),\n      properties: {\n        field: field,\n        fieldSrc: fieldSrc,\n        operator: opKey,\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n        ...(asyncListValues ? {asyncListValues} : {}),\n      }\n    };\n    if (not) {\n      //meta.errors.push(`No rev op for ${opKey}`);\n      res = wrapInDefaultConj(res, config, not);\n    }\n  }\n\n  return res;\n};\n\n\nconst convertIf = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (op?.toLowerCase() !== \"if\") return undefined;\n\n  const flat = flatizeTernary(vals);\n\n  const cases = flat.map(([cond, val]) => ([\n    cond ? convertFromLogic(cond, conv, config, [\"rule\", \"group\"], meta, false, null, null, parentField) : null,\n    buildCaseValProperties(config, meta, conv, val),\n  ]));\n  const children1 = cases.map(([cond, val]) => wrapInCase(cond, val, config, meta));\n\n  const switchI = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n\n  return switchI;\n};\n\nconst flatizeTernary = (children) => {\n  let flat = [];\n  function _processTernaryChildren(tern) {\n    let [cond, if_val, else_val] = tern;\n    flat.push([cond, if_val]);\n    const else_op = isJsonLogic(else_val) ? Object.keys(else_val)[0] : null;\n    if (else_op?.toLowerCase() === \"if\") {\n      _processTernaryChildren(else_val[else_op]);\n    } else {\n      flat.push([undefined, else_val]);\n    }\n  }\n  _processTernaryChildren(children);\n  return flat;\n};\n\nconst wrapInCase = (cond, valProperties, config, meta) => {\n  let caseI;\n  if (cond) {\n    caseI = {...cond};\n    if (caseI.type) {\n      if (caseI.type != \"group\") {\n        caseI = wrapInDefaultConj(caseI, config);\n      }\n      caseI.type = \"case_group\";\n    } else {\n      meta.errors.push(`Unexpected case: ${JSON.stringify(caseI)}`);\n      caseI = undefined;\n    }\n  } else {\n    caseI = {\n      id: uuid(),\n      type: \"case_group\",\n      properties: {}\n    };\n  }\n\n  if (caseI) {\n    caseI.properties = {\n      ...caseI.properties,\n      ...valProperties\n    };\n  }\n\n  return caseI;\n};\n\nconst buildCaseValProperties = (config, meta, conv, val) => {\n  const caseValueFieldConfig = getFieldConfig(config, \"!case_value\");\n  if (!caseValueFieldConfig) {\n    meta.errors.push(\"Missing caseValueField in settings\");\n    return undefined;\n  }\n  const widget = caseValueFieldConfig.mainWidget;\n  const widgetDef = config.widgets[widget];\n  if (!widgetDef) {\n    meta.errors.push(`No widget ${widget} for case value`);\n    return undefined;\n  }\n  const convVal = convertFromLogic(val, conv, config, [\"val\", \"case_val\"], meta, false, caseValueFieldConfig, widget);\n  if (convVal == undefined) {\n    return undefined;\n  }\n  const { value, valueSrc, valueType} = convVal;\n  let valProperties = {\n    value: [value],\n    valueSrc: [valueSrc ?? \"value\"],\n    valueType: [valueType ?? widgetDef?.type],\n    field: \"!case_value\",\n  };\n  return valProperties;\n};\n","import SqlStringOrig from \"sqlstring\";\n\nexport const SqlString = SqlStringOrig;\n\nSqlString.trim = (val) => {\n  if (val.charAt(0) == \"'\")\n    return val.substring(1, val.length-1);\n  else\n    return val;\n};\n\nSqlString.escapeLike = (val, any_start = true, any_end = true) => {\n  // normal escape\n  let res = SqlString.escape(val);\n  // unwrap ''\n  res = SqlString.trim(res);\n  // escape % and _\n  res = res.replace(/[%_]/g, \"\\\\$&\");\n  // wrap with % for LIKE\n  res = (any_start ? \"%\" : \"\") + res + (any_end ? \"%\" : \"\");\n  // wrap ''\n  res = \"'\" + res + \"'\";\n  return res;\n};\n\nexport const sqlEmptyValue = (fieldDef) => {\n  let v = \"''\";\n  const type = fieldDef?.type;\n  if (type == \"date\") {\n    //todo: support other SQL dialects?  0001-01-01 for oracle, 1970-01-01 for timestamp\n    v = \"'0000-00-00'\";\n  } else if (type == \"datetime\") {\n    v = \"'0000-00-00 00:00'\";\n  } else if (type == \"time\") {\n    v = \"'00:00'\";\n  } else if (type == \"number\") {\n    v = \"0\";\n  }\n  return v;\n};\n\nexport const mongoEmptyValue = (fieldDef) => {\n  let v = \"\";\n  const type = fieldDef?.type;\n  if (type == \"number\") {\n    v = 0;\n  }\n  return v;\n};\n\n\nconst spelEscapeString = (val) => {\n  // Strings are delimited by single quotes. To put a single quote itself in a string, use two single quote characters. \n  return \"'\" + val.replace(/'/g, \"''\") + \"'\";\n};\n\nconst spelInlineList = (vals, toArray = false) => {\n  // find java type of values\n  let javaType;\n  let jt;\n  const numberJavaTypes = [\"int\", \"float\"];\n  vals.map(v => {\n    if (v !== undefined && v !== null) {\n      if (typeof v === \"string\") {\n        jt = \"String\";\n      } else if (typeof v === \"number\") {\n        jt = Number.isInteger(v) ? \"int\" : \"float\";\n      } else throw new Error(`spelEscape: Can't use value ${v} in array`);\n\n      if (!javaType) {\n        javaType = jt;\n      } else if (javaType != jt) {\n        if (numberJavaTypes.includes(javaType) && numberJavaTypes.includes(jt)) {\n          // found int and float in collecton - use float\n          javaType = \"float\";\n        } else throw new Error(`spelEscape: Can't use different types in array: found ${javaType} and ${jt}`);\n      }\n    }\n  });\n  if (!javaType) {\n    javaType = \"String\"; //default if empty array\n  }\n\n  // for floats we should add 'f' to all items\n  let escapedVals;\n  if (javaType == \"float\") {\n    escapedVals = vals.map(v => spelEscape(v, true));\n  } else {\n    escapedVals = vals.map(v => spelEscape(v));\n  }\n\n  // build inline list or array\n  let res;\n  if (toArray) {\n    res = `new ${javaType}[]{${escapedVals.join(\", \")}}`;\n  } else {\n    res = `{${escapedVals.join(\", \")}}`;\n  }\n  \n  return res;\n};\n\nexport const spelFixList = (val) => {\n  // `{1,2}.contains(1)` NOT works\n  // `{1,2}.?[true].contains(1)` works\n  return `${val}.?[true]`;\n};\n\nexport const spelEscape = (val, numberToFloat = false, arrayToArray = false) => {\n  // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-ref-literal\n  if (val === undefined || val === null) {\n    return \"null\";\n  }\n  switch (typeof val) {\n  case \"boolean\":\n    return (val) ? \"true\" : \"false\";\n  case \"number\":\n    if (!Number.isFinite(val) || isNaN(val))\n      return undefined;\n    return val + (!Number.isInteger(val) || numberToFloat ? \"f\" : \"\");\n  case \"object\":\n    if (Array.isArray(val)) {\n      return spelInlineList(val, arrayToArray);\n    } else {\n      // see `spelFormatValue` for Date, LocalTime\n      throw new Error(\"spelEscape: Object is not supported\");\n    }\n  default: return spelEscapeString(val);\n  }\n};\n\nexport const spelFormatConcat = (parts) => {\n  if (parts && Array.isArray(parts) && parts.length) {\n    return parts\n      .map(part => {\n        if (part.type == \"const\") {\n          return spelEscape(part.value);\n        } else if (part.type == \"property\") {\n          return \"\"+part.value;\n        } else if (part.type == \"variable\") {\n          return \"#\"+part.value;\n        } return undefined;\n      })\n      .filter(r => r != undefined)\n      .join(\" + \");\n  } else {\n    return \"null\";\n  }\n};\n\n// `val` is {value, valueType, valueSrc}\n// If `valueType` == \"case_value\", `value` is array of such items (to be considered as concatenation)\nexport const spelImportConcat = (val) => {\n  if (val == undefined)\n    return [undefined, []];\n  let errors = [];\n  const value = val.valueType == \"case_value\" ? val.value : val;\n  const valueArr = Array.isArray(value) ? value : [value];\n  const res = valueArr.map(child => {\n    if (child.valueSrc === \"value\") {\n      if (child.value === null) {\n        return undefined;\n      } else {\n        return {\n          type: \"const\", \n          value: child.value\n        };\n      }\n    } else if (child.valueSrc === \"field\") {\n      return {\n        type: (child.isVariable ? \"variable\" : \"property\"), \n        value: child.value\n      };\n    } else {\n      errors.push(`Unsupported valueSrc ${child.valueSrc} in concatenation`);\n    }\n  }).filter(v => v != undefined);\n  return [res, errors];\n};\n\nexport const stringifyForDisplay = (v) => (v == null ? \"NULL\" : v.toString());\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, extendConfig, getFieldParts\n} from \"../utils/configUtils\";\nimport {\n  getWidgetForFieldOp, formatFieldName, getFieldPartsConfigs, completeValue\n} from \"../utils/ruleUtils\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, logger, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport {spelEscape} from \"../utils/export\";\n\n// https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions\n\nexport const compareToSign = \"${0}.compareTo(${1})\";\nconst TypesWithCompareTo = {\n  datetime: true,\n  time: true,\n  date: true,\n};\n\nexport const spelFormat = (tree, config) => {\n  return _spelFormat(tree, config, false);\n};\n\nexport const _spelFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta, null);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SpEL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, parentField);\n  } else if (type == \"switch_group\") {\n    return formatSwitch(item, config, meta, parentField);\n  } else if (type == \"case_group\") {\n    return formatCase(item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\nconst formatCase = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  if (type != \"case_group\") {\n    meta.errors.push(`Unexpected child of type ${type} inside switch`);\n    return undefined;\n  }\n  const properties = item.get(\"properties\") || new Map();\n  \n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, null, parentField, \"!case_value\"\n  );\n\n  const cond = formatGroup(item, config, meta, parentField);\n  return [cond, formattedValue];\n};\n\nconst formatSwitch = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  if (!children) return undefined;\n  const cases = children\n    .map((currentChild) => formatCase(currentChild, config, meta, null))\n    .filter((currentChild) => typeof currentChild !== \"undefined\")\n    .valueSeq()\n    .toArray();\n  \n  if (!cases.length) return undefined;\n\n  if (cases.length == 1 && !cases[0][0]) {\n    // only 1 case without condition\n    return cases[0][1];\n  }\n\n  let filteredCases = [];\n  for (let i = 0 ; i < cases.length ; i++) {\n    if (i != (cases.length - 1) && !cases[i][0]) {\n      meta.errors.push(`No condition for case ${i}`);\n    } else {\n      filteredCases.push(cases[i]);\n      if (i == (cases.length - 1) && cases[i][0]) {\n        // no default - add null as default\n        filteredCases.push([undefined, null]);\n      }\n    }\n  }\n\n  let left = \"\", right = \"\";\n  for (let i = 0 ; i < filteredCases.length ; i++) {\n    let [cond, value] = filteredCases[i];\n    if (value == undefined)\n      value = \"null\";\n    if (cond == undefined)\n      cond = \"true\";\n    if (i != (filteredCases.length - 1)) {\n      left += `(${cond} ? ${value} : `;\n      right += \")\";\n    } else {\n      left += `${value}`;\n    }\n  }\n  return left + right;\n};\n\nconst formatGroup = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const not = properties.get(\"not\");\n\n  const isRuleGroup = type === \"rule_group\";\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const groupField = isRuleGroupArray ? field : parentField;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const isSpelArray = groupFieldDef.isSpelArray;\n  const {fieldSeparator} = config.settings;\n  \n  // check op for reverse\n  let groupOperator = properties.get(\"operator\");\n  if (!groupOperator && (!mode || mode == \"some\")) {\n    groupOperator = \"some\";\n  }\n  const realGroupOperator = checkOp(config, groupOperator, field);\n  const isGroupOpRev = realGroupOperator != groupOperator;\n  const realGroupOperatorDefinition = groupOperator && getOperatorConfig(config, realGroupOperator, field) || null;\n  const isGroup0 = isRuleGroup && (!realGroupOperator || realGroupOperatorDefinition.cardinality == 0);\n  \n  // build value for aggregation op\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realGroupOperator, parentField, null\n  );\n  \n  // build filter in aggregation\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n\n  if (isRuleGroupArray && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size)\n      return undefined;\n  }\n\n  const omitBrackets = isRuleGroup;\n  const filter = list.size ? conjunctionDefinition.spelFormatConj(list, conjunction, not, omitBrackets) : null;\n\n  // build result\n  let ret;\n  if (isRuleGroupArray) {\n    const formattedField = formatField(meta, config, field, parentField);\n    const sep = fieldSeparator || \".\";\n    const getSize = sep + (isSpelArray ? \"length\" : \"size()\");\n    const fullSize = `${formattedField}${getSize}`;\n    // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-collection-selection\n    const filteredSize = filter ? `${formattedField}.?[${filter}]${getSize}` : fullSize;\n    const groupValue = isGroup0 ? fullSize : formattedValue;\n    // format expression\n    ret = formatExpression(\n      meta, config, properties, filteredSize, groupValue, realGroupOperator, valueSrc, valueType, isGroupOpRev\n    );\n  } else {\n    ret = filter;\n  }\n  \n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, valueType) => {\n  const spelOp = operatorDefinition.spelOp;\n  if (!spelOp) return undefined;\n  const isSign = spelOp.includes(\"${0}\");\n  const isCompareTo = TypesWithCompareTo[valueType];\n  let sop = spelOp;\n  let fn;\n  const cardinality = getOpCardinality(operatorDefinition);\n  if (isCompareTo) {\n    // date1.compareTo(date2) >= 0\n    //   instead of\n    // date1 >= date2\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const compareRes = compareToSign.replace(/\\${(\\w+)}/g, (_, k) => (k == 0 ? field : (cardinality > 1 ? values[k-1] : values)));\n      return `${compareRes} ${sop} 0`;\n    };\n  } else if (isSign) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return spelOp.replace(/\\${(\\w+)}/g, (_, k) => (k == 0 ? field : (cardinality > 1 ? values[k-1] : values)));\n    };\n  } else if (cardinality == 0) {\n    // should not be\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sop} ${values}`;\n    };\n  }\n  return fn;\n};\n\nconst formatExpression = (meta, config, properties, formattedField, formattedValue, operator, valueSrc, valueType, isRev = false) => {\n  const field = properties.get(\"field\");\n  const opDef = getOperatorConfig(config, operator, field) || {};\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorOptions = properties.get(\"operatorOptions\");\n\n  //find fn to format expr\n  const fn = opDef.spelFormatOp || buildFnToFormatOp(operator, opDef, valueType);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n\n  //rev\n  if (isRev) {\n    ret = config.settings.spelFormatReverse(ret);\n  }\n\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrc}`);\n  }\n\n  return ret;\n};\n\nconst checkOp = (config, operator, field) => {\n  if (!operator) return undefined;\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n\n  let isRev = false;\n  const canFormatOp = opDef.spelOp || opDef.spelFormatOp;\n  const canFormatRevOp = revOpDef.spelOp || revOpDef.spelFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n  return operator;\n};\n\nconst formatRule = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  if (field == null || operator == null)\n    return undefined;\n\n  // check op for reverse\n  const realOp = checkOp(config, operator, field);\n  if (!realOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  const isRev = realOp != operator;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realOp, parentField, null\n  );\n  if (formattedValue === undefined)\n    return undefined;\n      \n  //format field\n  const formattedField = formatLhs(meta, config, field, fieldSrc, parentField);\n  if (formattedField === undefined)\n    return undefined;\n  \n  // format expression\n  let res = formatExpression(\n    meta, config, properties, formattedField, formattedValue, realOp, valueSrc, valueType, isRev\n  );\n  return res;\n};\n\nconst formatLhs = (meta, config, field, fieldSrc, parentField = null) => {\n  if (fieldSrc === \"func\")\n    return formatFunc(meta, config, field, parentField);\n  else\n    return formatField(meta, config, field, parentField);\n};\n\nconst formatItemValue = (config, properties, meta, operator, parentField, expectedValueType = null) => {\n  let field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  if (expectedValueType == \"!case_value\" || iValueType && iValueType.get(0) == \"case_value\") {\n    field = \"!case_value\";\n  }\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const cardinality = getOpCardinality(operatorDefinition);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  \n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  \n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      const fv = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDefinition, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (!( fvalue.size < cardinality || hasUndefinedValues )) {\n      formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n    }\n  }\n  \n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc === \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc === \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else {\n    if (typeof fieldWidgetDef?.spelFormatValue === \"function\") {\n      const fn = fieldWidgetDef.spelFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = spelEscape(currentValue);\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field, parentField = null) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsConfigs = getFieldPartsConfigs(field, config, parentField);\n  const formatFieldFn = config.settings.formatSpelField;\n  const fieldName = formatFieldName(field, config, meta, parentField);\n  const fieldPartsMeta = fieldPartsConfigs.map(([key, cnf, parentCnf]) => {\n    let parent;\n    if (parentCnf) {\n      if (parentCnf.type == \"!struct\" || parentCnf.type == \"!group\" && parentCnf.mode == \"struct\")\n        parent = cnf.isSpelMap ? \"map\" : \"class\";\n      else if (parentCnf.type == \"!group\")\n        parent = cnf.isSpelItemMap ? \"[map]\" : \"[class]\";\n      else\n        parent = \"class\";\n    }\n    const isSpelVariable = cnf?.isSpelVariable;\n    return {\n      key,\n      parent,\n      isSpelVariable,\n      fieldSeparator\n    };\n  });\n  const formattedField = formatFieldFn.call(config.ctx, fieldName, parentField, fieldParts, fieldPartsMeta, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const doEscape = argConfig.spelEscapeForFormat ?? true;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc, { forExport: true });\n\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, null, null, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc, { forExport: true });\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, null, null, parentField, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = doEscape ? finalFormattedVal : (argValue ?? defaultValue);\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n  \n  let ret;\n  if (typeof funcConfig.spelFormatFunc === \"function\") {\n    const fn = funcConfig.spelFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.spelFunc) {\n    // fill arg values\n    ret = funcConfig.spelFunc\n      .replace(/\\${(\\w+)}/g, (found, argKey) => {\n        return formattedArgs[argKey] ?? found;\n      });\n    // remove optional args (from end only)\n    const optionalArgs = Object.keys(funcConfig.args || {})\n      .reverse()\n      .filter(argKey => !!funcConfig.args[argKey].isOptional);\n    for (const argKey of optionalArgs) {\n      if (formattedArgs[argKey] != undefined)\n        break;\n      ret = ret.replace(new RegExp(\"(, )?\" + \"\\\\${\" + argKey + \"}\", \"g\"), \"\");\n    }\n    // missing required arg vals\n    ret = ret.replace(/\\${(\\w+)}/g, \"null\");\n  } else {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n  }\n  return ret;\n};\n","import { SpelExpressionEvaluator } from \"spel2js\";\nimport uuid from \"../utils/uuid\";\nimport {getFieldConfig, getFuncConfig, extendConfig, normalizeField, iterateFuncs} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {loadTree} from \"./tree\";\nimport {defaultConjunction, defaultGroupConjunction} from \"../utils/defaultUtils\";\nimport {getOpCardinality, logger, isJsonCompatible} from \"../utils/stuff\";\nimport moment from \"moment\";\nimport {compareToSign} from \"../export/spel\";\n\n// https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions\n\n// spel type => raqb type\nconst SpelPrimitiveTypes = {\n  number: \"number\",\n  string: \"text\",\n  boolean: \"boolean\",\n  null: \"null\" // should not be\n};\n// spel class => raqb type\nconst SpelPrimitiveClasses = {\n  String: \"text\",\n};\nconst ListValueType = \"multiselect\";\nconst isFuncableProperty = (p) => [\"length\"].includes(p);\n\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const loadFromSpel = (logicTree, config) => {\n  return _loadFromSpel(logicTree, config, true);\n};\n\nexport const _loadFromSpel = (spelStr, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  \n  let compiledExpression;\n  let convertedObj;\n  let jsTree = undefined;\n  try {\n    const compileRes = SpelExpressionEvaluator.compile(spelStr);\n    compiledExpression = compileRes._compiledExpression;\n  } catch (e) {\n    meta.errors.push(e);\n  }\n  \n  if (compiledExpression) {\n    //logger.debug(\"compiledExpression:\", compiledExpression);\n    convertedObj = postprocessCompiled(compiledExpression, meta);\n    logger.debug(\"convertedObj:\", convertedObj, meta);\n\n    jsTree = convertToTree(convertedObj, conv, extendedConfig, meta);\n    if (jsTree && jsTree.type != \"group\" && jsTree.type != \"switch_group\") {\n      jsTree = wrapInDefaultConj(jsTree, extendedConfig, convertedObj[\"not\"]);\n    }\n    logger.debug(\"jsTree:\", jsTree);\n  }\n\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from SpEL:\", meta.errors);\n    return immTree;\n  }\n};\n\nconst postprocessCompiled = (expr, meta, parentExpr = null) => {\n  const type = expr.getType();\n  let children = expr.getChildren().map(child => postprocessCompiled(child, meta, expr));\n\n  // flatize OR/AND\n  if (type == \"op-or\" || type == \"op-and\") {\n    children = children.reduce((acc, child) => {\n      const canFlatize = child.type == type && !child.not;\n      const flat = canFlatize ? child.children : [child];\n      return [...acc, ...flat];\n    }, []);\n  }\n\n  // unwrap NOT\n  if (type == \"op-not\") {\n    if (children.length != 1) {\n      meta.errors.push(`Operator NOT should have 1 child, but got ${children.length}}`);\n    }\n    return {\n      ...children[0],\n      not: !(children[0].not || false)\n    };\n  }\n\n  if (type == \"compound\") {\n    // remove `.?[true]`\n    children = children.filter(child => {\n      const isListFix = child.type == \"selection\" && child.children.length == 1 && child.children[0].type == \"boolean\" && child.children[0].val == true;\n      return !isListFix;\n    });\n    // aggregation\n    // eg. `results.?[product == 'abc'].length`\n    const selection = children.find(child => \n      child.type == \"selection\"\n    );\n    if (selection && selection.children.length != 1) {\n      meta.errors.push(`Selection should have 1 child, but got ${selection.children.length}`);\n    }\n    const filter = selection ? selection.children[0] : null;\n    let lastChild = children[children.length - 1];\n    const isSize = lastChild.type == \"method\" && lastChild.val.methodName == \"size\" \n      || lastChild.type == \"!func\" && lastChild.methodName == \"size\";\n    const isLength = lastChild.type == \"property\" && lastChild.val == \"length\";\n    const sourceParts = children.filter(child => \n      child !== selection && child !== lastChild\n    );\n    const source = {\n      type: \"compound\",\n      children: sourceParts\n    };\n    const isAggr = (isSize || isLength) && convertPath(sourceParts) != null;\n    if (isAggr) {\n      return {\n        type: \"!aggr\",\n        filter,\n        source\n      };\n    }\n    // remove `#this`, `#root`\n    children = children.filter(child => {\n      const isThis = child.type == \"variable\" && child.val == \"this\";\n      const isRoot = child.type == \"variable\" && child.val == \"root\";\n      return !(isThis || isRoot);\n    });\n    // indexer\n    children = children.map(child => {\n      if (child.type == \"indexer\" && child.children.length == 1) {\n        return {\n          type: \"indexer\", \n          val: child.children[0].val,\n          itype: child.children[0].type\n        };\n      } else {\n        return child;\n      }\n    });\n    // method\n    // if (lastChild.type == \"method\") {\n    //   // seems like obsolete code!\n    //   debugger\n    //   const obj = children.filter(child => \n    //     child !== lastChild\n    //   );\n    //   return {\n    //     type: \"!func\",\n    //     obj,\n    //     methodName: lastChild.val.methodName,\n    //     args: lastChild.val.args\n    //   };\n    // }\n    // !func\n    if (lastChild.type == \"!func\") {\n      const ret = {};\n      let curr = ret;\n      do {\n        Object.assign(curr, lastChild);\n        children = children.filter(child => child !== lastChild);\n        lastChild = children[children.length - 1];\n        if (lastChild?.type == \"!func\") {\n          curr.obj = {};\n          curr = curr.obj;\n        } else {\n          if (children.length > 1) {\n            curr.obj = {\n              type: \"compound\",\n              children\n            };\n          } else {\n            curr.obj = lastChild;\n          }\n        }\n      } while(lastChild?.type == \"!func\");\n      return ret;\n    }\n  }\n\n  // getRaw || getValue\n  let val;\n  try {\n    if (expr.getRaw) { // use my fork\n      val = expr.getRaw();\n    } else if (expr.getValue.length == 0) { // getValue not requires context arg -> can use\n      val = expr.getValue();\n    }\n  } catch(e) {\n    logger.error(\"[spel2js] Error in getValue()\", e);\n  }\n\n  // ternary\n  if (type == \"ternary\") {\n    val = flatizeTernary(children);\n  }\n\n  // convert method/function args\n  if (typeof val === \"object\" && val !== null) {\n    if (val.methodName || val.functionName) {\n      val.args = val.args.map(child => postprocessCompiled(child, meta, expr));\n    }\n  }\n  // convert list\n  if (type == \"list\") {\n    val = val.map(item => postprocessCompiled(item, meta, expr));\n\n    // fix whole expression wrapped in `{}`\n    if (!parentExpr && val.length == 1) {\n      return val[0];\n    }\n  }\n  // convert constructor\n  if (type == \"constructorref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in constructorref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!new\",\n      cls,\n      args\n    };\n  }\n  // convert type\n  if (type == \"typeref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in typeref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const _args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!type\",\n      cls\n    };\n  }\n  // convert function/method\n  if (type == \"function\" || type == \"method\") {\n    // `foo()` is method, `#foo()` is function\n    // let's use common property `methodName` and just add `isVar` for function\n    const {functionName, methodName, args} = val;\n    return {\n      type: \"!func\",\n      methodName: functionName || methodName,\n      isVar: type == \"function\",\n      args\n    };\n  }\n\n  return {\n    type,\n    children,\n    val,\n  };\n};\n\nconst flatizeTernary = (children) => {\n  let flat = [];\n  function _processTernaryChildren(tern) {\n    let [cond, if_val, else_val] = tern;\n    flat.push([cond, if_val]);\n    if (else_val?.type == \"ternary\") {\n      _processTernaryChildren(else_val.children);\n    } else {\n      flat.push([undefined, else_val]);\n    }\n  }\n  _processTernaryChildren(children);\n  return flat;\n};\n\nconst buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (opConfig.spelOps) {\n      // examples: \"==\", \"eq\", \".contains\", \"matches\" (can be used for starts_with, ends_with)\n      opConfig.spelOps.forEach(spelOp => {\n        const opk = spelOp; // + \"/\" + getOpCardinality(opConfig);\n        if (!operators[opk])\n          operators[opk] = [];\n        operators[opk].push(opKey);\n      });\n    } else if (opConfig.spelOp) {\n      const opk = opConfig.spelOp; // + \"/\" + getOpCardinality(opConfig);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else {\n      logger.log(`[spel] No spelOp for operator ${opKey}`);\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.spelConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (const [funcPath, funcConfig] of iterateFuncs(config)) {\n    let fks = [];\n    const {spelFunc} = funcConfig;\n    if (typeof spelFunc === \"string\") {\n      const optionalArgs = Object.keys(funcConfig.args || {})\n        .reverse()\n        .filter(argKey => !!funcConfig.args[argKey].isOptional || funcConfig.args[argKey].defaultValue != undefined);\n      const funcSignMain = spelFunc\n        .replace(/\\${(\\w+)}/g, (_, _k) => \"?\");\n      const funcSignsOptional = optionalArgs\n        .reduce((acc, argKey) => (\n          [\n            ...acc,\n            [\n              argKey,\n              ...(acc[acc.length-1] || []),\n            ]\n          ]\n        ), [])\n        .map(optionalArgKeys => (\n          spelFunc\n            .replace(/(?:, )?\\${(\\w+)}/g, (found, a) => (\n              optionalArgKeys.includes(a) ? \"\" : found\n            ))\n            .replace(/\\${(\\w+)}/g, (_, _k) => \"?\")\n        ));\n      fks = [\n        funcSignMain,\n        ...funcSignsOptional,\n      ];\n    }\n    for (const fk of fks) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcPath);\n    }\n  }\n\n  let valueFuncs = {};\n  for (let w in config.widgets) {\n    const widgetDef = config.widgets[w];\n    const {spelImportFuncs, type} = widgetDef;\n    if (spelImportFuncs) {\n      for (const fk of spelImportFuncs) {\n        if (typeof fk === \"string\") {\n          const fs = fk.replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n          const argsOrder = [...fk.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n          if (!valueFuncs[fs])\n            valueFuncs[fs] = [];\n          valueFuncs[fs].push({\n            w,\n            argsOrder\n          });\n        }\n      }\n    }\n  }\n\n  let opFuncs = {};\n  for (let op in config.operators) {\n    const opDef = config.operators[op];\n    const {spelOp} = opDef;\n    if (spelOp?.includes(\"${0}\")) {\n      const fs = spelOp.replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n      const argsOrder = [...spelOp.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n      if (!opFuncs[fs])\n        opFuncs[fs] = [];\n      opFuncs[fs].push({\n        op,\n        argsOrder\n      });\n    }\n  }\n  // Special .compareTo()\n  const compareToSS = compareToSign.replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n  opFuncs[compareToSS] = [{\n    op: \"!compare\",\n    argsOrder: [\"0\", \"1\"]\n  }];\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    valueFuncs,\n    opFuncs,\n  };\n};\n\nconst convertToTree = (spel, conv, config, meta, parentSpel = null) => {\n  if (!spel) return undefined;\n\n  let res, canParseAsArg = true;\n  if (spel.type.indexOf(\"op-\") === 0 || spel.type === \"matches\") {\n    res = convertOp(spel, conv, config, meta, parentSpel);\n  } else if (spel.type == \"!aggr\") {\n    const groupFieldValue = convertToTree(spel.source, conv, config, meta, {\n      ...spel, \n      _groupField: parentSpel?._groupField\n    });\n    let groupFilter = convertToTree(spel.filter, conv, config, meta, {\n      ...spel, \n      _groupField: groupFieldValue?.value\n    });\n    if (groupFilter?.type == \"rule\") {\n      groupFilter = wrapInDefaultConj(groupFilter, config, spel.filter.not);\n    }\n    res = {\n      groupFilter,\n      groupFieldValue\n    };\n    if (!parentSpel) {\n      // !aggr can't be in root, it should be compared with something\n      res = undefined;\n      meta.errors.push(\"Unexpected !aggr in root\");\n      canParseAsArg = false;\n    }\n  } else if (spel.type == \"ternary\") {\n    const children1 = {};\n    spel.val.forEach(v => {\n      const [cond, val] = v;\n      const caseI = buildCase(cond, val, conv, config, meta, spel);\n      if (caseI) {\n        children1[caseI.id] = caseI;\n      }\n    });\n    res = {\n      type: \"switch_group\",\n      id: uuid(),\n      children1,\n      properties: {}\n    };\n  }\n\n  if (!res && canParseAsArg) {\n    res = convertArg(spel, conv, config, meta, parentSpel);\n  }\n\n  if (res && !res.type && !parentSpel) {\n    // res is not a rule, it's value at root\n    // try to parse whole `\"1\"` as ternary\n    const sw = buildSimpleSwitch(spel, conv, config, meta);\n    if (sw) {\n      res = sw;\n    } else {\n      res = undefined;\n      meta.errors.push(`Can't convert rule of type ${spel.type}, it looks like var/literal`);\n    }\n  }\n  \n  return res;\n};\n\nconst convertOp = (spel, conv, config, meta, parentSpel = null) => {\n  let res;\n\n  let op = spel.type.startsWith(\"op-\") ? spel.type.slice(\"op-\".length) : spel.type;\n\n  // unary\n  const isUnary = (op == \"minus\" || op == \"plus\") && spel.children.length == 1;\n  if (isUnary) {\n    let negative = spel.negative;\n    if (op == \"minus\") {\n      negative = !negative;\n    }\n    spel.children[0].negative = negative;\n    return convertToTree(spel.children[0], conv, config, meta, parentSpel);\n  }\n\n  // between\n  let isBetweenNormal = (op == \"and\" && spel.children.length == 2 && spel.children[0].type == \"op-ge\" && spel.children[1].type == \"op-le\");\n  let isBetweenRev = (op == \"or\" && spel.children.length == 2 && spel.children[0].type == \"op-lt\" && spel.children[1].type == \"op-gt\");\n  let isBetween = isBetweenNormal || isBetweenRev;\n  if (isBetween) {\n    const [left, from] = spel.children[0].children;\n    const [right, to] = spel.children[1].children;\n    const isSameSource = compareArgs(left, right,  spel, conv, config, meta, parentSpel);\n    if (isSameSource) {\n      const _fromValue = from.val;\n      const _toValue = to.val;\n      const oneSpel = {\n        type: \"op-between\",\n        children: [\n          left,\n          from,\n          to\n        ],\n        not: isBetweenRev,\n      };\n      return convertOp(oneSpel, conv, config, meta, parentSpel);\n    }\n  }\n\n  // find op\n  let opKeys = conv.operators[op];\n  if (op == \"eq\" && spel.children[1].type == \"null\") {\n    opKeys = [\"is_null\"];\n  } else if (op == \"ne\" && spel.children[1].type == \"null\") {\n    opKeys = [\"is_not_null\"];\n  } else if (op == \"le\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n    opKeys = [\"is_empty\"];\n  } else if (op == \"gt\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n    opKeys = [\"is_not_empty\"];\n  } else if (op == \"between\") {\n    opKeys = [\"between\"];\n  }\n\n  // convert children\n  const convertChildren = () => {\n    let newChildren = spel.children.map(child =>\n      convertToTree(child, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      })\n    );\n    if (newChildren.length >= 2 && newChildren?.[0]?.type == \"!compare\") {\n      newChildren = newChildren[0].children;\n    }\n    return newChildren;\n  };\n\n  if (op == \"and\" || op == \"or\") {\n    const children1 = {};\n    const vals = convertChildren();\n    vals.forEach(v => {\n      if (v) {\n        const id = uuid();\n        v.id = id;\n        if (v.type != undefined) {\n          children1[id] = v;\n        } else {\n          meta.errors.push(`Bad item in AND/OR: ${JSON.stringify(v)}`);\n        }\n      }\n    });\n    res = {\n      type: \"group\",\n      id: uuid(),\n      children1,\n      properties: {\n        conjunction: conv.conjunctions[op],\n        not: spel.not\n      }\n    };\n  } else if (opKeys) {\n    const vals = convertChildren();\n    const fieldObj = vals[0];\n    let convertedArgs = vals.slice(1);\n    const groupField = fieldObj?.groupFieldValue?.value;\n    const opArg = convertedArgs?.[0];\n    \n    let opKey = opKeys[0];\n    if (opKeys.length > 1) {\n      const valueType = vals[0]?.valueType || vals[1]?.valueType;\n      //todo: it's naive, use valueType\n      const field = fieldObj?.value;\n      const widgets = opKeys.map(op => ({op, widget: getWidgetForFieldOp(config, field, op)}));\n      logger.warn(`[spel] Spel operator ${op} can be mapped to ${opKeys}.`,\n        \"widgets:\", widgets, \"vals:\", vals, \"valueType=\", valueType);\n      \n      if (op == \"eq\" || op == \"ne\") {\n        const ws = widgets.find(({ op, widget }) => (widget && widget != \"field\"));\n        if (ws) {\n          opKey = ws.op;\n        }\n      }\n    }\n\n    // some/all/none\n    if (fieldObj?.groupFieldValue) {\n      if (opArg && opArg.groupFieldValue && opArg.groupFieldValue.valueSrc == \"field\" && opArg.groupFieldValue.value == groupField) {\n        // group.?[...].size() == group.size()\n        opKey = \"all\";\n        convertedArgs = [];\n      } else if (opKey == \"equal\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n        opKey = \"none\";\n        convertedArgs = [];\n      } else if (opKey == \"greater\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n        opKey = \"some\";\n        convertedArgs = [];\n      }\n    }\n\n    let canRev = true;\n    let needWrapReverse = false;\n    if (spel.not && canRev) {\n      const opConfig = config.operators[opKey];\n      if (opConfig.reversedOp) {\n        opKey = opConfig.reversedOp;\n        spel.not = false;\n      } else {\n        needWrapReverse = true;\n      }\n    }\n    \n    if (!fieldObj) {\n      // LHS can't be parsed\n    } else if (fieldObj.groupFieldValue) {\n      // 1. group\n      if (fieldObj.groupFieldValue.valueSrc != \"field\") {\n        meta.errors.push(`Expected group field ${JSON.stringify(fieldObj)}`);\n      }\n\n      res = buildRuleGroup(fieldObj, opKey, convertedArgs, config, meta);\n    } else {\n      // 2. not group\n      if (fieldObj.valueSrc != \"field\" && fieldObj.valueSrc != \"func\") {\n        meta.errors.push(`Expected field/func at LHS, but got ${JSON.stringify(fieldObj)}`);\n      }\n      const field = fieldObj.value;\n      res = buildRule(config, meta, field, opKey, convertedArgs);\n    }\n\n    if (needWrapReverse) {\n      if (res.type !== \"group\") {\n        res = wrapInDefaultConj(res, config, spel.not);\n      } else {\n        res.properties.not = !res.properties.not;\n      }\n    }\n  } else {\n    if (!parentSpel) {\n      // try to parse whole `\"str\" + prop + #var` as ternary\n      res = buildSimpleSwitch(spel, conv, config, meta);\n    }\n    // if (!res) {\n    //   meta.errors.push(`Can't convert op ${op}`);\n    // }\n  }\n  return res;\n};\n\nconst convertPath = (parts, meta = {}, expectingField = false) => {\n  let isError = false;\n  const res = parts.map(c => {\n    if (c.type == \"variable\" || c.type == \"property\" || c.type == \"indexer\" && c.itype == \"string\") {\n      return c.val;\n    } else {\n      isError = true;\n      expectingField && meta?.errors?.push?.(`Unexpected item in field path compound: ${JSON.stringify(c)}`);\n    }\n  });\n  return !isError ? res : undefined;\n};\n\nconst convertArg = (spel, conv, config, meta, parentSpel) => {\n  if (spel == undefined)\n    return undefined;\n  const {fieldSeparator} = config.settings;\n\n  if (spel.type == \"variable\" || spel.type == \"property\") {\n    // normal field\n    const field = normalizeField(config, spel.val, parentSpel?._groupField);\n    const fieldConfig = getFieldConfig(config, field);\n    const isVariable = spel.type == \"variable\";\n    return {\n      valueSrc: \"field\",\n      valueType: fieldConfig?.type,\n      isVariable,\n      value: field,\n    };\n  } else if (spel.type == \"compound\") {\n    // complex field\n    const parts = convertPath(spel.children, meta);\n    if (parts) {\n      const field = normalizeField(config, parts.join(fieldSeparator), parentSpel?._groupField);\n      const fieldConfig = getFieldConfig(config, field);\n      const isVariable = spel.children?.[0]?.type == \"variable\";\n      return {\n        valueSrc: \"field\",\n        valueType: fieldConfig?.type,\n        isVariable,\n        value: field,\n      };\n    } else {\n      // it's not complex field\n    }\n  } else if (SpelPrimitiveTypes[spel.type]) {\n    let value = spel.val;\n    const valueType = SpelPrimitiveTypes[spel.type];\n    if (spel.negative) {\n      value = -value;\n    }\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type == \"!new\" && SpelPrimitiveClasses[spel.cls.at(-1)]) {\n    const args = spel.args.map(v => convertArg(v, conv, config, meta, spel));\n    const value = args?.[0];\n    const valueType = SpelPrimitiveClasses[spel.cls.at(-1)];\n    return {\n      ...value,\n      valueType,\n    };\n  } else if (spel.type == \"list\") {\n    const values = spel.val.map(v => convertArg(v, conv, config, meta, spel));\n    const _itemType = values.length ? values[0]?.valueType : null;\n    const value = values.map(v => v?.value);\n    const valueType = ListValueType;\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type === \"op-plus\" && parentSpel?.type === \"ternary\" && config.settings.caseValueField?.type === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    return buildCaseValueConcat(spel, conv, config, meta);\n  }\n\n  let maybe = convertFunc(spel, conv, config, meta, parentSpel);\n  if (maybe !== undefined) {\n    return maybe;\n  }\n\n  meta.errors.push(`Can't convert arg of type ${spel.type}`);\n  return undefined;\n};\n\nconst buildFuncSignatures = (spel) => {\n  // branches\n  const brns = [\n    {s: \"\", params: [], objs: []}\n  ];\n  _buildFuncSignatures(spel, brns);\n  return brns.map(({s, params}) => ({s, params})).reverse().filter(({s}) => s !== \"\" && s !== \"?\");\n};\n\n// a.toLower().toUpper()\n// ->\n// ?.toLower().toUpper()\n// ?.toUpper()\nconst _buildFuncSignatures = (spel, brns) => {\n  let params = [], s = \"\";\n  const { type, methodName, val, obj, args, isVar, cls, children } = spel;\n  const lastChild = children?.[children.length-1];\n  let currBrn = brns[brns.length-1];\n  if (type === \"!func\") {\n    // T(DateTimeFormat).forPattern(?).parseDateTime(?)  --  ok\n    // T(LocalDateTime).parse(?, T(DateTimeFormatter).ofPattern(?))  --  will not work\n    let o = obj;\n    while (o) {\n      const [s1, params1] = _buildFuncSignatures({...o, obj: null}, [{}]);\n      if (s1 !== \"?\") {\n        // start new branch\n        const newBrn = {\n          s: currBrn.s,\n          params: [...currBrn.params],\n          objs: [...currBrn.objs]\n        };\n        // finish old branch\n        currBrn.objs.unshift(\"?\");\n        currBrn.params.unshift(o);\n        // switch\n        brns.push(newBrn);\n        currBrn = brns[brns.length-1];\n      }\n      // step\n      currBrn.objs.unshift(s1);\n      currBrn.params.unshift(...params1);\n      o = o.type === \"!func\" ? o.obj : null;\n    }\n    for (const brn of brns) {\n      params = [\n        ...(brn?.params || []),\n        ...(args || []),\n      ];\n      s = \"\";\n      if (brn?.objs?.length)\n        s += brn.objs.join(\".\") + \".\";\n      s += (isVar ? \"#\" : \"\") + methodName;\n      s += \"(\" + (args || []).map(_ => \"?\").join(\", \") + \")\";\n      brn.s = s;\n      brn.params = params;\n    }\n  } else if (type === \"!new\") {\n    // new java.text.SimpleDateFormat('HH:mm:ss').parse('...')\n    params = args || [];\n    s = `new ${cls.join(\".\")}(${params.map(_ => \"?\").join(\", \")})`;\n  } else if (type === \"!type\") {\n    // T(java.time.LocalTime).parse('...')\n    s = `T(${cls.join(\".\")})`;\n  } else if (type === \"compound\" && lastChild.type === \"property\" && isFuncableProperty(lastChild.val)) {\n    // {1,2}.length  --  ok\n    // 'Hello World'.bytes.length  --  will not work\n    s = children.map((c) => {\n      if (c === lastChild)\n        return c.val;\n      const [s1, params1] = _buildFuncSignatures({...c, obj: null}, [{}]);\n      params.push(...params1);\n      return s1;\n    }).join(\".\");\n  } else {\n    params = [spel];\n    s = \"?\";\n  }\n\n  if (currBrn) {\n    currBrn.s = s;\n    currBrn.params = params;\n  }\n\n  return [s, params];\n};\n\nconst convertFunc = (spel, conv, config, meta, parentSpel) => {\n  // Build signatures\n  const convertFuncArg = v => convertToTree(v, conv, config, meta, {\n    ...spel,\n    _groupField: parentSpel?._groupField\n  });\n  const fsigns = buildFuncSignatures(spel);\n  const firstSign = fsigns?.[0]?.s;\n  if (fsigns.length)\n    logger.debug(\"Signatures for \", spel, \":\", firstSign, fsigns);\n  \n  // 1. Try to parse as value\n  let maybeValue = convertFuncToValue(spel, conv, config, meta, parentSpel, fsigns, convertFuncArg);\n  if (maybeValue !== undefined)\n    return maybeValue;\n  \n  // 2. Try to parse as op\n  let maybeOp = convertFuncToOp(spel, conv, config, meta, parentSpel, fsigns, convertFuncArg);\n  if (maybeOp !== undefined)\n    return maybeOp;\n  \n  // 3. Try to parse as func\n  let funcKey, funcConfig, argsObj;\n  // try func signature matching\n  for (const {s, params} of fsigns) {\n    const funcKeys = conv.funcs[s];\n    if (funcKeys) {\n      // todo: here we can check arg types, if we have function overloading\n      funcKey = funcKeys[0];\n      funcConfig = getFuncConfig(config, funcKey);\n      const {spelFunc} = funcConfig;\n      const argsArr = params.map(convertFuncArg);\n      const argsOrder = [...spelFunc.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n      argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      break;\n    }\n  }\n  // try `spelImport`\n  if (!funcKey) {\n    for (const [f, fc] of iterateFuncs(config)) {\n      if (fc.spelImport) {\n        let parsed;\n        try {\n          parsed = fc.spelImport(spel);\n        } catch(_e) {\n          // can't be parsed\n        }\n        if (parsed) {\n          funcKey = f;\n          funcConfig = getFuncConfig(config, funcKey);\n          argsObj = {};\n          for (let argKey in parsed) {\n            argsObj[argKey] = convertFuncArg(parsed[argKey]);\n          }\n        }\n      }\n    }\n  }\n\n  // convert\n  if (funcKey) {\n    const funcArgs = {};\n    for (let argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      let argVal = argsObj[argKey];\n      if (argVal === undefined) {\n        argVal = argConfig?.defaultValue;\n        if (argVal === undefined) {\n          if (argConfig?.isOptional) {\n            //ignore\n          } else {\n            meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n            return undefined;\n          }\n        } else {\n          argVal = {\n            value: argVal,\n            valueSrc: argVal?.func ? \"func\" : \"value\",\n            valueType: argConfig.type,\n          };\n        }\n      }\n      if (argVal)\n        funcArgs[argKey] = argVal;\n    }\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: funcArgs\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  const {methodName} = spel;\n  if (methodName)\n    meta.errors.push(`Signature ${firstSign} - failed to convert`);\n  \n  return undefined;\n};\n\nconst convertFuncToValue = (spel, conv, config, meta, parentSpel, fsigns, convertFuncArg) => {\n  let errs, foundSign, foundWidget;\n  const candidates = [];\n\n  for (let w in config.widgets) {\n    const widgetDef = config.widgets[w];\n    const {spelImportFuncs} = widgetDef;\n    if (spelImportFuncs) {\n      for (let i = 0 ; i < spelImportFuncs.length ; i++) {\n        const fj = spelImportFuncs[i];\n        if (isObject(fj)) {\n          const bag = {};\n          if (isJsonCompatible(fj, spel, bag)) {\n            for (const k in bag) {\n              bag[k] = convertFuncArg(bag[k]);\n            }\n            candidates.push({\n              s: `widgets.${w}.spelImportFuncs[${i}]`,\n              w,\n              argsObj: bag,\n            });\n          }\n        }\n      }\n    }\n  }\n\n  for (const {s, params} of fsigns) {\n    const found = conv.valueFuncs[s] || [];\n    for (const {w, argsOrder} of found) {\n      const argsArr = params.map(convertFuncArg);\n      const argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      candidates.push({\n        s,\n        w,\n        argsObj,\n      });\n    }\n  }\n\n  for (const {s, w, argsObj} of candidates) {\n    const widgetDef = config.widgets[w];\n    const {spelImportValue, type} = widgetDef;\n    foundWidget = w;\n    foundSign = s;\n    errs = [];\n    for (const k in argsObj) {\n      if (![\"value\"].includes(argsObj[k].valueSrc)) {\n        errs.push(`${k} has unsupported value src ${argsObj[k].valueSrc}`);\n      }\n    }\n    let value = argsObj.v.value;\n    if (spelImportValue && !errs.length) {\n      [value, errs] = spelImportValue.call(config.ctx, argsObj.v, widgetDef, argsObj);\n      if (errs && !Array.isArray(errs))\n        errs = [errs];\n    }\n    if (!errs.length) {\n      return {\n        valueSrc: \"value\",\n        valueType: type,\n        value,\n      };\n    }\n  }\n\n  if (foundWidget && errs.length) {\n    meta.errors.push(`Signature ${foundSign} - looks like convertable to ${foundWidget}, but: ${errs.join(\"; \")}`);\n  }\n\n  return undefined;\n};\n\nconst convertFuncToOp = (spel, conv, config, meta, parentSpel, fsigns, convertFuncArg) => {\n  let errs, opKey, foundSign;\n  for (const {s, params} of fsigns) {\n    const found = conv.opFuncs[s] || [];\n    for (const {op, argsOrder} of found) {\n      const argsArr = params.map(convertFuncArg);\n      opKey = op;\n      if (op === \"!compare\") {\n        if (\n          parentSpel.type.startsWith(\"op-\")\n          && parentSpel.children.length == 2\n          && parentSpel.children[1].type == \"number\"\n          && parentSpel.children[1].val === 0\n        ) {\n          return {\n            type: \"!compare\",\n            children: argsArr,\n          };\n        } else {\n          errs.push(\"Result of compareTo() should be compared to 0\");\n        }\n      }\n      foundSign = s;\n      errs = [];\n      const opDef = config.operators[opKey];\n      const {spelOp, valueTypes} = opDef;\n      const argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      const field = argsObj[\"0\"];\n      const convertedArgs = Object.keys(argsObj).filter(k => parseInt(k) > 0).map(k => argsObj[k]);\n      \n      const valueType = argsArr.filter(a => !!a).find(({valueSrc}) => valueSrc === \"value\")?.valueType;\n      if (valueTypes && valueType && !valueTypes.includes(valueType)) {\n        errs.push(`Op supports types ${valueTypes}, but got ${valueType}`);\n      }\n      if (!errs.length) {\n        return buildRule(config, meta, field, opKey, convertedArgs, spel);\n      }\n    }\n  }\n\n  if (opKey && errs.length) {\n    meta.errors.push(`Signature ${foundSign} - looks like convertable to ${opKey}, but: ${errs.join(\"; \")}`);\n  }\n\n  return undefined;\n};\n\nconst buildRule = (config, meta, field, opKey, convertedArgs, spel) => {\n  if (convertedArgs.filter(v => v === undefined).length) {\n    return undefined;\n  }\n  let fieldSrc = field?.func ? \"func\" : \"field\";\n  if (isObject(field) && field.valueSrc) {\n    // if comed from convertFuncToOp()\n    fieldSrc = field.valueSrc;\n    field = field.value;\n  }\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig) {\n    meta.errors.push(`No config for field ${field}`);\n    return undefined;\n  }\n\n  let canRev = true;\n  let needWrapReverse = false;\n  if (spel?.not && canRev) {\n    const opConfig = config.operators[opKey];\n    if (opConfig.reversedOp) {\n      opKey = opConfig.reversedOp;\n      spel.not = false;\n    } else {\n      needWrapReverse = true;\n    }\n  }\n\n  const widget = getWidgetForFieldOp(config, field, opKey);\n  const widgetConfig = config.widgets[widget || fieldConfig.mainWidget];\n  const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n  const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n\n  let res = {\n    type: \"rule\",\n    id: uuid(),\n    properties: {\n      field,\n      fieldSrc,\n      operator: opKey,\n      value: convertedArgs.map(v => v.value),\n      valueSrc: convertedArgs.map(v => v.valueSrc),\n      valueType: convertedArgs.map(v => {\n        if (v.valueSrc == \"value\") {\n          return widgetConfig?.type || fieldConfig?.type || v.valueType;\n        }\n        return v.valueType;\n      }),\n      ...(asyncListValues ? {asyncListValues} : {}),\n    }\n  };\n\n  if (needWrapReverse) {\n    res = wrapInDefaultConj(res, config, spel?.not);\n    if (spel?.not) {\n      spel.not = false;\n    }\n  }\n\n  return res;\n};\n\nconst buildRuleGroup = ({groupFilter, groupFieldValue}, opKey, convertedArgs, config, meta) => {\n  if (groupFieldValue.valueSrc != \"field\")\n    throw `Bad groupFieldValue: ${JSON.stringify(groupFieldValue)}`;\n  const groupField = groupFieldValue.value;\n  let groupOpRule = buildRule(config, meta, groupField, opKey, convertedArgs);\n  if (!groupOpRule)\n    return undefined;\n  const fieldConfig = getFieldConfig(config, groupField);\n  const mode = fieldConfig?.mode;\n  let res;\n\n  if (groupFilter?.type === \"group\") {\n    res = {\n      ...(groupFilter || {}),\n      type: \"rule_group\",\n      properties: {\n        ...groupOpRule.properties,\n        ...(groupFilter?.properties || {}),\n        mode\n      }\n    };\n  } else if (groupFilter) {\n    // rule_group in rule_group\n    res = {\n      ...(groupOpRule || {}),\n      type: \"rule_group\",\n      children1: [ groupFilter ],\n      properties: {\n        ...groupOpRule.properties,\n        mode\n      }\n    };\n  } else {\n    res = {\n      ...(groupOpRule || {}),\n      type: \"rule_group\",\n      properties: {\n        ...groupOpRule.properties,\n        mode\n      }\n    };\n  }\n\n  if (!res.id)\n    res.id = uuid();\n  return res;\n};\n\n\nconst compareArgs = (left, right,  spel, conv, config, meta, parentSpel = null) => {\n  if (left.type == right.type) {\n    if (left.type == \"!aggr\") {\n      const [leftSource, rightSource] = [left.source, right.source].map(v => convertArg(v, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      }));\n      //todo: check same filter\n      return leftSource.value == rightSource.value;\n    } else {\n      const [leftVal, rightVal] = [left, right].map(v => convertArg(v, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      }));\n      return leftVal.value == rightVal.value;\n    }\n  }\n  return false;\n};\n\nconst buildSimpleSwitch = (val, conv, config, meta) => {\n  let children1 = {};\n  const cond = null;\n  const caseI = buildCase(cond, val, conv, config, meta);\n  if (caseI) {\n    children1[caseI.id] = caseI;\n  }\n  let res = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n  return res;\n};\n\nconst buildCase = (cond, val, conv, config, meta, spel = null) => {\n  const valProperties = buildCaseValProperties(config, meta, conv, val, spel);\n\n  let caseI;\n  if (cond) {\n    caseI = convertToTree(cond, conv, config, meta, spel);\n    if (caseI && caseI.type) {\n      if (caseI.type != \"group\") {\n        caseI = wrapInDefaultConj(caseI, config);\n      }\n      caseI.type = \"case_group\";\n    } else {\n      meta.errors.push(`Unexpected case: ${JSON.stringify(caseI)}`);\n      caseI = undefined;\n    }\n  } else {\n    caseI = {\n      id: uuid(),\n      type: \"case_group\",\n      properties: {}\n    };\n  }\n\n  if (caseI) {\n    caseI.properties = {\n      ...caseI.properties,\n      ...valProperties\n    };\n  }\n\n  return caseI;\n};\n\n/**\n * @deprecated\n */\nconst buildCaseValueConcat = (spel, conv, config, meta) => {\n  let flat = [];\n  function _processConcatChildren(children) {\n    children.map(child => {\n      if (child.type === \"op-plus\") {\n        _processConcatChildren(child.children);\n      } else {\n        const convertedChild = convertArg(child, conv, config, meta, spel);\n        if (convertedChild) {\n          flat.push(convertedChild);\n        } else {\n          meta.errors.push(`Can't convert ${child.type} in concatenation`);\n        }\n      }\n    });\n  }\n  _processConcatChildren(spel.children);\n  return {\n    valueSrc: \"value\",\n    valueType: \"case_value\",\n    value: flat,\n  };\n};\n\nconst buildCaseValProperties = (config, meta, conv, val, spel = null) => {\n  let valProperties = {};\n  let convVal;\n  let widget;\n  let widgetConfig;\n  const caseValueFieldConfig = getFieldConfig(config, \"!case_value\");\n  if (val?.type === \"op-plus\" && config.settings.caseValueField?.type === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    widget = \"case_value\";\n    convVal = buildCaseValueConcat(val, conv, config, meta);\n  } else {\n    widget = caseValueFieldConfig?.mainWidget;\n    widgetConfig = config.widgets[widget];\n    convVal = convertArg(val, conv, config, meta, spel);\n    if (convVal && convVal.valueSrc === \"value\") {\n      convVal.valueType = widgetConfig?.type || caseValueFieldConfig?.type || convVal.valueType;\n    }\n  }\n  const widgetDef = config.widgets[widget];\n  if (widget === \"case_value\") {\n    /**\n     * @deprecated\n     */\n    const importCaseValue = widgetDef?.spelImportValue;\n    if (importCaseValue) {\n      const [normVal, normErrors] = importCaseValue.call(config.ctx, convVal);\n      normErrors.map(e => meta.errors.push(e));\n      if (normVal != undefined) {\n        valProperties = {\n          value: [normVal],\n          valueSrc: [\"value\"],\n          valueType: [widgetDef?.type ?? \"case_value\"],\n          field: \"!case_value\",\n        };\n      }\n    }\n  } else if (convVal != undefined && convVal?.value != undefined) {\n    valProperties = {\n      value: [convVal.value],\n      valueSrc: [convVal.valueSrc],\n      valueType: [convVal.valueType],\n      field: \"!case_value\",\n    };\n  }\n  return valProperties;\n};\n\nconst wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj) => {\n  if (!rule) return undefined;\n  return {\n    type: \"rule_group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n      not: false,\n      field: parentField,\n    }\n  };\n};\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not || false\n    }\n  };\n};\n","import Immutable from \"immutable\";\nimport uuid from \"./uuid\";\nimport {getFieldConfig, getOperatorConfig, getFieldParts, getFirstField} from \"./configUtils\";\nimport {getFirstOperator} from \"../utils/ruleUtils\";\nimport {getNewValueForFieldOp} from \"../utils/validation\";\nimport { isImmutable } from \"./stuff\";\nimport { jsToImmutable } from \"../import\";\n\n\nexport const getDefaultField = (config, canGetFirst = true, parentRuleGroupPath = null) => {\n  const {defaultField} = config.settings;\n  let f = (!parentRuleGroupPath ? defaultField : getDefaultSubField(config, parentRuleGroupPath))\n    || canGetFirst && getFirstField(config, parentRuleGroupPath)\n    || null;\n  // if default LHS is func, convert to Immutable\n  if (f != null && typeof f !== \"string\" && !isImmutable(f)) {\n    f = jsToImmutable(f);\n  }\n  return f;\n};\n\nexport const getDefaultSubField = (config, parentRuleGroupPath = null) => {\n  if (!parentRuleGroupPath)\n    return null;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const parentRuleGroupConfig = getFieldConfig(config, parentRuleGroupPath);\n  let f = parentRuleGroupConfig?.defaultField;\n  if (f) {\n    f = [...getFieldParts(parentRuleGroupPath), f].join(fieldSeparator);\n  }\n  return f;\n};\n\nexport const getDefaultFieldSrc = (config, canGetFirst = true) => {\n  return canGetFirst && config.settings.fieldSources?.[0] || \"field\";\n};\n\nexport const getDefaultOperator = (config, field, canGetFirst = true) => {\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOperators = fieldConfig?.operators || [];\n  let {defaultOperator: globalDefaultOperator} = config.settings;\n  if (globalDefaultOperator && !fieldOperators.includes(globalDefaultOperator))\n    globalDefaultOperator = null;\n  const fieldDefaultOperator = fieldConfig?.defaultOperator;\n  const fieldOwnDefaultOperator = fieldConfig?.ownDefaultOperator;\n  const firstOperator = canGetFirst ? getFirstOperator(config, field) : null;\n  const op = fieldOwnDefaultOperator || globalDefaultOperator || fieldDefaultOperator || firstOperator;\n  return op;\n};\n\n//used for complex operators like proximity\nexport const defaultOperatorOptions = (config, operator, field) => {\n  let operatorConfig = operator ? getOperatorConfig(config, operator, field) : null;\n  if (!operatorConfig)\n    return null; //new Immutable.Map();\n  return operatorConfig.options ? new Immutable.Map(\n    operatorConfig.options\n    && operatorConfig.options.defaults || {}\n  ) : null;\n};\n\nexport const defaultRuleProperties = (config, parentRuleGroupPath = null, item = null, canUseDefaultFieldAndOp = true, canGetFirst = false) => {\n  let field = null, operator = null, fieldSrc = null;\n  const {showErrorMessage} = config.settings;\n  if (item) {\n    fieldSrc = item?.properties?.fieldSrc;\n    field = item?.properties?.field;\n    operator = item?.properties?.operator;\n  } else if (canUseDefaultFieldAndOp) {\n    field = getDefaultField(config, canGetFirst, parentRuleGroupPath);\n    if (field) {\n      fieldSrc = isImmutable(field) ? \"func\" : \"field\";\n    } else {\n      fieldSrc = getDefaultFieldSrc(config);\n    }\n    operator = getDefaultOperator(config, field, true);\n  } else {\n    fieldSrc = getDefaultFieldSrc(config);\n  }\n  let current = new Immutable.Map({\n    fieldSrc: fieldSrc,\n    field: field,\n    operator: operator,\n    value: new Immutable.List(),\n    valueSrc: new Immutable.List(),\n    //used for complex operators like proximity\n    operatorOptions: defaultOperatorOptions(config, operator, field),\n  });\n  if (showErrorMessage) {\n    current = current.set(\"valueError\", new Immutable.List());\n  }\n  \n  if (field && operator) {\n    const canFix = false;\n    let {newValue, newValueSrc, newValueType, newValueError, newFieldError} = getNewValueForFieldOp(\n      config, config, current, field, operator, \"operator\", canFix\n    );\n    current = current\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError)\n        .set(\"fieldError\", newFieldError);\n    }\n  }\n  return current; \n};\n\n\nexport const defaultGroupConjunction = (config, fieldConfig = null) => {\n  fieldConfig = getFieldConfig(config, fieldConfig); // if `fieldConfig` is field name, not config\n  const conjs = fieldConfig && fieldConfig.conjunctions || Object.keys(config.conjunctions);\n  if (conjs.length == 1)\n    return conjs[0];\n  return config.settings.defaultGroupConjunction || config.settings.defaultConjunction || conjs[0];\n};\n\nexport const defaultConjunction = (config) =>\n  config.settings.defaultConjunction || Object.keys(config.conjunctions)[0];\n\nexport const defaultGroupProperties = (config, fieldConfig = null) => new Immutable.Map({\n  conjunction: defaultGroupConjunction(config, fieldConfig),\n  not: false\n});\n\nexport const defaultItemProperties = (config, item) => {\n  return item && item.type == \"group\" \n    ? defaultGroupProperties(config, item?.properties?.field) \n    : defaultRuleProperties(config, null, item);\n};\n\nexport const defaultRule = (id, config) => ({\n  [id]: new Immutable.Map({\n    type: \"rule\",\n    id: id,\n    properties: defaultRuleProperties(config)\n  })\n});\n\nexport const defaultRoot = (config, canAddDefaultRule = true) => {\n  return new Immutable.Map({\n    type: \"group\",\n    id: uuid(),\n    children1: new Immutable.OrderedMap(canAddDefaultRule ? { ...defaultRule(uuid(), config) } : {}),\n    properties: defaultGroupProperties(config)\n  });\n};\n\nexport const createListWithOneElement = (el) => {\n  if (isImmutable(el))\n    return el; // already Immutable\n  return createListFromArray([el]);\n};\n\nexport const createListFromArray = (arr) => {\n  if (isImmutable(arr))\n    return arr; // already Immutable\n  return new Immutable.List(arr);\n};\n\nexport const emptyProperties = () => new Immutable.Map();\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, extendConfig,\n} from \"../utils/configUtils\";\nimport {\n  getFieldPathLabels, getWidgetForFieldOp, formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\n\n\nexport const queryString = (item, config, isForDisplay = false, isDebugMode = false) => {\n  //meta is mutable\n  let meta = {\n    errors: [],\n    settings: {\n      isForDisplay,\n      isDebugMode,\n    }\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(item, extendedConfig, meta, null);\n\n  if (meta.errors.length)\n    console.warn(\"Errors while exporting to string:\", meta.errors);\n  return res;\n};\n\n\nconst formatItem = (item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") ) {\n    return formatGroup(item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta, parentField = null) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  // TIP: don't cut group for mode == 'struct' and don't do aggr format (maybe later)\n  const groupField = isRuleGroup && mode == \"array\" ? properties.get(\"field\") : null;\n  const groupOperator = type === \"rule_group\" ? properties.get(\"operator\") : null;\n  const groupOperatorCardinality = groupOperator ? config.operators[groupOperator]?.cardinality ?? 1 : undefined;\n  const canHaveEmptyChildren = isRuleGroup && mode === \"array\" && groupOperatorCardinality >= 1;\n  const not = properties.get(\"not\");\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size && !isDebugMode) {\n    return undefined;\n  }\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  const conjStr = list.size ? conjunctionDefinition.formatConj(list, conjunction, not, isForDisplay) : null;\n  \n  let ret;\n  if (groupField) {\n    const aggrArgs = formatRule(item, config, meta, parentField, true);\n    if (aggrArgs) {\n      const isRev = aggrArgs.pop();\n      const args = [\n        conjStr,\n        ...aggrArgs\n      ];\n      ret = config.settings.formatAggr(...args);\n      if (isRev) {\n        ret = config.settings.formatReverse(ret, null, null, null, null, isForDisplay);\n      }\n    }\n  } else {\n    ret = conjStr;\n  }\n\n  if (isDebugMode && ret == null) {\n    ret = \"?\";\n  }\n  return ret;\n};\n\n\nconst formatItemValue = (config, properties, meta, _operator, parentField) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operator = _operator || properties.get(\"operator\");\n  const operatorDef = getOperatorConfig(config, operator, field) || {};\n  const cardinality = getOpCardinality(operatorDef);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  let fvalue;\n\n  if (iValue != undefined) {\n    fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = !isDebugMode ? completeValue(currentValue, valueSrc, config) : currentValue;\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      let fv = formatValue(\n        config, meta, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    const isOK = !hasUndefinedValues && fvalue.size === cardinality;\n    if (isOK) {\n      formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n    }\n  }\n  if (isDebugMode && !formattedValue) {\n    formattedValue = cardinality > 1 ? new List(Array.from({length: cardinality}).map(\n      (_, i) => fvalue?.get(i) ?? \"?\")\n    ) : \"?\";\n  }\n\n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, meta) => {\n  const { isDebugMode } = meta.settings;\n  const fop = operatorDefinition?.labelForFormat || operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} ${fop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (isDebugMode && op === \"?\" && values === \"?\") {\n        return field && field !== \"?\" ? `${field} ?` : \"?\";\n      }\n      return `${field} ${fop} ${values}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const valFrom = values?.first?.();\n      const valTo = values?.get?.(1);\n      return `${field} ${fop} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta, parentField = null, returnArgs = false) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  if ((field == null || operator == null) && !isDebugMode)\n    return undefined;\n  \n  const fieldDef = getFieldConfig(config, field) || {};\n  let operatorDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDef.reversedOp;\n  let revOperatorDef = getOperatorConfig(config, reversedOp, field) || {};\n  \n  //check op\n  let isRev = false;\n  let fn = operatorDef.formatOp;\n  if (!fn && reversedOp) {\n    fn = revOperatorDef.formatOp;\n    if (fn) {\n      isRev = true;\n      [operator, reversedOp] = [reversedOp, operator];\n      [operatorDef, revOperatorDef] = [revOperatorDef, operatorDef];\n    }\n  }\n\n  if (isDebugMode && !operator) {\n    operator = \"?\";\n  }\n\n  //find fn to format expr\n  if (!fn)\n    fn = buildFnToFormatOp(operator, operatorDef, meta);\n  if (!fn)\n    return undefined;\n\n  //format field\n  const formattedField = fieldSrc === \"func\"\n    ? formatFunc(config, meta, field, parentField)\n    : formatField(config, meta, field, parentField);\n  if (formattedField == undefined)\n    return undefined;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, operator, parentField\n  );\n  if (formattedValue === undefined) {\n    return undefined;\n  }\n\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(operatorDef, opDefKeysToOmit),\n    operatorOptions,\n    isForDisplay,\n    fieldDef,\n    isRev,\n  ];\n\n  if (returnArgs) {\n    return args;\n  } else {\n    //format expr\n    let ret = fn.call(config.ctx, ...args);\n\n    //rev\n    if (isRev) {\n      ret = config.settings.formatReverse(ret, operator, reversedOp, operatorDef, revOperatorDef, isForDisplay);\n    }\n\n    return ret;\n  }\n};\n\n\nconst formatValue = (config, meta, value, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, opDef, parentField = null, asyncListValues) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  if (value === undefined) {\n    if (isDebugMode) {\n      if (fieldWidgetDef?.jsType === \"array\") {\n        return [];\n      }\n      return \"?\";\n    } else {\n      return undefined;\n    }\n  }\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(config, meta, value, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(config, meta, value, parentField);\n  } else {\n    if (typeof fieldWidgetDef?.formatValue === \"function\") {\n      const fn = fieldWidgetDef.formatValue;\n      const args = [\n        value,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n        isForDisplay\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(opDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, value) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = value;\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (config, meta, field, parentField = null, cutParentField = true) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n  let ret = null;\n  if (field) {\n    const fieldDefinition = getFieldConfig(config, field) || {};\n    const fieldParts = getFieldParts(field, config);\n    const fieldPartsLabels = getFieldPathLabels(field, config, cutParentField ? parentField : null);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparatorDisplay) : null;\n    const fieldLabel2 = fieldDefinition.label2 || fieldFullLabel;\n    const formatFieldFn = config.settings.formatField;\n    const fieldName = formatFieldName(field, config, meta, cutParentField ? parentField : null, {useTableName: true});\n    ret = formatFieldFn(fieldName, fieldParts, fieldLabel2, fieldDefinition, config, isForDisplay);\n  } else if(isDebugMode) {\n    ret = \"?\";\n  }\n  return ret;\n};\n\n\nconst formatFunc = (config, meta, funcValue, parentField = null) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const funcKey = funcValue?.get?.(\"func\");\n  if (!funcKey) {\n    return isDebugMode ? \"?()\" : undefined;\n  }\n  const args = funcValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    if (!isDebugMode) {\n      meta.errors.push(`Func ${funcKey} is not defined in config`);\n      return undefined;\n    }\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = isForDisplay && funcConfig?.label || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  let formattedArgsWithNames = {};\n  const argsKeys = funcConfig ? Object.keys(funcConfig.args || {}) : args?.keySeq?.().toArray() || [];\n  for (const argKey of argsKeys) {\n    const argConfig = funcConfig?.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig || {};\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argName = isForDisplay && argConfig?.label || argKey;\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      config, meta, argValue, argValueSrc, argConfig?.type, fieldDef, argConfig, null, null, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n    }\n\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      formattedDefaultVal = formatValue(\n        config, meta, defaultValue, defaultValueSrc, argConfig?.type, fieldDef, argConfig, null, null, parentField, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const [missedArgKey, missedArgName] of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n          //formattedArgsWithNames[missedArgName] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n      formattedArgsWithNames[argName] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push([argKey, argName]);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    if (!isDebugMode) {\n      return undefined; // incomplete\n    }\n  }\n\n  let ret = null;\n  if (typeof funcConfig?.formatFunc === \"function\") {\n    const fn = funcConfig.formatFunc;\n    const args = [\n      formattedArgs,\n      isForDisplay\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(isForDisplay ? formattedArgsWithNames : formattedArgs)\n      .map(([k, v]) => (isForDisplay ? `${k}: ${v}` : `${v}`))\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","// Note: Don't use \":\" char inside strings, it's reserved as a namespace\n\nexport const EMPTY_GROUP = \"EMPTY_GROUP\";\nexport const EMPTY_RULE_GROUP = \"EMPTY_RULE_GROUP\";\nexport const EMPTY_QUERY = \"EMPTY_QUERY\";\nexport const EMPTY_CASE = \"EMPTY_CASE\";\nexport const NO_CONFIG_FOR_FIELD = \"NO_CONFIG_FOR_FIELD\";\nexport const NO_CONFIG_FOR_OPERATOR = \"NO_CONFIG_FOR_OPERATOR\";\nexport const FIXED_OPERATOR = \"FIXED_OPERATOR\";\nexport const NO_CONFIG_FOR_FUNCTION = \"NO_CONFIG_FOR_FUNCTION\";\nexport const INVALID_VALUE = \"INVALID_VALUE\";\nexport const INVALID_FUNC_ARG_VALUE = \"INVALID_FUNC_ARG_VALUE\";\nexport const UNSUPPORTED_FIELD_TYPE = \"UNSUPPORTED_FIELD_TYPE\";\nexport const UNSUPPORTED_OPERATOR_FOR_FIELD = \"UNSUPPORTED_OPERATOR_FOR_FIELD\";\nexport const INVALID_VALUE_SRC = \"INVALID_VALUE_SRC\";\nexport const INCOMPLETE_RULE = \"INCOMPLETE_RULE\";\nexport const INCOMPLETE_LHS = \"INCOMPLETE_LHS\";\nexport const INCOMPLETE_RHS = \"INCOMPLETE_RHS\";\nexport const BAD_MULTISELECT_VALUES = \"BAD_MULTISELECT_VALUES\";\nexport const BAD_SELECT_VALUE = \"BAD_SELECT_VALUE\";\nexport const INCORRECT_VALUE_TYPE = \"INCORRECT_VALUE_TYPE\";\nexport const INCORRECT_VALUE_JS_TYPE = \"INCORRECT_VALUE_JS_TYPE\";\nexport const VALUE_LENGTH_CONSTRAINT_FAIL = \"VALUE_LENGTH_CONSTRAINT_FAIL\";\nexport const VALUE_MIN_CONSTRAINT_FAIL = \"VALUE_MIN_CONSTRAINT_FAIL\";\nexport const VALUE_MAX_CONSTRAINT_FAIL = \"VALUE_MAX_CONSTRAINT_FAIL\";\nexport const NO_CONFIG_FOR_FIELD_VALUE = \"NO_CONFIG_FOR_FIELD_VALUE\";\nexport const CANT_COMPARE_FIELD_WITH_ITSELF = \"CANT_COMPARE_FIELD_WITH_ITSELF\";\nexport const CANT_COMPARE_FIELD_WITH_FIELD = \"CANT_COMPARE_FIELD_WITH_FIELD\";\nexport const INCORRECT_FIELD_TYPE = \"INCORRECT_FIELD_TYPE\";\nexport const UNSUPPORTED_FUNCTION_FOR_FIELD = \"UNSUPPORTED_FUNCTION_FOR_FIELD\";\nexport const REQUIRED_FUNCTION_ARG = \"REQUIRED_FUNCTION_ARG\";\nexport const INCORRECT_FUNCTION_RETURN_TYPE = \"INCORRECT_FUNCTION_RETURN_TYPE\";\nexport const INVALID_RANGE = \"INVALID_RANGE\";\n\nexport const ITEM_POSITION = \"ITEM_POSITION\";\nexport const ITEM_POSITION_ROOT = \"ITEM_POSITION_ROOT\";\nexport const ITEM_POSITION_WITH_INDEX_PATH = \"ITEM_POSITION_WITH_INDEX_PATH\";\nexport const ITEM_POSITION_IN_CASE = \"ITEM_POSITION_IN_CASE\";\n\nexport const _CONTEXT_MIN_MAX = \"range\";\n","import * as constants from \"./constains\";\n\nexport const translations = {\n  [constants.EMPTY_GROUP]: \"Empty group\",\n  [constants.EMPTY_RULE_GROUP]: \"No conditions for group field {{field}}\",\n  [constants.EMPTY_QUERY]: \"Empty query\",\n  [constants.EMPTY_CASE]: \"Empty case\",\n  [constants.NO_CONFIG_FOR_FIELD]: \"No config for field {{field}}\",\n  [constants.FIXED_OPERATOR]: \"Fixed operator {{from}} to {{to}} for field {{field}}\",\n  [constants.NO_CONFIG_FOR_OPERATOR]: \"No config for operator {{operator}}\",\n  [constants.NO_CONFIG_FOR_FUNCTION]: \"No config for function {{funcKey}}\",\n  [constants.INVALID_VALUE]: \"Invalid value\",\n  [constants.INVALID_FUNC_ARG_VALUE]: \"Invalid value of arg {{argName}} for func {{funcName}}: {{argValidationError}}\",\n  [constants.UNSUPPORTED_FIELD_TYPE]: \"Type of field {{field}} is not supported\",\n  [constants.UNSUPPORTED_OPERATOR_FOR_FIELD]: \"Operator {{operator}} is not supported for field {{field}}\",\n  [constants.INCOMPLETE_RULE]: \"Incomplete rule\",\n  [constants.INCOMPLETE_LHS]: \"Incomplete LHS\",\n  [constants.INCOMPLETE_RHS]: \"Incomplete RHS\",\n  [constants.INVALID_VALUE_SRC]: \"Invalid value src {{valueSrcs, list}}\",\n  [constants.BAD_MULTISELECT_VALUES+\"_one\"]: \"Value {{badValues, list}} is not in the list of allowed values\",\n  [constants.BAD_MULTISELECT_VALUES+\"_other\"]: \"Values {{badValues, list}} are not in the list of allowed values\",\n  [constants.BAD_SELECT_VALUE]: \"Value {{value}} is not in the list of allowed values\",\n  [constants.INCORRECT_VALUE_TYPE]: \"Value should have type {{wType}}, but got value of type {{valueType}}\",\n  [constants.INCORRECT_VALUE_JS_TYPE]: \"Value should have JS type {{jsType}}, but got value of type {{valueTypeof}}\",\n  [constants.VALUE_LENGTH_CONSTRAINT_FAIL]: \"Value {{value}} should have max length {{fieldSettings.maxLength}} but got {{length}}\",\n  [constants.VALUE_MIN_CONSTRAINT_FAIL]: \"Value {{value}} should be greater than or equal to {{fieldSettings.min}}\",\n  [constants.VALUE_MIN_CONSTRAINT_FAIL+\"_\"+constants._CONTEXT_MIN_MAX]: \"Value {{value}} should be from {{fieldSettings.min}} to {{fieldSettings.max}}\",\n  [constants.VALUE_MAX_CONSTRAINT_FAIL]: \"Value {{value}} should be less than or equal to {{fieldSettings.max}}\",\n  [constants.VALUE_MAX_CONSTRAINT_FAIL+\"_\"+constants._CONTEXT_MIN_MAX]: \"Value {{value}} should be from {{fieldSettings.min}} to {{fieldSettings.max}}\",\n  [constants.NO_CONFIG_FOR_FIELD_VALUE]: \"No config for field {{field}}\",\n  [constants.CANT_COMPARE_FIELD_WITH_ITSELF]: \"Can't compare field {{field}} with itself\",\n  [constants.CANT_COMPARE_FIELD_WITH_FIELD]: \"Can't compare field {{leftField}} with {{rightField}}\",\n  [constants.INCORRECT_FIELD_TYPE]: \"Field {{field}} is of type {{type}}, but expected {{expected}}\",\n  [constants.UNSUPPORTED_FUNCTION_FOR_FIELD]: \"Unsupported function {{funcKey}} for field {{field}}\",\n  [constants.REQUIRED_FUNCTION_ARG]: \"Value of arg {{argName}} for func {{funcName}} is required\",\n  [constants.INCORRECT_FUNCTION_RETURN_TYPE]: \"Function {{funcKey}} should return value of type {{returnType}}, but got {{valueType}}\",\n  [constants.INVALID_RANGE]: \"Invalid range\",\n  \n  [constants.ITEM_POSITION_ROOT]: \"Root\",\n  [constants.ITEM_POSITION+\"__rule\"]: \"Leaf #{{globalLeafNo}}\",\n  [constants.ITEM_POSITION+\"__group\"]: \"Group #{{globalGroupNo}}\",\n  [constants.ITEM_POSITION+\"__rule_group\"]: \"Rule-group #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__case_group\"]: \"Case #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__rule__deleted\"]: \"Deleted leaf #{{globalLeafNo}}\",\n  [constants.ITEM_POSITION+\"__group__deleted\"]: \"Deleted group #{{globalGroupNo}}\",\n  [constants.ITEM_POSITION+\"__rule_group__deleted\"]: \"Deleted rule-group #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__case_group__deleted\"]: \"Deleted case #{{globalNoByType}}\",\n  [constants.ITEM_POSITION_IN_CASE]: \"{{str}} in case #{{caseNo}}\",\n  [constants.ITEM_POSITION_WITH_INDEX_PATH]: \"{{str}} (index path: {{indexPath, list}})\",\n};\n","import i18next from \"i18next\";\nimport { translations as validationTranslations } from \"./validation/translations\";\n\nexport const NSV = \"raqbvalidation\";\nexport const NSVP = `${NSV}:`;\n\nconst i18n = i18next.createInstance();\ni18n.init({\n  fallbackLng: \"en\",\n});\ni18n.addResources(\"en\", NSV, validationTranslations);\n\nexport const translateValidation = (key, args) => {\n  if (key?.str) {\n    // already translated\n    return key.str;\n  }\n  if (key?.key) {\n    return translateValidation(key.key, key.args);\n  }\n  if (args === null) {\n    return key;\n  }\n  return i18n.t(\n    key.includes(\":\") ? key : NSVP+key,\n    args\n  );\n};\n\nexport default i18n;\n","import omit from \"lodash/omit\";\nimport Immutable from \"immutable\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldSrc,\n  extendConfig} from \"./configUtils\";\nimport {\n  getOperatorsForField, getWidgetForFieldOp, whatRulePropertiesAreCompleted,\n  selectTypes, getValueSourcesForFieldOp,\n} from \"../utils/ruleUtils\";\nimport {getOpCardinality, getFirstDefined, deepEqual} from \"../utils/stuff\";\nimport {getItemInListValues} from \"../utils/listValues\";\nimport {defaultOperatorOptions} from \"../utils/defaultUtils\";\nimport {fixPathsInTree, getItemByPath, getFlatTree} from \"../utils/treeUtils\";\nimport {setFuncDefaultArg} from \"../utils/funcUtils\";\nimport {queryString} from \"../export/queryString\";\nimport * as constants from \"../i18n/validation/constains\";\nimport { translateValidation } from \"../i18n\";\n\nexport { translateValidation };\n\nconst typeOf = (v) => {\n  if (typeof v === \"object\" && v !== null && Array.isArray(v))\n    return \"array\";\n  else\n    return (typeof v);\n};\n\nconst isTypeOf = (v, type) => {\n  if (typeOf(v) === type)\n    return true;\n  if (type === \"number\" && !isNaN(v))\n    return true; //can be casted\n  return false;\n};\n\n// tip: If showErrorMessage is false, this function will always return true\nexport const isValidTree = (tree, config) => {\n  return getTreeBadFields(tree, config).length === 0;\n};\n\n// tip: If showErrorMessage is false, this function will always return []\n// tip: If LHS is func, func key will be used to put in array of bad fields (naive)\nexport const getTreeBadFields = (tree, config) => {\n  const {showErrorMessage} = config.settings;\n  let badFields = [];\n\n  function _processNode (item, path, lev) {\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const valueError = item.getIn([\"properties\", \"valueError\"]);\n    const fieldError = item.getIn([\"properties\", \"fieldError\"]);\n    const field = item.getIn([\"properties\", \"field\"]);\n    const fieldStr = field?.get?.(\"func\") ?? field;\n    const hasValueError = valueError?.size > 0 && valueError.filter(v => v != null).size > 0;\n    const isBad = hasValueError || !!fieldError;\n    if (isBad && showErrorMessage) {\n      // for showErrorMessage=false valueError/fieldError is used to hold last error, but actual value is always valid\n      badFields.push(fieldStr);\n    }\n    if (children) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  if (tree)\n    _processNode(tree, [], 0);\n\n  return Array.from(new Set(badFields));\n};\n\n// @deprecated\nexport const checkTree = (tree, config) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const options = {\n    removeEmptyGroups: config.settings.removeEmptyGroupsOnLoad,\n    removeIncompleteRules: config.settings.removeIncompleteRulesOnLoad,\n    removeEmptyRules: config.settings.removeEmptyRulesOnLoad,\n    forceFix: false,\n  };\n  const {fixedTree, allErrors, isSanitized} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    options\n  );\n  if (isSanitized && allErrors.length) {\n    console.warn(\"Tree check errors: \", allErrors);\n  }\n  return fixedTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @returns {ValidationItemErrors[]}\n*/\nexport const validateTree = (tree, config, options = {}) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const finalOptions = {\n    ...options,\n    // disbale sanitize options, just validate\n    removeEmptyGroups: false,\n    removeEmptyRules: false,\n    removeIncompleteRules: false,\n    forceFix: false,\n  };\n  const {allErrors} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    finalOptions\n  );\n  return allErrors;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @returns {{\n *   fixedTree: Immutable.Map, \n *   fixedErrors: ValidationItemErrors[],\n *   nonFixedErrors: ValidationItemErrors[],\n *   allErrors: ValidationItemErrors[],\n * }}\n */\nexport const sanitizeTree = (tree, config, options = {}) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const finalOptions = {\n    // defaults\n    removeEmptyGroups: true,\n    removeEmptyRules: true,\n    removeIncompleteRules: true,\n    forceFix: false,\n    ...options,\n  };\n  const {fixedTree, fixedErrors, nonFixedErrors, allErrors} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    finalOptions\n  );\n  return {fixedTree, fixedErrors, nonFixedErrors, allErrors};\n};\n\n// tip: Should be used only internally in createValidationMemo()\nexport const validateAndFixTree = (newTree, _oldTree, newConfig, oldConfig, removeEmptyGroups, removeEmptyRules, removeIncompleteRules) => {\n  if (removeEmptyGroups === undefined) {\n    removeEmptyGroups = newConfig.settings.removeEmptyGroupsOnLoad;\n  }\n  if (removeEmptyRules === undefined) {\n    removeEmptyRules = newConfig.settings.removeEmptyRulesOnLoad;\n  }\n  if (removeIncompleteRules === undefined) {\n    removeIncompleteRules = newConfig.settings.removeIncompleteRulesOnLoad;\n  }\n  const options = {\n    // sanitize options\n    removeEmptyGroups,\n    removeEmptyRules,\n    removeIncompleteRules,\n    forceFix: false,\n  };\n  let {fixedTree, allErrors, fixedErrors, nonFixedErrors, isSanitized} = _validateTree(\n    newTree, _oldTree, newConfig, oldConfig,\n    options\n  );\n  if (isSanitized && fixedErrors.length) {\n    console.warn(\"Fixed tree errors: \", fixedErrors);\n  }\n  // if (nonFixedErrors.length) {\n  //   console.info(\"Tree validation errors: \", nonFixedErrors);\n  // }\n  fixedTree = fixPathsInTree(fixedTree);\n  return fixedTree;\n};\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @typedef {{\n *   removeEmptyGroups?: boolean,\n *   removeEmptyRules?: boolean,\n *   removeIncompleteRules?: boolean,\n *   forceFix?: boolean,\n *   translateErrors?: boolean,\n *   includeStringifiedItems?: boolean,\n *   stringifyFixedItems?: boolean,\n *   stringifyItemsUserFriendly?: boolean,\n *   includeItemsPositions?: boolean,\n * }} SanitizeOptions\n * @typedef {{\n *   path: string[],\n *   errors: {\n *     key: string, args?: object | null, str?: string,\n *     side?: \"lhs\"|\"rhs\"|\"op\", delta?: number, fixed?: boolean, fixedTo?: any, fixedFrom?: any,\n *   }[],\n *   itemStr?: string,\n *   itemPosition?: {\n *     caseNo: number | null, globalNoByType: number, indexPath: number[], globalLeafNo?: number, globalGroupNo?: number,\n *     isDeleted: boolean, index: number, type: \"rule\"|\"group\"|\"rule_group\"\n *   },\n *   itemPositionStr?: string,\n * }} ValidationItemErrors\n * @returns {{\n *   fixedTree: Immutable.Map, \n *   allErrors: ValidationItemErrors[],\n *   fixedErrors: ValidationItemErrors[],\n *   nonFixedErrors: ValidationItemErrors[],\n *   isSanitized: boolean\n * }}\n */\nexport const _validateTree = (\n  tree, _oldTree, config, oldConfig, options\n) => {\n  if (!tree) {\n    return {\n      fixedTree: tree,\n      allErrors: [],\n      fixedErrors: [],\n      nonFixedErrors: [],\n      isSanitized: false,\n    };\n  }\n\n  const {\n    // sanitize options\n    removeEmptyGroups,\n    removeEmptyRules,\n    removeIncompleteRules,\n    forceFix,\n    // translation options\n    translateErrors = true,\n    includeStringifiedItems = true,\n    stringifyFixedItems = false,\n    stringifyItemsUserFriendly = true,\n    includeItemsPositions = true,\n  } = options || {};\n  const c = {\n    config, oldConfig, removeEmptyGroups, removeEmptyRules, removeIncompleteRules, forceFix,\n  };\n  const meta = {\n    errors: {},\n  };\n  const fixedTree = validateItem(tree, [], null, meta, c);\n  const isSanitized = meta.sanitized;\n\n  // build allErrors\n  const allErrors = [];\n  let flatItems, oldFlatItems;\n  if (includeItemsPositions) {\n    flatItems = getFlatTree(fixedTree).items;\n  }\n  for (const id in meta.errors) {\n    let { path, errors } = meta.errors[id];\n    if (translateErrors) {\n      errors = errors.map(e => {\n        return {\n          ...e,\n          str: translateValidation(e),\n        };\n      });\n    }\n    let errorItem = { path, errors };\n    if (includeStringifiedItems) {\n      const item = getItemByPath(stringifyFixedItems ? fixedTree : tree, path);\n      const isRoot = path.length === 1;\n      if (!isRoot && item.get(\"type\") !== \"group\") {\n        const isDebugMode = true;\n        const isForDisplay = stringifyItemsUserFriendly;\n        const itemStr = queryString(item, config, isForDisplay, isDebugMode);\n        errorItem.itemStr = itemStr;\n      }\n    }\n    if (includeItemsPositions) {\n      let flatItem = flatItems[id];\n      const isDeleted = !flatItem;\n      if (isDeleted) {\n        // get positions from old tree\n        if (!oldFlatItems) {\n          oldFlatItems = getFlatTree(tree).items;\n        }\n        flatItem = oldFlatItems[id];\n      }\n      if (flatItem) {\n        // build position object\n        const itemPosition = {\n          ...flatItem.position,\n          index: flatItem.index,\n          type: flatItem.type,\n          isDeleted,\n        };\n        errorItem.itemPosition = itemPosition;\n        // build position string\n        const trKey = !flatItem.index\n          ? constants.ITEM_POSITION_ROOT\n          : constants.ITEM_POSITION+\"__\"+flatItem.type+(isDeleted ? \"__deleted\" : \"\");\n        const trArgs = {\n          ...itemPosition\n        };\n        if (stringifyItemsUserFriendly) {\n          // convert indexes from 0-based to 1-based (user friendly)\n          for (const k of [\"caseNo\", \"globalLeafNo\", \"globalGroupNo\", \"globalNoByType\"]) {\n            if (trArgs[k] != undefined) {\n              trArgs[k] = trArgs[k] + 1;\n            }\n          }\n          trArgs.indexPath = itemPosition.indexPath?.map(ind => ind+1);\n        }\n        errorItem.itemPositionStr = translateValidation(trKey, trArgs);\n        if (flatItem.index) { // don't extend for root\n          if (flatItem.caseId && flatItem.type !== \"case_group\") {\n            errorItem.itemPositionStr = translateValidation(constants.ITEM_POSITION_IN_CASE, {\n              ...trArgs,\n              str: errorItem.itemPositionStr\n            });\n          }\n          if (flatItem.type !== \"case_group\") {\n            errorItem.itemPositionStr = translateValidation(constants.ITEM_POSITION_WITH_INDEX_PATH, {\n              ...trArgs,\n              str: errorItem.itemPositionStr\n            });\n          }\n        }\n      }\n    }\n    allErrors.push(errorItem);\n  }\n\n  // split allErrors to fixedErrors and nonFixedErrors\n  let fixedErrors = [];\n  let nonFixedErrors = [];\n  for (const itemErrors of allErrors) {\n    const fixedItemErrors = itemErrors.errors.filter(e => !!e.fixed);\n    let nonFixedItemErrors = itemErrors.errors.filter(e => !e.fixed && e.key !== \"EMPTY_QUERY\");\n    if (fixedItemErrors.length) {\n      fixedErrors.push({\n        ...itemErrors,\n        errors: fixedItemErrors,\n      });\n    }\n    if (nonFixedItemErrors.length) {\n      nonFixedErrors.push({\n        ...itemErrors,\n        errors: nonFixedItemErrors,\n      });\n    }\n  }\n\n  return {\n    fixedTree, allErrors, fixedErrors, nonFixedErrors, isSanitized\n  };\n};\n\nfunction _addError(meta, item, path, err) {\n  const id = item.get(\"id\");\n  if (!meta.errors[id]) {\n    meta.errors[id] = {\n      path: [...path, id],\n      errors: [],\n    };\n  }\n  meta.errors[id].errors.push(err);\n}\n\nfunction _setErrorsAsFixed(meta, item) {\n  const id = item.get(\"id\");\n  if (meta.errors[id]) {\n    meta.errors[id].errors.map(e => {\n      e.fixed = true;\n    });\n  }\n}\n\nfunction validateItem (item, path, itemId, meta, c) {\n  const type = item?.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\" || type == \"case_group\" || type == \"switch_group\")) {\n    return validateGroup(item, path, itemId, meta, c);\n  } else if (type === \"rule\") {\n    return validateRule(item, path, itemId, meta, c);\n  } else {\n    return item;\n  }\n}\n\nfunction validateGroup (item, path, itemId, meta, c) {\n  const {removeEmptyGroups, removeIncompleteRules, forceFix, config} = c;\n  const {showErrorMessage} = config.settings;\n  const canFix = !showErrorMessage || forceFix;\n  let id = item.get(\"id\");\n  let children = item.get(\"children1\");\n  const isRoot = !path.length;\n  const oldChildren = children;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\");\n  const field = properties?.get(\"field\");\n  const mode = properties?.get(\"mode\");\n  const operator = properties?.get?.(\"operator\");\n  const isGroupExt = type === \"rule_group\" && mode === \"array\";\n  const isCase = type === \"case_group\";\n  const isDefaultCase = isCase && children == undefined;\n  const cardinality = operator ? config.operators[operator]?.cardinality ?? 1 : undefined;\n  // tip: for group operators some/none/all children ARE required, for group operator count children are NOT required\n  // tip: default case should contain only value\n  const childrenAreRequired = isCase ? !isDefaultCase : (isGroupExt ? cardinality == 0 : true);\n  const canHaveValue = isGroupExt || isCase;\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  if (canHaveValue) {\n    item = validateRule(item, path, itemId, meta, c);\n  }\n\n  //validate children\n  let submeta = {\n    errors: {}\n  };\n  children = children\n    ?.map( (currentChild, childId) => validateItem(currentChild, path.concat(id), childId, submeta, c) );\n  const nonEmptyChildren = children?.filter((currentChild) => (currentChild != undefined));\n  if (removeEmptyGroups) {\n    children = nonEmptyChildren;\n  }\n  let sanitized = submeta.sanitized || (oldChildren?.size != children?.size);\n  const isEmptyChildren = !nonEmptyChildren?.size;\n  let canDrop = removeEmptyGroups && !isRoot;\n  if (isGroupExt && field) {\n    // to remove rule-group like \"SOME cars\" (with SOME/ALL/NONE, but without filters), we need to rely on removeIncompleteRules\n    canDrop = removeIncompleteRules;\n  }\n  if (isEmptyChildren && childrenAreRequired) {\n    _addError(meta, item, path, {\n      key: isRoot\n        ? constants.EMPTY_QUERY\n        : isCase\n          ? constants.EMPTY_CASE\n          : isGroupExt\n            ? constants.EMPTY_RULE_GROUP\n            : constants.EMPTY_GROUP,\n      args: { field },\n      fixed: canDrop,\n    });\n    if (canDrop) {\n      _setErrorsAsFixed(meta, item);\n      item = undefined;\n    }\n  }\n\n  if (sanitized)\n    meta.sanitized = true;\n  if (sanitized && item)\n    item = item.set(\"children1\", children);\n\n  meta.errors = {\n    ...meta.errors,\n    ...(submeta?.errors || {}),\n  };\n  return item;\n}\n\n/**\n * @param {Immutable.Map} item\n * @returns {Immutable.Map}\n */\nfunction validateRule (item, path, itemId, meta, c) {\n  const {removeIncompleteRules, removeEmptyRules, forceFix, config, oldConfig} = c;\n  const {showErrorMessage} = config.settings;\n  const canFix = !showErrorMessage || forceFix;\n  const origItem = item;\n  let id = item.get(\"id\");\n  const type = item.get(\"type\");\n  const isCase = type === \"case_group\";\n  let properties = item.get(\"properties\");\n  if (!properties) {\n    if (isCase) {\n      properties = new Immutable.Map();\n    } else {\n      const err = {\n        key: constants.INCOMPLETE_RULE,\n        args: {},\n        fixed: removeIncompleteRules || removeEmptyRules\n      };\n      _addError(meta, item, path, err);\n      return undefined;\n    }\n  }\n  let field = properties.get(\"field\") || null;\n  if (isCase) {\n    field = \"!case_value\";\n  }\n  let fieldSrc = properties.get(\"fieldSrc\") || null;\n  let operator = properties.get(\"operator\") || null;\n  let operatorOptions = properties.get(\"operatorOptions\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let value = properties.get(\"value\");\n  let valueError = properties.get(\"valueError\");\n  let fieldError = properties.get(\"fieldError\");\n\n  const serializeRule = () => {\n    return {\n      field: field?.toJS?.() || field,\n      fieldSrc,\n      operator,\n      operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n      valueSrc: valueSrc ? valueSrc.toJS() : null,\n      value: value ? value.toJS() : null,\n      valueError: valueError ? valueError.toJS() : null,\n      fieldError: fieldError ? fieldError : null,\n    };\n  };\n\n  const oldSerialized = serializeRule();\n  //const _wasValid = field && operator && value && !value.includes(undefined);\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  //validate field\n  const fieldDefinition = field ? getFieldConfig(config, field) : null;\n  if (field && !fieldDefinition) {\n    _addError(meta, item, path, {\n      key: constants.NO_CONFIG_FOR_FIELD,\n      args: { field },\n      side: \"lhs\",\n      fixed: removeIncompleteRules || removeEmptyRules,\n    });\n    field = null;\n  }\n  if (field == null && !isCase) {\n    properties = [\n      \"operator\", \"operatorOptions\", \"valueSrc\", \"value\", \"valueError\", \"fieldError\", \"field\"\n    ].reduce((map, key) => map.delete(key), properties);\n    operator = null;\n  }\n  if (!fieldSrc && field && !isCase) {\n    fieldSrc = getFieldSrc(field);\n    properties = properties.set(\"fieldSrc\", fieldSrc);\n  }\n\n  //validate operator\n  // Backward compatibility: obsolete operator range_between\n  if (operator === \"range_between\" || operator === \"range_not_between\") {\n    operator = operator === \"range_between\" ? \"between\" : \"not_between\";\n    // _addError(meta, item, path, {\n    //   type: \"fix\",\n    //   key: constants.FIXED_OPERATOR,\n    //   args: { from: properties.get(\"operator\"), to: operator, field }\n    // });\n    properties = properties.set(\"operator\", operator);\n  }\n  const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n  if (operator && !operatorDefinition) {\n    _addError(meta, item, path, {\n      key: constants.NO_CONFIG_FOR_OPERATOR,\n      args: { operator },\n      side: \"op\",\n      fixed: removeIncompleteRules || removeEmptyRules,\n    });\n    operator = null;\n  }\n  const availOps = field ? getOperatorsForField(config, field) : [];\n  if (field && !isCase) {\n    if (!availOps?.length) {\n      _addError(meta, item, path, {\n        key: constants.UNSUPPORTED_FIELD_TYPE,\n        args: { field },\n        side: \"lhs\",\n        fixed: removeIncompleteRules || removeEmptyRules,\n      });\n      operator = null;\n    } else if (operator && availOps.indexOf(operator) == -1) {\n      if (operator === \"is_empty\" || operator === \"is_not_empty\") {\n        // Backward compatibility: is_empty #494\n        operator = operator === \"is_empty\" ? \"is_null\" : \"is_not_null\";\n        // _addError(meta, item, path, {\n        //   type: \"fix\",\n        //   key: constants.FIXED_OPERATOR,\n        //   args: { from: properties.get(\"operator\"), to: operator, field }\n        // });\n        properties = properties.set(\"operator\", operator);\n      } else {\n        _addError(meta, item, path, {\n          key: constants.UNSUPPORTED_OPERATOR_FOR_FIELD,\n          args: { operator, field },\n          side: \"lhs\",\n          fixed: removeIncompleteRules || removeEmptyRules,\n        });\n        operator = null;\n      }\n    }\n  }\n  if (operator == null && !isCase) {\n    // do not unset operator ?\n    properties = [\n      \"operatorOptions\", \"valueSrc\", \"value\", \"valueError\"\n    ].reduce((map, key) => map.delete(key), properties);\n  }\n\n  //validate operator options\n  operatorOptions = properties.get(\"operatorOptions\");\n  //const _operatorCardinality = operator ? getOpCardinality(operatorDefinition) : null;\n  if (!operator || operatorOptions && !operatorDefinition.options) {\n    operatorOptions = null;\n    properties = properties.delete(\"operatorOptions\");\n  } else if (operator && !operatorOptions && operatorDefinition.options) {\n    operatorOptions = defaultOperatorOptions(config, operator, field);\n    properties = properties.set(\"operatorOptions\", operatorOptions);\n  }\n\n  //validate values\n  valueSrc = properties.get(\"valueSrc\");\n  value = properties.get(\"value\");\n  const isEndValue = true;\n  let {\n    newValue, newValueSrc, newValueError, validationErrors, newFieldError, fixedField,\n  } = getNewValueForFieldOp(config, oldConfig, properties, field, operator, null, canFix, isEndValue);\n  value = newValue;\n  valueSrc = newValueSrc;\n  valueError = newValueError;\n  fieldError = newFieldError;\n  field = fixedField;\n  properties = properties.set(\"field\", field);\n  properties = properties.set(\"value\", value);\n  properties = properties.set(\"valueSrc\", valueSrc);\n  if (showErrorMessage) {\n    properties = properties\n      .set(\"valueError\", valueError)\n      .set(\"fieldError\", fieldError);\n  } else {\n    properties = properties\n      .delete(\"valueError\")\n      .delete(\"fieldError\");\n  }\n\n  const newSerialized = serializeRule();\n  const hasBeenSanitized = !deepEqual(oldSerialized, newSerialized);\n  const compl = whatRulePropertiesAreCompleted(properties.toObject(), config);\n  const isCompleted = isCase ? compl.parts.value : compl.score >= 3;\n  if (hasBeenSanitized) {\n    meta.sanitized = true;\n    item = item.set(\"properties\", properties);\n  }\n  validationErrors?.map(e =>\n    _addError(meta, item, path, e)\n  );\n  if (!isCompleted) {\n    if (isCase) {\n      // todo\n    } else {\n      let shoudlRemoveRule = !compl.score ? removeEmptyRules : removeIncompleteRules;\n      // if (shoudlRemoveRule && showErrorMessage) {\n      //   // try to be not so rude about removing incomplete rule with functions\n      //   const complLite = whatRulePropertiesAreCompleted(properties.toObject(), config, true);\n      //   const isCompletedLite = complLite.score >= 3;\n      //   if (isCompletedLite) {\n      //     shoudlRemoveRule = false;\n      //   }\n      // }\n      let incError = { key: constants.INCOMPLETE_RULE, args: {} };\n      if (!compl.parts.field) {\n        incError.key = constants.INCOMPLETE_LHS;\n        incError.side = \"lhs\";\n      } else if(!compl.parts.value) {\n        incError.key = constants.INCOMPLETE_RHS;\n        incError.side = \"rhs\";\n        if (\n          newSerialized.valueSrc?.[0] && newSerialized.valueSrc?.[0] != oldSerialized.valueSrc?.[0]\n          && newSerialized.value?.[0] != undefined \n        ) {\n          // eg. operator `starts_with` supports only valueSrc \"value\"\n          incError.key = constants.INVALID_VALUE_SRC;\n          incError.args = {\n            valueSrcs: newSerialized.valueSrc\n          };\n        }\n      }\n      incError.fixed = shoudlRemoveRule;\n      _addError(meta, item, path, incError);\n      if (shoudlRemoveRule) {\n        _setErrorsAsFixed(meta, item);\n        item = undefined;\n      }\n    }\n  }\n\n  return item;\n}\n\n\n/**\n * \n * @param {bool} canFix true is useful for func values to remove bad args\n * @param {bool} isEndValue false if value is in process of editing by user\n * @return {array} [fixedValue, allErrors] - if `allErrors` is empty and `canFix` == true, `fixedValue` can differ from value if was fixed.\n *  `allErrors` is an array of {key, args, fixed, fixedFrom, fixedTo}\n *  If `args` === null, `key` should not be translated\n */\nexport const validateValue = (\n  config, leftField, field, operator, value, valueType, valueSrc, asyncListValues,\n  canFix = false, isEndValue = false, canDropArgs = false\n) => {\n  let allErrors = [];\n  let fixedValue = value;\n\n  if (value != null) {\n    if (valueSrc === \"field\") {\n      [fixedValue, allErrors] = validateFieldValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue);\n    } else if (valueSrc === \"func\") {\n      [fixedValue, allErrors] = validateFuncValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue, canDropArgs);\n    } else if (valueSrc === \"value\" || !valueSrc) {\n      [fixedValue, allErrors] = validateNormalValue(field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue);\n    }\n\n    let fixedAllErrors = !allErrors?.find(e => !e.fixed);\n    const shouldCallValidateFn = !!field\n      // `validateValue` should not be available for valueSrc === \"func\" or \"field\"\n      && ![\"field\", \"func\"].includes(valueSrc)\n      // eg. if value was > max, and fixed to max, but max value can not satisfy validateValue() in config\n      && (!allErrors?.length || fixedAllErrors);\n    if (shouldCallValidateFn) {\n      //todo: why not just take fieldSettings from fieldConfig, why need to use getFieldWidgetConfig() ??\n      // const fieldConfig = getFieldConfig(config, field);\n      // const fieldSettings = fieldConfig?.fieldSettings;\n      const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n      const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, w, valueSrc, { forExport: true });\n      const rightFieldDefinition = (valueSrc === \"field\" ? getFieldConfig(config, value) : null);\n      const fieldSettings = fieldWidgetDefinition; // widget definition merged with fieldSettings\n\n      const fn = fieldWidgetDefinition.validateValue;\n      if (typeof fn === \"function\") {\n        const args = [\n          fixedValue, \n          fieldSettings,\n          operator,\n          operatorDefinition\n        ];\n        if (valueSrc === \"field\")\n          args.push(rightFieldDefinition);\n        const validResult = fn.call(config.ctx, ...args);\n        if (typeof validResult === \"object\" && validResult !== null && !Array.isArray(validResult)) {\n          let newError;\n          if (validResult.error?.key) {\n            newError = {...validResult.error};\n          } else {\n            // Note: `null` means it's not translated string!\n            newError = {key: validResult.error, args: null};\n          }\n          if (validResult.fixedValue !== undefined && canFix) {\n            newError.fixed = true;\n            newError.fixedFrom = fixedValue;\n            newError.fixedTo = validResult.fixedValue;\n            fixedValue = validResult.fixedValue;\n          }\n          allErrors.push(newError);\n        } else if (typeof validResult === \"boolean\") {\n          if (validResult == false) {\n            allErrors.push({key: constants.INVALID_VALUE, args: {}});\n          }\n        } else if (typeof validResult === \"string\") {\n          allErrors.push({key: validResult, args: null});\n        }\n      }\n    }\n\n    // if can't fix value, use defaultValue\n    fixedAllErrors = !allErrors?.find(e => !e.fixed);\n    if (allErrors?.length && !fixedAllErrors && canFix) {\n      const fieldConfig = getFieldConfig(config, field);\n      const fieldSettings = fieldConfig?.fieldSettings;\n      const defaultValue = fieldSettings?.defaultValue;\n      if (defaultValue !== undefined) {\n        const lastError = allErrors[allErrors.length - 1];\n        lastError.fixed = true;\n        lastError.fixedFrom = fixedValue;\n        lastError.fixedTo = defaultValue;\n        fixedValue = defaultValue;\n        // mark all errors as fixed\n        allErrors.map(e => {\n          e.fixed = true;\n        });\n      }\n    }\n  }\n  \n  return [fixedValue, allErrors];\n};\n\n/**\n * \n */\nconst validateValueInList = (value, listValues, canFix, isEndValue, removeInvalidMultiSelectValuesOnLoad) => {\n  const values = Immutable.List.isList(value) ? value.toJS() : (value instanceof Array ? [...value] : undefined);\n  let fixedValue = value;\n  let allErrors = [];\n  if (values) {\n    const [goodValues, badValues] = values.reduce(([goodVals, badVals], val) => {\n      const vv = getItemInListValues(listValues, val);\n      if (vv == undefined) {\n        return [goodVals, [...badVals, val]];\n      } else {\n        return [[...goodVals, vv.value], badVals];\n      }\n    }, [[], []]);\n    const needFix = badValues.length > 0;\n    // always remove bad values at tree validation as user can't unselect them (except AntDesign widget)\n    canFix = canFix || removeInvalidMultiSelectValuesOnLoad === true;\n    fixedValue = canFix && needFix ? goodValues : value;\n    if (badValues.length) {\n      const fixed = canFix && needFix;\n      allErrors.push({\n        key: constants.BAD_MULTISELECT_VALUES,\n        args: { badValues, count: badValues.length },\n        fixed,\n        fixedFrom: fixed ? values : undefined,\n        fixedTo: fixed ? fixedValue : undefined,\n      });\n    }\n    return [fixedValue, allErrors];\n  } else {\n    const vv = getItemInListValues(listValues, value);\n    if (vv == undefined) {\n      fixedValue = canFix ? null : value;\n      allErrors.push({\n        key: constants.BAD_SELECT_VALUE,\n        args: { value },\n        fixed: canFix,\n        fixedFrom: canFix ? value : undefined,\n        fixedTo: canFix ? fixedValue : undefined,\n      });\n    } else {\n      fixedValue = vv.value;\n    }\n    return [fixedValue, allErrors];\n  }\n};\n\n/**\n * \n */\nconst validateNormalValue = (field, value, valueSrc, valueType, asyncListValues, config, operator = null, canFix = false, isEndValue = false) => {\n  let allErrors = [];\n  let fixedValue = value;\n  if (field) {\n    const fieldConfig = getFieldConfig(config, field);\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const wConfig = config.widgets[w];\n    const wType = wConfig?.type;\n    const jsType = wConfig?.jsType;\n    const fieldSettings = fieldConfig?.fieldSettings;\n    const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n    const isAsyncListValues = !!fieldSettings?.asyncFetch;\n    // todo: for select/multiselect value can be string or number\n    const canSkipTypeCheck = listValues || isAsyncListValues;\n\n    // validate type\n    if (valueType && wType && valueType != wType) {\n      allErrors.push({\n        key: constants.INCORRECT_VALUE_TYPE,\n        args: { wType, valueType }\n      });\n      return [value, allErrors];\n    }\n    if (jsType && !isTypeOf(value, jsType) && !canSkipTypeCheck) {\n      allErrors.push({\n        key: constants.INCORRECT_VALUE_JS_TYPE,\n        args: { jsType, valueTypeof: typeOf(value) }\n      });\n      return [value, allErrors];\n    }\n\n    if (fieldSettings) {\n      // validate against list of values\n      const realListValues = asyncListValues || listValues;\n      // tip: \"case_value\" is deprecated, don't apply validation based on listValues\n      if (realListValues && !fieldSettings.allowCustomValues && w !== \"case_value\") {\n        [fixedValue, allErrors] = validateValueInList(\n          value, realListValues, canFix, isEndValue, config.settings.removeInvalidMultiSelectValuesOnLoad\n        );\n      }\n      // validate length\n      if (fieldSettings.maxLength > 0 && value != null && String(value).length > fieldSettings.maxLength) {\n        fixedValue = canFix ? String(value).substring(0, fieldSettings.maxLength) : value;\n        allErrors.push({\n          key: constants.VALUE_LENGTH_CONSTRAINT_FAIL,\n          args: { value, length: String(value).length, fieldSettings },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n      // validate min/max\n      const minMaxContext = fieldSettings.min != undefined && fieldSettings.max != undefined ? constants._CONTEXT_MIN_MAX : undefined;\n      if (fieldSettings.min != null && value < fieldSettings.min) {\n        fixedValue = canFix ? fieldSettings.min : value;\n        allErrors.push({\n          key: constants.VALUE_MIN_CONSTRAINT_FAIL,\n          args: { value, fieldSettings, context: minMaxContext },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n      if (fieldSettings.max != null && value > fieldSettings.max) {\n        fixedValue = canFix ? fieldSettings.max : value;\n        allErrors.push({\n          key: constants.VALUE_MAX_CONSTRAINT_FAIL,\n          args: { value, fieldSettings, context: minMaxContext },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n    }\n  }\n\n  return [fixedValue, allErrors];\n};\n\n\n/**\n * \n */\nconst validateFieldValue = (leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null, canFix = false, isEndValue = false) => {\n  const allErrors = [];\n  const {fieldSeparator, canCompareFieldWithField} = config.settings;\n  const isFuncArg = typeof field == \"object\" && field?._isFuncArg;\n  const leftFieldStr = Array.isArray(leftField) ? leftField.join(fieldSeparator) : leftField;\n  const leftFieldConfig = getFieldConfig(config, leftField);\n  const rightFieldStr = Array.isArray(value) ? value.join(fieldSeparator) : value;\n  const rightFieldConfig = getFieldConfig(config, value);\n  if (!rightFieldConfig) {\n    allErrors.push({\n      key: constants.NO_CONFIG_FOR_FIELD_VALUE,\n      args: { field: rightFieldStr }\n    });\n    return [value, allErrors];\n  }\n  if (leftField && rightFieldStr === leftFieldStr && !isFuncArg) {\n    allErrors.push({\n      key: constants.CANT_COMPARE_FIELD_WITH_ITSELF,\n      args: { field: leftFieldStr }\n    });\n    return [value, allErrors];\n  }\n  if (valueType && valueType != rightFieldConfig.type) {\n    allErrors.push({\n      key: constants.INCORRECT_FIELD_TYPE,\n      args: { field: rightFieldStr, type: rightFieldConfig.type, expected: valueType }\n    });\n    return [value, allErrors];\n  }\n  if (leftField && !isFuncArg && canCompareFieldWithField) {\n    const canUse = canCompareFieldWithField(\n      leftFieldStr, leftFieldConfig, rightFieldStr, rightFieldConfig, operator\n    );\n    if (!canUse) {\n      allErrors.push({\n        key: constants.CANT_COMPARE_FIELD_WITH_FIELD,\n        args: { leftField: leftFieldStr, rightField: rightFieldStr }\n      });\n      return [value, allErrors];\n    }\n  }\n  return [value];\n};\n\n/**\n * @param {bool} canDropArgs true only if user sets new func key\n */\nconst validateFuncValue = (\n  leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null,\n  canFix = false, isEndValue = false, canDropArgs = false\n) => {\n  let fixedValue = value;\n  const allErrors = [];\n\n  if (!value) {\n    // empty value\n    return [value];\n  }\n  const funcKey = value.get?.(\"func\");\n  if (!funcKey) {\n    // it's not a function value\n    return [value];\n  }\n  const fieldDef = getFieldConfig(config, field);\n  if (fieldDef?.funcs && !fieldDef.funcs.includes(funcKey)) {\n    allErrors.push({\n      key: constants.UNSUPPORTED_FUNCTION_FOR_FIELD,\n      args: { funcKey, field }\n    });\n    return [value, allErrors];\n  }\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    allErrors.push({\n      key: constants.NO_CONFIG_FOR_FUNCTION,\n      args: { funcKey }\n    });\n    return [value, allErrors];\n  }\n  const funcName = funcConfig.label ?? funcKey;\n  if (valueType && funcConfig.returnType != valueType) {\n    allErrors.push({\n      key: constants.INCORRECT_FUNCTION_RETURN_TYPE,\n      args: { funcKey, funcName, returnType: funcConfig.returnType, valueType }\n    });\n    return [value, allErrors];\n  }\n  //tip: Exception for canDropArgs (true only if changing func) - can fix/drop args to fit new func validations\n  canFix = canFix || canDropArgs;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const args = fixedValue.get(\"args\");\n    const argVal = args ? args.get(argKey) : undefined;\n    const argDef = getFieldConfig(config, argConfig);\n    const argName = argDef?.label ?? argKey;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValue !== undefined) {\n      const [fixedArgVal, argErrors] = validateValue(\n        config, leftField, argDef, operator, argValue, argConfig.type, argValueSrc, asyncListValues, canFix, isEndValue, canDropArgs,\n      );\n      const isValid = !argErrors?.length;\n      const willFix = canFix && fixedArgVal !== argValue;\n      //const willFixAllErrors = !isValid && willFix && !allErrors?.find(e => !e.fixed);\n      //tip: reset to default ONLY if isEndValue==true\n      const canDropOrReset = canFix && !isValid && !willFix && (isEndValue || canDropArgs);\n      if (willFix) {\n        fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], fixedArgVal);\n      }\n      if (canDropOrReset) {\n        // reset to default\n        fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n        fixedValue = setFuncDefaultArg(config, fixedValue, funcConfig, argKey);\n      }\n      if (!isValid) {\n        const firstError = argErrors.find(e => !e.fixed && !e.ignore) ?? argErrors.find(e => !e.fixed) ?? argErrors[0];\n        const fixed = willFix || canDropOrReset;\n        const ignore = argErrors.filter(e => !e.ignore).length === 0;\n        if (firstError) {\n          const argValidationError = translateValidation(firstError);\n          allErrors.push({\n            key: constants.INVALID_FUNC_ARG_VALUE,\n            args: {\n              funcKey, funcName, argKey, argName, argValidationError,\n              // more meta\n              argErrors,\n            },\n            ignore,\n            fixed,\n            fixedFrom: fixed ? argValue : undefined,\n            fixedTo: fixed ? (willFix ? fixedArgVal : argConfig.defaultValue) : undefined,\n          });\n        }\n      }\n    } else if (!argConfig.isOptional && (isEndValue || canDropArgs)) {\n      const canReset = canFix && argConfig.defaultValue !== undefined && (isEndValue || canDropArgs);\n      const canAddError = isEndValue;\n      //tip: Exception for canDropArgs (true only if changing func) - don't show error about required args\n      if (canAddError) {\n        allErrors.push({\n          key: constants.REQUIRED_FUNCTION_ARG,\n          args: { funcKey, funcName, argKey, argName },\n          fixed: canReset,\n          fixedTo: canReset ? argConfig.defaultValue : undefined,\n          ignore: !canReset, // tip: don't show error message in UI about missing arg after validation API call\n        });\n      }\n      if (canReset) {\n        // set default\n        fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n        fixedValue = setFuncDefaultArg(config, fixedValue, funcConfig, argKey);\n      }\n    }\n  }\n\n  return [fixedValue, allErrors];\n};\n\n/**\n * \n */\nexport const validateRange = (config, field, operator, values, valueSrcs) => {\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n  const valueSrcsArr = (valueSrcs.toJS ? valueSrcs.toJS() : valueSrcs);\n  const valuesArr = (values.toJS ? values.toJS() : values);\n  const areValueSrcsPureValues = valueSrcsArr.filter(vs => vs == \"value\" || vs == null).length == operatorCardinality;\n  let rangeError;\n  if (operatorConfig?.validateValues && areValueSrcsPureValues) {\n    const valueSrc = valueSrcsArr[0];\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, w, valueSrc);\n    const jsValues = fieldWidgetDefinition?.toJS\n      ? valuesArr.map(v => {\n        let jsVal = fieldWidgetDefinition.toJS.call(config.ctx, v, fieldWidgetDefinition);\n        if (jsVal instanceof Date) {\n          jsVal = jsVal.getTime();\n        }\n        return jsVal;\n      })\n      : valuesArr;\n    const validResult = operatorConfig.validateValues(jsValues);\n    if (typeof validResult === \"boolean\") {\n      if (validResult == false) {\n        rangeError = {\n          key: constants.INVALID_RANGE,\n          args: {\n            jsValues,\n            values: valuesArr,\n          }\n        };\n      }\n    }\n  }\n  return rangeError;\n};\n\n\n\n/**\n * @param {Immutable.Map} current\n * @param {string} changedProp\n * @param {boolean} canFix (default: false) true - eg. set value to max if it > max or revert or drop\n * @param {boolean} isEndValue (default: false) true - if value is in process of editing by user\n * @param {boolean} canDropArgs (default: false)\n * @return {{canReuseValue, newValue, newValueSrc, newValueType, fixedField, operatorCardinality,  newValueError, newFieldError, validationErrors}}\n */\nexport const getNewValueForFieldOp = function (\n  config, oldConfig = null, current, newField, newOperator, changedProp = null,\n  canFix = false, isEndValue = false, canDropArgs = false\n) {\n  //const isValidatingTree = (changedProp === null);\n  if (!oldConfig)\n    oldConfig = config;\n  const {\n    keepInputOnChangeFieldSrc, convertableWidgets, clearValueOnChangeField, clearValueOnChangeOp,\n  } = config.settings;\n  const isCase = newField == \"!case_value\";\n  let currentField = current.get(\"field\");\n  if (!currentField && isCase) {\n    currentField = newField;\n  }\n  const currentFieldType = current.get(\"fieldType\");\n  const currentFieldSrc = current.get(\"fieldSrc\");\n  const currentOperator = current.get(\"operator\");\n  const currentValue = current.get(\"value\");\n  const currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n  const currentValueType = current.get(\"valueType\", new Immutable.List());\n  const currentValueError = current.get(\"valueError\", new Immutable.List());\n  const asyncListValues = current.get(\"asyncListValues\");\n\n  const isOkWithoutOperator = isCase;\n  const currentOperatorConfig = getOperatorConfig(oldConfig, currentOperator);\n  const newOperatorConfig = getOperatorConfig(config, newOperator, newField);\n  const currentOperatorCardinality = isCase ? 1 : currentOperator ? getOpCardinality(currentOperatorConfig) : null;\n  const operatorCardinality = isCase ? 1 : newOperator ? getOpCardinality(newOperatorConfig) : null;\n  const currentFieldConfig = getFieldConfig(oldConfig, currentField);\n  const newFieldConfig = getFieldConfig(config, newField);\n  const isOkWithoutField = !currentField && currentFieldType && keepInputOnChangeFieldSrc;\n  const currentType = currentFieldConfig?.type || currentFieldType;\n  const newType = newFieldConfig?.type || !newField && isOkWithoutField && currentType;\n  const currentListValuesType = currentFieldConfig?.listValuesType;\n  const newListValuesType = newFieldConfig?.listValuesType;\n  const currentFieldSimpleValue = currentField?.get?.(\"func\") || currentField;\n  const newFieldSimpleValue = newField?.get?.(\"func\") || newField;\n  const hasFieldChanged = newFieldSimpleValue != currentFieldSimpleValue;\n\n  let validationErrors = [];\n\n  let canReuseValue = (currentField || isOkWithoutField)\n    && (currentOperator && newOperator || isOkWithoutOperator)\n    && currentValue != undefined;\n  if (\n    !(currentType && newType && currentType == newType)\n    || changedProp === \"field\" && hasFieldChanged && clearValueOnChangeField\n    || changedProp === \"operator\" && clearValueOnChangeOp\n  ) {\n    canReuseValue = false;\n  }\n  if (hasFieldChanged && selectTypes.includes(newType)) {\n    if (newListValuesType && newListValuesType === currentListValuesType) {\n      // ok\n    } else {\n      // different fields of select types has different listValues\n      canReuseValue = false;\n    }\n  }\n  if (!isOkWithoutOperator && (!currentValue?.size && operatorCardinality || currentValue?.size && !operatorCardinality)) {\n    canReuseValue = false;\n  }\n\n  // validate func LHS\n  let newFieldError;\n  if (currentFieldSrc === \"func\" && newField) {\n    const [fixedField, fieldErrors] = validateValue(\n      config, null, null, newOperator, newField, newType, currentFieldSrc, asyncListValues, canFix, isEndValue, canDropArgs\n    );\n    const isValid = !fieldErrors?.length;\n    const willFix = fixedField !== newField;\n    const willFixAllErrors = !isValid && willFix && !fieldErrors.find(e => !e.fixed);\n    const willRevert = canFix && !isValid && !willFixAllErrors && !!changedProp && newField !== currentField;\n    const willDrop = false; //canFix && !isValid && !willFixAllErrors && !willRevert && !changedProp;\n    if (willDrop) {\n      newField = null;\n    } else if (willRevert) {\n      newField = currentField;\n    } else if (willFix) {\n      newField = fixedField;\n    }\n    if (!isValid) {\n      const showError = !isValid && !willFixAllErrors && !willDrop && !willRevert;\n      const firstError = fieldErrors.find(e => !e.fixed && !e.ignore);\n      if (showError && firstError) {\n        newFieldError = translateValidation(firstError);\n      }\n      // tip: even if we don't show errors, but revert LHS, put the reason of revert\n      fieldErrors.map(e => validationErrors.push({\n        side: \"lhs\",\n        ...e,\n        fixed: e.fixed || willRevert || willDrop,\n      }));\n    }\n  }\n\n  // compare old & new widgets\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    const vs = currentValueSrc.get(i) || null;\n    const currentWidget = getWidgetForFieldOp(oldConfig, currentField, currentOperator, vs);\n    const newWidget = getWidgetForFieldOp(config, newField, newOperator, vs);\n    // need to also check value widgets if we changed operator and current value source was 'field'\n    // cause for select type op '=' requires single value and op 'in' requires array value\n    const currentValueWidget = vs === \"value\" ? currentWidget\n      : getWidgetForFieldOp(oldConfig, currentField, currentOperator, \"value\");\n    const newValueWidget = vs === \"value\" ? newWidget\n      : getWidgetForFieldOp(config, newField, newOperator, \"value\");\n\n    const canReuseWidget = newValueWidget == currentValueWidget\n      || (convertableWidgets[currentValueWidget] || []).includes(newValueWidget)\n      || !currentValueWidget && isOkWithoutField;\n    if (!canReuseWidget) {\n      canReuseValue = false;\n    }\n  }\n\n  if (currentOperator != newOperator && [currentOperator, newOperator].includes(\"proximity\")) {\n    canReuseValue = false;\n  }\n\n  const firstValueSrc = currentValueSrc.first();\n  const firstWidgetConfig = getFieldWidgetConfig(config, newField, newOperator, null, firstValueSrc);\n  let valueSources = getValueSourcesForFieldOp(config, newField, newOperator, null);\n  if (!newField && isOkWithoutField) {\n    valueSources = Object.keys(config.settings.valueSourcesInfo);\n  }\n  const defaultValueSrc = valueSources[0];\n  let defaultValueType;\n  if (operatorCardinality === 1 && firstWidgetConfig && firstWidgetConfig.type !== undefined) {\n    defaultValueType = firstWidgetConfig.type;\n  } else if (operatorCardinality === 1 && newFieldConfig && newFieldConfig.type !== undefined) {\n    defaultValueType = newFieldConfig.type === \"!group\" ? \"number\" : newFieldConfig.type;\n  }\n\n  // changed operator from '==' to 'between'\n  let canExtendValueToRange = canReuseValue && changedProp === \"operator\"\n    && currentOperatorCardinality === 1 && operatorCardinality === 2;\n\n  let valueFixes = [];\n  let valueSrcFixes = [];\n  let valueTypeFixes = [];\n  let valueErrors = Array.from({length: operatorCardinality}, () => null);\n  if (canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      let v = currentValue.get(i);\n      let vType = currentValueType.get(i) || null;\n      let vSrc = currentValueSrc.get(i) || null;\n      if (canExtendValueToRange && i === 1) {\n        v = valueFixes[0] !== undefined ? valueFixes[0] : currentValue.get(0);\n        valueFixes[i] = v;\n        vType = currentValueType.get(0) || null;\n        vSrc = currentValueSrc.get(0) || null;\n      }\n      const isValidSrc = vSrc ? (valueSources.find(v => v == vSrc) !== undefined) : true;\n      const [fixedValue, allErrors] = validateValue(\n        config, newField, newField, newOperator, v, vType, vSrc, asyncListValues, canFix, isEndValue, canDropArgs\n      );\n      const isValid = !allErrors?.length;\n      // Allow bad value with error message\n      // But not on field change - in that case just drop bad value that can't be reused\n      // ? Maybe we should also drop bad value on op change?\n      // For bad multiselect value we have both error message + fixed value.\n      //  If we show error message, it will gone on next tree validation\n      const willFix = fixedValue !== v;\n      const willFixAllErrors = !isValid && willFix && !allErrors?.find(e => !e.fixed);\n      const allErrorsHandled = !allErrors?.find(e => !e.fixed && !e.ignore);\n     \n      // tip: is value src is invalid, drop ANYWAY\n      // tip: Edge case in demo:\n      //      Given \"login = LOWER(?)\", change config to not show errors -> \"LOWER(?)\" will be dropped\n      //      We don't want to drop func completely, so need to add `allErrorsAheHandled` or `vSrc !== \"func\"`\n      // todo: `hasFieldChanged` is not needed ?\n      const willDrop = !isValidSrc\n        || canFix && !isValid && !willFixAllErrors && (!allErrorsHandled || hasFieldChanged);\n      if (!isValid) {\n        // tip: even if we don't show errors, but drop bad values, put the reason of removal\n        allErrors?.map(e => validationErrors.push({\n          side: \"rhs\",\n          delta: i,\n          ...e,\n          fixed: e.fixed || willDrop,\n        }));\n      }\n      if (willDrop) {\n        valueFixes[i] = null;\n        if (i === 0) {\n          delete valueFixes[1];\n        }\n      }\n      const showError = !isValid && !willFix;\n      const firstError = allErrors?.find(e => !e.fixed && !e.ignore);\n      if (showError && firstError) {\n        valueErrors[i] = translateValidation(firstError);\n      }\n      if (willFix) {\n        valueFixes[i] = fixedValue;\n      }\n      if (canExtendValueToRange && i === 0 && !isValid && !willFix) {\n        // don't extend bad value to range\n        canExtendValueToRange = false;\n      }\n      if (canExtendValueToRange && i === 0 && [\"func\", \"field\"].includes(vSrc)) {\n        // don't extend func/field value, only primitive value\n        canExtendValueToRange = false;\n      }\n    }\n  }\n\n  // if can't reuse, get defaultValue\n  if (!canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      if (operatorCardinality === 1) {\n        // tip: default range values (for cardinality > 1) are not supported yet, todo\n        const dv = getFirstDefined([\n          newFieldConfig?.defaultValue,\n          newFieldConfig?.fieldSettings?.defaultValue,\n          firstWidgetConfig?.defaultValue\n        ]);\n        valueFixes[i] = dv;\n        if (dv?.func) {\n          valueSrcFixes[i] = \"func\";\n          //tip: defaultValue of src \"field\" is not supported, todo\n        }\n      }\n    }\n  }\n\n  // set default valueSrc and valueType\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    let vs = canReuseValue && currentValueSrc.get(i) || null;\n    let vt = canReuseValue && currentValueType.get(i) || null;\n    if (canReuseValue && canExtendValueToRange && i === 1) {\n      vs = valueSrcFixes[i] ?? currentValueSrc.get(0);\n      vt = valueTypeFixes[i] ?? currentValueType.get(0);\n      valueSrcFixes[i] = vs;\n      valueTypeFixes[i] = vt;\n    }\n    const isValidSrc = valueSources.includes(vs);\n    if (!isValidSrc) {\n      valueSrcFixes[i] = defaultValueSrc;\n    }\n    if (!vt) {\n      valueTypeFixes[i] = defaultValueType;\n    }\n  }\n\n  // build new values\n  let newValue = currentValue;\n  if (valueFixes.length > 0 || !canReuseValue) {\n    newValue = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n      return valueFixes[i] !== undefined ? valueFixes[i] : (canReuseValue ? currentValue.get(i) : undefined);\n    }));\n  }\n  let newValueSrc = currentValueSrc;\n  if (valueSrcFixes.length > 0 || !canReuseValue) {\n    newValueSrc = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n      return valueSrcFixes[i] ?? (canReuseValue && currentValueSrc.get(i) || null);\n    }));\n  }\n  let newValueType = currentValueType;\n  if (valueTypeFixes.length > 0 || !canReuseValue) {\n    newValueType = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n      return valueTypeFixes[i] ?? (canReuseValue && currentValueType.get(i) || null);\n    }));\n  }\n\n  // Validate range\n  const rangeErrorObj = validateRange(config, newField, newOperator, newValue, newValueSrc);\n  if (rangeErrorObj) {\n    // last element in `valueError` list is for range validation error\n    const rangeValidationError = translateValidation(rangeErrorObj);\n    const willFix = canFix && operatorCardinality >= 2;\n    const badValue = newValue;\n    if (willFix) {\n      valueFixes[1] = newValue.get(0);\n      newValue = newValue.set(1, valueFixes[1]);\n      valueErrors[1] = valueErrors[0];\n    }\n    const showError = !willFix;\n    if (showError) {\n      valueErrors.push(rangeValidationError);\n    }\n    validationErrors.push({\n      side: \"rhs\",\n      delta: -1,\n      ...rangeErrorObj,\n      fixed: willFix,\n      fixedFrom: willFix ? [badValue.get(0), badValue.get(1)] : undefined,\n      fixedTo: willFix ? [newValue.get(0), newValue.get(1)] : undefined\n    });\n  }\n\n  let newValueError = currentValueError;\n  const hasValueErrorChanged = currentValueError?.size !== valueErrors.length\n    || valueErrors.filter((v, i) => (v != currentValueError.get(i))).length > 0;\n  if (hasValueErrorChanged) {\n    newValueError = new Immutable.List(valueErrors);\n  }\n\n  return {\n    canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality, fixedField: newField,\n    newValueError, newFieldError, validationErrors,\n  };\n};\n","\nimport {getFieldConfig, getFuncConfig, getFuncSignature} from \"../utils/configUtils\";\nimport {filterValueSourcesForField, completeValue, selectTypes} from \"../utils/ruleUtils\";\nimport {validateValue} from \"../utils/validation\";\nimport Immutable from \"immutable\";\n\n// helpers\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\n\n/**\n * @param {Immutable.Map} value\n * @param {object} config\n * @return {Immutable.Map | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeFuncValue = (value, config) => {\n  if (!value)\n    return undefined;\n  const funcKey = value.get(\"func\");\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return undefined;\n  let complValue = value;\n  let tmpHasOptional = false;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const {valueSources, isOptional, defaultValue} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    const args = complValue.get(\"args\");\n    const argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = (argVal ? argVal.get(\"valueSrc\") : undefined) || argDefaultValueSrc;\n    if (argValue !== undefined) {\n      const completeArgValue = completeValue(argValue, argValueSrc, config);\n      if (completeArgValue === undefined) {\n        return undefined;\n      } else if (completeArgValue !== argValue) {\n        complValue = complValue.setIn([\"args\", argKey, \"value\"], completeArgValue);\n      }\n      if (tmpHasOptional) {\n        // has gap\n        return undefined;\n      }\n    } else if (defaultValue !== undefined && !isObject(defaultValue)) {\n      complValue = complValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n      complValue = complValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n    } else if (isOptional) {\n      // optional\n      tmpHasOptional = true;\n    } else {\n      // missing value\n      return undefined;\n    }\n  }\n  return complValue;\n};\n\n\n/**\n * @param {Immutable.Map} value \n * @return {array} - [usedFields, badFields]\n */\n// const getUsedFieldsInFuncValue = (value, config) => {\n//   let usedFields = [];\n//   let badFields = [];\n\n//   const _traverse = (value) => {\n//     const args = value && value.get(\"args\");\n//     if (!args) return;\n//     for (const arg of args.values()) {\n//       if (arg.get(\"valueSrc\") == \"field\") {\n//         const rightField = arg.get(\"value\");\n//         if (rightField) {\n//           const rightFieldDefinition = config ? getFieldConfig(config, rightField) : undefined;\n//           if (config && !rightFieldDefinition)\n//             badFields.push(rightField);\n//           else\n//             usedFields.push(rightField);\n//         }\n//       } else if (arg.get(\"valueSrc\") == \"func\") {\n//         _traverse(arg.get(\"value\"));\n//       }\n//     }\n//   };\n\n//   _traverse(value);\n\n//   return [usedFields, badFields];\n// };\n\n\n/**\n * Used @ FuncWidget\n * @param {Immutable.Map} value \n * @param {string} funcKey \n * @param {object} config \n * @param {boolean} canFixArgs\n */\nexport const setFunc = (value, funcKey, config, canFixArgs) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  value = value || new Immutable.Map();\n  if (Array.isArray(funcKey)) {\n    // fix for cascader\n    funcKey = funcKey.join(fieldSeparator);\n  }\n  const oldFuncKey = value.get(\"func\");\n  const oldArgs = value.get(\"args\");\n  value = value.set(\"func\", funcKey);\n\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  const newFuncSignature = funcKey && getFuncSignature(config, funcKey);\n  const oldFuncSignature = oldFuncKey && getFuncSignature(config, oldFuncKey);\n  const keepArgsKeys = getCompatibleArgsOnFuncChange(oldFuncSignature, newFuncSignature, oldArgs, config, canFixArgs);\n  if (keepArgsKeys.length) {\n    const argsKeys = Object.keys(newFuncSignature.args);\n    const deleteArgsKeys = argsKeys.filter(k => !keepArgsKeys.includes(k));\n    value = deleteArgsKeys.reduce((value, k) => value.deleteIn([\"args\", k]), value);\n  } else {\n    value = value.set(\"args\", new Immutable.Map());\n  }\n\n  // defaults\n  value = setFuncDefaultArgs(config, value, funcConfig);\n\n  return value;\n};\n\nconst setFuncDefaultArgs = (config, funcValue, funcConfig) => {\n  if (funcConfig) {\n    for (const argKey in funcConfig.args) {\n      funcValue = setFuncDefaultArg(config, funcValue, funcConfig, argKey);\n    }\n  }\n  return funcValue;\n};\n\nexport const setFuncDefaultArg = (config, funcValue, funcConfig, argKey) => {\n  const argConfig = funcConfig.args[argKey];\n  const {valueSources, defaultValue} = argConfig;\n  const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n  const firstValueSrc = filteredValueSources.length ? filteredValueSources[0] : undefined;\n  const defaultValueSrc = defaultValue ? (isObject(defaultValue) && !!defaultValue.func ? \"func\" : \"value\") : undefined;\n  const argDefaultValueSrc = defaultValueSrc || firstValueSrc;\n  const hasValue = funcValue.getIn([\"args\", argKey]);\n  if (!hasValue) {\n    if (defaultValue !== undefined) {\n      funcValue = funcValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n    }\n    if (argDefaultValueSrc) {\n      funcValue = funcValue.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return funcValue;\n};\n\nconst getDefaultArgValue = ({defaultValue: value}) => {\n  if (isObject(value) && !Immutable.Map.isMap(value) && value.func) {\n    return Immutable.fromJS(value, function (k, v) {\n      return Immutable.Iterable.isIndexed(v) ? v.toList() : v.toOrderedMap();\n    });\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {*} argVal \n* @param {object} argConfig \n*/\nexport const setArgValue = (value, argKey, argVal, argConfig, config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey, \"value\"], argVal);\n\n    // set default arg value source\n    const valueSrc = value.getIn([\"args\", argKey, \"valueSrc\"]);\n    const {valueSources} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    let argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    if (!argDefaultValueSrc && filteredValueSources.includes(\"value\")) {\n      argDefaultValueSrc = \"value\";\n    }\n    if (!valueSrc && argDefaultValueSrc) {\n      value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {string} argValSrc \n* @param {object} argConfig \n*/\nexport const setArgValueSrc = (value, argKey, argValSrc, _argConfig, _config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey], new Immutable.Map({valueSrc: argValSrc}));\n  }\n  return value;\n};\n\n// see getFuncSignature in configUtils\nexport const getCompatibleArgsOnFuncChange = (s1, s2, argVals, config, canFixArgs = false) => {\n  if (s1?.returnType != s2?.returnType)\n    return [];\n  const checkIndexes = false;\n  const keys = Object.keys(s2.args);\n  const compatibleKeys = keys.filter((k, i) => {\n    const arg2 = s2.args[k];\n    const arg1 = s1.args[k];\n    const oldInd = Object.keys(s1.args).indexOf(k);\n    if (!arg1 && (arg2.defaultValue !== undefined || arg2.isOptional)) {\n      return true;\n    }\n    if (checkIndexes && i !== oldInd) {\n      return false;\n    }\n    if (arg1?.type != arg2.type)\n      return false;\n    if (selectTypes.includes(arg2.type)) {\n      if (!arg1.listValuesType || arg1.listValuesType !== arg2.listValuesType)\n        return false;\n    }\n    if (argVals) {\n      const argVal = argVals.get(k);\n      const argValue = argVal?.get(\"value\");\n      const argValueSrc = argVal?.get(\"valueSrc\");\n      if (argValueSrc && arg2.valueSources && !arg2.valueSources.includes(argValueSrc))\n        return false;\n      const leftField = null, operator = null, argDef = arg2, asyncListValues = null, isEndValue = true;\n      const [_fixedArgVal, argValidErrors] = validateValue(\n        config, leftField, argDef, operator, argValue, argDef.type, argValueSrc, asyncListValues, canFixArgs, isEndValue\n      );\n      if (argValidErrors?.filter(e => !e.fixed)?.length)\n        return false;\n    }\n\n    return true;\n  });\n  return compatibleKeys;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldRawConfig, getFuncConfig, getFieldParts,\n  isFieldDescendantOfField, getFieldId, _getFromConfigCache, _saveToConfigCache,\n} from \"./configUtils\";\nimport last from \"lodash/last\";\nimport {completeFuncValue} from \"./funcUtils\";\n\nexport const selectTypes = [\n  \"select\",\n  \"multiselect\",\n  \"treeselect\",\n  \"treemultiselect\",\n];\n\n\nexport const getOperatorsForType = (config, fieldType) => {\n  return config.types[fieldType]?.operators || null;\n};\n\nexport const getOperatorsForField = (config, field) => {\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOps = fieldConfig ? fieldConfig.operators : [];\n  return fieldOps;\n};\n\nexport const getFirstOperator = (config, field) => {\n  const fieldOps = getOperatorsForField(config, field);\n  return fieldOps?.[0] ?? null;\n};\n\nexport const calculateValueType = (value, valueSrc, config) => {\n  let calculatedValueType = null;\n  if (value) {\n    if (valueSrc === \"field\") {\n      const fieldConfig = getFieldConfig(config, value);\n      if (fieldConfig) {\n        calculatedValueType = fieldConfig.type;\n      }\n    } else if (valueSrc === \"func\") {\n      const funcKey = value.get(\"func\");\n      if (funcKey) {\n        const funcConfig = getFuncConfig(config, funcKey);\n        if (funcConfig) {\n          calculatedValueType = funcConfig.returnType || funcConfig.type;\n        }\n      }\n    }\n  }\n  return calculatedValueType;\n};\n\nexport const getFuncPathLabels = (field, config, parentField = null) => {\n  return getFieldPathLabels(field, config, parentField, \"funcs\", \"subfields\");\n};\n\nexport const getFieldPathLabels = (field, config, parentField = null, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  const parentParts = getFieldParts(parentField, config);\n  const res = parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => [...parentParts, ...parts].join(fieldSeparator))\n    .map(part => {\n      const cnf = getFieldRawConfig(config, part, fieldsKey, subfieldsKey);\n      return cnf && cnf.label || last(part.split(fieldSeparator));\n    })\n    .filter(label => label != null);\n  return res;\n};\n\nexport const getFieldPartsConfigs = (field, config, parentField = null) => {\n  if (!field)\n    return null;\n  const parentFieldDef = parentField && getFieldRawConfig(config, parentField) || null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  const isDescendant = isFieldDescendantOfField(field, parentField, config);\n  const parentParts = !isDescendant ? [] : getFieldParts(parentField, config);\n  return parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => ({\n      part: [...parentParts, ...parts].join(fieldSeparator),\n      key: parts[parts.length - 1]\n    }))\n    .map(({part, key}) => {\n      const cnf = getFieldRawConfig(config, part);\n      return {key, cnf};\n    })\n    .map(({key, cnf}, ind, arr) => {\n      const parentCnf = ind > 0 ? arr[ind - 1].cnf : parentFieldDef;\n      return [key, cnf, parentCnf];\n    });\n};\n\nexport const getValueLabel = (config, field, operator, delta, valueSrc = null, isSpecialRange = false) => {\n  // const isFuncArg = field && typeof field == \"object\" && !!field.func && !!field.arg;\n  // const {showLabels} = config.settings;\n  // const fieldConfig = getFieldConfig(config, field);\n  const fieldWidgetConfig = getFieldWidgetConfig(config, field, operator, null, valueSrc) || {};\n  const mergedOpConfig = getOperatorConfig(config, operator, field) || {};\n\n  const cardinality = isSpecialRange ? 1 : mergedOpConfig.cardinality;\n  let ret = null;\n  if (cardinality > 1) {\n    const valueLabels = fieldWidgetConfig.valueLabels || mergedOpConfig.valueLabels;\n    if (valueLabels)\n      ret = valueLabels[delta];\n    if (ret && typeof ret !== \"object\") {\n      ret = {label: ret, placeholder: ret};\n    }\n    if (!ret) {\n      ret = {\n        label: config.settings.valueLabel + \" \" + (delta+1),\n        placeholder: config.settings.valuePlaceholder + \" \" + (delta+1),\n      };\n    }\n  } else {\n    let label = fieldWidgetConfig.valueLabel;\n    let placeholder = fieldWidgetConfig.valuePlaceholder;\n    // tip: this logic moved to extendFieldConfig(), see comment \"label for func arg\"\n    // if (isFuncArg) {\n    //   if (!label)\n    //     label = fieldConfig.label || field.arg;\n    //   if (!placeholder && !showLabels)\n    //     placeholder = fieldConfig.label || field.arg;\n    // }\n\n    ret = {\n      label: label || config.settings.valueLabel, \n      placeholder: placeholder || config.settings.valuePlaceholder,\n    };\n  }\n  return ret;\n};\n\nfunction _getWidgetsAndSrcsForFieldOp (config, field, operator = null, valueSrc = null) {\n  let widgets = [];\n  let valueSrcs = [];\n  if (!field)\n    return {widgets, valueSrcs};\n  const fieldCacheKey = getFieldId(field);\n  const cacheKey = fieldCacheKey ? `${fieldCacheKey}__${operator}__${valueSrc}` : null;\n  const cached = _getFromConfigCache(config, \"_getWidgetsAndSrcsForFieldOp\", cacheKey);\n  if (cached)\n    return cached;\n  const isFuncArg = typeof field === \"object\" && (!!field.func && !!field.arg || field._isFuncArg);\n  const fieldConfig = getFieldConfig(config, field);\n  const opConfig = operator ? config.operators[operator] : null;\n  \n  if (fieldConfig?.widgets) {\n    for (const widget in fieldConfig.widgets) {\n      const widgetConfig = fieldConfig.widgets[widget];\n      if (!config.widgets[widget]) {\n        continue;\n      }\n      const widgetValueSrc = config.widgets[widget].valueSrc || \"value\";\n      let canAdd = true;\n      if (widget === \"field\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"field\"], fieldConfig).length > 0;\n      }\n      if (widget === \"func\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"func\"], fieldConfig).length > 0;\n      }\n      // If can't check operators, don't add\n      // Func args don't have operators\n      if (valueSrc === \"value\" && !widgetConfig.operators && !isFuncArg && field !== \"!case_value\")\n        canAdd = false;\n      if (widgetConfig.operators && operator)\n        canAdd = canAdd && widgetConfig.operators.indexOf(operator) != -1;\n      if (valueSrc && valueSrc != widgetValueSrc && valueSrc !== \"const\")\n        canAdd = false;\n      if (opConfig && opConfig.cardinality == 0 && (widgetValueSrc !== \"value\"))\n        canAdd = false;\n      if (canAdd) {\n        widgets.push(widget);\n        let canAddValueSrc = fieldConfig.valueSources?.indexOf(widgetValueSrc) != -1;\n        if (opConfig?.valueSources?.indexOf(widgetValueSrc) == -1)\n          canAddValueSrc = false;\n        if (canAddValueSrc && !valueSrcs.find(v => v == widgetValueSrc))\n          valueSrcs.push(widgetValueSrc);\n      }\n    }\n  }\n\n  const widgetWeight = (w) => {\n    let wg = 0;\n    if (fieldConfig.preferWidgets) {\n      if (fieldConfig.preferWidgets.includes(w))\n        wg += (10 - fieldConfig.preferWidgets.indexOf(w));\n    } else if (w == fieldConfig.mainWidget) {\n      wg += 100;\n    }\n    if (w === \"field\") {\n      wg -= 1;\n    }\n    if (w === \"func\") {\n      wg -= 2;\n    }\n    return wg;\n  };\n\n  widgets.sort((w1, w2) => (widgetWeight(w2) - widgetWeight(w1)));\n\n  const res = { widgets, valueSrcs };\n  _saveToConfigCache(config, \"_getWidgetsAndSrcsForFieldOp\", cacheKey, res);\n  return res;\n}\n\nexport const getWidgetsForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  return widgets;\n};\n\nexport const filterValueSourcesForField = (config, valueSrcs, fieldDefinition) => {\n  if (!fieldDefinition)\n    return valueSrcs;\n  let fieldType = fieldDefinition.type ?? fieldDefinition.returnType;\n  if (fieldType === \"!group\") {\n    // todo: aggregation can be not only number?\n    fieldType = \"number\";\n  }\n  // const { _isCaseValue } = fieldDefinition;\n  if (!valueSrcs)\n    valueSrcs = Object.keys(config.settings.valueSourcesInfo);\n  return valueSrcs.filter(vs => {\n    let canAdd = true;\n    if (vs === \"field\") {\n      if (config.__fieldsCntByType) {\n        // tip: LHS field can be used as arg in RHS function\n        const minCnt = fieldDefinition._isFuncArg ? 0 : 1;\n        canAdd = canAdd && config.__fieldsCntByType[fieldType] > minCnt;\n      }\n    }\n    if (vs === \"func\") {\n      if (fieldDefinition.funcs) {\n        canAdd = canAdd && fieldDefinition.funcs.length > 0;\n      }\n      if (config.__funcsCntByType) {\n        canAdd = canAdd && config.__funcsCntByType[fieldType] > 0;\n      }\n    }\n    return canAdd;\n  });\n};\n\nexport const getValueSourcesForFieldOp = (config, field, operator, fieldDefinition = null) => {\n  const {valueSrcs} = _getWidgetsAndSrcsForFieldOp(config, field, operator, null);\n  const filteredValueSrcs = filterValueSourcesForField(config, valueSrcs, fieldDefinition);\n  return filteredValueSrcs;\n};\n\nexport const getWidgetForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  let widget = null;\n  if (widgets.length)\n    widget = widgets[0];\n  return widget;\n};\n\n// can use alias (fieldName)\n// even if `parentField` is provided, `field` is still a full path\nexport const formatFieldName = (field, config, meta, parentField = null, options = {}) => {\n  if (!field) return;\n  const fieldDef = getFieldConfig(config, field) || {};\n  const {fieldSeparator} = config.settings;\n  const fieldParts = getFieldParts(field, config);\n  let fieldName = Array.isArray(field) ? field.join(fieldSeparator) : field;\n  if (options?.useTableName && fieldDef.tableName) { // legacy\n    const fieldPartsCopy = [...fieldParts];\n    fieldPartsCopy[0] = fieldDef.tableName;\n    fieldName = fieldPartsCopy.join(fieldSeparator);\n  }\n  if (fieldDef.fieldName) {\n    fieldName = fieldDef.fieldName;\n  }\n  if (parentField) {\n    const parentFieldDef = getFieldConfig(config, parentField) || {};\n    let parentFieldName = parentField;\n    if (fieldName.indexOf(parentFieldName + fieldSeparator) == 0) {\n      fieldName = fieldName.slice((parentFieldName + fieldSeparator).length);\n      // fieldName = \"#this.\" + fieldName; // ? for spel\n    } else {\n      if (fieldDef.fieldName) {\n        // ignore\n      } else {\n        meta.errors.push(`Can't cut group ${parentFieldName} from field ${fieldName}`);\n      }\n    }\n  }\n  return fieldName;\n};\n\n\n/**\n * Used together with keepInputOnChangeFieldSrc\n */\nexport const isEmptyItem = (item, config) => {\n  const type = item.get(\"type\");\n  const mode = item.getIn([\"properties\", \"mode\"]);\n  if (type == \"rule_group\" && mode == \"array\") {\n    return isEmptyRuleGroupExt(item, config);\n  } else if (type == \"group\" || type == \"rule_group\") {\n    return isEmptyGroup(item, config);\n  } else {\n    return isEmptyRule(item, config);\n  }\n};\n\nconst isEmptyRuleGroupExt = (item, config) => {\n  const children = item.get(\"children1\");\n  const properties = item.get(\"properties\");\n  return isEmptyRuleGroupExtPropertiesAndChildren(properties.toObject(), children, config);\n};\n\n/**\n * Used to remove group ext without confirmation\n * \n * If group operator is count, children can be empty.\n * If group operator is some/none/all, there should be at least one non-empty (even incomplete) child.\n */\nexport const isEmptyRuleGroupExtPropertiesAndChildren = (properties, children, config) => {\n  const operator = properties.operator;\n  const cardinality = config.operators[operator]?.cardinality ?? 1;\n  const childrenAreRequired = cardinality == 0; // tip: for group operators some/none/all\n  const filledParts = {\n    group: !isEmptyRuleProperties(properties, config),\n    children: !isEmptyGroupChildren(children, config),\n  };\n  const hasEnough = filledParts.group && (childrenAreRequired ? filledParts.children : true);\n  return !hasEnough;\n};\n\nconst isEmptyGroup = (group, config) => {\n  const children = group.get(\"children1\");\n  return isEmptyGroupChildren(children, config);\n};\n\n/**\n * Used to remove group without confirmation\n * @returns {boolean} false if there is at least one (even incomplete) child\n */\nexport const isEmptyGroupChildren = (children, config) => {\n  const hasEnough = children?.size > 0 && children.filter(ch => !isEmptyItem(ch, config)).size > 0;\n  return !hasEnough;\n};\n\nconst isEmptyRule = (rule, config) => {\n  const properties = rule.get(\"properties\");\n  return isEmptyRuleProperties(properties?.toObject() || {}, config);\n};\n\n/**\n * Used to remove rule without confirmation\n * @param properties is an Object, but properties (like value) are Immutable\n * @returns {boolean} true if there is no enough data in rule\n */\nexport const isEmptyRuleProperties = (properties, config) => {\n  const liteCheck = true;\n  const scoreThreshold = 3;\n  const compl = whatRulePropertiesAreCompleted(properties, config, liteCheck);\n  const hasEnough = compl.score >= scoreThreshold;\n  return !hasEnough;\n};\n\n/**\n * Used to validate rule\n * @param properties is an Object, but its properties (like `value`) are Immutable\n * @param liteCheck true can be used to check that rule has enough data to ask confirmation before delete\n * @return {{parts: {field: boolean, operator: boolean, value: boolean}, score: number}}\n */\nexport const whatRulePropertiesAreCompleted = ({\n  field, fieldSrc, fieldType,\n  operator,\n  value, valueSrc, valueType,\n}, config, liteCheck = false) => {\n  const cardinality = config.operators[operator]?.cardinality ?? 1;\n  const valueSrcs = valueSrc?.get ? valueSrc.toJS() : valueSrc;\n\n  // tip: for liteCheck==true `score` should equal 3 if both LHS and RHS are at least partially filled\n  const res = { parts: {}, score: 0 };\n  res.parts.field = liteCheck ? (field != null) : isCompletedValue(field, fieldSrc, config);\n  res.parts.operator = !!operator;\n  res.parts.value = value?.filter((val, delta) => \n    isCompletedValue(val, valueSrcs?.[delta], config, liteCheck)\n  )?.size >= (liteCheck ? Math.min(cardinality, 1) : cardinality);\n  res.score = Object.keys(res.parts).filter(k => !!res.parts[k]).length;\n\n  if (liteCheck && res.score < 3) {\n    // Boost score to confirm deletion:\n    // - if RHS is empty, but LHS is a completed function\n    // - if LHS is empty (only fieldType is set), but there is a completed function in RHS\n    const deepCheck = true;\n    if (!res.parts.value && fieldSrc === \"func\" && isCompletedValue(field, fieldSrc, config, false, deepCheck)) {\n      res.score++;\n    }\n    if (!res.parts.field) {\n      value?.map((val, delta) => {\n        if (valueSrcs?.[delta] === \"func\" && isCompletedValue(val, valueSrcs?.[delta], config, false, deepCheck)) {\n          res.score++;\n        }\n      });\n    }\n  }\n\n  return res;\n};\n\nconst isCompletedValue = (value, valueSrc, config, liteCheck = false, deepCheck = true) => {\n  if (!liteCheck && valueSrc == \"func\" && value) {\n    const funcKey = value.get?.(\"func\");\n    const funcConfig = getFuncConfig(config, funcKey);\n    if (funcConfig) {\n      const args = value.get(\"args\");\n      for (const argKey in funcConfig.args) {\n        const argConfig = funcConfig.args[argKey];\n        const argVal = args ? args.get(argKey) : undefined;\n        // const argDef = getFieldConfig(config, argConfig);\n        const argValue = argVal ? argVal.get(\"value\") : undefined;\n        const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n        if (argValue == undefined && argConfig?.defaultValue === undefined && !argConfig?.isOptional) {\n          // arg is not completed\n          return false;\n        }\n        if (argValue != undefined) {\n          if (!isCompletedValue(argValue, argValueSrc, config, deepCheck ? liteCheck : true)) {\n            // arg is complex and is not completed\n            return false;\n          }\n        }\n      }\n      // all args are completed\n      return true;\n    }\n  }\n  return value != undefined;\n};\n\n/**\n * @param {*} value\n * @param {'value'|'field'|'func'} valueSrc\n * @param {object} config\n * @return {* | undefined}  undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeValue = (value, valueSrc, config) => {\n  if (valueSrc == \"func\")\n    return completeFuncValue(value, config);\n  else\n    return value;\n};\n","import JL from \"json-logic-js\";\nimport moment from \"moment\";\n\nexport function applyJsonLogic(logic, data) {\n  return JL.apply(logic, data);\n}\n\nfunction addJsonLogicOperation(name, op) {\n  return JL.add_operation(name, op);\n}\n\nexport const customJsonLogicOperations = {\n  CALL: (fn, ctx, ...args) => (fn.call(ctx, ...args)),\n  JSX: (type, props) => ({type, props}),\n  mergeObjects: (obj1, obj2) => ({...obj1, ...obj2}),\n  fromEntries: (entries) => Object.fromEntries(entries),\n  strlen: (str) => (str?.length || 0),\n  regexTest: (str, pattern, flags) => str?.match(new RegExp(pattern, flags)) != null,\n  now: () => new Date(),\n  date_add: (date, val, dim) => { return moment(date).add(val, dim).toDate(); },\n  toLowerCase: (str) => str.toLowerCase(),\n  toUpperCase: (str) => str.toUpperCase(),\n};\n\nexport function addRequiredJsonLogicOperations() {\n  for (let k in customJsonLogicOperations) {\n    addJsonLogicOperation(k, customJsonLogicOperations[k]);\n  }\n}\n","import merge from \"lodash/merge\";\nimport pick from \"lodash/pick\";\nimport {isJsonLogic, isJSX, isDirtyJSX, cleanJSX, shallowEqual} from \"./stuff\";\nimport clone from \"clone\";\nimport JL from \"json-logic-js\";\nimport { addRequiredJsonLogicOperations, applyJsonLogic } from \"./jsonLogic\";\nimport { BasicFuncs } from \"..\";\nimport { getFieldRawConfig } from \"./configUtils\";\n\n// Add new operations for JsonLogic\naddRequiredJsonLogicOperations();\n\nexport { isJSX, isDirtyJSX, cleanJSX, applyJsonLogic };\n\nfunction applyJsonLogicWithPath(logic, data, path) {\n  let ret;\n  try {\n    ret = JL.apply(logic, data);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\nfunction callContextFn(_this, fn, args, path) {\n  let ret;\n  try {\n    ret = fn.call(_this, ...args);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\nexport const configKeys = [\"conjunctions\", \"fields\", \"types\", \"operators\", \"widgets\", \"settings\", \"funcs\", \"ctx\"];\n\n// type: \n//  x - iterate (with nesting `subfields`)\n//  \"r\" - RenderedReactElement\n//    Will be compiled with renderReactElement() into React element rendered with `React.createElement` (`ctx.RCE`)\n//  \"rf\" - JsonLogicFunction/string to render React\n//    JL data is { props, ctx }\n//    Should return {type, props} or string, where type or string - React component\n//    Can use { JSX: [\"SomeComponent\", {var: \"props\"}] } or just return \"SomeComponent\"\n//    Returned component will be searched in ctx.components/ctx.W/ctx.O, see getReactComponentFromCtx()\n//    Will be compiled with compileJsonLogicReact() into function with args (props, ctx) that will return renderReactElement()\n//  \"f\" - JsonLogicFunction/string\n//    JL data is { args, ctx } plus named args defined in `args` inside `compileMeta`\n//    Can use { CALL: [ {var: \"ctx.someFunc\"}, null, {var: \"args[0]\" }] } \n//    If string is passed, it's a path to function in ctx (with dot notation)\n//    Will be compiled with compileJsonLogic() into function with any args and `this` should be `ctx`\n\nconst compileMetaFieldSettings = {\n  asyncFetch: { type: \"f\", args: [\"search\", \"offset\"] },\n  labelYes: { type: \"r\" },\n  labelNo: { type: \"r\" },\n  marks: { type: \"r\", isArr: true },\n  validateValue: { type: \"f\", args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"] },\n};\n\nconst compileMetaWidget = {\n  ...compileMetaFieldSettings,\n  factory: { type: \"rf\" },\n  formatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"isForDisplay\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  sqlFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  spelFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  spelImportValue: { type: \"f\", args: [\"val\", \"wgtDef\", \"args\"] },\n  mongoFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  elasticSearchFormatValue: { type: \"f\", args: [\"queryType\", \"val\", \"op\", \"field\", \"config\"] },\n  jsonLogic: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  jsonLogicImport: { type: \"f\", args: [\"val\"] },\n  validateValue: { type: \"f\", args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"] }, // obsolete\n  toJS: { type: \"f\", args: [\"val\"] },\n};\n\nconst compileMetaOperator = {\n  options: { // proximity\n    factory: { type: \"rf\" },\n  },\n  formatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"isForDisplay\", \"fieldDef\"] },\n  mongoFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"useExpr\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  sqlFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  spelFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"field\", \"op\", \"vals\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  elasticSearchQueryType: { type: \"f\", ignore: \"string\", args: [\"valueType\"] },\n  textSeparators: { type: \"r\", isArr: true },\n};\n\nconst compileMetaConjunction = {\n  formatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"isForDisplay\"] },\n  sqlFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\"] },\n  spelFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"omitBrackets\"] },\n};\n\nconst compileMetaWidgetForType = {\n  widgetProps: compileMetaWidget,\n  opProps: compileMetaOperator\n};\n\nconst compileMetaFunc = {\n  renderBrackets: { type: \"r\", isArr: true },\n  renderSeps: { type: \"r\", isArr: true },\n\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"formattedArgs\"] },\n  jsonLogicImport: { type: \"f\", args: [\"val\"] },\n  spelImport: { type: \"f\", args: [\"spel\"] },\n  formatFunc: { type: \"f\", args: [\"formattedArgs\", \"isForDisplay\"] },\n  sqlFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n  mongoFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n  spelFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n};\n\nconst compileMetaFieldLike = {\n  ...compileMetaFieldSettings,\n  fieldSettings: compileMetaFieldSettings,\n};\n\nconst compileMetaField = {\n  ...compileMetaFieldSettings,\n  fieldSettings: compileMetaFieldSettings,\n  widgets: {\n    x: compileMetaWidgetForType\n  },\n  mainWidgetProps: compileMetaWidget\n};\n\nconst compileMetaSettings = {\n  locale: {\n    mui: { type: \"f\", args: [], invokeWith: [], ignore: \"jl\" },\n  },\n\n  caseValueField: compileMetaField,\n\n  canCompareFieldWithField: { type: \"f\", args: [\"leftField\", \"leftFieldConfig\", \"rightField\", \"rightFieldConfig\", \"op\"] },\n  formatReverse: { type: \"f\", args: [\"q\", \"op\", \"reversedOp\", \"operatorDefinition\", \"revOperatorDefinition\", \"isForDisplay\"] },\n  sqlFormatReverse: { type: \"f\", args: [\"q\"] },\n  spelFormatReverse: { type: \"f\", args: [\"q\"] },\n  formatField: { type: \"f\", args: [\"field\", \"parts\", \"label2\", \"fieldDefinition\", \"config\", \"isForDisplay\"] },\n  formatSpelField: { type: \"f\", args: [\"field\", \"parentField\", \"parts\", \"partsExt\", \"fieldDefinition\", \"config\"] },\n  formatAggr: { type: \"f\", args: [\"whereStr\", \"aggrField\", \"operator\", \"value\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"isForDisplay\", \"aggrFieldDef\"] },\n  \n  normalizeListValues: { type: \"f\", args: [\"listValues\", \"type\", \"fieldSettings\"] },\n\n  renderConfirm: { type: \"f\", args: [\"props\"] },\n  useConfirm: { type: \"f\", args: [] },\n\n  renderField: { type: \"rf\" },\n  renderOperator: { type: \"rf\" },\n  renderFunc: { type: \"rf\" },\n  renderConjs: { type: \"rf\" },\n  renderButton: { type: \"rf\" },\n  renderIcon: { type: \"rf\" },\n  renderButtonGroup: { type: \"rf\" },\n  renderValueSources: { type: \"rf\" },\n  renderFieldSources: { type: \"rf\" },\n  renderProvider: { type: \"rf\" },\n  renderSwitch: { type: \"rf\" },\n  renderSwitchPrefix: { type: \"r\" },\n\n  renderItem: { type: \"rf\" },\n  renderBeforeWidget: { type: \"rf\" },\n  renderAfterWidget: { type: \"rf\" },\n  renderBeforeActions: { type: \"rf\" },\n  renderAfterActions: { type: \"rf\" },\n  renderBeforeCaseValue: { type: \"rf\" },\n  renderAfterCaseValue: { type: \"rf\" },\n  renderRuleError: { type: \"rf\" },\n};\n\nconst compileMeta = {\n  fields: {\n    x: compileMetaField,\n  },\n  widgets: {\n    x: compileMetaWidget\n  },\n  conjunctions: {\n    x: compileMetaConjunction\n  },\n  operators: {\n    x: compileMetaOperator\n  },\n  types: {\n    x: {\n      widgets: {\n        x: compileMetaWidgetForType\n      }\n    }\n  },\n  funcs: {\n    x: {\n      ...compileMetaFieldLike,\n      ...compileMetaFunc,\n      args: {\n        x: {\n          ...compileMetaFieldLike,\n        }\n      }\n    }\n  },\n  settings: compileMetaSettings,\n};\n\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\n/////////////\n\nexport const compressConfig = (config, baseConfig) => {\n  if (config.__fieldNames) {\n    throw new Error(\"Don't apply `compressConfig()` to extended config\");\n  }\n  let zipConfig = pick(config, configKeys);\n  delete zipConfig.ctx;\n\n  const _clean = (target, base, path, meta) => {\n    if (isObject(target)) {\n      if (isDirtyJSX(target)) {\n        target = cleanJSX(target);\n      }\n      if (path[0] === \"funcs\" && !base) {\n        const funcKey = path[path.length - 1];\n        // todo: if there will be change in `BasicFuncs` when funcs can be nested, need to chnage code to find `base`\n        base = getFieldRawConfig({\n          funcs: meta.BasicFuncs\n        }, funcKey, \"funcs\", \"subfields\") || undefined;\n        if (base) {\n          target[\"$$key\"] = funcKey;\n        }\n      }\n      if (base !== undefined && isObject(base)) {\n        for (let k in base) {\n          if (Object.prototype.hasOwnProperty.call(base, k)) {\n            if (!Object.keys(target).includes(k) || target[k] === undefined && base[k] !== undefined) {\n              // deleted in target\n              target[k] = \"$$deleted\";\n            } else {\n              target[k] = _clean(target[k], base[k], [...path, k], meta);\n              if (target[k] === undefined) {\n                delete target[k];\n              }\n            }\n          }\n        }\n      }\n      for (let k in target) {\n        if (Object.prototype.hasOwnProperty.call(target, k)) {\n          if (!base || !Object.keys(base).includes(k)) {\n            // new in target\n            target[k] = _clean(target[k], base?.[k], [...path, k], meta);\n          }\n          if (target[k] === undefined) {\n            delete target[k];\n          }\n        }\n      }\n      if (Object.keys(target).length === 0) {\n        target = undefined;\n      }\n    } else if (Array.isArray(target)) {\n      // don't deep compare arrays, but allow clean JSX inside array\n      target.forEach((val, ind) => {\n        target[ind] = _clean(target[ind], undefined, [...path, ind], meta);\n      });\n    }\n\n    if (base !== undefined && shallowEqual(target, base, true)) {\n      return undefined;\n    }\n\n    if (typeof target === \"function\") {\n      throw new Error(`compressConfig: function at ${path.join(\".\")} should be converted to JsonLogic`);\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // ignore\n    } else if (rootKey === \"fields\") {\n      // just copy\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], {}, [rootKey]);\n    } else if (rootKey === \"funcs\") {\n      // leave only diff for every used func\n      zipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      for (let k in zipConfig[rootKey]) {\n        _clean(zipConfig[rootKey][k], null, [rootKey, k], {\n          BasicFuncs\n        });\n      }\n    } else {\n      // leave only diff\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], baseConfig[rootKey], [rootKey]);\n    }\n  }\n\n  return zipConfig;\n};\n\n\nexport const decompressConfig = (zipConfig, baseConfig, ctx) => {\n  if (!zipConfig.settings.useConfigCompress) {\n    throw new Error(\"Please enable `useConfigCompress` in config settings to use decompressConfig()\");\n  }\n  let unzipConfig = {};\n\n  const _mergeDeep = (target, mixin, path) => {\n    if (isObject(mixin)) {\n      if (!isObject(target)) {\n        target = {};\n      }\n      for (let k in mixin) {\n        if (Object.prototype.hasOwnProperty.call(mixin, k)) {\n          if (mixin[k] === \"$$deleted\") {\n            delete target[k];\n          } else {\n            target[k] = _mergeDeep(target[k], mixin[k], [...path, k]);\n          }\n        }\n      }\n    } else if (Array.isArray(mixin)) {\n      // don't merge arrays, just replace\n      target = clone(mixin);\n    } else {\n      target = mixin;\n    }\n\n    return target;\n  };\n\n  const _resolveAndMergeDeep = (target, path, meta) => {\n    // try to resolve by $$key and merge\n    let resolved = false;\n    if (isObject(target) && Object.prototype.hasOwnProperty.call(target, \"$$key\") && target[\"$$key\"]) {\n      const func = getFieldRawConfig({\n        funcs: meta.BasicFuncs\n      }, target[\"$$key\"], \"funcs\", \"subfields\");\n      if (func) {\n        // deep merge func <- zip\n        delete target[\"$$key\"];\n        target = _mergeDeep(clone(func), target, path);\n        resolved = true;\n      } else {\n        throw new Error(`decompressConfig: basic function not found by key ${target[\"$$key\"]} at ${path.join(\".\")}`);\n      }\n    }\n\n    if (!resolved) {\n      if (isObject(target)) {\n        // loop through object to find refs ($$key)\n        for (let k in target) {\n          if (Object.prototype.hasOwnProperty.call(target, k)) {\n            target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n          }\n        }\n      } else if (Array.isArray(target)) {\n        // also loop through array to find refs ($$key)\n        for (const k of target) {\n          target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n        }\n      }\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // simple deep merge\n      unzipConfig[rootKey] = merge({}, baseConfig.ctx || {}, ctx || {});\n    } else if (rootKey === \"funcs\") {\n      // use $$key to pick funcs from BasicFuncs\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      _resolveAndMergeDeep(unzipConfig[rootKey], [rootKey], {\n        BasicFuncs\n      });\n    } else if (rootKey === \"fields\") {\n      // just copy\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n    } else {\n      // deep merge base <- zip\n      unzipConfig[rootKey] = clone(baseConfig[rootKey] || {});\n      _mergeDeep(unzipConfig[rootKey], zipConfig[rootKey] || {}, [rootKey]);\n    }\n  }\n\n  return unzipConfig;\n};\n\n/////////////\n\nexport const compileConfig = (config) => {\n  if (config.__compliled) {\n    return config;\n  }\n\n  config = clone(config);\n\n  const opts = {\n    ctx: config.ctx,\n  };\n\n  const logs = [];\n  _compileConfigParts(config, config, opts, compileMeta, logs);\n  //console.log(logs.join(\"\\n\"));\n\n  Object.defineProperty(config, \"__compliled\", {\n    enumerable: false,\n    writable: false,\n    value: true\n  });\n\n  return config;\n};\n\nfunction _compileConfigParts(config, subconfig, opts, meta, logs, path = []) {\n  if (!subconfig) return;\n  const isRoot = !path.length;\n  for (const k in meta) {\n    const submeta = meta[k];\n    let newPath = k === \"x\" ? path : [...path, k];\n    // if (isRoot) {\n    //   //logs.push(`Cloned ${newPath.join(\".\")}`);\n    //   config[k] = clone(config[k]);\n    // }\n    if (submeta.type === \"r\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      if (submeta.isArr) {\n        for (const ind in val) {\n          const newVal = renderReactElement(val[ind], opts, [...newPath, ind]);\n          if (newVal !== val[ind]) {\n            logs.push(`Compiled ${newPath.join(\".\")}[${ind}]`);\n            val[ind] = newVal;\n          }\n        }\n      } else {\n        const newVal = renderReactElement(val, opts, newPath, undefined);\n        if (newVal !== val) {\n          logs.push(`Compiled R ${newPath.join(\".\")}`);\n          targetObj[k] = newVal;\n        }\n      }\n    } else if (submeta.type === \"rf\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      const newVal = compileJsonLogicReact(val, opts, newPath, submeta.ignore);\n      if (newVal !== val) {\n        logs.push(`Compiled JL-RF ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (submeta.type === \"f\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      let newVal = compileJsonLogic(val, opts, newPath, submeta.args, submeta.ignore);\n      if (submeta.invokeWith && newVal && typeof newVal === \"function\") {\n        newVal = newVal.call(null, ...submeta.invokeWith);\n      }\n      if (newVal !== val) {\n        logs.push(`Compiled JL-F ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (k === \"x\") {\n      for (const field in subconfig) {\n        newPath = [...path, field];\n        const def = subconfig[field];\n        _compileConfigParts(config, def, opts, submeta, logs, newPath);\n        if (def.subfields) {\n          // tip: need to pass `meta`, not `submeta`\n          _compileConfigParts(config, def.subfields, opts, meta, logs, newPath);\n        }\n      }\n    } else {\n      const def = subconfig[k];\n      _compileConfigParts(config, def, opts, submeta, logs, newPath);\n    }\n  }\n}\n\nfunction compileJsonLogicReact(jl, opts, path, ignore = undefined) {\n  if (isJsonLogic(jl)) {\n    return function(props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = {\n        props, ctx,\n      };\n      let re = applyJsonLogicWithPath(jl, data, path);\n      if (typeof re === \"string\") {\n        re = {\n          type: re,\n          props\n        };\n      }\n      \n      const ret = renderReactElement(re, {ctx}, path);\n      return ret;\n    };\n  } else if (typeof jl === \"string\") {\n    return function(props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, [props, ctx], path);\n      } else {\n        const re = {\n          type: jl,\n          props\n        };\n        const ret = renderReactElement(re, {ctx}, path);\n        return ret;\n      }\n    };\n  }\n  return jl;\n}\n\nfunction compileJsonLogic(jl, opts, path, argNames, ignore = undefined) {\n  if (isJsonLogic(jl) && ignore !== \"jl\") {\n    return function(...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = (argNames || []).reduce((acc, k, i) => ({...acc, [k]: args[i]}), {\n        args, ctx\n      });\n      const ret = applyJsonLogicWithPath(jl, data, path);\n      return ret;\n    }.bind(opts?.ctx);\n  } else if (typeof jl === \"string\" && ignore !== \"string\") {\n    return function(...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, args, path);\n      } else {\n        throw new Error(`${path.join(\".\")} :: Function ${jl} is not found in ctx`);\n      }\n    }.bind(opts?.ctx);\n  }\n  return jl;\n}\n\n\n\nfunction getReactComponentFromCtx(name, ctx) {\n  return ctx?.components?.[name] || ctx.W[name] || ctx.O[name];\n}\n\nfunction renderReactElement(jsx, opts, path, key = undefined) {\n  if (isJSX(jsx)) {\n    let { type, props } = jsx;\n    if (typeof type !== \"string\") {\n      throw new Error(`renderReactElement for ${path.join(\".\")}: type should be string`);\n    }\n    const Cmp = getReactComponentFromCtx(type, opts.ctx) || type.toLowerCase();\n    let children;\n    if (key !== undefined) {\n      props = { ...props, key };\n    }\n    if (props?.children) {\n      children = renderReactElement(props.children, opts, path);\n      props = { ...props, children };\n    }\n    const res = opts.ctx.RCE(Cmp, props);\n    return res;\n  } else if (jsx instanceof Array) {\n    return jsx.map((el, i) => renderReactElement(el, opts, path, \"\"+i));\n  }\n  return jsx;\n}\n","export const settings = {\n  formatField: (field, parts, label2, fieldDefinition, config, isForDisplay) => {\n    if (isForDisplay)\n      return label2;\n    else\n      return field;\n  },\n  caseValueField: {\n    type: \"case_value\",\n  },\n  fieldSources: [\"field\"],\n  keepInputOnChangeFieldSrc: true,\n  fieldItemKeysForSearch: [\"label\", \"path\", \"altLabel\", \"grouplabel\"],\n  listKeysForSearch: [\"title\", \"value\"],\n  valueSourcesInfo: {\n    value: {},\n  },\n  fieldSeparator: \".\",\n  fieldSeparatorDisplay: \".\",\n  canReorder: true,\n  canRegroup: true,\n  canDeleteLocked: false,\n  canLeaveEmptyGroup: true,\n  shouldCreateEmptyGroup: false,\n  canShortMongoQuery: true,\n  removeEmptyGroupsOnLoad: true,\n  removeEmptyRulesOnLoad: true,\n  removeIncompleteRulesOnLoad: false,\n  removeInvalidMultiSelectValuesOnLoad: true,\n  showErrorMessage: false,\n  setOpOnChangeField: [\"keep\", \"default\"], // 'default' (default if present), 'keep' (keep prev from last field), 'first', 'none'\n  groupOperators: [\"some\", \"all\", \"none\"],\n\n  defaultGroupConjunction: \"AND\",\n\n  // localization\n  locale: {\n    moment: \"en\",\n  },\n  valueLabel: \"Value\",\n  valuePlaceholder: \"Value\",\n  fieldLabel: \"Field\",\n  operatorLabel: \"Operator\",\n  funcLabel: \"Function\",\n  fieldPlaceholder: \"Select field\",\n  funcPlaceholder: \"Select function\",\n  operatorPlaceholder: \"Select operator\",\n  lockLabel: \"Lock\",\n  lockedLabel: \"Locked\",\n  deleteLabel: \"Delete\",\n  addGroupLabel: \"Add group\",\n  addCaseLabel: \"Add condition\",\n  addDefaultCaseLabel: \"Add default condition\",\n  defaultCaseLabel: \"Default:\",\n  addRuleLabel: \"Add rule\",\n  addSubRuleLabel: \"Add sub rule\",\n  delGroupLabel: \"Delete\",\n  notLabel: \"Not\",\n  fieldSourcesPopupTitle: \"Select source\",\n  valueSourcesPopupTitle: \"Select value source\",\n  removeRuleConfirmOptions: null,\n  removeGroupConfirmOptions: null,\n\n};\n","import pick from \"lodash/pick\";\nimport { extendConfig } from \"./configExtend\";\nimport { configKeys } from \"./configUtils\";\n\nlet memoId = 0;\nlet configId = 0;\nlet commonMemo;\nconst memos = {};\n\nexport const getCommonMemo = () => {\n  if (!commonMemo) {\n    commonMemo = createConfigMemo({\n      reactIndex: undefined,\n      maxSize: 3,\n      canCompile: undefined, // default is true\n    });\n  }\n  return commonMemo;\n};\n\nexport const findExtendedConfigInAllMemos = (config, needsToBeCompiled) => {\n  let foundExtConfig;\n  for (const k in memos) {\n    const found = memos[k].findExtendedConfig(config, needsToBeCompiled);\n    if (found) {\n      foundExtConfig = found;\n      break;\n    }\n  }\n  return foundExtConfig;\n};\n\nexport const createConfigMemo = (meta = {\n  reactIndex: undefined,\n  maxSize: 2, // current and prev\n  canCompile: true,\n}) => {\n  const configStore = new Map();\n  const maxSize = meta.maxSize || 2;\n  const currentMemoId = ++memoId;\n  let currentMemo;\n  let isActive = true;\n\n  const pickConfig = (props) => {\n    return pick(props, configKeys);\n  };\n\n  const extendAndStore = (config) => {\n    const extendedConfig = extendConfig(config, ++configId, meta.canCompile);\n    storeConfigPair(config, extendedConfig);\n    return extendedConfig;\n  };\n\n  const getSize = () => {\n    return configStore.size;\n  };\n\n  const storeConfigPair = (config, extendedConfig) => {\n    if ((configStore.size + 1) > maxSize) {\n      configStore.delete(configStore.keys().next().value);\n    }\n    configStore.set(config, extendedConfig);\n  };\n\n  const findBasic = (findConfig) => {\n    for (const basicConfig of configStore.keys()) {\n      const extConfig = configStore.get(basicConfig);\n      const found = configKeys.map(k => extConfig[k] === findConfig[k]).filter(v => !v).length === 0;\n      if (found) {\n        return basicConfig;\n      }\n    }\n    return findConfig;\n  };\n\n  const findExtended = (findConfig, needsToBeCompiled) => {\n    // strict find:\n    // return configStore.get(findConfig) || configStore.values().find(ec => ec === findConfig);\n\n    for (const savedConfig of configStore.keys()) {\n      const foundParts = configKeys.filter(k => savedConfig[k] === findConfig[k]);\n      const found = foundParts.length === configKeys.length && (needsToBeCompiled ? savedConfig.__compliled : true);\n      if (found) {\n        return configStore.get(savedConfig);\n      }\n    }\n\n    for (const extendedConfig of configStore.values()) {\n      const foundParts = configKeys.filter(k => extendedConfig[k] === findConfig[k]);\n      const found = foundParts.length === configKeys.length && (needsToBeCompiled ? extendedConfig.__compliled : true);\n      if (found) {\n        return extendedConfig;\n      }\n    }\n\n    return null;\n  };\n\n  const findOrExtend = (config) => {\n    return findExtended(config) || extendAndStore(config);\n  };\n\n  const clearConfigMemo = () => {\n    isActive = false;\n    configStore.clear();\n    delete memos[currentMemoId];\n    if (commonMemo === currentMemo) {\n      commonMemo = undefined;\n    }\n  };\n\n  currentMemo = {\n    getExtendedConfig: (props) => findOrExtend(pickConfig(props)),\n    findExtendedConfig: findExtended,\n    getBasicConfig: findBasic,\n    clearConfigMemo,\n    configId,\n    storeConfigPair,\n    getSize,\n    configStore,\n    memoId: currentMemoId,\n    meta,\n  };\n\n  if (meta.reactIndex === undefined) {\n    commonMemo = currentMemo;\n  }\n  memos[currentMemoId] = currentMemo;\n\n  return currentMemo;\n};\n","import uuid from \"./uuid\";\nimport mergeWith from \"lodash/mergeWith\";\nimport {settings as defaultSettings} from \"../config/default\";\nimport moment from \"moment\";\nimport {mergeArraysSmart, logger, deepFreeze, mergeCustomizerNoArrays, shallowCopy, omit} from \"./stuff\";\nimport clone from \"clone\";\n\nimport { compileConfig } from \"./configSerialize\";\nimport { getFieldRawConfig } from \"./configUtils\";\nimport { findExtendedConfigInAllMemos, getCommonMemo } from \"./configMemo\";\n\nexport const extendConfig = (config, configId, canCompile = true) => {\n  //operators, defaultOperator - merge\n  //widgetProps (including valueLabel, valuePlaceholder, hideOperator, operatorInlineLabel) - concrete by widget\n\n  canCompile = canCompile && config.settings.useConfigCompress;\n\n  // Already extended?\n  if (config.__configId) {\n    return config;\n  }\n\n  // Try to take from memo (cache)\n  const cachedExtConfig = findExtendedConfigInAllMemos(config, canCompile);\n  if (cachedExtConfig) {\n    return cachedExtConfig;\n  }\n\n  const origConfig = config;\n\n  // Clone (and compile if need)\n  if (canCompile) {\n    if (config.__compliled) {\n      // already compiled\n      config = clone(config);\n    } else {\n      // will be cloned and compiled\n      config = compileConfig(config);\n    }\n  } else {\n    config = clone(config);\n  }\n\n  config.settings = mergeWith({}, defaultSettings, config.settings, mergeCustomizerNoArrays);\n\n  config.__fieldsCntByType = {};\n  config.__funcsCntByType = {};\n  config.__fieldNames = {};\n\n  extendTypesConfig(config.types, config);\n  extendFieldsConfig(config.fields, config);\n  extendFuncsConfig(config.funcs, config);\n\n  const { caseValueField } = config.settings;\n  if (caseValueField) {\n    extendFieldConfig(caseValueField, config, [], false, true);\n  }\n\n  const momentLocale = config.settings.locale.moment;\n  if (momentLocale) {\n    moment.locale(momentLocale);\n  }\n\n  Object.defineProperty(config, \"__configId\", {\n    enumerable: false,\n    writable: false,\n    value: configId || uuid()\n  });\n\n  config.__cache = {};\n\n  deepFreeze(config);\n\n  // Save to memo (cache)\n  const memo = getCommonMemo();\n  memo.storeConfigPair(origConfig, config);\n\n  return config;\n};\n\nfunction extendTypesConfig(typesConfig, config) {\n  for (let type in typesConfig) {\n    let typeConfig = typesConfig[type];\n    extendTypeConfig(type, typeConfig, config);\n  }\n}\n\nfunction extendTypeConfig(type, typeConfig, config) {\n  let operators = null, defaultOperator = null;\n  typeConfig.mainWidget = typeConfig.mainWidget || Object.keys(typeConfig.widgets).filter(w => w != \"field\" && w != \"func\")[0];\n  const excludeOperators = typeConfig.excludeOperators || [];\n  for (let widget in typeConfig.widgets) {\n    const typeWidgetConfig = typeConfig.widgets[widget];\n    const defOp = typeWidgetConfig.defaultOperator;\n    if (typeWidgetConfig.operators) {\n      const typeWidgetOperators = typeWidgetConfig.operators.filter(op => !excludeOperators.includes(op));\n      operators = mergeArraysSmart(operators, typeWidgetOperators);\n    }\n    if (defOp && !excludeOperators.includes(defOp)) {\n      if (!defaultOperator || widget === typeConfig.mainWidget) {\n        defaultOperator = defOp;\n      }\n    }\n    if (widget == typeConfig.mainWidget) {\n      typeWidgetConfig.widgetProps = {\n        ...(typeConfig.mainWidgetProps || {}),\n        ...(typeWidgetConfig.widgetProps || {}),\n      };\n    }\n    typeConfig.widgets[widget] = typeWidgetConfig;\n  }\n  if (!typeConfig.valueSources)\n    typeConfig.valueSources = Object.keys(config.settings.valueSourcesInfo);\n  for (let valueSrc of typeConfig.valueSources) {\n    if (valueSrc != \"value\" && !typeConfig.widgets[valueSrc]) {\n      typeConfig.widgets[valueSrc] = {\n      };\n    }\n  }\n  if (!typeConfig.operators && operators)\n    typeConfig.operators = Array.from(new Set(operators)); //unique\n  if (!typeConfig.defaultOperator && defaultOperator)\n    typeConfig.defaultOperator = defaultOperator;\n}\n\nfunction extendFieldsConfig(subconfig, config, path = []) {\n  for (let field in subconfig) {\n    const fieldPathArr = [...path, field];\n    extendFieldConfig(subconfig[field], config, fieldPathArr);\n    if (subconfig[field].subfields) {\n      extendFieldsConfig(subconfig[field].subfields, config, fieldPathArr);\n    }\n  }\n}\n\nfunction extendFuncsConfig(subconfig, config, path = []) {\n  if (!subconfig) return;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  for (let funcKey in subconfig) {\n    const funcPathArr = [...path, funcKey];\n    const funcPathStr = funcPathArr.join(fieldSeparator);\n    const funcDef = subconfig[funcKey];\n    if (funcDef.returnType) {\n      funcDef.type = funcDef.returnType;\n      if (!config.__funcsCntByType[funcDef.returnType])\n        config.__funcsCntByType[funcDef.returnType] = 0;\n      config.__funcsCntByType[funcDef.returnType]++;\n    }\n    extendFieldConfig(funcDef, config, funcPathArr, false);\n\n    if (funcDef.args) {\n      for (let argKey in funcDef.args) {\n        extendFieldConfig(funcDef.args[argKey], config, [...funcPathArr, argKey], true);\n      }\n      // isOptional can be only in the end\n      const argKeys = Object.keys(funcDef.args);\n      let tmpIsOptional = true;\n      for (const argKey of argKeys.reverse()) {\n        const argDef = funcDef.args[argKey];\n        if (!tmpIsOptional && argDef.isOptional) {\n          logger.info(`Arg ${argKey} for func ${funcPathStr} can't be optional`);\n          delete argDef.isOptional;\n        }\n        if (!argDef.isOptional)\n          tmpIsOptional = false;\n      }\n    }\n\n    if (funcDef.subfields) {\n      extendFuncsConfig(funcDef.subfields, config, [...path, funcKey]);\n    }\n  }\n}\n\nfunction normalizeFieldSettings(fieldConfig, config, type) {\n  const keysToPutInFieldSettings = [\"listValues\", \"treeValues\", \"allowCustomValues\", \"validateValue\"];\n  for (const k of keysToPutInFieldSettings) {\n    if (fieldConfig[k]) {\n      if (!fieldConfig.fieldSettings)\n        fieldConfig.fieldSettings = {};\n      fieldConfig.fieldSettings[k] = fieldConfig[k];\n      delete fieldConfig[k];\n    }\n  }\n\n  // normalize listValues\n  if (fieldConfig.fieldSettings?.listValues) {\n    if (config.settings.normalizeListValues) {\n      fieldConfig.fieldSettings.listValues = config.settings.normalizeListValues.call(\n        config.ctx,\n        fieldConfig.fieldSettings.listValues, type, fieldConfig.fieldSettings\n      );\n    }\n  }\n  // same for treeValues\n  if (fieldConfig.fieldSettings?.treeValues) {\n    if (config.settings.normalizeListValues) {\n      fieldConfig.fieldSettings.treeValues = config.settings.normalizeListValues.call(\n        config.ctx,\n        fieldConfig.fieldSettings.treeValues, type, fieldConfig.fieldSettings\n      );\n    }\n  }\n}\n\nfunction extendFieldConfig(fieldConfig, config, path = [], isFuncArg = false, isCaseValue = false) {\n  let { showLabels, fieldSeparator } = config.settings;\n  fieldSeparator = fieldSeparator ?? \".\";\n  const argKey = path[path.length - 1];\n  const funcKey = isFuncArg ? path.slice(0, path.length-1).join(fieldSeparator) : path.join(fieldSeparator);\n  const isFunc = !!fieldConfig.returnType;\n  const type = fieldConfig.type || fieldConfig.returnType;\n  // const isGroup = type === \"!struct\" || type === \"!group\";\n  const typeConfig = config.types[type];\n  const excludeOperatorsForField = fieldConfig.excludeOperators || [];\n  let operators = (fieldConfig.operators || typeConfig?.operators || []).filter(op => !excludeOperatorsForField.includes(op));\n  let defaultOperator = fieldConfig.defaultOperator || typeConfig?.defaultOperator;\n  if (excludeOperatorsForField.includes(defaultOperator))\n    defaultOperator = undefined;\n  const hasOwnDefaultOperator = !!defaultOperator && defaultOperator == fieldConfig.defaultOperator;\n  if (hasOwnDefaultOperator) {\n    fieldConfig.ownDefaultOperator = fieldConfig.defaultOperator;\n  }\n\n  if (!typeConfig) {\n    // console.warn(`No type config for ${type}`);\n    fieldConfig.disabled = true;\n    return;\n  }\n\n  if (!isFuncArg && !isFunc && !isCaseValue) {\n    if (!config.__fieldsCntByType[type])\n      config.__fieldsCntByType[type] = 0;\n    config.__fieldsCntByType[type]++;\n  }\n\n  if (isFuncArg) {\n    fieldConfig._isFuncArg = true;\n    fieldConfig._argKey = argKey;\n    fieldConfig._funcKey = funcKey;\n  }\n  if (isFunc) {\n    fieldConfig._isFunc = true;\n    fieldConfig._funcKey = funcKey;\n  }\n  if (isCaseValue) {\n    fieldConfig._isCaseValue = true;\n  }\n\n  normalizeFieldSettings(fieldConfig, config, type);\n\n  // copy from type to field\n  const excludeKeysFromType = [\"widgets\", \"operators\", \"defaultOperator\"];\n  Object.keys(typeConfig).filter((k) => !excludeKeysFromType.includes(k)).map((k) => {\n    if (!fieldConfig[k]) {\n      fieldConfig[k] = shallowCopy(typeConfig[k]);\n    }\n  });\n\n  // copy/merge widgets\n  const excludeOperatorsForType = typeConfig.excludeOperators || [];\n  if (!fieldConfig.widgets)\n    fieldConfig.widgets = {};\n  for (let widget in typeConfig.widgets) {\n    let fieldWidgetConfig = { ...(fieldConfig.widgets[widget] || {}) };\n    const typeWidgetConfig = typeConfig.widgets[widget] || {};\n\n    // merge operators, defaultOperator\n    if (!isFuncArg) { // tip: operators are not used for func args\n      const defOp = fieldWidgetConfig.defaultOperator;\n      const excludeOperators = [...excludeOperatorsForField, ...excludeOperatorsForType];\n      const shouldIncludeOperators = fieldConfig.preferWidgets\n        && (widget === \"field\" || fieldConfig.preferWidgets.includes(widget))\n        || excludeOperators.length > 0;\n      if (fieldWidgetConfig.operators) {\n        const addOperators = fieldWidgetConfig.operators.filter(op => !excludeOperators.includes(op));\n        fieldWidgetConfig.operators = addOperators;\n        // operators = [...(operators || []), ...addOperators];\n        operators = mergeArraysSmart(operators, addOperators);\n      } else if (shouldIncludeOperators && typeWidgetConfig.operators) {\n        const addOperators = typeWidgetConfig.operators.filter(op => !excludeOperators.includes(op));\n        fieldWidgetConfig.operators = addOperators;\n        // operators = [...(operators || []), ...addOperators];\n        operators = mergeArraysSmart(operators, addOperators);\n      }\n      if (defOp && !excludeOperators.includes(defOp)) {\n        if (!defaultOperator || !hasOwnDefaultOperator && widget === fieldConfig.mainWidget) {\n          // tip: defOp can overwrite default operator from type config\n          defaultOperator = defOp;\n        }\n      }\n    }\n\n    // merge widgetProps\n    if (widget === fieldConfig.mainWidget) {\n      fieldWidgetConfig.widgetProps = {\n        ...(typeWidgetConfig.widgetProps || {}),\n        ...(fieldConfig.mainWidgetProps || {}),\n        ...(fieldWidgetConfig.widgetProps || {}),\n      };\n    } else {\n      fieldWidgetConfig.widgetProps = {\n        ...(typeWidgetConfig.widgetProps || {}),\n        ...(fieldWidgetConfig.widgetProps || {}),\n      };\n    }\n\n    // merge opProps\n    const opKeys = Array.from(new Set([\n      ...Object.keys(typeWidgetConfig.opProps || {}),\n      ...Object.keys(fieldWidgetConfig.opProps || {}),\n    ]));\n    if (opKeys.length) {\n      const opProps = {};\n      for (let op of opKeys) {\n        opProps[op] = {\n          ...(typeWidgetConfig.opProps?.[op] || {}),\n          ...(fieldWidgetConfig.opProps?.[op] || {}),\n        };\n      }\n      fieldWidgetConfig.opProps = opProps;\n    }\n\n    // label for func arg\n    let { valueLabel, valuePlaceholder } = fieldWidgetConfig;\n    if (isFuncArg) {\n      if (!valueLabel)\n        fieldWidgetConfig.valueLabel = fieldConfig.label || argKey;\n      if (!valuePlaceholder && !showLabels)\n        fieldWidgetConfig.valuePlaceholder = fieldConfig.label || argKey;\n    }\n\n    // copy other widget configs from type to field\n    fieldWidgetConfig = {\n      ...typeWidgetConfig,\n      ...fieldWidgetConfig,\n    };\n\n    fieldConfig.widgets[widget] = fieldWidgetConfig;\n  }\n\n  if (!isFuncArg) { // tip: operators are not used for func args\n    if (!fieldConfig.operators) {\n      fieldConfig.operators = Array.from(new Set(operators)); // unique\n    }\n    if (!fieldConfig.defaultOperator) {\n      fieldConfig.defaultOperator = defaultOperator;\n    }\n  }\n\n  if (!isFuncArg && !isFunc && !isCaseValue) {\n    const { fieldName, inGroup } = computeFieldName(config, path);\n    if (fieldName) {\n      fieldConfig.fieldName = fieldName;\n      if (!config.__fieldNames[fieldName])\n        config.__fieldNames[fieldName] = [];\n      config.__fieldNames[fieldName].push({fullPath: path, inGroup});\n    }\n  }\n}\n\nfunction computeFieldName(config, path) {\n  if (!path)\n    return {};\n  const fieldSeparator = config.settings.fieldSeparator;\n  const {computedPath, computed, inGroup} = [...path].reduce(({computedPath, computed, inGroup}, f, i, arr) => {\n    const fullPath = [...arr.slice(0, i), f];\n    const fConfig = getFieldRawConfig(config, fullPath);\n    if (fConfig?.type === \"!group\" && i < arr.length-1) {\n      // don't include group in final field name\n      inGroup = fullPath.join(fieldSeparator);\n      computedPath = [];\n    } else if (fConfig?.fieldName) {\n      // tip: fieldName overrides path !\n      computed = true;\n      computedPath = [fConfig.fieldName];\n    } else {\n      computedPath = [...computedPath, f];\n    }\n    return {computedPath, computed, inGroup};\n  }, {computedPath: [], computed: false, inGroup: undefined});\n  return computed ? {\n    fieldName: computedPath.join(fieldSeparator),\n    inGroup,\n  } : {};\n}\n","import pick from \"lodash/pick\";\nimport {widgetDefKeysToOmit, omit} from \"./stuff\";\nimport {getWidgetForFieldOp} from \"./ruleUtils\";\n\nexport * from \"./configSerialize\";\nexport * from \"./configExtend\";\nexport * from \"./configMemo\";\n\nexport const _widgetDefKeysToOmit = widgetDefKeysToOmit; // for ui\n\nexport function* iterateFuncs(config) {\n  yield* _iterateFields(config, config.funcs || {}, []);\n}\n\nexport function* iterateFields(config) {\n  yield* _iterateFields(config, config.fields || {}, []);\n}\n\nfunction* _iterateFields(config, subfields, path, subfieldsKey = \"subfields\") {\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  for (const fieldKey in subfields) {\n    const fieldConfig = subfields[fieldKey];\n    if (fieldConfig[subfieldsKey]) {\n      yield* _iterateFields(config, fieldConfig[subfieldsKey], [...path, fieldKey], subfieldsKey);\n    } else {\n      yield [\n        [...path, fieldKey].join(fieldSeparator),\n        fieldConfig\n      ];\n    }\n  }\n}\n\nexport const getFieldRawConfig = (config, field, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  if (field === \"!case_value\") {\n    return config?.settings?.caseValueField;\n  }\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const parts = getFieldParts(field, config);\n  const targetFields = config[fieldsKey];\n  if (!targetFields)\n    return null;\n\n  let fields = targetFields;\n  let fieldConfig = null;\n  let path = [];\n  for (let i = 0 ; i < parts.length ; i++) {\n    const part = parts[i];\n    path.push(part);\n    const pathKey = path.join(fieldSeparator);\n    fieldConfig = fields[pathKey];\n    if (i < parts.length-1) {\n      if (fieldConfig && fieldConfig[subfieldsKey]) {\n        fields = fieldConfig[subfieldsKey];\n        path = [];\n      } else {\n        fieldConfig = null;\n      }\n    }\n  }\n\n  return fieldConfig;\n};\n\n\n// if `field` is alias (fieldName), convert to original full path\nexport const normalizeField = (config, field, parentField = null) => {\n  // tip: if parentField is present, field is not full path\n  const fieldSeparator = config.settings.fieldSeparator;\n  const path = [\n    parentField,\n    ...field.split(fieldSeparator)\n  ].filter(f => f != null);\n  const findStr = field;\n  const normalizedPath = config.__fieldNames[findStr]?.find?.(({inGroup}) => {\n    if (inGroup)\n      return parentField?.startsWith(inGroup);\n    return true;\n  })?.fullPath;\n  return (normalizedPath || path).join(fieldSeparator);\n};\n\nexport const getFuncSignature = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null;\n  const {\n    returnType,\n    args,\n  } = funcConfig;\n  const argsSignature = Object.fromEntries(Object.entries(args || {}).map(([k, v]) => {\n    const argSignature = pick(v, [\n      \"type\",\n      \"valueSources\",\n      \"defaultValue\",\n      \"fieldSettings\",\n      // \"asyncListValues\", // not supported\n      \"isOptional\",\n      // to get proper caching key\n      \"_funcKey\",\n      \"_argKey\",\n      \"_isFuncArg\",\n    ]);\n    return [k, argSignature];\n  }));\n  const signature = {\n    returnType,\n    args: argsSignature,\n  };\n  return signature;\n};\n\nexport const getFuncConfig = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null; //throw new Error(\"Can't find func \" + func + \", please check your config\");\n  return funcConfig;\n};\n\nexport const getFuncArgConfig = (config, funcKey, argKey) => {\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return null; //throw new Error(`Can't find func ${funcKey}, please check your config`);\n  const argConfig = funcConfig.args && funcConfig.args[argKey] || null;\n  if (!argConfig)\n    return null; //throw new Error(`Can't find arg ${argKey} for func ${funcKey}, please check your config`);\n  return argConfig;\n};\n\nexport const isFieldDescendantOfField = (field, parentField, config = null) => {\n  if (!parentField) return false;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const path = getFieldPath(field, config);\n  const parentPath = getFieldPath(parentField, config);\n  return path.startsWith(parentPath + fieldSeparator);\n};\n\nexport const getFieldPath = (field, config = null) => {\n  if (typeof field === \"string\")\n    return field;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  return getFieldParts(field, config).join(fieldSeparator);\n};\n\nexport const getFieldParts = (field, config = null) => {\n  if (!field)\n    return [];\n  if (Array.isArray(field))\n    return field;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  if (field?.func) {\n    return Array.isArray(field.func) ? field.func : field.func.split(fieldSeparator);\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    return field?.get?.(\"func\").split(fieldSeparator);\n  }\n  return field?.split?.(fieldSeparator) || [];\n};\n\nexport const getFieldPathParts = (field, config, onlyKeys = false) => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  if (onlyKeys)\n    return parts;\n  else\n    return parts\n      .map((_curr, ind, arr) => arr.slice(0, ind+1))\n      .map((parts) => parts.join(fieldSeparator));\n};\n\nexport const getFieldId = (field) => {\n  if (typeof field === \"string\" || Array.isArray(field)) {\n    return `field:${getFieldPath(field)}`;\n  }\n  if (typeof field === \"object\" && field) {\n    if (field._funcKey && field._argKey) {\n      // it's func arg config\n      return `arg:${getFieldPath(field._funcKey)}__${field._argKey}`;\n    }\n    if (field._funcKey) {\n      // it's func config\n      return `func:${getFieldPath(field._funcKey)}`;\n    }\n    if (field.func && field.arg) {\n      // it's func arg\n      return `arg:${getFieldPath(field.func)}__${field.arg}`;\n    }\n    if (field.func) {\n      // it's field func\n      return `func:${getFieldPath(field.func)}`;\n    }\n    if (field.type) {\n      // it's already a config\n      return null;\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return `arg:${getFieldPath(field.get(\"func\"))}__${field.get(\"arg\")}`;\n    } else {\n      // it's field func\n      return `func:${getFieldPath(field.get(\"func\"))}`;\n    }\n  }\n  return null;\n};\n\nexport const _getFromConfigCache = (config, bucketKey, cacheKey) => {\n  return config.__cache?.[bucketKey]?.[cacheKey];\n};\n\nexport const _saveToConfigCache = (config, bucketKey, cacheKey, value) => {\n  if (!config.__cache || !cacheKey) {\n    return;\n  }\n  if (!config.__cache[bucketKey]) {\n    config.__cache[bucketKey] = {};\n  }\n  config.__cache[bucketKey][cacheKey] = value;\n};\n\nexport const getFieldSrc = (field) => {\n  if (!field)\n    return null;\n  if (typeof field === \"object\") {\n    if (!field.func && !!field.type) {\n      // it's already a config\n      return \"field\";\n    }\n    if (field.func) {\n      if (field.func && field.arg) {\n        // it's func arg\n        return null;\n      } else {\n        // it's field func\n        return \"func\";\n      }\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return null;\n    } else {\n      // it's field func\n      return \"func\";\n    }\n  }\n  return \"field\";\n};\n\nexport const getFieldConfig = (config, field) => {\n  if (!field)\n    return null;\n  if (typeof field == \"object\") {\n    if (!field.func && !!field.type) {\n      // it's already a config\n      return field;\n    }\n    if (field.func) {\n      if (field.func && field.arg) {\n        // it's func arg\n        return getFuncArgConfig(config, field.func, field.arg);\n      } else {\n        // it's field func\n        return getFuncConfig(config, field.func);\n      }\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return getFuncArgConfig(config, field.get(\"func\"), field.get(\"arg\"));\n    } else {\n      // it's field func\n      return getFuncConfig(config, field.get(\"func\"));\n    }\n  }\n\n  const fieldConfig = getFieldRawConfig(config, field);\n  if (!fieldConfig)\n    return null; //throw new Error(\"Can't find field \" + field + \", please check your config\");\n  return fieldConfig;\n};\n\nexport const getOperatorConfig = (config, operator, field = null) => {\n  if (!operator)\n    return null;\n  const opConfig = config.operators[operator];\n  if (field) {\n    const fieldCacheKey = getFieldId(field);\n    const cacheKey = fieldCacheKey ? `${fieldCacheKey}__${operator}` : null;\n    const cached = _getFromConfigCache(config, \"getOperatorConfig\", cacheKey);\n    if (cached)\n      return cached;\n    const fieldConfig = getFieldConfig(config, field);\n    const widget = getWidgetForFieldOp(config, field, operator, null);\n    const widgetConfig = config.widgets[widget] || {};\n    const fieldWidgetConfig = (fieldConfig && fieldConfig.widgets ? fieldConfig.widgets[widget] : {}) || {};\n    const widgetOpProps = widgetConfig.opProps?.[operator] || {};\n    const fieldWidgetOpProps = fieldWidgetConfig.opProps?.[operator] || {};\n    const mergedConfig = {\n      ...opConfig,\n      ...widgetOpProps,\n      ...fieldWidgetOpProps,\n    };\n    _saveToConfigCache(config, \"getOperatorConfig\", cacheKey, mergedConfig);\n    return mergedConfig;\n  } else {\n    return opConfig;\n  }\n};\n\nexport const getFieldWidgetConfig = (config, field, operator = null, widget = null, valueSrc = null, meta = {}) => {\n  if (!field)\n    return null;\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldCacheKey = getFieldId(field);\n  if (!widget) {\n    widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n  }\n  const cacheKey = fieldCacheKey ? `${fieldCacheKey}__${operator}__${widget}__${valueSrc}` : null;\n  const cached = _getFromConfigCache(config, \"getFieldWidgetConfig\", cacheKey);\n  if (cached)\n    return cached;\n  const widgetConfig = config.widgets[widget] || {};\n  const fieldWidgetConfig = fieldConfig?.widgets?.[widget] || {};\n  const fieldWidgetProps = fieldWidgetConfig.widgetProps || {};\n  const valueFieldSettings = (valueSrc === \"value\" || !valueSrc) ? fieldConfig?.fieldSettings : {}; // useful to take 'validateValue'\n  let mergedConfig = {\n    ...widgetConfig,\n    ...fieldWidgetConfig,\n    ...fieldWidgetProps,\n    ...valueFieldSettings,\n  };\n  _saveToConfigCache(config, \"getFieldWidgetConfig\", cacheKey, mergedConfig);\n  if (meta.forExport) {\n    mergedConfig = omit(mergedConfig, \"factory\");\n  }\n  return mergedConfig;\n};\n\nexport const getFirstField = (config, parentRuleGroupPath = null) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parentPathArr = getFieldParts(parentRuleGroupPath, config);\n  const parentField = parentRuleGroupPath ? getFieldRawConfig(config, parentRuleGroupPath) : config;\n\n  let firstField = parentField, key = null, keysPath = [];\n  do {\n    const subfields = firstField === config ? config.fields : firstField?.subfields;\n    if (!subfields || !Object.keys(subfields).length) {\n      firstField = key = null;\n      break;\n    }\n    key = Object.keys(subfields)[0];\n    keysPath.push(key);\n    firstField = subfields[key];\n  } while (firstField.type == \"!struct\" || firstField.type == \"!group\");\n  return (parentPathArr || []).concat(keysPath).join(fieldSeparator);\n};\n","import {getOpCardinality} from \"../utils/stuff\";\nimport {getFieldConfig, getOperatorConfig} from \"../utils/configUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {formatFieldName} from \"../utils/ruleUtils\";\nimport {Map} from \"immutable\";\n\n/*\n Build tree to http://querybuilder.js.org/ like format\n\n Example:\n {\n    \"condition\": \"AND\",\n    \"rules\": [\n        {\n            \"id\": \"price\",\n            \"field\": \"price\",\n            \"type\": \"double\",\n            \"input\": \"text\",\n            \"operator\": \"less\",\n            \"value\": \"10.25\"\n        },\n        {\n            \"condition\": \"OR\",\n            \"rules\": [\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"2\"\n                },\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"1\"\n                }\n            ]\n        }\n    ]\n }\n */\n\n\nexport const queryBuilderFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: []\n  };\n  const res = formatItem(item, config, meta);\n  if (!res)\n    return undefined;\n  return {\n    ...res, \n    ...meta\n  };\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") && children && children.size) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  const id = item.get(\"id\");\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const not = properties.get(\"not\");\n\n  const resultQuery = {\n    id,\n    rules: list.toList(),\n    condition: conjunction.toUpperCase(),\n    not,\n  };\n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const id = item.get(\"id\");\n\n  const operator = properties.get(\"operator\");\n  const options = properties.get(\"operatorOptions\");\n  let field = properties.get(\"field\");\n  let value = properties.get(\"value\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let valueType = properties.get(\"valueType\");\n  const hasUndefinedValues = value.filter(v => v === undefined).size > 0;\n\n  if (field == null || operator == null || hasUndefinedValues)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const fieldType = fieldDefinition.type || \"undefined\";\n  const cardinality = getOpCardinality(operatorDefinition);\n  const typeConfig = config.types[fieldDefinition.type] || {};\n  const fieldName = formatFieldName(field, config, meta);\n\n  if (value.size < cardinality)\n    return undefined;\n\n  if (meta.usedFields.indexOf(field) == -1)\n    meta.usedFields.push(field);\n  value = value.toArray();\n  valueSrc = valueSrc.toArray();\n  valueType = valueType?.toArray() || [];\n  let values = [];\n  for (let i = 0 ; i < value.length ; i++) {\n    const val = {\n      type: valueType[i],\n      value: value[i],\n    };\n    values.push(val);\n    if (valueSrc[i] == \"field\") {\n      const secondField = value[i];\n      if (meta.usedFields.indexOf(secondField) == -1)\n        meta.usedFields.push(secondField);\n    }\n  }\n  let operatorOptions = options ? options.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n      \n  let ruleQuery = {\n    id,\n    fieldName,\n    type: fieldType,\n    input: typeConfig.mainWidget,\n    operator,\n  };\n  if (operatorOptions)\n    ruleQuery.operatorOptions = operatorOptions;\n  ruleQuery.values = values;\n  return ruleQuery;\n};\n","import {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, extendConfig, getFieldParts\n} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp, formatFieldName, completeValue} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport pick from \"lodash/pick\";\n\n// http://jsonlogic.com/\n\n\nexport const jsonLogicFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: [],\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const logic = formatItem(item, extendedConfig, meta, true);\n\n  // build empty data\n  const {errors, usedFields} = meta;\n  const {fieldSeparator} = extendedConfig.settings;\n  let data = {};\n  for (let ff of usedFields) {\n    //const fieldSrc = typeof ff === \"string\" ? \"field\" : \"func\";\n    const parts = getFieldParts(ff, config);\n    const def = getFieldConfig(extendedConfig, ff) || {};\n    let tmp = data;\n    for (let i = 0 ; i < parts.length ; i++) {\n      const p = parts[i];\n      const pdef = getFieldConfig(extendedConfig, parts.slice(0, i + 1)) || {};\n      if (i != parts.length - 1) {\n        if (pdef.type == \"!group\" && pdef.mode != \"struct\") {\n          if (!tmp[p])\n            tmp[p] = [{}];\n          tmp = tmp[p][0];\n        } else {\n          if (!tmp[p])\n            tmp[p] = {};\n          tmp = tmp[p];\n        }\n      } else {\n        if (!tmp[p])\n          tmp[p] = null; // can use def.type for sample values\n      }\n    }\n  }\n\n  return {\n    errors,\n    logic,\n    data,\n  };\n};\n\n\nconst formatItem = (item, config, meta, isRoot, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const isLocked = properties.get(\"isLocked\");\n  const {lockedOp} = config.settings.jsonLogic;\n  let ret;\n  if (type === \"group\" || type === \"rule_group\") {\n    ret = formatGroup(item, config, meta, isRoot, parentField);\n  } else if (type === \"rule\") {\n    ret = formatRule(item, config, meta, parentField);\n  } else if (type == \"switch_group\") {\n    ret = formatSwitch(item, config, meta);\n  } else if (type == \"case_group\") {\n    ret = formatCase(item, config, meta, parentField);\n  }\n  if (isLocked && ret && lockedOp) {\n    ret = { [lockedOp] : ret };\n  }\n  return ret;\n};\n\nconst formatGroup = (item, config, meta, isRoot, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const conj = conjunctionDefinition.jsonLogicConj || conjunction.toLowerCase();\n  const not = properties.get(\"not\");\n\n  const isRuleGroup = (type === \"rule_group\" && !isRoot);\n  const groupField = isRuleGroup && mode != \"struct\" ? field : parentField;\n  const groupOperator = properties.get(\"operator\");\n  const groupOperatorDefinition = groupOperator && getOperatorConfig(config, groupOperator, field) || null;\n  const formattedValue = formatItemValue(config, properties, meta, groupOperator, parentField);\n  const isGroup0 = isRuleGroup && (!groupOperator || groupOperatorDefinition.cardinality == 0);\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, false, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n\n  if (isRuleGroup && mode != \"struct\" && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size)\n      return undefined;\n  }\n\n  let resultQuery = {};\n  if (list.size == 1 && !isRoot)\n    resultQuery = list.first();\n  else\n    resultQuery[conj] = list.toList().toJS();\n\n  // revert\n  if (not) {\n    resultQuery = { \"!\": resultQuery };\n  }\n\n  // rule_group (issue #246)\n  if (isRuleGroup && mode != \"struct\") {\n    const formattedField = formatField(meta, config, field, parentField);\n    if (isGroup0) {\n      // config.settings.groupOperators\n      const op = groupOperator || \"some\";\n      resultQuery = {\n        [op]: [\n          formattedField,\n          resultQuery\n        ]\n      };\n    } else {\n      // there is rule for count\n      const filter = !list.size\n        ? formattedField\n        : {\n          \"filter\": [\n            formattedField,\n            resultQuery\n          ]\n        };\n      const count = {\n        \"reduce\": [\n          filter,\n          { \"+\": [1, { var: \"accumulator\" }] },\n          0\n        ]\n      };\n      resultQuery = formatLogic(config, properties, count, formattedValue, groupOperator);\n    }\n  }\n\n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  operatorOptions = operatorOptions ? operatorOptions.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDefinition.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field) || {};\n\n  // check op\n  let isRev = false;\n  if (!operatorDefinition.jsonLogic && !revOperatorDefinition.jsonLogic) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!operatorDefinition.jsonLogic && revOperatorDefinition.jsonLogic) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n  }\n\n  const formattedValue = formatItemValue(config, properties, meta, operator, parentField);\n  if (formattedValue === undefined)\n    return undefined;\n\n  const formattedField\n    = fieldSrc === \"func\"\n      ? formatFunc(meta, config, field, parentField)\n      : formatField(meta, config, field, parentField);\n  if (formattedField === undefined)\n    return undefined;\n\n  return formatLogic(config, properties, formattedField, formattedValue, operator, operatorOptions, fieldDefinition, isRev);\n};\n\nconst formatSwitch = (item, config, meta) => {\n  const children = item.get(\"children1\");\n  if (!children)\n    return undefined;\n  const cases = children\n    .map((currentChild) => formatCase(currentChild, config, meta, null))\n    .filter((currentChild) => typeof currentChild !== \"undefined\")\n    .valueSeq().toArray();\n\n  let filteredCases = [];\n  for (let i = 0 ; i < cases.length ; i++) {\n    if (i !== (cases.length - 1) && !cases[i][0]) {\n      meta.errors.push(`No condition for case ${i}`);\n    } else {\n      filteredCases.push(cases[i]);\n      if (i === (cases.length - 1) && cases[i][0]) {\n        // no default - add null as default\n        filteredCases.push([undefined, null]);\n      }\n    }\n  }\n\n  if (!filteredCases.length)\n    return undefined;\n\n  if (filteredCases.length === 1) {\n    // only 1 case without condition\n    let [_cond, defVal] = filteredCases[0];\n    if (defVal == undefined)\n      defVal = null;\n    return defVal;\n  }\n\n  const ret = { if: [] };\n  let ifArgs = ret.if;\n  const [_, defVal] = filteredCases[filteredCases.length - 1];\n  for (let i = 0 ; i < filteredCases.length - 1 ; i++) {\n    const isLastIf = i === (filteredCases.length - 2);\n    let [cond, value] = filteredCases[i];\n    if (value == undefined)\n      value = null;\n    if (cond == undefined)\n      cond = true;\n    ifArgs.push(cond); // if\n    ifArgs.push(value); // then\n    if (isLastIf) {\n      ifArgs.push(defVal); // else\n    } else {\n      // elif..\n      ifArgs.push({ if: [] });\n      ifArgs = ifArgs[ifArgs.length - 1].if;\n    }\n  }\n  return ret;\n};\n\nconst formatCase = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  if (type != \"case_group\") {\n    meta.errors.push(`Unexpected child of type ${type} inside switch`);\n    return undefined;\n  }\n  const properties = item.get(\"properties\") || new Map();\n\n  const cond = formatGroup(item, config, meta, parentField);\n\n  const formattedItem = formatItemValue(\n    config, properties, meta, null, parentField, \"!case_value\"\n  );\n  return [cond, formattedItem];\n};\n\nconst formatItemValue = (config, properties, meta, operator, parentField, expectedValueType = null) => {\n  let field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  if (expectedValueType == \"!case_value\" || iValueType && iValueType.get(0) == \"case_value\") {\n    field = \"!case_value\";\n  }\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const cardinality = getOpCardinality(operatorDefinition);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (iValue == undefined)\n    return undefined;\n\n  let valueSrcs = [];\n  let valueTypes = [];\n  let oldUsedFields = meta.usedFields;\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n    const fv = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDefinition, operator, operatorDefinition, parentField, asyncListValues\n    );\n    if (fv !== undefined) {\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (fvalue.size < cardinality || hasUndefinedValues) {\n    meta.usedFields = oldUsedFields; // restore\n    return undefined;\n  }\n  return cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else if (typeof fieldWidgetDef?.jsonLogic === \"function\") {\n    const fn = fieldWidgetDef.jsonLogic;\n    const args = [\n      currentValue,\n      {\n        ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n        asyncListValues\n      },\n      //useful options: valueFormat for date/time\n      omit(fieldWidgetDef, widgetDefKeysToOmit),\n    ];\n    if (operator) {\n      args.push(operator);\n      args.push(operatorDef);\n    }\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    ret = currentValue;\n  }\n  return ret;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  if (!funcConfig?.jsonLogic) {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc, { forExport: true });\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, null, null, parentField\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc, { forExport: true });\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, null, null, parentField\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n\n  const formattedArgsArr = Object.values(formattedArgs);\n  let ret;\n  if (typeof funcConfig.jsonLogic === \"function\") {\n    const fn = funcConfig.jsonLogic;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const funcName = funcConfig.jsonLogic || funcLastKey;\n    const isMethod = !!funcConfig.jsonLogicIsMethod;\n    if (isMethod) {\n      const [obj, ...params] = formattedArgsArr;\n      if (params.length) {\n        ret = { \"method\": [ obj, funcName, params ] };\n      } else {\n        ret = { \"method\": [ obj, funcName ] };\n      }\n    } else {\n      ret = { [funcName]: formattedArgsArr };\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (meta, config, field, parentField = null) => {\n  const {fieldSeparator, jsonLogic} = config.settings;\n\n  let ret;\n  if (field) {\n    if (Array.isArray(field))\n      field = field.join(fieldSeparator);\n    const fieldDef = getFieldConfig(config, field) || {};\n    const fieldName = formatFieldName(field, config, meta, parentField);\n\n    let varName = fieldDef.jsonLogicVar || (fieldDef.type == \"!group\" ? jsonLogic.groupVarKey : \"var\");\n    ret = { [varName] : fieldName };\n    if (meta.usedFields.indexOf(field) == -1)\n      meta.usedFields.push(field);\n  }\n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, formattedField, formattedValue) => {\n  let formatteOp = operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  const isReverseArgs = operatorDefinition._jsonLogicIsRevArgs ?? false;\n  if (typeof operatorDefinition.jsonLogic == \"string\")\n    formatteOp = operatorDefinition.jsonLogic;\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  const eqOps = [\"==\", \"!=\"];\n  const fn = (field, op, val, opDef, opOpts) => {\n    if (cardinality == 0 && eqOps.includes(formatteOp))\n      return { [formatteOp]: [formattedField, null] };\n    else if (cardinality == 0)\n      return { [formatteOp]: formattedField };\n    else if (cardinality == 1 && isReverseArgs)\n      return { [formatteOp]: [formattedValue, formattedField] };\n    else if (cardinality == 1)\n      return { [formatteOp]: [formattedField, formattedValue] };\n    else if (cardinality == 2 && rangeOps.includes(formatteOp))\n      return { [formatteOp]: [formattedValue[0], formattedField, formattedValue[1]] };\n    else\n      return { [formatteOp]: [formattedField, ...formattedValue] };\n  };\n  return fn;\n};\n\nconst formatLogic = (config, properties, formattedField, formattedValue, operator, operatorOptions = null, fieldDefinition = null, isRev = false) => {\n  const field = properties.get(\"field\");\n  //const fieldSrc = properties.get(\"fieldSrc\");\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let fn = typeof operatorDefinition.jsonLogic == \"function\"\n    ? operatorDefinition.jsonLogic\n    : buildFnToFormatOp(operator, operatorDefinition, formattedField, formattedValue);\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    omit(operatorDefinition, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n  ];\n  let ruleQuery = fn.call(config.ctx, ...args);\n\n  if (isRev) {\n    ruleQuery = { \"!\": ruleQuery };\n  }\n\n  return ruleQuery;\n};\n","import {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, extendConfig,\n} from \"../utils/configUtils\";\nimport {getFieldPathLabels, getWidgetForFieldOp, formatFieldName, completeValue} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport pick from \"lodash/pick\";\nimport {List, Map} from \"immutable\";\n\n\n// helpers\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const mongodbFormat = (tree, config) => {\n  return _mongodbFormat(tree, config, false);\n};\n\nexport const _mongodbFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem([], tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to MongoDb:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(parents, item, config, meta, _not, _canWrapExpr, _formatFieldName, _value);\n  } else if (type === \"rule\") {\n    return formatRule(parents, item, config, meta, _not, _canWrapExpr, _formatFieldName, _value);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\") || new List();\n  const {canShortMongoQuery, fieldSeparator} = config.settings;\n  const sep = fieldSeparator;\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  const groupField = type === \"rule_group\" ? properties.get(\"field\") : null;\n  const groupOperator = type === \"rule_group\" ? properties.get(\"operator\") : null;\n  const groupOperatorCardinality = groupOperator ? config.operators[groupOperator]?.cardinality ?? 1 : undefined;\n  const groupFieldName = formatFieldName(groupField, config, meta, realParentPath);\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode; //properties.get(\"mode\");\n  const canHaveEmptyChildren = groupField && mode === \"array\" && groupOperatorCardinality >= 1;\n\n  const not = _not ? !(properties.get(\"not\")) : (properties.get(\"not\"));\n  const list = children\n    .map((currentChild) => formatItem(\n      [...parents, item], currentChild, config, meta, not, mode != \"array\", mode == \"array\" ? (f => `$$el${sep}${f}`) : undefined)\n    )\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  let conjunctionDefinition = config.conjunctions[conjunction];\n  const reversedConj = conjunctionDefinition.reversedConj;\n  if (not && reversedConj) {\n    conjunction = reversedConj;\n    conjunctionDefinition = config.conjunctions[conjunction];\n  }\n  if (!conjunctionDefinition)\n    return undefined;\n  const mongoConj = conjunctionDefinition.mongoConj;\n\n  let resultQuery;\n  if (list.size == 1) {\n    resultQuery = list.first();\n  } else if (list.size > 1) {\n    const rules = list.toList().toJS();\n    const canShort = canShortMongoQuery && (mongoConj == \"$and\");\n    if (canShort) {\n      resultQuery = rules.reduce((acc, rule) => {\n        if (!acc) return undefined;\n        for (let k in rule) {\n          if (k[0] == \"$\") {\n            acc = undefined;\n            break;\n          }\n          if (acc[k] == undefined) {\n            acc[k] = rule[k];\n          } else {\n            // https://github.com/ukrbublik/react-awesome-query-builder/issues/182\n            let prev = acc[k], next = rule[k];\n            if (!isObject(prev)) {\n              prev = {\"$eq\": prev};\n            }\n            if (!isObject(next)) {\n              next = {\"$eq\": next};\n            }\n            const prevOp = Object.keys(prev)[0], nextOp = Object.keys(next)[0];\n            if (prevOp == nextOp) {\n              acc = undefined;\n              break;\n            }\n            acc[k] = Object.assign({}, prev, next);\n          }\n        }\n        return acc;\n      }, {});\n    }\n    if (!resultQuery) // can't be shorten\n      resultQuery = { [mongoConj] : rules };\n  }\n\n  if (groupField) {\n    if (mode == \"array\") {\n      const totalQuery = {\n        \"$size\": {\n          \"$ifNull\": [\n            \"$\" + groupFieldName,\n            []\n          ]\n        }\n      };\n      const filterQuery = resultQuery ? {\n        \"$size\": {\n          \"$ifNull\": [\n            {\n              \"$filter\": {\n                input: \"$\" + groupFieldName,\n                as: \"el\",\n                cond: resultQuery\n              }\n            },\n            []\n          ]\n        }\n      } : totalQuery;\n      resultQuery = formatItem(\n        parents, item.set(\"type\", \"rule\"), config, meta, false, false, (_f => filterQuery), totalQuery\n      );\n      resultQuery = { \"$expr\": resultQuery };\n    } else {\n      resultQuery = { [groupFieldName]: {\"$elemMatch\": resultQuery} };\n    }\n  }\n  return resultQuery;\n};\n\n\nconst formatRule = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  const properties = item.get(\"properties\") || new Map();\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  const iValue = properties.get(\"value\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  if (field == null || operator == null || iValue === undefined)\n    return undefined;\n\n  const fieldDef = getFieldConfig(config, field) || {};\n  let operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDefinition.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = getOpCardinality(operatorDefinition);\n\n  let not = _not;\n  if (not && reversedOp) {\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n    not = false;\n  }\n\n  let formattedField;\n  let useExpr = false;\n  if (fieldSrc == \"func\") {\n    [formattedField, useExpr] = formatFunc(meta, config, field, realParentPath);\n  } else {\n    formattedField = formatFieldName(field, config, meta, realParentPath);\n    if (_formatFieldName) {\n      useExpr = true;\n      formattedField = _formatFieldName(formattedField);\n    }\n  }\n  if (formattedField == undefined)\n    return undefined;\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      const [fv, fvUseExpr] = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, realParentPath,  operator, operatorDefinition, asyncListValues\n      );\n      if (fv !== undefined) {\n        useExpr = useExpr || fvUseExpr;\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (fvalue.size < cardinality || hasUndefinedValues)\n      return undefined;\n    formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n  }\n  const wrapExpr = useExpr && _canWrapExpr;\n\n  //build rule\n  const fn = operatorDefinition.mongoFormatOp;\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  const args = [\n    formattedField,\n    operator,\n    _value !== undefined && formattedValue == null ? _value : formattedValue,\n    useExpr,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(operatorDefinition, opDefKeysToOmit),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ruleQuery = fn.call(config.ctx, ...args);\n  if (wrapExpr) {\n    ruleQuery = { \"$expr\": ruleQuery };\n  }\n  if (not) {\n    ruleQuery = { \"$not\": ruleQuery };\n  }\n  return ruleQuery;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, parentPath, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return [undefined, false];\n\n  let ret;\n  let useExpr = false;\n\n  if (valueSrc == \"field\") {\n    [ret, useExpr] = formatRightField(meta, config, currentValue, parentPath);\n  } else if (valueSrc == \"func\") {\n    [ret, useExpr] = formatFunc(meta, config, currentValue, parentPath);\n  } else {\n    if (typeof fieldWidgetDef?.mongoFormatValue === \"function\") {\n      const fn = fieldWidgetDef.mongoFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = currentValue;\n    }\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatRightField = (meta, config, rightField, parentPath) => {\n  const {fieldSeparator} = config.settings;\n  let ret;\n  const useExpr = true;\n\n  if (rightField) {\n    const rightFieldDefinition = getFieldConfig(config, rightField) || {};\n    const fieldParts = getFieldParts(rightField, config);\n    const fieldPartsLabels = getFieldPathLabels(rightField, config);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n    const formatFieldFn = config.settings.formatField;\n    const rightFieldName = formatFieldName(rightField, config, meta, parentPath);\n    const formattedField = formatFieldFn(rightFieldName, fieldParts, fieldFullLabel, rightFieldDefinition, config, false);\n    ret = \"$\" + formattedField;\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentPath) => {\n  const useExpr = true;\n  let ret;\n\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return [undefined, false];\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = funcConfig.mongoFunc || funcLastKey;\n  const mongoArgsAsObject = funcConfig.mongoArgsAsObject;\n\n  let formattedArgs = {};\n  let argsCnt = 0;\n  let lastArg = undefined;\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    argsCnt++;\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc, { forExport: true });\n    const [formattedArgVal, _argUseExpr] = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return [undefined, false];\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc, { forExport: true });\n      let _;\n      ([formattedDefaultVal, _] = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n      ));\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return [undefined, false];\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n      lastArg = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return [undefined, false]; // incomplete\n  }\n\n  if (typeof funcConfig.mongoFormatFunc === \"function\") {\n    const fn = funcConfig.mongoFormatFunc;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.mongoFormatFunc === null) {\n    meta.errors.push(`Functon ${funcName} is not supported`);\n    return [undefined, false];\n  } else {\n    if (mongoArgsAsObject)\n      ret = { [funcName]: formattedArgs };\n    else if (argsCnt == 1 && lastArg !== undefined)\n      ret = { [funcName]: lastArg };\n    else\n      ret = { [funcName]: Object.values(formattedArgs) };\n  }\n\n  return [ret, useExpr];\n};\n\n\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, extendConfig,\n} from \"../utils/configUtils\";\nimport {\n  getFieldPathLabels, getWidgetForFieldOp, formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit, omit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport {SqlString} from \"../utils/export\";\n\nexport const sqlFormat = (tree, config) => {\n  return _sqlFormat(tree, config, false);\n};\n\nexport const _sqlFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SQL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  const groupField = isRuleGroup ? properties.get(\"field\") : null;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode;\n  if (mode == \"array\") {\n    meta.errors.push(`Aggregation is not supported for ${groupField}`);\n  }\n\n  const not = properties.get(\"not\");\n  const canHaveEmptyChildren = false; //isRuleGroup && mode == \"array\";\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  return conjunctionDefinition.sqlFormatConj(list, conjunction, not);\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const sqlOp = operatorDefinition.sqlOp || operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, value, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp} ${value}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values?.first?.();\n      const valTo = values?.get?.(1);\n      return `${field} ${sqlOp} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = getOpCardinality(opDef);\n\n  // check op\n  let isRev = false;\n  const canFormatOp = opDef.sqlOp || opDef.sqlFormatOp;\n  const canFormatRevOp = revOpDef.sqlOp || revOpDef.sqlFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc, { forExport: true });\n      let fv = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDefinition, fieldDefinition, operator, opDef, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (hasUndefinedValues || fvalue.size < cardinality)\n      return undefined;\n    formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n  }\n\n  //find fn to format expr\n  const fn = opDef.sqlFormatOp || buildFnToFormatOp(operator, opDef);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n      \n  //format field\n  const formattedField = fieldSrc == \"func\"\n    ? formatFunc(meta, config, field)\n    : formatField(meta, config, field);\n  if (formattedField == undefined)\n    return undefined;\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n  ];\n\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n  if (isRev) {\n    ret = config.settings.sqlFormatReverse(ret);\n  }\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrcs.join(\", \")}`);\n    return undefined;\n  }\n  return ret;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue);\n  } else {\n    if (typeof fieldWidgetDef?.sqlFormatValue === \"function\") {\n      const fn = fieldWidgetDef.sqlFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      if (Array.isArray(currentValue)) {\n        ret = currentValue.map(v => SqlString.escape(v));\n      } else {\n        ret = SqlString.escape(currentValue);\n      }\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsLabels = getFieldPathLabels(field, config);\n  const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n  const formatFieldFn = config.settings.formatField;\n  const fieldName = formatFieldName(field, config, meta, null, {useTableName: true});\n  const formattedField = formatFieldFn(fieldName, fieldParts, fieldFullLabel, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = funcConfig.sqlFunc || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n\n  let ret;\n  if (typeof funcConfig.sqlFormatFunc === \"function\") {\n    const fn = funcConfig.sqlFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(formattedArgs)\n      .map(([k, v]) => v)\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport { extendConfig } from \"../utils/configUtils\";\n\n\n/**\n * Converts a string representation of top_left and bottom_right cords to\n * a ES geo_point required for query\n *\n * @param {string} geoPointString - comma separated string of lat/lon coods\n * @returns {{top_left: {lon: number, lat: number}, bottom_right: {lon: number, lat: number}}} - ES geoPoint formatted object\n * @private\n */\nfunction buildEsGeoPoint(geoPointString) {\n  if (geoPointString == null) {\n    return null;\n  }\n\n  const coordsNumberArray = geoPointString.split(\",\").map(Number);\n  return {\n    top_left: {\n      lat: coordsNumberArray[0],\n      lon: coordsNumberArray[1]\n    },\n    bottom_right: {\n      lat: coordsNumberArray[2],\n      lon: coordsNumberArray[3]\n    }\n  };\n}\n\n/**\n * Converts a dateTime string from the query builder to a ES range formatted object\n *\n * @param {string} dateTime - dateTime formatted string\n * @param {string} operator - query builder operator type, see constants.js and query builder docs\n * @returns {{lt: string}|{lte: string}|{gte: string}|{gte: string, lte: string}|undefined} - ES range query parameter\n *\n * @private\n */\nfunction buildEsRangeParameters(value, operator) {\n  // -- if value is greater than 1 then we assume this is a between operator : BUG this is wrong, a selectable list can have multiple values\n  if (value.length > 1) {\n    return {\n      gte: \"\".concat(value[0]),\n      lte: \"\".concat(value[1])\n    };\n  } // -- if value is only one we assume this is a date time query for a specific day\n\n  const dateTime = value[0]; //TODO: Rethink about this part, what if someone adds a new type of opperator\n\n  //todo: move this logic into config\n  switch (operator) {\n  case \"on_date\": //todo: not used\n  case \"not_on_date\":\n  case \"equal\":\n  case \"select_equals\":\n  case \"not_equal\":\n    return {\n      gte: \"\".concat(dateTime, \"||/d\"),\n      lte: \"\".concat(dateTime, \"||+1d\")\n    };\n\n  case \"less_or_equal\":\n    return {\n      lte: \"\".concat(dateTime)\n    };\n\n  case \"greater_or_equal\":\n    return {\n      gte: \"\".concat(dateTime)\n    };\n\n  case \"less\":\n    return {\n      lt: \"\".concat(dateTime)\n    };\n\n  case \"greater\":\n    return {\n      gt: \"\".concat(dateTime)\n    };\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Builds the DSL parameters for a Wildcard query\n *\n * @param {string} value - The match value\n * @returns {{value: string}} - The value = value parameter surrounded with * on each end\n * @private\n */\nfunction buildEsWildcardParameters(value) {\n  return {\n    value: \"*\" + value + \"*\"\n  };\n}\n\n/**\n * Takes the match type string from awesome query builder like 'greater_or_equal' and\n * returns the ES occurrence required for bool queries\n *\n * @param {string} combinator - query group type or rule condition\n * @param {bool} not\n * @returns {string} - ES occurrence type. See constants.js\n * @private\n */\nfunction determineOccurrence(combinator, not) {\n  //todo: move into config, like mongoConj\n  switch (combinator) {\n  case \"AND\":\n    return not ? \"must_not\" : \"must\";\n    // -- AND\n\n  case \"OR\":\n    return not ? \"should_not\" : \"should\";\n    // -- OR\n\n  case \"NOT\":\n    return not ? \"must\" : \"must_not\";\n    // -- NOT AND\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Determines what field to query off of given the operator type\n *\n * @param {string} fieldDataType - The type of data\n * @param {string} fullFieldName - A '.' separated string containing the property lineage (including self)\n * @param {string} queryType - The query type\n * @returns {string|*} - will be either the fullFieldName or fullFieldName.keyword\n * @private\n */\n//todo: not used\n// function determineQueryField(fieldDataType, fullFieldName, queryType) {\n//   if (fieldDataType === \"boolean\") {\n//     return fullFieldName;\n//   }\n\n//   switch (queryType) {\n//   case \"term\":\n//   case \"wildcard\":\n//     return \"\".concat(fullFieldName, \".keyword\");\n\n//   case \"geo_bounding_box\":\n//   case \"range\":\n//   case \"match\":\n//     return fullFieldName;\n\n//   default:\n//     console.error(\"Can't determine query field for query type \".concat(queryType));\n//     return null;\n//   }\n// }\n\nfunction buildRegexpParameters(value) {\n  return {\n    value: value\n  };\n}\n\nfunction determineField(fieldName, config) {\n  //todo: ElasticSearchTextField - not used\n  //return config.fields[fieldName].ElasticSearchTextField || fieldName;\n  return fieldName;\n}\n\nfunction buildParameters(queryType, value, operator, fieldName, config, syntax) {\n  const textField = determineField(fieldName, config);\n  switch (queryType) {\n  case \"filter\":\n    //todo: elasticSearchScript - not used\n    return {\n      script: config.operators[operator].elasticSearchScript(fieldName, value)\n    };\n\n  case \"exists\":\n    return { field: fieldName };\n\n  case \"match\":\n    return { [textField]: value[0] };\n\n  case \"term\":\n    return syntax === ES_7_SYNTAX\n      ? { [fieldName]: {\n        value: value[0]\n      }} : { [fieldName]: value[0] };\n\n  //todo: not used\n  // need to add geo type into RAQB or remove this code\n  case \"geo_bounding_box\":\n    return { [fieldName]: buildEsGeoPoint(value[0]) };\n\n  case \"range\":\n    return { [fieldName]: buildEsRangeParameters(value, operator) };\n\n  case \"wildcard\":\n    return { [fieldName]: buildEsWildcardParameters(value[0]) };\n\n  case \"regexp\":\n    return { [fieldName]: buildRegexpParameters(value[0]) };\n\n  default:\n    return undefined;\n  }\n}\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {string} fieldName - The name of the field you are building a rule for\n * @param {string} fieldDataType - The type of data this field holds\n * @param {string} value - The value of this rule\n * @param {string} operator - The condition on how the value is matched\n * @param {string} syntax - The version of ElasticSearch syntax to generate\n * @returns {object} - The ES rule\n * @private\n */\nfunction buildEsRule(fieldName, value, operator, config, valueSrc, syntax) {\n  if (!fieldName || !operator || value == undefined)\n    return undefined; // rule is not fully entered\n  let op = operator;\n  let opConfig = config.operators[op];\n  if (!opConfig)\n    return undefined; // unknown operator\n  let { elasticSearchQueryType } = opConfig;\n\n  // not\n  let not = false;\n  if (!elasticSearchQueryType && opConfig.reversedOp) {\n    not = true;\n    op = opConfig.reversedOp;\n    opConfig = config.operators[op];\n    ({ elasticSearchQueryType } = opConfig);\n  }\n  \n  // handle if value 0 has multiple values like a select in a array\n  const widget = getWidgetForFieldOp(config, fieldName, op, valueSrc);\n  const widgetConfig = config.widgets[widget];\n  if (!widgetConfig)\n    return undefined; // unknown widget\n  const { elasticSearchFormatValue } = widgetConfig;\n\n  /** In most cases the queryType will be static however in some casese (like between) the query type will change\n   * based on the data type. i.e. a between time will be different than between number, date, letters etc... */\n  let queryType;\n  if (typeof elasticSearchQueryType === \"function\") {\n    queryType = elasticSearchQueryType(widget);\n  } else {\n    queryType = elasticSearchQueryType;\n  }\n\n  if (!queryType) {\n    // Not supported\n    return undefined;\n  }\n\n  /** If a widget has a rule on how to format that data then use that otherwise use default way of determineing search parameters\n   * */\n  let parameters;\n  if (typeof elasticSearchFormatValue === \"function\") {\n    parameters = elasticSearchFormatValue(queryType, value, op, fieldName, config);\n  } else {\n    parameters = buildParameters(queryType, value, op, fieldName, config, syntax);\n  }\n\n  if (not) {\n    return {\n      bool: {\n        must_not: {\n          [queryType]: {...parameters}\n        }\n      }\n    };\n  } else {\n    return {\n      [queryType]: {...parameters}\n    };\n  }\n}\n\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {object} children - The contents of the group\n * @param {string} conjunction - The way the contents of the group are joined together i.e. AND OR\n * @param {bool} not\n * @param {Function} recursiveFxn - The recursive fxn to build the contents of the groups children\n * @private\n * @returns {object} - The ES group\n */\nfunction buildEsGroup(children, conjunction, not, recursiveFxn, config, syntax) {\n  if (!children || !children.size)\n    return undefined;\n  const childrenArray = children.valueSeq().toArray();\n  const occurrence = determineOccurrence(conjunction, not);\n  const result = childrenArray.map((c) => recursiveFxn(c, config, syntax)).filter(v => v !== undefined);\n  if (!result.length)\n    return undefined;\n  const resultFlat = result.flat(Infinity);\n  return {\n    bool: {\n      [occurrence]: resultFlat\n    }\n  };\n}\n\nexport const ES_7_SYNTAX = \"ES_7_SYNTAX\";\nexport const ES_6_SYNTAX = \"ES_6_SYNTAX\";\n\nexport function elasticSearchFormat(tree, config, syntax = ES_6_SYNTAX) {\n  const extendedConfig = extendConfig(config, undefined, false);\n  // -- format the es dsl here\n  if (!tree) return undefined;\n  const type = tree.get(\"type\");\n  const properties = tree.get(\"properties\") || new Map();\n\n  if (type === \"rule\" && properties.get(\"field\")) {\n    // -- field is null when a new blank rule is added\n    const operator = properties.get(\"operator\");\n    const field = properties.get(\"field\");\n    const fieldSrc = properties.get(\"fieldSrc\");\n    const value = properties.get(\"value\")?.toJS();\n    const _valueType = properties.get(\"valueType\")?.get(0);\n    const valueSrc = properties.get(\"valueSrc\")?.get(0);\n\n    if (valueSrc === \"func\" || fieldSrc == \"func\") {\n      // -- elastic search doesn't support functions (that is post processing)\n      return;\n    }\n\n    if (value && Array.isArray(value[0])) {\n      //TODO : Handle case where the value has multiple values such as in the case of a list\n      return value[0].map((val) =>\n        buildEsRule(field, [val], operator, extendedConfig, valueSrc, syntax)\n      );\n    } else {\n      return buildEsRule(field, value, operator, extendedConfig, valueSrc, syntax);\n    }\n  }\n\n  if (type === \"group\" || type === \"rule_group\") {\n    const not = properties.get(\"not\");\n    let conjunction = properties.get(\"conjunction\");\n    if (!conjunction)\n      conjunction = defaultConjunction(extendedConfig);\n    const children = tree.get(\"children1\");\n    return buildEsGroup(children, conjunction, not, elasticSearchFormat, extendedConfig, syntax);\n  }\n}\n","import {sleep} from \"./stuff\";\nimport {listValuesToArray, getListValue, makeCustomListValue} from \"./listValues\";\n\n// simple polyfill for Next\nconst findLastIndex = (arr, fn) => {\n  if (arr.findLastIndex) {\n    return arr.findLastIndex(fn);\n  } else {\n    const ind = [...arr].reverse().findIndex(fn);\n    return ind == -1 ? -1 : (arr.length-1 - ind);\n  }\n};\n\nexport const simulateAsyncFetch = (all, cPageSize = 0, delay = 1000) => async (search, offset, meta) => {\n  const pageSize = meta?.pageSize != undefined ? meta.pageSize : cPageSize;\n  const filtered = listValuesToArray(all)\n    .filter(({title, value}) => search == null ? true : (\n      title.toUpperCase().indexOf(search.toUpperCase()) != -1\n      || `${value}`.toUpperCase().indexOf(search.toUpperCase()) != -1\n    ));\n  const pages = pageSize ? Math.ceil(filtered.length / pageSize) : 0;\n  const currentOffset = offset || 0;\n  const currentPage = pageSize ? Math.ceil(currentOffset / pageSize) : null;\n  const values = pageSize ? filtered.slice(currentOffset, currentOffset + pageSize) : filtered;\n  const newOffset = pageSize ? currentOffset + values.length : null;\n  const hasMore = pageSize ? (newOffset < filtered.length) : false;\n  if (delay) {\n    // console.debug(\"simulateAsyncFetch\", {\n    //   search, offset, values, hasMore, filtered\n    // });\n    await sleep(delay);\n  }\n  return {\n    values,\n    hasMore\n  };\n};\n\nexport const mergeListValues = (values, newValues, toStart = false, hideNewValues = false) => {\n  if (!newValues)\n    return values;\n  const old = values || [];\n  const newFiltered = newValues\n    .filter(v => old.find(av => \"\"+av.value == \"\"+v.value) == undefined)\n    .map(v => (hideNewValues ? {...v, isHidden: true} : v));\n  const merged = toStart ? [...newFiltered, ...old] : [...old, ...newFiltered];\n  return merged;\n};\n\nexport const optionToListValue = (val, listValues, allowCustomValues) => {\n  const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n  const item = getListValue(v, listValues);\n  const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n  const listValue = item || customItem;\n  const lvs = listValue ? [listValue] : undefined; //not allow []\n  return [v, lvs];\n};\n\nexport const optionsToListValues = (vals, listValues, allowCustomValues) => {\n  const newSelectedListValues = vals.map((val, _i) => {\n    const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n    const item = getListValue(v, listValues);\n    const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n    const listValue = item || customItem;\n    return listValue;\n  }).filter(o => o != undefined);\n  let newSelectedValues = newSelectedListValues\n    .map(o => (o?.value ?? o));\n  if (!newSelectedValues.length)\n    newSelectedValues = undefined; //not allow []\n  return [newSelectedValues, newSelectedListValues];\n};\n\nexport const listValueToOption = (lv) => {\n  if (lv == null) return null;\n  const {\n    title, value, disabled, groupTitle, grouplabel, renderTitle, children, label, isCustom, isHidden,\n    ...rest\n  } = lv;\n  let option = {\n    value,\n    title: title || label || children, // fix issue #930 for AntD\n  };\n  if (disabled)\n    option.disabled = disabled;\n  if (isCustom)\n    option.isCustom = isCustom;\n  if (isHidden)\n    option.isHidden = isHidden;\n  // group\n  if (groupTitle || grouplabel)\n    option.groupTitle = groupTitle || grouplabel;\n  // used only for MUI field autocomplete (if matchesType, render as bold)\n  if (renderTitle)\n    option.renderTitle = renderTitle;\n  option = {\n    ...option,\n    ...rest,\n  };\n  return option;\n};\n\nexport const fixListValuesGroupOrder = (listValues) => {\n  let newValues = [];\n  let groupTitles = [];\n  for (let lv of listValues) {\n    const i = findLastIndex(newValues, lv1 => {\n      return (lv1.groupTitle ?? \"\") == (lv.groupTitle ?? \"\");\n    });\n    if (lv.groupTitle != undefined && !groupTitles.includes(lv.groupTitle)) {\n      groupTitles.push(lv.groupTitle);\n      if (groupTitles.length === 1) {\n        // fix empty groupTitles\n        newValues = newValues.map(nv => ({...nv, groupTitle: \"\"}));\n      }\n    }\n    if (lv.groupTitle == undefined && groupTitles.length) {\n      // fix empty groupTitle\n      lv = {...lv, groupTitle: \"\"};\n    }\n    if (i != -1) {\n      newValues.splice(i+1, 0, lv);\n    } else {\n      newValues.push(lv);\n    }\n  }\n  return newValues;\n};\n\n\nexport { getListValue };\n","//import { customJsonLogicOperations } from \"../utils/jsonLogic\";\n\n// Tip: search for `customJsonLogicOperations` in codebase to see custom JL funcs we use in `jsonLogicCustomOps`\n\nconst NOW = {\n  label: \"Now\",\n  returnType: \"datetime\",\n  jsonLogic: \"now\",\n  jsonLogicCustomOps: {\n    now: {},\n  },\n  //spelFunc: \"new java.util.Date()\",\n  spelFunc: \"T(java.time.LocalDateTime).now()\",\n  sqlFormatFunc: () => \"NOW()\",\n  mongoFormatFunc: () => new Date(),\n  formatFunc: () => \"NOW\",\n};\n\nconst RELATIVE_DATETIME = {\n  label: \"Relative\",\n  returnType: \"datetime\",\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\"\", \"\", \"\"],\n  spelFormatFunc: ({date, op, val, dim}) => {\n    const dimPlural = dim.charAt(0).toUpperCase() + dim.slice(1) + \"s\";\n    const method = op + dimPlural;\n    return `${date}.${method}(${val})`;\n  },\n  spelImport: (spel) => {\n    let date, op, val, dim;\n    const matchRes = spel.methodName?.match(/^(minus|plus)(\\w+)s$/);\n    if (matchRes) {\n      dim = matchRes[2].toLowerCase();\n      op = matchRes[1];\n      if ([\"minus\", \"plus\"].includes(op)) {\n        if ([\"day\", \"week\", \"month\", \"year\"].includes(dim)) {\n          op = {type: \"string\", val: op};\n          dim = {type: \"string\", val: dim};\n          val = spel.args[0];\n          date = spel.obj;\n          return {date, op, val, dim};\n        }\n      }\n    }\n  },\n  jsonLogic: ({date, op, val, dim}) => ({\n    \"date_add\": [\n      date,\n      val * (op == \"minus\" ? -1 : +1),\n      dim\n    ]\n  }),\n  jsonLogicImport: (v) => {\n    const date = v[\"date_add\"][0];\n    const val = Math.abs(v[\"date_add\"][1]);\n    const op = v[\"date_add\"][1] >= 0 ? \"plus\" : \"minus\";\n    const dim = v[\"date_add\"][2];\n    return [date, op, val, dim];\n  },\n  jsonLogicCustomOps: {\n    date_add: {},\n  },\n  // MySQL\n  //todo: other SQL dialects?\n  sqlFormatFunc: ({date, op, val, dim}) => `DATE_ADD(${date}, INTERVAL ${parseInt(val) * (op == \"minus\" ? -1 : +1)} ${dim.replace(/^'|'$/g, \"\")})`,\n  mongoFormatFunc: null, //todo: support?\n  formatFunc: ({date, op, val, dim}) => (!val ? date : `${date} ${op == \"minus\" ? \"-\" : \"+\"} ${val} ${dim}`),\n  args: {\n    date: {\n      label: \"Date\",\n      type: \"datetime\",\n      defaultValue: {func: \"NOW\", args: []},\n      valueSources: [\"func\", \"field\", \"value\"],\n      spelEscapeForFormat: true,\n    },\n    op: {\n      label: \"Op\",\n      type: \"select\",\n      defaultValue: \"plus\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          plus: \"+\",\n          minus: \"-\",\n        },\n      },\n      spelEscapeForFormat: false,\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      fieldSettings: {\n        min: 0,\n      },\n      defaultValue: 0,\n      valueSources: [\"value\"],\n      spelEscapeForFormat: false,\n    },\n    dim: {\n      label: \"Dimension\",\n      type: \"select\",\n      defaultValue: \"day\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          day: \"day\",\n          week: \"week\",\n          month: \"month\",\n          year: \"year\",\n        },\n      },\n      spelEscapeForFormat: false,\n    },\n  }\n};\n\nconst LOWER = {\n  label: \"Lowercase\",\n  mongoFunc: \"$toLower\",\n  jsonLogic: \"toLowerCase\",\n  spelFunc: \"${str}.toLowerCase()\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toLowerCase: {}\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\", \"func\"],\n    },\n  }\n};\n\nconst UPPER = {\n  label: \"Uppercase\",\n  mongoFunc: \"$toUpper\",\n  jsonLogic: \"toUpperCase\",\n  spelFunc: \"${str}.toUpperCase()\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toUpperCase: {},\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\", \"func\"],\n    },\n  }\n};\n\nconst LINEAR_REGRESSION = {\n  label: \"Linear regression\",\n  returnType: \"number\",\n  formatFunc: ({coef, bias, val}, _) => `(${coef} * ${val} + ${bias})`,\n  sqlFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelImport: (spel) => {\n    let coef, val, bias, a;\n    if (spel.type === \"op-plus\") {\n      [a, bias] = spel.children;\n      if (a.type === \"op-multiply\") {\n        [coef, val] = a.children;\n        return {coef, val, bias};\n      }\n    }\n  },\n  mongoFormatFunc: ({coef, bias, val}) => ({\"$sum\": [{\"$multiply\": [coef, val]}, bias]}),\n  jsonLogic: ({coef, bias, val}) => ({ \"+\": [ {\"*\": [coef, val]}, bias ] }),\n  jsonLogicImport: (v) => {\n    const coef = v[\"+\"][0][\"*\"][0];\n    const val = v[\"+\"][0][\"*\"][1];\n    const bias = v[\"+\"][1];\n    return [coef, val, bias];\n  },\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\" * \", \" + \"],\n  args: {\n    coef: {\n      label: \"Coef\",\n      type: \"number\",\n      defaultValue: 1,\n      valueSources: [\"value\"],\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      valueSources: [\"value\", \"field\"],\n    },\n    bias: {\n      label: \"Bias\",\n      type: \"number\",\n      defaultValue: 0,\n      valueSources: [\"value\"],\n    }\n  }\n};\n\nexport {\n  LOWER,\n  UPPER,\n  NOW,\n  RELATIVE_DATETIME,\n  LINEAR_REGRESSION,\n};\n","import moment from \"moment\";\nimport {\n  SqlString, sqlEmptyValue, mongoEmptyValue, spelEscape, spelFixList,\n  stringifyForDisplay\n} from \"../utils/export\";\nimport {escapeRegExp} from \"../utils/stuff\";\nimport {getTitleInListValues} from \"../utils/listValues\";\n\n// helpers for mongo format\nexport const mongoFormatOp1 = (mop, mc, not,  field, _op, value, useExpr, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  const mv = mc(value, fieldDef);\n  if (mv === undefined)\n    return undefined;\n  if (not) {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: { \"$ne\": mv } }; // short form\n    return !useExpr\n      ? { [field]: { \"$not\": { [mop]: mv } } } \n      : { \"$not\": { [mop]: [$field, mv] } };\n  } else {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: mv }; // short form\n    return !useExpr\n      ? { [field]: { [mop]: mv } } \n      : { [mop]: [$field, mv] };\n  }\n};\n\nexport const mongoFormatOp2 = (mops, not,  field, _op, values, useExpr, valueSrcs, valueTypes, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  if (not) {\n    return !useExpr\n      ? { [field]: { \"$not\": { [mops[0]]: values[0], [mops[1]]: values[1] } } } \n      : {\"$not\":\n                {\"$and\": [\n                  { [mops[0]]: [ $field, values[0] ] },\n                  { [mops[1]]: [ $field, values[1] ] },\n                ]}\n      };\n  } else {\n    return !useExpr\n      ? { [field]: { [mops[0]]: values[0], [mops[1]]: values[1] } } \n      : {\"$and\": [\n        { [mops[0]]: [ $field, values[0] ] },\n        { [mops[1]]: [ $field, values[1] ] },\n      ]};\n  }\n};\n\nconst ctx = {\n  utils: {\n    SqlString,\n    moment,\n    mongoFormatOp1,\n    mongoFormatOp2,\n    mongoEmptyValue,\n    escapeRegExp,\n    sqlEmptyValue,\n    stringifyForDisplay,\n    getTitleInListValues,\n    spelEscape,\n    spelFixList,\n  },\n};\n\nexport default ctx;\n","import {settings as defaultSettings} from \"./default\";\nimport ctx from \"./ctx\";\n\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  AND: {\n    label: \"And\",\n    mongoConj: \"$and\",\n    jsonLogicConj: \"and\",\n    sqlConj: \"AND\",\n    spelConj: \"and\",\n    spelConjs: [\"and\", \"&&\"],\n    reversedConj: \"OR\",\n    formatConj: (children, conj, not, isForDisplay) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"AND\" : \"&&\") + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: (children, conj, not) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"AND\" + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    spelFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"&&\" + \" \") + (omitBrackets ? \"\" : \")\")\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n  },\n  OR: {\n    label: \"Or\",\n    mongoConj: \"$or\",\n    jsonLogicConj: \"or\",\n    sqlConj: \"OR\",\n    spelConj: \"or\",\n    spelConjs: [\"or\", \"||\"],\n    reversedConj: \"AND\",\n    formatConj: (children, conj, not, isForDisplay) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"OR\" : \"||\") + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: (children, conj, not) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"OR\" + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    spelFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"||\" + \" \") + (omitBrackets ? \"\" : \")\")\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n  },\n};\n\n//----------------------------  operators\n\n\n\nconst operators = {\n  equal: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    reversedOp: \"not_equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      const opStr = isForDisplay ? \"=\" : opDef.label;\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `NOT ${field}` : `${field}`;\n      else\n        return `${field} ${opStr} ${value}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  not_equal: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    reversedOp: \"equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `${field}` : `NOT ${field}`;\n      else\n        return `${field} ${opDef.label} ${value}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    jsonLogic: \"!=\",\n  },\n  less: {\n    label: \"<\",\n    labelForFormat: \"<\",\n    sqlOp: \"<\",\n    spelOp: \"<\",\n    spelOps: [\"<\", \"lt\"],\n    reversedOp: \"greater_or_equal\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$lt\", v => v, false, ...args); },\n    jsonLogic: \"<\",\n    elasticSearchQueryType: \"range\",\n  },\n  less_or_equal: {\n    label: \"<=\",\n    labelForFormat: \"<=\",\n    sqlOp: \"<=\",\n    spelOp: \"<=\",\n    spelOps: [\"<=\", \"le\"],\n    reversedOp: \"greater\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$lte\", v => v, false, ...args); },\n    jsonLogic: \"<=\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater: {\n    label: \">\",\n    labelForFormat: \">\",\n    sqlOp: \">\",\n    spelOp: \">\",\n    spelOps: [\">\", \"gt\"],\n    reversedOp: \"less_or_equal\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gt\", v => v, false, ...args); },\n    jsonLogic: \">\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater_or_equal: {\n    label: \">=\",\n    labelForFormat: \">=\",\n    sqlOp: \">=\",\n    spelOp: \">=\",\n    spelOps: [\">=\", \"ge\"],\n    reversedOp: \"less\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gte\", v => v, false, ...args); },\n    jsonLogic: \">=\",\n    elasticSearchQueryType: \"range\",\n  },\n  like: {\n    label: \"Contains\",\n    labelForFormat: \"Contains\",\n    reversedOp: \"not_like\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.contains(${1})\",\n    valueTypes: [\"text\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined), false, ...args); },\n    //jsonLogic: (field, op, val) => ({ \"in\": [val, field] }),\n    jsonLogic: \"in\",\n    _jsonLogicIsRevArgs: true,\n    valueSources: [\"value\"],\n    elasticSearchQueryType: \"regexp\",\n  },\n  not_like: {\n    isNotOp: true,\n    label: \"Not contains\",\n    reversedOp: \"like\",\n    labelForFormat: \"Not Contains\",\n    sqlOp: \"NOT LIKE\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined), true, ...args); },\n    valueSources: [\"value\"],\n  },\n  starts_with: {\n    label: \"Starts with\",\n    labelForFormat: \"Starts with\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.startsWith(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? \"^\" + this.utils.escapeRegExp(v) : undefined), false, ...args); },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  ends_with: {\n    label: \"Ends with\",\n    labelForFormat: \"Ends with\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.endsWith(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) + \"$\" : undefined), false, ...args); },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  between: {\n    label: \"Between\",\n    labelForFormat: \"BETWEEN\",\n    sqlOp: \"BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], false, ...args); },\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"not_between\",\n    jsonLogic: \"<=\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1];\n      }\n      return null;\n    },\n    elasticSearchQueryType: function elasticSearchQueryType(type) {\n      return type === \"time\" ? \"filter\" : \"range\";\n    },\n  },\n  not_between: {\n    isNotOp: true,\n    label: \"Not between\",\n    labelForFormat: \"NOT BETWEEN\",\n    sqlOp: \"NOT BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} NOT BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], true, ...args); },\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"between\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1];\n      }\n      return null;\n    },\n  },\n  is_empty: {\n    label: \"Is empty\",\n    labelForFormat: \"IS EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_not_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS EMPTY` : `!${field}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) = ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is empty or null\n      return `${field} <= ''`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null], false, ...args); },\n    jsonLogic: \"!\",\n  },\n  is_not_empty: {\n    isNotOp: true,\n    label: \"Is not empty\",\n    labelForFormat: \"IS NOT EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT EMPTY` : `!!${field}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) <> ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is not empty and not null\n      return `${field} > ''`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$nin\", (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null], false, ...args); },\n    jsonLogic: \"!!\",\n    elasticSearchQueryType: \"exists\",\n  },\n  is_null: {\n    label: \"Is null\",\n    labelForFormat: \"IS NULL\",\n    sqlOp: \"IS NULL\",\n    cardinality: 0,\n    reversedOp: \"is_not_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NULL` : `!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} == null`;\n    },\n    // check if value is null OR not exists\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => null, false, ...args); },\n    jsonLogic: \"==\",\n  },\n  is_not_null: {\n    label: \"Is not null\",\n    labelForFormat: \"IS NOT NULL\",\n    sqlOp: \"IS NOT NULL\",\n    cardinality: 0,\n    reversedOp: \"is_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT NULL` : `!!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} != null`;\n    },\n    // check if value exists and is not null\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => null, false, ...args); },\n    jsonLogic: \"!=\",\n    elasticSearchQueryType: \"exists\",\n  },\n  select_equals: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      return `${field} ${opStr} ${value}`;\n    },\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    reversedOp: \"select_not_equals\",\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_equals: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} != ${value}`;\n    },\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    reversedOp: \"select_equals\",\n    jsonLogic: \"!=\",\n  },\n  select_any_in: {\n    label: \"Any in\",\n    labelForFormat: \"IN\",\n    sqlOp: \"IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} IN (${values.join(\", \")})`;\n      else\n        return `${field} IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    valueTypes: [\"multiselect\"],\n    spelOp: \"${1}.contains(${0})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", v => v, false, ...args); },\n    reversedOp: \"select_not_any_in\",\n    jsonLogic: \"in\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_any_in: {\n    isNotOp: true,\n    label: \"Not in\",\n    labelForFormat: \"NOT IN\",\n    sqlOp: \"NOT IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT IN (${values.join(\", \")})`;\n      else\n        return `${field} NOT IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} NOT IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$nin\", v => v, false, ...args); },\n    reversedOp: \"select_any_in\",\n  },\n  // it's not \"contains all\", but \"contains any\" operator\n  multiselect_contains: {\n    label: \"Contains\",\n    labelForFormat: \"CONTAINS\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_not_contains\",\n    jsonLogic2: \"some-in\",\n    jsonLogic: (field, op, vals) => ({\n      \"some\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    //spelOp: \"${0}.containsAll(${1})\",\n    spelOp: \"T(CollectionUtils).containsAny(${0}, ${1})\",\n    elasticSearchQueryType: \"term\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", v => v, false, ...args); },\n  },\n  multiselect_not_contains: {\n    isNotOp: true,\n    label: \"Not contains\",\n    labelForFormat: \"NOT CONTAINS\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} NOT CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_contains\"\n  },\n  multiselect_equals: {\n    label: \"Equals\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      if (valueSrc == \"value\")\n        return `${field} ${opStr} [${values.join(\", \")}]`;\n      else\n        return `${field} ${opStr} ${values}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} = '${values.map(v => this.utils.SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    spelOp: \"${0}.equals(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    reversedOp: \"multiselect_not_equals\",\n    jsonLogic2: \"all-in\",\n    jsonLogic: (field, op, vals) => ({\n      // it's not \"equals\", but \"includes\" operator - just for example\n      \"all\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    elasticSearchQueryType: \"term\",\n  },\n  multiselect_not_equals: {\n    isNotOp: true,\n    label: \"Not equals\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} != [${values.join(\", \")}]`;\n      else\n        return `${field} != ${values}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} != '${values.map(v => this.utils.SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    reversedOp: \"multiselect_equals\",\n  },\n  proximity: {\n    label: \"Proximity search\",\n    cardinality: 2,\n    valueLabels: [\n      { label: \"Word 1\", placeholder: \"Enter first word\" },\n      { label: \"Word 2\", placeholder: \"Enter second word\" },\n    ],\n    textSeparators: [\n      //'Word 1',\n      //'Word 2'\n    ],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const prox = operatorOptions.get(\"proximity\");\n      return `${field} ${val1} NEAR/${prox} ${val2}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      // https://learn.microsoft.com/en-us/sql/relational-databases/search/search-for-words-close-to-another-word-with-near?view=sql-server-ver16#example-1\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const aVal1 = this.utils.SqlString.trim(val1);\n      const aVal2 = this.utils.SqlString.trim(val2);\n      const prox = operatorOptions.get(\"proximity\");\n      return `CONTAINS(${field}, 'NEAR((${aVal1}, ${aVal2}), ${prox})')`;\n    },\n    mongoFormatOp: undefined, // not supported\n    jsonLogic: undefined, // not supported\n    options: {\n      optionLabel: \"Near\", // label on top of \"near\" selectbox (for config.settings.showLabels==true)\n      optionTextBefore: \"Near\", // label before \"near\" selectbox (for config.settings.showLabels==false)\n      optionPlaceholder: \"Select words between\", // placeholder for \"near\" selectbox\n      minProximity: 2,\n      maxProximity: 10,\n      defaults: {\n        proximity: 2\n      },\n    },\n  },\n  some: {\n    label: \"Some\",\n    labelForFormat: \"SOME\",\n    cardinality: 0,\n    jsonLogic: \"some\",\n    spelFormatOp: (filteredSize) => `${filteredSize} > 0`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gt\", v => 0, false, ...args); },\n  },\n  all: {\n    label: \"All\",\n    labelForFormat: \"ALL\",\n    cardinality: 0,\n    jsonLogic: \"all\",\n    spelFormatOp: (filteredSize, op, fullSize) => `${filteredSize} == ${fullSize}`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n  },\n  none: {\n    label: \"None\",\n    labelForFormat: \"NONE\",\n    cardinality: 0,\n    jsonLogic: \"none\",\n    spelFormatOp: (filteredSize) => `${filteredSize} == 0`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => 0, false, ...args); },\n  }\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"String\",\n    valuePlaceholder: \"Enter string\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  textarea: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Text\",\n    valuePlaceholder: \"Enter text\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n    fullWidth: true,\n  },\n  number: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number\",\n    valueLabels: [\n      { label: \"Number from\", placeholder: \"Enter number from\" },\n      { label: \"Number to\", placeholder: \"Enter number to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef) {\n      const isFloat = wgtDef.step && !Number.isInteger(wgtDef.step);\n      return this.utils.spelEscape(val, isFloat);\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  slider: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number or move slider\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  select: {\n    type: \"select\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Value\",\n    valuePlaceholder: \"Select value\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      let valLabel = this.utils.getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, val);\n      return isForDisplay ? this.utils.stringifyForDisplay(valLabel) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  multiselect: {\n    type: \"multiselect\",\n    jsType: \"array\",\n    valueSrc: \"value\",\n    valueLabel: \"Values\",\n    valuePlaceholder: \"Select values\",\n    formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n      let valsLabels = vals.map(v => this.utils.getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, v));\n      return isForDisplay ? valsLabels.map(this.utils.stringifyForDisplay) : vals.map(JSON.stringify);\n    },\n    sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n      return vals.map(v => this.utils.SqlString.escape(v));\n    },\n    spelFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n      const isCallable = opDef && opDef.spelOp && opDef.spelOp.startsWith(\"${1}\");\n      let res = this.utils.spelEscape(vals); // inline list\n      if (isCallable) {\n        // `{1,2}.contains(1)` NOT works\n        // `{1,2}.?[true].contains(1)` works\n        res = this.utils.spelFixList(res);\n      }\n      return res;\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  date: {\n    type: \"date\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD\",\n    valueLabel: \"Date\",\n    valuePlaceholder: \"Enter date\",\n    valueLabels: [\n      { label: \"Date from\", placeholder: \"Enter date from\" },\n      { label: \"Date to\", placeholder: \"Enter date to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"YYYY-MM-DD\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD\");\n      const fmt = \"yyyy-MM-dd\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDate).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    spelImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDate\"],\n        },\n        methodName: \"parse\",\n        args: [\n          {var: \"v\"},\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [\n              {var: \"fmt\"}\n            ]\n          },\n        ],\n      }\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (args?.fmt?.value?.includes?.(\" \") || args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\"))\n        return [undefined, `Invalid date format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      return this.utils.moment(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  time: {\n    type: \"time\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    valueFormat: \"HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Time\",\n    valuePlaceholder: \"Enter time\",\n    valueLabels: [\n      { label: \"Time from\", placeholder: \"Enter time from\" },\n      { label: \"Time to\", placeholder: \"Enter time to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"HH:mm:ss\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const fmt = \"HH:mm:ss\";\n      const v = dateVal.format(\"HH:mm:ss\");\n      return `T(java.time.LocalTime).parse('${v}')`;\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n    },\n    spelImportFuncs: [\n      \"T(java.time.LocalTime).parse(${v})\",\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\"\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (args?.fmt && (!args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\") || args.fmt?.value?.includes(\" \")))\n        return [undefined, `Invalid time format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, \"HH:mm:ss\");\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    toJS: function (val, fieldSettings) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\") : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    elasticSearchFormatValue: function elasticSearchFormatValue(queryType, value, operator, fieldName) {\n      return {\n        script: {\n          script: {\n            source: \"doc[\".concat(fieldName, \"][0].getHour() >== params.min && doc[\").concat(fieldName, \"][0].getHour() <== params.max\"),\n            params: {\n              min: value[0],\n              max: value[1]\n            }\n          }\n        }\n      };\n    },\n  },\n  datetime: {\n    type: \"datetime\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Datetime\",\n    valuePlaceholder: \"Enter datetime\",\n    valueLabels: [\n      { label: \"Datetime from\", placeholder: \"Enter datetime from\" },\n      { label: \"Datetime to\", placeholder: \"Enter datetime to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat + \" \" + wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.toDate());\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD HH:mm:ss\");\n      const fmt = \"yyyy-MM-dd HH:mm:ss\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDateTime).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    spelImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDateTime\"],\n        },\n        methodName: \"parse\",\n        args: [\n          {var: \"v\"},\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [\n              {var: \"fmt\"}\n            ]\n          },\n        ],\n      }\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (!args?.fmt?.value?.includes?.(\" \"))\n        return [undefined, `Invalid datetime format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      return this.utils.moment(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  boolean: {\n    type: \"boolean\",\n    jsType: \"boolean\",\n    valueSrc: \"value\",\n    labelYes: \"Yes\",\n    labelNo: \"No\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? (val ? \"Yes\" : \"No\") : JSON.stringify(!!val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    defaultValue: false,\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  field: {\n    valueSrc: \"field\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay, op, opDef, rightFieldDef) => {\n      return isForDisplay ? (rightFieldDef.label || val) : val;\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef, rightFieldDef) => {\n      return val;\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return val;\n    },\n    valueLabel: \"Field to compare\",\n    valuePlaceholder: \"Select field to compare\",\n  },\n  func: {\n    valueSrc: \"func\",\n    valueLabel: \"Function\",\n    valuePlaceholder: \"Select function\",\n  },\n  /**\n   * @deprecated\n   */\n  case_value: {\n    valueSrc: \"value\",\n    type: \"case_value\",\n    spelFormatValue: function (val) {\n      return this.utils.spelEscape(val === \"\" ? null : val);\n    },\n    spelImportValue: (val) => {\n      return [val.value, []];\n    },\n    jsonLogic: function (val) {\n      return val === \"\" ? null : val;\n    },\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  text: {\n    defaultOperator: \"equal\",\n    mainWidget: \"text\",\n    widgets: {\n      text: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"proximity\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      textarea: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      field: {\n        operators: [\n          //unary ops (like `is_empty`) will be excluded anyway, see getWidgetsForFieldOp()\n          \"equal\",\n          \"not_equal\",\n          \"proximity\", //can exclude if you want\n        ],\n      }\n    },\n  },\n  number: {\n    defaultOperator: \"equal\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      slider: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ],\n      },\n    },\n  },\n  date: {\n    defaultOperator: \"equal\",\n    widgets: {\n      date: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ]\n      }\n    },\n  },\n  time: {\n    defaultOperator: \"equal\",\n    widgets: {\n      time: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  datetime: {\n    defaultOperator: \"equal\",\n    widgets: {\n      datetime: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      }\n    },\n  },\n  select: {\n    mainWidget: \"select\",\n    defaultOperator: \"select_equals\",\n    widgets: {\n      select: {\n        operators: [\n          \"select_equals\",\n          \"select_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      multiselect: {\n        operators: [\n          \"select_any_in\",\n          \"select_not_any_in\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n    },\n  },\n  multiselect: {\n    defaultOperator: \"multiselect_equals\",\n    widgets: {\n      multiselect: {\n        operators: [\n          \"multiselect_contains\",\n          \"multiselect_not_contains\",\n          \"multiselect_equals\",\n          \"multiselect_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  boolean: {\n    defaultOperator: \"equal\",\n    widgets: {\n      boolean: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {\n          //you can enable this if you don't use fields as value sources\n          // hideOperator: true,\n          // operatorInlineLabel: \"is\",\n        }\n      },\n      field: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n        ],\n      }\n    },\n  },\n  \"!group\": {\n    defaultOperator: \"some\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        widgetProps: {\n          min: 0\n        },\n        operators: [\n          // w/o operand\n          \"some\",\n          \"all\",\n          \"none\",\n\n          // w/ operand - count\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n        ],\n        opProps: {\n          equal: {\n            label: \"Count ==\"\n          },\n          not_equal: {\n            label: \"Count !=\"\n          },\n          less: {\n            label: \"Count <\"\n          },\n          less_or_equal: {\n            label: \"Count <=\"\n          },\n          greater: {\n            label: \"Count >\"\n          },\n          greater_or_equal: {\n            label: \"Count >=\"\n          },\n          between: {\n            label: \"Count between\"\n          },\n          not_between: {\n            label: \"Count not between\"\n          }\n        }\n      }\n    }\n  },\n  /**\n   * @deprecated\n   */\n  \"case_value\": {\n    mainWidget: \"case_value\",\n    widgets: {\n      case_value: {\n        widgetProps: {},\n      }\n    }\n  },\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...defaultSettings,\n\n  convertableWidgets: {\n    \"number\": [\"slider\", \"rangeslider\"],\n    \"slider\": [\"number\", \"rangeslider\"],\n    \"rangeslider\": [\"number\", \"slider\"],\n    \"text\": [\"textarea\"],\n    \"textarea\": [\"text\"]\n  },\n\n  formatSpelField: function (field, parentField, parts, partsExt, fieldDefinition, config) {\n    let fieldName = partsExt.map(({key, parent, fieldSeparator: sep}, ind) => {\n      if (ind == 0) {\n        if (parent == \"[map]\")\n          return `#this[${this.utils.spelEscape(key)}]`;\n        else if (parent == \"[class]\")\n          return key;\n        else\n          return key;\n      } else {\n        if (parent == \"map\" || parent == \"[map]\")\n          return `[${this.utils.spelEscape(key)}]`;\n        else if (parent == \"class\" || parent == \"[class]\")\n          return `${sep}${key}`;\n        else\n          return `${sep}${key}`;\n      }\n    }).join(\"\");\n    if (fieldDefinition.fieldName) {\n      fieldName = field;\n    }\n    if (fieldDefinition.isSpelVariable) {\n      fieldName = \"#\" + fieldName;\n    }\n    return fieldName;\n  },\n  sqlFormatReverse: (q) => {\n    if (q == undefined) return undefined;\n    return \"NOT(\" + q + \")\";\n  },\n  spelFormatReverse: (q) => {\n    if (q == undefined) return undefined;\n    return \"!(\" + q + \")\";\n  },\n  formatReverse: (q, operator, reversedOp, operatorDefinition, revOperatorDefinition, isForDisplay) => {\n    if (q == undefined) return undefined;\n    if (isForDisplay)\n      return \"NOT (\" + q + \")\";\n    else\n      return \"!(\" + q + \")\";\n  },\n  formatAggr: (whereStr, aggrField, operator, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay, aggrFieldDef) => {\n    const {labelForFormat, cardinality} = opDef;\n    if (cardinality == 0) {\n      const cond = whereStr ? ` HAVE ${whereStr}` : \"\";\n      return `${labelForFormat} OF ${aggrField}${cond}`;\n    } else if (cardinality == undefined || cardinality == 1) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${value}`;\n    } else if (cardinality == 2) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      let valFrom = value.first();\n      let valTo = value.get(1);\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${valFrom} AND ${valTo}`;\n    }\n  },\n  jsonLogic: {\n    groupVarKey: \"var\",\n    altVarKey: \"var\",\n    lockedOp: \"locked\"\n  },\n  \n  canCompareFieldWithField: (leftField, leftFieldConfig, rightField, rightFieldConfig) => {\n    //for type == 'select'/'multiselect' you can check listValues\n    return true;\n  },\n\n  // enable compare fields\n  valueSourcesInfo: {\n    value: {\n      label: \"Value\"\n    },\n    field: {\n      label: \"Field\",\n      widget: \"field\",\n    },\n    func: {\n      label: \"Function\",\n      widget: \"func\",\n    }\n  },\n\n};\n\n//----------------------------\n\nconst _addMixins = (config, mixins, doAdd = true) => {\n  const mixinFuncs = {\n    rangeslider: mixinWidgetRangeslider,\n    treeselect: mixinWidgetTreeselect,\n    treemultiselect: mixinWidgetTreemultiselect,\n    rangeable__date: mixinRangeableWidget(\"date\", \"date\"),\n  };\n  for (const mixName of mixins) {\n    const mixinFunc = mixinFuncs[mixName];\n    if (mixinFunc) {\n      config = mixinFunc(config, doAdd);\n    } else {\n      throw new Error(`Can't ${doAdd ? \"add\": \"remove\"} mixin ${mixName}`);\n    }\n  }\n  return config;\n};\n\nconst addMixins = (config, mixins) => {\n  return _addMixins(config, mixins, true);\n};\nconst removeMixins = (config, mixins) => {\n  return _addMixins(config, mixins, false);\n};\n\nconst mixinRangeableWidget = (type, widget) => (config, addMixin = true) => {\n  let { types } = config;\n\n  types = {\n    ...types,\n    [type]: {\n      ...types[type],\n      widgets: {\n        ...types[type].widgets,\n      }\n    }\n  };\n\n  if (addMixin) {\n    types[type].widgets[widget] = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n          textSeparators: [null, null],\n        },\n        not_between: {\n          isSpecialRange: true,\n          textSeparators: [null, null],\n        }\n      },\n      ...types[type].widgets[widget],\n    };\n  } else {\n    delete types[type].widgets[widget];\n  }\n\n  return {\n    ...config,\n    types,\n  };\n};\n\nconst mixinWidgetRangeslider = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.rangeslider = {\n      type: \"number\",\n      jsType: \"number\",\n      valueSrc: \"value\",\n      valueLabel: \"Range\",\n      valuePlaceholder: \"Select range\",\n      valueLabels: [\n        { label: \"Number from\", placeholder: \"Enter number from\" },\n        { label: \"Number to\", placeholder: \"Enter number to\" },\n      ],\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      singleWidget: \"slider\",\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.rangeslider,\n    };\n  } else {\n    delete widgets.rangeslider;\n  }\n\n  types = {\n    ...types,\n    number: {\n      ...types.number,\n      widgets: {\n        ...types.number.widgets,\n      }\n    }\n  };\n\n  if (addMixin) {\n    types.number.widgets.rangeslider = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n        },\n        not_between: {\n          isSpecialRange: true,\n        }\n      },\n      operators: [\n        \"between\",\n        \"not_between\",\n        // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\",\n        \"is_not_null\",\n      ],\n      ...types.number.widgets.rangeslider,\n    };\n  } else {\n    delete types.number.widgets.rangeslider;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreeselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treeselect = {\n      type: \"treeselect\",\n      jsType: \"string\",\n      valueSrc: \"value\",\n      valueLabel: \"Value\",\n      valuePlaceholder: \"Select value\",\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        const treeData = fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues;\n        let valLabel = this.utils.getTitleInListValues(treeData, val);\n        return isForDisplay ? this.utils.stringifyForDisplay(valLabel) : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.treeselect,\n    };\n  } else {\n    delete widgets.treeselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treeselect = {\n      mainWidget: \"treeselect\",\n      defaultOperator: \"select_equals\",\n      widgets: {\n        treeselect: {\n          operators: [\n            \"select_equals\",\n            \"select_not_equals\"\n          ],\n        },\n        treemultiselect: {\n          operators: [\n            \"select_any_in\",\n            \"select_not_any_in\"\n          ],\n        },\n      },\n      ...types.treeselect,\n    };\n  } else {\n    delete types.treeselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreemultiselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treemultiselect = {\n      type: \"treemultiselect\",\n      jsType: \"array\",\n      valueSrc: \"value\",\n      valueLabel: \"Values\",\n      valuePlaceholder: \"Select values\",\n      formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n        const treeData = fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues;\n        let valsLabels = vals.map(v => this.utils.getTitleInListValues(treeData, v));\n        return isForDisplay ? valsLabels.map(this.utils.stringifyForDisplay) : vals.map(JSON.stringify);\n      },\n      sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n        return vals.map(v => this.utils.SqlString.escape(v));\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.treemultiselect,\n    };\n  } else {\n    delete widgets.treemultiselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treemultiselect = {\n      defaultOperator: \"multiselect_equals\",\n      widgets: {\n        treemultiselect: {\n          operators: [\n            \"multiselect_equals\",\n            \"multiselect_not_equals\",\n          ],\n        }\n      },\n      ...types.treemultiselect,\n    };\n  } else {\n    delete types.treemultiselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nexport const ConfigMixins = {\n  addMixins,\n  removeMixins,\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\n// Mixin advanced widgets just to allow using it on server-side eg. for export routines\nconfig = addMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_FIELD_SRC = \"SET_FIELD_SRC\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_FUNC_VALUE = \"SET_FUNC_VALUE\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import Immutable, { fromJS } from \"immutable\";\nimport {\n  expandTreePath, expandTreeSubpath, getItemByPath, fixPathsInTree, \n  getTotalRulesCountInTree, fixEmptyGroupsInTree, isEmptyTree, hasChildren, removeIsLockedInTree\n} from \"../utils/treeUtils\";\nimport {\n  defaultRuleProperties, defaultGroupProperties, getDefaultOperator, \n  defaultOperatorOptions, defaultItemProperties\n} from \"../utils/defaultUtils\";\nimport * as constants from \"./constants\";\nimport uuid from \"../utils/uuid\";\nimport {\n  getFuncConfig, getFieldConfig, getOperatorConfig\n} from \"../utils/configUtils\";\nimport {\n  getOperatorsForField, getOperatorsForType, getFirstOperator,\n  isEmptyItem, selectTypes, calculateValueType\n} from \"../utils/ruleUtils\";\nimport {deepEqual, getOpCardinality, applyToJS} from \"../utils/stuff\";\nimport {validateValue, validateRange, getNewValueForFieldOp} from \"../utils/validation\";\nimport {translateValidation} from \"../i18n\";\nimport omit from \"lodash/omit\";\nimport mapValues from \"lodash/mapValues\";\nimport {setFunc, setArgValue, setArgValueSrc} from \"../utils/funcUtils\";\n\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst addNewGroup = (state, path, type, generatedId, properties, config, children = null, meta = {}) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n\n  const groupUuid = properties?.get?.(\"id\") || generatedId;\n  const {shouldCreateEmptyGroup} = config.settings;\n  const groupPath = path.push(groupUuid);\n  const canAddNewRule = !shouldCreateEmptyGroup;\n  const isDefaultCase = !!meta?.isDefaultCase;\n\n  const origState = state;\n  state = addItem(state, path, type, groupUuid, defaultGroupProperties(config).merge(fromJS(properties) || {}), config, children);\n  if (state !== origState) {\n    if (!children && !isDefaultCase) {\n      state = state.setIn(expandTreePath(groupPath, \"children1\"), new Immutable.OrderedMap());\n\n      // Add one empty rule into new group\n      if (canAddNewRule) {\n        state = addItem(state, groupPath, \"rule\", uuid(), defaultRuleProperties(config), config);\n      }\n    }\n\n    state = fixPathsInTree(state);\n  }\n  \n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst removeGroup = (state, path, config) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  \n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.slice(0, -1);\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  if (isEmptyParentGroup && !canLeaveEmptyGroup) {\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n    \n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty(!) rule to root\n      const canUseDefaultFieldAndOp = false;\n      const canGetFirst = false;\n      state = addItem(\n        state, new Immutable.List(), \"rule\", uuid(), \n        defaultRuleProperties(config, undefined, undefined, canUseDefaultFieldAndOp, canGetFirst), \n        config\n      );\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nconst removeRule = (state, path, config) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n\n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.pop();\n  const parent = state.getIn(expandTreePath(parentPath));\n\n  const parentField = parent.getIn([\"properties\", \"field\"]);\n  const parentOperator = parent.getIn([\"properties\", \"operator\"]);\n  // const parentValue = parent.getIn([\"properties\", \"value\", 0]);\n  const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  const parentOperatorConfig = parentOperator ? getOperatorConfig(config, parentOperator, parentField) : null;\n  const hasGroupCountRule = parentField && parentOperator && parentOperatorConfig.cardinality != 0; // && parentValue != undefined;\n  \n  const isParentRuleGroup = parent.get(\"type\") == \"rule_group\";\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  const canLeaveEmpty = isParentRuleGroup \n    ? hasGroupCountRule && parentFieldConfig.initialEmptyWhere\n    : canLeaveEmptyGroup;\n  \n  if (isEmptyParentGroup && !canLeaveEmpty) {\n    if (isParentRuleGroup) {\n      // deleted last rule from rule_group, so delete whole rule_group\n      state = state.deleteIn(expandTreePath(parentPath));\n    }\n\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n\n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty(!) rule to root\n      const canUseDefaultFieldAndOp = false;\n      const canGetFirst = false;\n      state = addItem(\n        state, new Immutable.List(), \"rule\", uuid(), \n        defaultRuleProperties(config, undefined, undefined, canUseDefaultFieldAndOp, canGetFirst), \n        config\n      );\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} not\n */\nconst setNot = (state, path, not) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  state = state.setIn(expandTreePath(path, \"properties\", \"not\"), not);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nconst setLock = (state, path, lock) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  state = removeIsLockedInTree(state.setIn(expandTreePath(path, \"properties\", \"isLocked\"), lock));\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nconst setConjunction = (state, path, conjunction) => {\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  state = state.setIn(expandTreePath(path, \"properties\", \"conjunction\"), conjunction);\n  return state;\n};\n\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} type\n * @param {string} id\n * @param {Immutable.OrderedMap} properties\n * @param {object} config\n */\nconst addItem = (state, path, type, generatedId, properties, config, children = null) => {\n  if (type === \"switch_group\")\n    throw new Error(\"Can't add switch_group programmatically\");\n  const targetItem = state.getIn(expandTreePath(path));\n  if (!targetItem) {\n    // incorrect path\n    return state;\n  }\n  const id = properties?.get?.(\"id\") || generatedId;\n  const { maxNumberOfCases, maxNumberOfRules, maxNesting } = config.settings;\n  const rootType = state.get(\"type\");\n  const isTernary = rootType === \"switch_group\";\n  const caseGroup = isTernary ? state.getIn(expandTreePath(path.take(2))) : null;\n  const childrenPath = expandTreePath(path, \"children1\");\n  const targetChildren = state.getIn(childrenPath);\n  const hasChildren = !!targetChildren && targetChildren.size;\n  const targetChildrenSize = hasChildren ? targetChildren.size : null;\n  let currentNumber, maxNumber;\n  if (type === \"case_group\") {\n    currentNumber = targetChildrenSize;\n    maxNumber = maxNumberOfCases;\n  } else if (type === \"group\") {\n    currentNumber = path.size;\n    maxNumber = maxNesting;\n  } else if (targetItem?.get(\"type\") === \"rule_group\") {\n    // don't restrict\n  } else {\n    currentNumber = isTernary ? getTotalRulesCountInTree(caseGroup) : getTotalRulesCountInTree(state);\n    maxNumber = maxNumberOfRules;\n  }\n  const canAdd = maxNumber && currentNumber ? (currentNumber < maxNumber) : true;\n  \n  const item = {type, id, properties};\n  _addChildren1(config, item, children);\n\n  const isLastDefaultCase = type === \"case_group\" && hasChildren && targetChildren.last().get(\"children1\") == null;\n\n  if (canAdd) {\n    const newChildren = new Immutable.OrderedMap({\n      [id]: new Immutable.Map(item)\n    });\n    if (!hasChildren) {\n      state = state.setIn(childrenPath, newChildren);\n    } else if (isLastDefaultCase) {\n      const last = targetChildren.last();\n      const newChildrenWithLast = new Immutable.OrderedMap({\n        [id]: new Immutable.Map(item),\n        [last.get(\"id\")]: last\n      });\n      state = state.deleteIn(expandTreePath(childrenPath, \"children1\", last.get(\"id\")));\n      state = state.mergeIn(childrenPath, newChildrenWithLast);\n    } else {\n      state = state.mergeIn(childrenPath, newChildren);\n    }\n    state = fixPathsInTree(state);\n  }\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n */\nconst removeItem = (state, path) => {\n  state = state.deleteIn(expandTreePath(path));\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} fromPath\n * @param {Immutable.List} toPath\n * @param {string} placement, see constants PLACEMENT_*: PLACEMENT_AFTER, PLACEMENT_BEFORE, PLACEMENT_APPEND, PLACEMENT_PREPEND\n * @param {object} config\n */\nconst moveItem = (state, fromPath, toPath, placement, config) => {\n  const from = getItemByPath(state, fromPath);\n  const sourcePath = fromPath.pop();\n  const source = fromPath.size > 1 ? getItemByPath(state, sourcePath) : null;\n  const sourceChildren = source ? source.get(\"children1\") : null;\n\n  const to = getItemByPath(state, toPath);\n  const targetPath = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) ? toPath : toPath.pop();\n  const target = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) \n    ? to\n    : toPath.size > 1 ? getItemByPath(state, targetPath) : null;\n  const targetChildren = target ? target.get(\"children1\") : null;\n\n  if (!source || !target || !from) {\n    // incorrect path\n    return state;\n  }\n\n  const isSameParent = (source.get(\"id\") == target.get(\"id\"));\n  const isSourceInsideTarget = targetPath.size < sourcePath.size \n        && deepEqual(targetPath.toArray(), sourcePath.toArray().slice(0, targetPath.size));\n  const isTargetInsideSource = targetPath.size > sourcePath.size \n        && deepEqual(sourcePath.toArray(), targetPath.toArray().slice(0, sourcePath.size));\n  let sourceSubpathFromTarget = null;\n  let targetSubpathFromSource = null;\n  if (isSourceInsideTarget) {\n    sourceSubpathFromTarget = Immutable.List(sourcePath.toArray().slice(targetPath.size));\n  } else if (isTargetInsideSource) {\n    targetSubpathFromSource = Immutable.List(targetPath.toArray().slice(sourcePath.size));\n  }\n\n  let newTargetChildren = targetChildren, newSourceChildren = sourceChildren;\n  if (!isTargetInsideSource)\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  if (isSameParent) {\n    newTargetChildren = newSourceChildren;\n  } else if (isSourceInsideTarget) {\n    newTargetChildren = newTargetChildren.updateIn(expandTreeSubpath(sourceSubpathFromTarget, \"children1\"), (_oldChildren) => newSourceChildren);\n  }\n\n  if (placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) {\n    newTargetChildren = Immutable.OrderedMap().withMutations(r => {\n      for (let [itemId, item] of newTargetChildren.entries()) {\n        if (itemId == to?.get(\"id\") && placement == constants.PLACEMENT_BEFORE) {\n          r.set(from.get(\"id\"), from);\n        }\n                \n        r.set(itemId, item);\n\n        if (itemId == to?.get(\"id\") && placement == constants.PLACEMENT_AFTER) {\n          r.set(from.get(\"id\"), from);\n        }\n      }\n    });\n  } else if (placement == constants.PLACEMENT_APPEND) {\n    newTargetChildren = newTargetChildren.merge(Immutable.OrderedMap({[from.get(\"id\")]: from}));\n  } else if (placement == constants.PLACEMENT_PREPEND) {\n    newTargetChildren = Immutable.OrderedMap({[from.get(\"id\")]: from}).merge(newTargetChildren);\n  }\n\n  if (isTargetInsideSource) {\n    newSourceChildren = newSourceChildren.updateIn(expandTreeSubpath(targetSubpathFromSource, \"children1\"), (_oldChildren) => newTargetChildren);\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  }\n\n  if (!isSameParent && !isSourceInsideTarget)\n    state = state.updateIn(expandTreePath(sourcePath, \"children1\"), (_oldChildren) => newSourceChildren);\n  if (!isTargetInsideSource)\n    state = state.updateIn(expandTreePath(targetPath, \"children1\"), (_oldChildren) => newTargetChildren);\n\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {string} srcKey\n */\nconst setFieldSrc = (state, path, srcKey, config) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n\n  const {keepInputOnChangeFieldSrc} = config.settings;\n  const currentProperties = currentRule.get(\"properties\");\n  const currentField = currentProperties?.get(\"field\");\n  const currentFielType = currentProperties?.get(\"fieldType\");\n  const currentFieldConfig = getFieldConfig(config, currentField);\n  // const currentType = currentRule.get(\"type\");\n  // const currentFieldSrc = currentProperties?.get(\"fieldSrc\");\n\n  // get fieldType for \"memory effect\"\n  let fieldType = currentFieldConfig?.type || currentFielType;\n  if (!fieldType || fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n  const canReuseValue = !selectTypes.includes(fieldType);\n  const keepInput = keepInputOnChangeFieldSrc && !isEmptyItem(currentRule, config) && canReuseValue;\n\n  if (!keepInput) {\n    // clear ALL properties\n    state = state.setIn(\n      expandTreePath(path, \"properties\"),\n      defaultRuleProperties(config, null, null, false)\n    );\n  } else {\n    // clear non-relevant properties\n    state = state.setIn(expandTreePath(path, \"properties\", \"field\"), null);\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"fieldError\"));\n    // set fieldType for \"memory effect\"\n    state = state.setIn(expandTreePath(path, \"properties\", \"fieldType\"), fieldType);\n  }\n\n  // set fieldSrc\n  state = state.setIn(expandTreePath(path, \"properties\", \"fieldSrc\"), srcKey);\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {Array} parentFuncs\n * @param {string | null} argKey\n * @param {*} argValue if argKey is null, it's new func key\n * @param {string | \"!valueSrc\"} valueType\n * @param {*} asyncListValues\n */\nconst setFuncValue = (config, state, path, delta, parentFuncs, argKey, argValue, valueType, asyncListValues, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n  const isLHS = delta === -1;\n  const currentProperties = currentRule.get(\"properties\");\n  const currentField = currentProperties.get(\"field\");\n  const currentValue = currentProperties.get(\"value\");\n  const currentV = isLHS ? currentField : currentValue.getIn([delta]);\n\n  // go inwards\n  let funcsPath = [];\n  let targetFV = currentV;\n  for (const [funcK, argK] of parentFuncs || []) {\n    funcsPath.push([funcK, argK, targetFV]);\n    if (funcK !== targetFV.get(\"func\")) {\n      const funcPath = funcsPath.map(([f, a]) => `${f}(${a})`).join(\"/\") || \"root\";\n      throw new Error(\n        `In ${isLHS ? \"LHS\" : \"RHS\"} for path ${funcPath} expected func key ${funcK} but got ${parent.get(\"func\")}`\n      );\n    }\n    targetFV = targetFV.getIn([\"args\", argK, \"value\"]);\n  }\n\n  // modify\n  if (!argKey) {\n    const newFuncKey = argValue;\n    const canFixArgs = true; // try to fix args to fit new func validations, otherwise - drop invalid args\n    targetFV = setFunc(targetFV, newFuncKey, config, canFixArgs);\n    // allow drop invalid args / reset to default, but don't trigger error if some arg is required\n    // (not same as setting isEndValue = true)\n    _meta.canDropArgs = true;\n  } else {\n    const funcKey = targetFV.get(\"func\");\n    const funcDefinition = getFuncConfig(config, funcKey);\n    const {args} = funcDefinition;\n    const argDefinition = args[argKey];\n\n    if (valueType === \"!valueSrc\") {\n      targetFV = setArgValueSrc(targetFV, argKey, argValue, argDefinition, config);\n    } else {\n      targetFV = setArgValue(targetFV, argKey, argValue, argDefinition, config);\n    }\n  }\n\n  // go outwards\n  let newV = targetFV;\n  while (funcsPath.length) {\n    const [funcK, argK, parentFV] = funcsPath.pop();\n    const funcDefinition = getFuncConfig(config, funcK);\n    const {args} = funcDefinition;\n    const argDefinition = args[argK];\n    newV = setArgValue(parentFV, argK, newV, argDefinition, config);\n  }\n\n  if (isLHS) {\n    return setField(state, path, newV, config, asyncListValues, _meta);\n  } else {\n    return setValue(state, path, delta, newV, undefined, config, asyncListValues, _meta);\n  }\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string | Immutable.OrderedMap} newField\n */\nconst setField = (state, path, newField, config, asyncListValues, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return {state};\n  }\n  const { isEndValue, canDropArgs } = _meta;\n  if (!newField) {\n    state = removeItem(state, path);\n    return {state};\n  }\n\n  const {fieldSeparator, setOpOnChangeField, showErrorMessage} = config.settings;\n  if (Array.isArray(newField))\n    newField = newField.join(fieldSeparator);\n\n  const currentType = currentRule.get(\"type\");\n  const currentProperties = currentRule.get(\"properties\");\n  const wasRuleGroup = currentType == \"rule_group\";\n  const currentFieldSrc = currentProperties?.get(\"fieldSrc\");\n  // const currentFieldError = currentProperties?.get(\"fieldError\");\n  const newFieldConfig = getFieldConfig(config, newField);\n  if (!newFieldConfig) {\n    console.warn(`No config for LHS ${newField}`);\n    return {state};\n  }\n  let fieldType = newFieldConfig.type;\n  if (fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n\n  const currentOperator = currentProperties?.get(\"operator\");\n  const currentOperatorOptions = currentProperties?.get(\"operatorOptions\");\n  const currentField = currentProperties?.get(\"field\");\n  // const currentValue = currentProperties?.get(\"value\");\n  // const currentValueErrorStr = currentProperties?.get(\"valueError\")?.join?.(\"|\");\n  // const _currentValueSrc = currentProperties?.get(\"valueSrc\", new Immutable.List());\n  // const _currentValueType = currentProperties?.get(\"valueType\", new Immutable.List());\n\n  const isRuleGroup = newFieldConfig.type == \"!group\";\n  const isRuleGroupExt = isRuleGroup && newFieldConfig.mode == \"array\";\n  const isChangeToAnotherType = wasRuleGroup != isRuleGroup;\n  // const wasOkWithoutField = !currentField && currentFieldSrc && currentOperator;\n\n  // If the newly selected field supports the same operator the rule currently\n  // uses, keep it selected.\n  const lastOp = newFieldConfig && newFieldConfig.operators?.indexOf(currentOperator) !== -1 ? currentOperator : null;\n  const isSameFunc = currentFieldSrc === \"func\" && currentField?.get?.(\"func\") === newField?.get?.(\"func\");\n  const forceKeepOp = isSameFunc && !!lastOp;\n  let newOperator = null;\n  const availOps = currentFieldSrc === \"func\" \n    ? getOperatorsForType(config, fieldType)\n    : getOperatorsForField(config, newField);\n  if (availOps && availOps.length == 1)\n    newOperator = availOps[0];\n  else if (forceKeepOp)\n    newOperator = lastOp;\n  else if (availOps && availOps.length > 1) {\n    for (let strategy of setOpOnChangeField) {\n      if (strategy == \"keep\" && !isChangeToAnotherType)\n        newOperator = lastOp;\n      else if (strategy == \"default\")\n        newOperator = getDefaultOperator(config, newField, false);\n      else if (strategy == \"first\")\n        newOperator = getFirstOperator(config, newField);\n      if (newOperator) //found op for strategy\n        break;\n    }\n  }\n\n  if (!isRuleGroup && !newFieldConfig.operators) {\n    console.warn(`Type ${newFieldConfig.type} is not supported`);\n    return {state};\n  }\n\n  if (wasRuleGroup && !isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule\");\n    state = state.deleteIn(expandTreePath(path, \"children1\"));\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  if (!currentProperties) {\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  const canFix = !showErrorMessage;\n  if (isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule_group\");\n    const {canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality} = getNewValueForFieldOp(\n      config, config, currentProperties, newField, newOperator, \"field\", canFix, isEndValue, canDropArgs\n    );\n    let groupProperties = defaultGroupProperties(config, newFieldConfig).merge({\n      field: newField,\n      fieldSrc: \"field\",\n      mode: newFieldConfig.mode,\n    });\n    if (isRuleGroupExt) {\n      groupProperties = groupProperties.merge({\n        operator: newOperator,\n        value: newValue,\n        valueSrc: newValueSrc,\n        valueType: newValueType,\n      });\n    }\n    state = state.setIn(expandTreePath(path, \"children1\"), new Immutable.OrderedMap());\n    state = state.setIn(expandTreePath(path, \"properties\"), groupProperties);\n    if (newFieldConfig.initialEmptyWhere && operatorCardinality == 1) { // just `COUNT(grp) > 1` without `HAVING ..`\n      // no children\n    } else {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, newField), config);\n    }\n    state = fixPathsInTree(state);\n  } else {\n    state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n      const {\n        canReuseValue, newValue, newValueSrc, newValueType, newValueError, newFieldError, fixedField\n      } = getNewValueForFieldOp(\n        config, config, current, newField, newOperator, \"field\", canFix, isEndValue, canDropArgs\n      );\n      // const newValueErrorStr = newValueError?.join?.(\"|\");\n      let newCorrectField = newField;\n      const willFixField = (fixedField !== newField);\n      if (willFixField) {\n        newCorrectField = fixedField;\n      }\n      // tip: `newCorrectField` is SAFE to set: even if it can't be fixed, it is reverted to previous good field.\n      //      Unlike logic in `setValue()` action where we need to calc `canUpdValue`\n      // const didFieldErrorChanged = showErrorMessage ? currentFieldError != newFieldError : !!currentFieldError != !!newFieldError;\n      // const didValueErrorChanged = showErrorMessage ? currentValueErrorStr != newValueErrorStr : !!currentValueErrorStr != !!newValueErrorStr;\n      // const didErrorChanged = didFieldErrorChanged || didValueErrorChanged;\n      // isInternalValueChange = !didErrorChanged && !willFixField;\n      if (showErrorMessage) {\n        current = current.set(\"fieldError\", newFieldError);\n        current = current.set(\"valueError\", newValueError);\n      }\n      const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, newCorrectField);\n      current = current\n        .set(\"field\", newCorrectField)\n        .delete(\"fieldType\") // remove \"memory effect\"\n        .set(\"fieldSrc\", currentFieldSrc)\n        .set(\"operator\", newOperator)\n        .set(\"operatorOptions\", newOperatorOptions)\n        .set(\"value\", newValue)\n        .set(\"valueSrc\", newValueSrc)\n        .set(\"valueType\", newValueType);\n      if (!canReuseValue) {\n        current = current.delete(\"asyncListValues\");\n      }\n      return current;\n    }));\n  }\n\n  return {state};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} operator\n */\nconst setOperator = (state, path, newOperator, config) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n  const {showErrorMessage} = config.settings;\n  const properties = currentRule.get(\"properties\");\n  const children = currentRule.get(\"children1\");\n  const currentField = properties.get(\"field\");\n  const currentFieldSrc = properties.get(\"fieldSrc\");\n  const fieldConfig = getFieldConfig(config, currentField);\n  const isRuleGroup = fieldConfig?.type == \"!group\";\n  const operatorConfig = getOperatorConfig(config, newOperator, currentField);\n  const operatorCardinality = operatorConfig ? getOpCardinality(operatorConfig) : null;\n  const canFix = true;\n\n  state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n    const currentField = current.get(\"field\");\n    const currentOperatorOptions = current.get(\"operatorOptions\");\n    const _currentValue = current.get(\"value\", new Immutable.List());\n    const _currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n    const _currentOperator = current.get(\"operator\");\n\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, current, currentField, newOperator, \"operator\", canFix\n    );\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n    const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, currentField);\n\n    if (!canReuseValue) {\n      current = current\n        .delete(\"asyncListValues\");\n    }\n\n    return current\n      .set(\"operator\", newOperator)\n      .set(\"operatorOptions\", newOperatorOptions)\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n  }));\n\n  if (isRuleGroup) {\n    if (operatorCardinality == 0 && children.size == 0) {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, currentField), config);\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n */\nconst setValue = (state, path, delta, value, valueType, config, asyncListValues, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return {state};\n  }\n  const { canDropArgs, isEndValue } = _meta;\n  const {fieldSeparator, showErrorMessage} = config.settings;\n  const valueSrc = state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\")) || null;\n  if (valueSrc === \"field\" && Array.isArray(value))\n    value = value.join(fieldSeparator);\n\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  //const fieldSrc = state.getIn(expandTreePath(path, \"properties\", \"fieldSrc\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n\n  const calculatedValueType = valueType || calculateValueType(value, valueSrc, config);\n  const canFix = !showErrorMessage;\n  const [fixedValue, allErrors] = validateValue(\n    config, field, field, operator, value, calculatedValueType, valueSrc, asyncListValues, canFix, isEndValue, canDropArgs\n  );\n  const firstError = allErrors?.find(e => !e.fixed && !e.ignore);\n  const validationError = firstError ? translateValidation(firstError) : null;\n  // tip: even if canFix == false, use fixedValue, it can SAFELY fix value of select\n  //  (get exact value from listValues, not string)\n  let willFix = fixedValue !== value;\n  if (willFix) {\n    value = fixedValue;\n  }\n\n  // init lists\n  state = initEmptyValueLists(state, path, config, operatorCardinality);\n\n  // Additional validation for range values\n  const values = Array.from({length: operatorCardinality}, (_, i) =>\n    (i == delta ? value : state.getIn(expandTreePath(path, \"properties\", \"value\", i + \"\")) || null));\n  const valueSrcs = Array.from({length: operatorCardinality}, (_, i) =>\n    (state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", i + \"\")) || null));\n  const rangeErrorObj = validateRange(config, field, operator, values, valueSrcs);\n  const rangeValidationError = rangeErrorObj ? translateValidation(rangeErrorObj) : null;\n\n  const isValid = !validationError && !rangeValidationError;\n  const canUpdValue = showErrorMessage ? true : isValid || willFix; // set only good value\n  // const lastValue = state.getIn(expandTreePath(path, \"properties\", \"value\", delta));\n  // const lastError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", delta));\n  // const lastRangeError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality));\n  // const didDeltaErrorChanged = showErrorMessage ? lastError != validationError : !!lastError != !!validationError;\n  // const didRangeErrorChanged = showErrorMessage ? lastRangeError != rangeValidationError : !!lastRangeError != !!rangeValidationError;\n  // const didErrorChanged = didDeltaErrorChanged || didRangeErrorChanged;\n  // const didEmptinessChanged = !!lastValue != !!value;\n  // isInternalValueChange = !didEmptinessChanged && !didErrorChanged && !willFix;\n\n  if (canUpdValue) {\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n    if (typeof value === \"undefined\") {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta), undefined);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta), null);\n    } else {\n      if (asyncListValues) {\n        state = state.setIn(expandTreePath(path, \"properties\", \"asyncListValues\"), asyncListValues);\n      }\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta), value);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta), calculatedValueType);\n    }\n  }\n  if (showErrorMessage) {\n    // check list\n    const lastValueErrorArr = state.getIn(expandTreePath(path, \"properties\", \"valueError\"));\n    if (!lastValueErrorArr) {\n      state = state\n        .setIn(expandTreePath(path, \"properties\", \"valueError\"), new Immutable.List(new Array(operatorCardinality)));\n    }\n    // set error at delta\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), validationError);\n    // set range error\n    if (operatorCardinality >= 2) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), rangeValidationError);\n    }\n  }\n\n  return {state};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nconst setValueSrc = (state, path, delta, srcKey, config, _meta = {}) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n\n  const {showErrorMessage} = config.settings;\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  //const fieldSrc = state.getIn(expandTreePath(path, \"properties\", \"fieldSrc\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n\n  // init lists\n  state = initEmptyValueLists(state, path, config, operatorCardinality);\n\n  state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), undefined);\n  state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), null);\n  state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n\n  if (showErrorMessage) {\n    // clear value error\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), null);\n\n    // if current operator is range, clear possible range error\n    if (operatorConfig.validateValues) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), null);\n    }\n  }\n  \n  // set valueSrc\n  if (typeof srcKey === \"undefined\") {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), null);\n  } else {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), srcKey);\n  }\n\n  // maybe set default value\n  if (srcKey) {\n    const properties = state.getIn(expandTreePath(path, \"properties\"));\n    // this call should return canReuseValue = false and provide default value\n    const canFix = true;\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, properties, field, operator, \"valueSrc\", canFix\n    );\n    if (!canReuseValue && newValueSrc.get(delta) == srcKey) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), newValue.get(delta));\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), newValueType.get(delta));\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nconst setOperatorOption = (state, path, name, value) => {\n  const currentRule = state.getIn(expandTreePath(path));\n  if (!currentRule) {\n    // incorrect path\n    return state;\n  }\n  return state.setIn(expandTreePath(path, \"properties\", \"operatorOptions\", name), value);\n};\n\n/**\n * @param {Immutable.Map} state\n */\nconst checkEmptyGroups = (state, config) => {\n  const {canLeaveEmptyGroup} = config.settings;\n  if (!canLeaveEmptyGroup) {\n    state = fixEmptyGroupsInTree(state);\n  }\n  return state;\n};\n\nconst initEmptyValueLists = (state, path, config, operatorCardinality) => {\n  if (!operatorCardinality) {\n    const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n    const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n    const operatorConfig = getOperatorConfig(config, operator, field);\n    operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n  }\n\n  for (const k of [\"value\", \"valueType\", \"valueError\", \"valueSrc\"]) {\n    if (!state.getIn(expandTreePath(path, \"properties\", k))) {\n      state = state\n        .setIn(expandTreePath(path, \"properties\", k), new Immutable.List(\n          operatorCardinality ? Array.from({length: operatorCardinality}) : []\n        ));\n    }\n  }\n\n  return state;\n};\n\n// convert children deeply from JS to Immutable\nconst _addChildren1 = (config, item, children) => {\n  if (children && Array.isArray(children)) {\n    item.children1 = new Immutable.OrderedMap(\n      children.reduce((map, it) => {\n        const id1 = it.id ?? uuid();\n        const it1 = {\n          ...it,\n          properties: defaultItemProperties(config, it).merge(fromJS(it.properties) || {}),\n          id: id1\n        };\n        _addChildren1(config, it1, it1.children1);\n        //todo: guarantee order\n        return {\n          ...map,\n          [id1]: new Immutable.Map(it1)\n        };\n      }, {})\n    );\n  }\n};\n\nconst getField = (state, path) => {\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  return field;\n};\n\nconst emptyDrag = {\n  dragging: {\n    id: null,\n    x: null,\n    y: null,\n    w: null,\n    h: null\n  },\n  mousePos: {},\n  dragStart: {\n    id: null,\n  },\n};\n\nconst getActionMeta = (action, state) => {\n  if (!action || !action.type)\n    return null;\n  const actionKeysToOmit = [\n    \"config\", \"asyncListValues\"\n  ];\n  const actionTypesToIgnore = [\n    constants.SET_TREE,\n    constants.SET_DRAG_START,\n    constants.SET_DRAG_PROGRESS,\n    constants.SET_DRAG_END,\n  ];\n  let meta = mapValues(omit(action, actionKeysToOmit), applyToJS);\n  let affectedField = action.path && getField(state.tree, action.path) || action.field;\n  if (affectedField) {\n    if (affectedField?.toJS)\n      affectedField = affectedField.toJS();\n    meta.affectedField = affectedField;\n  }\n  if (actionTypesToIgnore.includes(action.type) || action.type.indexOf(\"@@redux\") == 0)\n    meta = null;\n  return meta;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {object} action\n */\nexport default (initialConfig, tree, getMemoizedTree, setLastTree, getLastConfig) => {\n  const initTree = tree;\n  const emptyState = {\n    tree: initTree, \n    ...emptyDrag\n  };\n    \n  return (state = emptyState, action) => {\n    const config = getLastConfig?.() ?? action?.config ?? initialConfig;\n    const unset = {__lastAction: undefined};\n    let set = {};\n    let actionMeta = getActionMeta(action, state);\n\n    switch (action?.type) {\n    case constants.SET_TREE: {\n      const validatedTree = getMemoizedTree(config, action.tree);\n      set.tree = validatedTree;\n      break;\n    }\n\n    case constants.ADD_CASE_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"case_group\", action.id, action.properties, config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.ADD_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"group\", action.id, action.properties, config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.REMOVE_GROUP: {\n      set.tree = removeGroup(state.tree, action.path, config);\n      break;\n    }\n\n    case constants.ADD_RULE: {\n      set.tree = addItem(state.tree, action.path, action.ruleType, action.id, action.properties, config, action.children);\n      break;\n    }\n\n    case constants.REMOVE_RULE: {\n      set.tree = removeRule(state.tree, action.path, config);\n      break;\n    }\n\n    case constants.SET_CONJUNCTION: {\n      set.tree = setConjunction(state.tree, action.path, action.conjunction);\n      break;\n    }\n\n    case constants.SET_NOT: {\n      set.tree = setNot(state.tree, action.path, action.not);\n      break;\n    }\n\n    case constants.SET_FIELD: {\n      const {state: newTree} = setField(\n        state.tree, action.path, action.field, config,\n        action.asyncListValues, action._meta\n      );\n      set.tree = newTree;\n      break;\n    }\n\n    case constants.SET_FIELD_SRC: {\n      set.tree = setFieldSrc(state.tree, action.path, action.srcKey, config);\n      break;\n    }\n\n    case constants.SET_LOCK: {\n      set.tree = setLock(state.tree, action.path, action.lock);\n      break;\n    }\n\n    case constants.SET_OPERATOR: {\n      set.tree = setOperator(state.tree, action.path, action.operator, config);\n      break;\n    }\n\n    case constants.SET_VALUE: {\n      const {state: newTree} = setValue(\n        state.tree, action.path, action.delta, action.value, action.valueType,  config,\n        action.asyncListValues, action._meta\n      );\n      set.tree = newTree;\n      break;\n    }\n\n    case constants.SET_FUNC_VALUE: {\n      const {state: newTree} = setFuncValue(\n        config, state.tree, action.path, action.delta, action.parentFuncs, \n        action.argKey, action.value, action.valueType,\n        action.asyncListValues, action._meta\n      );\n      set.tree = newTree;\n      break;\n    }\n\n    case constants.SET_VALUE_SRC: {\n      set.tree = setValueSrc(state.tree, action.path, action.delta, action.srcKey, config, action._meta);\n      break;\n    }\n\n    case constants.SET_OPERATOR_OPTION: {\n      set.tree = setOperatorOption(state.tree, action.path, action.name, action.value);\n      break;\n    }\n\n    case constants.MOVE_ITEM: {\n      set.tree = moveItem(state.tree, action.fromPath, action.toPath, action.placement, config);\n      break;\n    }\n\n    case constants.SET_DRAG_START: {\n      set.dragStart = action.dragStart;\n      set.dragging = action.dragging;\n      set.mousePos = action.mousePos;\n      break;\n    }\n\n    case constants.SET_DRAG_PROGRESS: {\n      set.mousePos = action.mousePos;\n      set.dragging = action.dragging;\n      break;\n    }\n\n    case constants.SET_DRAG_END: {\n      set.tree = checkEmptyGroups(state.tree, config);\n      set = { ...set, ...emptyDrag };\n      break;\n    }\n\n    default: {\n      break;\n    }\n    }\n\n    if (actionMeta) {\n      set.__lastAction = actionMeta;\n    }\n\n    if (setLastTree && set.tree && state.tree) {\n      setLastTree(state.tree);\n    }\n    \n    return {...state, ...unset, ...set};\n  };\n\n};\n","import Immutable, {fromJS} from \"immutable\";\nimport {toImmutableList} from \"../utils/stuff\";\nimport * as constants from \"../stores/constants\";\nimport { defaultRuleProperties, defaultGroupProperties } from \"../utils/defaultUtils\";\nimport uuid from \"../utils/uuid\";\n\n\n/**\n * @param {object} config\n * @param {Immutable.Map} tree\n */\nexport const setTree = (config, tree) => ({\n  type: constants.SET_TREE,\n  tree: tree,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addRule = (config, path, properties, ruleType = \"rule\", children = null, parentRuleGroupPath = null) => ({\n  type: constants.ADD_RULE,\n  ruleType: ruleType,\n  children: children,\n  path: toImmutableList(path),\n  id: uuid(),\n  properties: defaultRuleProperties(config, parentRuleGroupPath).merge(fromJS(properties) || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeRule = (config, path) => ({\n  type: constants.REMOVE_RULE,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addDefaultCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(fromJS(properties) || {}),\n  config: config,\n  meta: {\n    isDefaultCase: true\n  }\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(fromJS(properties) || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(fromJS(properties) || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeGroup = (config, path) => ({\n  type: constants.REMOVE_GROUP,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Array} fromPath\n * @param {Array} toPath\n * @param {String} placement, see constants PLACEMENT_*\n */\nexport const moveItem = (config, fromPath, toPath, placement) => ({\n  type: constants.MOVE_ITEM,\n  fromPath: toImmutableList(fromPath),\n  toPath: toImmutableList(toPath),\n  placement: placement,\n  config: config,\n});\n","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nexport const setConjunction = (config, path, conjunction) => ({\n  type: constants.SET_CONJUNCTION,\n  path: toImmutableList(path),\n  conjunction: conjunction\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} not\n */\nexport const setNot = (config, path, not) => ({\n  type: constants.SET_NOT,\n  path: toImmutableList(path),\n  not: not\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nexport const setLock = (config, path, lock) => ({\n  type: constants.SET_LOCK,\n  path: toImmutableList(path),\n  lock: lock\n});","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} field\n */\nexport const setField = (config, path, field, asyncListValues, _meta) => ({\n  type: constants.SET_FIELD,\n  path: toImmutableList(path),\n  field,\n  config,\n  asyncListValues,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {*} srcKey\n */\nexport const setFieldSrc = (config, path, srcKey) => ({\n  type: constants.SET_FIELD_SRC,\n  path: toImmutableList(path),\n  srcKey: srcKey,\n  config: config,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} operator\n */\nexport const setOperator = (config, path, operator) => ({\n  type: constants.SET_OPERATOR,\n  path: toImmutableList(path),\n  operator: operator,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n */\nexport const setValue = (config, path, delta, value, valueType, asyncListValues, _meta) => ({\n  type: constants.SET_VALUE,\n  path: toImmutableList(path),\n  delta,\n  value,\n  valueType,\n  asyncListValues,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nexport const setValueSrc = (config, path, delta, srcKey, _meta) => ({\n  type: constants.SET_VALUE_SRC,\n  path: toImmutableList(path),\n  delta,\n  srcKey,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {Array} parentFuncs\n * @param {string | null} argKey\n * @param {*} value\n * @param {string | \"!valueSrc\"} valueType\n * @param {*} asyncListValues\n */\nexport const setFuncValue = (config, path, delta, parentFuncs, argKey, value, valueType, asyncListValues, _meta) => ({\n  type: constants.SET_FUNC_VALUE,\n  path: toImmutableList(path),\n  delta,\n  parentFuncs,\n  argKey,\n  value,\n  valueType,\n  asyncListValues,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nexport const setOperatorOption = (config, path, name, value) => ({\n  type: constants.SET_OPERATOR_OPTION,\n  path: toImmutableList(path),\n  name: name,\n  value: value,\n  config: config\n});\n","import * as Export from \"./export\";\nimport * as Import from \"./import\";\nimport * as BasicUtils from \"./utils\";\nimport * as BasicFuncs from \"./config/funcs\";\nimport CoreConfig, { ConfigMixins } from \"./config\";\nimport TreeStore from \"./stores/tree\";\nimport * as TreeActions from \"./actions\";\nimport Immutable from \"immutable\";\n\nconst Utils = {\n  ...BasicUtils,\n  Export, Import,\n  // intrenal\n  ConfigMixins,\n  // expose import/export api to top level for convenience\n  ...Export, ...Import\n};\n\nexport {Utils, BasicFuncs, CoreConfig, TreeStore, TreeActions, Immutable};\n","import { TreeStore } from \"@react-awesome-query-builder/core\";\nexport default TreeStore;\n","import React from \"react\";\n\nexport default React.createContext(); ","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_FIELD_SRC = \"SET_FIELD_SRC\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import * as constants from \"../stores/constants\";\n\n\n/**\n * @param {Object} mousePos\n * @param {Object} dragging\n */\nexport const setDragProgress = (mousePos, dragging) => ({\n  type: constants.SET_DRAG_PROGRESS,\n  mousePos: mousePos,\n  dragging: dragging,\n});\n\n/**\n * @param {Object} dragStart\n * @param {Object} dragging\n * @param {Object} mousePos\n */\nexport const setDragStart = (dragStart, dragging, mousePos) => ({\n  type: constants.SET_DRAG_START,\n  dragStart: dragStart,\n  dragging: dragging,\n  mousePos: mousePos,\n});\n\n/**\n *\n */\nexport const setDragEnd = () => ({\n  type: constants.SET_DRAG_END,\n});\n","import { TreeActions } from \"@react-awesome-query-builder/core\";\nimport * as drag from \"./drag\";\nconst { tree, group, rule } = TreeActions;\nexport {\n  tree,\n  group,\n  rule,\n  drag\n};\n","\nexport const getOpCardinality = (opDef) => {\n  return opDef?.cardinality ?? 1;\n};\n\nexport const truncateString = (str, n, useWordBoundary) => {\n  if (!n || !str || str.length <= n) { return str; }\n  var subString = str.substr(0, n-1);\n  return (useWordBoundary \n    ? subString.substr(0, subString.lastIndexOf(\" \")) \n    : subString) + \"...\";\n};\n\nexport const immutableEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else {\n    return v1?.equals(v2);\n  }\n};\n\n// const deepEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else if (Map.isMap(v1)) {\n//     return v1.equals(v2);\n//   } else {\n//     return JSON.stringify(v1) == JSON.stringify(v2);\n//   }\n// };\n\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (a && typeof a.equals === \"function\")\n    return a.equals(b);\n  else if (typeof a === \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n\nconst isDev = () => (typeof process !== \"undefined\" && process.env && process.env.NODE_ENV == \"development\");\n\nexport const getLogger = (devMode = false) => {\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\n\nexport const logger = getLogger();\n","import {immutableEqual} from \"./stuff\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { validateAndFixTree } = Utils.Validation;\n\nexport const createValidationMemo = () => {\n  let originalTree;\n  let validatedTree;\n  let configId;\n\n  return (config, tree, oldConfig = undefined, sanitizeTree = true) => {\n    if (!tree) {\n      return null;\n    }\n    if (config.__configId === configId && (immutableEqual(tree, originalTree) || immutableEqual(tree, validatedTree))) {\n      return validatedTree;\n    } else {\n      configId = config.__configId;\n      originalTree = tree;\n      if (sanitizeTree === false) {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config, false, false, false);\n      } else {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config);\n      }\n      return validatedTree;\n    }\n  };\n};\n","import React from \"react\";\nimport mapValues from \"lodash/mapValues\";\nimport {shallowEqual} from \"./stuff\";\n\nconst getReactContainerType = (el) => {\n  if (el._reactRootContainer) {\n    return \"root\";\n  }\n  if (Object.getOwnPropertyNames(el).filter(k => k.startsWith(\"__reactContainer\")).length > 0) {\n    return \"container\";\n  }\n  return undefined;\n};\n\nconst getReactRootNodeType = (node) => {\n  if (!node) {\n    return undefined;\n  }\n  const type = getReactContainerType(node);\n  if (type !== undefined) {\n    return type;\n  } else {\n    return getReactRootNodeType(node.parentNode);\n  }\n};\n\nexport const isUsingLegacyReactDomRender = (node) => {\n  return getReactRootNodeType(node) === \"root\";\n};\n\n\nexport const liteShouldComponentUpdate = (self, config) => (nextProps, nextState) => {\n  const prevProps = self.props;\n  const prevState = self.state;\n\n  let should = nextProps != prevProps || nextState != prevState;\n  if (should) {\n    if (prevState == nextState && prevProps != nextProps) {\n      let chs = [];\n      for (let k in nextProps) {\n        let changed = (nextProps[k] != prevProps[k]);\n        if (changed) {\n          if (config[k] == \"ignore\")\n            changed = false;\n          else if (config[k] == \"shallow_deep\")\n            changed = !shallowEqual(nextProps[k], prevProps[k], true);\n          else if (config[k] == \"shallow\")\n            changed = !shallowEqual(nextProps[k], prevProps[k]);\n          else if (typeof config[k] == \"function\")\n            changed = config[k](nextProps[k], prevProps[k], nextProps, prevProps);\n        }\n        if (changed)\n          chs.push(k);\n      }\n      if (!chs.length)\n        should = false;\n    }\n  }\n  return should;\n};\n\nexport const pureShouldComponentUpdate = (self) => function(nextProps, nextState) {\n  return (\n    !shallowEqual(self.props, nextProps)\n    || !shallowEqual(self.state, nextState)\n  );\n};\n\nconst canUseOldComponentWillReceiveProps = () => {\n  const v = React.version.split(\".\").map(parseInt.bind(null, 10));\n  return v[0] == 16 && v[1] < 3 || v[0] < 16;\n};\n\nexport const useOnPropsChanged = (obj) => {\n  // 1. `shouldComponentUpdate` should be called after `componentWillReceiveProps`\n  // 2. `shouldComponentUpdate` should not be used for PureComponent\n\n  // Because `useOnPropsChanged` can only be applied to `Component` not `PureComponent`, make it pure now\n  if (!obj.shouldComponentUpdate) {\n    obj.shouldComponentUpdate = pureShouldComponentUpdate(obj);\n  }\n\n  if (canUseOldComponentWillReceiveProps()) {\n    // Use old method\n    obj.componentWillReceiveProps = (nextProps) => {\n      obj.onPropsChanged(nextProps);\n    };\n  } else {\n    // Simulate `componentWillReceiveProps` with `shouldComponentUpdate`\n    const origShouldComponentUpdate = obj.shouldComponentUpdate;\n    const newShouldComponentUpdate = function(nextProps, nextState) {\n      const shouldNotify = !shallowEqual(obj.props, nextProps);\n      if (shouldNotify) {\n        obj.onPropsChanged(nextProps);\n      }\n      const shouldUpdate = origShouldComponentUpdate.call(obj, nextProps, nextState);\n      return shouldUpdate;\n    };\n    obj.shouldComponentUpdate = newShouldComponentUpdate.bind(obj);\n  }\n};\n\nexport const bindActionCreators = (actionCreators, config, dispatch) =>\n  mapValues(actionCreators, (actionCreator) =>\n    (...args) => dispatch(actionCreator(config, ...args))\n  );\n","import React, { Component } from \"react\";\nimport merge from \"lodash/merge\";\nimport {connect} from \"react-redux\";\nimport context from \"../stores/context\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../actions\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {useOnPropsChanged, liteShouldComponentUpdate, bindActionCreators} from \"../utils/reactUtils\";\n\n\nclass Query extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    onChange: PropTypes.func,\n    onInit: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    tree: PropTypes.any, //instanceOf(Immutable.Map)\n    //dispatch: PropTypes.func.isRequired,\n    //__lastAction\n    //getMemoizedTree: PropTypes.func.isRequired,\n    //getBasicConfig: PropTypes.func.isRequired,\n    //sanitizeTree\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this._updateActions(props);\n\n    // For preventive validation (tree and config consistency)\n    // When config has changed from QueryContainer, \n    //  but new dispatched validated tree value is not in redux store yet (tree prop is old)\n    this.validatedTree = props.getMemoizedTree(props.config, props.tree, undefined, props.sanitizeTree);\n    this.oldValidatedTree = this.validatedTree;\n\n    const basicConfig = props.getBasicConfig(props.config);\n    props.onInit && props.onInit(this.validatedTree, basicConfig, undefined, this.actions);\n  }\n\n  _updateActions (props) {\n    const {config, dispatch} = props;\n    this.actions = bindActionCreators({...actions.tree, ...actions.group, ...actions.rule}, config, dispatch);\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    tree: (nextValue) => {\n      if (nextValue === this.oldValidatedTree && this.oldValidatedTree === this.validatedTree) {\n        // Got value dispatched from QueryContainer\n        // Ignore, because we've just rendered it\n        return false;\n      }\n      return true;\n    }\n  });\n\n  onPropsChanged(nextProps) {\n    const {onChange} = nextProps;\n    const oldConfig = this.props.config;\n    const newTree = nextProps.tree;\n    const oldTree = this.props.tree;\n    const newConfig = nextProps.config;\n\n    this.oldValidatedTree = this.validatedTree;\n    this.validatedTree = newTree;\n    if (oldConfig !== newConfig) {\n      this._updateActions(nextProps);\n      this.validatedTree = nextProps.getMemoizedTree(newConfig, newTree, oldConfig);\n    }\n\n    const validatedTreeChanged = !immutableEqual(this.validatedTree, this.oldValidatedTree);\n    if (validatedTreeChanged) {\n      const newBasicConfig = nextProps.getBasicConfig(newConfig);\n      onChange && onChange(this.validatedTree, newBasicConfig, nextProps.__lastAction, this.actions);\n    }\n  }\n\n  render() {\n    const {config, renderBuilder, dispatch} = this.props;\n    const builderProps = {\n      tree: this.validatedTree,\n      actions: this.actions,\n      config: config,\n      dispatch: dispatch,\n    };\n\n    return renderBuilder(builderProps);\n  }\n}\n\n\nconst ConnectedQuery = connect(\n  (state) => {\n    return {\n      tree: state.tree,\n      __lastAction: state.__lastAction,\n    };\n  },\n  null,\n  null,\n  {\n    context\n  }\n)(Query);\nConnectedQuery.displayName = \"ConnectedQuery\";\n\n\nexport default ConnectedQuery;\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport treeStoreReducer from \"../stores/tree\";\nimport context from \"../stores/context\";\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport * as actions from \"../actions\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {createValidationMemo} from \"../utils/validationMemo\";\nimport {liteShouldComponentUpdate, useOnPropsChanged} from \"../utils/reactUtils\";\nimport ConnectedQuery from \"./Query\";\nconst {defaultRoot} = Utils.DefaultUtils;\nconst {createConfigMemo} = Utils.ConfigUtils;\n\n\nexport default class QueryContainer extends Component {\n  static propTypes = {\n    //config\n    conjunctions: PropTypes.object.isRequired,\n    fields: PropTypes.object.isRequired,\n    types: PropTypes.object.isRequired,\n    operators: PropTypes.object.isRequired,\n    widgets: PropTypes.object.isRequired,\n    settings: PropTypes.object.isRequired,\n    ctx: PropTypes.object.isRequired,\n\n    onChange: PropTypes.func,\n    onInit: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    value: PropTypes.any, //instanceOf(Immutable.Map)\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    useOnPropsChanged(this);\n\n    const { getExtendedConfig, getBasicConfig, clearConfigMemo } = createConfigMemo({\n      reactIndex: this._reactInternals?.index ?? -1,\n      maxSize: 2, // current and prev\n      canCompile: true,\n    });\n    this.getMemoizedConfig = getExtendedConfig;\n    this.getBasicConfig = getBasicConfig;\n    this.clearConfigMemo = clearConfigMemo;\n    this.getMemoizedTree = createValidationMemo();\n    \n    const config = this.getMemoizedConfig(props);\n    const {shouldCreateEmptyGroup} = config.settings;\n    const canAddDefaultRule = !shouldCreateEmptyGroup; // if prop `value` is not provided, can add default/empty rule?\n    const emptyTree = defaultRoot(config, canAddDefaultRule);\n    const sanitizeTree = !!props.value;\n    const tree = props.value || emptyTree;\n    const validatedTree = this.getMemoizedTree(config, tree, undefined, sanitizeTree);\n\n    const reducer = treeStoreReducer(config, validatedTree, this.getMemoizedTree, this.setLastTree, this.getConfig);\n    const store = createStore(reducer);\n\n    this.config = config;\n    this.state = {\n      store\n    };\n    this.QueryWrapper = (pr) => config.settings.renderProvider(pr, config.ctx);\n  }\n\n  componentWillUnmount() {\n    this.clearConfigMemo();\n  }\n\n  setLastTree = (lastTree) => {\n    if (this.prevTree) {\n      this.prevprevTree = this.prevTree;\n    }\n    this.prevTree = lastTree;\n  };\n\n  getConfig = () => {\n    return this.config;\n  };\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    value: (nextValue, prevValue) => { return false; }\n  });\n\n  onPropsChanged(nextProps) {\n    // compare configs\n    const prevProps = this.props;\n    const oldConfig = this.config;\n    const nextConfig = this.getMemoizedConfig(nextProps);\n    const isConfigChanged = oldConfig !== nextConfig;\n\n    // compare trees\n    const storeValue = this.state.store.getState().tree;\n    const isTreeChanged = !immutableEqual(nextProps.value, this.props.value) && !immutableEqual(nextProps.value, storeValue);\n    const currentTree = isTreeChanged ? (nextProps.value || defaultRoot(nextProps)) : storeValue;\n    const isTreeTrulyChanged = isTreeChanged && !immutableEqual(nextProps.value, this.prevTree) && !immutableEqual(nextProps.value, this.prevprevTree);\n    this.sanitizeTree = isTreeTrulyChanged || isConfigChanged;\n\n    if (isConfigChanged) {\n      if (prevProps.settings.renderProvider !== nextProps.settings.renderProvider) {\n        this.QueryWrapper = (props) => nextConfig.settings.renderProvider(props, nextConfig.ctx);\n      }\n      this.config = nextConfig;\n    }\n    \n    if (isTreeChanged || isConfigChanged) {\n      const validatedTree = this.getMemoizedTree(nextConfig, currentTree, oldConfig, this.sanitizeTree);\n      //return Promise.resolve().then(() => {\n      this.state.store.dispatch(\n        actions.tree.setTree(nextConfig, validatedTree)\n      );\n      //});\n    }\n  }\n\n  render() {\n    // `get_children` is deprecated!\n    const {renderBuilder, get_children, onChange, onInit} = this.props;\n    const {store} = this.state;\n    const config = this.config;\n    const QueryWrapper = this.QueryWrapper;\n\n    return (\n      <QueryWrapper config={config}>\n        <Provider store={store} context={context}>\n          <ConnectedQuery\n            config={config}\n            getMemoizedTree={this.getMemoizedTree}\n            getBasicConfig={this.getBasicConfig}\n            sanitizeTree={this.sanitizeTree}\n            onChange={onChange}\n            onInit={onInit}\n            renderBuilder={renderBuilder || get_children}\n          />\n        </Provider>\n      </QueryWrapper>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate} from \"../../utils/reactUtils\";\nimport {connect} from \"react-redux\";\nimport classNames from \"classnames\";\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nconst createRuleContainer = (Rule) => \n  class RuleContainer extends Component {\n    static propTypes = {\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      config: PropTypes.object.isRequired,\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      operator: PropTypes.string,\n      field: PropTypes.any,\n      fieldSrc: PropTypes.string,\n      fieldType: PropTypes.string,\n      actions: PropTypes.object.isRequired, //{removeRule: Function, setField, setFieldSrc, setOperator, setOperatorOption, setValue, setValueSrc, ...}\n      onDragStart: PropTypes.func,\n      value: PropTypes.any, //depends on widget\n      valueSrc: PropTypes.any,\n      asyncListValues: PropTypes.array,\n      valueError: PropTypes.any,\n      fieldError: PropTypes.string,\n      operatorOptions: PropTypes.object,\n      reordableNodesCnt: PropTypes.number,\n      parentField: PropTypes.string, //from RuleGroup\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      \n      this.dummyFn.isDummyFn = true;\n    }\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeRule(this.props.path);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    setField = (field, asyncListValues, _meta) => {\n      this.props.actions.setField(this.props.path, field, asyncListValues, _meta);\n    };\n\n    setFieldSrc = (srcKey) => {\n      this.props.actions.setFieldSrc(this.props.path, srcKey);\n    };\n\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    setOperatorOption = (name, value) => {\n      this.props.actions.setOperatorOption(this.props.path, name, value);\n    };\n\n    setValue = (delta, value, type, asyncListValues, _meta) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, _meta);\n    };\n\n    setValueSrc = (delta, srcKey, _meta) => {\n      this.props.actions.setValueSrc(this.props.path, delta, srcKey, _meta);\n    };\n\n    // can be used for both LHS and LHS\n    setFuncValue = (delta, parentFuncs, argKey, value, type, asyncListValues, _meta) => {\n      this.props.actions.setFuncValue(this.props.path, delta, parentFuncs, argKey, value, type, asyncListValues, _meta);\n    };\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    render() {\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const fieldConfig = getFieldConfig(this.props.config, this.props.field);\n      const fieldType = this.props.fieldType || fieldConfig?.type || null;\n      const {showErrorMessage} = this.props.config.settings;\n      const _isGroup = fieldConfig && fieldConfig.type == \"!struct\";\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n\n      const {valueError, fieldError} = this.props;\n      const oneError = [fieldError, ...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n      const hasError = oneError != null && showErrorMessage;\n\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"rule-container\", hasError ? \"rule-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Rule\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              setField={this.dummyFn}\n              setFieldSrc={this.dummyFn}\n              setFuncValue={this.dummyFn}\n              setOperator={this.dummyFn}\n              setOperatorOption={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              setValue={this.dummyFn}\n              setValueSrc={this.dummyFn}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueType={this.props.valueType || null}\n              valueError={this.props.valueError || null}\n              fieldError={this.props.fieldError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Rule\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setFieldSrc={isInDraggingTempo ? this.dummyFn : this.setFieldSrc}\n              setFuncValue={isInDraggingTempo ? this.dummyFn : this.setFuncValue}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setOperatorOption={isInDraggingTempo ? this.dummyFn : this.setOperatorOption}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              setValueSrc={isInDraggingTempo ? this.dummyFn : this.setValueSrc}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueType={this.props.valueType || null}\n              valueError={this.props.valueError || null}\n              fieldError={this.props.fieldError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Rule) => {\n  const ConnectedRuleContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createRuleContainer(Rule));\n  ConnectedRuleContainer.displayName = \"ConnectedRuleContainer\";\n\n  return ConnectedRuleContainer;\n};\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport {connect} from \"react-redux\";\nimport {logger} from \"../../utils/stuff\";\nimport context from \"../../stores/context\";\nimport * as constants from \"../../stores/constants\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../../actions\";\nimport {pureShouldComponentUpdate, useOnPropsChanged, isUsingLegacyReactDomRender} from \"../../utils/reactUtils\";\nconst {clone} = Utils;\nconst {getFlatTree} = Utils.TreeUtils;\n\nlet _isReorderingTree = false;\n\nconst createSortableContainer = (Builder, CanMoveFn = null) => \n  class SortableContainer extends Component {\n    static propTypes = {\n      tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n      actions: PropTypes.object.isRequired, // {moveItem: Function, ..}\n      //... see Builder\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.onPropsChanged(props);\n    }\n\n    onPropsChanged(nextProps) {\n      this.tree = getFlatTree(nextProps.tree);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (changed) {\n              //don't render <Builder> on dragging - appropriate redux-connected components will do it\n              if(k != \"dragging\" && k != \"mousePos\")\n                chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    componentDidUpdate(_prevProps, _prevState) {\n      let dragging = this.props.dragging;\n      let startDragging = this.props.dragStart;\n      _isReorderingTree = false;\n      if (startDragging && startDragging.id) {\n        dragging.itemInfo = this.tree.items[dragging.id];\n        if (dragging.itemInfo) {\n          if (dragging.itemInfo.index != startDragging.itemInfo.index || dragging.itemInfo.parent != startDragging.itemInfo.parent) {\n            const treeEl = startDragging.treeEl;\n            const treeElContainer = startDragging.treeElContainer;\n            const plhEl = this._getPlaceholderNodeEl(treeEl, true);\n            if (plhEl) {\n              const plX = plhEl.getBoundingClientRect().left + window.scrollX;\n              const plY = plhEl.getBoundingClientRect().top + window.scrollY;\n              const oldPlX = startDragging.plX;\n              const oldPlY = startDragging.plY;\n              const scrollTop = treeElContainer.scrollTop;\n              startDragging.plX = plX;\n              startDragging.plY = plY;\n              startDragging.itemInfo = clone(dragging.itemInfo);\n              startDragging.y = plhEl.offsetTop;\n              startDragging.x = plhEl.offsetLeft;\n              startDragging.clientY += (plY - oldPlY);\n              startDragging.clientX += (plX - oldPlX);\n              if (treeElContainer != document.body)\n                startDragging.scrollTop = scrollTop;\n\n              this.onDrag(this.props.mousePos, false);\n            }\n          }\n        }\n      }\n    }\n\n    _getNodeElById (treeEl, indexId, ignoreCache = false) {\n      if (indexId == null)\n        return null;\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[indexId];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      el = treeEl.querySelector('.group-or-rule-container[data-id=\"'+indexId+'\"]');\n      this._cacheEls[indexId] = el;\n      return el;\n    }\n\n    _getDraggableNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"draggable\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-draggable\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"draggable\"] = el;\n      return el;\n    }\n\n    _getPlaceholderNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"placeholder\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-placeholder\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"placeholder\"] = el;\n      return el;\n    }\n\n    _isScrollable(node) {\n      const overflowY = window.getComputedStyle(node)[\"overflow-y\"];\n      return (overflowY === \"scroll\" || overflowY === \"auto\") && (node.scrollHeight > node.offsetHeight);\n    }\n\n    _getScrollParent(node) {\n      if (node == null)\n        return null;\n    \n      if (node === document.body || this._isScrollable(node)) {\n        return node;\n      } else {\n        return this._getScrollParent(node.parentNode);\n      }\n    }\n\n    _getEventTarget = (e, dragStart) => {\n      return e && e.__mocked_window || document.body || window;\n    };\n\n    onDragStart = (id, dom, e) => {\n      let treeEl = dom.closest(\".query-builder\");\n      if (this._isUsingLegacyReactDomRender === undefined) {\n        this._isUsingLegacyReactDomRender = isUsingLegacyReactDomRender(treeEl);\n      }\n      document.body.classList.add(\"qb-dragging\");\n      treeEl.classList.add(\"qb-dragging\");\n      let treeElContainer = treeEl.closest(\".query-builder-container\") || treeEl;\n      treeElContainer = this._getScrollParent(treeElContainer) || document.body;\n      const scrollTop = treeElContainer.scrollTop;\n      \n      const _dragEl = this._getDraggableNodeEl(treeEl);\n      const _plhEl = this._getPlaceholderNodeEl(treeEl);\n\n      const tmpAllGroups = treeEl.querySelectorAll(\".group--children\");\n      const anyGroup = tmpAllGroups.length ? tmpAllGroups[0] : null;\n      let groupPadding;\n      if (anyGroup) {\n        groupPadding = window.getComputedStyle(anyGroup, null).getPropertyValue(\"padding-left\");\n        groupPadding = parseInt(groupPadding);\n      }\n\n      const dragging = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        w: dom.offsetWidth,\n        h: dom.offsetHeight,\n        itemInfo: this.tree.items[id],\n        paddingLeft: groupPadding,\n      };\n      const dragStart = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        scrollTop: scrollTop,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        itemInfo: clone(this.tree.items[id]),\n        treeEl: treeEl,\n        treeElContainer: treeElContainer,\n      };\n      const mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n\n      const target = this._getEventTarget(e, dragStart);\n      this.eventTarget = target;\n      target.addEventListener(\"mousemove\", this.onDrag);\n      target.addEventListener(\"mouseup\", this.onDragEnd);\n\n      this.props.setDragStart(dragStart, dragging, mousePos);\n    };\n\n\n    onDrag = (e, doHandleDrag = true) => {\n      let dragging = Object.assign({}, this.props.dragging);\n      let startDragging = this.props.dragStart;\n      const paddingLeft = dragging.paddingLeft; //this.props.paddingLeft;\n      const treeElContainer = startDragging.treeElContainer;\n      const scrollTop = treeElContainer.scrollTop;\n      dragging.itemInfo = this.tree.items[dragging.id];\n      if (!dragging.itemInfo) {\n        return;\n      }\n\n      let mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n      const startMousePos = {\n        clientX: startDragging.clientX,\n        clientY: startDragging.clientY,\n      };\n\n      if (e.__mock_dom) {\n        const treeEl = startDragging.treeEl;\n        const dragEl = this._getDraggableNodeEl(treeEl);\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        e.__mock_dom({treeEl, dragEl, plhEl});\n      }\n\n      //first init plX/plY\n      if (!startDragging.plX) {\n        const treeEl = startDragging.treeEl;\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        if (plhEl) {\n          startDragging.plX = plhEl.getBoundingClientRect().left + window.scrollX;\n          startDragging.plY = plhEl.getBoundingClientRect().top + window.scrollY;\n        }\n      }\n\n      const startX = startDragging.x;\n      const startY = startDragging.y;\n      const startClientX = startDragging.clientX;\n      const startClientY = startDragging.clientY;\n      const startScrollTop = startDragging.scrollTop;\n      const pos = {\n        x: startX + (e.clientX - startClientX),\n        y: startY + (e.clientY - startClientY) + (scrollTop - startScrollTop)\n      };\n      dragging.x = pos.x;\n      dragging.y = pos.y;\n      dragging.paddingLeft = paddingLeft;\n      dragging.mousePos = mousePos;\n      dragging.startMousePos = startMousePos;\n\n\n      this.props.setDragProgress(mousePos, dragging);\n\n      const moved = doHandleDrag ? this.handleDrag(dragging, e, CanMoveFn) : false;\n\n      if (!moved) {\n        if (e.preventDefault)\n          e.preventDefault();\n      }\n    };\n\n    onDragEnd = () => {\n      let treeEl = this.props.dragStart.treeEl;\n\n      this.props.setDragEnd();\n\n      treeEl.classList.remove(\"qb-dragging\");\n      document.body.classList.remove(\"qb-dragging\");\n      this._cacheEls = {};\n\n      const target = this.eventTarget || this._getEventTarget();\n      target.removeEventListener(\"mousemove\", this.onDrag);\n      target.removeEventListener(\"mouseup\", this.onDragEnd);\n    };\n    \n\n    handleDrag (dragInfo, e, canMoveFn) {\n      const canMoveBeforeAfterGroup = true;\n      const itemInfo = dragInfo.itemInfo;\n      const paddingLeft = dragInfo.paddingLeft;\n\n      let moveInfo = null;\n      const treeEl = this.props.dragStart.treeEl;\n      const dragId = dragInfo.id;\n      const dragEl = this._getDraggableNodeEl(treeEl);\n      const plhEl = this._getPlaceholderNodeEl(treeEl);\n      let dragRect, plhRect, hovRect, treeRect;\n      if (dragEl && plhEl) {\n        dragRect = dragEl.getBoundingClientRect();\n        plhRect = plhEl.getBoundingClientRect();\n        if (!plhRect.width) {\n          return;\n        }\n        let dragDirs = {hrz: 0, vrt: 0};\n        if (dragRect.top < plhRect.top)\n          dragDirs.vrt = -1; //up\n        else if (dragRect.bottom > plhRect.bottom)\n          dragDirs.vrt = +1; //down\n        if (dragRect.left > plhRect.left)\n          dragDirs.hrz = +1; //right\n        else if (dragRect.left < plhRect.left)\n          dragDirs.hrz = -1; //left\n\n        treeRect = treeEl.getBoundingClientRect();\n        const trgCoord = {\n          x: treeRect.left + (treeRect.right - treeRect.left) / 2,\n          y: dragDirs.vrt >= 0 ? dragRect.bottom : dragRect.top,\n        };\n        let hovCNodeEl;\n        if (e.__mocked_hov_container) {\n          hovCNodeEl = e.__mocked_hov_container;\n        } else {\n          const hovNodeEl = document.elementFromPoint(trgCoord.x, trgCoord.y-1);\n          hovCNodeEl = hovNodeEl ? hovNodeEl.closest(\".group-or-rule-container\") : null;\n          if (!hovCNodeEl && hovNodeEl && hovNodeEl.classList.contains(\"query-builder-container\")) {\n            // fix 2022-01-24 - get root .group-or-rule-container\n            const rootGroupContainer = hovNodeEl?.firstChild?.firstChild;\n            if (rootGroupContainer && rootGroupContainer.classList.contains(\"group-or-rule-container\")) {\n              hovCNodeEl = rootGroupContainer;\n            }\n          }\n        }\n        if (!hovCNodeEl) {\n          logger.log(\"out of tree bounds!\");\n        } else {\n          const isGroup = hovCNodeEl.classList.contains(\"group-container\");\n          const hovNodeId = hovCNodeEl.getAttribute(\"data-id\");\n          const hovEl = hovCNodeEl;\n          let doAppend = false;\n          let doPrepend = false;\n          if (hovEl) {\n            hovRect = hovEl.getBoundingClientRect();\n            const hovHeight = hovRect.bottom - hovRect.top;\n            const hovII = this.tree.items[hovNodeId];\n            if (!hovII) {\n              throw new Error(\"There is an issue with rendering. If you use Next.js, please check getServerSideProps() method.\");\n            }\n            let trgRect = null,\n              trgEl = null,\n              trgII = null,\n              altII = null; //for canMoveBeforeAfterGroup\n\n            if (dragDirs.vrt == 0) {\n              trgII = itemInfo;\n              trgEl = plhEl;\n              if (trgEl)\n                trgRect = trgEl.getBoundingClientRect();\n            } else {\n              if (isGroup) {\n                if (dragDirs.vrt > 0) { //down\n                  //take group header (for prepend only)\n                  const hovInnerEl = hovCNodeEl.getElementsByClassName(\"group--header\");\n                  const hovEl2 = hovInnerEl.length ? hovInnerEl[0] : null;\n                  if (hovEl2) {\n                    const hovRect2 = hovEl2.getBoundingClientRect();\n                    const hovHeight2 = hovRect2.bottom - hovRect2.top;\n                    const isOverHover = ((dragRect.bottom - hovRect2.top) > hovHeight2*3/4);\n                    if (isOverHover && hovII.top > dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect2;\n                      trgEl = hovEl2;\n                      doPrepend = true;\n                    }\n                  }\n                } else if (dragDirs.vrt < 0) { //up\n                  if (hovII.lev >= itemInfo.lev) {\n                    //take whole group\n                    const isClimbToHover = ((hovRect.bottom - dragRect.top) >= 2);\n                    if (isClimbToHover && hovII.top < dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                      doAppend = true;\n                    }\n                  }\n                }\n                if (!doPrepend && !doAppend || canMoveBeforeAfterGroup) {\n                  //take whole group and check if we can move before/after group\n                  const isOverHover = (dragDirs.vrt < 0 //up\n                    ? ((hovRect.bottom - dragRect.top) > (hovHeight-5))\n                    : ((dragRect.bottom - hovRect.top) > (hovHeight-5)));\n                  if (isOverHover) {\n                    if (!doPrepend && !doAppend) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                    }\n                    if (canMoveBeforeAfterGroup) {\n                      altII = hovII;\n                    }\n                  }\n                }\n              } else {\n                //check if we can move before/after group\n                const isOverHover = (dragDirs.vrt < 0 //up\n                  ? ((hovRect.bottom - dragRect.top) > hovHeight/2)\n                  : ((dragRect.bottom - hovRect.top) > hovHeight/2));\n                if (isOverHover) {\n                  trgII = hovII;\n                  trgRect = hovRect;\n                  trgEl = hovEl;\n                }\n              }\n            }\n\n            const isSamePos = (trgII && trgII.id == dragId);\n            if (trgRect) {\n              const dragLeftOffset = dragRect.left - treeRect.left;\n              const trgLeftOffset = trgRect.left - treeRect.left;\n              const _trgLev = trgLeftOffset / paddingLeft;\n              const dragLev = Math.max(0, Math.round(dragLeftOffset / paddingLeft));\n\n              //find all possible moves\n              let availMoves = [];\n              let altMoves = []; //alternatively can move after/before group, if can't move into it\n              if (isSamePos) {\n                //do nothing\n              } else {\n                if (isGroup) {\n                  if (doAppend) {\n                    availMoves.push([constants.PLACEMENT_APPEND, trgII, trgII.lev+1]);\n                  } else if (doPrepend) {\n                    availMoves.push([constants.PLACEMENT_PREPEND, trgII, trgII.lev+1]);\n                  }\n                  //alt\n                  if (canMoveBeforeAfterGroup && altII) {\n                    // fix 2022-01-24: do prepend/append instead of before/after for root\n                    const isToRoot = altII.lev == 0;\n                    // fix 2022-01-25: fix prepend/append instead of before/after for case_group\n                    const isToCase = altII.type == \"case_group\" && itemInfo.type != \"case_group\";\n                    let prevCaseId = altII.prev && this.tree.items[altII.prev].caseId;\n                    let nextCaseId = altII.next && this.tree.items[altII.next].caseId;\n                    if (itemInfo.caseId == prevCaseId)\n                      prevCaseId = null;\n                    if (itemInfo.caseId == nextCaseId)\n                      nextCaseId = null;\n                    const prevCase = prevCaseId && this.tree.items[prevCaseId];\n                    const nextCase = nextCaseId && this.tree.items[nextCaseId];\n\n                    if (dragDirs.vrt > 0) { //down\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_APPEND, altII, altII.lev+1]);\n                      } else if (isToCase && nextCase) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, nextCase, nextCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_AFTER, altII, altII.lev]);\n                      }\n                    } else if (dragDirs.vrt < 0) { //up\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, altII, altII.lev+1]);\n                      } else if (isToCase && prevCase) {\n                        altMoves.push([constants.PLACEMENT_APPEND, prevCase, prevCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_BEFORE, altII, altII.lev]);\n                      }\n                    }\n                  }\n                }\n                if (!doAppend && !doPrepend) {\n                  if (dragDirs.vrt < 0) { //up\n                    availMoves.push([constants.PLACEMENT_BEFORE, trgII, trgII.lev]);\n                  } else if (dragDirs.vrt > 0) { //down\n                    availMoves.push([constants.PLACEMENT_AFTER, trgII, trgII.lev]);\n                  }\n                }\n              }\n              \n              //add case\n              const addCaseII = am => {\n                const toII = am[1];\n                const fromCaseII = itemInfo.caseId ? this.tree.items[itemInfo.caseId] : null;\n                const toCaseII = toII.caseId ? this.tree.items[toII.caseId] : null;\n                return [...am, fromCaseII, toCaseII];\n              };\n              availMoves = availMoves.map(addCaseII);\n              altMoves = altMoves.map(addCaseII);\n\n              //sanitize\n              availMoves = availMoves.filter(am => {\n                const placement = am[0];\n                const trg = am[1];\n                if ((placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) && trg.parent == null)\n                  return false;\n                if (trg.collapsed && (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND))\n                  return false;\n\n                let isInside = (trg.id == itemInfo.id);\n                if (!isInside) {\n                  let tmp = trg;\n                  while (tmp.parent) {\n                    tmp = this.tree.items[tmp.parent];\n                    if (tmp.id == itemInfo.id) {\n                      isInside = true;\n                      break;\n                    }\n                  }\n                }\n                return !isInside;\n              }).map(am => {\n                const placement = am[0],\n                  toII = am[1],\n                  _lev = am[2],\n                  _fromCaseII = am[3],\n                  _toCaseII = am[4];\n                let toParentII = null;\n                if (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND)\n                  toParentII = toII;\n                else\n                  toParentII = this.tree.items[toII.parent];\n                if (toParentII && toParentII.parent == null)\n                  toParentII = null;\n                am[5] = toParentII;\n                return am;\n              });\n\n              let bestMode = null;\n              let filteredMoves = availMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              if (canMoveBeforeAfterGroup && filteredMoves.length == 0 && altMoves.length > 0) {\n                filteredMoves = altMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              }\n              const levs = filteredMoves.map(am => am[2]);\n              const curLev = itemInfo.lev;\n              const allLevs = levs.concat(curLev);\n              let closestDragLev = null;\n              if (allLevs.indexOf(dragLev) != -1)\n                closestDragLev = dragLev;\n              else if (dragLev > Math.max(...allLevs))\n                closestDragLev = Math.max(...allLevs);\n              else if (dragLev < Math.min(...allLevs))\n                closestDragLev = Math.min(...allLevs);\n              bestMode = filteredMoves.find(am => am[2] == closestDragLev);\n              if (!isSamePos && !bestMode && filteredMoves.length)\n                bestMode = filteredMoves[0];\n              moveInfo = bestMode;\n            }\n          }\n        }\n      }\n\n      if (moveInfo) {\n        this.move(itemInfo, moveInfo[1], moveInfo[0], moveInfo[3]);\n\n        // logger.log(\"DRAG-N-DROP\", JSON.stringify({\n        //   dragRect,\n        //   plhRect,\n        //   treeRect,\n        //   hovRect,\n        //   startMousePos: dragInfo.startMousePos,\n        //   mousePos: dragInfo.mousePos,\n        // }));\n        return true;\n      }\n\n      return false;\n    }\n\n    canMove (fromII, toII, placement, fromCaseII, toCaseII, toParentII, canMoveFn) {\n      if (!fromII || !toII)\n        return false;\n      if (fromII.id === toII.id)\n        return false;\n\n      const { canRegroup, canRegroupCases, maxNesting, maxNumberOfRules, canLeaveEmptyCase } = this.props.config.settings;\n      const newLev = toParentII ? toParentII.lev + 1 : toII.lev;\n      const newDepthLev = newLev + (fromII.depth || 0);\n      const isBeforeAfter = placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER;\n      const isPend = placement == constants.PLACEMENT_PREPEND || placement == constants.PLACEMENT_APPEND;\n      const isLev1 = isBeforeAfter && toII.lev == 1 || isPend && toII.lev == 0;\n      const isParentChange = fromII.parent != toII.parent;\n      const isStructChange = isPend || isParentChange;\n      // can't move `case_group` anywhere but before/after anoter `case_group`\n      const isForbiddenStructChange = fromII.type == \"case_group\" && !isLev1\n        // can't restruct `rule_group`\n        || fromII.parentType == \"rule_group\" || toII.type == \"rule_group\" || toII.parentType == \"rule_group\" \n        // only `case_group` can be placed under `switch_group`\n        || fromII.type != \"case_group\" && toII.type == \"case_group\" && isBeforeAfter\n        || fromII.type != \"case_group\" && toII.type == \"switch_group\"\n        // can't move rule/group to another case\n        || !canRegroupCases && fromII.caseId != toII.caseId;\n      const isLockedChange = toII.isLocked || fromII.isLocked || toParentII && toParentII.isLocked;\n      \n      if (maxNesting && newDepthLev > maxNesting)\n        return false;\n      \n      if (isStructChange && (!canRegroup || isForbiddenStructChange || isLockedChange))\n        return false;\n      \n      if (fromII.type != \"case_group\" && fromII.caseId != toII.caseId) {\n        const isLastFromCase = fromCaseII ? fromCaseII._height == 2 : false;\n        const newRulesInTargetCase = toCaseII ? toCaseII.atomicRulesCountInCase + 1 : 0;\n        if (maxNumberOfRules && newRulesInTargetCase > maxNumberOfRules)\n          return false;\n        if (isLastFromCase && !canLeaveEmptyCase)\n          return false;\n      }\n\n      if (fromII.type == \"case_group\" && (\n        fromII.isDefaultCase || toII.isDefaultCase\n        || toII.type == \"switch_group\" && placement == constants.PLACEMENT_APPEND\n      )) {\n        // leave default case alone\n        return false;\n      }\n\n      let res = true;\n      if (canMoveFn) {\n        res = canMoveFn(fromII.node.toJS(), toII.node.toJS(), placement, toParentII ? toParentII.node.toJS() : null);\n      }\n      return res;\n    }\n\n    move (fromII, toII, placement, toParentII) {\n      if (!this._isUsingLegacyReactDomRender) {\n        _isReorderingTree = true;\n      }\n      //logger.log(\"move\", fromII, toII, placement, toParentII);\n      this.props.actions.moveItem(fromII.path, toII.path, placement);\n    }\n\n    render() {\n      return <Builder\n        {...this.props}\n        onDragStart={this.onDragStart}\n      />;\n    }\n  };\n\n\nexport default (Builder, CanMoveFn = null) => {\n  const ConnectedSortableContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n        dragStart: state.dragStart,\n        mousePos: state.mousePos,\n      };\n    }, {\n      setDragStart: actions.drag.setDragStart,\n      setDragProgress: actions.drag.setDragProgress,\n      setDragEnd: actions.drag.setDragEnd,\n    },\n    null,\n    {\n      context\n    }\n  )(createSortableContainer(Builder, CanMoveFn));\n  ConnectedSortableContainer.displayName = \"ConnectedSortableContainer\";\n\n  return ConnectedSortableContainer;\n};\n\nexport { _isReorderingTree };\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { _isReorderingTree } from \"./SortableContainer\";\nimport classNames from \"classnames\";\n\n\nexport default (className) => (GroupOrRule) =>\n  class Draggable extends PureComponent {\n    static propTypes = {\n      isDraggingTempo: PropTypes.bool,\n      isDraggingMe: PropTypes.bool,\n      onDragStart: PropTypes.func,\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.wrapper = React.createRef();\n    }\n\n    handleDraggerMouseDown = (e) => {\n      var nodeId = this.props.id;\n      var dom = this.wrapper.current;\n        \n      if (this.props.onDragStart) {\n        this.props.onDragStart(nodeId, dom, e);\n      }\n    };\n\n    render () {\n      const {\n        isDraggingTempo,\n        isDraggingMe,\n        dragging,\n        ...otherProps\n      } = this.props;\n      const {\n        isTrueLocked,\n      } = otherProps;\n\n      let styles = {};\n      if (isDraggingMe && isDraggingTempo) {\n        if (_isReorderingTree) {\n          // don't apply old styles for dragging tempo during reorder\n        } else {\n          styles = {\n            top: dragging.y,\n            left: dragging.x,\n            width: dragging.w\n          };\n        }\n      }\n\n      const cn = classNames(className, \"group-or-rule\",\n        isDraggingMe && isDraggingTempo ? \"qb-draggable\" : null,\n        isDraggingMe && !isDraggingTempo ? \"qb-placeholder\" : null,\n        isTrueLocked ? \"locked\" : null\n      );\n\n      return (\n        <div\n          className={cn}\n          style={styles}\n          ref={this.wrapper}\n          data-id={this.props.id}\n        >\n          <GroupOrRule\n            handleDraggerMouseDown={this.handleDraggerMouseDown}\n            isDraggingMe={isDraggingMe}\n            isDraggingTempo={isDraggingTempo}\n            {...otherProps}\n          />\n        </div>\n      );\n    }\n\n  };\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport keys from \"lodash/keys\";\nimport pickBy from \"lodash/pickBy\";\nimport mapValues from \"lodash/mapValues\";\nimport {useOnPropsChanged, pureShouldComponentUpdate, liteShouldComponentUpdate} from \"../../utils/reactUtils\";\nconst {getFieldConfig, getOperatorConfig} = Utils.ConfigUtils;\n\n\nexport default class Operator extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.any,\n    selectedFieldId: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    readonly: PropTypes.bool,\n    //actions\n    setOperator: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"selectedOperator\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    // tip: rely on selectedFieldId instead\n    selectedField: (nextValue, prevValue) => { return false; }\n  });\n\n  getMeta({config, selectedField, selectedFieldType, selectedOperator}) {\n    const fieldConfig = getFieldConfig(config, selectedField);\n    let operators = [...(fieldConfig?.operators || config.types[selectedFieldType]?.operators || [])];\n    if (!selectedField && !operators.includes(selectedOperator)) {\n      // eg. `prox` field was selected, then `fieldSrc` changed to `func`\n      // But `text` type excludes `proximity` operator in config, so add manually\n      operators.push(selectedOperator);\n    }\n    \n    const operatorsOptions \n      = mapValues(\n        pickBy(\n          config.operators, \n          (item, key) => operators?.indexOf(key) !== -1\n        ), \n        (_opts, op) => getOperatorConfig(config, op, selectedField)\n      );\n      \n    const items = this.buildOptions(config, operatorsOptions, operators);\n\n    const selectedOpts = operatorsOptions[selectedOperator] || {};\n    const placeholder = this.props.config.settings.operatorPlaceholder;\n    const selectedKey = selectedOperator;\n    const selectedKeys = selectedKey ? [selectedKey] : null;\n    const selectedPath = selectedKeys;\n    const selectedLabel = selectedOpts.label;\n    // tip: label2 is not documented for operators\n    const selectedAltLabel = selectedOpts.label2 || selectedOpts.tooltip;\n    \n    return {\n      placeholder, items,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedAltLabel, selectedOpts, fieldConfig\n    };\n  }\n\n  buildOptions(config, fields, ops) {\n    if (!fields || !ops)\n      return null;\n\n    return keys(fields).sort((a, b) => (ops.indexOf(a) - ops.indexOf(b))).map(fieldKey => {\n      const field = fields[fieldKey];\n      const label = field.label;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      return {\n        key: fieldKey,\n        path: fieldKey,\n        label,\n        altLabel,\n        tooltip,\n      };\n    });\n  }\n\n  render() {\n    const {config, customProps, setOperator, readonly, id, groupId} = this.props;\n    const {renderOperator} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: setOperator,\n      ...this.meta\n    };\n    if (!renderProps.items)\n      return null;\n    return renderOperator(renderProps, config.ctx);\n  }\n\n\n}\n","import React from \"react\";\n\nconst Col = ({children, ...props}) => (<div {...props}>{children}</div>);\n\nconst dummyFn = () => {};\n\nconst DragIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"gray\" width=\"18px\" height=\"18px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"/>\n  </svg>\n);\n\nconst WithConfirmFn = (Cmp) => (\n  props => {\n    const {useConfirm} = props.config.settings;\n    const confirmFn = useConfirm ? useConfirm.call(props.config.ctx, props.config.ctx) : null;\n    return <Cmp {...props} confirmFn={confirmFn} />;\n  }\n);\n\nconst getWidgetId = ({\n  id, isLHS, delta, parentFuncs,\n}) => {\n  return [\n    id,\n    isLHS ? \"L\" : \"R\",\n    isLHS ? -1 : (delta || 0),\n    (parentFuncs || []).map(([f, a]) => `${f}(${a})`).join(\"/\"),\n  ].join(\":\");\n};\n\nconst getRenderFromConfig = (config, renderFn) => {\n  let Cmp;\n  if (typeof renderFn === \"function\") {\n    Cmp = (pr) => renderFn?.(pr, config.ctx);\n    Cmp.displayName = renderFn.name;\n  } else {\n    Cmp = renderFn;\n  }\n  return Cmp;\n};\n\nexport {\n  Col, dummyFn, DragIcon, WithConfirmFn,\n  getWidgetId,\n  getRenderFromConfig,\n};\n","import React, { PureComponent } from \"react\";\nimport Operator from \"./Operator\";\nimport {Col} from \"../utils\";\n\n\nexport default class OperatorWrapper extends PureComponent {\n  render() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, selectedOperator, setOperator, \n      selectedFieldId, showOperator, showOperatorLabel, selectedFieldWidgetConfig, readonly, id, groupId\n    } = this.props;\n    const operator = showOperator\n            && <Col key={\"operators-for-\"+selectedFieldId} className=\"rule--operator\">\n              { config.settings.showLabels\n                    && <label className=\"rule--label\">{config.settings.operatorLabel}</label>\n              }\n              <Operator\n                key=\"operator\"\n                config={config}\n                selectedField={selectedField}\n                selectedFieldSrc={selectedFieldSrc}\n                selectedFieldType={selectedFieldType}\n                selectedFieldId={selectedFieldId}\n                selectedOperator={selectedOperator}\n                setOperator={setOperator}\n                readonly={readonly}\n                id={id}\n                groupId={groupId}\n              />\n            </Col>;\n    const hiddenOperator = showOperatorLabel\n            && <Col key={\"operators-for-\"+selectedFieldId} className=\"rule--operator\">\n              <div className=\"rule--operator-wrapper\">\n                {config.settings.showLabels\n                  ? <label className=\"rule--label\">&nbsp;</label>\n                  : null}\n                <div className=\"rule--operator-text-wrapper\">\n                  <span className=\"rule--operator-text\">{selectedFieldWidgetConfig.operatorInlineLabel}</span>\n                </div>\n              </div>\n            </Col>;\n    return [\n      operator,\n      hiddenOperator\n    ];\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {getFieldPathLabels} = Utils.RuleUtils;\nconst {getFieldConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\n\n\nexport default class Field extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    parentField: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //actions\n    setField: PropTypes.func.isRequired,\n    setFieldSrc: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"config\", \"parentField\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({selectedField, selectedFieldType, config, parentField}) {\n    let selectedKey = selectedField;\n    const {maxLabelsLength, fieldSeparatorDisplay, fieldPlaceholder, fieldSeparator} = config.settings;\n    const isFieldSelected = !!selectedField;\n    const placeholder = !isFieldSelected ? truncateString(fieldPlaceholder, maxLabelsLength) : null;\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPathParts(selectedKey, config);\n    const selectedPath = getFieldPathParts(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2 || selectedOpts.tooltip;\n\n    const parentFieldPath = getFieldParts(parentField, config);\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig && parentFieldConfig.subfields : config.fields;\n    const lookingForFieldType = !isFieldSelected && selectedFieldType;\n    const items = this.buildOptions(parentFieldPath, config, sourceFields, lookingForFieldType, parentFieldPath);\n\n    // Field source has been chnaged, no new field selected, but op & value remains\n    const errorText = lookingForFieldType ? \"Please select field\" : null;\n\n    if (selectedKey && typeof selectedKey === \"object\") {\n      // can happen due to incorrect rule state: field is Map{func, args} but fieldSrc is not \"func\"\n      selectedKey = undefined;\n    }\n\n    return {\n      placeholder, items, parentField,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n      errorText,\n    };\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = getFieldParts(fieldKey, config);\n    let label = fieldOpts?.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  buildOptions(parentFieldPath, config, fields, fieldType = undefined, path = null, optGroup = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    const countFieldsMatchesType = (fields) => {\n      return Object.keys(fields || {}).reduce((acc, fieldKey) => {\n        const field = fields[fieldKey];\n        if (field.type === \"!struct\") {\n          return acc + countFieldsMatchesType(field.subfields);\n        } else {\n          return acc + (field.type === fieldType ? 1 : 0);\n        }\n      }, 0);\n    };\n\n    return keys(fields).map(fieldKey => {\n      const fullFieldPath = [...(path ?? []), fieldKey];\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fullFieldPath, config);\n      const partsLabels = getFieldPathLabels(fullFieldPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath?.length)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      const disabled = field.disabled;\n\n      if (field.hideForSelect)\n        return undefined;\n\n      if (field.type == \"!struct\") {\n        const items = this.buildOptions(parentFieldPath, config, field.subfields, fieldType, fullFieldPath, {\n          label,\n          tooltip,\n        });\n        const hasItemsMatchesType = countFieldsMatchesType(field.subfields) > 0;\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items,\n          matchesType: hasItemsMatchesType,\n        };\n      } else {\n        const matchesType = fieldType !== undefined ? field.type === fieldType : undefined;\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n          matchesType,\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  setField = (field, asyncListValues, _meta = {}) => {\n    const {id} = this.props;\n    if (!_meta.widgetId) {\n      const widgetId = [\n        id,\n        \"L\",\n        -1,\n      ].join(\":\");\n      _meta.widgetId = widgetId;\n    }\n    this.props.setField(field, asyncListValues, _meta);\n  };\n\n  render() {\n    const {config, customProps, setFieldSrc, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: this.setField,\n      setFieldSrc,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst { clone } = Utils;\nconst {getFieldConfig, getFuncConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\nconst {getFuncPathLabels, getWidgetForFieldOp} = Utils.RuleUtils;\nconst {shallowEqual} = Utils.OtherUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class FuncSelect extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldType: PropTypes.string,\n    fieldSrc: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n    isLHS: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n      \n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"fieldType\", \"fieldSrc\", \"operator\", \"isFuncArg\", \"isLHS\", \"parentFuncs\"];\n    const keysForMeta = [\"config\", \"field\", \"fieldType\", \"fieldSrc\", \"value\", \"isLHS\"];\n    const needUpdateItems = !this.items || keysForItems.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      nextProps[k] !== prevProps[k]\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps, this.meta);\n    }\n  }\n\n  getItems({config, field, fieldType, isLHS, operator, parentFuncs, fieldDefinition, isFuncArg}, {lookingForFieldType}) {\n    const {canUseFuncForField} = config.settings;\n    const filteredFuncs = this.filterFuncs(\n      config, config.funcs, field, fieldType, isLHS, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition\n    );\n    const items = this.buildOptions(config, filteredFuncs, lookingForFieldType);\n    return items;\n  }\n\n  getMeta({config, _field, fieldType, value, isLHS, isFuncArg}) {\n    const {funcPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedFuncKey = value;\n    const isFuncSelected = !!value;\n\n    // const leftFieldConfig = getFieldConfig(config, field);\n    // const leftFieldWidgetField = leftFieldConfig?.widgets?.field;\n    // const leftFieldWidgetFieldProps = leftFieldWidgetField && leftFieldWidgetField.widgetProps || {};\n    const placeholder = !isFuncSelected ? funcPlaceholder : null;\n\n    const currFunc = isFuncSelected ? getFuncConfig(config, selectedFuncKey) : null;\n    const selectedOpts = currFunc || {};\n\n    const selectedKeys = getFieldPathParts(selectedFuncKey, config);\n    const selectedPath = getFieldPathParts(selectedFuncKey, config, true);\n    const selectedLabel = this.getFuncLabel(currFunc, selectedFuncKey, config);\n    const partsLabels = getFuncPathLabels(selectedFuncKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel)\n      selectedFullLabel = null;\n\n    const isRootFuncAtLHS = isLHS && !isFuncArg;\n    const lookingForFieldType = isRootFuncAtLHS && !isFuncSelected && fieldType;\n    // Field source has been chnaged, no new func selected, but op & value remains\n    const errorText = lookingForFieldType ? \"Please select function\" : null;\n  \n    return {\n      placeholder,\n      selectedKey: selectedFuncKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedFullLabel,\n      errorText,\n      lookingForFieldType,\n    };\n  }\n\n  filterFuncs(config, funcs, leftFieldFullkey, fieldType, isLHS, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition) {\n    funcs = clone(funcs);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    let expectedType;\n    let targetDefinition = leftFieldConfig;\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = widget && config.widgets[widget];\n    if (isFuncArg) {\n      targetDefinition = fieldDefinition;\n      expectedType = fieldDefinition?.type;\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else if (leftFieldConfig) {\n      expectedType = leftFieldConfig.type;\n    } else if (!isLHS) {\n      // no field at LHS, but can use type from \"memory effect\"\n      expectedType = fieldType;\n    }\n\n    function _filter(list, path) {\n      for (let funcKey in list) {\n        let subfields = list[funcKey].subfields;\n        let subpath = (path ? path : []).concat(funcKey);\n        let funcFullkey = subpath.join(fieldSeparator);\n        let funcConfig = getFuncConfig(config, funcFullkey);\n        if (funcConfig.type == \"!struct\") {\n          if(_filter(subfields, subpath) == 0)\n            delete list[funcKey];\n        } else {\n          let canUse = !expectedType || funcConfig.returnType == expectedType;\n          if (targetDefinition?.funcs)\n            canUse = canUse && targetDefinition.funcs.includes(funcFullkey);\n          if (canUseFuncForField)\n            canUse = canUse && canUseFuncForField(leftFieldFullkey, leftFieldConfig, funcFullkey, funcConfig, operator);\n          // don't use func in func (can be configurable, but usually users don't need this)\n          if (!funcConfig.allowSelfNesting && parentFuncs && parentFuncs.map(([func, _arg]) => func).includes(funcFullkey))\n            canUse = false;\n          if (!canUse)\n            delete list[funcKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(funcs, []);\n\n    return funcs;\n  }\n\n  buildOptions(config, funcs, fieldType = undefined, path = null, optGroup = null) {\n    if (!funcs)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    const countFieldsMatchesType = (fields) => {\n      return Object.keys(fields || {}).reduce((acc, fieldKey) => {\n        const field = fields[fieldKey];\n        if (field.type === \"!struct\") {\n          return acc + countFieldsMatchesType(field.subfields);\n        } else {\n          return acc + (field.type === fieldType ? 1 : 0);\n        }\n      }, 0);\n    };\n\n    return keys(funcs).map(funcKey => {\n      const fullFuncPath = [...(path ?? []), funcKey];\n      const func = funcs[funcKey];\n      const label = this.getFuncLabel(func, fullFuncPath, config);\n      const partsLabels = getFuncPathLabels(fullFuncPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label)\n        fullLabel = null;\n      const tooltip = func.tooltip;\n\n      if (func.type == \"!struct\") {\n        const items = this.buildOptions(config, func.subfields, fieldType, fullFuncPath, {\n          label,\n          tooltip,\n        });\n        const hasItemsMatchesType = countFieldsMatchesType(func.subfields) > 0;\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          items,\n          matchesType: hasItemsMatchesType,\n        };\n      } else {\n        const matchesType = fieldType !== undefined ? func.returnType === fieldType : undefined;\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n          matchesType,\n        };\n      }\n    });\n  }\n\n  getFuncLabel(funcOpts, funcKey, config) {\n    if (!funcKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let funcParts = getFieldParts(funcKey, config);\n    let label = funcOpts?.label || last(funcParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderFunc} = config.settings;\n    const renderProps = {\n      config,\n      customProps,\n      readonly,\n      setField: setValue,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderFunc(renderProps, config.ctx);\n  }\n\n}\n","import React, { useMemo, memo } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { getTitleInListValues } = Utils.ListUtils;\nconst { _widgetDefKeysToOmit } = Utils.ConfigUtils;\nconst { _fixImmutableValue, isImmutable } = Utils.TreeUtils;\n\nconst WidgetFactoryMemo = memo(({\n  widgetFactory,\n  ...widgetProps\n}) => {\n  const { config, isFuncArg, fieldDefinition } = widgetProps;\n  const { fieldSettings, defaultValue, valueSources } = fieldDefinition || {};\n  const isConst = isFuncArg && valueSources?.length == 1 && valueSources?.[0] === \"const\";\n  const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n\n  if (isConst && defaultValue) {\n    if (typeof defaultValue === \"boolean\") {\n      return defaultValue ? (widgetProps.labelYes || \"YES\") : (widgetProps.labelNo || \"NO\");\n    } else if (listValues) {\n      if (Array.isArray(defaultValue))\n        return defaultValue.map(v => getTitleInListValues(listValues, v) || v).join(\", \");\n      else\n        return (getTitleInListValues(listValues, defaultValue) || defaultValue);  \n    }\n    return \"\"+defaultValue;\n  }\n\n  if (!widgetFactory) {\n    return \"?\";\n  }\n\n  return widgetFactory(widgetProps, config.ctx);\n});\n\nWidgetFactoryMemo.displayName = \"WidgetFactoryMemo\";\n\nconst WidgetFactory = ({\n  delta, isFuncArg, valueSrc,\n  value: immValue, valueError: immValueError, fieldError, asyncListValues,\n  isSpecialRange, fieldDefinition,\n  widget, widgetDefinition, widgetValueLabel, valueLabels, textSeparators, setValue, setFuncValue,\n  config, field, fieldSrc, fieldPath, fieldType, isLHS, operator, readonly, parentField, parentFuncs, id, groupId, widgetId,\n}) => {\n  const {factory: widgetFactory, ...fieldWidgetProps} = widgetDefinition;\n\n  // Widget value (if it's not a func with args) should NOT be Immutable\n  // Eg. for multiselect value should be a JS Array, not Immutable List\n  const fixedImmValue = immValue ? immValue.map(v => _fixImmutableValue(v)) : undefined;\n  const value = useMemo(() => {\n    if (isSpecialRange) {\n      let value = [ fixedImmValue?.get(0), fixedImmValue?.get(1) ];\n      if (value[0] === undefined && value[1] === undefined)\n        value = undefined;\n      return value;\n    }\n    return fixedImmValue?.get(delta);\n  }, [ isSpecialRange, immValue ]);\n  const valueError = useMemo(() => {\n    if (!immValueError) {\n      return null;\n    }\n    if (isSpecialRange) {\n      return [ immValueError.get(0), immValueError.get(1), immValueError.get(2) ];\n    }\n    return immValueError?.get(delta);\n  }, [ isSpecialRange, immValue ]);\n  const errorMessage = isLHS ? fieldError : valueError;\n  const { fieldSettings } = fieldDefinition || {};\n  const { label, placeholder } = widgetValueLabel;\n  const placeholders = valueLabels ? valueLabels.placeholder : null;\n  const simpleField = isImmutable(field) ? null : field;\n\n  const widgetProps = omit({\n    ...fieldWidgetProps, \n    ...fieldSettings,\n    config,\n    field: simpleField, // !!! using of field prop in widget is strongly discouraged\n    fieldPath,\n    fieldSrc,\n    fieldType,\n    isLHS,\n    parentField,\n    parentFuncs,\n    fieldDefinition,\n    operator,\n    delta,\n    isSpecialRange,\n    isFuncArg,\n    value,\n    valueSrc,\n    valueError,\n    fieldError,\n    errorMessage,\n    label,\n    placeholder,\n    placeholders,\n    textSeparators,\n    setValue,\n    setFuncValue,\n    readonly,\n    asyncListValues,\n    id,\n    groupId,\n    widgetId,\n    widgetFactory,\n    widget,\n  }, [\n    ..._widgetDefKeysToOmit,\n    \"toJS\"\n  ]);\n\n  return <WidgetFactoryMemo\n    widgetFactory={widgetFactory}\n    {...widgetProps}\n  />;\n};\n\nWidgetFactory.displayName = \"WidgetFactory\";\n\nexport default WidgetFactory;\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\nimport {getOpCardinality} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport pick from \"lodash/pick\";\nimport WidgetFactory from \"./WidgetFactory\";\nimport classNames from \"classnames\";\nimport {Col, getWidgetId, getRenderFromConfig} from \"../utils\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\nconst {getValueSourcesForFieldOp, getWidgetForFieldOp, getValueLabel} = Utils.RuleUtils;\nconst { createListWithOneElement } = Utils.DefaultUtils;\nconst {shallowEqual} = Utils.OtherUtils;\nconst { isImmutable } = Utils.TreeUtils;\n\nconst funcArgDummyOpDef = {cardinality: 1};\n\nexport default class Widget extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //instanceOf(Immutable.List)\n    valueSrc: PropTypes.any, //instanceOf(Immutable.List)\n    valueError: PropTypes.any, //instanceOf(Immutable.List)\n    fieldError: PropTypes.string,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    fieldId: PropTypes.string,\n    operator: PropTypes.string,\n    readonly: PropTypes.bool,\n    asyncListValues: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    //actions\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    setFuncValue: PropTypes.func,\n    // for isFuncArg\n    isFuncArg: PropTypes.bool,\n    fieldFunc: PropTypes.string,\n    fieldArg: PropTypes.string,\n    leftField: PropTypes.any,\n    // for RuleGroupExt\n    isForRuleGroup: PropTypes.bool,\n    parentField: PropTypes.string,\n    // for func in func\n    parentFuncs: PropTypes.array,\n    isLHS: PropTypes.bool,\n    // for case_value\n    isCaseValue: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.ValueSources || prevProps?.config !== nextProps?.config;\n    const keysForMeta = [\n      \"config\", \"id\", \"parentFuncs\",\n      \"field\", \"fieldId\", \"fieldSrc\", \"fieldType\", \"fieldFunc\", \"fieldArg\", \"leftField\", \"operator\", \"valueSrc\", \"asyncListValues\",\n      \"isLHS\", \"isFuncArg\", \"isForRuleGroup\", \"isCaseValue\", \"value\",\n    ];\n    const changedKeys = keysForMeta\n      .filter(k => {\n        if (k === \"parentFuncs\") {\n          return !shallowEqual(nextProps[k], prevProps[k], true);\n        }\n        // if (k === \"value\") {\n        //   if (nextProps[\"value\"] !== prevProps[\"value\"] && isImmutable(nextProps[\"value\"])) {\n        //   }\n        // }\n        if (k === \"field\") {\n          //tip: if `fieldId` has not changed, but `field` changed -> ignore\n          // (because we are in RHS and field is LHS)\n          return nextProps[\"fieldId\"] !== prevProps[\"fieldId\"];\n        }\n        return nextProps[k] !== prevProps[k];\n      });\n\n    const needUpdateMeta = !this.meta || changedKeys.length > 0;\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps, changedKeys);\n    }\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderValueSources } = config.settings;\n      this.ValueSources = getRenderFromConfig(config, renderValueSources);\n    }\n  }\n\n  _setValue = (\n    isSpecialRange, delta, widgetType, widgetId, // bound!\n    value, asyncListValues, _meta = {}\n  ) => {\n    if (!_meta.widgetId) {\n      _meta.widgetId = widgetId;\n    }\n    if (isSpecialRange && Array.isArray(value)) {\n      const oldRange = [this.props.value.get(0), this.props.value.get(1)];\n      if (oldRange[0] != value[0])\n        this.props.setValue(0, value[0], widgetType, asyncListValues, _meta);\n      if (oldRange[1] != value[1])\n        this.props.setValue(1, value[1], widgetType, asyncListValues, _meta);\n    } else {\n      this.props.setValue(delta, value, widgetType, asyncListValues, _meta);\n    }\n  };\n\n  _setValueSrc = (\n    delta, widgetId, // bound!\n    srcKey\n  ) => {\n    const _meta = {\n      widgetId,\n    };\n    this.props.setValueSrc(delta, srcKey, _meta);\n  };\n\n  getMeta({\n    config, field: simpleField, fieldSrc, fieldType, fieldFunc, fieldArg, operator, valueSrc: valueSrcs, value: values,\n    isForRuleGroup, isCaseValue, isFuncArg, leftField, asyncListValues, parentFuncs, isLHS, id,\n  }, changedKeys = []) {\n    const {valueSourcesInfo} = config.settings;\n    const field = isFuncArg ? {func: fieldFunc, arg: fieldArg} : simpleField;\n    const isOkWithoutField = !simpleField && fieldType;\n    let iValueSrcs = valueSrcs;\n    let iValues = values;\n    if (isFuncArg || isForRuleGroup || isCaseValue) {\n      iValueSrcs = createListWithOneElement(valueSrcs);\n      iValues = createListWithOneElement(values);\n    }\n\n    let fieldDefinition = getFieldConfig(config, field);\n    if (!fieldDefinition && isOkWithoutField) {\n      fieldDefinition = config.types[fieldType];\n    }\n    let defaultWidget = getWidgetForFieldOp(config, field, operator);\n    if (!defaultWidget && isOkWithoutField) {\n      defaultWidget = config.types[fieldType]?.mainWidget;\n    }\n    const operatorDefinition = isFuncArg\n      ? funcArgDummyOpDef\n      : getOperatorConfig(config, operator, field);\n    if ((fieldDefinition == null || operatorDefinition == null) && !isCaseValue) {\n      return null;\n    }\n    const isSpecialRange = operatorDefinition?.isSpecialRange;\n    const isSpecialRangeForSrcField = isSpecialRange && (iValueSrcs?.get(0) === \"field\" || iValueSrcs?.get(1) === \"field\");\n    const isTrueSpecialRange = isSpecialRange && !isSpecialRangeForSrcField;\n    const cardinality = isTrueSpecialRange ? 1 : getOpCardinality(operatorDefinition);\n    if (cardinality === 0) {\n      return null;\n    }\n\n    let valueSources = this.meta?.valueSources;\n    let valueSourcesOptions = this.meta?.valueSourcesOptions;\n    if (!valueSources || [\"field\", \"operator\", \"config\", \"fieldDefinition\", \"isForRuleGroup\"].filter(k => changedKeys.includes(k)).length) {\n      valueSources = getValueSourcesForFieldOp(config, field, operator, fieldDefinition);\n      if (isForRuleGroup) {\n        // todo: aggregation can be not only number?\n        valueSources = [\"value\"];\n      }\n      if (!field) {\n        valueSources = Object.keys(valueSourcesInfo);\n      }\n      valueSourcesOptions = valueSources.map(srcKey => [srcKey, {\n        label: valueSourcesInfo[srcKey].label\n      }]);\n    }\n    const widgets = range(0, cardinality).map(delta => {\n      const oldWidgetMeta = this.meta?.widgets?.[delta];\n      const valueSrc = iValueSrcs?.get(delta) || null;\n      let widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      let widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      if (isSpecialRangeForSrcField) {\n        widget = widgetDefinition.singleWidget;\n        widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      }\n      if (!widgetDefinition && isOkWithoutField) {\n        widget = [\"func\", \"field\"].includes(valueSrc) ? valueSrc : defaultWidget;\n        widgetDefinition = config.widgets[widget];\n      }\n      const widgetType = widgetDefinition?.type;\n      const valueLabel = getValueLabel(config, field, operator, delta, valueSrc, isTrueSpecialRange);\n      const widgetValueLabel = getValueLabel(config, field, operator, delta, null, isTrueSpecialRange);\n      const sepText = operatorDefinition?.textSeparators ? operatorDefinition?.textSeparators[delta] : null;\n\n      let valueLabels = null;\n      let textSeparators = null;\n      if (isSpecialRange) {\n        valueLabels = [\n          getValueLabel(config, field, operator, 0),\n          getValueLabel(config, field, operator, 1)\n        ];\n        valueLabels = {\n          placeholder: [ valueLabels[0].placeholder, valueLabels[1].placeholder ],\n          label: [ valueLabels[0].label, valueLabels[1].label ],\n        };\n        textSeparators = operatorDefinition?.textSeparators;\n      }\n\n      const widgetId = getWidgetId({ id, isLHS, delta, parentFuncs });\n      const vsId = widgetId + \":\" + \"VS\";\n\n      let setValueSrc = oldWidgetMeta?.setValueSrc;\n      if (!setValueSrc || oldWidgetMeta?.widgetId !== widgetId) {\n        setValueSrc = this._setValueSrc.bind(this, delta, vsId);\n      }\n      let setValue = oldWidgetMeta?.setValue;\n      if (!setValue\n        || oldWidgetMeta?.widgetId !== widgetId\n        || oldWidgetMeta?.widgetType !== widgetType\n        || this.meta?.isSpecialRange !== isSpecialRange\n      ) {\n        setValue = this._setValue.bind(this, isSpecialRange, delta, widgetType, widgetId);\n      }\n\n      return {\n        valueSrc,\n        valueLabel,\n        widget,\n        sepText,\n        widgetDefinition,\n        widgetValueLabel,\n        valueLabels,\n        textSeparators,\n        setValueSrc,\n        setValue,\n        widgetId,\n        widgetType,\n      };\n    });\n      \n    return {\n      defaultWidget,\n      fieldDefinition,\n      operatorDefinition,\n      isSpecialRange: isTrueSpecialRange,\n      cardinality,\n      valueSources,\n      valueSourcesOptions,\n      widgets,\n      iValues, //correct for isFuncArg\n      aField: field, //correct for isFuncArg\n      asyncListValues,\n    };\n  }\n\n  renderWidget = (delta, meta, props) => {\n    const {\n      config, isFuncArg, leftField, operator, value: values, valueError, fieldError,\n      readonly, parentField, parentFuncs, id, groupId, fieldSrc, fieldType, isLHS, setFuncValue,\n    } = props;\n    const {settings} = config;\n    const { widgets, iValues, aField, valueSources } = meta;\n    const value = isFuncArg ? iValues : values;\n    const field = isFuncArg ? leftField : aField;\n    const { valueSrc, valueLabel, widgetId } = widgets[delta];\n    const hasValueSources = valueSources.length > 1 && !readonly;\n    \n    const widgetLabel = settings.showLabels\n      ? <label key={\"label-\"+widgetId} className=\"rule--label\">{valueLabel.label}</label>\n      : null;\n    return (\n      <div key={\"wrapper-\"+widgetId} className={classNames(\n        valueSrc === \"func\" ? \"widget--func\" : \"widget--widget\",\n        hasValueSources ? \"widget--has-valuerscs\" : \"widget--has-no-valuerscs\"\n      )}>\n        {valueSrc === \"func\" ? null : widgetLabel}\n        <WidgetFactory\n          key={widgetId}\n          id={id} // id of rule\n          groupId={groupId}\n          widgetId={widgetId}\n          valueSrc={valueSrc}\n          delta={delta}\n          value={value}\n          valueError={valueError}\n          fieldError={fieldError}\n          isFuncArg={isFuncArg}\n          isLHS={isLHS}\n          {...pick(meta, [\"isSpecialRange\", \"fieldDefinition\", \"asyncListValues\"])}\n          {...pick(widgets[delta], [\n            \"widget\", \"widgetDefinition\", \"widgetValueLabel\", \"valueLabels\", \"textSeparators\", \"setValue\",\n          ])}\n          setFuncValue={setFuncValue}\n          config={config}\n          field={field}\n          fieldSrc={fieldSrc}\n          fieldType={fieldType}\n          parentField={parentField}\n          parentFuncs={parentFuncs}\n          operator={operator}\n          readonly={readonly}\n        />\n      </div>\n    );\n  };\n\n  renderValueSources = (delta, meta, props) => {\n    const {config, isFuncArg, leftField, operator, readonly} = props;\n    const {settings} = config;\n    const { valueSources, widgets, aField, valueSourcesOptions } = meta;\n    const field = isFuncArg ? leftField : aField;\n    const {valueSrc, setValueSrc} = widgets[delta];\n    const ValueSources = this.ValueSources;\n\n    const sourceLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return valueSources.length > 1 && !readonly\n      && <div key={\"wrapper-\"+\"valuesrc-\"+delta} className=\"widget--valuesrc\">\n        {sourceLabel}\n        <ValueSources\n          key={\"valuesrc-\"+delta}\n          delta={delta}\n          valueSources={valueSourcesOptions}\n          valueSrc={valueSrc}\n          config={config}\n          field={field}\n          operator={operator}\n          setValueSrc={setValueSrc}\n          readonly={readonly}\n          title={settings.valueSourcesPopupTitle}\n        />\n      </div>;\n  };\n\n  renderSep = (delta, meta, props) => {\n    const {config} = props;\n    const {widgets} = meta;\n    const {settings} = config;\n    const {sepText} = widgets[delta];\n\n    const sepLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return sepText\n      && <div key={\"widget-separators-\"+delta} className={classNames(\n        \"widget--sep\",\n        delta == 0 && \"widget--sep-first\"\n      )} >\n        {sepLabel}\n        <span>{sepText}</span>\n      </div>;\n  };\n\n  renderWidgetDelta = (delta) => {\n    const sep = this.renderSep(delta, this.meta, this.props);\n    const sources = this.renderValueSources(delta, this.meta, this.props);\n    const widgetCmp = this.renderWidget(delta, this.meta, this.props);\n\n    return [\n      sep,\n      sources,\n      widgetCmp,\n    ];\n  };\n\n  render() {\n    if (!this.meta) return null;\n    const { defaultWidget, cardinality } = this.meta;\n    if (!defaultWidget) return null;\n    const name = defaultWidget;\n\n    return (\n      <Col\n        className={`rule--widget rule--widget--${name.toUpperCase()}`}\n        key={\"widget-col-\"+name}\n      >\n        {range(0, cardinality).map(this.renderWidgetDelta)}\n      </Col>\n    );\n  }\n\n}\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport FuncSelect from \"./FuncSelect\";\nimport Widget from \"./Widget\";\nimport {Col, getWidgetId} from \"../utils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFuncConfig} = Utils.ConfigUtils;\nconst {shallowEqual} = Utils.OtherUtils;\n\n\nexport default class FuncWidget extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    fieldError: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.object, //instanceOf(Immutable.Map) //with keys 'func' and `args`\n    setValue: PropTypes.func.isRequired,\n    setFuncValue: PropTypes.func,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n    isLHS: PropTypes.bool,\n    valueError: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"field\", \"operator\", \"value\", \"fieldSrc\", \"fieldType\", \"isLHS\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({config, field, operator, value}) {\n    const funcKey = value?.get?.(\"func\") ?? null;\n    const funcDefinition = funcKey ? getFuncConfig(config, funcKey) : null;\n\n    return {\n      funcDefinition, funcKey\n    };\n  }\n\n  setFunc = (funcKey, _meta = {}) => {\n    const { isLHS, delta, parentFuncs, id } = this.props;\n    if (!_meta.widgetId) {\n      const widgetId = getWidgetId({ id, isLHS, delta, parentFuncs });\n      _meta.widgetId = widgetId;\n    }\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (delta || 0), parentFuncs, null, funcKey, \"!func\", undefined, _meta\n    );\n  };\n\n  setArgValue = (argKey, argVal, widgetType, asyncListValues, _meta) => {\n    const {config, delta, isLHS, parentFuncs} = this.props;\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (delta || 0), parentFuncs, argKey, argVal, widgetType, asyncListValues, _meta\n    );\n  };\n\n  setArgValueSrc = (argKey, argValSrc, _meta) => {\n    const {config, delta, isLHS, parentFuncs} = this.props;\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (delta || 0), parentFuncs, argKey, argValSrc, \"!valueSrc\", undefined, _meta\n    );\n  };\n\n  renderFuncSelect = () => {\n    const {config, field, fieldType, fieldSrc, isLHS, operator, customProps, value, readonly, parentFuncs, id, groupId, isFuncArg, fieldDefinition} = this.props;\n    const funcKey = value?.get?.(\"func\") ?? null;\n    const selectProps = {\n      value: funcKey,\n      setValue: this.setFunc,\n      config, field, fieldType, fieldSrc, isLHS, operator, customProps, readonly, parentFuncs, \n      isFuncArg, fieldDefinition,\n      id, groupId,\n    };\n    const {showLabels, funcLabel} = config.settings;\n    const widgetLabel = showLabels\n      ? <label className=\"rule--label\">{funcLabel}</label>\n      : null;\n\n    return (\n      <Col key=\"func\" className=\"rule--func\">\n        {widgetLabel}\n        <FuncSelect {...selectProps} />\n      </Col>\n    );\n  };\n\n  renderArgLabel = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix, label} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label\">\n        {label || argKey}\n      </Col>\n    );\n  };\n\n  renderArgLabelSep = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label-sep\">\n        {\":\"}\n      </Col>\n    );\n  };\n\n  renderArgVal = (funcKey, argKey, argDefinition) => {\n    const {\n      config, field, fieldType, fieldSrc, isLHS, operator, value, readonly, parentFuncs, id, groupId,\n      fieldError, valueError, setFuncValue,\n    } = this.props;\n    const arg = value ? value.getIn([\"args\", argKey]) : null;\n    const argVal = arg ? arg.get(\"value\") : undefined;\n    const defaultValueSource = argDefinition.valueSources.length == 1 ? argDefinition.valueSources[0] : undefined;\n    const argValSrc = arg ? (arg.get(\"valueSrc\") || defaultValueSource || \"value\") : defaultValueSource;\n\n    const widgetProps = {\n      config, \n      fieldFunc: funcKey,\n      fieldArg: argKey,\n      leftField: field,\n      fieldType, // type of leftField\n      fieldSrc, // src of leftField\n      fieldError, // error in LHS\n      valueError, // error in RHS\n      isLHS,\n      operator: null,\n      value: argVal,\n      valueSrc: argValSrc,\n      setValue: this.setArgValue,\n      setValueSrc: this.setArgValueSrc,\n      setFuncValue,\n      funcKey,\n      argKey,\n      argDefinition,\n      readonly,\n      parentFuncs,\n      id,\n      groupId,\n    };\n    //tip: value & valueSrc will be converted to Immutable.List at <Widget>\n\n    return (\n      <Col className=\"rule--func--arg-value\">\n        <ArgWidget {...widgetProps} />\n      </Col>\n    );\n  };\n\n  renderArgSep = (argKey, argDefinition, argIndex, {renderSeps}) => {\n    if (!argIndex) return null;\n    return (\n      <Col className=\"rule--func--arg-sep\">\n        {renderSeps ? renderSeps[argIndex - 1] : \", \"}\n      </Col>\n    );\n  };\n\n  renderBracketBefore = ({renderBrackets}) => {\n    return (\n      <Col key=\"before_args\" className=\"rule--func--bracket-before\">\n        {renderBrackets ? renderBrackets[0] : \"(\"}\n      </Col>\n    );\n  };\n\n  renderBracketAfter = ({renderBrackets}) => {\n    return (\n      <Col key=\"after_args\" className=\"rule--func--bracket-after\">\n        {renderBrackets ? renderBrackets[1] : \")\"}\n      </Col>\n    );\n  };\n\n  renderFuncArgs = () => {\n    const {funcDefinition, funcKey} = this.meta;\n    if (!funcKey) return null;\n    const {args} = funcDefinition || {};\n    if (!args) return null;\n\n    return (\n      <>\n        {this.renderBracketBefore(funcDefinition)}\n        <Col key={`args-${funcKey}`} className={`rule--func--args rule--func--${funcKey}--args`}>\n          {Object.keys(args).map((argKey, argIndex) => (\n            <Col key={`arg-${argKey}-${argIndex}`} className={`rule--func--arg rule--func--${funcKey}--arg--${argKey}`}>\n              {this.renderArgSep(argKey, args[argKey], argIndex, funcDefinition)}\n              {this.renderArgLabel(argKey, args[argKey])}\n              {this.renderArgLabelSep(argKey, args[argKey])}\n              {this.renderArgVal(funcKey, argKey, args[argKey])}\n            </Col>\n          ))}\n        </Col>\n        {this.renderBracketAfter(funcDefinition)}\n      </>\n    );\n  };\n\n  render() {\n    const { parentFuncs } = this.props;\n    const funcPath = parentFuncs ? parentFuncs.map(([f, a]) => `${f}_${a}`).join(\"-\") : \"root\";\n    const funcLevel = parentFuncs?.length || 0;\n    return (\n      <Col className={`rule--func--wrapper rule--func--wrapper--under-${funcPath} rule--func--wrapper--lev-${funcLevel}`}>\n        {this.renderFuncSelect()}\n        {this.renderFuncArgs()}\n      </Col>\n    );\n  }\n}\n\n\nclass ArgWidget extends Component {\n  static propTypes = {\n    funcKey: PropTypes.string.isRequired,\n    argKey: PropTypes.string.isRequired,\n    setValue: PropTypes.func.isRequired,\n    setValueSrc: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    isLHS: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"parentFuncs\", \"funcKey\", \"argKey\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({parentFuncs, funcKey, argKey}) {\n    const newParentFuncs = [...(parentFuncs || []), [funcKey, argKey]];\n\n    return {\n      parentFuncs: newParentFuncs\n    };\n  }\n\n  setValue = (_delta, value, widgetType, asyncListValues, _meta) => {\n    const {setValue, argKey} = this.props;\n    setValue(argKey, value, widgetType, asyncListValues, _meta);\n  };\n\n  setValueSrc = (_delta, valueSrc, _meta) => {\n    const {setValueSrc, argKey} = this.props;\n    setValueSrc(argKey, valueSrc, _meta);\n  };\n\n  render() {\n    const {parentFuncs} = this.meta;\n    return (\n      <Widget\n        {...this.props}\n        setValue={this.setValue}\n        setValueSrc={this.setValueSrc}\n        isFuncArg={true}\n        parentFuncs={parentFuncs}\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Field from \"./Field\";\nimport {Col} from \"../utils\";\nimport FuncWidget from \"./FuncWidget\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\n\n\nexport default class FieldWrapper extends Component {\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.ValueSources || prevProps?.config !== nextProps?.config;\n    const keysForMeta = [\"config\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderValueSources } = config.settings;\n      this.ValueSources = (pr) => renderValueSources(pr, config.ctx);\n    }\n  }\n\n  getMeta({\n    config\n  }) {\n    const {valueSourcesInfo, fieldSources} = config.settings;\n    const fieldSourcesOptions = fieldSources.map((srcKey) => [\n      srcKey,\n      {\n        label: valueSourcesInfo[srcKey].label,\n      },\n    ]);\n    return {\n      fieldSourcesOptions,\n    };\n  }\n\n  render() {\n    const {classname, canSelectFieldSource} = this.props;\n    const fieldSources = canSelectFieldSource && this.renderFieldSources();\n    const field = this.renderField();\n    if (!canSelectFieldSource) {\n      return field;\n    } else {\n      return (\n        <Col className={\"rule--field-wrapper\"}>\n          {fieldSources}\n          {field}\n        </Col>\n      );\n    }\n  }\n\n  renderField = () => {\n    const {\n      config, classname, selectedField, selectedFieldSrc, selectedFieldType, \n      setField, setFuncValue, parentField, readonly, id, groupId,\n      fieldError, valueError,\n    } = this.props;\n    const supportedFieldSrcs = [\"func\", \"field\"];\n    if (!supportedFieldSrcs.includes(selectedFieldSrc)) {\n      return \"?\";\n    }\n    const field = selectedFieldSrc === \"func\" ? (\n      <FuncWidget\n        isLHS={true}\n        config={config}\n        value={selectedField}\n        fieldSrc={selectedFieldSrc}\n        fieldType={selectedFieldType}\n        fieldError={fieldError}\n        valueError={valueError}\n        parentField={parentField}\n        setValue={setField}\n        setFuncValue={setFuncValue}\n        readonly={readonly}\n        id={id}\n        groupId={groupId}\n        key={\"field-func-\" + id}\n      />\n    ) : (\n      <Field\n        config={config}\n        selectedField={selectedField}\n        selectedFieldSrc={selectedFieldSrc}\n        selectedFieldType={selectedFieldType}\n        parentField={parentField}\n        setField={setField}\n        customProps={config.settings.customFieldSelectProps}\n        readonly={readonly}\n        id={id}\n        groupId={groupId}\n        key={\"field-\" + id}\n      />\n    );\n    const fieldLabel = selectedFieldSrc === \"func\" ? config.settings.funcLabel : config.settings.fieldLabel;\n    const label = config.settings.showLabels && selectedFieldSrc !== \"func\" && <label className=\"rule--label\">{fieldLabel}</label>;\n    return (\n      <div key={selectedFieldSrc} className={classname}>\n        {label}\n        {field}\n      </div>\n    );\n  };\n\n  renderFieldSources = () => {\n    if (!this.meta) return null;\n    const { config, readonly, selectedFieldSrc, setFieldSrc, id } = this.props;\n    const { fieldSourcesOptions } = this.meta;\n    const { settings } = config;\n    const ValueSources = this.ValueSources;\n\n    const sourceLabel = settings.showLabels ? (\n      <label className=\"rule--label\">&nbsp;</label>\n    ) : null;\n\n    return (\n      fieldSourcesOptions.length > 1 && !readonly && (\n        <div key={\"fieldsrc\"} className={\"rule--fieldsrc\"}>\n          {sourceLabel}\n          <ValueSources\n            key={\"fieldsrc-\" + id}\n            valueSources={fieldSourcesOptions}\n            valueSrc={selectedFieldSrc}\n            config={config}\n            setValueSrc={setFieldSrc}\n            readonly={readonly}\n            title={settings.fieldSourcesPopupTitle}\n          />\n        </div>\n      )\n    );\n  };\n}\n","import React, { PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nconst {getOperatorConfig} = Utils.ConfigUtils;\n\nexport default class OperatorOptions extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    operatorOptions: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string.isRequired,\n    readonly: PropTypes.bool,\n    //actions\n    setOperatorOption: PropTypes.func.isRequired,\n  };\n\n  render() {\n    if (!this.props.selectedOperator)\n      return null;\n    const operatorDefinitions = getOperatorConfig(this.props.config, this.props.selectedOperator, this.props.selectedField);\n    if (typeof operatorDefinitions.options === \"undefined\") {\n      return null;\n    }\n\n    const { factory: optionsFactory, ...basicOptionsProps } = operatorDefinitions.options;\n    const optionsProps = Object.assign({}, basicOptionsProps, {\n      config: this.props.config,\n      field: this.props.selectedField,\n      fieldSrc: this.props.selectedFieldSrc,\n      operator: this.props.selectedOperator,\n      options: this.props.operatorOptions,\n      setOption: this.props.setOperatorOption,\n      readonly: this.props.readonly,\n    });\n    const optionsCmp = optionsFactory(optionsProps, this.props.config.ctx);\n    const name = this.props.selectedOperator;\n\n    return (\n      <div className={`rule--operator rule--operator--${name.toUpperCase()}`}>\n        {optionsCmp}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport RuleContainer from \"../containers/RuleContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport Widget from \"../rule/Widget\";\nimport OperatorOptions from \"../rule/OperatorOptions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn, getRenderFromConfig} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldId} = Utils.ConfigUtils;\nconst {isEmptyRuleProperties} = Utils.RuleUtils;\n\n\nclass Rule extends Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    operatorOptions: PropTypes.object,\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //depends on widget\n    valueSrc: PropTypes.any,\n    valueType: PropTypes.any,\n    asyncListValues: PropTypes.array,\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    parentField: PropTypes.string, //from RuleGroup\n    valueError: PropTypes.any,\n    fieldError: PropTypes.string,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //path: PropTypes.instanceOf(Immutable.List),\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    setOperator: PropTypes.func,\n    setOperatorOption: PropTypes.func,\n    setLock: PropTypes.func,\n    removeSelf: PropTypes.func,\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    setFuncValue: PropTypes.func,\n    reordableNodesCnt: PropTypes.number,\n    totalRulesCnt: PropTypes.number,\n    parentReordableNodesCnt: PropTypes.number,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n  \n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.Icon || prevProps?.config !== nextProps?.config;\n    const keysForMeta = [\"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"selectedOperator\", \"config\", \"reordableNodesCnt\", \"isLocked\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (configChanged) {\n      const { config } = nextProps;\n      const {\n        renderIcon, renderButton, renderButtonGroup, renderSwitch, renderBeforeWidget, renderAfterWidget, renderRuleError,\n      } = config.settings;\n      this.Icon = getRenderFromConfig(config, renderIcon);\n      this.Btn = getRenderFromConfig(config, renderButton);\n      this.BtnGrp = getRenderFromConfig(config, renderButtonGroup);\n      this.Switch = getRenderFromConfig(config, renderSwitch);\n      this.BeforeWidget = getRenderFromConfig(config, renderBeforeWidget);\n      this.AfterWidget = getRenderFromConfig(config, renderAfterWidget);\n      this.RuleError = getRenderFromConfig(config, renderRuleError);\n    }\n    this.doRemove = () => {\n      this.props.removeSelf();\n    };\n  }\n\n  getMeta({selectedField, selectedFieldType, selectedOperator, config, reordableNodesCnt, isLocked}) {\n    const {keepInputOnChangeFieldSrc} = config.settings;\n    const selectedFieldId = getFieldId(selectedField, config);\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    const isSelectedGroup = selectedFieldConfig && selectedFieldConfig.type === \"!struct\";\n    const isOkWithoutField = keepInputOnChangeFieldSrc && selectedFieldType;\n    const isFieldSelected = !!selectedField || isOkWithoutField;\n    const isFieldAndOpSelected = isFieldSelected && selectedOperator;\n    const selectedOperatorConfig = getOperatorConfig(config, selectedOperator, selectedField);\n    const selectedOperatorHasOptions = selectedOperatorConfig && selectedOperatorConfig.options != null;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator, null, null) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n\n    const showDragIcon = config.settings.canReorder && reordableNodesCnt > 1 && !isLocked;\n    const showOperator = isFieldSelected && !hideOperator;\n    const showOperatorLabel = isFieldSelected && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showWidget = isFieldAndOpSelected && !isSelectedGroup;\n    const showOperatorOptions = isFieldAndOpSelected && selectedOperatorHasOptions;\n\n    return {\n      selectedFieldId, selectedFieldWidgetConfig,\n      showDragIcon, showOperator, showOperatorLabel, showWidget, showOperatorOptions\n    };\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeRuleConfirmOptions: confirmOptions} = config.settings;\n    if (confirmOptions && !this.isEmptyCurrentRule()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: this.doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      this.doRemove();\n    }\n  }\n\n  _buildWidgetProps({\n    selectedField, selectedFieldSrc, selectedFieldType,\n    selectedOperator, operatorOptions,\n    value, valueType, valueSrc, asyncListValues, valueError, fieldError,\n    parentField,\n  }, {\n    selectedFieldId\n  }) {\n    return {\n      field: selectedField,\n      fieldSrc: selectedFieldSrc,\n      fieldType: selectedFieldType,\n      fieldId: selectedFieldId,\n      operator: selectedOperator,\n      operatorOptions,\n      value,\n      valueType,\n      valueSrc,\n      asyncListValues,\n      valueError,\n      fieldError,\n      parentField,\n    };\n  }\n\n  isEmptyCurrentRule() {\n    const {config} = this.props;\n    const ruleData = this._buildWidgetProps(this.props, this.meta);\n    return isEmptyRuleProperties(ruleData, config);\n  }\n\n  renderField() {\n    const {\n      config, isLocked, parentField, groupId, id,\n      selectedFieldSrc, selectedField, selectedFieldType, setField, setFuncValue, setFieldSrc, fieldError,\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    const { selectedFieldId } = this.meta;\n    // tip: don't allow function inside !group (yet)\n\n    return <FieldWrapper\n      key=\"field\"\n      classname={classNames(\n        selectedFieldSrc == \"func\" ? \"rule--field--func\" : \"rule--field\",\n      )}\n      config={config}\n      canSelectFieldSource={!parentField}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      selectedFieldId={selectedFieldId}\n      fieldError={fieldError}\n      setField={!immutableFieldsMode ? setField : dummyFn}\n      setFuncValue={!immutableFieldsMode ? setFuncValue : dummyFn}\n      setFieldSrc={!immutableFieldsMode ? setFieldSrc : dummyFn}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator () {\n    const {config, isLocked} = this.props;\n    const {\n      selectedFieldId, selectedFieldWidgetConfig, showOperator, showOperatorLabel\n    } = this.meta;\n    const { immutableOpsMode } = config.settings;\n    \n    return <OperatorWrapper\n      key=\"operator\"\n      config={config}\n      selectedField={this.props.selectedField}\n      selectedFieldSrc={this.props.selectedFieldSrc}\n      selectedFieldType={this.props.selectedFieldType}\n      selectedFieldId={selectedFieldId}\n      selectedOperator={this.props.selectedOperator}\n      setOperator={!immutableOpsMode ? this.props.setOperator : dummyFn}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableOpsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  renderWidget() {\n    const {config, isLocked} = this.props;\n    const { showWidget } = this.meta;\n    const { immutableValuesMode } = config.settings;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      {...this._buildWidgetProps(this.props, this.meta)}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      setValueSrc={!immutableValuesMode ? this.props.setValueSrc : dummyFn}\n      setFuncValue={!immutableValuesMode ? this.props.setFuncValue : dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderOperatorOptions() {\n    const {config} = this.props;\n    const { showOperatorOptions } = this.meta;\n    const { immutableOpsMode, immutableValuesMode } = config.settings;\n    if (!showOperatorOptions) return null;\n\n    const opOpts = <OperatorOptions\n      key=\"operatorOptions\"\n      selectedField={this.props.selectedField}\n      selectedOperator={this.props.selectedOperator}\n      operatorOptions={this.props.operatorOptions}\n      setOperatorOption={!immutableOpsMode ? this.props.setOperatorOption : dummyFn}\n      config={config}\n      readonly={immutableValuesMode}\n    />;\n\n    return (\n      <Col key={\"op-options-for-\"+this.props.selectedOperator} className=\"rule--operator-options\">\n        {opOpts}\n      </Col>\n    );\n  }\n\n  renderBeforeWidget() {\n    const BeforeWidget = this.BeforeWidget;\n    if (!BeforeWidget)\n      return null;\n    return <Col key={\"before-widget-for-\" +this.props.selectedOperator} className=\"rule--before-widget\">\n      <BeforeWidget {...this.props} />\n    </Col>;\n  }\n\n  renderAfterWidget() {\n    const AfterWidget = this.AfterWidget;\n    if (!AfterWidget)\n      return null;\n    return <Col key={\"after-widget-for-\" +this.props.selectedOperator} className=\"rule--after-widget\">\n      <AfterWidget {...this.props} />\n    </Col>;\n  }\n\n  renderError() {\n    const {config, valueError, fieldError} = this.props;\n    const { showErrorMessage } = config.settings;\n    const RuleError = this.RuleError;\n    const oneError = [fieldError, ...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n      && <div className=\"rule--error\">\n        {RuleError ? <RuleError error={oneError} /> : oneError}\n      </div>;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const { showDragIcon } = this.meta;\n    const Icon = this.Icon;\n    const icon = <Icon\n      type=\"drag\"\n    />;\n    return showDragIcon && (<div \n      key=\"rule-drag-icon\"\n      onMouseDown={handleDraggerMouseDown}\n      className={\"qb-drag-handler rule--drag-handler\"}\n    >{icon}</div>);\n  }\n\n  renderDel() {\n    const {config, isLocked} = this.props;\n    const {\n      deleteLabel,\n      immutableGroupsMode,\n      canDeleteLocked\n    } = config.settings;\n    const Icon = this.Icon;\n    const Btn = this.Btn;\n\n    return !immutableGroupsMode && (!isLocked || isLocked && canDeleteLocked) && (\n      <Btn\n        key=\"rule-del\"\n        type=\"delRule\"\n        onClick={this.removeSelf}\n        label={deleteLabel}\n        config={config}\n        renderIcon={Icon}\n      />\n    );\n  }\n\n  renderLock() {\n    const {config, isLocked, isTrueLocked, id} = this.props;\n    const {\n      lockLabel, lockedLabel, showLock,\n    } = config.settings;\n    const Switch = this.Switch;\n      \n    return showLock && !(isLocked && !isTrueLocked) && (\n      <Switch\n        key=\"rule-lock\"\n        type=\"lock\"\n        id={id}\n        value={isLocked}\n        setValue={this.setLock}\n        label={lockLabel}\n        checkedLabel={lockedLabel}\n        hideLabel={true}\n        config={config}\n      />\n    );\n  }\n\n  render () {\n    const { showOperatorOptions, selectedFieldWidgetConfig } = this.meta;\n    const { valueSrc, value, config } = this.props;\n    const canShrinkValue = valueSrc?.first() == \"value\" && !showOperatorOptions && value.size == 1 && selectedFieldWidgetConfig.fullWidth;\n    const BtnGrp = this.BtnGrp;\n\n    const parts = [\n      this.renderField(),\n      this.renderOperator(),\n      this.renderBeforeWidget(),\n      this.renderWidget(),\n      this.renderAfterWidget(),\n      this.renderOperatorOptions(),\n    ];\n    const body = <div key=\"rule-body\" className={classNames(\"rule--body\", canShrinkValue && \"can--shrink--value\")}>{parts}</div>;\n\n    const error = this.renderError();\n    const drag = this.renderDrag();\n    const lock = this.renderLock();\n    const del = this.renderDel();\n\n    return (\n      <>\n        {drag}\n        <div key=\"rule-body-wrapper\" className=\"rule--body--wrapper\">\n          {body}{error}\n        </div>\n        <div key=\"rule-header-wrapper\" className=\"rule--header\">\n          <BtnGrp key=\"rule-header-group\" config={config}>\n            {lock}\n            {del}\n          </BtnGrp>\n        </div>\n      </>\n    );\n  }\n\n}\n\n\nexport default RuleContainer(Draggable(\"rule\")(WithConfirmFn(Rule)));\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport mapValues from \"lodash/mapValues\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate, useOnPropsChanged} from \"../../utils/reactUtils\";\nimport classNames from \"classnames\";\nimport {connect} from \"react-redux\";\nconst {defaultGroupConjunction} = Utils.DefaultUtils;\n\n\nconst createGroupContainer = (Group, itemType) => \n  class GroupContainer extends Component {\n    static propTypes = {\n      config: PropTypes.object.isRequired,\n      actions: PropTypes.object.isRequired, //{setConjunction: Function, removeGroup, addGroup, addRule, ...}\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      not: PropTypes.bool,\n      conjunction: PropTypes.string,\n      children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n      onDragStart: PropTypes.func,\n      reordableNodesCnt: PropTypes.number,\n      field: PropTypes.any, // for RuleGroup\n      fieldSrc: PropTypes.string, // for RuleGroup\n      fieldType: PropTypes.string, // for RuleGroup\n      parentField: PropTypes.string, //from RuleGroup\n      value: PropTypes.any, // for RuleGroup, CaseGroup\n      valueSrc: PropTypes.any,\n      valueError: PropTypes.any,\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.selectedConjunction = this._selectedConjunction(props);\n      this.conjunctionOptions = this._getConjunctionOptions(props);\n      this.dummyFn.isDummyFn = true;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    onPropsChanged(nextProps) {\n      const {config, id, conjunction} = nextProps;\n      const oldConfig = this.props.config;\n      const oldConjunction = this.props.conjunction;\n      if (oldConfig != config || oldConjunction != conjunction) {\n        this.selectedConjunction = this._selectedConjunction(nextProps);\n        this.conjunctionOptions = this._getConjunctionOptions(nextProps);\n      }\n    }\n\n    _getConjunctionOptions (props) {\n      return mapValues(props.config.conjunctions, (item, index) => ({\n        id: `conjunction-${props.id}-${index}`,\n        name: `conjunction[${props.id}]`,\n        key: index,\n        label: item.label,\n        checked: index === this._selectedConjunction(props),\n      }));\n    }\n\n    _selectedConjunction = (props) => {\n      props = props || this.props;\n      return props.conjunction || defaultGroupConjunction(props.config, props.field);\n    };\n\n    setConjunction = (conj = null) => {\n      this.props.actions.setConjunction(this.props.path, conj);\n    };\n\n    setNot = (not = null) => {\n      this.props.actions.setNot(this.props.path, not);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeGroup(this.props.path);\n    };\n\n    addGroup = () => {\n      this.props.actions.addGroup(this.props.path);\n    };\n\n    addCaseGroup = () => {\n      this.props.actions.addCaseGroup(this.props.path);\n    };\n\n    addDefaultCaseGroup = () => {\n      this.props.actions.addDefaultCaseGroup(this.props.path);\n    };\n\n    addRule = () => {\n      const parentRuleGroupPath = itemType == \"rule_group\" ? this.props.field : null;\n      this.props.actions.addRule(this.props.path, undefined, undefined, undefined, parentRuleGroupPath);\n    };\n\n    // for RuleGroup\n    setField = (field, asyncListValues, _meta) => {\n      this.props.actions.setField(this.props.path, field, asyncListValues, _meta);\n    };\n\n    // for RuleGroupExt\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    // for RuleGroupExt, CaseGroup\n    setValue = (delta, value, type, asyncListValues, _meta) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, _meta);\n    };\n\n    setValueSrc = (delta, srcKey, _meta) => {\n      this.props.actions.setValueSrc(this.props.path, delta, srcKey, _meta);\n    };\n\n    // can be used for both LHS and LHS\n    setFuncValue = (delta, parentFuncs, argKey, value, type, asyncListValues, _meta) => {\n      this.props.actions.setFuncValue(this.props.path, delta, parentFuncs, argKey, value, type, asyncListValues, _meta);\n    };\n\n    render() {\n      const {showErrorMessage} = this.props.config.settings;\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const currentNesting = this.props.path.size;\n      const maxNesting = this.props.config.settings.maxNesting;\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n      const fieldType = this.props.fieldType || null;\n\n      const {valueError} = this.props;\n      const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n      const hasError = oneError != null && showErrorMessage;\n\n      // Don't allow nesting further than the maximum configured depth and don't\n      // allow removal of the root group.\n      const allowFurtherNesting = typeof maxNesting === \"undefined\" || currentNesting < maxNesting;\n      const isRoot = currentNesting == 1;\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"group-container\", hasError ? \"group-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Group\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              isRoot={isRoot}\n              allowFurtherNesting={allowFurtherNesting}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={this.dummyFn}\n              setNot={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              addGroup={this.dummyFn}\n              addCaseGroup={this.dummyFn}\n              addDefaultCaseGroup={this.dummyFn}\n              addRule={this.dummyFn}\n              setField={this.dummyFn}\n              setFuncValue={this.dummyFn}\n              setOperator={this.dummyFn}\n              setValue={this.dummyFn}\n              setValueSrc={this.dummyFn}\n              value={this.props.value || null}\n              valueError={this.props.valueError || null}\n              valueSrc={this.props.valueSrc || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Group\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              isRoot={isRoot}\n              allowFurtherNesting={allowFurtherNesting}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={isInDraggingTempo ? this.dummyFn : this.setConjunction}\n              setNot={isInDraggingTempo ? this.dummyFn : this.setNot}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              addGroup={isInDraggingTempo ? this.dummyFn : this.addGroup}\n              addCaseGroup={isInDraggingTempo ? this.dummyFn : this.addCaseGroup}\n              addDefaultCaseGroup={isInDraggingTempo ? this.dummyFn : this.addDefaultCaseGroup}\n              addRule={isInDraggingTempo ? this.dummyFn : this.addRule}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setFuncValue={isInDraggingTempo ? this.dummyFn : this.setFuncValue}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              setValueSrc={isInDraggingTempo ? this.dummyFn : this.setValueSrc}\n              value={this.props.value || null}\n              valueError={this.props.valueError || null}\n              valueSrc={this.props.valueSrc || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Group, itemType) => {\n  const ConnectedGroupContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createGroupContainer(Group, itemType));\n  ConnectedGroupContainer.displayName = \"ConnectedGroupContainer\";\n\n  return ConnectedGroupContainer;\n};\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class GroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, addGroup, removeSelf, setLock, isLocked, isTrueLocked, id,\n      canAddGroup, canAddRule, canDeleteGroup\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, addGroupLabel, delGroupLabel, groupActionsPosition, \n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn\n      type=\"addRule\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n    const addGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addGroup\" onClick={addGroup} label={addGroupLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn\n      type=\"delGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {addGroupBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport startsWith from \"lodash/startsWith\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport classNames from \"classnames\";\nimport { Item } from \"./Item\";\nimport {GroupActions} from \"./GroupActions\";\nimport {WithConfirmFn, dummyFn, getRenderFromConfig} from \"../utils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {isEmptyGroupChildren} = Utils.RuleUtils;\n\nconst defaultPosition = \"topRight\";\n\n\nexport class BasicGroup extends Component {\n  static propTypes = {\n    reordableNodesCnt: PropTypes.number,\n    conjunctionOptions: PropTypes.object.isRequired,\n    allowFurtherNesting: PropTypes.bool.isRequired,\n    isRoot: PropTypes.bool.isRequired,\n    not: PropTypes.bool,\n    selectedConjunction: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    path: PropTypes.any, //instanceOf(Immutable.List)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    onDragStart: PropTypes.func,\n    addRule: PropTypes.func.isRequired,\n    addGroup: PropTypes.func.isRequired,\n    removeSelf: PropTypes.func.isRequired,\n    setConjunction: PropTypes.func.isRequired,\n    setNot: PropTypes.func.isRequired,\n    setLock: PropTypes.func.isRequired,\n    actions: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n\n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n    this.renderItem = this.renderItem.bind(this);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.Icon || prevProps?.config !== nextProps?.config;\n\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderIcon, renderConjs, renderBeforeActions, renderAfterActions } = config.settings;\n      this.Icon = getRenderFromConfig(config, renderIcon);\n      this.Conjs = getRenderFromConfig(config, renderConjs);\n      this.BeforeActions = getRenderFromConfig(config, renderBeforeActions);\n      this.AfterActions = getRenderFromConfig(config, renderAfterActions);\n    }\n\n    this.doRemove = () => {\n      this.props.removeSelf();\n    };\n  }\n\n  isGroupTopPosition() {\n    return startsWith(this.props.config.settings.groupActionsPosition || defaultPosition, \"top\");\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeGroupConfirmOptions: confirmOptions} = config.settings;\n    if (confirmOptions && !this.isEmptyCurrentGroup()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: this.doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      this.doRemove();\n    }\n  }\n\n  isEmptyCurrentGroup() {\n    const {children1, config} = this.props;\n    return isEmptyGroupChildren(children1, config);\n  }\n\n  showNot() {\n    const {config} = this.props;\n    return config.settings.showNot;\n  }\n\n  // show conjs for 2+ children?\n  showConjs() {\n    const {conjunctionOptions, children1, config} = this.props;\n    const conjunctionCount = Object.keys(conjunctionOptions).length;\n    return conjunctionCount > 1 || this.showNot();\n  }\n\n  isNoChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.size == 0 : true;\n  }\n\n\n  isOneChild() {\n    const {children1} = this.props;\n    return children1 ? children1.size < 2 : true;\n  }\n\n  renderChildrenWrapper() {\n    const {children1} = this.props;\n\n    return children1 && (\n      <div key=\"group-children\" className={classNames(\n        \"group--children\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        this.childrenClassName()\n      )}>{this.renderChildren()}</div>\n    );\n  }\n\n  childrenClassName = () => \"\";\n\n  renderHeaderWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n      )}>\n        {this.renderHeader()}\n        {isGroupTopPosition && this.renderBeforeActions()}\n        {isGroupTopPosition && this.renderActions()}\n        {isGroupTopPosition && this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderFooterWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return !isGroupTopPosition && (\n      <div key=\"group-footer\" className='group--footer'>\n        {this.renderBeforeActions()}\n        {this.renderActions()}\n        {this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderBeforeActions = () => {\n    const BeforeActions = this.BeforeActions;\n    if (BeforeActions == undefined)\n      return null;\n    return <BeforeActions\n      key=\"group-actions-before\"\n      {...this.props}\n    />;\n  };\n\n  renderAfterActions = () => {\n    const AfterActions = this.AfterActions;\n    if (AfterActions == undefined)\n      return null;\n    return <AfterActions\n      key=\"group-actions-after\"\n      {...this.props}\n    />;\n  };\n\n  renderActions() {\n    const {config, addRule, addGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <GroupActions\n      key=\"group-actions\"\n      config={config}\n      addRule={addRule}\n      addGroup={addGroup}\n      canAddGroup={this.canAddGroup()}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  canAddGroup() {\n    return this.props.allowFurtherNesting;\n  }\n  canAddRule() {\n    const maxNumberOfRules = this.props.config.settings.maxNumberOfRules;\n    const totalRulesCnt = this.props.totalRulesCnt;\n    if (maxNumberOfRules) {\n      return totalRulesCnt < maxNumberOfRules;\n    }\n    return true;\n  }\n  canDeleteGroup() {\n    return !this.props.isRoot;\n  }\n\n  renderChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.valueSeq().toArray().map(this.renderItem) : null;\n  }\n\n  renderItem(item) {\n    if (!item) {\n      return undefined;\n    }\n    const props = this.props;\n    const {config, actions, onDragStart, isLocked} = props;\n    const isRuleGroup = item.get(\"type\") == \"group\" && item.getIn([\"properties\", \"field\"]) != null;\n    const type = isRuleGroup ? \"rule_group\" : item.get(\"type\");\n    \n    return (\n      <Item\n        {...this.extraPropsForItem(item)}\n        key={item.get(\"id\")}\n        id={item.get(\"id\")}\n        groupId={props.id}\n        //path={props.path.push(item.get('id'))}\n        path={item.get(\"path\")}\n        type={type}\n        properties={item.get(\"properties\")}\n        config={config}\n        actions={actions}\n        children1={item.get(\"children1\")}\n        reordableNodesCnt={this.reordableNodesCntForItem(item)}\n        totalRulesCnt={this.totalRulesCntForItem(item)}\n        parentReordableNodesCnt={this.reordableNodesCnt()}\n        onDragStart={onDragStart}\n        isDraggingTempo={this.props.isDraggingTempo}\n        isParentLocked={isLocked}\n      />\n    );\n  }\n\n  extraPropsForItem(_item) {\n    return {};\n  }\n\n  reordableNodesCnt() {\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    return this.props.totalRulesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    return this.reordableNodesCnt();\n  }\n\n  showDragIcon() {\n    const { config, isRoot, isLocked } = this.props;\n    const reordableNodesCnt = this.reordableNodesCnt();\n    return config.settings.canReorder && !isRoot && reordableNodesCnt > 1 && !isLocked;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const Icon = this.Icon;\n    const icon = <Icon\n      type=\"drag\"\n    />;\n    return this.showDragIcon() && (<div \n      key=\"group-drag-icon\"\n      onMouseDown={handleDraggerMouseDown}\n      className={\"qb-drag-handler group--drag-handler\"}\n    >{icon}</div>);\n  }\n\n  conjunctionOptions() {\n    const { conjunctionOptions } = this.props;\n    return conjunctionOptions;\n  }\n\n  renderConjs() {\n    const {\n      config, children1, id,\n      selectedConjunction, setConjunction, not, setNot, isLocked\n    } = this.props;\n\n    const {immutableGroupsMode, renderConjs, showNot: _showNot, notLabel} = config.settings;\n    const conjunctionOptions = this.conjunctionOptions();\n    if (!this.showConjs())\n      return null;\n    if (!children1 || !children1.size)\n      return null;\n\n    const renderProps = {\n      disabled: this.isOneChild(),\n      readonly: immutableGroupsMode || isLocked,\n      selectedConjunction: selectedConjunction,\n      setConjunction: immutableGroupsMode ? dummyFn : setConjunction,\n      conjunctionOptions: conjunctionOptions,\n      config: config,\n      not: not || false,\n      id: id,\n      setNot: immutableGroupsMode ? dummyFn : setNot,\n      notLabel: notLabel,\n      showNot: this.showNot(),\n      isLocked: isLocked\n    };\n    const Conjs = this.Conjs;\n    return (\n      <Conjs\n        key=\"group-conjs\"\n        {...renderProps}\n      />\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div key=\"group-conjunctions\" className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  render() {\n    return <>\n      {this.renderHeaderWrapper()}\n      {this.renderChildrenWrapper()}\n      {this.renderFooterWrapper()}\n    </>;\n  }\n}\n\nexport default GroupContainer(Draggable(\"group\")(WithConfirmFn(BasicGroup)), \"group\");\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, delGroupLabel,\n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} hideLabel={true} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addRuleGroup\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={\"group--actions\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupActions} from \"./RuleGroupActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport {WithConfirmFn} from \"../utils\";\n\n\nclass RuleGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    super.onPropsChanged(nextProps);\n  }\n\n  childrenClassName = () => \"rule_group--children\";\n  \n  renderHeaderWrapper = () => null;\n  renderFooterWrapper = () => null;\n  renderConjs = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => false;\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1?.size || 0;\n  }\n\n  renderChildrenWrapper() {\n    return (\n      <>\n        {this.renderDrag()}\n        {this.renderField()}\n        {this.renderActions()}\n        {super.renderChildrenWrapper()}\n      </>\n    );\n  }\n\n  renderField() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, setField, setFuncValue, setFieldSrc, \n      parentField, id, groupId, isLocked\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    \n    return <FieldWrapper\n      key=\"field\"\n      classname={\"group--field\"}\n      config={config}\n      canSelectFieldSource={false}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={setField}\n      setFuncValue={setFuncValue}\n      setFieldSrc={setFieldSrc}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  extraPropsForItem(_item) {\n    return {\n      parentField: this.props.selectedField\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group\")(WithConfirmFn(RuleGroup)), \"rule_group\");\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupExtActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addSubRuleLabel, delGroupLabel,\n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addRuleGroupExt\" onClick={addRule} label={addSubRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={\"group--actions group--actions--tr\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupExtActions} from \"./RuleGroupExtActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\nconst {isEmptyRuleGroupExtPropertiesAndChildren} = Utils.RuleUtils;\n\n\nclass RuleGroupExt extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    value: PropTypes.any,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    setOperator: PropTypes.func,\n    setValue: PropTypes.func,\n    valueError: PropTypes.any,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    super.onPropsChanged(nextProps);\n  }\n\n  childrenClassName = () => \"rule_group_ext--children\";\n  \n  renderFooterWrapper = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => true;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderGroupField()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderGroupField() {\n    return (\n      <div className={\"group--field--count--rule\"}>\n        {this.renderField()}\n        {this.renderOperator()}\n        {this.renderWidget()}\n        {this.renderError()}\n      </div>\n    );\n  }\n\n  renderError() {\n    const {config, valueError} = this.props;\n    const { renderRuleError, showErrorMessage } = config.settings;\n    const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n        && <div className=\"rule_group--error\">\n          {renderRuleError ? renderRuleError({error: oneError}, config.ctx) : oneError}\n        </div>;\n  }\n\n  showNot() {\n    const {config, selectedField, selectedOperator} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField) || {};\n    return selectedFieldConfig.showNot != undefined ? selectedFieldConfig.showNot : config.settings.showNot;\n  }\n\n  conjunctionOptions() {\n    const {config, selectedField, selectedOperator} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField) || {};\n    let conjunctionOptions = super.conjunctionOptions();\n    if (selectedFieldConfig.conjunctions) {\n      let filtered = {};\n      for (let k of selectedFieldConfig.conjunctions) {\n        const options = conjunctionOptions[k];\n        if (options) {\n          filtered[k] = options;\n        }\n      }\n      conjunctionOptions = filtered;\n    }\n    return conjunctionOptions;\n  }\n\n  renderField() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, setField, setFieldSrc, setFuncValue,\n      parentField, id, groupId, isLocked\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    \n    return <FieldWrapper\n      key=\"field\"\n      classname={\"rule--field\"}\n      config={config}\n      canSelectFieldSource={false}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={setField}\n      setFuncValue={setFuncValue}\n      setFieldSrc={setFieldSrc}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator() {\n    const {config, selectedField, selectedFieldSrc, selectedOperator, setField, setOperator, isLocked} = this.props;\n    const { immutableFieldsMode } = config.settings;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n    const showOperatorLabel = selectedField && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showOperator = selectedField && !hideOperator;\n\n    return <OperatorWrapper\n      key=\"operator\"\n      classname={\"group--operator\"}\n      config={config}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedOperator={selectedOperator}\n      setOperator={setOperator}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableFieldsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    const {children1, config} = this.props;\n    const ruleData = this._buildWidgetProps(this.props);\n    return isEmptyRuleGroupExtPropertiesAndChildren(ruleData, children1, config);\n  }\n\n  _buildWidgetProps({\n    selectedField, selectedFieldSrc, selectedFieldType,\n    selectedOperator, operatorOptions,\n    value, valueType, valueSrc, asyncListValues, valueError, fieldError,\n    parentField,\n  }) {\n    return {\n      field: selectedField,\n      fieldSrc: selectedFieldSrc,\n      fieldType: selectedFieldType,\n      operator: selectedOperator,\n      operatorOptions,\n      value,\n      valueType, // new Immutable.List([\"number\"])\n      // todo: aggregation can be not only number?\n      valueSrc: [\"value\"], //new Immutable.List([\"value\"]), // should be fixed in isEmptyRuleGroupExtPropertiesAndChildren\n      //asyncListValues,\n      valueError,\n      fieldError: null,\n      parentField,\n    };\n  }\n\n  renderWidget() {\n    const {config, selectedField, selectedOperator, isLocked} = this.props;\n    const { immutableValuesMode } = config.settings;\n    const isFieldAndOpSelected = selectedField && selectedOperator;\n    const showWidget = isFieldAndOpSelected;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      isForRuleGroup={true}\n      {...this._buildWidgetProps(this.props)}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      // todo: aggregation can be not only number?\n      setValueSrc={dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupExtActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1?.size || 0;\n  }\n\n  extraPropsForItem(_item) {\n    return {\n      parentField: this.props.selectedField\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group_ext\")(WithConfirmFn(RuleGroupExt)), \"rule_group\");\n\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class SwitchGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addCaseGroup, addDefaultCaseGroup, setLock, isLocked, isTrueLocked, id, canAddGroup, canAddDefault\n    } = this.props;\n    const {\n      immutableGroupsMode, addCaseLabel, addDefaultCaseLabel, groupActionsPosition, \n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addCaseGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addCaseGroup\" onClick={addCaseGroup} label={addCaseLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const addDefaultCaseGroupBtn = !immutableGroupsMode && canAddDefault && !isLocked && <Btn\n      type=\"addDefaultCaseGroup\" onClick={addDefaultCaseGroup} label={addDefaultCaseLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addCaseGroupBtn}\n          {addDefaultCaseGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {SwitchGroupActions} from \"./SwitchGroupActions\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getTotalReordableNodesCountInTree, getTotalRulesCountInTree} = Utils.TreeUtils;\n\n\nclass SwitchGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    super.onPropsChanged(nextProps);\n  }\n\n  childrenClassName = () => \"switch_group--children\";\n  \n  renderFooterWrapper = () => null;\n  hasDefaultCase = () => {\n    return this.props.children1?.size && this.props.children1.filter(c => c.get(\"children1\") == null).size > 0;\n  };\n  canAddGroup() {\n    const { maxNumberOfCases } = this.props.config.settings;\n    const totalCasesCnt = this.props.children1?.size || 0;\n    if (maxNumberOfCases) {\n      return totalCasesCnt < maxNumberOfCases;\n    }\n    return true;\n  }\n  canAddRule() {\n    return false;\n  }\n\n  reordableNodesCnt() {\n    // result will be passed to each case's `parentReordableNodesCnt` prop\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n    return casesToReorder;\n  }\n\n  totalRulesCntForItem(item) {\n    return getTotalRulesCountInTree(item);\n  }\n\n  reordableNodesCntForItem(item) {\n    if (this.props.isLocked)\n      return 0;\n    const { canLeaveEmptyCase, canRegroupCases } = this.props.config.settings;\n\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n\n    const nodesInCase = getTotalReordableNodesCountInTree(item);\n    let cnt = nodesInCase;\n    if (cnt == 1 && canRegroupCases && canLeaveEmptyCase && casesToReorder > 1)\n      cnt = 111;\n    return cnt;\n  }\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        //this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderConjs() {\n    const { config } = this.props;\n    const { renderSwitchPrefix } = config.settings;\n    return renderSwitchPrefix || null;\n  }\n\n  showNot() {\n    return false;\n  }\n\n\n  renderActions() {\n    const {config, addCaseGroup, addDefaultCaseGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <SwitchGroupActions\n      config={config}\n      addCaseGroup={addCaseGroup}\n      addDefaultCaseGroup={addDefaultCaseGroup}\n      canAddDefault={!this.hasDefaultCase()}\n      canAddGroup={this.canAddGroup()}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n}\n\n\nexport default GroupContainer(Draggable(\"group switch_group\")(WithConfirmFn(SwitchGroup)), \"switch_group\");\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {GroupActions} from \"./GroupActions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn, getRenderFromConfig} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\n\n\nclass CaseGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    parentReordableNodesCnt: PropTypes.number,\n    value: PropTypes.any,\n    setValue: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const configChanged = !this.renderBeforeCaseValue || prevProps?.config !== nextProps?.config;\n\n    super.onPropsChanged(nextProps);\n\n    if (configChanged) {\n      const { config } = nextProps;\n      const { renderBeforeCaseValue, renderAfterCaseValue, renderRuleError } = config.settings;\n      this.BeforeCaseValue = getRenderFromConfig(config, renderBeforeCaseValue);\n      this.AfterCaseValue = getRenderFromConfig(config, renderAfterCaseValue);\n      this.RuleError = getRenderFromConfig(config, renderRuleError);\n    }\n  }\n\n  isDefaultCase() {\n    return this.props.children1 == undefined;\n  }\n\n  reordableNodesCnt() {\n    // `parentReordableNodesCnt` is number of cases to reorder\n    return this.props.parentReordableNodesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    // `reordableNodesCnt` is number of nodes is current case\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    // `totalRulesCnt` is number of nodes is current case\n    return this.props.totalRulesCnt;\n  }\n\n  showDragIcon() {\n    // default impl of `showDragIcon()` uses `this.reordableNodesCnt()`\n    if (this.isDefaultCase())\n      return false;\n    return super.showDragIcon();\n  }\n\n  childrenClassName = () => \"case_group--children\";\n  \n  renderFooterWrapper = () => null;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeaderLeft()}\n        {this.renderHeaderCenter()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderChildrenWrapper() {\n    if (this.isDefaultCase())\n      return null;\n    // body has 2 columns: condition & value\n    return (\n      <div className={\"case_group--body\"}>\n        {this.renderCondition()}\n        {this.renderBeforeValue()}\n        {this.renderValue()}\n        {this.renderAfterValue()}\n      </div>\n    );\n  }\n\n  renderHeaderLeft() {\n    if (this.isDefaultCase()) {\n      const { defaultCaseLabel } = this.props.config.settings;\n      return defaultCaseLabel || \"\";\n    }\n    // default impl:\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n        {this.renderError()}\n      </div>\n    );\n  }\n\n  renderCondition() {\n    if (this.isDefaultCase())\n      return null;\n    return super.renderChildrenWrapper();\n  }\n\n  renderHeaderCenter() {\n    if (this.isDefaultCase()) {\n      return (\n        <div>\n          {this.renderValue()}\n          {this.renderError()}\n        </div>\n      );\n    }\n    return null;\n  }\n\n  canAddGroup() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddGroup();\n  }\n\n  canAddRule() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddRule();\n  }\n\n  renderBeforeValue() {\n    const BeforeCaseValue = this.BeforeCaseValue;\n    if (BeforeCaseValue == undefined)\n      return null;\n    return <BeforeCaseValue\n      key=\"values-before\"\n      {...this.props}\n    />;\n  }\n\n  renderAfterValue() {\n    const AfterCaseValue = this.AfterCaseValue;\n    if (AfterCaseValue == undefined)\n      return null;\n    return <AfterCaseValue\n      key=\"values-after\"\n      {...this.props}\n    />;\n  }\n\n  renderError() {\n    const {config, valueError} = this.props;\n    const { showErrorMessage } = config.settings;\n    const RuleError = this.RuleError;\n    const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n      && <div className=\"rule--error\">\n        {RuleError ? <RuleError error={oneError} /> : oneError}\n      </div>;\n  }\n\n  renderValue() {\n    const { config, isLocked, value, valueSrc, valueError, setValue, setValueSrc, setFuncValue, id } = this.props;\n    const { immutableValuesMode } = config.settings;\n\n    const widget = <Widget\n      key=\"values\"\n      isCaseValue={true}\n      field={\"!case_value\"}\n      operator={null}\n      value={value}\n      valueSrc={valueSrc ?? \"value\"}\n      valueError={valueError}\n      fieldError={null}\n      config={config}\n      setValue={!immutableValuesMode ? setValue : dummyFn}\n      setValueSrc={!immutableValuesMode ? setValueSrc : dummyFn}\n      setFuncValue={!immutableValuesMode ? setFuncValue : dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={id}\n      groupId={null}\n    />;\n\n    return (\n      <Col className=\"case_group--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addGroup, addRule, isLocked, isTrueLocked, id} = this.props;\n    return <GroupActions\n      config={config}\n      addGroup={addGroup}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canAddGroup={this.canAddGroup()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    // used to confirm self-deletion\n    const { value } = this.props;\n    const oneValue = value && value.size ? value.get(0) : null;\n    const hasValue = oneValue != null && (Array.isArray(oneValue) ? oneValue.length > 0 : true);\n    return super.isEmptyCurrentGroup() && !hasValue;\n  }\n\n}\n\nexport default GroupContainer(Draggable(\"group case_group\")(WithConfirmFn(CaseGroup)), \"case_group\");\n\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Rule from \"./Rule\";\nimport Group from \"./Group\";\nimport RuleGroup from \"./RuleGroup\";\nimport RuleGroupExt from \"./RuleGroupExt\";\nimport SwitchGroup from \"./SwitchGroup\";\nimport CaseGroup from \"./CaseGroup\";\n\nconst types = [\n  \"rule\",\n  \"group\",\n  \"rule_group\",\n  \"switch_group\",\n  \"case_group\"\n];\n\nconst getProperties = (props) => {\n  const properties = props.properties?.toObject() || {};\n  const result = {...properties};\n  if (props.isParentLocked) {\n    result.isLocked = true;\n  }\n  if (properties.isLocked) {\n    result.isTrueLocked = true;\n  }\n  return result;\n};\n\nconst typeMap = {\n  rule: (props) => (\n    <Rule\n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      config={props.config}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  group: (props) => (\n    <Group \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  rule_group: (props) => (\n    <RuleGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  rule_group_ext: (props) => (\n    <RuleGroupExt \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  switch_group: (props) => (\n    <SwitchGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  case_group: (props) => (\n    <CaseGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n};\n\n\nclass Item extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    type: PropTypes.oneOf(types).isRequired,\n    path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n    properties: PropTypes.any, //instanceOf(Immutable.Map)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    actions: PropTypes.object.isRequired,\n    reordableNodesCnt: PropTypes.number,\n    onDragStart: PropTypes.func,\n    parentField: PropTypes.string, //from RuleGroup\n    isDraggingTempo: PropTypes.bool,\n    isParentLocked: PropTypes.bool,\n  };\n\n  render() {\n    const { type, ...props } = this.props;\n    const mode = props.properties?.get(\"mode\");\n    const postfix = mode == \"array\" ? \"_ext\" : \"\";    \n    const renderItem = props.config.settings.renderItem;\n    let Cmp = typeMap[type + postfix];\n    if (renderItem) {\n      return renderItem({...props, type, itemComponent: Cmp}, props.config.ctx);\n    }\n    if (!Cmp) return null;\n    return Cmp(props);\n  }\n}\n\nexport { Item };\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Item } from \"./item/Item\";\nimport SortableContainer from \"./containers/SortableContainer\";\nimport {pureShouldComponentUpdate} from \"../utils/reactUtils\";\nconst { getTotalReordableNodesCountInTree, getTotalRulesCountInTree } = Utils.TreeUtils;\nconst { createListWithOneElement, emptyProperties } = Utils.DefaultUtils;\n\nclass Builder extends Component {\n  static propTypes = {\n    tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    config: PropTypes.object.isRequired,\n    actions: PropTypes.object.isRequired,\n    onDragStart: PropTypes.func,\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const should = this.pureShouldComponentUpdate(nextProps, nextState);\n    return should;\n  }\n\n  constructor(props) {\n    super(props);\n    this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n\n    this._updPath(props);\n  }\n\n  _updPath (props) {\n    const id = props.tree.get(\"id\");\n    this.path = createListWithOneElement(id);\n  }\n\n  render() {\n    const {\n      tree, config, actions, onDragStart,\n    } = this.props;\n    const rootType = tree.get(\"type\");\n    const isTernary = rootType == \"switch_group\";\n    const reordableNodesCnt = isTernary ? null : getTotalReordableNodesCountInTree(tree);\n    const totalRulesCnt = isTernary ? null : getTotalRulesCountInTree(tree);\n    const id = tree.get(\"id\");\n    return (\n      <Item \n        key={id}\n        id={id}\n        path={this.path}\n        type={rootType}\n        properties={tree.get(\"properties\") || emptyProperties()}\n        config={config}\n        actions={actions}\n        children1={tree.get(\"children1\") || emptyProperties()}\n        reordableNodesCnt={reordableNodesCnt}\n        totalRulesCnt={totalRulesCnt}\n        parentReordableNodesCnt={0}\n        onDragStart={onDragStart}\n      />\n    );\n  }\n}\n\nexport default SortableContainer(Builder);\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {clone} = Utils;\nconst {getFieldConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\nconst {getFieldPathLabels, getWidgetForFieldOp} = Utils.RuleUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class ValueField extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    value: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    parentField: PropTypes.string,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"fieldSrc\", \"fieldType\", \"operator\", \"isFuncArg\", \"parentField\"];\n    const keysForMeta = [\"config\", \"field\", \"fieldSrc\", \"fieldType\", \"operator\", \"value\", \"placeholder\", \"isFuncArg\", \"parentField\"];\n    const needUpdateItems = !this.items || keysForItems.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps);\n    }\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getItems({config, field, fieldType, operator, parentField, isFuncArg, fieldDefinition}) {\n    const {canCompareFieldWithField} = config.settings;\n    // const fieldSeparator = config.settings.fieldSeparator;\n    const parentFieldPath = getFieldParts(parentField, config);\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig?.subfields : config.fields;\n\n    const filteredFields = this.filterFields(config, sourceFields, field, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition, fieldType);\n    const items = this.buildOptions(parentFieldPath, config, filteredFields, parentFieldPath);\n    return items;\n  }\n\n  getMeta({config, field, fieldType, operator, value, placeholder: customPlaceholder, isFuncArg, parentField}) {\n    const {fieldPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedKey = value;\n    const isFieldSelected = !!value;\n\n    const leftFieldConfig = field ? getFieldConfig(config, field) : {};\n    const leftFieldWidgetField = leftFieldConfig?.widgets?.field;\n    const leftFieldWidgetFieldProps = leftFieldWidgetField?.widgetProps || {};\n    const placeholder = isFieldSelected ? null \n      : (isFuncArg && customPlaceholder || leftFieldWidgetFieldProps.valuePlaceholder || fieldPlaceholder);\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPathParts(selectedKey, config);\n    const selectedPath = getFieldPathParts(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2 || selectedOpts.tooltip;\n\n    return {\n      placeholder,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n    };\n  }\n\n  filterFields(config, fields, leftFieldFullkey, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition, fieldType) {\n    fields = clone(fields);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = config.widgets[widget];\n    let expectedType;\n    if (isFuncArg) {\n      expectedType = fieldDefinition?.type;\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else if (leftFieldConfig) {\n      expectedType = leftFieldConfig.type;\n    } else {\n      // no field at LHS, but can use type from \"memory effect\"\n      expectedType = fieldType;\n    }\n    \n    function _filter(list, path) {\n      for (let rightFieldKey in list) {\n        let subfields = list[rightFieldKey].subfields;\n        let subpath = (path ? path : []).concat(rightFieldKey);\n        let rightFieldFullkey = subpath.join(fieldSeparator);\n        let rightFieldConfig = getFieldConfig(config, rightFieldFullkey);\n        if (!rightFieldConfig) {\n          delete list[rightFieldKey];\n        } else if (rightFieldConfig.type == \"!struct\" || rightFieldConfig.type == \"!group\") {\n          if (_filter(subfields, subpath) == 0)\n            delete list[rightFieldKey];\n        } else {\n          // tip: LHS field can be used as arg in RHS function\n          let canUse = (!expectedType || rightFieldConfig.type == expectedType)\n            && (isFuncArg ? true : rightFieldFullkey != leftFieldFullkey);\n          let fn = canCompareFieldWithField || config.settings.canCompareFieldWithField;\n          if (fn)\n            canUse = canUse && fn(leftFieldFullkey, leftFieldConfig, rightFieldFullkey, rightFieldConfig, operator);\n          if (!canUse)\n            delete list[rightFieldKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(fields, parentFieldPath || []);\n\n    return fields;\n  }\n\n  buildOptions(parentFieldPath, config, fields, path = null, optGroup = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    return keys(fields).map(fieldKey => {\n      const fullFieldPath = [...(path ?? []), fieldKey];\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fullFieldPath, config);\n      const partsLabels = getFieldPathLabels(fullFieldPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n\n      if (field.hideForCompare)\n        return undefined;\n\n      if (field.type == \"!struct\" || field.type == \"!group\") {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items: this.buildOptions(parentFieldPath, config, field.subfields, fullFieldPath, {\n            label,\n            tooltip,\n          })\n        };\n      } else {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = getFieldParts(fieldKey, config);\n    let label = fieldOpts?.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      isValueField: true,\n      config,\n      customProps,\n      setField: setValue,\n      readonly,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, labelYes, labelNo, readonly, widgetId, customProps = {}} = props;\n  const customRadioYesProps = customProps.radioYes || {};\n  const customRadioNoProps = customProps.radioNo || {};\n\n  const onCheckboxChange = e => setValue(e.target.checked);\n  const onRadioChange = e => setValue(e.target.value == \"true\");\n\n  // return <>\n  //     <input key={widgetId}  type=\"checkbox\" id={widgetId} checked={!!value} disabled={readonly} onChange={onCheckboxChange} />\n  //     <label style={{display: \"inline\"}} key={id+\"label\"}  htmlFor={widgetId}>{value ? labelYes : labelNo}</label>\n  // </>;\n\n  return <>\n    <input type=\"radio\" value={true} checked={!!value} disabled={readonly} onChange={onRadioChange} { ...customRadioYesProps }/> {labelYes}\n    <input type=\"radio\" value={false} checked={!value} disabled={readonly} onChange={onRadioChange} { ...customRadioNoProps } /> {labelNo}\n  </>;\n\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <input\n      type=\"text\" \n      value={textValue} \n      placeholder={placeholder} \n      disabled={readonly} \n      onChange={onChange}\n      maxLength={maxLength}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, maxRows, fullWidth, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <textarea\n      value={textValue} \n      placeholder={placeholder}\n      disabled={readonly}\n      onChange={onChange}\n      maxLength={maxLength}\n      style={{\n        width: fullWidth ? \"100%\" : undefined\n      }}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"date\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"time\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    else\n      value = moment(new Date(value)).format(valueFormat);\n    setValue(value);\n  };\n\n  let dtValue = value;\n  if (!value)\n    dtValue = \"\";\n  else\n    dtValue = moment(value).format(\"YYYY-MM-DDTHH:mm\");\n  \n  return (\n    <input type=\"datetime-local\"  value={dtValue}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const getMultiSelectValues = (multiselect) => {\n    let values = [];\n    const options = multiselect.options;\n    for (let i = 0 ; i < options.length ; i++) {\n      const opt = options[i];\n      if (opt.selected) {\n        values.push(opt.value);\n      }\n    }\n    if (!values.length)\n      values = undefined; //not allow []\n    return values;\n  };\n\n  const onChange = e => setValue(getMultiSelectValues(e.target));\n  \n  return (\n    <select multiple\n      onChange={onChange}\n      value={value}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n    >\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const onChange = e => setValue(e.target.value);\n  \n  const hasValue = value != null;\n  return (\n    <select\n      onChange={onChange}\n      value={hasValue ? value : \"\"}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\"])}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <input type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps = {}, } = props;\n  const customInputProps = customProps.input || {};\n  const customSliderProps = customProps.slider || customProps;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <div style={{display: \"inline-flex\"}}>\n      <input key={\"number\"} type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customInputProps} />\n      <input key={\"range\"} type=\"range\"  value={numberValue} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customSliderProps} />\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({items, setField, selectedKey, readonly, errorText}) => {\n  const renderOptions = (fields) => (\n    fields.map(field => {\n      const {items, path, label, disabled, matchesType} = field;\n      if (items) {\n        return <optgroup disabled={disabled} key={path} label={label}>{renderOptions(items)}</optgroup>;\n      } else {\n        const style = matchesType ? { fontWeight: \"bold\" } : {};\n        return <option disabled={disabled} key={path} value={path} style={style}>{label}</option>;\n      }\n    })\n  );\n\n  const onChange = e => setField(e.target.value);\n  \n  const hasValue = selectedKey != null;\n  return (\n    <select \n      onChange={onChange}\n      value={hasValue ? selectedKey : \"\"}\n      disabled={readonly}\n      style={{ color: errorText ? \"red\" : null }}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions(items)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel}) => {\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(key => {\n      const {id, name, label, checked} = conjunctionOptions[key];\n      const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n      if ((readonly || disabled) && !checked)\n        return null;\n      return [\n        <input key={id+postfix} type=\"radio\" id={id+postfix} name={name+postfix} checked={checked} disabled={readonly || disabled} value={key} onChange={onChange} />\n        ,\n        <label key={id+postfix+\"label\"} htmlFor={id+postfix}>{label}</label>\n      ];\n    });\n  \n  const renderNot = () => {\n    const postfix = \"not\";\n    return [\n      <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={not} disabled={readonly} onChange={onNotChange} />\n      ,\n      <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{notLabel || \"NOT\"}</label>\n    ];\n  };\n\n  const onChange = e => setConjunction(e.target.value);\n\n  const onNotChange = e => setNot(e.target.checked);\n\n  return [\n    showNot && renderNot(),\n    showConj && renderOptions()\n  ];\n  \n};\n","import React from \"react\";\n\nconst typeToLabel = {\n  \"addRuleGroup\": \"+\",\n  \"addRuleGroupExt\": \"+\",\n  \"delGroup\": \"x\",\n  \"delRuleGroup\": \"x\",\n  \"delRule\": \"x\",\n};\n\nexport default ({type, label, onClick, readonly}) => {\n  const btnLabel = label || typeToLabel[type];\n  return <button onClick={onClick} type=\"button\" disabled={readonly}>{btnLabel}</button>;\n};\n","import React from \"react\";\nimport { DragIcon } from \"../../../utils\";\n\nexport default ({type}) => {\n  const typeToIcon = {\n  };\n  let icon = typeToIcon[type] || null;\n  if (!icon && type === \"drag\") {\n    icon = <DragIcon />;\n  }\n\n  return icon;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\n\nexport default ({config, valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => (\n      <option key={srcKey} value={srcKey}>{info.label}</option>\n    ))\n  );\n\n  const onChange = e => setValueSrc(e.target.value);\n  \n  return (\n    <select \n      onChange={onChange}\n      value={valueSrc || \"\"}\n      disabled={readonly}\n    >\n      {renderOptions(valueSources)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({value, setValue, label, id, config, type}) => {\n  const onChange = e => setValue(e.target.checked);\n  const postfix = type;\n  return [\n    <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={!!value} onChange={onChange} />\n    ,\n    <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{label}</label>\n  ];\n};\n","export default ({onOk, okText, cancelText, title}) => {\n  if (confirm(title)) {\n    onOk();\n  }\n};\n","import React from \"react\";\n\n// value widgets\nexport {default as VanillaBooleanWidget} from \"./value/VanillaBoolean\";\nexport {default as VanillaTextWidget} from \"./value/VanillaText\";\nexport {default as VanillaTextAreaWidget} from \"./value/VanillaTextArea\";\nexport {default as VanillaDateWidget} from \"./value/VanillaDate\";\nexport {default as VanillaTimeWidget} from \"./value/VanillaTime\";\nexport {default as VanillaDateTimeWidget} from \"./value/VanillaDateTime\";\nexport {default as VanillaMultiSelectWidget} from \"./value/VanillaMultiSelect\";\nexport {default as VanillaSelectWidget} from \"./value/VanillaSelect\";\nexport {default as VanillaNumberWidget} from \"./value/VanillaNumber\";\nexport {default as VanillaSliderWidget} from \"./value/VanillaSlider\";\n\n// field select widget\nexport {default as VanillaFieldSelect} from \"./core/VanillaFieldSelect\";\n\n// core components\nexport {default as VanillaConjs} from \"./core/VanillaConjs\";\nexport {default as VanillaButton} from \"./core/VanillaButton\";\nexport {default as VanillaIcon} from \"./core/VanillaIcon\";\nexport {default as VanillaButtonGroup} from \"./core/VanillaButtonGroup\";\nexport {default as VanillaValueSources} from \"./core/VanillaValueSources\";\nexport {default as VanillaSwitch} from \"./core/VanillaSwitch\";\nexport {default as vanillaConfirm} from \"./core/vanillaConfirm\";\n\nexport const VanillaProvider = ({config, children}) => children;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\n\nexport default class Proximity extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    setOption: PropTypes.func.isRequired,\n    options: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    minProximity: PropTypes.number,\n    maxProximity: PropTypes.number,\n    optionPlaceholder: PropTypes.string,\n    optionTextBefore: PropTypes.string,\n    optionLabel: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //children\n  };\n\n  static defaultProps = {\n    customProps: {},\n    minProximity: 2,\n    maxProximity: 10,\n    optionPlaceholder: \"Select words between\",\n    optionLabel: \"Words between\",\n    optionTextBefore: null,\n  };\n\n  handleChange = (value) => {\n    this.props.setOption(\"proximity\", parseInt(value));\n  };\n\n  render() {\n    const {\n      defaults, options, config, optionLabel, optionPlaceholder, customProps, \n      minProximity, maxProximity, optionTextBefore, readonly\n    } = this.props;\n    const {settings, widgets, ctx} = config;\n    const defaultProximity = defaults ? defaults.proximity : undefined;\n    const {showLabels} = settings;\n    const selectedProximity = options.get(\"proximity\", defaultProximity);\n    const proxValues = range(minProximity, maxProximity + 1).map((item) => ({title: item, value: item}));\n    const factory = widgets.select.factory;\n    const Select = (props) => factory(props, ctx);\n\n    return (\n      <div className=\"operator--PROXIMITY\">\n        <div className=\"operator--options\">\n          { showLabels\n            && <label className=\"rule--label\">{optionLabel}</label>\n          }\n          { !showLabels && optionTextBefore\n            && <div className=\"operator--options--sep\">\n              <span>{optionTextBefore}</span>\n            </div>\n          }\n          <Select\n            config={config}\n            value={selectedProximity}\n            listValues={proxValues}\n            setValue={this.handleChange}\n            readonly={readonly}\n            placeholder={optionPlaceholder}\n            {...customProps}\n          />\n        </div>\n        <div className=\"operator--widgets\">{this.props.children}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport * as Widgets from \"../components/widgets\";\nimport * as CustomOperators from \"../components/operators\";\nimport { CoreConfig, Utils } from \"@react-awesome-query-builder/core\";\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  ...CoreConfig.conjunctions,\n};\n\n//----------------------------  operators\n\nconst operators = {\n  ...CoreConfig.operators,\n  proximity: {\n    ...CoreConfig.operators.proximity,\n    options: {\n      ...CoreConfig.operators.proximity.options,\n      factory: (props, {RCE, O: {ProximityOperator}}) => RCE(ProximityOperator, props),\n    },\n  },\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    ...CoreConfig.widgets.text,\n    factory: (props, {RCE, W: {VanillaTextWidget}}) => RCE(VanillaTextWidget, props),\n  },\n  textarea: {\n    ...CoreConfig.widgets.textarea,\n    factory: (props, {RCE, W: {VanillaTextAreaWidget}}) => RCE(VanillaTextAreaWidget, props),\n  },\n  number: {\n    ...CoreConfig.widgets.number,\n    factory: (props, {RCE, W: {VanillaNumberWidget}}) => RCE(VanillaNumberWidget, props),\n  },\n  slider: {\n    ...CoreConfig.widgets.slider,\n    factory: (props, {RCE, W: {VanillaSliderWidget}}) => RCE(VanillaSliderWidget, props),\n  },\n  select: {\n    ...CoreConfig.widgets.select,\n    factory: (props, {RCE, W: {VanillaSelectWidget}}) => RCE(VanillaSelectWidget, props),\n  },\n  multiselect: {\n    ...CoreConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {VanillaMultiSelectWidget}}) => RCE(VanillaMultiSelectWidget, props),\n  },\n  date: {\n    ...CoreConfig.widgets.date,\n    factory: (props, {RCE, W: {VanillaDateWidget}}) => RCE(VanillaDateWidget, props),\n  },\n  time: {\n    ...CoreConfig.widgets.time,\n    factory: (props, {RCE, W: {VanillaTimeWidget}}) => RCE(VanillaTimeWidget, props),\n  },\n  datetime: {\n    ...CoreConfig.widgets.datetime,\n    factory: (props, {RCE, W: {VanillaDateTimeWidget}}) => RCE(VanillaDateTimeWidget, props),\n  },\n  boolean: {\n    ...CoreConfig.widgets.boolean,\n    factory: (props, {RCE, W: {VanillaBooleanWidget}}) => RCE(VanillaBooleanWidget, props),\n  },\n  field: {\n    ...CoreConfig.widgets.field,\n    factory: (props, {RCE, W: {ValueFieldWidget}}) => RCE(ValueFieldWidget, props),\n    customProps: {\n      showSearch: true\n    }\n  },\n  func: {\n    ...CoreConfig.widgets.func,\n    factory: (props, {RCE, W: {FuncWidget}}) => RCE(FuncWidget, props),\n    customProps: {\n      //showSearch: true\n    }\n  },\n  /**\n   * @deprecated\n   */\n  case_value: {\n    ...CoreConfig.widgets.case_value,\n    // simple text value\n    factory: (props, {RCE, W: {VanillaTextWidget}}) =>  RCE(VanillaTextWidget, props),\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  ...CoreConfig.types,\n  select: {\n    ...CoreConfig.types.select,\n    widgets: {\n      ...CoreConfig.types.select.widgets,\n      select: {\n        ...CoreConfig.types.select.widgets.select,\n        widgetProps: {\n          customProps: {\n            showSearch: true\n          }\n        },\n      }\n    }\n  }\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...CoreConfig.settings,\n\n  renderField: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderOperator: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderFunc: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderConjs: (props, {RCE, W: {VanillaConjs}}) => RCE(VanillaConjs, props),\n  renderSwitch: (props, {RCE, W: {VanillaSwitch}}) => RCE(VanillaSwitch, props),\n  renderButton: (props, {RCE, W: {VanillaButton}}) => RCE(VanillaButton, props),\n  renderIcon: (props, {RCE, W: {VanillaIcon}}) => RCE(VanillaIcon, props),\n  renderButtonGroup: (props, {RCE, W: {VanillaButtonGroup}}) => RCE(VanillaButtonGroup, props),\n  renderProvider: (props, {RCE, W: {VanillaProvider}}) => RCE(VanillaProvider, props),\n  renderValueSources: (props, {RCE, W: {VanillaValueSources}}) => RCE(VanillaValueSources, props),\n  renderFieldSources: (props, {RCE, W: {VanillaValueSources}}) => RCE(VanillaValueSources, props),\n  renderConfirm: (props, {W: {vanillaConfirm}}) => vanillaConfirm(props),\n  renderSwitchPrefix: \"IF\",\n  renderBeforeCaseValue: (props, {RCE}) => RCE(\"span\", {children: [\" then \"]}),\n\n  customFieldSelectProps: {\n    showSearch: true\n  },\n\n  defaultSliderWidth: \"200px\",\n  defaultSelectWidth: \"200px\",\n  defaultSearchWidth: \"100px\",\n  defaultMaxRows: 5,\n  renderSize: \"small\",\n  maxLabelsLength: 100,\n\n  showLock: false,\n  showNot: true,\n  forceShowConj: false,\n  groupActionsPosition: \"topRight\", // oneOf [topLeft, topCenter, topRight, bottomLeft, bottomCenter, bottomRight]\n  \n};\n\n//----------------------------\n\nconst ctx = {\n  ...CoreConfig.ctx,\n  W: {\n    ...Widgets\n  },\n  O: {\n    ...CustomOperators\n  },\n  RCE: (C, P) => React.createElement(C, P),\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\nconfig = Utils.ConfigMixins.removeMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport debounce from \"lodash/debounce\";\nconst { mergeListValues, listValueToOption, optionToListValue, optionsToListValues, fixListValuesGroupOrder } = Utils.Autocomplete;\nconst { mapListValues, listValuesToArray, getListValue, makeCustomListValue, searchListValue, getItemInListValues } = Utils.ListUtils;\n\nfunction sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\nconst useListValuesAutocomplete = ({\n  asyncFetch, useLoadMore, useAsyncSearch, forceAsyncSearch,\n  asyncListValues: selectedAsyncListValues,\n  listValues: staticListValues, allowCustomValues,\n  value: selectedValue, setValue, placeholder, \n  config\n}, {\n  debounceTimeout,\n  multiple,\n  uif,\n  isFieldAutocomplete,\n}) => {\n  const knownSpecialValues = [\"LOAD_MORE\", \"LOADING_MORE\"];\n  const loadMoreTitle = \"Load more...\";\n  const loadingMoreTitle = \"Loading more...\";\n  const aPlaceholder = forceAsyncSearch ? \"Type to search\" : placeholder;\n\n  // state\n  const [open, setOpen] = React.useState(false);\n  const [asyncFetchMeta, setAsyncFetchMeta] = React.useState(undefined);\n  const [loadingCnt, setLoadingCnt] = React.useState(0);\n  const [isLoadingMore, setIsLoadingMore] = React.useState(false);\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [asyncListValues, setAsyncListValues] = React.useState(undefined);\n\n  // ref\n  const asyncFectchCnt = React.useRef(0);\n  const componentIsMounted = React.useRef(0);\n  const isSelectedLoadMore = React.useRef(false);\n\n  // compute\n  const nSelectedAsyncListValues = React.useMemo(() => (\n    listValuesToArray(selectedAsyncListValues)\n  ), [\n    selectedAsyncListValues,\n  ]);\n  const listValues = React.useMemo(() => (\n    asyncFetch\n      ? (selectedAsyncListValues ? mergeListValues(asyncListValues, nSelectedAsyncListValues, true) : asyncListValues)\n      : listValuesToArray(staticListValues)\n  ), [\n    asyncFetch,\n    selectedAsyncListValues,\n    asyncListValues,\n    staticListValues,\n  ]);\n  // todo: useMemo for calcing listValuesToDisplay ?\n  let listValuesToDisplay = asyncFetch\n    ? asyncListValues\n    : listValuesToArray(staticListValues);\n  if (allowCustomValues && inputValue && !searchListValue(inputValue, asyncListValues)) {\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, [makeCustomListValue(inputValue)], true);\n  }\n  if (asyncFetch && !asyncListValues && selectedAsyncListValues && !inputValue && !open && uif === \"antd\") {\n    // for initial loading, to resolve \"a\" -> \"A\"\n    listValuesToDisplay = listValues;\n  }\n  if (asyncFetch && !allowCustomValues && selectedAsyncListValues && uif === \"mui\") {\n    // to prevent warning, when select A, search E -> A is missing in options\n    //  MUI: The value provided to Autocomplete is invalid.\n    //  None of the options match with `\"a\"`.\n    //  You can use the `isOptionEqualToValue` prop to customize the equality test.\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, nSelectedAsyncListValues, true, true);\n  }\n  //const isDirtyInitialListValues = asyncListValues == undefined && selectedAsyncListValues && selectedAsyncListValues.length && typeof selectedAsyncListValues[0] != \"object\";\n  const isLoading = loadingCnt > 0;\n  const canInitialLoad = open && asyncFetch\n    && asyncListValues === undefined\n    && (forceAsyncSearch ? inputValue : true);\n  const isInitialLoading = canInitialLoad && isLoading;\n  const canLoadMore = !isInitialLoading && listValues && listValues.length > 0\n    && asyncFetchMeta && asyncFetchMeta.hasMore && (asyncFetchMeta.filter || \"\") === inputValue;\n  const canShowLoadMore = !isLoading && canLoadMore;\n  const options = mapListValues(listValuesToDisplay, listValueToOption);\n  const hasValue = selectedValue != null;\n  const selectedListValue = !multiple && hasValue ? getListValue(selectedValue, listValues) : null;\n  // const selectedListValues = multiple && hasValue ? selectedValue.map(v => getItemInListValues(listValues, v)) : [];\n\n  // fetch\n  const fetchListValues = async (filter = null, isLoadMore = false) => {\n    // clear obsolete meta\n    if (!isLoadMore && asyncFetchMeta) {\n      setAsyncFetchMeta(undefined);\n    }\n\n    const offset = isLoadMore && asyncListValues ? asyncListValues.length : 0;\n    const meta = isLoadMore && asyncFetchMeta || !useLoadMore && { pageSize: 0 };\n\n    const newAsyncFetchCnt = ++asyncFectchCnt.current;\n    const res = await asyncFetch.call(config?.ctx, filter, offset, meta);\n    const isFetchCancelled = asyncFectchCnt.current != newAsyncFetchCnt;\n    if (isFetchCancelled || !componentIsMounted.current) {\n      return null;\n    }\n\n    const { values, hasMore, meta: newMeta } = res?.values\n      ? res\n      : { values: res } // fallback, if response contains just array, not object\n    ;\n    const nValues = listValuesToArray(values);\n    let assumeHasMore;\n    let newValues;\n    if (isLoadMore) {\n      newValues = mergeListValues(asyncListValues, nValues, false);\n      assumeHasMore = newValues.length > asyncListValues.length;\n    } else {\n      newValues = nValues;\n      if (useLoadMore) {\n        assumeHasMore = newValues.length > 0;\n      }\n    }\n\n    // save new meta\n    const realNewMeta = hasMore != null || newMeta != null || assumeHasMore != null ? {\n      ...(assumeHasMore != null ? { hasMore: assumeHasMore } : {}),\n      ...(hasMore != null ? { hasMore } : {}),\n      ...(newMeta != null ? newMeta : {}),\n      filter\n    } : undefined;\n    if (realNewMeta) {\n      setAsyncFetchMeta(realNewMeta);\n    }\n\n    return newValues;\n  };\n\n  const loadListValues = async (filter = null, isLoadMore = false) => {\n    setLoadingCnt(x => (x + 1));\n    setIsLoadingMore(isLoadMore);\n    const list = await fetchListValues(filter, isLoadMore);\n    if (!componentIsMounted.current) {\n      return;\n    }\n    if (list != null) {\n      // tip: null can be used for reject (eg, if user don't want to filter by input)\n      setAsyncListValues(list);\n    }\n    setLoadingCnt(x => (x - 1));\n    setIsLoadingMore(false);\n  };\n  const loadListValuesDebounced = React.useCallback(debounce(loadListValues, debounceTimeout), []);\n\n  React.useEffect(() => {\n    componentIsMounted.current++;\n    // Initial loading\n    if (canInitialLoad && loadingCnt == 0 && asyncFectchCnt.current == 0) {\n      (async () => {\n        await loadListValues();\n      })();\n    }\n    // Unmount\n    return () => {\n      componentIsMounted.current--;\n    };\n  }, [canInitialLoad]);\n\n  // Event handlers\n  const onOpen = () => {\n    setOpen(true);\n  };\n\n  const onClose = async (_e) => {\n    const isLoadMoreClick = isSelectedLoadMore.current;\n    if (isLoadMoreClick) {\n      isSelectedLoadMore.current = false;\n      if (multiple) {\n        // required for MUI\n        setOpen(false);\n      }\n    } else {\n      setOpen(false);\n    }\n\n    if (uif === \"mui\" && !isLoadMoreClick) {\n      // parity with Antd\n      const resetValue = \"\";\n      await onInputChange(null, resetValue, \"my-reset\");\n    }\n  };\n\n  const onDropdownVisibleChange = (open) => {\n    if (open) {\n      onOpen();\n    } else {\n      onClose();\n    }\n  };\n\n  const isSpecialValue = (option) => {\n    const specialValue = option?.specialValue || option?.value;\n    return knownSpecialValues.includes(specialValue);\n  };\n\n  const onChange = async (e, val, option) => {\n    // todo: don't rely on 3rd param. check MUI 6\n    const isClearingAll = multiple && uif === \"mui\" && option === \"clear\";\n    // if user removes all chars in search, don't clear selected value\n    const isClearingInput = !multiple && uif === \"mui\" && option === \"clear\" && e?.type === \"change\";\n    const isClearingSingle = !multiple && uif === \"mui\" && option === \"clear\" && e?.type !== \"change\";\n    if (uif === \"mui\") {\n      option = val;\n      if (multiple) {\n        val = option.map(o => (o?.value ?? o));\n      } else {\n        val = option?.value ?? option;\n      }\n    }\n    const specialValue = multiple && Array.isArray(option) && option.map(opt => opt?.specialValue).find(v => !!v)\n      || option?.specialValue;\n    if (multiple && val && !Array.isArray(val)) {\n      val = [...(selectedValue || []), val];\n      option = null;\n    }\n    // if there are tags AND input and select is opened, clear input first\n    const shouldIgnore = isClearingAll && val.length === 0 && inputValue && open\n      || isClearingInput;\n    if (shouldIgnore) {\n      return;\n    }\n    const isAddingCustomOptionFromSearch \n      = multiple\n      && val.length && val.length > (selectedValue || []).length\n      && val[val.length-1] == inputValue\n      && !getListValue(inputValue, asyncListValues);\n\n    if (specialValue == \"LOAD_MORE\") {\n      setInputValue(inputValue);\n      isSelectedLoadMore.current = true;\n      await loadListValues(inputValue, true);\n    } else if (specialValue == \"LOADING_MORE\") {\n      isSelectedLoadMore.current = true;\n    } else {\n      if (multiple) {\n        const [newSelectedValues, newSelectedListValues] = optionsToListValues(val, listValues, allowCustomValues);\n        setValue(newSelectedValues, asyncFetch ? newSelectedListValues : undefined);\n        \n        if (isAddingCustomOptionFromSearch) {\n          await sleep(0);\n          await onInputChange(null, \"\", \"my-reset\");\n        }\n      } else {\n        const [v, lvs] = optionToListValue(val, listValues, allowCustomValues);\n        setValue(v, asyncFetch ? lvs : undefined);\n        if (isClearingSingle && isFieldAutocomplete) {\n          // Fix issue when dropdown stays visible after clicking \"X\"\n          await sleep(0);\n          setOpen(false);\n        }\n      }\n    }\n  };\n\n  const onInputChange = async (e, newInputValue, eventType) => {\n    // eventType=reset used by MUI on:\n    // - (single) initial set, select option - e = null, newInputValue = selected  (+1 call before with e != null)\n    // - (single/multi, -ACV) blur - e != null, newInputValue = ''\n    // - (multiple v5, -ACV) blur - e = null, newInputValue = '' # unwanted\n    // - (multiple) select option - e != null, newInputValue = ''\n    // - (multiple v4) delete tag while searching - e = null, newInputValue = ''  # unwanted\n    // - (multiple v4) select option while searching - e = null, newInputValue = ''  # unwanted\n\n    const shouldIgnore = uif === \"mui\" && eventType === \"reset\"\n    // && (\n    //   e != null\n    //   // for MUI 4 if search \"A\" and select any option -> should NOT reset search\n    //   // for MUI 5 if search \"A\" and close -> let's hold search but hide, as it's done in antd\n    //   || e === null && inputValue && multiple\n    // )\n    ;\n    const val = newInputValue;\n    if (val === loadMoreTitle || val === loadingMoreTitle || shouldIgnore) {\n      return;\n    }\n\n    if (newInputValue != inputValue) {\n      setInputValue(val);\n\n      const canSearchAsync = useAsyncSearch && (forceAsyncSearch ? !!val : true);\n      if (canSearchAsync) {\n        await loadListValuesDebounced(val);\n      } else if (useAsyncSearch && forceAsyncSearch) {\n        setAsyncListValues([]);\n      }\n    }\n  };\n\n  // Options\n  const extendOptions = (options) => {\n    const filtered = [...options];\n    if (useLoadMore) {\n      if (canShowLoadMore) {\n        filtered.push({\n          specialValue: \"LOAD_MORE\",\n          title: loadMoreTitle,\n        });\n      } else if (isLoadingMore) {\n        filtered.push({\n          specialValue: \"LOADING_MORE\",\n          title: loadingMoreTitle,\n          disabled: true\n        });\n      }\n    }\n    return filtered;\n  };\n\n  const getOptionSelected = (option, valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const selectedValue = valueOrOption.value != undefined ? valueOrOption.value : valueOrOption;\n    return option.value === selectedValue;\n  };\n\n  const getOptionDisabled = (valueOrOption) => {\n    return valueOrOption && valueOrOption.disabled;\n  };\n\n  const getOptionIsCustom = (valueOrOption) => {\n    if (valueOrOption?.isCustom)\n      return true;\n    const val = valueOrOption?.value ?? valueOrOption;\n    const lv = getListValue(val, listValues);\n    return lv?.isCustom || false;\n  };\n\n  const getOptionLabel = (valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const option = valueOrOption.value != undefined ? valueOrOption\n      : listValueToOption(getListValue(valueOrOption, listValues));\n    if (!option && valueOrOption.specialValue) {\n      // special last 'Load more...' item\n      return valueOrOption.title;\n    }\n    if (!option && allowCustomValues) {\n      // there is just string value, it's not item from list\n      return valueOrOption.toString();\n    }\n    if (!option) {\n      // weird\n      return valueOrOption.toString();\n    }\n    return option.title || option.label || option.value.toString(); // fallback to value\n  };\n\n  const fixedOptions = uif === \"mui\" ? fixListValuesGroupOrder(options) : options;\n\n  return {\n    options: fixedOptions,\n    listValues,\n    hasValue,\n    selectedListValue,\n\n    open,\n    onOpen,\n    onClose,\n    onDropdownVisibleChange,\n    onChange,\n    \n    inputValue,\n    onInputChange,\n    canShowLoadMore,\n    isInitialLoading,\n    isLoading,\n    isLoadingMore,\n    isSpecialValue,\n\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    aPlaceholder,\n  };\n};\n\nexport default useListValuesAutocomplete;\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport * as ReactUtils from \"./reactUtils\";\nimport { DragIcon } from \"../components/utils\";\nexport default { ...Utils, ReactUtils, DragIcon };\n","var map = {\n\t\"./es-us\": 1748,\n\t\"./es-us.js\": 1748,\n\t\"./ru\": 60582,\n\t\"./ru.js\": 60582\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 61507;"],"names":["moment","Utils","xdpVersion","xdpPackage","_xdpPackage$version","split","mapListValues","ListUtils","useListValuesAutocomplete","Hooks","emptyArray","props","allowCustomValues","multiple","disableClearable","selectedValue","value","customProps","readonly","config","filterOptionsConfig","errorText","tooltipText","isFieldAutocomplete","defaultFilterOptionsConfig","stringify","useCallback","option","settings","listKeysForSearch","map","k","join","filterOptionsFn","createFilterOptions","_useListValuesAutocom","debounceTimeout","uif","open","onOpen","onClose","onChange","onInputChange","inputValue","options","isInitialLoading","isLoading","aPlaceholder","extendOptions","getOptionDisabled","getOptionSelected","getOptionIsCustom","getOptionLabel","selectedListValue","_config$settings","defaultSelectWidth","_ref","defaultSearchWidth","width","rest","_objectWithoutProperties","_excluded","customInputProps","input","omit","customAutocompleteProps","fullWidth","minWidth","style","undefined","placeholder","ariaLabel","fieldPlaceholder","theme","useTheme","GroupHeader","_ref4","groupMaybeJson","group","label","JSON","parse","_","groupLabel","tooltip","React","Tooltip","title","placement","position","top","padding","color","palette","primary","main","backgroundColor","background","GroupItems","_ref5","children","res","Autocomplete","_extends","disableCloseOnSelect","freeSolo","loading","disabled","readOnly","groupBy","groupTitle","renderInput","params","_ref2","_selectedListValue$ti","_ref3","shouldRenderSelected","selectedTitle","toString","renderValue","TextField","variant","inputProps","_objectSpread","InputProps","endAdornment","CircularProgress","size","error","renderGroup","key","renderTags","getTagProps","index","Chip","renderOption","renderTitle","isHidden","isGrouped","isSelected","includes","className","finalTitle","titleSpan","specialValue","itemContent","ListItemIcon","Check","ListItemText","inset","MenuItem","selected","filterOptions","filtered","isOptionEqualToValue","FormControl","mapFieldItemToOptionKeys","path","altLabel","grouplabel","itemsToListValues","items","level","arguments","length","item","matchesType","prefix","repeat","_value2","_altLabel","flat","Infinity","fieldAdapter","selectedKey","setField","isValueField","selectedLabel","selectedAltLabel","selectedOpts","selectedFullLabel","listValues","fieldItemKeysForSearch","setValue","_asyncValues","DragIcon","typeToIcon","DeleteIcon","AddIcon","DragHandle","typeToColor","hideLabelsFor","memo","type","onClick","renderIcon","icon","IconButton","Button","startIcon","Conj","conjKey","id","name","checked","setConjunction","postfix","isDummyFn","Conjs","not","setNot","conjunctionOptions","showNot","notLabel","conjsCount","Object","keys","lessThenTwo","showConj","forceShowConj","onNotClick","ButtonGroup","disableElevation","_conjunctionOptions$c","conjProps","ValueSource","valueSrc","srcKey","handleChange","info","e","valueSources","setValueSrc","_React$useState","_React$useState2","_slicedToArray","anchorEl","setAnchorEl","handleOpen","event","currentTarget","handleClose","toggleOpenClose","_e","Boolean","ExpandMoreSharpIcon","Menu","component","sx","p","FormLabel","pt","pb","renderOptions","MuiTextWidget","maxLength","errorMessage","val","target","textValue","MuiTextAreaWidget","maxRows","defaultMaxRows","multiline","MuiDateWidget","dateFormat","valueFormat","pickerProps","format","slotProps","textField","toolbar","toolbarPlaceholder","inputFormat","aValue","DatePicker","desktopModeMediaQuery","isValid","formatSingleValue","MuiDateTimeWidget","use12Hours","timeFormat","dateTimeFormat","DateTimePicker","ampm","MuiTimeWidget","hasSeconds","indexOf","timeValue","TimePicker","views","MuiSelectWidget","hasValue","Select","autoWidth","displayEmpty","filter","v","shift","getListValueTitle","MuiNumberWidget","min","max","step","numberValue","useMemo","Number","MuiSliderWidget","marks","defaultSliderWidth","handleSliderChange","newValue","handleInputChange","handleInputBlur","customSliderProps","slider","sliderValue","muiMarks","_typeof","InputCmp","onBlur","SliderCmp","Slider","valueLabelDisplay","stylesSliderWrapper","marginLeft","paddingLeft","marginBottom","display","alignItems","flexWrap","MuiRangeWidget","placeholders","textSeparators","useEffect","_toConsumableArray","_sliderValue","valueFrom","valueTo","FromInputCmp","ToInputCmp","newValues","stylesInputWrapper","MuiBooleanWidget","labelYes","labelNo","Typography","Grid","container","spacing","Switch","MuiMultiSelectWidget","selectedValues","selectedTitles","Checkbox","MuiAutocompleteWidget","MuiFieldSelect","_useState","useState","_useState2","setOpen","findLabel","fields","field","Array","isArray","some","pop","fieldKey","finalLabel","ListSubheader","disableSticky","MuiFieldAutocomplete","MuiAutocomplete","MuiIcon","Icon","MuiButton","MuiButtonGroup","MuiConjs","MuiSwitch","checkedLabel","hideLabel","renderSize","showLabel","LockIcon","LockOpenIcon","FormControlLabel","control","MuiValueSources","MuiConfirm","onOk","okText","cancelText","confirmFn","description","confirmationText","cancellationText","then","MuiUseConfirm","useConfirm","MuiProvider","settingsTheme","settingsLocale","locale","momentLocale","themeConfig","mui","createTheme","locProviderProps","adapterLocale","base","withProviders","LocalizationProvider","dateAdapter","AdapterMoment","ConfirmProvider","ThemeProvider","BasicConfig","renderField","_props$customProps","RCE","_ref$W","W","showSearch","renderOperator","renderFunc","renderConjs","renderSwitch","renderButton","_ref6","_ref7","renderButtonGroup","_ref8","renderValueSources","_ref9","renderFieldSources","_ref10","renderProvider","_ref11","renderConfirm","_ref12","_ref13","widgets","text","factory","_ref14","textarea","_ref15","number","_ref16","multiselect","_ref17","_ref17$W","asyncFetch","select","_ref18","_ref18$W","_ref19","boolean","_ref20","date","_ref21","time","_ref22","datetime","_ref23","rangeslider","_ref24","types","ctx","MuiWidgets","ConfigMixins","addMixins","query_builder_seed","timePart","Date","getTime","substr","replace","c","r","Math","floor","random","widgetDefKeysToOmit","opDefKeysToOmit","isObject","prototype","call","shallowCopy","obj","fromEntries","entries","getOpCardinality","opDef","_opDef$cardinality","cardinality","deepEqual","v1","v2","Map","isMap","equals","shallowEqual","a","b","deep","arrA","arrB","len","i","shallowEqualArrays","objA","objB","aKeys","bKeys","shallowEqualObjects","isImmutable","toJS","toImmutableList","Immutable","applyToJS","escapeRegExp","string","mergeCustomizerNoArrays","objValue","srcValue","_key","_object","_source","_stack","cleanJSX","jsx","el","_i","isDirtyJSX","_cleaned$props","cleaned","isJSX","isJsonLogic","logic","sleep","delay","Promise","resolve","setTimeout","mergeArraysSmart","arr1","arr2","op","orig","next","slice","after","reverse","find","before","x","reduce","acc","newOp","rel","relOp","ind","splice","deepFreeze","forEach","prop","freeze","isJsonCompatible","tpl","bag","concat","getLogger","devMode","console","log","warn","debug","getFirstDefined","ret","arr","logger","toListValue","makeCustomListValue","lv","isCustom","listValuesToArray","listValuesObj","listValuesArr","push","getItemInListValues","getTitleInListValues","it","getValueInListValues","mapFn","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","f","searchListValue","search","getListValue","expandTreePath","_len","suffix","interpose","withMutations","list","skip","apply","expandTreeSubpath","_len2","_key2","getItemByPath","tree","_defineProperty","get","_res","removeIsLockedInTree","newTree","_processNode","isParentLocked","itemPath","isLocked","getIn","deleteIn","child","_childId","fixPathsInTree","lev","nodeId","currPath","currId","itemId","uuid","setIn","constructor","childId","fixEmptyGroupsInTree","allChildrenGone","curr","getFlatTree","cases","visibleHeight","globalLeafCount","globalGroupCount","globalCountByType","_flatizeTree","insideCollapsed","insideLocked","insideRuleGroup","caseId","childNo","isRoot","collapsed","childrenIds","_child","valueSeq","toArray","isRuleGroup","isRule","isGroup","isCaseGroup","isAtomicRule","hasChildren","parentId","currentCaseId","caseNo","itemsBefore","globalNoByType","indexPath","globalLeafNo","globalGroupNo","node","parent","parentType","isLeaf","isDefaultCase","atomicRulesCountInCase","_top","leaf","height","depth","maxChildDepth","sumHeight","childCount","childItem","_height","bottom","assign","prevId","nextId","prev","getTotalReordableNodesCountInTree","cnt","children1","getTotalRulesCountInTree","getLightTree","deleteExcess","children1AsArray","properties","operatorOptions","values","getSwitchValues","vals","caseValue","isEmptyTree","_fixImmutableValue","_v$toJS","vJs","func","toOrderedMap","getTree","immutableTree","light","loadTree","serTree","isImmutableTree","isTree","jsToImmutable","startsWith","Error","fromJS","outValue","isFuncArg","isRuleValue","_outValue$get","_outValue$get$get","_outValue$get2","isIndexed","toList","createMeta","parentMeta","errors","loadFromJsonLogic","logicTree","_loadFromJsonLogic","returnErrors","meta","allowUnknownFields","extendedConfig","extendConfig","conv","buildConv","jsTree","convertFromLogic","immTree","operators","opKey","opConfig","jsonLogic","opk","_jsonLogicIsRevArgs","jsonLogic2","conjunctions","jsonLogicConj","toLowerCase","funcs","iterateFuncs","_step$value","funcPath","funcConfig","fk","jsonLogicIsMethod","_config$settings$json","varKeys","groupVarKey","altVarKey","expectedTypes","fieldConfig","widget","parentField","beforeErrorsCnt","lockedOp","isEmptyOp","isRev","convertFieldRhs","convertFuncRhs","convertValRhs","convertIf","convertConj","convertOp","wrapInDefaultConj","afterErrorsCnt","_fieldConfig$fieldSet","defaultValue","mainWidget","widgetConfig","fieldType","h","m","dateVal","setMilliseconds","setHours","setMinutes","setSeconds","toISOString","asyncListValues","fieldSettings","jsonLogicImport","_e$message","message","valueType","_meta$settings","normalizeField","getFieldConfig","argsArr","funcKey","opts","_vals","_toArray","returnType","funcKeys","getFuncConfig","_step2","_iterator2","_step2$value","fc","parsed","argKeys","args","argsObj","argVal","argKey","argConfig","_argVal","isOptional","fieldSeparator","complexFields","_v$properties","_v$properties2","fieldSrc","_f$includes","complexFieldsGroupAncestors","from","Set","parts","ancs","fp","conjunction","groupToId","_v$properties3","groupAncestors","groupField","ch","parentFieldParts","getFieldParts","groupPath","gf","gfc","groupId","mode","rule","defaultConjunction","_parseRule","arity","isRevArgs","_vals$1$in$","_meta$settings2","isGroup0","groupOperators","opKeys","jlField","jlArgs","_vals2","_vals3","lhs","having","_parse","convertFieldLhs","convertFuncLhs","_v","_v2","init","_v3","_v4","parsedGroup","convertLhs","_vals$1$op2$","op2","isEmptyVar","parseRes","submeta","parseRule","conj","havingVals","havingNot","reversedOp","getWidgetForFieldOp","convertedArgs","parentFieldConfig","defaultGroupConjunction","wrapInDefaultConjRuleGroup","operator","asyncListValuesArr","flatizeTernary","cond","buildCaseValProperties","wrapInCase","_processTernaryChildren","tern","_tern","if_val","else_val","else_op","valProperties","caseI","caseValueFieldConfig","widgetDef","convVal","SqlString","SqlStringOrig","trim","charAt","substring","escapeLike","any_start","any_end","escape","sqlEmptyValue","fieldDef","mongoEmptyValue","spelFixList","spelEscape","numberToFloat","arrayToArray","isFinite","isNaN","isInteger","javaType","jt","escapedVals","numberJavaTypes","spelInlineList","spelEscapeString","spelFormatConcat","part","spelImportConcat","isVariable","stringifyForDisplay","compareToSign","TypesWithCompareTo","spelFormat","_spelFormat","formatItem","formatGroup","formatRule","formatSwitch","formatCase","_formatItemValue","formatItemValue","_formatItemValue2","formattedValue","currentChild","filteredCases","left","right","_filteredCases$_i","List","conjunctionDefinition","isRuleGroupArray","isSpelArray","groupOperator","realGroupOperator","checkOp","isGroupOpRev","realGroupOperatorDefinition","getOperatorConfig","_formatItemValue3","_formatItemValue4","omitBrackets","spelFormatConj","formattedField","formatField","getSize","fullSize","filteredSize","formatExpression","fn","spelFormatOp","operatorDefinition","spelOp","isSign","isCompareTo","sop","compareRes","buildFnToFormatOp","spelFormatReverse","revOpDef","canFormatOp","canFormatRevOp","realOp","_formatItemValue5","_formatItemValue6","formatLhs","formatFunc","expectedValueType","iValueSrc","iValueType","iValue","valueSrcs","valueTypes","fvalue","currentValue","cValue","completeValue","fieldWidgetDef","getFieldWidgetConfig","forExport","fv","formatValue","hasUndefinedValues","first","operatorDef","spelFormatValue","pick","valFieldDefinition","fieldDefinition","fieldParts","fieldPartsConfigs","getFieldPartsConfigs","formatFieldFn","formatSpelField","fieldName","formatFieldName","fieldPartsMeta","cnf","parentCnf","isSpelMap","isSpelItemMap","isSpelVariable","_currentValue$get","_currentValue$get2","formattedArgs","gaps","missingArgKeys","_argValue","_argConfig$spelEscape","defaultValueSrc","argValue","argValueSrc","argAsyncListValues","doEscape","spelEscapeForFormat","formattedArgVal","formattedDefaultVal","defaultWidget","defaultFieldWidgetDef","finalFormattedVal","_argValue2","missedArgKey","spelFormatFunc","spelFunc","found","_formattedArgs$argKey","optionalArgs","RegExp","SpelPrimitiveTypes","null","SpelPrimitiveClasses","String","loadFromSpel","_loadFromSpel","spelStr","compiledExpression","convertedObj","SpelExpressionEvaluator","compile","_compiledExpression","postprocessCompiled","convertToTree","expr","parentExpr","getType","getChildren","selection","lastChild","isSize","methodName","isLength","sourceParts","source","convertPath","isThis","itype","_lastChild","_lastChild2","getRaw","getValue","functionName","qid","cls","_val","isVar","_loop","spelOps","spelConj","_loop2","fks","funcSignMain","_k","funcSignsOptional","optionalArgKeys","_step3","_iterator3","valueFuncs","w","spelImportFuncs","fs","argsOrder","matchAll","opFuncs","spel","parentSpel","canParseAsArg","_groupFilter","groupFieldValue","_groupField","groupFilter","buildCase","convertArg","sw","buildSimpleSwitch","negative","isBetweenNormal","isBetweenRev","_spel$children$0$chil","_spel$children$1$chil","to","compareArgs","convertChildren","_newChildren","newChildren","_fieldObj$groupFieldV","_convertedArgs","fieldObj","opArg","_vals$","_vals$2","ws","needWrapReverse","buildRuleGroup","buildRule","expectingField","isError","_meta$errors","_meta$errors$push","_config$settings$case","_spel$children","at","_values$","caseValueField","buildCaseValueConcat","maybe","convertFunc","_buildFuncSignatures","brns","currBrn","o","_currBrn$params","_buildFuncSignatures2","_buildFuncSignatures3","s1","params1","newBrn","objs","unshift","_step4","_iterator4","_brn$objs","brn","_params","_buildFuncSignatures4","_buildFuncSignatures5","_fsigns$","convertFuncArg","fsigns","buildFuncSignatures","firstSign","maybeValue","convertFuncToValue","maybeOp","convertFuncToOp","_step5","_iterator5","_loop3","_step5$value","_step6","_iterator6","_step6$value","spelImport","funcArgs","errs","foundSign","foundWidget","candidates","fj","_step7","_iterator7","_step8","_step7$value","_iterator8","_loop4","_step8$value","_candidates","_candidates$_i","spelImportValue","_spelImportValue$call","_spelImportValue$call2","_step9","_iterator9","_step10","_step9$value","_iterator10","_ret","_loop5","_argsArr$filter$find","_step10$value","parseInt","_field3","groupOpRule","_map","_map2","leftSource","rightSource","_map3","_map4","leftVal","rightVal","_processConcatChildren","convertedChild","_config$settings$case2","_convVal","_widgetConfig","importCaseValue","_widgetDef$type","_importCaseValue$call","_importCaseValue$call2","normVal","getDefaultField","canGetFirst","parentRuleGroupPath","defaultField","getDefaultSubField","getFirstField","parentRuleGroupConfig","getDefaultFieldSrc","_config$settings$fiel","fieldSources","getDefaultOperator","fieldOperators","globalDefaultOperator","defaultOperator","fieldDefaultOperator","fieldOwnDefaultOperator","ownDefaultOperator","firstOperator","getFirstOperator","defaultOperatorOptions","operatorConfig","defaults","defaultRuleProperties","_item$properties","_item$properties2","_item$properties3","canUseDefaultFieldAndOp","showErrorMessage","current","set","_getNewValueForFieldO","getNewValueForFieldOp","newValueSrc","newValueType","newValueError","newFieldError","conjs","defaultGroupProperties","defaultItemProperties","_item$properties4","defaultRule","defaultRoot","canAddDefaultRule","createListWithOneElement","createListFromArray","emptyProperties","queryString","isForDisplay","isDebugMode","_config$operators$gro","_config$operators$gro2","groupOperatorCardinality","canHaveEmptyChildren","conjStr","formatConj","aggrArgs","formatAggr","formatReverse","returnArgs","_meta$settings3","revOperatorDef","formatOp","fop","labelForFormat","_values$first","_values$get","valFrom","valTo","_operator","_fvalue$get","_fvalue","_fn","_meta$settings4","jsType","cutParentField","_meta$settings5","_config$settings2","fieldSeparatorDisplay","fieldPartsLabels","getFieldPathLabels","fieldFullLabel","fieldLabel2","label2","useTableName","funcValue","_funcValue$get","_funcValue$get2","_args$keySeq","_meta$settings6","funcParts","funcLastKey","funcName","formattedArgsWithNames","keySeq","argName","argsStr","EMPTY_GROUP","EMPTY_RULE_GROUP","EMPTY_QUERY","EMPTY_CASE","NO_CONFIG_FOR_FIELD","NO_CONFIG_FOR_OPERATOR","NO_CONFIG_FOR_FUNCTION","INVALID_VALUE","INVALID_FUNC_ARG_VALUE","UNSUPPORTED_FIELD_TYPE","UNSUPPORTED_OPERATOR_FOR_FIELD","INVALID_VALUE_SRC","INCOMPLETE_RULE","INCOMPLETE_LHS","INCOMPLETE_RHS","BAD_MULTISELECT_VALUES","BAD_SELECT_VALUE","INCORRECT_VALUE_TYPE","INCORRECT_VALUE_JS_TYPE","VALUE_LENGTH_CONSTRAINT_FAIL","VALUE_MIN_CONSTRAINT_FAIL","VALUE_MAX_CONSTRAINT_FAIL","NO_CONFIG_FOR_FIELD_VALUE","CANT_COMPARE_FIELD_WITH_ITSELF","CANT_COMPARE_FIELD_WITH_FIELD","INCORRECT_FIELD_TYPE","UNSUPPORTED_FUNCTION_FOR_FIELD","REQUIRED_FUNCTION_ARG","INCORRECT_FUNCTION_RETURN_TYPE","INVALID_RANGE","ITEM_POSITION","ITEM_POSITION_ROOT","ITEM_POSITION_WITH_INDEX_PATH","ITEM_POSITION_IN_CASE","_CONTEXT_MIN_MAX","translations","_translations","constants","NSV","NSVP","i18n","i18next","fallbackLng","addResources","validationTranslations","translateValidation","str","t","typeOf","isValidTree","getTreeBadFields","badFields","_field$get","_field$get2","valueError","fieldError","fieldStr","checkTree","removeEmptyGroups","removeEmptyGroupsOnLoad","removeIncompleteRules","removeIncompleteRulesOnLoad","removeEmptyRules","removeEmptyRulesOnLoad","forceFix","_validateTree2","_validateTree","fixedTree","allErrors","isSanitized","validateTree","finalOptions","sanitizeTree","_validateTree4","fixedErrors","nonFixedErrors","validateAndFixTree","_oldTree","newConfig","oldConfig","_validateTree5","flatItems","oldFlatItems","_ref$translateErrors","translateErrors","_ref$includeStringifi","includeStringifiedItems","_ref$stringifyFixedIt","stringifyFixedItems","_ref$stringifyItemsUs","stringifyItemsUserFriendly","_ref$includeItemsPosi","includeItemsPositions","validateItem","sanitized","_meta$errors$id","errorItem","itemStr","flatItem","isDeleted","itemPosition","trKey","trArgs","_itemPosition$indexPa","_arr","itemPositionStr","_i2","_allErrors","itemErrors","fixedItemErrors","fixed","nonFixedItemErrors","_addError","_setErrorsAsFixed","_properties$get","_config$operators$ope","_config$operators$ope2","_children","_children2","_children3","oldChildren","isGroupExt","isCase","childrenAreRequired","canHaveValue","validateRule","nonEmptyChildren","canDrop","validateGroup","canFix","serializeRule","_field","_field$toJS","oldSerialized","side","getFieldSrc","availOps","getOperatorsForField","validationErrors","fixedField","newSerialized","hasBeenSanitized","compl","whatRulePropertiesAreCompleted","toObject","isCompleted","score","shoudlRemoveRule","incError","_newSerialized$valueS","_newSerialized$valueS2","_oldSerialized$valueS","_newSerialized$value","validateValue","leftField","isEndValue","canDropArgs","fixedValue","_allErrors2","_allErrors3","_allErrors4","_allErrors5","_validateFieldValue","validateFieldValue","_validateFieldValue2","_validateFuncValue","validateFuncValue","_validateFuncValue2","_validateNormalValue","validateNormalValue","_validateNormalValue2","fixedAllErrors","fieldWidgetDefinition","rightFieldDefinition","_validResult$error","newError","validResult","fixedFrom","fixedTo","lastError","wConfig","wType","treeValues","isAsyncListValues","canSkipTypeCheck","valueTypeof","realListValues","_validateValueInList","removeInvalidMultiSelectValuesOnLoad","isList","_values$reduce","goodVals","badVals","vv","_values$reduce2","goodValues","badValues","needFix","count","validateValueInList","_validateValueInList2","minMaxContext","context","_valueSrc","canCompareFieldWithField","_isFuncArg","leftFieldStr","leftFieldConfig","rightFieldStr","rightFieldConfig","expected","rightField","_value$get","_funcConfig$label","_argDef$label","argDef","_validateValue","_validateValue2","fixedArgVal","argErrors","willFix","canDropOrReset","setFuncDefaultArg","_argErrors$find","firstError","ignore","argValidationError","canReset","validateRange","rangeError","operatorCardinality","valueSrcsArr","valuesArr","areValueSrcsPureValues","vs","validateValues","jsValues","jsVal","_currentField","_currentField$get","_newField","_newField$get","newField","newOperator","changedProp","keepInputOnChangeFieldSrc","convertableWidgets","clearValueOnChangeField","clearValueOnChangeOp","currentField","currentFieldType","currentFieldSrc","currentOperator","currentValueSrc","currentValueType","currentValueError","isOkWithoutOperator","currentOperatorConfig","newOperatorConfig","currentOperatorCardinality","currentFieldConfig","newFieldConfig","isOkWithoutField","currentType","newType","currentListValuesType","listValuesType","newListValuesType","currentFieldSimpleValue","hasFieldChanged","canReuseValue","selectTypes","_validateValue3","_validateValue4","fieldErrors","willFixAllErrors","willRevert","showError","currentWidget","newWidget","currentValueWidget","newValueWidget","firstValueSrc","firstWidgetConfig","getValueSourcesForFieldOp","valueSourcesInfo","defaultValueType","canExtendValueToRange","valueFixes","valueSrcFixes","valueTypeFixes","valueErrors","_i3","vType","vSrc","isValidSrc","_validateValue5","_validateValue6","allErrorsHandled","willDrop","delta","_newFieldConfig$field","dv","_valueSrcFixes$_i","_valueTypeFixes$_i","vt","_ignore","_valueSrcFixes$i","_valueTypeFixes$i","rangeErrorObj","rangeValidationError","badValue","hasValueErrorChanged","completeFuncValue","complValue","tmpHasOptional","filteredValueSources","filterValueSourcesForField","argDefaultValueSrc","completeArgValue","getDefaultArgValue","setFunc","canFixArgs","oldFuncKey","oldArgs","newFuncSignature","getFuncSignature","oldFuncSignature","keepArgsKeys","getCompatibleArgsOnFuncChange","setFuncDefaultArgs","setArgValue","setArgValueSrc","argValSrc","_argConfig","_config","s2","argVals","arg2","arg1","_argValidErrors$filte","argValidErrors","getOperatorsForType","_config$types$fieldTy","_fieldOps$","fieldOps","calculateValueType","calculatedValueType","getFuncPathLabels","fieldsKey","subfieldsKey","parentParts","_curr","getFieldRawConfig","last","parentFieldDef","isFieldDescendantOfField","getValueLabel","isSpecialRange","fieldWidgetConfig","mergedOpConfig","valueLabels","valueLabel","valuePlaceholder","_getWidgetsAndSrcsForFieldOp","fieldCacheKey","getFieldId","cacheKey","cached","_getFromConfigCache","arg","widgetValueSrc","canAdd","_fieldConfig$valueSou","_opConfig$valueSource","canAddValueSrc","widgetWeight","wg","preferWidgets","sort","w1","w2","_saveToConfigCache","getWidgetsForFieldOp","_fieldDefinition$type","__fieldsCntByType","minCnt","__funcsCntByType","tableName","fieldPartsCopy","parentFieldName","isEmptyItem","isEmptyRuleGroupExt","isEmptyGroup","isEmptyRule","isEmptyRuleGroupExtPropertiesAndChildren","filledParts","isEmptyRuleProperties","isEmptyGroupChildren","_config$operators$ope3","_config$operators$ope4","_value$filter","liteCheck","isCompletedValue","deepCheck","applyJsonLogic","data","JL","customJsonLogicOperations","CALL","JSX","mergeObjects","obj1","obj2","strlen","regexTest","pattern","flags","match","now","date_add","dim","add","toDate","toUpperCase","applyJsonLogicWithPath","callContextFn","_this","addRequiredJsonLogicOperations","configKeys","compileMetaFieldSettings","isArr","compileMetaWidget","sqlFormatValue","mongoFormatValue","elasticSearchFormatValue","compileMetaOperator","mongoFormatOp","sqlFormatOp","elasticSearchQueryType","compileMetaWidgetForType","widgetProps","opProps","compileMetaFieldLike","compileMetaField","mainWidgetProps","compileMetaSettings","invokeWith","sqlFormatReverse","normalizeListValues","renderSwitchPrefix","renderItem","renderBeforeWidget","renderAfterWidget","renderBeforeActions","renderAfterActions","renderBeforeCaseValue","renderAfterCaseValue","renderRuleError","compileMeta","sqlFormatConj","renderBrackets","renderSeps","sqlFormatFunc","mongoFormatFunc","compressConfig","baseConfig","__fieldNames","zipConfig","_clean","BasicFuncs","hasOwnProperty","_base","_configKeys","rootKey","clone","decompressConfig","useConfigCompress","unzipConfig","_mergeDeep","mixin","_resolveAndMergeDeep","resolved","_configKeys2","merge","compileConfig","__compliled","_compileConfigParts","defineProperty","enumerable","writable","subconfig","logs","newPath","targetObj","newVal","renderReactElement","compileJsonLogicReact","_newVal4","compileJsonLogic","def","subfields","jl","re","this","argNames","bind","_ctx$components","_props","Cmp","components","O","canReorder","canRegroup","canDeleteLocked","canLeaveEmptyGroup","shouldCreateEmptyGroup","canShortMongoQuery","setOpOnChangeField","fieldLabel","operatorLabel","funcLabel","funcPlaceholder","operatorPlaceholder","lockLabel","lockedLabel","deleteLabel","addGroupLabel","addCaseLabel","addDefaultCaseLabel","defaultCaseLabel","addRuleLabel","addSubRuleLabel","delGroupLabel","fieldSourcesPopupTitle","valueSourcesPopupTitle","removeRuleConfirmOptions","removeGroupConfirmOptions","commonMemo","memoId","configId","memos","getCommonMemo","createConfigMemo","reactIndex","maxSize","canCompile","findExtendedConfigInAllMemos","needsToBeCompiled","foundExtConfig","findExtendedConfig","currentMemo","configStore","currentMemoId","storeConfigPair","findExtended","findConfig","_ret2","savedConfig","_ret3","getExtendedConfig","extendAndStore","findOrExtend","pickConfig","getBasicConfig","basicConfig","extConfig","clearConfigMemo","clear","__configId","cachedExtConfig","origConfig","mergeWith","defaultSettings","typesConfig","extendTypeConfig","extendTypesConfig","extendFieldsConfig","extendFuncsConfig","extendFieldConfig","__cache","typeConfig","excludeOperators","typeWidgetConfig","defOp","fieldPathArr","funcPathArr","funcPathStr","funcDef","tmpIsOptional","_fieldSeparator","isCaseValue","showLabels","isFunc","excludeOperatorsForField","hasOwnDefaultOperator","_argKey","_funcKey","_isFunc","_isCaseValue","_fieldConfig$fieldSet2","_keysToPutInFieldSett","normalizeFieldSettings","excludeKeysFromType","excludeOperatorsForType","shouldIncludeOperators","addOperators","_typeWidgetConfig$opP","_fieldWidgetConfig$op","_fieldWidgetConfig","_computeFieldName","_reduce","computedPath","computed","inGroup","fullPath","fConfig","computeFieldName","_marked2","_regeneratorRuntime","iterateFields","_widgetDefKeysToOmit","_context","delegateYield","_iterateFields","stop","_marked","_context2","_callee","_context3","t0","t1","_config$settings3","targetFields","_config$__fieldNames$","_config$__fieldNames$2","findStr","getFuncArgConfig","_config$settings4","getFieldPath","parentPath","_config$settings5","_config$settings6","_field$split","getFieldPathParts","onlyKeys","_field$get3","bucketKey","_config$__cache","_field$get4","_field$get5","_widgetConfig$opProps","widgetOpProps","fieldWidgetOpProps","mergedConfig","_fieldConfig$widgets","fieldWidgetProps","valueFieldSettings","parentPathArr","firstField","keysPath","_firstField","queryBuilderFormat","usedFields","rules","condition","_valueType","secondField","ruleQuery","jsonLogicFormat","ff","tmp","pdef","groupOperatorDefinition","resultQuery","formatLogic","var","revOperatorDefinition","_filteredCases$","defVal","if","ifArgs","_filteredCases","isLastIf","oldUsedFields","formattedArgsArr","varName","jsonLogicVar","_operatorDefinition$_","formatteOp","isReverseArgs","rangeOps","eqOps","opOpts","mongodbFormat","_mongodbFormat","parents","_not","_canWrapExpr","_formatFieldName","_value","sep","hasParentRuleGroup","realParentPath","groupFieldName","reversedConj","mongoConj","totalQuery","filterQuery","as","_f","useExpr","_formatFunc","_formatFunc2","_formatValue","_formatValue2","fvUseExpr","wrapExpr","_formatRightField","formatRightField","_formatRightField2","_formatFunc3","_formatFunc4","mongoFunc","mongoArgsAsObject","argsCnt","lastArg","_formatValue3","_formatValue4","_formatValue5","_formatValue6","sqlFormat","_sqlFormat","sqlOp","sqlFunc","buildEsRule","syntax","queryType","parameters","determineField","script","elasticSearchScript","ES_7_SYNTAX","geoPointString","coordsNumberArray","top_left","lat","lon","bottom_right","buildEsGeoPoint","gte","lte","dateTime","lt","gt","buildEsRangeParameters","buildEsWildcardParameters","buildRegexpParameters","buildParameters","bool","must_not","ES_6_SYNTAX","elasticSearchFormat","_properties$get2","_properties$get3","recursiveFxn","childrenArray","occurrence","combinator","determineOccurrence","result","resultFlat","buildEsGroup","simulateAsyncFetch","all","cPageSize","_asyncToGenerator","offset","pageSize","currentOffset","newOffset","hasMore","ceil","abrupt","_x","_x2","_x3","mergeListValues","toStart","hideNewValues","old","newFiltered","av","optionToListValue","_val$value","customItem","listValue","optionsToListValues","newSelectedListValues","_val$value2","newSelectedValues","_o$value","listValueToOption","fixListValuesGroupOrder","groupTitles","findLastIndex","findIndex","lv1","_lv1$groupTitle","_lv$groupTitle","nv","NOW","jsonLogicCustomOps","RELATIVE_DATETIME","method","_spel$methodName","matchRes","abs","plus","minus","day","week","month","year","LOWER","UPPER","LINEAR_REGRESSION","coef","bias","_a$children","utils","mongoFormatOp1","mop","mc","_op","$field","mv","mongoFormatOp2","mops","equal","opStr","_this$utils","not_equal","isNotOp","_this$utils2","less","_this$utils3","_len3","_key3","less_or_equal","_this$utils4","_len4","_key4","greater","_this$utils5","_len5","_key5","greater_or_equal","_this$utils6","_len6","_key6","like","_this$utils7","_len7","_key7","not_like","_this$utils8","_this2","_len8","_key8","starts_with","_this$utils9","_this3","_len9","_key9","ends_with","_this$utils10","_this4","_len10","_key10","between","_this$utils11","_len11","_key11","not_between","_this$utils12","_len12","_key12","is_empty","empty","_this$utils13","_this5","_len13","_key13","is_not_empty","_this$utils14","_this6","_len14","_key14","is_null","_this$utils15","_len15","_key15","is_not_null","_this$utils16","_len16","_key16","select_equals","_this$utils17","_len17","_key17","select_not_equals","_this$utils18","_len18","_key18","select_any_in","_this$utils19","_len19","_key19","select_not_any_in","_this$utils20","_len20","_key20","multiselect_contains","_this$utils21","_len21","_key21","multiselect_not_contains","multiselect_equals","_this7","_this$utils22","_len22","_key22","multiselect_not_equals","_this8","_this$utils23","_len23","_key23","proximity","val1","val2","prox","aVal1","aVal2","optionLabel","optionTextBefore","optionPlaceholder","minProximity","maxProximity","_this$utils24","_len24","_key24","_this$utils25","_len25","_key25","none","_this$utils26","_len26","_key26","wgtDef","isFloat","valLabel","_this9","valsLabels","_this10","isCallable","_args$fmt","_args$fmt$includes","_args$fmt2","_args$fmt2$toLowerCas","fmt","ISO_8601","_args$fmt3","_args$fmt3$toLowerCas","_args$fmt4","_args$fmt5","_args$fmt5$includes","rightFieldDef","case_value","partsExt","_this11","q","whereStr","aggrField","aggrFieldDef","_addMixins","mixins","doAdd","mixinFuncs","mixinWidgetRangeslider","treeselect","mixinWidgetTreeselect","treemultiselect","mixinWidgetTreemultiselect","rangeable__date","mixinRangeableWidget","mixName","mixinFunc","addMixin","singleWidget","treeData","_this12","_this13","removeMixins","AND","sqlConj","spelConjs","OR","ADD_GROUP","ADD_CASE_GROUP","REMOVE_GROUP","SET_CONJUNCTION","SET_NOT","ADD_RULE","REMOVE_RULE","SET_FIELD","SET_FIELD_SRC","SET_OPERATOR","SET_VALUE","SET_VALUE_SRC","SET_FUNC_VALUE","SET_OPERATOR_OPTION","SET_LOCK","SET_TREE","MOVE_ITEM","PLACEMENT_AFTER","PLACEMENT_BEFORE","PLACEMENT_APPEND","PLACEMENT_PREPEND","SET_DRAG_PROGRESS","SET_DRAG_START","SET_DRAG_END","addNewGroup","state","generatedId","groupUuid","canAddNewRule","origState","addItem","targetItem","currentNumber","maxNumber","maxNumberOfCases","maxNumberOfRules","maxNesting","isTernary","caseGroup","take","childrenPath","targetChildren","targetChildrenSize","_addChildren1","isLastDefaultCase","newChildrenWithLast","mergeIn","removeItem","_newFieldConfig$opera","_meta","currentRule","currentProperties","wasRuleGroup","currentOperatorOptions","isRuleGroupExt","isChangeToAnotherType","lastOp","forceKeepOp","strategy","groupProperties","initialEmptyWhere","updateIn","_getNewValueForFieldO2","newCorrectField","newOperatorOptions","validationError","initEmptyValueLists","_it$id","id1","it1","emptyDrag","dragging","y","mousePos","dragStart","setTree","addRule","ruleType","removeRule","addDefaultCaseGroup","addCaseGroup","addGroup","removeGroup","moveItem","fromPath","toPath","setLock","lock","setFieldSrc","setOperator","setFuncValue","parentFuncs","setOperatorOption","BasicUtils","Export","Import","initialConfig","getMemoizedTree","setLastTree","getLastConfig","emptyState","_getLastConfig","action","actionMeta","_affectedField","actionTypesToIgnore","mapValues","affectedField","getField","getActionMeta","validatedTree","parentOperator","parentOperatorConfig","hasGroupCountRule","isParentRuleGroup","isEmptyParentGroup","canLeaveEmpty","currentFielType","_getNewValueForFieldO3","_setFuncValue","isLHS","funcsPath","targetFV","funcK","argK","argDefinition","newV","_funcsPath$pop","_funcsPath$pop2","parentFV","_getNewValueForFieldO4","sourcePath","sourceChildren","targetPath","isSameParent","isSourceInsideTarget","isTargetInsideSource","sourceSubpathFromTarget","targetSubpathFromSource","newTargetChildren","newSourceChildren","_oldChildren","checkEmptyGroups","__lastAction","setDragProgress","setDragStart","setDragEnd","TreeActions","truncateString","useWordBoundary","subString","lastIndexOf","immutableEqual","Validation","getReactRootNodeType","_reactRootContainer","getOwnPropertyNames","parentNode","isUsingLegacyReactDomRender","liteShouldComponentUpdate","self","nextProps","nextState","prevProps","prevState","should","chs","changed","pureShouldComponentUpdate","useOnPropsChanged","shouldComponentUpdate","componentWillReceiveProps","onPropsChanged","origShouldComponentUpdate","bindActionCreators","actionCreators","dispatch","actionCreator","Query","_Component","_classCallCheck","_callSuper","nextValue","oldValidatedTree","_updateActions","onInit","actions","_inherits","_createClass","newBasicConfig","_this$props","renderBuilder","Component","propTypes","PropTypes","isRequired","ConnectedQuery","connect","displayName","DefaultUtils","ConfigUtils","QueryContainer","_this$_reactInternals","_this$_reactInternals2","lastTree","prevTree","prevprevTree","getConfig","prevValue","_createConfigMemo","_reactInternals","getMemoizedConfig","originalTree","createValidationMemo","emptyTree","reducer","treeStoreReducer","store","createStore","QueryWrapper","pr","nextConfig","isConfigChanged","storeValue","getState","isTreeChanged","currentTree","isTreeTrulyChanged","get_children","Provider","TreeUtils","_isReorderingTree","GroupOrRule","_Draggable","_PureComponent","Draggable","handleDraggerMouseDown","dom","wrapper","onDragStart","isDraggingTempo","isDraggingMe","otherProps","isTrueLocked","styles","cn","classNames","ref","PureComponent","_Utils$ConfigUtils","Operator","selectedField","getMeta","_config$types$selecte","selectedFieldType","selectedOperator","operatorsOptions","pickBy","_opts","buildOptions","selectedKeys","selectedPath","ops","renderProps","selectedFieldId","selectedFieldSrc","Col","dummyFn","xmlns","viewBox","fill","d","WithConfirmFn","getWidgetId","getRenderFromConfig","renderFn","OperatorWrapper","showOperator","showOperatorLabel","selectedFieldWidgetConfig","operatorInlineLabel","RuleUtils","Field","widgetId","maxLabelsLength","isFieldSelected","currField","getFieldLabel","partsLabels","parentFieldPath","sourceFields","lookingForFieldType","fieldOpts","optGroup","countFieldsMatchesType","fullFieldPath","fullLabel","hideForSelect","hasItemsMatchesType","_Utils$RuleUtils","OtherUtils","FuncSelect","needUpdateItems","getItems","canUseFuncForField","filteredFuncs","filterFuncs","selectedFuncKey","isFuncSelected","currFunc","getFuncLabel","leftFieldFullkey","expectedType","targetDefinition","_filter","subpath","funcFullkey","_targetDefinition","canUse","allowSelfNesting","fullFuncPath","funcOpts","_Utils$TreeUtils","WidgetFactoryMemo","widgetFactory","isConst","WidgetFactory","immValue","immValueError","widgetDefinition","widgetValueLabel","fieldPath","_excluded2","fixedImmValue","simpleField","funcArgDummyOpDef","Widget","_setValue","widgetType","oldRange","_setValueSrc","renderWidget","iValues","aField","_widgets$delta","hasValueSources","widgetLabel","valueSourcesOptions","_widgets$delta2","ValueSources","sourceLabel","renderSep","sepText","sepLabel","renderWidgetDelta","configChanged","changedKeys","_iValueSrcs","_iValueSrcs2","_this$meta","_this$meta2","fieldFunc","fieldArg","isForRuleGroup","iValueSrcs","isSpecialRangeForSrcField","isTrueSpecialRange","range","_this2$meta","_iValueSrcs3","_widgetDefinition","_this2$meta2","oldWidgetMeta","vsId","_this$meta3","fieldId","FuncWidget","_this$props2","_this$props3","renderFuncSelect","_value$get2","_this$props4","selectProps","renderArgLabel","showPrefix","renderArgLabelSep","renderArgVal","_this$props5","defaultValueSource","ArgWidget","renderArgSep","argIndex","renderBracketBefore","renderBracketAfter","renderFuncArgs","funcDefinition","_value$get3","_value$get4","funcLevel","_Component2","_delta","_this2$props","_this2$props2","FieldWrapper","classname","customFieldSelectProps","fieldSourcesOptions","canSelectFieldSource","OperatorOptions","operatorDefinitions","_operatorDefinitions$","optionsFactory","basicOptionsProps","optionsCmp","setOption","Rule","removeSelf","Btn","BtnGrp","BeforeWidget","AfterWidget","RuleError","doRemove","reordableNodesCnt","selectedFieldConfig","isSelectedGroup","isFieldAndOpSelected","selectedOperatorConfig","selectedOperatorHasOptions","hideOperator","showDragIcon","showWidget","showOperatorOptions","confirmOptions","isEmptyCurrentRule","onCancel","ruleData","_buildWidgetProps","immutableFieldsMode","immutableOpsMode","immutableValuesMode","oneError","onMouseDown","_this$props6","immutableGroupsMode","_this$props7","showLock","_this$props8","canShrinkValue","renderOperatorOptions","body","renderError","drag","renderDrag","renderLock","del","renderDel","totalRulesCnt","parentReordableNodesCnt","ConnectedRuleContainer","_RuleContainer","RuleContainer","isInDraggingTempo","hasError","createRuleContainer","Group","itemType","ConnectedGroupContainer","_GroupContainer","GroupContainer","_selectedConjunction","selectedConjunction","_getConjunctionOptions","oldConjunction","currentNesting","allowFurtherNesting","createGroupContainer","groupActionsPositionList","topLeft","topCenter","topRight","bottomLeft","bottomCenter","bottomRight","GroupActions","canAddGroup","canAddRule","canDeleteGroup","groupActionsPosition","setLockSwitch","addRuleBtn","addGroupBtn","delGroupBtn","BasicGroup","childrenClassName","BeforeActions","AfterActions","isEmptyCurrentGroup","showConjs","isOneChild","renderChildren","isGroupTopPosition","isNoChildren","renderHeader","renderActions","Item","extraPropsForItem","reordableNodesCntForItem","totalRulesCntForItem","_item","renderHeaderWrapper","renderChildrenWrapper","renderFooterWrapper","RuleGroupActions","RuleGroup","_BasicGroup","_get","_getPrototypeOf","RuleGroupExtActions","RuleGroupExt","renderGroupField","SwitchGroupActions","canAddDefault","addCaseGroupBtn","addDefaultCaseGroupBtn","SwitchGroup","hasDefaultCase","_this$props$children","_this$props$children2","totalCasesCnt","_this$props$children3","casesToReorder","_this$props$children4","_this$props$config$se","canLeaveEmptyCase","canRegroupCases","CaseGroup","BeforeCaseValue","AfterCaseValue","renderHeaderLeft","renderHeaderCenter","renderCondition","renderBeforeValue","renderAfterValue","oneValue","getProperties","_props$properties","typeMap","rule_group","rule_group_ext","switch_group","case_group","_props$properties2","itemComponent","_Utils$DefaultUtils","Builder","_updPath","rootType","CanMoveFn","ConnectedSortableContainer","_SortableContainer","SortableContainer","_getEventTarget","__mocked_window","document","window","treeEl","closest","_isUsingLegacyReactDomRender","classList","groupPadding","treeElContainer","scrollTop","_getScrollParent","tmpAllGroups","_getDraggableNodeEl","_getPlaceholderNodeEl","querySelectorAll","anyGroup","getComputedStyle","getPropertyValue","offsetLeft","offsetTop","offsetWidth","offsetHeight","itemInfo","clientX","clientY","eventTarget","addEventListener","onDrag","onDragEnd","doHandleDrag","startDragging","startMousePos","__mock_dom","dragEl","plhEl","plX","getBoundingClientRect","scrollX","plY","scrollY","startX","startY","startClientX","startClientY","startScrollTop","pos","handleDrag","preventDefault","remove","_cacheEls","removeEventListener","_prevProps","_prevState","oldPlX","oldPlY","indexId","ignoreCache","contains","querySelector","els","getElementsByClassName","overflowY","scrollHeight","_isScrollable","dragInfo","canMoveFn","dragRect","plhRect","hovRect","treeRect","moveInfo","dragId","dragDirs","hrz","vrt","hovCNodeEl","trgCoord","__mocked_hov_container","hovNodeEl","elementFromPoint","_hovNodeEl$firstChild","rootGroupContainer","firstChild","hovNodeId","getAttribute","hovEl","doAppend","doPrepend","hovHeight","hovII","trgRect","trgEl","trgII","altII","hovInnerEl","hovEl2","hovRect2","hovHeight2","isSamePos","dragLeftOffset","dragLev","round","availMoves","altMoves","isToRoot","isToCase","prevCaseId","nextCaseId","prevCase","nextCase","addCaseII","am","toII","fromCaseII","toCaseII","bestMode","filteredMoves","trg","isInside","toParentII","canMove","levs","curLev","allLevs","closestDragLev","move","fromII","newDepthLev","isBeforeAfter","isPend","isLev1","isParentChange","isStructChange","isForbiddenStructChange","isLockedChange","isLastFromCase","newRulesInTargetCase","createSortableContainer","ValueField","needUpdateMeta","filteredFields","filterFields","_leftFieldConfig$widg","customPlaceholder","leftFieldWidgetField","leftFieldWidgetFieldProps","rightFieldKey","rightFieldFullkey","hideForCompare","customRadioYesProps","radioYes","customRadioNoProps","radioNo","onRadioChange","dtValue","opt","getMultiSelectValues","fontWeight","htmlFor","_conjunctionOptions$k","typeToLabel","btnLabel","confirm","VanillaProvider","Proximity","defaultProximity","selectedProximity","proxValues","defaultProps","CoreConfig","ProximityOperator","VanillaTextWidget","VanillaTextAreaWidget","VanillaNumberWidget","VanillaSliderWidget","VanillaSelectWidget","VanillaMultiSelectWidget","VanillaDateWidget","VanillaTimeWidget","VanillaDateTimeWidget","VanillaBooleanWidget","ValueFieldWidget","VanillaFieldSelect","VanillaConjs","VanillaSwitch","VanillaButton","VanillaIcon","VanillaButtonGroup","VanillaValueSources","_ref25","_ref26","vanillaConfirm","_ref27","Widgets","CustomOperators","C","P","_Utils$Autocomplete","_Utils$ListUtils","useLoadMore","useAsyncSearch","forceAsyncSearch","selectedAsyncListValues","staticListValues","knownSpecialValues","loadMoreTitle","loadingMoreTitle","_React$useState3","_React$useState4","asyncFetchMeta","setAsyncFetchMeta","_React$useState5","_React$useState6","loadingCnt","setLoadingCnt","_React$useState7","_React$useState8","isLoadingMore","setIsLoadingMore","_React$useState9","_React$useState10","setInputValue","_React$useState11","_React$useState12","setAsyncListValues","asyncFectchCnt","componentIsMounted","isSelectedLoadMore","nSelectedAsyncListValues","listValuesToDisplay","canInitialLoad","canLoadMore","canShowLoadMore","fetchListValues","isLoadMore","newAsyncFetchCnt","newMeta","nValues","assumeHasMore","realNewMeta","_args","sent","loadListValues","_callee2","_args2","loadListValuesDebounced","debounce","_callee3","_callee4","isLoadMoreClick","_context4","_callee5","_option2","isClearingAll","isClearingInput","isClearingSingle","_option$value","_option","isAddingCustomOptionFromSearch","_optionsToListValues","_optionsToListValues2","_optionToListValue","_optionToListValue2","lvs","_context5","_x4","_callee6","newInputValue","eventType","shouldIgnore","_context6","_x5","_x6","_x7","onDropdownVisibleChange","isSpecialValue","valueOrOption","_valueOrOption$value","ReactUtils","webpackContext","req","webpackContextResolve","__webpack_require__","code","module","exports"],"sourceRoot":""}