{"version":3,"file":"554.bundle.js","mappings":"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","sources":["webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialSelect.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialFieldAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialIcon.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialButton.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialValueSources.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/index.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialText.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialTextArea.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialDate.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialDateTime.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialTime.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialNumber.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialSlider.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialRange.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialBoolean.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialConjs.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialSwitch.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialConfirm.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../core/modules/utils/uuid.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/default.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/listValues.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/treeUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/export.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/spel.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/defaultUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/validation.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/funcUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/ruleUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configSerialize.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryBuilder.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/mongoDb.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/sql.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryString.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/elasticSearch.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/autocomplete.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/funcs.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/ctx.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/group.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/rule.js","webpack://@react-awesome-query-builder/examples/../core/modules/index.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/context.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/drag.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/index.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/configUtils.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/validation.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/reactUtils.js","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Query.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/QueryContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/RuleContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/SortableContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/Draggable.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Operator.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/utils.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Field.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/WidgetFactory.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Widget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncWidget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FieldWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorOptions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Rule.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/GroupContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/GroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Group.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExtActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExt.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/CaseGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Item.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Builder.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/ValueField.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaBoolean.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaText.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTextArea.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDate.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDateTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaNumber.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSlider.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaConjs.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButton.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaIcon.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaValueSources.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaSwitch.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/vanillaConfirm.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/operators/Proximity.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/hooks/useListValuesAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/index.js","webpack://@react-awesome-query-builder/examples/../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ sync [/\\\\](es-us(\\.js)"],"sourcesContent":["import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = () =>\n    mapListValues(listValues, ({title, value}) => {\n      return <MenuItem key={value} value={value}>{title}</MenuItem>;\n    });\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  const renderValue = (selectedValue) => {\n    if (!readonly && selectedValue == null)\n      return placeholder;\n    return getListValueTitle(selectedValue);\n  };\n\n  const getListValueTitle = (selectedValue) => \n    mapListValues(listValues, ({title, value}) => \n      (value === selectedValue ? title : null)\n    )\n      .filter(v => v !== null)\n      .shift();\n  \n  const hasValue = value != null;\n\n  return (\n    <FormControl>\n      <Select\n        autoWidth\n        displayEmpty\n        label={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : \"\"}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        {...omit(customProps, [\"showSearch\", \"input\"])}\n      >\n        {renderOptions()}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = (selectedValues) => \n    mapListValues(listValues, ({title, value}) => {\n      return (\n        <MenuItem key={value} value={value}>\n          <Checkbox checked={selectedValues.indexOf(value) > -1} />\n          <ListItemText primary={title} />\n        </MenuItem>\n      );\n    });\n\n  const renderValue = (selectedValues) => {\n    if (!readonly && !selectedValues.length)\n      return placeholder;\n    const selectedTitles = mapListValues(listValues, ({title, value}) => (\n      selectedValues.indexOf(value) > -1 ? title : null\n    )).filter(v => v !== null);\n    return selectedTitles.join(\", \");\n  };\n\n  const hasValue = value != null && value.length > 0;\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  return (\n    <FormControl>\n      <Select multiple\n        autoWidth\n        displayEmpty\n        label={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : []}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n      >\n        {renderOptions(hasValue ? value : [])}\n      </Select>\n    </FormControl>\n  );\n};\n","import React, {useCallback} from \"react\";\nimport omit from \"lodash/omit\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Autocomplete, { createFilterOptions } from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport { Hooks, Utils } from \"@react-awesome-query-builder/ui\";\nconst { useListValuesAutocomplete } = Hooks;\n\nconst nonCheckedIcon = <CheckBoxOutlineBlankIcon fontSize=\"small\" style={{ marginRight: 10, marginTop: 4 }} />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" style={{ marginRight: 10, marginTop: 4 }} />;\nconst emptyArray = [];\n\n\nexport default (props) => {\n  const {\n    allowCustomValues, multiple, disableClearable,\n    value: selectedValue, customProps, readonly, config, filterOptionsConfig, errorText\n  } = props;\n  const stringifyOption = useCallback((option) => {\n    const keysForFilter = config.settings.listKeysForSearch;\n    const valueForFilter = keysForFilter\n      .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n      .join(\"\\0\");\n    return valueForFilter;\n  }, [config]);\n  const defaultFilterOptionsConfig = {\n    stringify: stringifyOption\n  };\n  const filterOptionsFn = createFilterOptions(filterOptionsConfig || defaultFilterOptionsConfig);\n\n  // hook\n  const {\n    open,\n    onOpen,\n    onClose,\n    onChange,\n    onInputChange,\n    inputValue,\n    options,\n    isInitialLoading,\n    isLoading,\n    aPlaceholder,\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    selectedListValue,\n  } = useListValuesAutocomplete(props, {\n    debounceTimeout: 100,\n    multiple,\n    uif: \"mui\"\n  });\n\n  // setings\n  const {defaultSelectWidth, defaultSearchWidth} = config.settings;\n  const {width, ...rest} = customProps || {};\n  let customInputProps = rest.input || {};\n  const inputWidth = customInputProps.width || defaultSearchWidth;\n  customInputProps = omit(customInputProps, [\"width\"]);\n  const customAutocompleteProps = omit(rest, [\"showSearch\", \"showCheckboxes\"]);\n\n  const fullWidth = true;\n  const minWidth = width || defaultSelectWidth;\n  const style = {\n    width: (multiple ? undefined : minWidth),\n    minWidth: minWidth\n  };\n  const placeholder = !readonly ? aPlaceholder : \"\";\n  const hasValue = selectedValue != null;\n  // should be simple value to prevent re-render!s\n  const value = hasValue ? selectedValue : (multiple ? emptyArray : null);\n\n  const filterOptions = (options, params) => {\n    const filtered = filterOptionsFn(options, params);\n    const extended = extendOptions(filtered);\n    return extended;\n  };\n\n  const groupBy = (option) => option?.groupTitle;\n\n  // styles\n  const useStyles = makeStyles((theme) => ({\n    // fix too small width\n    input: {\n      minWidth: inputWidth + \" !important\",\n    }\n  }));\n\n  const useStylesChip = makeStyles((theme) => ({\n    // fix height\n    root: {\n      height: \"auto\"\n    },\n    label: {\n      marginTop: \"3px\",\n      marginBottom: \"3px\",\n    }\n  }));\n\n  const classesChip = useStylesChip();\n  const classes = useStyles();\n\n  // render\n  const renderInput = (params) => {\n    // parity with Antd\n    const shouldRenderSelected = !multiple && !open;\n    const selectedTitle = selectedListValue?.title ?? \"\";\n    const shouldHide = multiple && !open;\n    const value = shouldRenderSelected ? selectedTitle : (shouldHide ? \"\" : inputValue ?? \"\");\n    return (\n      <TextField \n        {...params}\n        inputProps={{\n          ...params.inputProps,\n          value,\n        }}\n        InputProps={{\n          ...params.InputProps,\n          readOnly: readonly,\n          endAdornment: (\n            <React.Fragment>\n              {isLoading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n              {params.InputProps.endAdornment}\n            </React.Fragment>\n          ),\n        }}\n        disabled={readonly}\n        placeholder={placeholder}\n        error={!!errorText}\n        //onChange={onInputChange}\n        {...customInputProps}\n      />\n    );\n  };\n\n  const renderTags = (value, getTagProps) => value.map((option, index) => {\n    const className = getOptionIsCustom(option) ? \"customSelectOption\" : undefined;\n    const titleSpan = (\n      <span className={className}>\n        {getOptionLabel(option)}\n      </span>\n    );\n    return <Chip\n      key={option.value}\n      classes={classesChip}\n      label={titleSpan}\n      size={\"small\"}\n      //variant={getOptionIsCustom(option) ? \"outlined\" : undefined}\n      {...getTagProps({ index })}\n    />;\n  });\n\n  const renderOption = (option, { selected }) => {\n    const { title, renderTitle, value, specialValue, isHidden } = option;\n    const isSelected = selected;\n    //const isSelected = multiple ? (selectedValue || []).includes(value) : selectedValue == value;\n    const className = getOptionIsCustom(option) ? \"customSelectOption\" : undefined;\n    const titleSpan = (\n      <span className={className}>\n        {renderTitle || title}\n      </span>\n    );\n    if (isHidden)\n      return null;\n    if (multiple) {\n      if (specialValue)\n        return (\n          <Box>\n            {renderTitle || title}\n          </Box>\n        );\n      else\n        return (\n          <Box>\n            {selected ? checkedIcon : nonCheckedIcon}\n            {titleSpan}\n          </Box>\n        );\n    } else {\n      if (specialValue)\n        return <React.Fragment>{renderTitle || title}</React.Fragment>;\n      else\n        return <React.Fragment>{titleSpan}</React.Fragment>;\n    }\n  };\n\n  return (\n    <FormControl fullWidth={fullWidth}>\n      <Autocomplete\n        disableClearable={disableClearable}\n        disableCloseOnSelect={multiple}\n        fullWidth={fullWidth}\n        multiple={multiple}\n        style={style}\n        classes={classes}\n        freeSolo={allowCustomValues}\n        loading={isInitialLoading}\n        open={open}\n        onOpen={onOpen}\n        onClose={onClose}\n        inputValue={inputValue}\n        onInputChange={onInputChange}\n        label={placeholder}\n        onChange={onChange}\n        value={value}\n        getOptionSelected={getOptionSelected}\n        disabled={readonly}\n        readOnly={readonly}\n        options={options}\n        groupBy={groupBy}\n        getOptionLabel={getOptionLabel}\n        getOptionDisabled={getOptionDisabled}\n        renderInput={renderInput}\n        renderTags={renderTags}\n        renderOption={renderOption}\n        filterOptions={filterOptions}\n        {...customAutocompleteProps}\n      ></Autocomplete>\n    </FormControl>\n  );\n};\n","import React, {useCallback} from \"react\";\nimport MaterialAutocomplete from \"../value/MaterialAutocomplete\";\n\n// see type FieldItemSearchableKeys\nconst mapFieldItemToOptionKeys = {\n  key: \"_value2\",\n  path: \"value\",\n  label: \"title\",\n  altLabel: \"_altLabel\",\n  tooltip: \"tooltip\",\n  grouplabel: \"groupTitle\",\n};\n\nconst itemsToListValues = (items, level = 0) => (\n  items.map(item => {\n    const {items, path, key, label, altLabel, disabled, grouplabel, matchesType, tooltip} = item;\n    const prefix = \"\\u00A0\\u00A0\".repeat(level);\n    if (items) {\n      return itemsToListValues(items, level+1);\n    } else {\n      return {\n        title: label,\n        renderTitle: matchesType ? <b>{prefix+label}</b> : prefix+label,\n        value: path,\n        disabled,\n        groupTitle: level > 0 ? prefix+grouplabel : null,\n        tooltip: tooltip,\n        _value2: key,\n        _altLabel: altLabel,\n      };\n    }\n  }).flat(Infinity)\n);\n\nconst fieldAdapter = ({items, selectedKey, setField, isValueField, ...rest}, config) => {\n  const listValues = itemsToListValues(items);\n  const value = selectedKey;\n  const setValue = (value, _asyncValues) => {\n    if (!value && !isValueField) return undefined;\n    return setField(value);\n  };\n\n  const filterOptionsConfig = {\n    stringify: useCallback((option) => {\n      const keysForFilter = config.settings.fieldItemKeysForSearch\n        .map(k => mapFieldItemToOptionKeys[k]);\n      const valueForFilter = keysForFilter\n        .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n        .join(\"\\0\");\n      return valueForFilter;\n    }, [config])\n  };\n\n  return {\n    ...rest,\n    listValues,\n    setValue,\n    filterOptionsConfig,\n    allowCustomValues: false,\n    multiple: false,\n    disableClearable: !isValueField,\n    value,\n    isFieldAutocomplete: true,\n  };\n};\n\nexport default (props) => {\n  return <MaterialAutocomplete  {...fieldAdapter(props, props.config)} />;\n};\n","import React from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DragHandle from \"@material-ui/icons/DragHandle\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { DragIcon } = Utils;\n\nconst typeToIcon = {\n  \"delGroup\": <DeleteIcon />,\n  \"delRuleGroup\": <DeleteIcon />,\n  \"delRule\": <DeleteIcon />,\n  \"addRuleGroup\": <AddIcon />,\n  \"addRuleGroupExt\": <AddIcon />,\n  \"addRule\": <AddIcon />,\n  \"addGroup\": <AddIcon />,\n  \"drag\": <DragHandle />,\n};\n\nconst typeToColor = {\n  // \"addRule\": \"primary\",\n  // \"addGroup\": \"primary\",\n  // \"delGroup\": \"secondary\",\n  // \"delRuleGroup\": \"secondary\",\n  // \"delRule\": \"secondary\",\n  \"drag\": \"inherit\",\n};\n\nexport default ({type, readonly}) => {\n  let icon = typeToIcon[type] || null;\n  if (!icon && type === \"drag\") {\n    return <DragIcon />;\n  }\n\n  if (type === \"drag\") {\n    return (\n      <Icon\n        size=\"small\" \n        disabled={readonly} \n        color={typeToColor[type]}\n      >{icon}</Icon>\n    );\n  } else {\n    return icon;\n  }\n};\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nconst hideLabelsFor = {\n  \"addRuleGroup\": true,\n  \"addRuleGroupExt\": true,\n  \"delGroup\": true,\n  \"delRuleGroup\": true,\n  \"delRule\": true,\n};\n\nconst typeToColor = {\n  \"addRule\": \"primary\",\n  \"addGroup\": \"primary\",\n  \"delGroup\": \"secondary\",\n  \"delRuleGroup\": \"secondary\",\n  \"delRule\": \"secondary\",\n};\n\nexport default (props) => {\n  const {type, label, onClick, readonly, renderIcon} = props;\n  const iconProps = {\n    type,\n    readonly,\n  };\n  const icon = renderIcon?.(iconProps);\n\n  if (!label || hideLabelsFor[type]) {\n    return (\n      <IconButton\n        size=\"small\" \n        disabled={readonly} \n        onClick={onClick} \n        color={typeToColor[type]}\n      >{icon}</IconButton>\n    );\n  } else {\n    return (\n      <Button\n        size=\"small\" \n        disabled={readonly} \n        onClick={onClick} \n        color={typeToColor[type]} \n        startIcon={icon}\n      >{label}</Button>\n    );\n  }\n};\n","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ExpandMoreSharpIcon from \"@material-ui/icons/ExpandMoreSharp\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(1),\n  },\n}));\n\nexport default ({ valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const classes = useStyles();\n\n\n  const handleOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const toggleOpenClose = (event) => {\n    anchorEl ? handleClose() : handleOpen(event);\n  };\n\n  const handleChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValueSrc(e.target.value);\n    handleClose();\n  };\n\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => (\n      <FormControlLabel \n        key={srcKey} \n        value={srcKey} \n        checked={valueSrc == srcKey || !valueSrc && srcKey == \"value\"} \n        control={<Radio />} \n        label={info.label}\n      />\n    ))\n  );\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <div>\n      <IconButton size=\"small\" onClick={toggleOpenClose}>\n        <ExpandMoreSharpIcon />\n      </IconButton>\n    \n      <Popover    \n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n        onClose={handleClose}\n        classes={{\n          paper: classes.paper,\n        }}\n        disablePortal\n      >\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">{title}</FormLabel>\n          <RadioGroup value={valueSrc || \"value\"} onChange={handleChange}>\n            {renderOptions(valueSources)}\n          </RadioGroup>\n        </FormControl>\n      </Popover>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { ThemeProvider, createTheme } from \"@material-ui/core/styles\";\nimport { ConfirmProvider, useConfirm } from \"material-ui-confirm\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\n\n\n// value widgets\nimport MaterialTextWidget from \"./value/MaterialText\";\nimport MaterialTextAreaWidget from \"./value/MaterialTextArea\";\nimport MaterialDateWidget from \"./value/MaterialDate\";\nimport MaterialDateTimeWidget from \"./value/MaterialDateTime\";\nimport MaterialTimeWidget from \"./value/MaterialTime\";\nimport MaterialSelectWidget from \"./value/MaterialSelect\";\nimport MaterialNumberWidget from \"./value/MaterialNumber\";\nimport MaterialSliderWidget from \"./value/MaterialSlider\";\nimport MaterialRangeWidget from \"./value/MaterialRange\";\nimport MaterialBooleanWidget from \"./value/MaterialBoolean\";\nimport MaterialMultiSelectWidget from \"./value/MaterialMultiSelect\";\nimport MaterialAutocompleteWidget from \"./value/MaterialAutocomplete\";\n\n// field select widgets\nimport MaterialFieldSelect from \"./core/MaterialFieldSelect\";\nimport MaterialFieldAutocomplete from \"./core/MaterialFieldAutocomplete\";\n\n// core components\nimport MaterialIcon from \"./core/MaterialIcon\";\nimport MaterialButton from \"./core/MaterialButton\";\nimport MaterialButtonGroup from \"./core/MaterialButtonGroup\";\nimport MaterialConjs from \"./core/MaterialConjs\";\nimport MaterialSwitch from \"./core/MaterialSwitch\";\nimport MaterialValueSources from \"./core/MaterialValueSources\";\nimport MaterialConfirm from \"./core/MaterialConfirm\";\n\n// provider\nconst MaterialProvider = ({config, children}) => {\n  const settingsTheme = config.settings.theme || {};\n  const settingsLocale = config.settings.locale || {};\n  const themeConfig = settingsTheme.material;\n  const locale = settingsLocale.material;\n  const useTheme = themeConfig || locale;\n  const theme = useTheme ? createTheme(themeConfig, locale) : null;\n\n  const base = (<div className=\"mui\">{children}</div>);\n  const withProviders = (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      <ConfirmProvider>\n        {base}\n      </ConfirmProvider>\n    </MuiPickersUtilsProvider>\n  );\n  const withTheme = theme ? (\n    <ThemeProvider theme={theme}>\n      {withProviders}\n    </ThemeProvider>\n  ) : withProviders;\n\n  return withTheme;\n};\n\n\nexport default {\n  MaterialTextWidget,\n  MaterialTextAreaWidget,\n  MaterialDateWidget,\n  MaterialDateTimeWidget,\n  MaterialTimeWidget,\n  MaterialSelectWidget,\n  MaterialNumberWidget,\n  MaterialSliderWidget,\n  MaterialRangeWidget,\n  MaterialBooleanWidget,\n  MaterialMultiSelectWidget,\n  MaterialAutocompleteWidget,\n\n  MaterialFieldSelect,\n  MaterialFieldAutocomplete,\n\n  MaterialIcon,\n  MaterialButton,\n  MaterialButtonGroup,\n  MaterialConjs,\n  MaterialSwitch,\n  MaterialValueSources,\n  MaterialConfirm,\n  MaterialUseConfirm: useConfirm,\n\n  MaterialProvider,\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength} = props;\n\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n\n  const textValue = value || \"\";\n\n  return (\n    <FormControl>\n      <TextField \n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength, maxRows, fullWidth} = props;\n  const {defaultMaxRows} = config.settings;\n\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  \n  const textValue = value || \"\";\n\n  return (\n    <FormControl fullWidth={fullWidth}>\n      <TextField \n        fullWidth={fullWidth}\n        maxRows={maxRows || defaultMaxRows}\n        multiline={true}\n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport { KeyboardDatePicker, DatePicker } from \"@material-ui/pickers\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, readonly, customProps, dateFormat, valueFormat, placeholder} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const useKeyboard = window?.matchMedia\n    ? window.matchMedia?.(\"(pointer:fine), (pointer:none)\").matches\n    : props.useKeyboard;\n  const Picker = useKeyboard ? KeyboardDatePicker : DatePicker;\n\n  return (\n    <FormControl>\n      <Picker\n        readOnly={readonly}\n        disabled={readonly}\n        placeholder={!readonly ? placeholder : \"\"}\n        format={dateFormat}\n        value={value || null}\n        onChange={handleChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};","import React from \"react\";\nimport { DateTimePicker, KeyboardDateTimePicker } from \"@material-ui/pickers\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, dateFormat, timeFormat, valueFormat, customProps} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const useKeyboard = window?.matchMedia\n    ? window.matchMedia?.(\"(pointer:fine), (pointer:none)\").matches\n    : props.useKeyboard;\n  const Picker = useKeyboard ? KeyboardDateTimePicker : DateTimePicker;\n  const dateTimeFormat = dateFormat + \" \" + timeFormat;\n  \n  return (\n    <FormControl>\n      <Picker\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        placeholder={!readonly ? placeholder : \"\"}\n        format={dateTimeFormat}\n        value={value || null}\n        onChange={handleChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport { TimePicker, KeyboardTimePicker } from \"@material-ui/pickers\";\nimport moment from \"moment\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, timeFormat, valueFormat, customProps} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const useKeyboard = window?.matchMedia\n    ? window.matchMedia?.(\"(pointer:fine), (pointer:none)\").matches\n    : props.useKeyboard;\n  const Picker = useKeyboard ? KeyboardTimePicker : TimePicker;\n  const hasSeconds = timeFormat.indexOf(\":ss\") != -1;\n  const timeValue = value ? moment(value, timeFormat) : null;\n\n  return (\n    <FormControl>\n      <Picker\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        placeholder={!readonly ? placeholder : \"\"}\n        format={timeFormat}\n        value={timeValue || null}\n        onChange={handleChange}\n        views={hasSeconds ? [\"hours\", \"minutes\", \"seconds\"] : [\"hours\", \"minutes\"]}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps} = props;\n  \n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n\n  const numberValue = value == undefined ? \"\" : value;\n  \n  return (\n    <FormControl>\n      <TextField \n        type=\"number\"\n        value={numberValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          min: min,\n          max: max,\n          step: step,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {config, placeholder, customProps, value, setValue, min, max, step, marks, readonly} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  const handleSliderChange = (_e, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleInputChange = (e) => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n\n  const handleInputBlur = () => {\n    // TIP: Fix if typed value out of range in input\n    if (value < min) {\n      setValue(min);\n    } else if (value > max) {\n      setValue(max);\n    }\n  };\n\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n  \n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0\n  const inputValue = typeof value === \"number\" ? value : \"\";\n  const sliderValue = typeof value === \"number\" ? value : null;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = marks ? Object.keys(marks).map(v => ({value: v, label: marks[v]})) : false;\n\n\n  const InputCmp = (\n    <TextField \n      type=\"number\"\n      value={inputValue}\n      placeholder={placeholder}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChange}\n      onBlur={handleInputBlur}\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    alignItems: \"center\",\n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {InputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {config, placeholders, customProps, value, setValue, min, max, step, marks, readonly, textSeparators} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  useEffect(() => {\n    const [valueFrom, valueTo] = props.value || [undefined, undefined];\n    if (props.value && (valueFrom == undefined || valueTo == undefined)) {\n      // happens if we changed op from '==' to 'between'\n      // (I know, timeout is dirty hack..)\n      setTimeout(() => {\n        const oneValue = valueFrom || valueTo;\n        const value = [oneValue, oneValue];\n        setValue(value);\n      }, 1);\n    }\n  }, []);\n\n  const handleSliderChange = (_e, newValues) => {\n    setValue(newValues);\n  };\n\n  const handleInputChangeFrom = (e) => {\n    // TIP: need to use props.value instead of value\n    let valueFrom = e.target.value;\n    if (valueFrom === \"\" || valueFrom == null)\n      valueFrom = undefined;\n    else\n      valueFrom = Number(valueFrom);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[0] = valueFrom;\n    setValue(value);\n  };\n\n  const handleInputChangeTo = (e) => {\n    let valueTo = e.target.value;\n    if (valueTo === \"\" || valueTo == null)\n      valueTo = undefined;\n    else\n      valueTo = Number(valueTo);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[1] = valueTo;\n    setValue(value);\n  };\n\n  const handleInputBlur = () => {\n    // TIP: Fix if typed value out of range in inputs\n    if (!value) return;\n    if (value[0] < min) {\n      setValue([min, value[1]]);\n    } else if (value[1] > max) {\n      setValue([value[0], max]);\n    }\n  };\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = marks ? Object.keys(marks).map(v => ({value: v, label: marks[v]})) : false;\n\n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0, but null will cause problems with range mode\n  let sliderValue = value ? [...value] : [undefined, undefined];\n  let [valueFrom, valueTo] = sliderValue;\n  if (valueFrom == undefined) {\n    valueFrom = \"\";\n    sliderValue[0] = 0;\n  }\n  if (valueTo == undefined) {\n    valueTo = \"\";\n    sliderValue[1] = 0;\n  }\n  \n\n  const FromInputCmp = (\n    <TextField \n      type=\"number\"\n      value={valueFrom}\n      placeholder={placeholders[0]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeFrom}\n      onBlur={handleInputBlur}\n      {...customInputProps}\n    />\n  );\n\n  const ToInputCmp = (\n    <TextField \n      type=\"number\"\n      value={valueTo}\n      placeholder={placeholders[1]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeTo}\n      onBlur={handleInputBlur}\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {FromInputCmp}\n        </div>\n        <div className={\"widget--sep\"}>\n          <span>{ textSeparators[1] }</span>\n        </div>\n        <div style={stylesInputWrapper}>\n          {ToInputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default (props) => {\n  const { customProps, value, setValue, labelYes, labelNo, readonly } = props;\n\n  const onChange = () => {\n    setValue(!value);\n  };\n  \n  return (\n    <FormControl>\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\n          <Grid item component=\"span\">{labelNo}</Grid>\n          <Grid item component=\"span\">\n            <Switch\n              checked={!!value}\n              onChange={onChange}\n              disabled={readonly}\n              {...customProps}\n            />\n          </Grid>\n          <Grid item component=\"span\">{labelYes}</Grid>\n        </Grid>\n      </Typography>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default ({items, setField, selectedKey, readonly, placeholder, errorText}) => {\n  const renderOptions = (fields, level = 0) => (\n    fields.map(field => {\n      const {items, path, label, disabled, matchesType} = field;\n      const prefix = \"\\u00A0\\u00A0\".repeat(level);\n      if (items) {\n        return [\n          <ListSubheader disabled={disabled} key={path} disableSticky={true}>\n            {prefix && <span>{prefix}</span>}\n            {label}\n          </ListSubheader>,\n          renderOptions(items, level+1),\n        ];\n      } else {\n        return <MenuItem disabled={disabled} key={path} value={path}>\n          {prefix && <span>{prefix}</span>}\n          {matchesType ? <b>{label}</b> : label}\n        </MenuItem>;\n      }\n    })\n  );\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setField(e.target.value);\n  };\n\n  const renderValue = (selectedValue) => {\n    if (!readonly && !selectedValue)\n      return placeholder;\n    const findLabel = (fields) => {\n      return fields.map(field => {\n        if(!field.items) return field.path === selectedValue ? field.label : null;\n        return findLabel(field.items);\n      });\n    };\n    return findLabel(items).filter((v) => {\n      if (Array.isArray(v)) {\n        return v.some((value) => value !== null);\n      } else {\n        return v !== null;\n      }\n    }).pop();\n  };\n  \n  const hasValue = selectedKey != null;\n  return (\n    <FormControl>\n      <Select\n        error={!!errorText}\n        autoWidth\n        displayEmpty\n        label={placeholder}\n        onChange={onChange}\n        value={hasValue ? selectedKey : \"\"}\n        disabled={readonly}\n        renderValue={renderValue}\n      >\n        {renderOptions(items)}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default ({id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel}) => {\n  //TIP: disabled=true if only 1 rule; readonly=true if immutable mode\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(key => {\n      const {id, name, label, checked} = conjunctionOptions[key];\n      const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n      if ((readonly || disabled) && !checked)\n        return null;\n      return (\n        <Button \n          key={id+postfix} \n          id={id+postfix} \n          color={checked ? \"primary\" : \"default\"} \n          value={key} \n          onClick={onClick.bind(null, key)} \n          disabled={readonly || disabled}\n        >\n          {label}\n        </Button>\n      );\n    });\n  \n  const renderNot = () => {\n    if (readonly && !not)\n      return null;\n    return (\n      <Button \n        key={id}\n        id={id + \"__not\"}\n        color={not ? \"secondary\" : \"default\"} \n        onClick={onNotClick.bind(null, !not)} \n        disabled={readonly}\n      >\n        {notLabel || \"NOT\"}\n      </Button>\n    );\n  };\n\n  const onClick = value => setConjunction(value);\n  const onNotClick = checked => setNot(checked);\n\n  return (\n    <FormControl>\n      <ButtonGroup \n        disableElevation \n        variant=\"contained\" \n        size=\"small\" \n        disabled={readonly}\n      >\n        {showNot && renderNot()}\n        {showConj && renderOptions()}\n      </ButtonGroup>\n    </FormControl>\n  );\n  \n};\n","import React from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport LockIcon from \"@material-ui/icons/Lock\";\n\nexport default ({value, setValue, label, checkedLabel, hideLabel, id, config, type}) => {\n  const {renderSize} = config.settings;\n  const onChange = e => setValue(e.target.checked);\n  const onClick = () => setValue(!value);\n  const postfix = type;\n  const showLabel = value ? (checkedLabel || label) : label;\n  const icon = value ? <LockIcon /> : <LockOpenIcon />;\n\n  if (type == \"lock\") {\n    if (hideLabel) {\n      return <IconButton\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n      >{icon}</IconButton>;\n    } else {\n      return <Button\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n        startIcon={icon}\n      >{showLabel}</Button>;\n    }\n  }\n\n  return <FormControlLabel \n    control={<Switch\n      checked={!!value}\n      size={\"small\"}\n      onChange={onChange}\n    />} \n    label={showLabel} \n  />;\n};\n","export default ({onOk, okText, cancelText, title, confirmFn}) => {\n  confirmFn({ \n    description: title || \"Are you sure?\",\n    title: null,\n    confirmationText: okText || \"Ok\",\n    cancellationText: cancelText || \"Cancel\",\n  })\n    .then(onOk)\n    .catch(() => {});\n};\n","import React from \"react\";\nimport MaterialWidgets from \"../widgets\";\nimport { BasicConfig, Utils } from \"@react-awesome-query-builder/ui\";\n\n\nconst settings = {\n  ...BasicConfig.settings,\n\n  renderField: (props, {RCE, W: {MaterialFieldAutocomplete, MaterialFieldSelect}}) => props?.customProps?.showSearch \n    ? RCE(MaterialFieldAutocomplete, props)\n    : RCE(MaterialFieldSelect, props),\n  renderOperator: (props, {RCE, W: {MaterialFieldSelect}}) => RCE(MaterialFieldSelect, props),\n\n  renderFunc: (props, {RCE, W: {MaterialFieldSelect}}) => RCE(MaterialFieldSelect, props),\n  renderConjs: (props, {RCE, W: {MaterialConjs}}) => RCE(MaterialConjs, props),\n  renderSwitch: (props, {RCE, W: {MaterialSwitch}}) => RCE(MaterialSwitch, props),\n  renderButton: (props, {RCE, W: {MaterialButton}}) => RCE(MaterialButton, props),\n  renderIcon: (props, {RCE, W: {MaterialIcon}}) => RCE(MaterialIcon, props),\n  renderButtonGroup: (props, {RCE, W: {MaterialButtonGroup}}) => RCE(MaterialButtonGroup, props),\n  renderValueSources: (props, {RCE, W: {MaterialValueSources}}) => RCE(MaterialValueSources, props),\n  renderFieldSources: (props, {RCE, W: {MaterialValueSources}}) => RCE(MaterialValueSources, props),\n  renderProvider: (props, {RCE, W: {MaterialProvider}}) => RCE(MaterialProvider, props),\n  renderConfirm: (props, {W: {MaterialConfirm}}) => MaterialConfirm(props),\n  useConfirm: ({W: {MaterialUseConfirm}}) => MaterialUseConfirm(),\n};\n\n\nconst widgets = {\n  ...BasicConfig.widgets,\n  text: {\n    ...BasicConfig.widgets.text,\n    factory: (props, {RCE, W: {MaterialTextWidget}}) => RCE(MaterialTextWidget, props),\n  },\n  textarea: {\n    ...BasicConfig.widgets.textarea,\n    factory: (props, {RCE, W: {MaterialTextAreaWidget}}) => RCE(MaterialTextAreaWidget, props),\n  },\n  number: {\n    ...BasicConfig.widgets.number,\n    factory: (props, {RCE, W: {MaterialNumberWidget}}) => RCE(MaterialNumberWidget, props),\n  },\n  multiselect: {\n    ...BasicConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {MaterialAutocompleteWidget, MaterialMultiSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch) \n        ? RCE(MaterialAutocompleteWidget, {...props, multiple: true}) \n        : RCE(MaterialMultiSelectWidget, props);\n    },\n  },\n  select: {\n    ...BasicConfig.widgets.select,\n    factory: (props, {RCE, W: {MaterialAutocompleteWidget, MaterialSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch) \n        ? RCE(MaterialAutocompleteWidget, props) \n        : RCE(MaterialSelectWidget, props);\n    },\n  },\n  slider: {\n    ...BasicConfig.widgets.slider,\n    factory: (props, {RCE, W: {MaterialSliderWidget}}) => RCE(MaterialSliderWidget, props),\n  },\n  boolean: {\n    ...BasicConfig.widgets.boolean,\n    factory: (props, {RCE, W: {MaterialBooleanWidget}}) => RCE(MaterialBooleanWidget, props),\n  },\n  date: {\n    ...BasicConfig.widgets.date,\n    factory: (props, {RCE, W: {MaterialDateWidget}}) => RCE(MaterialDateWidget, props),\n  },\n  time: {\n    ...BasicConfig.widgets.time,\n    factory: (props, {RCE, W: {MaterialTimeWidget}}) => RCE(MaterialTimeWidget, props),\n  },\n  datetime: {\n    ...BasicConfig.widgets.datetime,\n    factory: (props, {RCE, W: {MaterialDateTimeWidget}}) => RCE(MaterialDateTimeWidget, props),\n  },\n\n  rangeslider: {\n    ...BasicConfig.widgets.rangeslider,\n    factory: (props, {RCE, W: {MaterialRangeWidget}}) => RCE(MaterialRangeWidget, props),\n  },\n};\n\n\nconst types = {\n  ...BasicConfig.types,\n};\n\nconst ctx = {\n  ...BasicConfig.ctx,\n  W: {\n    ...BasicConfig.ctx.W,\n    ...MaterialWidgets,\n  },\n};\n\nlet config = {\n  ...BasicConfig,\n  ctx,\n  types,\n  widgets,\n  settings,\n};\nconfig = Utils.ConfigMixins.addMixins(config, [\n  \"rangeslider\",\n]);\n\nexport default config;","// Had to make uuid use a constant seed so it would generate same sequence across runs. This was needed\n// so server side rendering and client side rendering yield same results (e.g. the uuid is used when rendering\n// the concunctions with their name and id)\nvar query_builder_seed = 0;\nexport default () => {\n  // Generate a random GUID http://stackoverflow.com/a/2117523.\n  const timePart = (new Date().getTime().toString(16)+\"FF\").substr(0,11);\n  const s = \"ssssssss-xxxx-4xxx-yxxx-x\".replace(/[xys]/g, (c) => {\n    const r = c === \"s\" ? Math.floor(Math.random() * 16) : (query_builder_seed++) & 0xf;\n    const v = c === \"x\" ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n  return s + timePart;\n};\n","import Immutable, { Map } from \"immutable\";\nimport omit from \"lodash/omit\";\nimport {default as uuid} from \"./uuid\";\n\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport {uuid};\n\nexport const widgetDefKeysToOmit = [\n  \"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\", \"spelImportFuncs\", \"spelImportValue\"\n];\n\nexport const opDefKeysToOmit = [\n  \"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"\n];\n\n// RegExp.quote = function (str) {\n//     return str.replace(/([.?*+^$[\\]\\\\(){}|-])/g, \"\\\\$1\");\n// };\n\nexport const defaultValue = (value, _default) => {\n  return (typeof value === \"undefined\") ? _default : value;\n};\n\n// const immutableEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else {\n//     return v1.equals(v2);\n//   }\n// };\n\nexport const deepEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else if (Map.isMap(v1)) {\n    return v1.equals(v2);\n  } else {\n    return JSON.stringify(v1) == JSON.stringify(v2);\n  }\n};\n\n// //Do sets have same values?\n// const eqSet = function (as, bs) {\n//   if (as.size !== bs.size) return false;\n//   for (var a of as) if (!bs.has(a)) return false;\n//   return true;\n// };\n\n\n// //Do arrays have same values?\n// const eqArrSet = function (arr1, arr2) {\n//   return eqSet(new Set(arr1), new Set(arr2));\n// };\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (Map.isMap(a))\n    return a.equals(b);\n  else if (typeof a == \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport const isImmutable = (v) => {\n  return typeof v === \"object\" && v !== null && typeof v.toJS === \"function\";\n};\n\nexport function toImmutableList(v) {\n  return (isImmutable(v) ? v : new Immutable.List(v));\n}\n\nexport function applyToJS(v) {\n  return (isImmutable(v) ? v.toJS() : v);\n}\n\nexport const escapeRegExp = (string) => {\n  return string.replace(/[.*+?^${}()|[\\]\\\\/]/g, \"\\\\$&\"); // $& means the whole matched string\n};\n\nexport const cleanJSX = (jsx) => {\n  const jsxKeys = [\"$$typeof\", \"_owner\", \"_store\", \"ref\", \"key\"];\n\n  const getName = (val) => {\n    if (typeof val === \"string\") {\n      return val;\n    } else if (typeof val === \"function\") {\n      return val.name;\n    }\n    return val;\n  };\n\n  if (jsx instanceof Array) {\n    return jsx.map((el, _i) => cleanJSX(el));\n  } else if (typeof jsx === \"object\" && jsx !== null) {\n    if (isDirtyJSX(jsx)) {\n      const cleaned = omit(jsx, jsxKeys);\n      if (cleaned.type) {\n        cleaned.type = getName(cleaned.type);\n      }\n      if (cleaned?.props?.children) {\n        cleaned.props.children = cleanJSX(cleaned.props.children);\n      }\n      return cleaned;\n    }\n  }\n  return jsx;\n};\n\nexport const isDirtyJSX = (jsx) => {\n  return typeof jsx === \"object\"\n    && jsx !== null\n    && !Array.isArray(jsx)\n    && Object.keys(jsx).includes(\"type\")\n    && Object.keys(jsx).includes(\"props\") // even if {}\n    && Object.keys(jsx).includes(\"key\") // even if null\n    && Object.keys(jsx).includes(\"ref\") // even if null\n    && Object.keys(jsx).includes(\"$$typeof\"); // Symbol(react.element)\n};\n\nexport const isJSX = (jsx) => (\n  typeof jsx === \"object\"\n  && jsx !== null\n  && !Array.isArray(jsx)\n  && typeof jsx[\"type\"] === \"string\"\n  && Object.keys(jsx).includes(\"props\")\n);\n\nexport const isJsonLogic = (logic) => {\n  let isJL = typeof logic === \"object\" // An object\n    && logic !== null // but not null\n    && !Array.isArray(logic) // and not an array\n    && Object.keys(logic).length === 1; // with exactly one key\n  if (isJL) {\n    // additional checks ?\n  }\n  return isJL;\n};\n\nexport function sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\n\n// [1, 4, 9] + [1, 5, 9] => [1, 4, 5, 9]\n// Used for merging arrays of operators for different widgets of 1 type\nexport function mergeArraysSmart(arr1, arr2) {\n  if (!arr1) arr1 = [];\n  if (!arr2) arr2 = [];\n  return arr2\n    .map(op => [op, arr1.indexOf(op)])\n    .map(([op, ind], i, orig) => {\n      if (ind == -1) {\n        const next = orig.slice(i+1);\n        const prev = orig.slice(0, i);\n        const after = prev.reverse().find(([_cop, ci]) => ci != -1);\n        const before = next.find(([_cop, ci]) => ci != -1);\n        if (before)\n          return [op, \"before\", before[0]];\n        else if (after)\n          return [op, \"after\", after[0]];\n        else\n          return [op, \"append\", null];\n      } else {\n      // already exists\n        return null;\n      }\n    })\n    .filter(x => x !== null)\n    .reduce((acc, [newOp, rel, relOp]) => {\n      const ind = acc.indexOf(relOp);\n      if (acc.indexOf(newOp) == -1) {\n        if (ind > -1) {\n        // insert after or before\n          acc.splice( ind + (rel == \"after\" ? 1 : 0), 0, newOp );\n        } else {\n        // insert to end or start\n          acc.splice( (rel == \"append\" ? Infinity : 0), 0, newOp );\n        }\n      }\n      return acc;\n    }, arr1.slice());\n}\n\nexport const deepFreeze = obj => {\n  if (typeof obj === \"object\" && obj !== null) {\n    Object.keys(obj).forEach(prop => {\n      deepFreeze(obj[prop]);\n    });\n    Object.freeze(obj);\n  }\n};\n\nexport const isJsonCompatible = (tpl, obj, bag = {}, path = []) => {\n  if (isObject(tpl)) {\n    if (tpl.var) {\n      bag[tpl.var] = obj;\n      return true;\n    }\n    if (!isObject(obj))\n      return false;\n    for (const k in tpl) {\n      const tv = tpl[k];\n      const ov = obj[k];\n      if (!isJsonCompatible(tv, ov, bag, [...path, k]))\n        return false;\n    }\n    return true;\n  } else if (Array.isArray(tpl)) {\n    if (!Array.isArray(obj))\n      return false;\n    for (let i = 0 ; i < tpl.length ; i++) {\n      const tv = tpl[i];\n      const ov = obj[i];\n      if (!isJsonCompatible(tv, ov, bag, [...path, i]))\n        return false;\n    }\n    return true;\n  } else {\n    return tpl === obj;\n  }\n};\n\nconst isDev = () => (typeof process !== \"undefined\" && process.env && process.env.NODE_ENV == \"development\");\n\nexport const getLogger = (devMode = false) => {\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\nexport const getFirstDefined = (arr = []) => {\n  let ret;\n  for (let i = 0 ; i < arr.length ; i++) {\n    const v = arr[i];\n    if (v !== undefined) {\n      ret = v;\n      break;\n    }\n  }\n  return ret;\n};\n\nexport const logger = getLogger();\n\n","\n\nexport const settings = {\n  formatField: (field, parts, label2, fieldDefinition, config, isForDisplay) => {\n    if (isForDisplay)\n      return label2;\n    else\n      return field;\n  },\n\n\n  fieldSources: [\"field\"],\n  keepInputOnChangeFieldSrc: true,\n  fieldItemKeysForSearch: [\"label\", \"path\", \"altLabel\", \"grouplabel\"],\n  listKeysForSearch: [\"title\", \"value\"],\n  valueSourcesInfo: {\n    value: {},\n  },\n  fieldSeparator: \".\",\n  fieldSeparatorDisplay: \".\",\n  canReorder: true,\n  canRegroup: true,\n  canDeleteLocked: false,\n  canLeaveEmptyGroup: true,\n  shouldCreateEmptyGroup: false,\n  canShortMongoQuery: true,\n  removeEmptyGroupsOnLoad: true,\n  removeIncompleteRulesOnLoad: true,\n  removeInvalidMultiSelectValuesOnLoad: true,\n  setOpOnChangeField: [\"keep\", \"default\"], // 'default' (default if present), 'keep' (keep prev from last field), 'first', 'none'\n  groupOperators: [\"some\", \"all\", \"none\"],\n\n  defaultGroupConjunction: \"AND\",\n\n  // localization\n  locale: {\n    moment: \"en\",\n  },\n  valueLabel: \"Value\",\n  valuePlaceholder: \"Value\",\n  fieldLabel: \"Field\",\n  operatorLabel: \"Operator\",\n  funcLabel: \"Function\",\n  fieldPlaceholder: \"Select field\",\n  funcPlaceholder: \"Select function\",\n  operatorPlaceholder: \"Select operator\",\n  lockLabel: \"Lock\",\n  lockedLabel: \"Locked\",\n  deleteLabel: \"Delete\",\n  addGroupLabel: \"Add group\",\n  addCaseLabel: \"Add condition\",\n  addDefaultCaseLabel: \"Add default condition\",\n  defaultCaseLabel: \"Default:\",\n  addRuleLabel: \"Add rule\",\n  addSubRuleLabel: \"Add sub rule\",\n  delGroupLabel: \"Delete\",\n  notLabel: \"Not\",\n  fieldSourcesPopupTitle: \"Select source\",\n  valueSourcesPopupTitle: \"Select value source\",\n  removeRuleConfirmOptions: null,\n  removeGroupConfirmOptions: null,\n\n};\n","\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const toListValue = (v, title) => {\n  if (v == null || v == \"\") {\n    return undefined;\n  } else if (isObject(v)) {\n    return {\n      ...v,\n      title: v.title || v.value, // fallback to value\n    };\n  } else {\n    return {\n      value: v,\n      title: (title !== undefined ? title : \"\"+v)\n    };\n  }\n};\n\nexport const makeCustomListValue = (v) => {\n  const lv = toListValue(v);\n  if (isObject(lv)) {\n    return {\n      ...toListValue(v),\n      isCustom: true,\n    };\n  } else { // only if undefined\n    return lv;\n  }\n};\n\n// convert {<value>: <title>, ..} or [value, ..] to normal [{value, title}, ..]\nexport const listValuesToArray = (listValuesObj) => {\n  if (Array.isArray(listValuesObj))\n    return listValuesObj.map(v => toListValue(v));\n  if (!isObject(listValuesObj))\n    return listValuesObj;\n  \n  let listValuesArr = [];\n  for (let v in listValuesObj) {\n    const title = listValuesObj[v];\n    listValuesArr.push(toListValue(v, title));\n  }\n  return listValuesArr;\n};\n\n// listValues can be {<value>: <title>, ..} or [{value, title}, ..] or [value, ..]\n// todo: same as getListValue() (but args are switched)\nexport const getItemInListValues = (listValues, value) => {\n  if (Array.isArray(listValues)) {\n    const values = listValues.map(v => toListValue(v));\n    return values.find(v => (\"\"+v.value === \"\"+value));\n  } else {\n    return listValues[value] !== undefined ? toListValue(value, listValues[value]) : undefined;\n  }\n};\n\nexport const getTitleInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.title : value;\n};\n\nexport const getValueInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.value : value;\n};\n\nexport const mapListValues = (listValues, mapFn) => {\n  let ret = [];\n  if (Array.isArray(listValues)) {\n    for (let v of listValues) {\n      const lv = mapFn(toListValue(v));\n      if (lv != null)\n        ret.push(lv);\n    }\n  } else {\n    for (let value in listValues) {\n      const lv = mapFn(toListValue(value, listValues[value]));\n      if (lv != null)\n        ret.push(lv);\n    }\n  }\n  return ret;\n};\n\nexport const searchListValue = (search, listValues) => \n  mapListValues(listValues, (lv) => (\n    `${lv.value}`.indexOf(search) != -1 || lv.title.indexOf(search) != -1\n      ? lv : null\n  ))\n    .filter(v => v !== null)\n    .shift();\n\nexport const getListValue = (selectedValue, listValues) => \n  mapListValues(listValues, \n    (lv) => (\"\"+lv.value === \"\"+selectedValue ? lv : null)\n  )\n    .filter(v => v !== null)\n    .shift();\n","import Immutable  from \"immutable\";\nimport {toImmutableList, isImmutable, applyToJS as immutableToJs} from \"./stuff\";\nimport {jsToImmutable} from \"../import/tree\";\n\nexport {toImmutableList, jsToImmutable, immutableToJs, isImmutable};\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreePath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.skip(1);\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreeSubpath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {Immutable.List} path\n * @return {Immutable.Map}\n */\nexport const getItemByPath = (tree, path) => {\n  let children = new Immutable.OrderedMap({ [tree.get(\"id\")] : tree });\n  let res = tree;\n  path.forEach((id) => {\n    res = children.get(id);\n    children = res.get(\"children1\");\n  });\n  return res;\n};\n\n\n/**\n * Remove `path` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\n// export const removePathsInTree = (tree) => {\n//   let newTree = tree;\n\n//   function _processNode (item, path) {\n//     const itemPath = path.push(item.get(\"id\"));\n//     if (item.get(\"path\")) {\n//       newTree = newTree.removeIn(expandTreePath(itemPath, \"path\"));\n//     }\n\n//     const children = item.get(\"children1\");\n//     if (children) {\n//       children.map((child, _childId) => {\n//         _processNode(child, itemPath);\n//       });\n//     }\n//   }\n\n//   _processNode(tree, new Immutable.List());\n\n//   return newTree;\n// };\n\n\n/**\n * Remove `isLocked` in items that inherit parent's `isLocked`\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const removeIsLockedInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, isParentLocked = false) {\n    const itemPath = path.push(item.get(\"id\"));\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    if (isParentLocked && isLocked) {\n      newTree = newTree.deleteIn(expandTreePath(itemPath, \"properties\", \"isLocked\"));\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, itemPath, isLocked || isParentLocked);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List());\n\n  return newTree;\n};\n\n\n/**\n * Set correct `path` and `id` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const fixPathsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return;\n    const currPath = item.get(\"path\");\n    const currId = item.get(\"id\");\n    const itemId = currId || nodeId;\n    const itemPath = path.push(itemId);\n    if (!currPath || !currPath.equals(itemPath)) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"path\"), itemPath);\n    }\n    if (!currId) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"id\"), itemId);\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      if (children.constructor.name == \"Map\") {\n        // protect: should be OrderedMap, not Map (issue #501)\n        newTree = newTree.setIn(\n          expandTreePath(itemPath, \"children1\"), \n          new Immutable.OrderedMap(children)\n        );\n      }\n      children.map((child, childId) => {\n        _processNode(child, itemPath, lev + 1, childId);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\nexport const fixEmptyGroupsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return false;\n    const itemId = item.get(\"id\") || nodeId;\n    const itemPath = path.push(itemId);\n\n    const children = item.get(\"children1\");\n    if (children) {\n      const allChildrenGone = children.map((child, childId) => {\n        return _processNode(child, itemPath, lev + 1, childId);\n      }).reduce((curr, v) => (curr && v), true);\n      if ((children.size == 0 || allChildrenGone) && lev > 0) {\n        newTree = newTree.deleteIn(expandTreePath(itemPath));\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @return {Object} {flat, items}\n */\nexport const getFlatTree = (tree) => {\n  let flat = [];\n  let items = {};\n  let realHeight = 0;\n\n  function _flatizeTree (item, path, insideCollapsed, insideLocked, insideRuleGroup, lev, info, parentType, caseId) {\n    const type = item.get(\"type\");\n    const collapsed = item.get(\"collapsed\");\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    const childrenIds = children ? children.map((_child, childId) => childId).toArray() : null;\n    const isRuleGroup = type == \"rule_group\";\n    // tip: count rule_group as 1 rule\n    const isLeaf = !insideRuleGroup && (!children || isRuleGroup);\n    const hasChildren = childrenIds?.length > 0;\n\n    const itemsBefore = flat.length;\n    const top = realHeight;\n    flat.push(id);\n    if (!insideCollapsed)\n      realHeight += 1;\n    info.height = (info.height || 0) + 1;\n\n    items[id] = {\n      type: type,\n      parent: path.length ? path[path.length-1] : null,\n      parentType: parentType,\n      caseId: type == \"case_group\" ? id : caseId,\n      isDefaultCase: type == \"case_group\" && !children,\n      path: path.concat(id),\n      lev: lev,\n      leaf: !children,\n      index: itemsBefore,\n      id: id,\n      children: childrenIds,\n      leafsCount: 0,\n      _top: itemsBefore,\n      //_height: (itemsAfter - itemsBefore),\n      top: (insideCollapsed ? null : top),\n      //height: height,\n      //bottom: (insideCollapsed ? null : top) + height,\n      collapsed: collapsed,\n      node: item,\n      isLocked: isLocked || insideLocked,\n    };\n\n    let depth;\n    if (children) {\n      let subinfo = {};\n      children.map((child, _childId) => {\n        _flatizeTree(\n          child, path.concat(id), \n          insideCollapsed || collapsed, insideLocked || isLocked, insideRuleGroup || isRuleGroup,\n          lev + 1, subinfo, type, type == \"case_group\" ? id : caseId\n        );\n      });\n      if (!collapsed) {\n        info.height = (info.height || 0) + (subinfo.height || 0);\n        if (hasChildren && !isRuleGroup) { // tip: don't count children of rule_group\n          depth = (subinfo.depth || 0) + 1;\n        }\n      }\n    }\n    \n    if (caseId && isLeaf) {\n      items[caseId].leafsCount++;\n    }\n\n    const itemsAfter = flat.length;\n    const _bottom = realHeight;\n    const height = info.height;\n        \n    Object.assign(items[id], {\n      _height: (itemsAfter - itemsBefore),\n      height: height,\n      bottom: (insideCollapsed ? null : top) + height,\n    });\n    if (depth != undefined) {\n      Object.assign(items[id], {\n        depth: depth,\n      });\n      info.depth = Math.max(info.depth || 0, depth);\n    }\n  }\n\n  _flatizeTree(tree, [], false, false, false, 0, {}, null, null);\n\n  for (let i = 0 ; i < flat.length ; i++) {\n    const prevId = i > 0 ? flat[i-1] : null;\n    const nextId = i < (flat.length-1) ? flat[i+1] : null;\n    let item = items[flat[i]];\n    item.prev = prevId;\n    item.next = nextId;\n  }\n\n  return {flat, items};\n};\n\n\n/**\n * Returns count of reorderable(!) nodes\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalReordableNodesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    const isRuleGroup = type == \"rule_group\";\n    cnt++;\n    //tip: rules in rule-group can be reordered only inside\n    if (children && !isRuleGroup) {\n      children.map((child, _childId) => {\n        _processNode(child, path.concat(id), lev + 1);\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt - 1; // -1 for root\n};\n\n/**\n * Returns count of rules (leafs, i.e. don't count groups)\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalRulesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    \n    if (type == \"rule\" || type == \"rule_group\") {\n      // tip: count rule_group as 1 rule\n      cnt++;\n    } else if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, path.concat(id), lev + 1);\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt;\n};\n\nexport const getTreeBadFields = (tree) => {\n  let badFields = [];\n\n  function _processNode (item, path, lev) {\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const valueError = item.getIn([\"properties\", \"valueError\"]);\n    const field = item.getIn([\"properties\", \"field\"]);\n    if (valueError && valueError.size > 0 && valueError.filter(v => v != null).size > 0) {\n      badFields.push(field);\n    }\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, path.concat(id), lev + 1);\n      });\n    }\n  }\n\n  if (tree)\n    _processNode(tree, [], 0);\n    \n  return Array.from(new Set(badFields));\n};\n\n\n// Remove fields that can be calced: \"id\", \"path\"\n// Remove empty fields: \"operatorOptions\"\nexport const getLightTree = (tree, children1AsArray = false) => {\n  let newTree = tree;\n\n  function _processNode (item, itemId) {\n    if (item.path)\n      delete item.path;\n    if (!children1AsArray && itemId)\n      delete item.id;\n    let properties = item.properties;\n    if (properties) {\n      if (properties.operatorOptions == null)\n        delete properties.operatorOptions;\n    }\n\n    const children = item.children1;\n    if (children) {\n      for (let id in children) {\n        _processNode(children[id], id);\n      }\n      if (children1AsArray) {\n        item.children1 = Object.values(children);\n      }\n    }\n  }\n\n  _processNode(tree, null);\n\n  return newTree;\n};\n\nexport const getSwitchValues = (tree) => {\n  let vals = [];\n  const children = tree.get(\"children1\");\n  if (children) {\n    children.map((child) => {\n      const value = child.getIn([\"properties\", \"value\"]);\n      let caseValue;\n      if (value && value.size == 1) {\n        caseValue = value.get(0);\n        if (Array.isArray(caseValue) && caseValue.length == 0) {\n          caseValue = null;\n        }\n      } else {\n        caseValue = null;\n      }\n      vals = [...vals, caseValue];\n    });\n  }\n\n  return vals;\n};\n\nexport const isEmptyTree = (tree) => (!tree.get(\"children1\") || tree.get(\"children1\").size == 0);\n\nexport const hasChildren = (tree, path) => tree.getIn(expandTreePath(path, \"children1\")).size > 0;\n","import Immutable, { fromJS, Map } from \"immutable\";\nimport {validateTree} from \"../utils/validation\";\nimport {extendConfig} from \"../utils/configUtils\";\nimport {getTreeBadFields, getLightTree} from \"../utils/treeUtils\";\nimport {isJsonLogic} from \"../utils/stuff\";\n\nexport const getTree = (immutableTree, light = true, children1AsArray = true) => {\n  if (!immutableTree) return undefined;\n  let tree = immutableTree;\n  tree = tree.toJS();\n  if (light)\n    tree = getLightTree(tree, children1AsArray);\n  return tree;\n};\n\nexport const loadTree = (serTree) => {\n  if (isImmutableTree(serTree)) {\n    return serTree;\n  } else if (isTree(serTree)) {\n    return jsToImmutable(serTree);\n  } else if (typeof serTree == \"string\" && serTree.startsWith('[\"~#iM\"')) {\n    //tip: old versions of RAQB were saving tree with `transit.toJSON()`\n    // https://github.com/ukrbublik/react-awesome-query-builder/issues/69\n    throw \"You are trying to load query in obsolete serialization format (Immutable string) which is not supported in versions starting from 2.1.17\";\n  } else if (typeof serTree == \"string\") {\n    return jsToImmutable(JSON.parse(serTree));\n  } else throw \"Can't load tree!\";\n};\n\nexport const checkTree = (tree, config) => {\n  if (!tree) return undefined;\n  const extendedConfig = extendConfig(config, undefined, true);\n  return validateTree(tree, null, extendedConfig, extendedConfig);\n};\n\nexport const isValidTree = (tree) => {\n  return getTreeBadFields(tree).length == 0;\n};\n\nexport const isImmutableTree = (tree) => {\n  return Map.isMap(tree);\n};\n\nexport const isTree = (tree) => {\n  return typeof tree == \"object\" && (tree.type == \"group\" || tree.type == \"switch_group\");\n};\n\nexport {isJsonLogic};\n\nexport function jsToImmutable(tree) {\n  const imm = fromJS(tree, function (key, value) {\n    let outValue;\n    if (key == \"properties\") {\n      outValue = value.toOrderedMap();\n\n      // `value` should be undefined instead of null\n      // JSON doesn't support undefined and replaces undefined -> null\n      // So fix: null -> undefined\n      for (let i = 0 ; i < 2 ; i++) {\n        if (outValue.get(\"value\")?.get(i) === null) {\n          outValue = outValue.setIn([\"value\", i], undefined);\n        }\n      }\n    } else if (key == \"value\" && Immutable.Iterable.isIndexed(value)) {\n      outValue = value.map(v => {\n        const vJs = v?.toJS?.();\n        if (vJs?.func) {\n          return v.toOrderedMap();\n        } else if(v?.toJS) {\n          // for values of multiselect use Array instead of List\n          return vJs;\n        } else {\n          return v;\n        }\n      }).toList();\n    } else if (key == \"asyncListValues\") {\n      // keep in JS format\n      outValue = value.toJS();\n    } else if (key == \"children1\" && Immutable.Iterable.isIndexed(value)) {\n      outValue = new Immutable.OrderedMap(value.map(child => [child.get(\"id\"), child]));\n    } else {\n      outValue = Immutable.Iterable.isIndexed(value) ? value.toList() : value.toOrderedMap();\n    }\n    return outValue;\n  });\n  return imm;\n}\n\n","import uuid from \"../utils/uuid\";\nimport {defaultValue, isJsonLogic, shallowEqual, logger} from \"../utils/stuff\";\nimport {getFieldConfig, extendConfig, normalizeField, getFuncConfig, iterateFuncs, getFieldParts} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {loadTree} from \"./tree\";\nimport {defaultConjunction, defaultGroupConjunction} from \"../utils/defaultUtils\";\n\nimport moment from \"moment\";\n\n// http://jsonlogic.com/\n\n// helpers\nconst arrayUniq = (arr) => Array.from(new Set(arr));\nconst arrayToObject = (arr) => arr.reduce((acc, [f, fc]) => ({ ...acc, [f]: fc }), {});\n\nconst createMeta = () => {\n  return {\n    errors: []\n  };\n};\n\nexport const loadFromJsonLogic = (logicTree, config) => {\n  return _loadFromJsonLogic(logicTree, config, false);\n};\n\nexport const _loadFromJsonLogic = (logicTree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = createMeta();\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  let jsTree = logicTree ? convertFromLogic(logicTree, conv, extendedConfig, \"rule\", meta) : undefined;\n  if (jsTree && jsTree.type != \"group\") {\n    jsTree = wrapInDefaultConj(jsTree, extendedConfig);\n  }\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from JsonLogic:\", meta.errors);\n    return immTree;\n  }\n};\n\n\nconst buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (typeof opConfig.jsonLogic == \"string\") {\n      // example: \"</2\", \"#in/1\"\n      const opk = (opConfig._jsonLogicIsRevArgs ? \"#\" : \"\") + opConfig.jsonLogic + \"/\" + defaultValue(opConfig.cardinality, 1);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else if(typeof opConfig.jsonLogic2 == \"string\") {\n      // example: all-in/1\"\n      const opk = opConfig.jsonLogic2 + \"/\" + defaultValue(opConfig.cardinality, 1);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.jsonLogicConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (const [funcPath, funcConfig] of iterateFuncs(config)) {\n    let fk;\n    if (funcConfig.jsonLogicIsMethod) {\n      fk = \"#\" + funcConfig.jsonLogic;\n    } else if (typeof funcConfig.jsonLogic == \"string\") {\n      fk = funcConfig.jsonLogic;\n    }\n    if (fk) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcPath);\n    }\n  }\n\n  const {groupVarKey, altVarKey} = config.settings.jsonLogic;\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    varKeys: [\"var\", groupVarKey, altVarKey],\n  };\n};\n\nconst convertFromLogic = (logic, conv, config, expectedType, meta, not = false, fieldConfig, widget, parentField = null, _isLockedLogic = false) => {\n  let op, vals;\n  if (isJsonLogic(logic)) {\n    op = Object.keys(logic)[0];\n    vals = logic[op];\n    if (!Array.isArray(vals))\n      vals = [ vals ];\n  }\n  \n  let ret;\n  const beforeErrorsCnt = meta.errors.length;\n\n  const {lockedOp} = config.settings.jsonLogic;\n  const isEmptyOp = op == \"!\" && (vals.length == 1 && vals[0] && isJsonLogic(vals[0]) && conv.varKeys.includes(Object.keys(vals[0])[0]));\n  const isRev = op == \"!\" && !isEmptyOp;\n  const isLocked = lockedOp && op == lockedOp;\n  if (isLocked) {\n    ret = convertFromLogic(vals[0], conv, config, expectedType, meta, not, fieldConfig, widget, parentField, true);\n  } else if (isRev) {\n    // reverse with not\n    ret = convertFromLogic(vals[0], conv, config, expectedType, meta, !not, fieldConfig, widget, parentField);\n  } else if(expectedType == \"val\") {\n    // not is not used here\n    ret = convertFieldRhs(op, vals, conv, config, not, meta, parentField) \n      || convertFuncRhs(op, vals, conv, config, not, fieldConfig, meta, parentField) \n      || convertValRhs(logic, fieldConfig, widget, config, meta);\n  } else if(expectedType == \"rule\") {\n    ret = convertConj(op, vals, conv, config, not, meta, parentField, false) \n    || convertOp(op, vals, conv, config, not, meta, parentField);\n  }\n\n  const afterErrorsCnt = meta.errors.length;\n  if (op != \"!\" && ret === undefined && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Can't parse logic ${JSON.stringify(logic)}`);\n  }\n\n  if (isLocked) {\n    ret.properties.isLocked = true;\n  }\n\n  return ret;\n};\n\n\nconst convertValRhs = (val, fieldConfig, widget, config, meta) => {\n  if (val === undefined)\n    val = fieldConfig?.defaultValue;\n  if (val === undefined) return undefined;\n  const widgetConfig = config.widgets[widget || fieldConfig?.mainWidget];\n  const fieldType = fieldConfig?.type;\n\n  if (!widgetConfig) {\n    meta.errors.push(`No widget for type ${fieldType}`);\n    return undefined;\n  }\n\n  if (isJsonLogic(val)) {\n    meta.errors.push(`Unexpected logic in value: ${JSON.stringify(val)}`);\n    return undefined;\n  }\n\n  // number of seconds -> time string\n  if (fieldType == \"time\" && typeof val == \"number\") {\n    const [h, m, s] = [Math.floor(val / 60 / 60) % 24, Math.floor(val / 60) % 60, val % 60];\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      const dateVal = new Date(val);\n      dateVal.setMilliseconds(0);\n      dateVal.setHours(h);\n      dateVal.setMinutes(m);\n      dateVal.setSeconds(s);\n      val = moment(dateVal).format(valueFormat);\n    } else {\n      val = `${h}:${m}:${s}`;\n    }\n  }\n\n  // \"2020-01-08T22:00:00.000Z\" -> Date object\n  if ([\"date\", \"datetime\"].includes(fieldType) && val && !(val instanceof Date)) {\n    try {\n      const dateVal = new Date(val);\n      if (dateVal instanceof Date && dateVal.toISOString() === val) {\n        val = dateVal;\n      }\n    } catch(e) {\n      meta.errors.push(`Can't convert value ${val} as Date`);\n      val = undefined;\n    }\n  }\n\n  // Date object -> formatted string\n  if (val instanceof Date && fieldConfig) {\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      val = moment(val).format(valueFormat);\n    }\n  }\n\n  let asyncListValues;\n  if (val && fieldConfig?.fieldSettings?.asyncFetch) {\n    const vals = Array.isArray(val) ? val : [val];\n    asyncListValues = vals;\n  }\n\n  return {\n    valueSrc: \"value\",\n    value: val,\n    valueType: widgetConfig.type,\n    asyncListValues\n  };\n};\n\nconst convertFieldRhs = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (conv.varKeys.includes(op) && typeof vals[0] == \"string\") {\n    const field = normalizeField(config, vals[0], parentField);\n    const fieldConfig = getFieldConfig(config, field);\n    if (!fieldConfig) {\n      meta.errors.push(`No config for field ${field}`);\n      return undefined;\n    }\n\n    return {\n      valueSrc: \"field\",\n      value: field,\n      valueType: fieldConfig.type,\n    };\n  }\n\n  return undefined;\n};\n\nconst convertLhs = (isGroup0, jlField, args, conv, config, not = null, fieldConfig = null, meta, parentField = null) => {\n  let k = Object.keys(jlField)[0];\n  let v = Object.values(jlField)[0];\n\n  const _parse = (k, v) => {\n    return convertFieldLhs(k, v, conv, config, not, meta, parentField)\n    || convertFuncLhs(k, v, conv, config, not, fieldConfig, meta, parentField);\n  };\n\n  const beforeErrorsCnt = meta.errors.length;\n  let field, fieldSrc, having, isGroup;\n  const parsed = _parse(k, v);\n  if (parsed) {\n    field = parsed.field;\n    fieldSrc = parsed.fieldSrc;\n  }\n  if (isGroup0) {\n    isGroup = true;\n    having = args[0];\n    args = [];\n  }\n  // reduce/filter for group ext\n  if (k == \"reduce\" && Array.isArray(v) && v.length == 3) {\n    let [filter, acc, init] = v;\n    if (isJsonLogic(filter) && init == 0\n      && isJsonLogic(acc)\n      && Array.isArray(acc[\"+\"]) && acc[\"+\"][0] == 1\n      && isJsonLogic(acc[\"+\"][1]) && acc[\"+\"][1][\"var\"] == \"accumulator\"\n    ) {\n      k = Object.keys(filter)[0];\n      v = Object.values(filter)[0];\n      if (k == \"filter\") {\n        let [group, filter] = v;\n        if (isJsonLogic(group)) {\n          k = Object.keys(group)[0];\n          v = Object.values(group)[0];\n          const parsedGroup = _parse(k, v);\n          if (parsedGroup) {\n            field = parsedGroup.field;\n            fieldSrc = parsedGroup.fieldSrc;\n            having = filter;\n            isGroup = true;\n          }\n        }\n      } else {\n        const parsedGroup = _parse(k, v);\n        if (parsedGroup) {\n          field = parsedGroup.field;\n          fieldSrc = parsedGroup.fieldSrc;\n          isGroup = true;\n        }\n      }\n    }\n  }\n  const afterErrorsCnt = meta.errors.length;\n\n  if (!field && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Unknown LHS ${JSON.stringify(jlField)}`);\n  }\n  if (!field) return;\n\n  return {\n    field, fieldSrc, having, isGroup, args\n  };\n};\n\nconst convertFieldLhs = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (!Array.isArray(vals))\n    vals = [ vals ];\n  const parsed = convertFieldRhs(op, vals, conv, config, not, meta, parentField);\n  if (parsed) {\n    return {\n      fieldSrc: \"field\",\n      field: parsed.value,\n    };\n  }\n  return undefined;\n};\n\nconst convertFuncLhs = (op, vals, conv, config, not, fieldConfig = null, meta, parentField = null) => {\n  const parsed = convertFuncRhs(op, vals, conv, config, not, fieldConfig, meta, parentField);\n  if (parsed) {\n    return {\n      fieldSrc: \"func\",\n      field: parsed.value,\n    };\n  }\n  return undefined;\n};\n\nconst convertFuncRhs = (op, vals, conv, config, not, fieldConfig = null, meta, parentField = null) => {\n  if (!op) return undefined;\n  let func, argsArr, funcKey;\n  const jsonLogicIsMethod = (op == \"method\");\n  if (jsonLogicIsMethod) {\n    let obj, opts;\n    [obj, func, ...opts] = vals;\n    argsArr = [obj, ...opts];\n  } else {\n    func = op;\n    argsArr = vals;\n  }\n\n  const fk = (jsonLogicIsMethod ? \"#\" : \"\") + func;\n  const returnType = fieldConfig?.type || fieldConfig?.returnType;\n  const funcKeys = (conv.funcs[fk] || []).filter(k => \n    (fieldConfig ? getFuncConfig(config, k).returnType == returnType : true)\n  );\n  if (funcKeys.length) {\n    funcKey = funcKeys[0];\n  } else {\n    const v = {[op]: vals};\n\n    for (const [f, fc] of iterateFuncs(config)) {\n      if (fc.jsonLogicImport && (returnType ? fc.returnType == returnType : true)) {\n        let parsed;\n        try {\n          parsed = fc.jsonLogicImport(v);\n        } catch(_e) {\n          // given expression `v` can't be parsed into function\n        }\n        if (parsed) {\n          funcKey = f;\n          argsArr = parsed;\n        }\n      }\n    }\n  }\n  if (!funcKey)\n    return undefined;\n\n  if (funcKey) {\n    const funcConfig = getFuncConfig(config, funcKey);\n    const argKeys = Object.keys(funcConfig.args || {});\n    let argsObj = argsArr.reduce((acc, val, ind) => {\n      const argKey = argKeys[ind];\n      const argConfig = funcConfig.args[argKey];\n      let argVal;\n      if (argConfig) {\n        argVal = convertFromLogic(val, conv, config, \"val\", meta, false, argConfig, null, parentField);\n      }\n      return argVal !== undefined ? {...acc, [argKey]: argVal} : acc;\n    }, {});\n\n    for (let argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      let argVal = argsObj[argKey];\n      if (argVal === undefined) {\n        argVal = argConfig?.defaultValue;\n        if (argVal !== undefined) {\n          argVal = {\n            value: argVal,\n            valueSrc: argVal?.func ? \"func\" : \"value\",\n            valueType: argConfig.type,\n          };\n        }\n        if (argVal === undefined) {\n          if (argConfig?.isOptional) {\n            //ignore\n          } else {\n            meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n            return undefined;\n          }\n        } else {\n          argsObj[argKey] = argVal;\n        }\n      }\n    }\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: argsObj\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  return undefined;\n};\n\n\nconst convertConj = (op, vals, conv, config, not, meta, parentField = null, isRuleGroup = false) => {\n  const conjKey = conv.conjunctions[op];\n  const {fieldSeparator} = config.settings;\n  // const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  // const isParentGroup = parentFieldConfig?.type == \"!group\";\n  if (conjKey) {\n    let type = \"group\";\n    const children = vals\n      .map(v => convertFromLogic(v, conv, config, \"rule\", meta, false, null, null, parentField))\n      .filter(r => r !== undefined)\n      .reduce((acc, r) => ({...acc, [r.id] : r}), {});\n    const complexFields = Object.values(children)\n      .map(v => v?.properties?.fieldSrc == \"field\" && v?.properties?.field)\n      .filter(f => f?.includes?.(fieldSeparator));\n    const complexFieldsGroupAncestors = Object.fromEntries(\n      arrayUniq(complexFields).map(f => {\n        const parts = f.split(fieldSeparator);\n        const ancs = Object.fromEntries(\n          parts.slice(0, -1)\n            .map((f, i, parts) => [...parts.slice(0, i), f])\n            .map(fp => [fp.join(fieldSeparator), getFieldConfig(config, fp)])\n            .filter(([_f, fc]) => fc?.type == \"!group\")\n        );\n        return [f, Object.keys(ancs)];\n      })\n    );\n    // const childrenInRuleGroup = Object.values(children)\n    //   .map(v => v?.properties?.fieldSrc == \"field\" && v?.properties?.field)\n    //   .map(f => complexFieldsGroupAncestors[f])\n    //   .filter(ancs => ancs && ancs.length);\n    // const usedRuleGroups = arrayUniq(Object.values(complexFieldsGroupAncestors).flat());\n    // const usedTopRuleGroups = topLevelFieldsFilter(usedRuleGroups);\n    \n    let properties = {\n      conjunction: conjKey,\n      not: not\n    };\n    const id = uuid();\n\n    let children1 = {};\n    let groupToId = {};\n    Object.entries(children).map(([k, v]) => {\n      if (v?.type == \"group\" || v?.type == \"rule_group\") {\n        // put as-is\n        children1[k] = v;\n      } else {\n        const field = v?.properties?.field;\n        const groupAncestors = complexFieldsGroupAncestors[field] || [];\n        const groupField = groupAncestors[groupAncestors.length - 1];\n        if (!groupField) {\n          // not in rule_group (can be simple field or in struct) - put as-is\n          if (v) {\n            children1[k] = v;\n          }\n        } else {\n          // wrap field in rule_group (with creating hierarchy if need)\n          let ch = children1;\n          let parentFieldParts = getFieldParts(parentField, config);\n          const groupPath = getFieldParts(groupField, config);\n          const isInParent = shallowEqual(parentFieldParts, groupPath.slice(0, parentFieldParts.length));\n          if (!isInParent)\n            parentFieldParts = []; // should not be\n          const traverseGroupFields = groupField\n            .split(fieldSeparator)\n            .slice(parentFieldParts.length)\n            .map((f, i, parts) => [...parentFieldParts, ...parts.slice(0, i), f].join(fieldSeparator))\n            .map((f) => ({f, fc: getFieldConfig(config, f) || {}}))\n            .filter(({fc}) => (fc.type != \"!struct\"));\n          traverseGroupFields.map(({f: gf, fc: gfc}, i) => {\n            let groupId = groupToId[gf];\n            if (!groupId) {\n              groupId = uuid();\n              groupToId[gf] = groupId;\n              ch[groupId] = {\n                type: \"rule_group\",\n                id: groupId,\n                children1: {},\n                properties: {\n                  conjunction: conjKey,\n                  not: false,\n                  field: gf,\n                  fieldSrc: \"field\",\n                  mode: gfc.mode,\n                }\n              };\n            }\n            ch = ch[groupId].children1;\n          });\n          ch[k] = v;\n        }\n      }\n    });\n\n    // tip: for isRuleGroup=true correct type and properties will be set out of this func\n\n    return {\n      type: type,\n      id: id,\n      children1: children1,\n      properties: properties\n    };\n  }\n\n  return undefined;\n};\n\n\n// const topLevelFieldsFilter = (fields) => {\n//   let arr = [...fields].sort((a, b) => (a.length - b.length));\n//   for (let i = 0 ; i < arr.length ; i++) {\n//     for (let j = i + 1 ; j < arr.length ; j++) {\n//       if (arr[j].indexOf(arr[i]) == 0) {\n//         // arr[j] is inside arr[i] (eg. \"a.b\" inside \"a\")\n//         arr.splice(j, 1);\n//         j--;\n//       }\n//     }\n//   }\n//   return arr;\n// };\n\nconst wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj) => {\n  if (!rule) return undefined;\n  return {\n    type: \"rule_group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n      not: false,\n      field: parentField,\n    }\n  };\n};\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not\n    }\n  };\n};\n\nconst parseRule = (op, arity, vals, parentField, conv, config, meta) => {\n  const submeta = createMeta();\n  let res = _parseRule(op, arity, vals, parentField, conv, config, false, submeta);\n  if (!res) {\n    // try reverse\n    res = _parseRule(op, arity, vals, parentField, conv, config, true, createMeta());\n  }\n  if (!res) {\n    meta.errors.push(submeta.errors.join(\"; \") || `Unknown op ${op}/${arity}`);\n    return undefined;\n  }\n  \n  return res;\n};\n\nconst _parseRule = (op, arity, vals, parentField, conv, config, isRevArgs, meta) => {\n  // config.settings.groupOperators are used for group count (cardinality = 0 is exception)\n  // but don't confuse with \"all-in\" or \"some-in\" for multiselect\n  const isAllOrSomeInForMultiselect = (op == \"all\" || op == \"some\") && isJsonLogic(vals[1]) && Object.keys(vals[1])[0] == \"in\";\n  const isGroup0 = !isAllOrSomeInForMultiselect && config.settings.groupOperators.includes(op);\n  const eqOps = [\"==\", \"!=\"];\n  let cardinality = isGroup0 ? 0 : arity - 1;\n  if (isGroup0)\n    cardinality = 0;\n  else if (eqOps.includes(op) && cardinality == 1 && vals[1] === null) {\n    arity = 1;\n    cardinality = 0;\n    vals = [vals[0]];\n  }\n\n  const opk = op + \"/\" + cardinality;\n  let opKeys = conv.operators[(isRevArgs ? \"#\" : \"\") + opk];\n  if (!opKeys)\n    return;\n  \n  let jlField, jlArgs = [];\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  if (rangeOps.includes(op) && arity == 3) {\n    jlField = vals[1];\n    jlArgs = [ vals[0], vals[2] ];\n  } else if (isRevArgs) {\n    jlField = vals[1];\n    jlArgs = [ vals[0] ];\n  } else {\n    [jlField, ...jlArgs] = vals;\n  }\n\n  if (!isJsonLogic(jlField)) {\n    meta.errors.push(`Incorrect operands for ${op}: ${JSON.stringify(vals)}`);\n    return;\n  }\n\n  const lhs = convertLhs(isGroup0, jlField, jlArgs, conv, config, null, null, meta, parentField);\n  if (!lhs) return;\n  const {\n    field, fieldSrc, having, isGroup, args\n  } = lhs;\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig) {\n    meta.errors.push(`No config for LHS ${field}`);\n    return;\n  }\n\n  let opKey = opKeys[0];\n  if (opKeys.length > 1 && fieldConfig && fieldConfig.operators) {\n    // eg. for \"equal\" and \"select_equals\"\n    opKeys = opKeys\n      .filter(k => fieldConfig.operators.includes(k));\n    if (opKeys.length == 0) {\n      meta.errors.push(`No corresponding ops for LHS ${field}`);\n      return;\n    }\n    opKey = opKeys[0];\n  }\n  \n  return {\n    field, fieldSrc, fieldConfig, opKey, args, having\n  };\n};\n\nconst convertOp = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (!op) return undefined;\n\n  const arity = vals.length;\n  if ((op == \"all\" || op == \"some\") && isJsonLogic(vals[1])) {\n    // special case for \"all-in\" and \"some-in\"\n    const op2 = Object.keys(vals[1])[0];\n    if (op2 == \"in\") {\n      vals = [\n        vals[0],\n        vals[1][op2][1]\n      ];\n      op = op + \"-\" + op2; // \"all-in\" and \"some-in\"\n    }\n  }\n\n  const parseRes = parseRule(op, arity, vals, parentField, conv, config, meta);\n  if (!parseRes) return undefined;\n  let {field, fieldSrc, fieldConfig, opKey, args, having} = parseRes;\n  let opConfig = config.operators[opKey];\n\n  // Group component in array mode can show NOT checkbox, so do nothing in this case\n  // Otherwise try to revert\n  const showNot = fieldConfig.showNot !== undefined ? fieldConfig.showNot : config.settings.showNot; \n  let canRev = true;\n  // if (fieldConfig.type == \"!group\" && fieldConfig.mode == \"array\" && showNot)\n  //   canRev = false;\n\n  let conj;\n  let havingVals;\n  let havingNot = false;\n  if (fieldConfig.type == \"!group\" && having) {\n    conj = Object.keys(having)[0];\n    havingVals = having[conj];\n    if (!Array.isArray(havingVals))\n      havingVals = [ havingVals ];\n\n    // Preprocess \"!\": Try to reverse op in single rule in having\n    // Eg. use `not_equal` instead of `not` `equal`\n    const isEmptyOp = conj == \"!\" && (havingVals.length == 1 && havingVals[0] && isJsonLogic(havingVals[0]) && conv.varKeys.includes(Object.keys(havingVals[0])[0]));\n    if (conj == \"!\" && !isEmptyOp) {\n      havingNot = true;\n      having = having[\"!\"];\n      conj = Object.keys(having)[0];\n      havingVals = having[conj];\n      if (!Array.isArray(havingVals))\n        havingVals = [ havingVals ];\n    }\n  }\n\n  // Use reversed op\n  if (not && canRev && opConfig.reversedOp) {\n    not = false;\n    opKey = opConfig.reversedOp;\n    opConfig = config.operators[opKey];\n  }\n\n  const widget = getWidgetForFieldOp(config, field, opKey, null);\n\n  const convertedArgs = args\n    .map(v => convertFromLogic(v, conv, config, \"val\", meta, false, fieldConfig, widget, parentField));\n  if (convertedArgs.filter(v => v === undefined).length) {\n    //meta.errors.push(`Undefined arg for field ${field} and op ${opKey}`);\n    return undefined;\n  }\n\n  let res;\n\n  let fieldType = fieldConfig.type;\n  if (fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n\n  if (fieldConfig.type == \"!group\" && having) {\n    if (conv.conjunctions[conj] !== undefined) {\n      // group\n      res = convertConj(conj, havingVals, conv, config, havingNot, meta, field, true);\n      havingNot = false;\n    } else {\n      // need to be wrapped in `rule_group`\n      const rule = convertOp(conj, havingVals, conv, config, havingNot, meta, field);\n      havingNot = false;\n      res = wrapInDefaultConjRuleGroup(rule, field, fieldConfig, config, conv.conjunctions[\"and\"]);\n    }\n    if (!res)\n      return undefined;\n    \n    res.type = \"rule_group\";\n    Object.assign(res.properties, {\n      field: field,\n      mode: fieldConfig.mode,\n      operator: opKey,\n    });\n    if (fieldConfig.mode == \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n    if (not) {\n      res = wrapInDefaultConj(res, config, not);\n    }\n  } else if (fieldConfig.type == \"!group\" && !having) {\n    res = {\n      type: \"rule_group\",\n      id: uuid(),\n      children1: {},\n      properties: {\n        conjunction: defaultGroupConjunction(config, fieldConfig),\n        not: not,\n        mode: fieldConfig.mode,\n        field: field,\n        operator: opKey,\n      }\n    };\n    if (fieldConfig.mode == \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n  } else {\n    const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n    const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n    res = {\n      type: \"rule\",\n      id: uuid(),\n      properties: {\n        field: field,\n        fieldSrc: fieldSrc,\n        operator: opKey,\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n        ...(asyncListValues ? {asyncListValues} : {}),\n      }\n    };\n    if (not) {\n      //meta.errors.push(`No rev op for ${opKey}`);\n      res = wrapInDefaultConj(res, config, not);\n    }\n  }\n\n  return res;\n};\n\n","import SqlStringOrig from \"sqlstring\";\n\nexport const SqlString = SqlStringOrig;\n\nSqlString.trim = (val) => {\n  if (val.charAt(0) == \"'\")\n    return val.substring(1, val.length-1);\n  else\n    return val;\n};\n\nSqlString.escapeLike = (val, any_start = true, any_end = true) => {\n  // normal escape\n  let res = SqlString.escape(val);\n  // unwrap ''\n  res = SqlString.trim(res);\n  // escape % and _\n  res = res.replace(/[%_]/g, \"\\\\$&\");\n  // wrap with % for LIKE\n  res = (any_start ? \"%\" : \"\") + res + (any_end ? \"%\" : \"\");\n  // wrap ''\n  res = \"'\" + res + \"'\";\n  return res;\n};\n\nexport const sqlEmptyValue = (fieldDef) => {\n  let v = \"''\";\n  const type = fieldDef?.type;\n  if (type == \"date\") {\n    //todo: support other SQL dialects?  0001-01-01 for oracle, 1970-01-01 for timestamp\n    v = \"'0000-00-00'\";\n  } else if (type == \"datetime\") {\n    v = \"'0000-00-00 00:00'\";\n  } else if (type == \"time\") {\n    v = \"'00:00'\";\n  } else if (type == \"number\") {\n    v = \"0\";\n  }\n  return v;\n};\n\nexport const mongoEmptyValue = (fieldDef) => {\n  let v = \"\";\n  const type = fieldDef?.type;\n  if (type == \"number\") {\n    v = 0;\n  }\n  return v;\n};\n\n\nconst spelEscapeString = (val) => {\n  // Strings are delimited by single quotes. To put a single quote itself in a string, use two single quote characters. \n  return \"'\" + val.replace(/'/g, \"''\") + \"'\";\n};\n\nconst spelInlineList = (vals, toArray = false) => {\n  // find java type of values\n  let javaType;\n  let jt;\n  const numberJavaTypes = [\"int\", \"float\"];\n  vals.map(v => {\n    if (v !== undefined && v !== null) {\n      if (typeof v === \"string\") {\n        jt = \"String\";\n      } else if (typeof v === \"number\") {\n        jt = Number.isInteger(v) ? \"int\" : \"float\";\n      } else throw new Error(`spelEscape: Can't use value ${v} in array`);\n\n      if (!javaType) {\n        javaType = jt;\n      } else if (javaType != jt) {\n        if (numberJavaTypes.includes(javaType) && numberJavaTypes.includes(jt)) {\n          // found int and float in collecton - use float\n          javaType = \"float\";\n        } else throw new Error(`spelEscape: Can't use different types in array: found ${javaType} and ${jt}`);\n      }\n    }\n  });\n  if (!javaType) {\n    javaType = \"String\"; //default if empty array\n  }\n\n  // for floats we should add 'f' to all items\n  let escapedVals;\n  if (javaType == \"float\") {\n    escapedVals = vals.map(v => spelEscape(v, true));\n  } else {\n    escapedVals = vals.map(v => spelEscape(v));\n  }\n\n  // build inline list or array\n  let res;\n  if (toArray) {\n    res = `new ${javaType}[]{${escapedVals.join(\", \")}}`;\n  } else {\n    res = `{${escapedVals.join(\", \")}}`;\n  }\n  \n  return res;\n};\n\nexport const spelFixList = (val) => {\n  // `{1,2}.contains(1)` NOT works\n  // `{1,2}.?[true].contains(1)` works\n  return `${val}.?[true]`;\n};\n\nexport const spelEscape = (val, numberToFloat = false, arrayToArray = false) => {\n  // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-ref-literal\n  if (val === undefined || val === null) {\n    return \"null\";\n  }\n  switch (typeof val) {\n  case \"boolean\":\n    return (val) ? \"true\" : \"false\";\n  case \"number\":\n    if (!Number.isFinite(val) || isNaN(val))\n      return undefined;\n    return val + (!Number.isInteger(val) || numberToFloat ? \"f\" : \"\");\n  case \"object\":\n    if (Array.isArray(val)) {\n      return spelInlineList(val, arrayToArray);\n    } else {\n      // see `spelFormatValue` for Date, LocalTime\n      throw new Error(\"spelEscape: Object is not supported\");\n    }\n  default: return spelEscapeString(val);\n  }\n};\n\nexport const spelFormatConcat = (parts) => {\n  if (parts && Array.isArray(parts) && parts.length) {\n    return parts\n      .map(part => {\n        if (part.type == \"const\") {\n          return spelEscape(part.value);\n        } else if (part.type == \"property\") {\n          return \"\"+part.value;\n        } else if (part.type == \"variable\") {\n          return \"#\"+part.value;\n        } return undefined;\n      })\n      .filter(r => r != undefined)\n      .join(\" + \");\n  } else {\n    return \"null\";\n  }\n};\n\n// `val` is {value, valueType, valueSrc}\n// If `valueType` == \"case_value\", `value` is array of such items (to be considered as concatenation)\nexport const spelImportConcat = (val) => {\n  if (val == undefined)\n    return [undefined, []];\n  let errors = [];\n  const parts = val.valueType == \"case_value\" ? val.value : [val];\n  const res = parts.map(child => {\n    if (child.valueSrc == \"value\") {\n      if (child.value === null) {\n        return undefined;\n      } else {\n        return {\n          type: \"const\", \n          value: child.value\n        };\n      }\n    } else if (child.valueSrc == \"field\") {\n      return {\n        type: (child.isVariable ? \"variable\" : \"property\"), \n        value: child.value\n      };\n    } else {\n      errors.push(`Unsupported valueSrc ${child.valueSrc} in concatenation`);\n    }\n  }).filter(v => v != undefined);\n  return [res, errors];\n};\n\nexport const stringifyForDisplay = (v) => (v == null ? \"NULL\" : v.toString());\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, extendConfig, getFieldParts\n} from \"../utils/configUtils\";\nimport {\n  getWidgetForFieldOp, formatFieldName, getFieldPartsConfigs, completeValue\n} from \"../utils/ruleUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {defaultValue, logger, widgetDefKeysToOmit, opDefKeysToOmit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport {spelEscape} from \"../utils/export\";\n\n// https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions\n\nexport const compareToSign = \"${0}.compareTo(${1})\";\nconst TypesWithCompareTo = {\n  datetime: true,\n  time: true,\n  date: true,\n};\n\nexport const spelFormat = (tree, config) => {\n  return _spelFormat(tree, config, false);\n};\n\nexport const _spelFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta, null);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SpEL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, parentField);\n  } else if (type == \"switch_group\") {\n    return formatSwitch(item, config, meta, parentField);\n  } else if (type == \"case_group\") {\n    return formatCase(item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\nconst formatCase = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  if (type != \"case_group\") {\n    meta.errors.push(`Unexpected child of type ${type} inside switch`);\n    return undefined;\n  }\n  const properties = item.get(\"properties\") || new Map();\n  \n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, null, parentField, \"!case_value\"\n  );\n\n  const cond = formatGroup(item, config, meta, parentField);\n  return [cond, formattedValue];\n};\n\nconst formatSwitch = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  if (!children) return undefined;\n  const cases = children\n    .map((currentChild) => formatCase(currentChild, config, meta, null))\n    .filter((currentChild) => typeof currentChild !== \"undefined\")\n    .toArray();\n  \n  if (!cases.length) return undefined;\n\n  if (cases.length == 1 && !cases[0][0]) {\n    // only 1 case without condition\n    return cases[0][1];\n  }\n\n  let filteredCases = [];\n  for (let i = 0 ; i < cases.length ; i++) {\n    if (i != (cases.length - 1) && !cases[i][0]) {\n      meta.errors.push(`No condition for case ${i}`);\n    } else {\n      filteredCases.push(cases[i]);\n      if (i == (cases.length - 1) && cases[i][0]) {\n        // no default - add null as default\n        filteredCases.push([undefined, null]);\n      }\n    }\n  }\n\n  let left = \"\", right = \"\";\n  for (let i = 0 ; i < filteredCases.length ; i++) {\n    let [cond, value] = filteredCases[i];\n    if (value == undefined)\n      value = \"null\";\n    if (cond == undefined)\n      cond = \"true\";\n    if (i != (filteredCases.length - 1)) {\n      left += `(${cond} ? ${value} : `;\n      right += \")\";\n    } else {\n      left += `${value}`;\n    }\n  }\n  return left + right;\n};\n\nconst formatGroup = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const not = properties.get(\"not\");\n\n  const isRuleGroup = type === \"rule_group\";\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const groupField = isRuleGroupArray ? field : parentField;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const isSpelArray = groupFieldDef.isSpelArray;\n  const {fieldSeparator} = config.settings;\n  \n  // check op for reverse\n  let groupOperator = properties.get(\"operator\");\n  if (!groupOperator && (!mode || mode == \"some\")) {\n    groupOperator = \"some\";\n  }\n  const realGroupOperator = checkOp(config, groupOperator, field);\n  const isGroupOpRev = realGroupOperator != groupOperator;\n  const realGroupOperatorDefinition = groupOperator && getOperatorConfig(config, realGroupOperator, field) || null;\n  const isGroup0 = isRuleGroup && (!realGroupOperator || realGroupOperatorDefinition.cardinality == 0);\n  \n  // build value for aggregation op\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realGroupOperator, parentField, null\n  );\n  \n  // build filter in aggregation\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n\n  if (isRuleGroupArray && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size)\n      return undefined;\n  }\n\n  const omitBrackets = isRuleGroup;\n  const filter = list.size ? conjunctionDefinition.spelFormatConj(list, conjunction, not, omitBrackets) : null;\n\n  // build result\n  let ret;\n  if (isRuleGroupArray) {\n    const formattedField = formatField(meta, config, field, parentField);\n    const sep = fieldSeparator || \".\";\n    const getSize = sep + (isSpelArray ? \"length\" : \"size()\");\n    const fullSize = `${formattedField}${getSize}`;\n    // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-collection-selection\n    const filteredSize = filter ? `${formattedField}.?[${filter}]${getSize}` : fullSize;\n    const groupValue = isGroup0 ? fullSize : formattedValue;\n    // format expression\n    ret = formatExpression(\n      meta, config, properties, filteredSize, groupValue, realGroupOperator, valueSrc, valueType, isGroupOpRev\n    );\n  } else {\n    ret = filter;\n  }\n  \n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, valueType) => {\n  const spelOp = operatorDefinition.spelOp;\n  if (!spelOp) return undefined;\n  const isSign = spelOp.includes(\"${0}\");\n  const isCompareTo = TypesWithCompareTo[valueType];\n  let sop = spelOp;\n  let fn;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  if (isCompareTo) {\n    // date1.compareTo(date2) >= 0\n    //   instead of\n    // date1 >= date2\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const compareRes = compareToSign.replace(/\\${(\\w+)}/g, (_, k) => (k == 0 ? field : (cardinality > 1 ? values[k-1] : values)));\n      return `${compareRes} ${sop} 0`;\n    };\n  } else if (isSign) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return spelOp.replace(/\\${(\\w+)}/g, (_, k) => (k == 0 ? field : (cardinality > 1 ? values[k-1] : values)));\n    };\n  } else if (cardinality == 0) {\n    // should not be\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sop} ${values}`;\n    };\n  }\n  return fn;\n};\n\nconst formatExpression = (meta, config, properties, formattedField, formattedValue, operator, valueSrc, valueType, isRev = false) => {\n  const field = properties.get(\"field\");\n  const opDef = getOperatorConfig(config, operator, field) || {};\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorOptions = properties.get(\"operatorOptions\");\n\n  //find fn to format expr\n  const fn = opDef.spelFormatOp || buildFnToFormatOp(operator, opDef, valueType);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n\n  //rev\n  if (isRev) {\n    ret = config.settings.spelFormatReverse(ret);\n  }\n\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrc}`);\n  }\n\n  return ret;\n};\n\nconst checkOp = (config, operator, field) => {\n  if (!operator) return undefined;\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n\n  let isRev = false;\n  const canFormatOp = opDef.spelOp || opDef.spelFormatOp;\n  const canFormatRevOp = revOpDef.spelOp || revOpDef.spelFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n  return operator;\n};\n\nconst formatRule = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  if (field == null || operator == null)\n    return undefined;\n\n  // check op for reverse\n  const realOp = checkOp(config, operator, field);\n  if (!realOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  const isRev = realOp != operator;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realOp, parentField, null\n  );\n  if (formattedValue === undefined)\n    return undefined;\n      \n  //format field\n  const formattedField = formatLhs(meta, config, field, fieldSrc, parentField);\n  if (formattedField === undefined)\n    return undefined;\n  \n  // format expression\n  let res = formatExpression(\n    meta, config, properties, formattedField, formattedValue, realOp, valueSrc, valueType, isRev\n  );\n  return res;\n};\n\nconst formatLhs = (meta, config, field, fieldSrc, parentField = null) => {\n  if (fieldSrc === \"func\")\n    return formatFunc(meta, config, field, parentField);\n  else\n    return formatField(meta, config, field, parentField);\n};\n\nconst formatItemValue = (config, properties, meta, operator, parentField, expectedValueType = null) => {\n  let field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  if (expectedValueType == \"!case_value\" || iValueType && iValueType.get(0) == \"case_value\") {\n    field = \"!case_value\";\n  }\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  \n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  \n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n      const fv = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDefinition, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (!( fvalue.size < cardinality || hasUndefinedValues )) {\n      formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n    }\n  }\n  \n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else {\n    if (typeof fieldWidgetDef.spelFormatValue === \"function\") {\n      const fn = fieldWidgetDef.spelFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = spelEscape(currentValue);\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field, parentField = null) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsConfigs = getFieldPartsConfigs(field, config, parentField);\n  const formatFieldFn = config.settings.formatSpelField;\n  const fieldName = formatFieldName(field, config, meta, parentField);\n  const fieldPartsMeta = fieldPartsConfigs.map(([key, cnf, parentCnf]) => {\n    let parent;\n    if (parentCnf) {\n      if (parentCnf.type == \"!struct\" || parentCnf.type == \"!group\" && parentCnf.mode == \"struct\")\n        parent = cnf.isSpelMap ? \"map\" : \"class\";\n      else if (parentCnf.type == \"!group\")\n        parent = cnf.isSpelItemMap ? \"[map]\" : \"[class]\";\n      else\n        parent = \"class\";\n    }\n    const isSpelVariable = cnf?.isSpelVariable;\n    return {\n      key,\n      parent,\n      isSpelVariable,\n      fieldSeparator\n    };\n  });\n  const formattedField = formatFieldFn.call(config.ctx, fieldName, parentField, fieldParts, fieldPartsMeta, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const doEscape = argConfig.spelEscapeForFormat ?? true;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = omit(getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc), [\"factory\"]);\n\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, null, null, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = omit( getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc), [\"factory\"] );\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, null, null, parentField, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = doEscape ? finalFormattedVal : (argValue ?? defaultValue);\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // uncomplete\n  }\n  \n  let ret;\n  if (typeof funcConfig.spelFormatFunc === \"function\") {\n    const fn = funcConfig.spelFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.spelFunc) {\n    // fill arg values\n    ret = funcConfig.spelFunc\n      .replace(/\\${(\\w+)}/g, (found, argKey) => {\n        return formattedArgs[argKey] ?? found;\n      });\n    // remove optional args (from end only)\n    const optionalArgs = Object.keys(funcConfig.args || {})\n      .reverse()\n      .filter(argKey => !!funcConfig.args[argKey].isOptional);\n    for (const argKey of optionalArgs) {\n      if (formattedArgs[argKey] != undefined)\n        break;\n      ret = ret.replace(new RegExp(\"(, )?\" + \"\\\\${\" + argKey + \"}\", \"g\"), \"\");\n    }\n    // missing required arg vals\n    ret = ret.replace(/\\${(\\w+)}/g, \"null\");\n  } else {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n  }\n  return ret;\n};\n","import { SpelExpressionEvaluator } from \"spel2js\";\nimport uuid from \"../utils/uuid\";\nimport {getFieldConfig, getFuncConfig, extendConfig, normalizeField, iterateFuncs} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {loadTree} from \"./tree\";\nimport {defaultConjunction, defaultGroupConjunction} from \"../utils/defaultUtils\";\nimport {logger, isJsonCompatible} from \"../utils/stuff\";\nimport moment from \"moment\";\nimport {compareToSign} from \"../export/spel\";\n\n// https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions\n\n// spel type => raqb type\nconst SpelPrimitiveTypes = {\n  number: \"number\",\n  string: \"text\",\n  boolean: \"boolean\",\n  null: \"null\" // should not be\n};\n// spel class => raqb type\nconst SpelPrimitiveClasses = {\n  String: \"text\",\n};\nconst ListValueType = \"multiselect\";\nconst isFuncableProperty = (p) => [\"length\"].includes(p);\n\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const loadFromSpel = (logicTree, config) => {\n  return _loadFromSpel(logicTree, config, true);\n};\n\nexport const _loadFromSpel = (spelStr, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  \n  let compiledExpression;\n  let convertedObj;\n  let jsTree = undefined;\n  try {\n    const compileRes = SpelExpressionEvaluator.compile(spelStr);\n    compiledExpression = compileRes._compiledExpression;\n  } catch (e) {\n    meta.errors.push(e);\n  }\n  \n  if (compiledExpression) {\n    //logger.debug(\"compiledExpression:\", compiledExpression);\n    convertedObj = postprocessCompiled(compiledExpression, meta);\n    logger.debug(\"convertedObj:\", convertedObj, meta);\n\n    jsTree = convertToTree(convertedObj, conv, extendedConfig, meta);\n    if (jsTree && jsTree.type != \"group\" && jsTree.type != \"switch_group\") {\n      jsTree = wrapInDefaultConj(jsTree, extendedConfig, convertedObj[\"not\"]);\n    }\n    logger.debug(\"jsTree:\", jsTree);\n  }\n\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from SpEL:\", meta.errors);\n    return immTree;\n  }\n};\n\nconst postprocessCompiled = (expr, meta, parentExpr = null) => {\n  const type = expr.getType();\n  let children = expr.getChildren().map(child => postprocessCompiled(child, meta, expr));\n\n  // flatize OR/AND\n  if (type == \"op-or\" || type == \"op-and\") {\n    children = children.reduce((acc, child) => {\n      const canFlatize = child.type == type && !child.not;\n      const flat = canFlatize ? child.children : [child];\n      return [...acc, ...flat];\n    }, []);\n  }\n\n  // unwrap NOT\n  if (type == \"op-not\") {\n    if (children.length != 1) {\n      meta.errors.push(`Operator NOT should have 1 child, but got ${children.length}}`);\n    }\n    return {\n      ...children[0],\n      not: !(children[0].not || false)\n    };\n  }\n\n  if (type == \"compound\") {\n    // remove `.?[true]`\n    children = children.filter(child => {\n      const isListFix = child.type == \"selection\" && child.children.length == 1 && child.children[0].type == \"boolean\" && child.children[0].val == true;\n      return !isListFix;\n    });\n    // aggregation\n    // eg. `results.?[product == 'abc'].length`\n    const selection = children.find(child => \n      child.type == \"selection\"\n    );\n    if (selection && selection.children.length != 1) {\n      meta.errors.push(`Selection should have 1 child, but got ${selection.children.length}`);\n    }\n    const filter = selection ? selection.children[0] : null;\n    let lastChild = children[children.length - 1];\n    const isSize = lastChild.type == \"method\" && lastChild.val.methodName == \"size\" \n      || lastChild.type == \"!func\" && lastChild.methodName == \"size\";\n    const isLength = lastChild.type == \"property\" && lastChild.val == \"length\";\n    const sourceParts = children.filter(child => \n      child !== selection && child !== lastChild\n    );\n    const source = {\n      type: \"compound\",\n      children: sourceParts\n    };\n    const isAggr = (isSize || isLength) && convertPath(sourceParts) != null;\n    if (isAggr) {\n      return {\n        type: \"!aggr\",\n        filter,\n        source\n      };\n    }\n    // remove `#this`, `#root`\n    children = children.filter(child => {\n      const isThis = child.type == \"variable\" && child.val == \"this\";\n      const isRoot = child.type == \"variable\" && child.val == \"root\";\n      return !(isThis || isRoot);\n    });\n    // indexer\n    children = children.map(child => {\n      if (child.type == \"indexer\" && child.children.length == 1) {\n        return {\n          type: \"indexer\", \n          val: child.children[0].val,\n          itype: child.children[0].type\n        };\n      } else {\n        return child;\n      }\n    });\n    // method\n    // if (lastChild.type == \"method\") {\n    //   // seems like obsolete code!\n    //   debugger\n    //   const obj = children.filter(child => \n    //     child !== lastChild\n    //   );\n    //   return {\n    //     type: \"!func\",\n    //     obj,\n    //     methodName: lastChild.val.methodName,\n    //     args: lastChild.val.args\n    //   };\n    // }\n    // !func\n    if (lastChild.type == \"!func\") {\n      const ret = {};\n      let curr = ret;\n      do {\n        Object.assign(curr, lastChild);\n        children = children.filter(child => child !== lastChild);\n        lastChild = children[children.length - 1];\n        if (lastChild?.type == \"!func\") {\n          curr.obj = {};\n          curr = curr.obj;\n        } else {\n          if (children.length > 1) {\n            curr.obj = {\n              type: \"compound\",\n              children\n            };\n          } else {\n            curr.obj = lastChild;\n          }\n        }\n      } while(lastChild?.type == \"!func\");\n      return ret;\n    }\n  }\n\n  // getRaw || getValue\n  let val;\n  try {\n    if (expr.getRaw) { // use my fork\n      val = expr.getRaw();\n    } else if (expr.getValue.length == 0) { // getValue not requires context arg -> can use\n      val = expr.getValue();\n    }\n  } catch(e) {\n    logger.error(\"[spel2js] Error in getValue()\", e);\n  }\n\n  // ternary\n  if (type == \"ternary\") {\n    val = flatizeTernary(children);\n  }\n\n  // convert method/function args\n  if (typeof val === \"object\" && val !== null) {\n    if (val.methodName || val.functionName) {\n      val.args = val.args.map(child => postprocessCompiled(child, meta, expr));\n    }\n  }\n  // convert list\n  if (type == \"list\") {\n    val = val.map(item => postprocessCompiled(item, meta, expr));\n\n    // fix whole expression wrapped in `{}`\n    if (!parentExpr && val.length == 1) {\n      return val[0];\n    }\n  }\n  // convert constructor\n  if (type == \"constructorref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in constructorref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!new\",\n      cls,\n      args\n    };\n  }\n  // convert type\n  if (type == \"typeref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in typeref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const _args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!type\",\n      cls\n    };\n  }\n  // convert function/method\n  if (type == \"function\" || type == \"method\") {\n    // `foo()` is method, `#foo()` is function\n    // let's use common property `methodName` and just add `isVar` for function\n    const {functionName, methodName, args} = val;\n    return {\n      type: \"!func\",\n      methodName: functionName || methodName,\n      isVar: type == \"function\",\n      args\n    };\n  }\n\n  return {\n    type,\n    children,\n    val,\n  };\n};\n\nconst flatizeTernary = (children) => {\n  let flat = [];\n  function _processTernaryChildren(tern) {\n    let [cond, if_val, else_val] = tern;\n    flat.push([cond, if_val]);\n    if (else_val?.type == \"ternary\") {\n      _processTernaryChildren(else_val.children);\n    } else {\n      flat.push([undefined, else_val]);\n    }\n  }\n  _processTernaryChildren(children);\n  return flat;\n};\n\nconst buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (opConfig.spelOps) {\n      // examples: \"==\", \"eq\", \".contains\", \"matches\" (can be used for starts_with, ends_with)\n      opConfig.spelOps.forEach(spelOp => {\n        const opk = spelOp; // + \"/\" + defaultValue(opConfig.cardinality, 1);\n        if (!operators[opk])\n          operators[opk] = [];\n        operators[opk].push(opKey);\n      });\n    } else if (opConfig.spelOp) {\n      const opk = opConfig.spelOp; // + \"/\" + defaultValue(opConfig.cardinality, 1);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else {\n      logger.log(`[spel] No spelOp for operator ${opKey}`);\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.spelConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (const [funcPath, funcConfig] of iterateFuncs(config)) {\n    let fks = [];\n    const {spelFunc} = funcConfig;\n    if (typeof spelFunc === \"string\") {\n      const optionalArgs = Object.keys(funcConfig.args || {})\n        .reverse()\n        .filter(argKey => !!funcConfig.args[argKey].isOptional || funcConfig.args[argKey].defaultValue != undefined);\n      const funcSignMain = spelFunc\n        .replace(/\\${(\\w+)}/g, (_, _k) => \"?\");\n      const funcSignsOptional = optionalArgs\n        .reduce((acc, argKey) => (\n          [\n            ...acc,\n            [\n              argKey,\n              ...(acc[acc.length-1] || []),\n            ]\n          ]\n        ), [])\n        .map(optionalArgKeys => (\n          spelFunc\n            .replace(/(?:, )?\\${(\\w+)}/g, (found, a) => (\n              optionalArgKeys.includes(a) ? \"\" : found\n            ))\n            .replace(/\\${(\\w+)}/g, (_, _k) => \"?\")\n        ));\n      fks = [\n        funcSignMain,\n        ...funcSignsOptional,\n      ];\n    }\n    for (const fk of fks) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcPath);\n    }\n  }\n\n  let valueFuncs = {};\n  for (let w in config.widgets) {\n    const widgetDef = config.widgets[w];\n    const {spelImportFuncs, type} = widgetDef;\n    if (spelImportFuncs) {\n      for (const fk of spelImportFuncs) {\n        if (typeof fk === \"string\") {\n          const fs = fk.replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n          const argsOrder = [...fk.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n          if (!valueFuncs[fs])\n            valueFuncs[fs] = [];\n          valueFuncs[fs].push({\n            w,\n            argsOrder\n          });\n        }\n      }\n    }\n  }\n\n  let opFuncs = {};\n  for (let op in config.operators) {\n    const opDef = config.operators[op];\n    const {spelOp} = opDef;\n    if (spelOp?.includes(\"${0}\")) {\n      const fs = spelOp.replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n      const argsOrder = [...spelOp.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n      if (!opFuncs[fs])\n        opFuncs[fs] = [];\n      opFuncs[fs].push({\n        op,\n        argsOrder\n      });\n    }\n  }\n  // Special .compareTo()\n  const compareToSS = compareToSign.replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n  opFuncs[compareToSS] = [{\n    op: \"!compare\",\n    argsOrder: [\"0\", \"1\"]\n  }];\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    valueFuncs,\n    opFuncs,\n  };\n};\n\nconst convertToTree = (spel, conv, config, meta, parentSpel = null) => {\n  if (!spel) return undefined;\n\n  let res, canParseAsArg = true;\n  if (spel.type.indexOf(\"op-\") === 0 || spel.type === \"matches\") {\n    res = convertOp(spel, conv, config, meta, parentSpel);\n  } else if (spel.type == \"!aggr\") {\n    const groupFieldValue = convertToTree(spel.source, conv, config, meta, {\n      ...spel, \n      _groupField: parentSpel?._groupField\n    });\n    let groupFilter = convertToTree(spel.filter, conv, config, meta, {\n      ...spel, \n      _groupField: groupFieldValue?.value\n    });\n    if (groupFilter?.type == \"rule\") {\n      groupFilter = wrapInDefaultConj(groupFilter, config, spel.filter.not);\n    }\n    res = {\n      groupFilter,\n      groupFieldValue\n    };\n    if (!parentSpel) {\n      // !aggr can't be in root, it should be compared with something\n      res = undefined;\n      meta.errors.push(\"Unexpected !aggr in root\");\n      canParseAsArg = false;\n    }\n  } else if (spel.type == \"ternary\") {\n    const children1 = {};\n    spel.val.forEach(v => {\n      const [cond, val] = v;\n      const caseI = buildCase(cond, val, conv, config, meta, spel);\n      if (caseI) {\n        children1[caseI.id] = caseI;\n      }\n    });\n    res = {\n      type: \"switch_group\",\n      id: uuid(),\n      children1,\n      properties: {}\n    };\n  }\n\n  if (!res && canParseAsArg) {\n    res = convertArg(spel, conv, config, meta, parentSpel);\n  }\n\n  if (res && !res.type && !parentSpel) {\n    // res is not a rule, it's value at root\n    // try to parse whole `\"1\"` as ternary\n    const sw = buildSimpleSwitch(spel, conv, config, meta);\n    if (sw) {\n      res = sw;\n    } else {\n      res = undefined;\n      meta.errors.push(`Can't convert rule of type ${spel.type}, it looks like var/literal`);\n    }\n  }\n  \n  return res;\n};\n\nconst convertOp = (spel, conv, config, meta, parentSpel = null) => {\n  let res;\n\n  let op = spel.type.startsWith(\"op-\") ? spel.type.slice(\"op-\".length) : spel.type;\n\n  // unary\n  const isUnary = (op == \"minus\" || op == \"plus\") && spel.children.length == 1;\n  if (isUnary) {\n    spel.isUnary = true;\n    return convertOp(spel.children[0], conv, config, meta, spel);\n  }\n\n  // between\n  let isBetweenNormal = (op == \"and\" && spel.children.length == 2 && spel.children[0].type == \"op-ge\" && spel.children[1].type == \"op-le\");\n  let isBetweenRev = (op == \"or\" && spel.children.length == 2 && spel.children[0].type == \"op-lt\" && spel.children[1].type == \"op-gt\");\n  let isBetween = isBetweenNormal || isBetweenRev;\n  if (isBetween) {\n    const [left, from] = spel.children[0].children;\n    const [right, to] = spel.children[1].children;\n    const isSameSource = compareArgs(left, right,  spel, conv, config, meta, parentSpel);\n    if (isSameSource) {\n      const _fromValue = from.val;\n      const _toValue = to.val;\n      const oneSpel = {\n        type: \"op-between\",\n        children: [\n          left,\n          from,\n          to\n        ]\n      };\n      return convertOp(oneSpel, conv, config, meta, parentSpel);\n    }\n  }\n\n  // find op\n  let opKeys = conv.operators[op];\n  if (op == \"eq\" && spel.children[1].type == \"null\") {\n    opKeys = [\"is_null\"];\n  } else if (op == \"ne\" && spel.children[1].type == \"null\") {\n    opKeys = [\"is_not_null\"];\n  } else if (op == \"le\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n    opKeys = [\"is_empty\"];\n  } else if (op == \"gt\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n    opKeys = [\"is_not_empty\"];\n  } else if (op == \"between\") {\n    opKeys = [\"between\"];\n  }\n\n  // convert children\n  const convertChildren = () => {\n    let newChildren = spel.children.map(child =>\n      convertToTree(child, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      })\n    );\n    if (newChildren.length >= 2 && newChildren?.[0]?.type == \"!compare\") {\n      newChildren = newChildren[0].children;\n    }\n    return newChildren;\n  };\n\n  if (op == \"and\" || op == \"or\") {\n    const children1 = {};\n    const vals = convertChildren();\n    vals.forEach(v => {\n      if (v) {\n        const id = uuid();\n        v.id = id;\n        if (v.type != undefined) {\n          children1[id] = v;\n        } else {\n          meta.errors.push(`Bad item in AND/OR: ${JSON.stringify(v)}`);\n        }\n      }\n    });\n    res = {\n      type: \"group\",\n      id: uuid(),\n      children1,\n      properties: {\n        conjunction: conv.conjunctions[op],\n        not: spel.not\n      }\n    };\n  } else if (opKeys) {\n    const vals = convertChildren();\n    const fieldObj = vals[0];\n    let convertedArgs = vals.slice(1);\n    const groupField = fieldObj?.groupFieldValue?.value;\n    const opArg = convertedArgs?.[0];\n    \n    let opKey = opKeys[0];\n    if (opKeys.length > 1) {\n      const valueType = vals[0]?.valueType || vals[1]?.valueType;\n      //todo: it's naive, use valueType\n      const field = fieldObj?.value;\n      const widgets = opKeys.map(op => ({op, widget: getWidgetForFieldOp(config, field, op)}));\n      logger.warn(`[spel] Spel operator ${op} can be mapped to ${opKeys}.`,\n        \"widgets:\", widgets, \"vals:\", vals, \"valueType=\", valueType);\n      \n      if (op == \"eq\" || op == \"ne\") {\n        const ws = widgets.find(({ op, widget }) => (widget && widget != \"field\"));\n        if (ws) {\n          opKey = ws.op;\n        }\n      }\n    }\n\n    // some/all/none\n    if (fieldObj?.groupFieldValue) {\n      if (opArg && opArg.groupFieldValue && opArg.groupFieldValue.valueSrc == \"field\" && opArg.groupFieldValue.value == groupField) {\n        // group.?[...].size() == group.size()\n        opKey = \"all\";\n        convertedArgs = [];\n      } else if (opKey == \"equal\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n        opKey = \"none\";\n        convertedArgs = [];\n      } else if (opKey == \"greater\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n        opKey = \"some\";\n        convertedArgs = [];\n      }\n    }\n\n    let canRev = true;\n    let needWrapReverse = false;\n    if (spel.not && canRev) {\n      const opConfig = config.operators[opKey];\n      if (opConfig.reversedOp) {\n        opKey = opConfig.reversedOp;\n        spel.not = false;\n      } else {\n        needWrapReverse = true;\n      }\n    }\n    \n    if (!fieldObj) {\n      // LHS can't be parsed\n    } else if (fieldObj.groupFieldValue) {\n      // 1. group\n      if (fieldObj.groupFieldValue.valueSrc != \"field\") {\n        meta.errors.push(`Expected group field ${JSON.stringify(fieldObj)}`);\n      }\n\n      res = buildRuleGroup(fieldObj, opKey, convertedArgs, config, meta);\n    } else {\n      // 2. not group\n      if (fieldObj.valueSrc != \"field\" && fieldObj.valueSrc != \"func\") {\n        meta.errors.push(`Expected field/func at LHS, but got ${JSON.stringify(fieldObj)}`);\n      }\n      const field = fieldObj.value;\n      res = buildRule(config, meta, field, opKey, convertedArgs);\n    }\n\n    if (needWrapReverse) {\n      if (res.type !== \"group\") {\n        res = wrapInDefaultConj(res, config, spel.not);\n      } else {\n        res.properties.not = !res.properties.not;\n      }\n    }\n  } else {\n    if (!parentSpel) {\n      // try to parse whole `\"str\" + prop + #var` as ternary\n      res = buildSimpleSwitch(spel, conv, config, meta);\n    }\n    // if (!res) {\n    //   meta.errors.push(`Can't convert op ${op}`);\n    // }\n  }\n  return res;\n};\n\nconst convertPath = (parts, meta = {}, expectingField = false) => {\n  let isError = false;\n  const res = parts.map(c => {\n    if (c.type == \"variable\" || c.type == \"property\" || c.type == \"indexer\" && c.itype == \"string\") {\n      return c.val;\n    } else {\n      isError = true;\n      expectingField && meta?.errors?.push?.(`Unexpected item in field path compound: ${JSON.stringify(c)}`);\n    }\n  });\n  return !isError ? res : undefined;\n};\n\nconst convertArg = (spel, conv, config, meta, parentSpel) => {\n  if (spel == undefined)\n    return undefined;\n  const {fieldSeparator} = config.settings;\n\n  if (spel.type == \"variable\" || spel.type == \"property\") {\n    // normal field\n    const field = normalizeField(config, spel.val, parentSpel?._groupField);\n    const fieldConfig = getFieldConfig(config, field);\n    const isVariable = spel.type == \"variable\";\n    return {\n      valueSrc: \"field\",\n      valueType: fieldConfig?.type,\n      isVariable,\n      value: field,\n    };\n  } else if (spel.type == \"compound\") {\n    // complex field\n    const parts = convertPath(spel.children, meta);\n    if (parts) {\n      const field = normalizeField(config, parts.join(fieldSeparator), parentSpel?._groupField);\n      const fieldConfig = getFieldConfig(config, field);\n      const isVariable = spel.children?.[0]?.type == \"variable\";\n      return {\n        valueSrc: \"field\",\n        valueType: fieldConfig?.type,\n        isVariable,\n        value: field,\n      };\n    } else {\n      // it's not complex field\n    }\n  } else if (SpelPrimitiveTypes[spel.type]) {\n    let value = spel.val;\n    const valueType = SpelPrimitiveTypes[spel.type];\n    if (parentSpel?.isUnary) {\n      value = -value;\n    }\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type == \"!new\" && SpelPrimitiveClasses[spel.cls.at(-1)]) {\n    const args = spel.args.map(v => convertArg(v, conv, config, meta, spel));\n    const value = args?.[0];\n    const valueType = SpelPrimitiveClasses[spel.cls.at(-1)];\n    return {\n      ...value,\n      valueType,\n    };\n  } else if (spel.type == \"list\") {\n    const values = spel.val.map(v => convertArg(v, conv, config, meta, spel));\n    const _itemType = values.length ? values[0]?.valueType : null;\n    const value = values.map(v => v?.value);\n    const valueType = ListValueType;\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type == \"op-plus\" && parentSpel?.type == \"ternary\") {\n    return buildCaseValueConcat(spel, conv, config, meta);\n  }\n\n  let maybe = convertFunc(spel, conv, config, meta, parentSpel);\n  if (maybe !== undefined) {\n    return maybe;\n  }\n\n  meta.errors.push(`Can't convert arg of type ${spel.type}`);\n  return undefined;\n};\n\nconst buildFuncSignatures = (spel) => {\n  // branches\n  const brns = [\n    {s: \"\", params: [], objs: []}\n  ];\n  _buildFuncSignatures(spel, brns);\n  return brns.map(({s, params}) => ({s, params})).reverse().filter(({s}) => s !== \"\" && s !== \"?\");\n};\n\n// a.toLower().toUpper()\n// ->\n// ?.toLower().toUpper()\n// ?.toUpper()\nconst _buildFuncSignatures = (spel, brns) => {\n  let params = [], s = \"\";\n  const { type, methodName, val, obj, args, isVar, cls, children } = spel;\n  const lastChild = children?.[children.length-1];\n  let currBrn = brns[brns.length-1];\n  if (type === \"!func\") {\n    // T(DateTimeFormat).forPattern(?).parseDateTime(?)  --  ok\n    // T(LocalDateTime).parse(?, T(DateTimeFormatter).ofPattern(?))  --  will not work\n    let o = obj;\n    while (o) {\n      const [s1, params1] = _buildFuncSignatures({...o, obj: null}, [{}]);\n      if (s1 !== \"?\") {\n        // start new branch\n        const newBrn = {\n          s: currBrn.s,\n          params: [...currBrn.params],\n          objs: [...currBrn.objs]\n        };\n        // finish old branch\n        currBrn.objs.unshift(\"?\");\n        currBrn.params.unshift(o);\n        // switch\n        brns.push(newBrn);\n        currBrn = brns[brns.length-1];\n      }\n      // step\n      currBrn.objs.unshift(s1);\n      currBrn.params.unshift(...params1);\n      o = o.type === \"!func\" ? o.obj : null;\n    }\n    for (const brn of brns) {\n      params = [\n        ...(brn?.params || []),\n        ...(args || []),\n      ];\n      s = \"\";\n      if (brn?.objs?.length)\n        s += brn.objs.join(\".\") + \".\";\n      s += (isVar ? \"#\" : \"\") + methodName;\n      s += \"(\" + (args || []).map(_ => \"?\").join(\", \") + \")\";\n      brn.s = s;\n      brn.params = params;\n    }\n  } else if (type === \"!new\") {\n    // new java.text.SimpleDateFormat('HH:mm:ss').parse('...')\n    params = args || [];\n    s = `new ${cls.join(\".\")}(${params.map(_ => \"?\").join(\", \")})`;\n  } else if (type === \"!type\") {\n    // T(java.time.LocalTime).parse('...')\n    s = `T(${cls.join(\".\")})`;\n  } else if (type === \"compound\" && lastChild.type === \"property\" && isFuncableProperty(lastChild.val)) {\n    // {1,2}.length  --  ok\n    // 'Hello World'.bytes.length  --  will not work\n    s = children.map((c) => {\n      if (c === lastChild)\n        return c.val;\n      const [s1, params1] = _buildFuncSignatures({...c, obj: null}, [{}]);\n      params.push(...params1);\n      return s1;\n    }).join(\".\");\n  } else {\n    params = [spel];\n    s = \"?\";\n  }\n\n  if (currBrn) {\n    currBrn.s = s;\n    currBrn.params = params;\n  }\n\n  return [s, params];\n};\n\nconst convertFunc = (spel, conv, config, meta, parentSpel) => {\n  // Build signatures\n  const convertFuncArg = v => convertArg(v, conv, config, meta, {\n    ...spel,\n    _groupField: parentSpel?._groupField\n  });\n  const fsigns = buildFuncSignatures(spel);\n  const firstSign = fsigns?.[0]?.s;\n  if (fsigns.length)\n    logger.debug(\"Signatures for \", spel, \":\", firstSign, fsigns);\n  \n  // 1. Try to parse as value\n  let maybeValue = convertFuncToValue(spel, conv, config, meta, parentSpel, fsigns, convertFuncArg);\n  if (maybeValue !== undefined)\n    return maybeValue;\n  \n  // 2. Try to parse as op\n  let maybeOp = convertFuncToOp(spel, conv, config, meta, parentSpel, fsigns, convertFuncArg);\n  if (maybeOp !== undefined)\n    return maybeOp;\n  \n  // 3. Try to parse as func\n  let funcKey, funcConfig, argsObj;\n  // try func signature matching\n  for (const {s, params} of fsigns) {\n    const funcKeys = conv.funcs[s];\n    if (funcKeys) {\n      // todo: here we can check arg types, if we have function overloading\n      funcKey = funcKeys[0];\n      funcConfig = getFuncConfig(config, funcKey);\n      const {spelFunc} = funcConfig;\n      const argsArr = params.map(convertFuncArg);\n      const argsOrder = [...spelFunc.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n      argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      break;\n    }\n  }\n  // try `spelImport`\n  if (!funcKey) {\n    for (const [f, fc] of iterateFuncs(config)) {\n      if (fc.spelImport) {\n        let parsed;\n        try {\n          parsed = fc.spelImport(spel);\n        } catch(_e) {\n          // can't be parsed\n        }\n        if (parsed) {\n          funcKey = f;\n          funcConfig = getFuncConfig(config, funcKey);\n          argsObj = {};\n          for (let argKey in parsed) {\n            argsObj[argKey] = convertFuncArg(parsed[argKey]);\n          }\n        }\n      }\n    }\n  }\n\n  // convert\n  if (funcKey) {\n    const funcArgs = {};\n    for (let argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      let argVal = argsObj[argKey];\n      if (argVal === undefined) {\n        argVal = argConfig?.defaultValue;\n        if (argVal === undefined) {\n          if (argConfig?.isOptional) {\n            //ignore\n          } else {\n            meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n            return undefined;\n          }\n        } else {\n          argVal = {\n            value: argVal,\n            valueSrc: argVal?.func ? \"func\" : \"value\",\n            valueType: argConfig.type,\n          };\n        }\n      }\n      if (argVal)\n        funcArgs[argKey] = argVal;\n    }\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: funcArgs\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  const {methodName} = spel;\n  if (methodName)\n    meta.errors.push(`Signature ${firstSign} - failed to convert`);\n  \n  return undefined;\n};\n\nconst convertFuncToValue = (spel, conv, config, meta, parentSpel, fsigns, convertFuncArg) => {\n  let errs, foundSign, foundWidget;\n  const candidates = [];\n\n  for (let w in config.widgets) {\n    const widgetDef = config.widgets[w];\n    const {spelImportFuncs} = widgetDef;\n    if (spelImportFuncs) {\n      for (let i = 0 ; i < spelImportFuncs.length ; i++) {\n        const fj = spelImportFuncs[i];\n        if (isObject(fj)) {\n          const bag = {};\n          if (isJsonCompatible(fj, spel, bag)) {\n            for (const k in bag) {\n              bag[k] = convertFuncArg(bag[k]);\n            }\n            candidates.push({\n              s: `widgets.${w}.spelImportFuncs[${i}]`,\n              w,\n              argsObj: bag,\n            });\n          }\n        }\n      }\n    }\n  }\n\n  for (const {s, params} of fsigns) {\n    const found = conv.valueFuncs[s] || [];\n    for (const {w, argsOrder} of found) {\n      const argsArr = params.map(convertFuncArg);\n      const argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      candidates.push({\n        s,\n        w,\n        argsObj,\n      });\n    }\n  }\n\n  for (const {s, w, argsObj} of candidates) {\n    const widgetDef = config.widgets[w];\n    const {spelImportValue, type} = widgetDef;\n    foundWidget = w;\n    foundSign = s;\n    errs = [];\n    for (const k in argsObj) {\n      if (![\"value\"].includes(argsObj[k].valueSrc)) {\n        errs.push(`${k} has unsupported value src ${argsObj[k].valueSrc}`);\n      }\n    }\n    let value = argsObj.v.value;\n    if (spelImportValue && !errs.length) {\n      [value, errs] = spelImportValue.call(config.ctx, argsObj.v, widgetDef, argsObj);\n      if (errs && !Array.isArray(errs))\n        errs = [errs];\n    }\n    if (!errs.length) {\n      return {\n        valueSrc: \"value\",\n        valueType: type,\n        value,\n      };\n    }\n  }\n\n  if (foundWidget && errs.length) {\n    meta.errors.push(`Signature ${foundSign} - looks like convertable to ${foundWidget}, but: ${errs.join(\"; \")}`);\n  }\n\n  return undefined;\n};\n\nconst convertFuncToOp = (spel, conv, config, meta, parentSpel, fsigns, convertFuncArg) => {\n  let errs, opKey, foundSign;\n  for (const {s, params} of fsigns) {\n    const found = conv.opFuncs[s] || [];\n    for (const {op, argsOrder} of found) {\n      const argsArr = params.map(convertFuncArg);\n      opKey = op;\n      if (op === \"!compare\") {\n        if (\n          parentSpel.type.startsWith(\"op-\")\n          && parentSpel.children.length == 2\n          && parentSpel.children[1].type == \"number\"\n          && parentSpel.children[1].val === 0\n        ) {\n          return {\n            type: \"!compare\",\n            children: argsArr,\n          };\n        } else {\n          errs.push(\"Result of compareTo() should be compared to 0\");\n        }\n      }\n      foundSign = s;\n      errs = [];\n      const opDef = config.operators[opKey];\n      const {spelOp, valueTypes} = opDef;\n      const argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      const field = argsObj[\"0\"];\n      const convertedArgs = Object.keys(argsObj).filter(k => parseInt(k) > 0).map(k => argsObj[k]);\n      \n      const valueType = argsArr.filter(a => !!a).find(({valueSrc}) => valueSrc === \"value\")?.valueType;\n      if (valueTypes && valueType && !valueTypes.includes(valueType)) {\n        errs.push(`Op supports types ${valueTypes}, but got ${valueType}`);\n      }\n      if (!errs.length) {\n        return buildRule(config, meta, field, opKey, convertedArgs, spel);\n      }\n    }\n  }\n\n  if (opKey && errs.length) {\n    meta.errors.push(`Signature ${foundSign} - looks like convertable to ${opKey}, but: ${errs.join(\"; \")}`);\n  }\n\n  return undefined;\n};\n\nconst buildRule = (config, meta, field, opKey, convertedArgs, spel) => {\n  if (convertedArgs.filter(v => v === undefined).length) {\n    return undefined;\n  }\n  let fieldSrc = field?.func ? \"func\" : \"field\";\n  if (isObject(field) && field.valueSrc) {\n    // if comed from convertFuncToOp()\n    fieldSrc = field.valueSrc;\n    field = field.value;\n  }\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig) {\n    meta.errors.push(`No config for field ${field}`);\n    return undefined;\n  }\n\n  let canRev = true;\n  let needWrapReverse = false;\n  if (spel?.not && canRev) {\n    const opConfig = config.operators[opKey];\n    if (opConfig.reversedOp) {\n      opKey = opConfig.reversedOp;\n      spel.not = false;\n    } else {\n      needWrapReverse = true;\n    }\n  }\n\n  const widget = getWidgetForFieldOp(config, field, opKey);\n  const widgetConfig = config.widgets[widget || fieldConfig.mainWidget];\n  const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n  const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n\n  let res = {\n    type: \"rule\",\n    id: uuid(),\n    properties: {\n      field,\n      fieldSrc,\n      operator: opKey,\n      value: convertedArgs.map(v => v.value),\n      valueSrc: convertedArgs.map(v => v.valueSrc),\n      valueType: convertedArgs.map(v => {\n        if (v.valueSrc == \"value\") {\n          return widgetConfig?.type || fieldConfig?.type || v.valueType;\n        }\n        return v.valueType;\n      }),\n      ...(asyncListValues ? {asyncListValues} : {}),\n    }\n  };\n\n  if (needWrapReverse) {\n    res = wrapInDefaultConj(res, config, spel?.not);\n    if (spel?.not) {\n      spel.not = false;\n    }\n  }\n\n  return res;\n};\n\nconst buildRuleGroup = ({groupFilter, groupFieldValue}, opKey, convertedArgs, config, meta) => {\n  if (groupFieldValue.valueSrc != \"field\")\n    throw `Bad groupFieldValue: ${JSON.stringify(groupFieldValue)}`;\n  const groupField = groupFieldValue.value;\n  let groupOpRule = buildRule(config, meta, groupField, opKey, convertedArgs);\n  if (!groupOpRule)\n    return undefined;\n  const fieldConfig = getFieldConfig(config, groupField);\n  const mode = fieldConfig?.mode;\n  let res;\n\n  if (groupFilter?.type === \"group\") {\n    res = {\n      ...(groupFilter || {}),\n      type: \"rule_group\",\n      properties: {\n        ...groupOpRule.properties,\n        ...(groupFilter?.properties || {}),\n        mode\n      }\n    };\n  } else if (groupFilter) {\n    // rule_group in rule_group\n    res = {\n      ...(groupOpRule || {}),\n      type: \"rule_group\",\n      children1: [ groupFilter ],\n      properties: {\n        ...groupOpRule.properties,\n        mode\n      }\n    };\n  } else {\n    res = {\n      ...(groupOpRule || {}),\n      type: \"rule_group\",\n      properties: {\n        ...groupOpRule.properties,\n        mode\n      }\n    };\n  }\n\n  if (!res.id)\n    res.id = uuid();\n  return res;\n};\n\n\nconst compareArgs = (left, right,  spel, conv, config, meta, parentSpel = null) => {\n  if (left.type == right.type) {\n    if (left.type == \"!aggr\") {\n      const [leftSource, rightSource] = [left.source, right.source].map(v => convertArg(v, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      }));\n      //todo: check same filter\n      return leftSource.value == rightSource.value;\n    } else {\n      const [leftVal, rightVal] = [left, right].map(v => convertArg(v, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      }));\n      return leftVal.value == rightVal.value;\n    }\n  }\n  return false;\n};\n\nconst buildSimpleSwitch = (val, conv, config, meta) => {\n  let children1 = {};\n  const cond = null;\n  const caseI = buildCase(cond, val, conv, config, meta);\n  if (caseI) {\n    children1[caseI.id] = caseI;\n  }\n  let res = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n  return res;\n};\n\nconst buildCase = (cond, val, conv, config, meta, spel = null) => {\n  const valProperties = buildCaseValProperties(config, meta, conv, val, spel);\n\n  let caseI;\n  if (cond) {\n    caseI = convertToTree(cond, conv, config, meta, spel);\n    if (caseI && caseI.type) {\n      if (caseI.type != \"group\") {\n        caseI = wrapInDefaultConj(caseI, config);\n      }\n      caseI.type = \"case_group\";\n    } else {\n      meta.errors.push(`Unexpected case: ${JSON.stringify(caseI)}`);\n      caseI = undefined;\n    }\n  } else {\n    caseI = {\n      id: uuid(),\n      type: \"case_group\",\n      properties: {}\n    };\n  }\n\n  if (caseI) {\n    caseI.properties = {\n      ...caseI.properties,\n      ...valProperties\n    };\n  }\n\n  return caseI;\n};\n\nconst buildCaseValueConcat = (spel, conv, config, meta) => {\n  let flat = [];\n  function _processConcatChildren(children) {\n    children.map(child => {\n      if (child.type == \"op-plus\") {\n        _processConcatChildren(child.children);\n      } else {\n        const convertedChild = convertArg(child, conv, config, meta, spel);\n        if (convertedChild) {\n          flat.push(convertedChild);\n        } else {\n          meta.errors.push(`Can't convert ${child.type} in concatenation`);\n        }\n      }\n    });\n  }\n  _processConcatChildren(spel.children);\n  return {\n    valueSrc: \"value\",\n    valueType: \"case_value\",\n    value: flat,\n  };\n};\n\nconst buildCaseValProperties = (config, meta, conv, val, spel = null) => {\n  let valProperties = {};\n  let convVal;\n  if (val?.type == \"op-plus\") {\n    convVal = buildCaseValueConcat(val, conv, config, meta);\n  } else {\n    convVal = convertArg(val, conv, config, meta, spel);\n  }\n  const widgetDef = config.widgets[\"case_value\"];\n  const importCaseValue = widgetDef?.spelImportValue;\n  if (importCaseValue) {\n    const [normVal, normErrors] = importCaseValue(convVal);\n    normErrors.map(e => meta.errors.push(e));\n    if (normVal) {\n      valProperties = {\n        value: [normVal],\n        valueSrc: [\"value\"],\n        valueType: [\"case_value\"]\n      };\n    }\n  } else {\n    meta.errors.push(\"No fucntion to import case value\");\n  }\n  return valProperties;\n};\n\nconst wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj) => {\n  if (!rule) return undefined;\n  return {\n    type: \"rule_group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n      not: false,\n      field: parentField,\n    }\n  };\n};\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not || false\n    }\n  };\n};\n","import Immutable from \"immutable\";\nimport uuid from \"./uuid\";\nimport {getFieldConfig, getOperatorConfig, getFieldParts} from \"./configUtils\";\nimport {getNewValueForFieldOp, getFirstField, getFirstOperator} from \"../utils/ruleUtils\";\nimport { isImmutable } from \"./stuff\";\nimport { jsToImmutable } from \"../import\";\n\n\nexport const getDefaultField = (config, canGetFirst = true, parentRuleGroupPath = null) => {\n  const {defaultField} = config.settings;\n  let f = (!parentRuleGroupPath ? defaultField : getDefaultSubField(config, parentRuleGroupPath))\n    || canGetFirst && getFirstField(config, parentRuleGroupPath)\n    || null;\n  // if default LHS is func, convert to Immutable\n  if (f != null && typeof f !== \"string\" && !isImmutable(f)) {\n    f = jsToImmutable(f);\n  }\n  return f;\n};\n\nexport const getDefaultSubField = (config, parentRuleGroupPath = null) => {\n  if (!parentRuleGroupPath)\n    return null;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const parentRuleGroupConfig = getFieldConfig(config, parentRuleGroupPath);\n  let f = parentRuleGroupConfig?.defaultField;\n  if (f) {\n    f = [...getFieldParts(parentRuleGroupPath), f].join(fieldSeparator);\n  }\n  return f;\n};\n\nexport const getDefaultFieldSrc = (config, canGetFirst = true) => {\n  return canGetFirst && config.settings.fieldSources?.[0] || \"field\";\n};\n\nexport const getDefaultOperator = (config, field, canGetFirst = true) => {\n  let {defaultOperator} = config.settings;\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOperators = fieldConfig?.operators || [];\n  if (defaultOperator && !fieldOperators.includes(defaultOperator))\n    defaultOperator = null;\n  let fieldDefaultOperator = fieldConfig?.defaultOperator;\n  if (fieldDefaultOperator && !fieldOperators.includes(fieldDefaultOperator))\n    fieldDefaultOperator = null;\n  if (!fieldDefaultOperator && canGetFirst)\n    fieldDefaultOperator = getFirstOperator(config, field);\n  const fieldHasExplicitDefOp = fieldConfig?._origDefaultOperator;\n  const op = fieldHasExplicitDefOp && fieldDefaultOperator || defaultOperator || fieldDefaultOperator;\n  return op;\n};\n\n//used for complex operators like proximity\nexport const defaultOperatorOptions = (config, operator, field) => {\n  let operatorConfig = operator ? getOperatorConfig(config, operator, field) : null;\n  if (!operatorConfig)\n    return null; //new Immutable.Map();\n  return operatorConfig.options ? new Immutable.Map(\n    operatorConfig.options\n    && operatorConfig.options.defaults || {}\n  ) : null;\n};\n\nexport const defaultRuleProperties = (config, parentRuleGroupPath = null, item = null, canUseDefaultFieldAndOp = true, canGetFirst = false) => {\n  let field = null, operator = null, fieldSrc = null;\n  const {showErrorMessage} = config.settings;\n  if (item) {\n    fieldSrc = item?.properties?.fieldSrc;\n    field = item?.properties?.field;\n    operator = item?.properties?.operator;\n  } else if (canUseDefaultFieldAndOp) {\n    field = getDefaultField(config, canGetFirst, parentRuleGroupPath);\n    if (field) {\n      fieldSrc = isImmutable(field) ? \"func\" : \"field\";\n    } else {\n      fieldSrc = getDefaultFieldSrc(config);\n    }\n    operator = getDefaultOperator(config, field, true);\n  } else {\n    fieldSrc = getDefaultFieldSrc(config);\n  }\n  let current = new Immutable.Map({\n    fieldSrc: fieldSrc,\n    field: field,\n    operator: operator,\n    value: new Immutable.List(),\n    valueSrc: new Immutable.List(),\n    //used for complex operators like proximity\n    operatorOptions: defaultOperatorOptions(config, operator, field),\n  });\n  if (showErrorMessage) {\n    current = current.set(\"valueError\", new Immutable.List());\n  }\n  \n  if (field && operator) {\n    let {newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, current, field, operator, \"operator\", false\n    );\n    current = current\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n  }\n  return current; \n};\n\n\nexport const defaultGroupConjunction = (config, fieldConfig = null) => {\n  fieldConfig = getFieldConfig(config, fieldConfig); // if `fieldConfig` is field name, not config\n  const conjs = fieldConfig && fieldConfig.conjunctions || Object.keys(config.conjunctions);\n  if (conjs.length == 1)\n    return conjs[0];\n  return config.settings.defaultGroupConjunction || config.settings.defaultConjunction || conjs[0];\n};\n\nexport const defaultConjunction = (config) =>\n  config.settings.defaultConjunction || Object.keys(config.conjunctions)[0];\n\nexport const defaultGroupProperties = (config, fieldConfig = null) => new Immutable.Map({\n  conjunction: defaultGroupConjunction(config, fieldConfig),\n  not: false\n});\n\nexport const defaultItemProperties = (config, item) => {\n  return item && item.type == \"group\" \n    ? defaultGroupProperties(config, item?.properties?.field) \n    : defaultRuleProperties(config, null, item);\n};\n\nexport const defaultRule = (id, config) => ({\n  [id]: new Immutable.Map({\n    type: \"rule\",\n    id: id,\n    properties: defaultRuleProperties(config)\n  })\n});\n\nexport const defaultRoot = (config, canAddDefaultRule = true) => {\n  return new Immutable.Map({\n    type: \"group\",\n    id: uuid(),\n    children1: new Immutable.OrderedMap(canAddDefaultRule ? { ...defaultRule(uuid(), config) } : {}),\n    properties: defaultGroupProperties(config)\n  });\n};\n\nexport const createListFromArray = (ids) => {\n  return new Immutable.List(ids);\n};\n\nexport const emptyProperies = () => new Immutable.Map();\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldSrc,\n} from \"./configUtils\";\nimport {getOperatorsForField, getWidgetForFieldOp, getNewValueForFieldOp, isCompletedValue, isEmptyRuleProperties} from \"../utils/ruleUtils\";\nimport {defaultValue, deepEqual, logger} from \"../utils/stuff\";\nimport {getItemInListValues} from \"../utils/listValues\";\nimport {defaultOperatorOptions} from \"../utils/defaultUtils\";\nimport {fixPathsInTree} from \"../utils/treeUtils\";\nimport omit from \"lodash/omit\";\nimport { List } from \"immutable\";\n\n\nconst typeOf = (v) => {\n  if (typeof v == \"object\" && v !== null && Array.isArray(v))\n    return \"array\";\n  else\n    return (typeof v);\n};\n\nconst isTypeOf = (v, type) => {\n  if (typeOf(v) == type)\n    return true;\n  if (type == \"number\" && !isNaN(v))\n    return true; //can be casted\n  return false;\n};\n\nexport const validateAndFixTree = (newTree, _oldTree, newConfig, oldConfig, removeEmptyGroups, removeIncompleteRules) => {\n  let tree = validateTree(newTree, _oldTree, newConfig, oldConfig, removeEmptyGroups, removeIncompleteRules);\n  tree = fixPathsInTree(tree);\n  return tree;\n};\n\nexport const validateTree = (tree, _oldTree, config, oldConfig, removeEmptyGroups, removeIncompleteRules) => {\n  if (removeEmptyGroups === undefined) {\n    removeEmptyGroups = config.settings.removeEmptyGroupsOnLoad;\n  }\n  if (removeIncompleteRules === undefined) {\n    removeIncompleteRules = config.settings.removeIncompleteRulesOnLoad;\n  }\n  const c = {\n    config, oldConfig, removeEmptyGroups, removeIncompleteRules\n  };\n  return validateItem(tree, [], null, {}, c);\n};\n\nfunction validateItem (item, path, itemId, meta, c) {\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\" || type == \"case_group\" || type == \"switch_group\") && children && children.size) {\n    return validateGroup(item, path, itemId, meta, c);\n  } else if (type === \"rule\") {\n    return validateRule(item, path, itemId, meta, c);\n  } else {\n    return item;\n  }\n}\n\nfunction validateGroup (item, path, itemId, meta, c) {\n  const {removeEmptyGroups} = c;\n  let id = item.get(\"id\");\n  let children = item.get(\"children1\");\n  const oldChildren = children;\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  //validate children\n  let submeta = {};\n  children = children\n    .map( (currentChild, childId) => validateItem(currentChild, path.concat(id), childId, submeta, c) );\n  if (removeEmptyGroups)\n    children = children.filter((currentChild) => (currentChild != undefined));\n  let sanitized = submeta.sanitized || (oldChildren.size != children.size);\n  if (!children.size && removeEmptyGroups && path.length) {\n    sanitized = true;\n    item = undefined;\n  }\n\n  if (sanitized)\n    meta.sanitized = true;\n  if (sanitized && item)\n    item = item.set(\"children1\", children);\n  return item;\n}\n\n\nfunction validateRule (item, path, itemId, meta, c) {\n  const {removeIncompleteRules, config, oldConfig} = c;\n  const {showErrorMessage} = config.settings;\n  let id = item.get(\"id\");\n  let properties = item.get(\"properties\");\n  let field = properties.get(\"field\") || null;\n  let fieldSrc = properties.get(\"fieldSrc\") || null;\n  let operator = properties.get(\"operator\") || null;\n  let operatorOptions = properties.get(\"operatorOptions\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let value = properties.get(\"value\");\n  let valueError = properties.get(\"valueError\");\n  const oldSerialized = {\n    field: field?.toJS?.() || field,\n    fieldSrc,\n    operator,\n    operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n    valueSrc: valueSrc ? valueSrc.toJS() : null,\n    value: value ? value.toJS() : null,\n    valueError: valueError ? valueError.toJS() : null,\n  };\n  let _wasValid = field && operator && value && !value.includes(undefined);\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  //validate field\n  const fieldDefinition = field ? getFieldConfig(config, field) : null;\n  if (field && !fieldDefinition) {\n    logger.warn(`No config for field ${field}`);\n    field = null;\n  }\n  if (field == null) {\n    properties = [\"operator\", \"operatorOptions\", \"valueSrc\", \"value\", \"valueError\"].reduce((map, key) => map.delete(key), properties);\n    operator = null;\n  }\n  if (!fieldSrc) {\n    fieldSrc = getFieldSrc(field);\n    properties = properties.set(\"fieldSrc\", fieldSrc);\n  }\n\n  //validate operator\n  // Backward compatibility: obsolete operator range_between\n  if (operator == \"range_between\" || operator == \"range_not_between\") {\n    operator = operator == \"range_between\" ? \"between\" : \"not_between\";\n    console.info(`Fixed operator ${properties.get(\"operator\")} to ${operator}`);\n    properties = properties.set(\"operator\", operator);\n  }\n  const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n  if (operator && !operatorDefinition) {\n    console.warn(`No config for operator ${operator}`);\n    operator = null;\n  }\n  const availOps = field ? getOperatorsForField(config, field) : [];\n  if (field) {\n    if (!availOps?.length) {\n      console.warn(`Type of field ${field} is not supported`);\n      operator = null;\n    } else if (operator && availOps.indexOf(operator) == -1) {\n      if (operator == \"is_empty\" || operator == \"is_not_empty\") {\n        // Backward compatibility: is_empty #494\n        operator = operator == \"is_empty\" ? \"is_null\" : \"is_not_null\";\n        console.info(`Fixed operator ${properties.get(\"operator\")} to ${operator} for ${field}`);\n        properties = properties.set(\"operator\", operator);\n      } else {\n        console.warn(`Operator ${operator} is not supported for field ${field}`);\n        operator = null;\n      }\n    }\n  }\n  if (operator == null) {\n    // do not unset operator ?\n    properties = properties.delete(\"operatorOptions\");\n    properties = properties.delete(\"valueSrc\");\n    properties = properties.delete(\"value\");\n    properties = properties.delete(\"valueError\");\n  }\n\n  //validate operator options\n  operatorOptions = properties.get(\"operatorOptions\");\n  let _operatorCardinality = operator ? defaultValue(operatorDefinition.cardinality, 1) : null;\n  if (!operator || operatorOptions && !operatorDefinition.options) {\n    operatorOptions = null;\n    properties = properties.delete(\"operatorOptions\");\n  } else if (operator && !operatorOptions && operatorDefinition.options) {\n    operatorOptions = defaultOperatorOptions(config, operator, field);\n    properties = properties.set(\"operatorOptions\", operatorOptions);\n  }\n\n  //validate values\n  valueSrc = properties.get(\"valueSrc\");\n  value = properties.get(\"value\");\n  const canFix = !showErrorMessage;\n  const isEndValue = true;\n  let {newValue, newValueSrc, newValueError} = getNewValueForFieldOp(config, oldConfig, properties, field, operator, null, canFix, isEndValue);\n  value = newValue;\n  valueSrc = newValueSrc;\n  valueError = newValueError;\n  properties = properties.set(\"value\", value);\n  properties = properties.set(\"valueSrc\", valueSrc);\n  if (showErrorMessage) {\n    properties = properties.set(\"valueError\", valueError);\n  } else {\n    properties = properties.delete(\"valueError\");\n  }\n\n  const newSerialized = {\n    field: field?.toJS?.() || field,\n    fieldSrc,\n    operator,\n    operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n    valueSrc: valueSrc ? valueSrc.toJS() : null,\n    value: value ? value.toJS() : null,\n    valueError: valueError ? valueError.toJS() : null,\n  };\n  const sanitized = !deepEqual(oldSerialized, newSerialized);\n  //const isCompleted = !!operator && !isEmptyRuleProperties(properties.toObject(), config, false);\n  const isValueCompleted = value \n    && value.filter((v, delta) => !isCompletedValue(v, valueSrc.get(delta), config)).size == 0;\n  const isFieldCompleted = isCompletedValue(field, fieldSrc, config);\n  const isCompleted = isFieldCompleted && operator && isValueCompleted;\n  if (sanitized)\n    meta.sanitized = true;\n  if (!isCompleted && removeIncompleteRules) {\n    let reason = \"Uncomplete rule\";\n    if (!isFieldCompleted) {\n      reason = \"Uncomplete LHS\";\n    } else {\n      reason = \"Uncomplete RHS\";\n      if (newSerialized.valueSrc?.[0] && newSerialized.valueSrc?.[0] != oldSerialized.valueSrc?.[0]) {\n        // eg. operator `starts_with` supports only valueSrc \"value\"\n        reason = `Bad value src ${newSerialized.valueSrc}`;\n      }\n    }\n    console.warn(\"[RAQB validate]\", \"Removing rule: \", oldSerialized, `Reason: ${reason}`);\n    item = undefined;\n  }\n  else if (sanitized)\n    item = item.set(\"properties\", properties);\n\n  return item;\n}\n\n\n/**\n * \n * @param {bool} canFix true is useful for func values to remove bad args\n * @param {bool} isEndValue false if value is in process of editing by user\n * @param {bool} isRawValue false is used only internally from validateFuncValue\n * @return {array} [validError, fixedValue] - if validError === null and canFix == true, fixedValue can differ from value if was fixed\n */\nexport const validateValue = (config, leftField, field, operator, value, valueType, valueSrc, asyncListValues, canFix = false, isEndValue = false, isRawValue = true) => {\n  let validError = null;\n  let fixedValue = value;\n\n  if (value != null) {\n    if (valueSrc == \"field\") {\n      [validError, fixedValue] = validateFieldValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, isEndValue, canFix);\n    } else if (valueSrc == \"func\") {\n      [validError, fixedValue] = validateFuncValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, isEndValue, canFix);\n    } else if (valueSrc == \"value\" || !valueSrc) {\n      [validError, fixedValue] = validateNormalValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, isEndValue, canFix);\n    }\n\n    if (!validError) {\n      const fieldConfig = getFieldConfig(config, field);\n      const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n      const fieldWidgetDefinition = omit(getFieldWidgetConfig(config, field, operator, w, valueSrc), [\"factory\"]);\n      const rightFieldDefinition = (valueSrc == \"field\" ? getFieldConfig(config, value) : null);\n      const fieldSettings = fieldWidgetDefinition; // widget definition merged with fieldSettings\n\n      const fn = fieldWidgetDefinition.validateValue;\n      if (typeof fn == \"function\") {\n        const args = [\n          fixedValue, \n          fieldSettings,\n          operator,\n          operatorDefinition\n        ];\n        if (valueSrc == \"field\")\n          args.push(rightFieldDefinition);\n        const validResult = fn.call(config.ctx, ...args);\n        if (typeof validResult == \"boolean\") {\n          if (validResult == false)\n            validError = \"Invalid value\";\n        } else {\n          validError = validResult;\n        }\n      }\n    }\n  }\n\n  if (isRawValue && validError) {\n    console.warn(\"[RAQB validate]\", `Field ${field}: ${validError}`);\n  }\n  \n  return [validError, fixedValue];\n};\n\nconst validateValueInList = (value, listValues, canFix, isEndValue, removeInvalidMultiSelectValuesOnLoad) => {\n  const values = List.isList(value) ? value.toJS() : (value instanceof Array ? [...value] : undefined);\n  if (values) {\n    const [goodValues, badValues] = values.reduce(([goodVals, badVals], val) => {\n      const vv = getItemInListValues(listValues, val);\n      if (vv == undefined) {\n        return [goodVals, [...badVals, val]];\n      } else {\n        return [[...goodVals, vv.value], badVals];\n      }\n    }, [[], []]);\n    const plural = badValues.length > 1;\n    const err = badValues.length ? `${plural ? \"Values\" : \"Value\"} ${badValues.join(\", \")} ${plural ? \"are\" : \"is\"} not in list of values` : null;\n    // always remove bad values at tree validation as user can't unselect them (except AntDesign widget)\n    if (removeInvalidMultiSelectValuesOnLoad !== undefined) {\n      canFix = removeInvalidMultiSelectValuesOnLoad;\n    } else {\n      canFix = canFix || isEndValue;\n    }\n    return [err, canFix ? goodValues : value];\n  } else {\n    const vv = getItemInListValues(listValues, value);\n    if (vv == undefined) {\n      return [`Value ${value} is not in list of values`, value];\n    } else {\n      value = vv.value;\n    }\n    return [null, value];\n  }\n};\n\n/**\n* \n*/\nconst validateNormalValue = (leftField, field, value, valueSrc, valueType, asyncListValues, config, operator = null, isEndValue = false, canFix = false) => {\n  if (field) {\n    const fieldConfig = getFieldConfig(config, field);\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const wConfig = config.widgets[w];\n    const wType = wConfig?.type;\n    const jsType = wConfig?.jsType;\n    const fieldSettings = fieldConfig.fieldSettings;\n    const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n    const isAsyncListValues = !!fieldSettings?.asyncFetch;\n    // todo: for select/multiselect value can be string or number\n    const canSkipCheck = listValues || isAsyncListValues; \n\n    if (valueType && wType && valueType != wType)\n      return [`Value should have type ${wType}, but got value of type ${valueType}`, value];\n    if (jsType && !isTypeOf(value, jsType) && !canSkipCheck) {\n      return [`Value should have JS type ${jsType}, but got value of type ${typeof value}`, value];\n    }\n\n    if (fieldSettings) {\n      const realListValues = asyncListValues || listValues;\n      if (realListValues && !fieldSettings.allowCustomValues) {\n        return validateValueInList(value, realListValues, canFix, isEndValue, config.settings.removeInvalidMultiSelectValuesOnLoad);\n      }\n      if (fieldSettings.min != null && value < fieldSettings.min) {\n        return [`Value ${value} < min ${fieldSettings.min}`, canFix ? fieldSettings.min : value];\n      }\n      if (fieldSettings.max != null && value > fieldSettings.max) {\n        return [`Value ${value} > max ${fieldSettings.max}`, canFix ? fieldSettings.max : value];\n      }\n    }\n  }\n\n  return [null, value];\n};\n\n\n/**\n* \n*/\nconst validateFieldValue = (leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null, isEndValue = false, canFix = false) => {\n  const {fieldSeparator} = config.settings;\n  const isFuncArg = typeof field == \"object\" && field?._isFuncArg;\n  const leftFieldStr = Array.isArray(leftField) ? leftField.join(fieldSeparator) : leftField;\n  const rightFieldStr = Array.isArray(value) ? value.join(fieldSeparator) : value;\n  const rightFieldDefinition = getFieldConfig(config, value);\n  if (!rightFieldDefinition)\n    return [`Unknown field ${value}`, value];\n  if (rightFieldStr == leftFieldStr && !isFuncArg)\n    return [`Can't compare field ${leftField} with itself`, value];\n  if (valueType && valueType != rightFieldDefinition.type)\n    return [`Field ${value} is of type ${rightFieldDefinition.type}, but expected ${valueType}`, value];\n  return [null, value];\n};\n\n/**\n* \n*/\nconst validateFuncValue = (leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null, isEndValue = false, canFix = false) => {\n  let fixedValue = value;\n\n  if (value) {\n    const funcKey = value.get(\"func\");\n    if (funcKey) {\n      const funcConfig = getFuncConfig(config, funcKey);\n      if (funcConfig) {\n        if (valueType && funcConfig.returnType != valueType)\n          return [`Function ${funcKey} should return value of type ${funcConfig.returnType}, but got ${valueType}`, value];\n        for (const argKey in funcConfig.args) {\n          const argConfig = funcConfig.args[argKey];\n          const args = fixedValue.get(\"args\");\n          const argVal = args ? args.get(argKey) : undefined;\n          const argDef = getFieldConfig(config, argConfig);\n          const argValue = argVal ? argVal.get(\"value\") : undefined;\n          const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n          if (argValue !== undefined) {\n            const [argValidError, fixedArgVal] = validateValue(\n              config, leftField, argDef, operator, argValue, argConfig.type, argValueSrc, asyncListValues, canFix, isEndValue, false\n            );\n            if (argValidError !== null) {\n              if (canFix) {\n                fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n                if (argConfig.defaultValue !== undefined) {\n                  fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], argConfig.defaultValue);\n                  fixedValue = fixedValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n                }\n              } else {\n                return [`Invalid value of arg ${argKey} for func ${funcKey}: ${argValidError}`, value];\n              }\n            } else if (fixedArgVal !== argValue) {\n              fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], fixedArgVal);\n            }\n          } else if (isEndValue && argConfig.defaultValue === undefined && !canFix && !argConfig.isOptional) {\n            return [`Value of arg ${argKey} for func ${funcKey} is required`, value];\n          }\n        }\n      } else return [`Unknown function ${funcKey}`, value];\n    } // else it's not function value\n  } // empty value\n\n  return [null, fixedValue];\n};\n","\nimport {getFieldConfig, getFuncConfig, getFuncSignature} from \"../utils/configUtils\";\nimport {filterValueSourcesForField, completeValue, selectTypes} from \"../utils/ruleUtils\";\nimport {validateValue} from \"../utils/validation\";\nimport Immutable from \"immutable\";\n\n// helpers\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\n\n/**\n * @param {Immutable.Map} value\n * @param {object} config\n * @return {Immutable.Map | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeFuncValue = (value, config) => {\n  if (!value)\n    return undefined;\n  const funcKey = value.get(\"func\");\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return undefined;\n  let complValue = value;\n  let tmpHasOptional = false;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const {valueSources, isOptional, defaultValue} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    const args = complValue.get(\"args\");\n    const argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = (argVal ? argVal.get(\"valueSrc\") : undefined) || argDefaultValueSrc;\n    if (argValue !== undefined) {\n      const completeArgValue = completeValue(argValue, argValueSrc, config);\n      if (completeArgValue === undefined) {\n        return undefined;\n      } else if (completeArgValue !== argValue) {\n        complValue = complValue.setIn([\"args\", argKey, \"value\"], completeArgValue);\n      }\n      if (tmpHasOptional) {\n        // has gap\n        return undefined;\n      }\n    } else if (defaultValue !== undefined && !isObject(defaultValue)) {\n      complValue = complValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n      complValue = complValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n    } else if (isOptional) {\n      // optional\n      tmpHasOptional = true;\n    } else {\n      // missing value\n      return undefined;\n    }\n  }\n  return complValue;\n};\n\n\n/**\n * @param {Immutable.Map} value \n * @return {array} - [usedFields, badFields]\n */\n// const getUsedFieldsInFuncValue = (value, config) => {\n//   let usedFields = [];\n//   let badFields = [];\n\n//   const _traverse = (value) => {\n//     const args = value && value.get(\"args\");\n//     if (!args) return;\n//     for (const arg of args.values()) {\n//       if (arg.get(\"valueSrc\") == \"field\") {\n//         const rightField = arg.get(\"value\");\n//         if (rightField) {\n//           const rightFieldDefinition = config ? getFieldConfig(config, rightField) : undefined;\n//           if (config && !rightFieldDefinition)\n//             badFields.push(rightField);\n//           else\n//             usedFields.push(rightField);\n//         }\n//       } else if (arg.get(\"valueSrc\") == \"func\") {\n//         _traverse(arg.get(\"value\"));\n//       }\n//     }\n//   };\n\n//   _traverse(value);\n\n//   return [usedFields, badFields];\n// };\n\n\n/**\n * Used @ FuncWidget\n * @param {Immutable.Map} value \n * @param {string} funcKey \n * @param {object} config \n */\nexport const setFunc = (value, funcKey, config) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  value = value || new Immutable.Map();\n  if (Array.isArray(funcKey)) {\n    // fix for cascader\n    funcKey = funcKey.join(fieldSeparator);\n  }\n  const oldFuncKey = value.get(\"func\");\n  const oldArgs = value.get(\"args\");\n  value = value.set(\"func\", funcKey);\n\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  const newFuncSignature = funcKey && getFuncSignature(config, funcKey);\n  const oldFuncSignature = oldFuncKey && getFuncSignature(config, oldFuncKey);\n  const keepArgsKeys = getCompatibleArgsOnFuncChange(oldFuncSignature, newFuncSignature, oldArgs, config);\n  if (keepArgsKeys.length) {\n    const argsKeys = Object.keys(newFuncSignature.args);\n    const deleteArgsKeys = argsKeys.filter(k => !keepArgsKeys.includes(k));\n    value = deleteArgsKeys.reduce((value, k) => value.deleteIn([\"args\", k]), value);\n  } else {\n    value = value.set(\"args\", new Immutable.Map());\n  }\n\n  // defaults\n  if (funcConfig) {\n    for (const argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      const {valueSources, defaultValue} = argConfig;\n      const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n      const firstValueSrc = filteredValueSources.length ? filteredValueSources[0] : undefined;\n      const defaultValueSrc = defaultValue ? (isObject(defaultValue) && !!defaultValue.func ? \"func\" : \"value\") : undefined;\n      const argDefaultValueSrc = defaultValueSrc || firstValueSrc;\n      const hasValue = value.getIn([\"args\", argKey]);\n      if (!hasValue) {\n        if (defaultValue !== undefined) {\n          value = value.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n        }\n        if (argDefaultValueSrc) {\n          value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n        }\n      }\n    }\n  }\n\n  return value;\n};\n\nconst getDefaultArgValue = ({defaultValue: value}) => {\n  if (isObject(value) && !Immutable.Map.isMap(value) && value.func) {\n    return Immutable.fromJS(value, function (k, v) {\n      return Immutable.Iterable.isIndexed(v) ? v.toList() : v.toOrderedMap();\n    });\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {*} argVal \n* @param {object} argConfig \n*/\nexport const setArgValue = (value, argKey, argVal, argConfig, config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey, \"value\"], argVal);\n\n    // set default arg value source\n    const valueSrc = value.getIn([\"args\", argKey, \"valueSrc\"]);\n    const {valueSources} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    let argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    if (!argDefaultValueSrc && filteredValueSources.includes(\"value\")) {\n      argDefaultValueSrc = \"value\";\n    }\n    if (!valueSrc && argDefaultValueSrc) {\n      value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {string} argValSrc \n* @param {object} argConfig \n*/\nexport const setArgValueSrc = (value, argKey, argValSrc, _argConfig, _config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey], new Immutable.Map({valueSrc: argValSrc}));\n  }\n  return value;\n};\n\n// see getFuncSignature in configUtils\nexport const getCompatibleArgsOnFuncChange = (s1, s2, argVals, config) => {\n  if (s1?.returnType != s2?.returnType)\n    return [];\n  const checkIndexes = false;\n  const keys = Object.keys(s2.args);\n  const compatibleKeys = keys.filter((k, i) => {\n    const arg2 = s2.args[k];\n    const arg1 = s1.args[k];\n    const oldInd = Object.keys(s1.args).indexOf(k);\n    if (!arg1 && (arg2.defaultValue !== undefined || arg2.isOptional)) {\n      return true;\n    }\n    if (checkIndexes && i !== oldInd) {\n      return false;\n    }\n    if (arg1?.type != arg2.type)\n      return false;\n    if (selectTypes.includes(arg2.type)) {\n      if (!arg1.listValuesType || arg1.listValuesType !== arg2.listValuesType)\n        return false;\n    }\n    if (argVals) {\n      const argVal = argVals.get(k);\n      const argValue = argVal?.get(\"value\");\n      const argValueSrc = argVal?.get(\"valueSrc\");\n      if (arg2.valueSources && !arg2.valueSources.includes(argValueSrc))\n        return false;\n      const leftField = null, operator = null, argDef = arg2, asyncListValues = null, canFix = false, isEndValue = true;\n      const [argValidError, _fixedArgVal] = validateValue(\n        config, leftField, argDef, operator, argValue, argDef.type, argValueSrc, asyncListValues, canFix, isEndValue, false\n      );\n      if (argValidError)\n        return false;\n    }\n\n    return true;\n  });\n  return compatibleKeys;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldRawConfig, getFuncConfig, getFieldParts,\n  isFieldDescendantOfField\n} from \"./configUtils\";\nimport {defaultValue, getFirstDefined} from \"../utils/stuff\";\nimport Immutable from \"immutable\";\nimport {validateValue} from \"../utils/validation\";\nimport last from \"lodash/last\";\nimport {completeFuncValue} from \"./funcUtils\";\n\nexport const selectTypes = [\n  \"select\",\n  \"multiselect\",\n  \"treeselect\",\n  \"treemultiselect\",\n];\n\n/**\n * @param {object} config\n * @param {object} oldConfig\n * @param {Immutable.Map} current\n * @param {string} newField\n * @param {string} newOperator\n * @param {string} changedProp\n * @return {object} - {canReuseValue, newValue, newValueSrc, newValueType, newValueError}\n */\nexport const getNewValueForFieldOp = function (config, oldConfig = null, current, newField, newOperator, changedProp = null, canFix = true, isEndValue = false) {\n  if (!oldConfig)\n    oldConfig = config;\n  const {keepInputOnChangeFieldSrc} = config.settings;\n  const currentField = current.get(\"field\");\n  const currentFieldType = current.get(\"fieldType\");\n  //const currentFieldSrc = current.get(\"fieldSrc\");\n  const currentOperator = current.get(\"operator\");\n  const currentValue = current.get(\"value\");\n  const currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n  const currentValueType = current.get(\"valueType\", new Immutable.List());\n  const currentAsyncListValues = current.get(\"asyncListValues\");\n\n  //const isValidatingTree = (changedProp === null);\n  const {convertableWidgets, clearValueOnChangeField, clearValueOnChangeOp, showErrorMessage} = config.settings;\n\n  //const currentOperatorConfig = getOperatorConfig(oldConfig, currentOperator);\n  const newOperatorConfig = getOperatorConfig(config, newOperator, newField);\n  //const currentOperatorCardinality = currentOperator ? defaultValue(currentOperatorConfig.cardinality, 1) : null;\n  const operatorCardinality = newOperator ? defaultValue(newOperatorConfig.cardinality, 1) : null;\n  const currentFieldConfig = getFieldConfig(oldConfig, currentField);\n  const newFieldConfig = getFieldConfig(config, newField);\n  const isOkWithoutField = !currentField && currentFieldType && keepInputOnChangeFieldSrc;\n  const currentType = currentFieldConfig?.type || currentFieldType;\n  const newType = newFieldConfig?.type || !newField && isOkWithoutField && currentType;\n\n  let canReuseValue = (currentField || isOkWithoutField) && currentOperator && newOperator && currentValue != undefined;\n  canReuseValue = canReuseValue\n    && (!changedProp \n      || changedProp == \"field\" && !clearValueOnChangeField \n      || changedProp == \"operator\" && !clearValueOnChangeOp);\n  canReuseValue = canReuseValue\n    && (currentType && newType && currentType == newType);\n  if (canReuseValue && selectTypes.includes(newType) && changedProp == \"field\") {\n    const newListValuesType = newFieldConfig?.listValuesType;\n    const currentListValuesType = currentFieldConfig?.listValuesType;\n    if (newListValuesType && newListValuesType === currentListValuesType) {\n      // ok\n    } else {\n      // different fields of select types has different listValues\n      canReuseValue = false;\n    }\n  }\n\n  // compare old & new widgets\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    const vs = currentValueSrc.get(i) || null;\n    const currentWidget = getWidgetForFieldOp(oldConfig, currentField, currentOperator, vs);\n    const newWidget = getWidgetForFieldOp(config, newField, newOperator, vs);\n    // need to also check value widgets if we changed operator and current value source was 'field'\n    // cause for select type op '=' requires single value and op 'in' requires array value\n    const currentValueWidget = vs == \"value\" ? currentWidget : getWidgetForFieldOp(oldConfig, currentField, currentOperator, \"value\");\n    const newValueWidget = vs == \"value\" ? newWidget : getWidgetForFieldOp(config, newField, newOperator, \"value\");\n\n    const canReuseWidget = newValueWidget == currentValueWidget\n      || (convertableWidgets[currentValueWidget] || []).includes(newValueWidget)\n      || !currentValueWidget && isOkWithoutField;\n    if (!canReuseWidget) {\n      canReuseValue = false;\n    }\n  }\n\n  if (currentOperator != newOperator && [currentOperator, newOperator].includes(\"proximity\"))\n    canReuseValue = false;\n\n  const firstWidgetConfig = getFieldWidgetConfig(config, newField, newOperator, null, currentValueSrc.first());\n  let valueSources = getValueSourcesForFieldOp(config, newField, newOperator, null);\n  if (!newField && isOkWithoutField) {\n    valueSources = Object.keys(config.settings.valueSourcesInfo);\n  }\n\n  let valueFixes = {};\n  let valueErrors = Array.from({length: operatorCardinality}, () => null);\n  if (canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      const v = currentValue.get(i);\n      const vType = currentValueType.get(i) || null;\n      const vSrc = currentValueSrc.get(i) || null;\n      let isValidSrc = (valueSources.find(v => v == vSrc) != null);\n      if (!isValidSrc && i > 0 && vSrc == null)\n        isValidSrc = true; // make exception for range widgets (when changing op from '==' to 'between')\n      const asyncListValues = currentAsyncListValues;\n      const [validateError, fixedValue] = validateValue(\n        config, newField, newField, newOperator, v, vType, vSrc, asyncListValues, canFix, isEndValue, true\n      );\n      const isValid = !validateError;\n      // Allow bad value with error message\n      // But not on field change - in that case just drop bad value that can't be reused\n      // ? Maybe we should also drop bad value on op change?\n      // For bad multiselect value we have both error message + fixed value.\n      //  If we show error message, it will gone on next tree validation\n      const fixValue = fixedValue !== v;\n      const dropValue = !isValidSrc || !isValid && (changedProp == \"field\" || !showErrorMessage && !fixValue);\n      const showValueError = !!validateError && showErrorMessage && !dropValue && !fixValue;\n      if (showValueError) {\n        valueErrors[i] = validateError;\n      }\n      if (fixValue) {\n        valueFixes[i] = fixedValue;\n      }\n      if (dropValue) {\n        canReuseValue = false;\n        break;\n      }\n    }\n  }\n\n  // reuse value OR get defaultValue for cardinality 1 (it means default range values is not supported yet, todo)\n  let newValue = null, newValueSrc = null, newValueType = null, newValueError = null;\n  newValue = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n    let v = undefined;\n    if (canReuseValue) {\n      if (i < currentValue.size) {\n        v = currentValue.get(i);\n        if (valueFixes[i] !== undefined) {\n          v = valueFixes[i];\n        }\n      }\n    } else if (operatorCardinality == 1) {\n      v = getFirstDefined([\n        newFieldConfig?.defaultValue,\n        newFieldConfig?.fieldSettings?.defaultValue,\n        firstWidgetConfig?.defaultValue\n      ]);\n    }\n    return v;\n  }));\n\n  newValueSrc = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n    let vs = null;\n    if (canReuseValue) {\n      if (i < currentValueSrc.size)\n        vs = currentValueSrc.get(i);\n    } else if (valueSources.length == 1) {\n      vs = valueSources[0];\n    } else if (valueSources.length > 1) {\n      vs = valueSources[0];\n    }\n    return vs;\n  }));\n\n  if (showErrorMessage) {\n    if (newOperatorConfig && newOperatorConfig.validateValues && newValueSrc.toJS().filter(vs => vs == \"value\" || vs == null).length == operatorCardinality) {\n      // last element in `valueError` list is for range validation error\n      const jsValues = firstWidgetConfig && firstWidgetConfig.toJS \n        ? newValue.toJS().map(v => firstWidgetConfig.toJS.call(config.ctx, v, firstWidgetConfig)) \n        : newValue.toJS();\n      const rangeValidateError = newOperatorConfig.validateValues(jsValues);\n      if (showErrorMessage) {\n        valueErrors.push(rangeValidateError);\n      }\n    }\n    newValueError = new Immutable.List(valueErrors);\n  }\n\n  newValueType = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n    let vt = null;\n    if (canReuseValue) {\n      if (i < currentValueType.size)\n        vt = currentValueType.get(i);\n    } else if (operatorCardinality == 1 && firstWidgetConfig && firstWidgetConfig.type !== undefined) {\n      vt = firstWidgetConfig.type;\n    } else if (operatorCardinality == 1 && newFieldConfig && newFieldConfig.type !== undefined) {\n      vt = newFieldConfig.type == \"!group\" ? \"number\" : newFieldConfig.type;\n    }\n    return vt;\n  }));\n\n  return {canReuseValue, newValue, newValueSrc, newValueType, newValueError, operatorCardinality};\n};\n\nexport const getFirstField = (config, parentRuleGroupPath = null) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parentPathArr = getFieldParts(parentRuleGroupPath, config);\n  const parentField = parentRuleGroupPath ? getFieldRawConfig(config, parentRuleGroupPath) : config;\n\n  let firstField = parentField, key = null, keysPath = [];\n  do {\n    const subfields = firstField === config ? config.fields : firstField?.subfields;\n    if (!subfields || !Object.keys(subfields).length) {\n      firstField = key = null;\n      break;\n    }\n    key = Object.keys(subfields)[0];\n    keysPath.push(key);\n    firstField = subfields[key];\n  } while (firstField.type == \"!struct\" || firstField.type == \"!group\");\n  return (parentPathArr || []).concat(keysPath).join(fieldSeparator);\n};\n\nexport const getOperatorsForType = (config, fieldType) => {\n  return config.types[fieldType]?.operators || null;\n};\n\nexport const getOperatorsForField = (config, field) => {\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOps = fieldConfig ? fieldConfig.operators : [];\n  return fieldOps;\n};\n\nexport const getFirstOperator = (config, field) => {\n  const fieldOps = getOperatorsForField(config, field);\n  return fieldOps?.[0] ?? null;\n};\n\nexport const getFuncPathLabels = (field, config, parentField = null) => {\n  return getFieldPathLabels(field, config, parentField, \"funcs\", \"subfields\");\n};\n\nexport const getFieldPathLabels = (field, config, parentField = null, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  const parentParts = getFieldParts(parentField, config);\n  const res = parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => [...parentParts, ...parts].join(fieldSeparator))\n    .map(part => {\n      const cnf = getFieldRawConfig(config, part, fieldsKey, subfieldsKey);\n      return cnf && cnf.label || last(part.split(fieldSeparator));\n    })\n    .filter(label => label != null);\n  return res;\n};\n\nexport const getFieldPartsConfigs = (field, config, parentField = null) => {\n  if (!field)\n    return null;\n  const parentFieldDef = parentField && getFieldRawConfig(config, parentField) || null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  const isDescendant = isFieldDescendantOfField(field, parentField, config);\n  const parentParts = !isDescendant ? [] : getFieldParts(parentField, config);\n  return parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => ({\n      part: [...parentParts, ...parts].join(fieldSeparator),\n      key: parts[parts.length - 1]\n    }))\n    .map(({part, key}) => {\n      const cnf = getFieldRawConfig(config, part);\n      return {key, cnf};\n    })\n    .map(({key, cnf}, ind, arr) => {\n      const parentCnf = ind > 0 ? arr[ind - 1].cnf : parentFieldDef;\n      return [key, cnf, parentCnf];\n    });\n};\n\nexport const getValueLabel = (config, field, operator, delta, valueSrc = null, isSpecialRange = false) => {\n  const isFuncArg = field && typeof field == \"object\" && !!field.func && !!field.arg;\n  const {showLabels} = config.settings;\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldWidgetConfig = getFieldWidgetConfig(config, field, operator, null, valueSrc) || {};\n  const mergedOpConfig = getOperatorConfig(config, operator, field) || {};\n    \n  const cardinality = isSpecialRange ? 1 : mergedOpConfig.cardinality;\n  let ret = null;\n  if (cardinality > 1) {\n    const valueLabels = fieldWidgetConfig.valueLabels || mergedOpConfig.valueLabels;\n    if (valueLabels)\n      ret = valueLabels[delta];\n    if (ret && typeof ret != \"object\") {\n      ret = {label: ret, placeholder: ret};\n    }\n    if (!ret) {\n      ret = {\n        label: config.settings.valueLabel + \" \" + (delta+1),\n        placeholder: config.settings.valuePlaceholder + \" \" + (delta+1),\n      };\n    }\n  } else {\n    let label = fieldWidgetConfig.valueLabel;\n    let placeholder = fieldWidgetConfig.valuePlaceholder;\n    if (isFuncArg) {\n      if (!label)\n        label = fieldConfig.label || field.arg;\n      if (!placeholder && !showLabels)\n        placeholder = fieldConfig.label || field.arg;\n    }\n\n    ret = {\n      label: label || config.settings.valueLabel, \n      placeholder: placeholder || config.settings.valuePlaceholder,\n    };\n  }\n  return ret;\n};\n\nfunction _getWidgetsAndSrcsForFieldOp (config, field, operator = null, valueSrc = null) {\n  let widgets = [];\n  let valueSrcs = [];\n  if (!field)\n    return {widgets, valueSrcs};\n  const isFuncArg = typeof field == \"object\" && (!!field.func && !!field.arg || field._isFuncArg);\n  const fieldConfig = getFieldConfig(config, field);\n  const opConfig = operator ? config.operators[operator] : null;\n  \n  if (fieldConfig?.widgets) {\n    for (const widget in fieldConfig.widgets) {\n      const widgetConfig = fieldConfig.widgets[widget];\n      if (!config.widgets[widget]) {\n        continue;\n      }\n      const widgetValueSrc = config.widgets[widget].valueSrc || \"value\";\n      let canAdd = true;\n      if (widget == \"field\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"field\"], fieldConfig).length > 0;\n      }\n      if (widget == \"func\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"func\"], fieldConfig).length > 0;\n      }\n      // If can't check operators, don't add\n      // Func args don't have operators\n      if (valueSrc == \"value\" && !widgetConfig.operators && !isFuncArg && field != \"!case_value\")\n        canAdd = false;\n      if (widgetConfig.operators && operator)\n        canAdd = canAdd && widgetConfig.operators.indexOf(operator) != -1;\n      if (valueSrc && valueSrc != widgetValueSrc && valueSrc != \"const\")\n        canAdd = false;\n      if (opConfig && opConfig.cardinality == 0 && (widgetValueSrc != \"value\"))\n        canAdd = false;\n      if (canAdd) {\n        widgets.push(widget);\n        let canAddValueSrc = fieldConfig.valueSources?.indexOf(widgetValueSrc) != -1;\n        if (opConfig?.valueSources?.indexOf(widgetValueSrc) == -1)\n          canAddValueSrc = false;\n        if (canAddValueSrc && !valueSrcs.find(v => v == widgetValueSrc))\n          valueSrcs.push(widgetValueSrc);\n      }\n    }\n  }\n\n  const widgetWeight = (w) => {\n    let wg = 0;\n    if (fieldConfig.preferWidgets) {\n      if (fieldConfig.preferWidgets.includes(w))\n        wg += (10 - fieldConfig.preferWidgets.indexOf(w));\n    } else if (w == fieldConfig.mainWidget) {\n      wg += 100;\n    }\n    if (w == \"field\") {\n      wg -= 1;\n    }\n    if (w == \"func\") {\n      wg -= 2;\n    }\n    return wg;\n  };\n\n  widgets.sort((w1, w2) => (widgetWeight(w2) - widgetWeight(w1)));\n    \n  return {widgets, valueSrcs};\n}\n\nexport const getWidgetsForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  return widgets;\n};\n\nexport const filterValueSourcesForField = (config, valueSrcs, fieldDefinition) => {\n  if (!fieldDefinition)\n    return valueSrcs;\n  const fieldType = fieldDefinition.type ?? fieldDefinition.returnType;\n  if (!valueSrcs)\n    valueSrcs = Object.keys(config.settings.valueSourcesInfo);\n  return valueSrcs.filter(vs => {\n    let canAdd = true;\n    if (vs == \"field\") {\n      if (config.__fieldsCntByType) {\n        // tip: LHS field can be used as arg in RHS function\n        const minCnt = fieldDefinition._isFuncArg ? 0 : 1;\n        canAdd = canAdd && config.__fieldsCntByType[fieldType] > minCnt;\n      }\n    }\n    if (vs == \"func\") {\n      if (config.__funcsCntByType)\n        canAdd = canAdd && !!config.__funcsCntByType[fieldType];\n      if (fieldDefinition.funcs)\n        canAdd = canAdd && fieldDefinition.funcs.length > 0;\n    }\n    return canAdd;\n  });\n};\n\nexport const getValueSourcesForFieldOp = (config, field, operator, fieldDefinition = null) => {\n  const {valueSrcs} = _getWidgetsAndSrcsForFieldOp(config, field, operator, null);\n  const filteredValueSrcs = filterValueSourcesForField(config, valueSrcs, fieldDefinition);\n  return filteredValueSrcs;\n};\n\nexport const getWidgetForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  let widget = null;\n  if (widgets.length)\n    widget = widgets[0];\n  return widget;\n};\n\n// can use alias (fieldName)\n// even if `parentField` is provided, `field` is still a full path\nexport const formatFieldName = (field, config, meta, parentField = null, options = {}) => {\n  if (!field) return;\n  const fieldDef = getFieldConfig(config, field) || {};\n  const {fieldSeparator} = config.settings;\n  const fieldParts = getFieldParts(field, config);\n  let fieldName = Array.isArray(field) ? field.join(fieldSeparator) : field;\n  if (options?.useTableName && fieldDef.tableName) { // legacy\n    const fieldPartsCopy = [...fieldParts];\n    fieldPartsCopy[0] = fieldDef.tableName;\n    fieldName = fieldPartsCopy.join(fieldSeparator);\n  }\n  if (fieldDef.fieldName) {\n    fieldName = fieldDef.fieldName;\n  }\n  if (parentField) {\n    const parentFieldDef = getFieldConfig(config, parentField) || {};\n    let parentFieldName = parentField;\n    if (fieldName.indexOf(parentFieldName + fieldSeparator) == 0) {\n      fieldName = fieldName.slice((parentFieldName + fieldSeparator).length);\n      // fieldName = \"#this.\" + fieldName; // ? for spel\n    } else {\n      if (fieldDef.fieldName) {\n        // ignore\n      } else {\n        meta.errors.push(`Can't cut group ${parentFieldName} from field ${fieldName}`);\n      }\n    }\n  }\n  return fieldName;\n};\n\n\nexport const isEmptyItem = (item, config, liteCheck = false) => {\n  const type = item.get(\"type\");\n  const mode = item.getIn([\"properties\", \"mode\"]);\n  if (type == \"rule_group\" && mode == \"array\") {\n    return isEmptyRuleGroupExt(item, config, liteCheck);\n  } else if (type == \"group\" || type == \"rule_group\") {\n    return isEmptyGroup(item, config, liteCheck);\n  } else {\n    return isEmptyRule(item, config, liteCheck);\n  }\n};\n\nconst isEmptyRuleGroupExt = (item, config, liteCheck = false) => {\n  const children = item.get(\"children1\");\n  const properties = item.get(\"properties\");\n  return isEmptyRuleGroupExtPropertiesAndChildren(properties.toObject(), children, config, liteCheck);\n};\n\nexport const isEmptyRuleGroupExtPropertiesAndChildren = (properties, children, config, liteCheck = false) => {\n  const operator = properties.operator;\n  const cardinality = config.operators[operator]?.cardinality ?? 1;\n  const filledParts = [\n    !isEmptyRuleProperties(properties, config, false),\n    cardinality > 0 ? true : !isEmptyGroupChildren(children, config, liteCheck),\n  ];\n  const filledCnt = filledParts.filter(f => !!f).length;\n  const isFilled = filledCnt == 2;\n  return !isFilled;\n};\n\nconst isEmptyGroup = (group, config, liteCheck = false) => {\n  const children = group.get(\"children1\");\n  return isEmptyGroupChildren(children, config, liteCheck);\n};\n\nexport const isEmptyGroupChildren = (children, config, liteCheck = false) => {\n  return !children || children.size == 0\n    || children.size > 0 && children.filter(ch => !isEmptyItem(ch, config, liteCheck)).size == 0;\n};\n\nexport const isEmptyRuleProperties = ({\n  field, fieldSrc, fieldType,\n  operator,\n  value, valueSrc, valueType,\n}, config, liteCheck = false) => {\n  const cardinality = config.operators[operator]?.cardinality ?? 1;\n  const filledParts = [\n    liteCheck ? (field !== null || fieldType != null) : isCompletedValue(field, fieldSrc, config, liteCheck),\n    !!operator,\n    value.filter((val, delta) => \n      isCompletedValue(val, valueSrc?.get?.(delta) || valueSrc?.[delta], config, liteCheck)\n    ).size >= cardinality\n  ];\n  const filledCnt = filledParts.filter(f => !!f).length;\n  const isFilled = filledCnt == 3;\n  return !isFilled;\n};\n\nconst isEmptyRule = (rule, config, liteCheck = false) => {\n  const properties = rule.get(\"properties\");\n  return isEmptyRuleProperties(properties.toObject(), config, liteCheck);\n};\n\nexport const isCompletedValue = (value, valueSrc, config, liteCheck = false) => {\n  if (!liteCheck && valueSrc == \"func\" && value) {\n    const funcKey = value.get(\"func\");\n    const funcConfig = getFuncConfig(config, funcKey);\n    if (funcConfig) {\n      const args = value.get(\"args\");\n      for (const argKey in funcConfig.args) {\n        const argConfig = funcConfig.args[argKey];\n        const argVal = args ? args.get(argKey) : undefined;\n        // const argDef = getFieldConfig(config, argConfig);\n        const argValue = argVal ? argVal.get(\"value\") : undefined;\n        const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n        if (argValue == undefined && argConfig?.defaultValue === undefined && !argConfig?.isOptional) {\n          // arg is not completed\n          return false;\n        }\n        if (argValue != undefined) {\n          if (!isCompletedValue(argValue, argValueSrc, config, liteCheck)) {\n            // arg is complex and is not completed\n            return false;\n          }\n        }\n      }\n      // all args are completed\n      return true;\n    }\n  }\n  return value != undefined;\n};\n\n/**\n * @param {*} value\n * @param {string} valueSrc - 'value' | 'field' | 'func'\n * @param {object} config\n * @return {* | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeValue = (value, valueSrc, config) => {\n  if (valueSrc == \"func\")\n    return completeFuncValue(value, config);\n  else\n    return value;\n};\n","import JL from \"json-logic-js\";\nimport moment from \"moment\";\n\nexport function applyJsonLogic(logic, data) {\n  return JL.apply(logic, data);\n}\n\nfunction addJsonLogicOperation(name, op) {\n  return JL.add_operation(name, op);\n}\n\nexport const customJsonLogicOperations = {\n  CALL: (fn, ctx, ...args) => (fn.call(ctx, ...args)),\n  JSX: (type, props) => ({type, props}),\n  mergeObjects: (obj1, obj2) => ({...obj1, ...obj2}),\n  fromEntries: (entries) => Object.fromEntries(entries),\n  strlen: (str) => (str?.length || 0),\n  regexTest: (str, pattern, flags) => str?.match(new RegExp(pattern, flags)) != null,\n  now: () => new Date(),\n  date_add: (date, val, dim) => { return moment(date).add(val, dim).toDate(); },\n  toLowerCase: (str) => str.toLowerCase(),\n  toUpperCase: (str) => str.toUpperCase(),\n};\n\nexport function addRequiredJsonLogicOperations() {\n  for (let k in customJsonLogicOperations) {\n    addJsonLogicOperation(k, customJsonLogicOperations[k]);\n  }\n}\n","import merge from \"lodash/merge\";\nimport pick from \"lodash/pick\";\nimport {isJsonLogic, isJSX, isDirtyJSX, cleanJSX, shallowEqual} from \"./stuff\";\nimport clone from \"clone\";\nimport JL from \"json-logic-js\";\nimport { addRequiredJsonLogicOperations, applyJsonLogic } from \"./jsonLogic\";\nimport { BasicFuncs } from \"..\";\nimport { getFieldRawConfig } from \"./configUtils\";\n\n// Add new operations for JsonLogic\naddRequiredJsonLogicOperations();\n\nexport { isJSX, isDirtyJSX, cleanJSX, applyJsonLogic };\n\nfunction applyJsonLogicWithPath(logic, data, path) {\n  let ret;\n  try {\n    ret = JL.apply(logic, data);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\nfunction callContextFn(_this, fn, args, path) {\n  let ret;\n  try {\n    ret = fn.call(_this, ...args);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\nexport const configKeys = [\"conjunctions\", \"fields\", \"types\", \"operators\", \"widgets\", \"settings\", \"funcs\", \"ctx\"];\n\n// type: \n//  x - iterate (with nesting `subfields`)\n//  \"r\" - RenderedReactElement\n//    Will be compiled with renderReactElement() into React element rendered with `React.createElement` (`ctx.RCE`)\n//  \"rf\" - JsonLogicFunction/string to render React\n//    JL data is { props, ctx }\n//    Should return {type, props} or string, where type or string - React component\n//    Can use { JSX: [\"SomeComponent\", {var: \"props\"}] } or just return \"SomeComponent\"\n//    Returned component will be searched in ctx.components/ctx.W/ctx.O, see getReactComponentFromCtx()\n//    Will be compiled with compileJsonLogicReact() into function with args (props, ctx) that will return renderReactElement()\n//  \"f\" - JsonLogicFunction/string\n//    JL data is { args, ctx } plus named args defined in `args` inside `compileMeta`\n//    Can use { CALL: [ {var: \"ctx.someFunc\"}, null, {var: \"args[0]\" }] } \n//    If string is passed, it's a path to function in ctx (with dot notation)\n//    Will be compiled with compileJsonLogic() into function with any args and `this` should be `ctx`\n\nconst compileMetaFieldSettings = {\n  asyncFetch: { type: \"f\", args: [\"search\", \"offset\"] },\n  labelYes: { type: \"r\" },\n  labelNo: { type: \"r\" },\n  marks: { type: \"r\", isArr: true },\n  validateValue: { type: \"f\", args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"] },\n};\n\nconst compileMetaWidget = {\n  ...compileMetaFieldSettings,\n  factory: { type: \"rf\" },\n  formatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"isForDisplay\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  sqlFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  spelFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  spelImportValue: { type: \"f\", args: [\"val\", \"wgtDef\", \"args\"] },\n  mongoFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  elasticSearchFormatValue: { type: \"f\", args: [\"queryType\", \"val\", \"op\", \"field\", \"config\"] },\n  jsonLogic: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  validateValue: { type: \"f\", args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"] }, // obsolete\n  toJS: { type: \"f\", args: [\"val\"] },\n};\n\nconst compileMetaOperator = {\n  options: { // proximity\n    factory: { type: \"rf\" },\n  },\n  formatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"isForDisplay\", \"fieldDef\"] },\n  mongoFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"useExpr\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  sqlFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  spelFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"field\", \"op\", \"vals\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  elasticSearchQueryType: { type: \"f\", ignore: \"string\", args: [\"valueType\"] },\n  textSeparators: { type: \"r\", isArr: true },\n};\n\nconst compileMetaConjunction = {\n  formatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"isForDisplay\"] },\n  sqlFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\"] },\n  spelFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"omitBrackets\"] },\n};\n\nconst compileMetaWidgetForType = {\n  widgetProps: compileMetaWidget,\n  opProps: compileMetaOperator\n};\n\nconst compileMetaFunc = {\n  renderBrackets: { type: \"r\", isArr: true },\n  renderSeps: { type: \"r\", isArr: true },\n\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"formattedArgs\"] },\n  jsonLogicImport: { type: \"f\", args: [\"val\"] },\n  spelImport: { type: \"f\", args: [\"spel\"] },\n  formatFunc: { type: \"f\", args: [\"formattedArgs\", \"isForDisplay\"] },\n  sqlFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n  mongoFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n  spelFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n};\n\nconst compileMetaSettings = {\n  locale: {\n    mui: { type: \"f\", args: [], invokeWith: [], ignore: \"jl\" },\n  },\n\n  canCompareFieldWithField: { type: \"f\", args: [\"leftField\", \"leftFieldConfig\", \"rightField\", \"rightFieldConfig\", \"op\"] },\n  formatReverse: { type: \"f\", args: [\"q\", \"op\", \"reversedOp\", \"operatorDefinition\", \"revOperatorDefinition\", \"isForDisplay\"] },\n  sqlFormatReverse: { type: \"f\", args: [\"q\"] },\n  spelFormatReverse: { type: \"f\", args: [\"q\"] },\n  formatField: { type: \"f\", args: [\"field\", \"parts\", \"label2\", \"fieldDefinition\", \"config\", \"isForDisplay\"] },\n  formatSpelField: { type: \"f\", args: [\"field\", \"parentField\", \"parts\", \"partsExt\", \"fieldDefinition\", \"config\"] },\n  formatAggr: { type: \"f\", args: [\"whereStr\", \"aggrField\", \"operator\", \"value\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"isForDisplay\", \"aggrFieldDef\"] },\n  \n  normalizeListValues: { type: \"f\", args: [\"listValues\", \"type\", \"fieldSettings\"] },\n\n  renderConfirm: { type: \"f\", args: [\"props\"] },\n  useConfirm: { type: \"f\", args: [] },\n\n  renderField: { type: \"rf\" },\n  renderOperator: { type: \"rf\" },\n  renderFunc: { type: \"rf\" },\n  renderConjs: { type: \"rf\" },\n  renderButton: { type: \"rf\" },\n  renderIcon: { type: \"rf\" },\n  renderButtonGroup: { type: \"rf\" },\n  renderValueSources: { type: \"rf\" },\n  renderFieldSources: { type: \"rf\" },\n  renderProvider: { type: \"rf\" },\n  renderSwitch: { type: \"rf\" },\n  renderSwitchPrefix: { type: \"r\" },\n\n  renderItem: { type: \"rf\" },\n  renderBeforeWidget: { type: \"rf\" },\n  renderAfterWidget: { type: \"rf\" },\n  renderBeforeActions: { type: \"rf\" },\n  renderAfterActions: { type: \"rf\" },\n  renderRuleError: { type: \"rf\" },\n};\n\nconst compileMeta = {\n  fields: {\n    x: {\n      fieldSettings: compileMetaFieldSettings,\n      widgets: {\n        x: compileMetaWidgetForType\n      },\n      mainWidgetProps: compileMetaWidget\n    },\n  },\n  widgets: {\n    x: compileMetaWidget\n  },\n  conjunctions: {\n    x: compileMetaConjunction\n  },\n  operators: {\n    x: compileMetaOperator\n  },\n  types: {\n    x: {\n      widgets: {\n        x: compileMetaWidgetForType\n      }\n    }\n  },\n  funcs: {\n    x: compileMetaFunc\n  },\n  settings: compileMetaSettings,\n};\n\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\n/////////////\n\nexport const compressConfig = (config, baseConfig) => {\n  if (config.__fieldNames) {\n    throw new Error(\"Don't apply `compressConfig()` to extended config\");\n  }\n  let zipConfig = pick(config, configKeys);\n  delete zipConfig.ctx;\n\n  const _clean = (target, base, path, meta) => {\n    if (isObject(target)) {\n      if (isDirtyJSX(target)) {\n        target = cleanJSX(target);\n      }\n      if (path[0] === \"funcs\" && !base) {\n        const funcKey = path[path.length - 1];\n        // todo: if there will be change in `BasicFuncs` when funcs can be nested, need to chnage code to find `base`\n        base = getFieldRawConfig({\n          funcs: meta.BasicFuncs\n        }, funcKey, \"funcs\", \"subfields\") || undefined;\n        if (base) {\n          target[\"$$key\"] = funcKey;\n        }\n      }\n      if (base !== undefined && isObject(base)) {\n        for (let k in base) {\n          if (Object.prototype.hasOwnProperty.call(base, k)) {\n            if (!Object.keys(target).includes(k) || target[k] === undefined && base[k] !== undefined) {\n              // deleted in target\n              target[k] = \"$$deleted\";\n            } else {\n              target[k] = _clean(target[k], base[k], [...path, k], meta);\n              if (target[k] === undefined) {\n                delete target[k];\n              }\n            }\n          }\n        }\n      }\n      for (let k in target) {\n        if (Object.prototype.hasOwnProperty.call(target, k)) {\n          if (!base || !Object.keys(base).includes(k)) {\n            // new in target\n            target[k] = _clean(target[k], base?.[k], [...path, k], meta);\n          }\n          if (target[k] === undefined) {\n            delete target[k];\n          }\n        }\n      }\n      if (Object.keys(target).length === 0) {\n        target = undefined;\n      }\n    } else if (Array.isArray(target)) {\n      // don't deep compare arrays, but allow clean JSX inside array\n      target.forEach((val, ind) => {\n        target[ind] = _clean(target[ind], undefined, [...path, ind], meta);\n      });\n    }\n\n    if (base !== undefined && shallowEqual(target, base, true)) {\n      return undefined;\n    }\n\n    if (typeof target === \"function\") {\n      throw new Error(`compressConfig: function at ${path.join(\".\")} should be converted to JsonLogic`);\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // ignore\n    } else if (rootKey === \"fields\") {\n      // just copy\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], {}, [rootKey]);\n    } else if (rootKey === \"funcs\") {\n      // leave only diff for every used func\n      zipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      for (let k in zipConfig[rootKey]) {\n        _clean(zipConfig[rootKey][k], null, [rootKey, k], {\n          BasicFuncs\n        });\n      }\n    } else {\n      // leave only diff\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], baseConfig[rootKey], [rootKey]);\n    }\n  }\n\n  return zipConfig;\n};\n\n\nexport const decompressConfig = (zipConfig, baseConfig, ctx) => {\n  if (!zipConfig.settings.useConfigCompress) {\n    throw new Error(\"Please enable `useConfigCompress` in config settings to use decompressConfig()\");\n  }\n  let unzipConfig = {};\n\n  const _mergeDeep = (target, mixin, path) => {\n    if (isObject(mixin)) {\n      if (!isObject(target)) {\n        target = {};\n      }\n      for (let k in mixin) {\n        if (Object.prototype.hasOwnProperty.call(mixin, k)) {\n          if (mixin[k] === \"$$deleted\") {\n            delete target[k];\n          } else {\n            target[k] = _mergeDeep(target[k], mixin[k], [...path, k]);\n          }\n        }\n      }\n    } else if (Array.isArray(mixin)) {\n      // don't merge arrays, just replace\n      target = clone(mixin);\n    } else {\n      target = mixin;\n    }\n\n    return target;\n  };\n\n  const _resolveAndMergeDeep = (target, path, meta) => {\n    // try to resolve by $$key and merge\n    let resolved = false;\n    if (isObject(target) && Object.prototype.hasOwnProperty.call(target, \"$$key\") && target[\"$$key\"]) {\n      const func = getFieldRawConfig({\n        funcs: meta.BasicFuncs\n      }, target[\"$$key\"], \"funcs\", \"subfields\");\n      if (func) {\n        // deep merge func <- zip\n        delete target[\"$$key\"];\n        target = _mergeDeep(clone(func), target, path);\n        resolved = true;\n      } else {\n        throw new Error(`decompressConfig: basic function not found by key ${target[\"$$key\"]} at ${path.join(\".\")}`);\n      }\n    }\n\n    if (!resolved) {\n      if (isObject(target)) {\n        // loop through object to find refs ($$key)\n        for (let k in target) {\n          if (Object.prototype.hasOwnProperty.call(target, k)) {\n            target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n          }\n        }\n      } else if (Array.isArray(target)) {\n        // also loop through array to find refs ($$key)\n        for (const k of target) {\n          target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n        }\n      }\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // simple deep merge\n      unzipConfig[rootKey] = merge({}, baseConfig.ctx || {}, ctx || {});\n    } else if (rootKey === \"funcs\") {\n      // use $$key to pick funcs from BasicFuncs\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      _resolveAndMergeDeep(unzipConfig[rootKey], [rootKey], {\n        BasicFuncs\n      });\n    } else if (rootKey === \"fields\") {\n      // just copy\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n    } else {\n      // deep merge base <- zip\n      unzipConfig[rootKey] = clone(baseConfig[rootKey] || {});\n      _mergeDeep(unzipConfig[rootKey], zipConfig[rootKey] || {}, [rootKey]);\n    }\n  }\n\n  return unzipConfig;\n};\n\n/////////////\n\nexport const compileConfig = (config) => {\n  if (config.__compliled) {\n    return config;\n  }\n\n  config = clone(config);\n\n  const opts = {\n    ctx: config.ctx,\n  };\n\n  const logs = [];\n  _compileConfigParts(config, config, opts, compileMeta, logs);\n  //console.log(logs.join(\"\\n\"));\n\n  Object.defineProperty(config, \"__compliled\", {\n    enumerable: false,\n    writable: false,\n    value: true\n  });\n\n  return config;\n};\n\nfunction _compileConfigParts(config, subconfig, opts, meta, logs, path = []) {\n  if (!subconfig) return;\n  const isRoot = !path.length;\n  for (const k in meta) {\n    const submeta = meta[k];\n    let newPath = k === \"x\" ? path : [...path, k];\n    // if (isRoot) {\n    //   //logs.push(`Cloned ${newPath.join(\".\")}`);\n    //   config[k] = clone(config[k]);\n    // }\n    if (submeta.type === \"r\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      if (submeta.isArr) {\n        for (const ind in val) {\n          const newVal = renderReactElement(val[ind], opts, [...newPath, ind]);\n          if (newVal !== val[ind]) {\n            logs.push(`Compiled ${newPath.join(\".\")}[${ind}]`);\n            val[ind] = newVal;\n          }\n        }\n      } else {\n        const newVal = renderReactElement(val, opts, newPath, undefined);\n        if (newVal !== val) {\n          logs.push(`Compiled R ${newPath.join(\".\")}`);\n          targetObj[k] = newVal;\n        }\n      }\n    } else if (submeta.type === \"rf\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      const newVal = compileJsonLogicReact(val, opts, newPath, submeta.ignore);\n      if (newVal !== val) {\n        logs.push(`Compiled JL-RF ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (submeta.type === \"f\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      let newVal = compileJsonLogic(val, opts, newPath, submeta.args, submeta.ignore);\n      if (submeta.invokeWith && newVal && typeof newVal === \"function\") {\n        newVal = newVal.call(null, ...submeta.invokeWith);\n      }\n      if (newVal !== val) {\n        logs.push(`Compiled JL-F ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (k === \"x\") {\n      for (const field in subconfig) {\n        newPath = [...path, field];\n        const def = subconfig[field];\n        _compileConfigParts(config, def, opts, submeta, logs, newPath);\n        if (def.subfields) {\n          // tip: need to pass `meta`, not `submeta`\n          _compileConfigParts(config, def.subfields, opts, meta, logs, newPath);\n        }\n      }\n    } else {\n      const def = subconfig[k];\n      _compileConfigParts(config, def, opts, submeta, logs, newPath);\n    }\n  }\n}\n\nfunction compileJsonLogicReact(jl, opts, path, ignore = undefined) {\n  if (isJsonLogic(jl)) {\n    return function(props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = {\n        props, ctx,\n      };\n      let re = applyJsonLogicWithPath(jl, data, path);\n      if (typeof re === \"string\") {\n        re = {\n          type: re,\n          props\n        };\n      }\n      \n      const ret = renderReactElement(re, {ctx}, path);\n      return ret;\n    };\n  } else if (typeof jl === \"string\") {\n    return function(props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, [props, ctx], path);\n      } else {\n        const re = {\n          type: jl,\n          props\n        };\n        const ret = renderReactElement(re, {ctx}, path);\n        return ret;\n      }\n    };\n  }\n  return jl;\n}\n\nfunction compileJsonLogic(jl, opts, path, argNames, ignore = undefined) {\n  if (isJsonLogic(jl) && ignore !== \"jl\") {\n    return function(...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = (argNames || []).reduce((acc, k, i) => ({...acc, [k]: args[i]}), {\n        args, ctx\n      });\n      const ret = applyJsonLogicWithPath(jl, data, path);\n      return ret;\n    }.bind(opts?.ctx);\n  } else if (typeof jl === \"string\" && ignore !== \"string\") {\n    return function(...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, args, path);\n      } else {\n        throw new Error(`${path.join(\".\")} :: Function ${jl} is not found in ctx`);\n      }\n    }.bind(opts?.ctx);\n  }\n  return jl;\n}\n\n\n\nfunction getReactComponentFromCtx(name, ctx) {\n  return ctx?.components?.[name] || ctx.W[name] || ctx.O[name];\n}\n\nfunction renderReactElement(jsx, opts, path, key = undefined) {\n  if (isJSX(jsx)) {\n    let { type, props } = jsx;\n    if (typeof type !== \"string\") {\n      throw new Error(`renderReactElement for ${path.join(\".\")}: type should be string`);\n    }\n    const Cmp = getReactComponentFromCtx(type, opts.ctx) || type.toLowerCase();\n    let children;\n    if (key !== undefined) {\n      props = { ...props, key };\n    }\n    if (props?.children) {\n      children = renderReactElement(props.children, opts, path);\n      props = { ...props, children };\n    }\n    const res = opts.ctx.RCE(Cmp, props);\n    return res;\n  } else if (jsx instanceof Array) {\n    return jsx.map((el, i) => renderReactElement(el, opts, path, \"\"+i));\n  }\n  return jsx;\n}\n","import merge from \"lodash/merge\";\nimport pick from \"lodash/pick\";\nimport uuid from \"../utils/uuid\";\nimport mergeWith from \"lodash/mergeWith\";\nimport {settings as defaultSettings} from \"../config/default\";\nimport moment from \"moment\";\nimport {mergeArraysSmart, logger, widgetDefKeysToOmit, deepFreeze} from \"./stuff\";\nimport {getWidgetForFieldOp} from \"./ruleUtils\";\nimport clone from \"clone\";\n\nimport { compileConfig } from \"./configSerialize\";\nexport * from \"./configSerialize\";\n\n/////////////\n\nexport const extendConfig = (config, configId, canCompile = true) => {\n  //operators, defaultOperator - merge\n  //widgetProps (including valueLabel, valuePlaceholder, hideOperator, operatorInlineLabel) - concrete by widget\n\n  if (config.__configId) {\n    return config;\n  }\n\n  // Clone (and compile if need)\n  if (canCompile && config.settings.useConfigCompress) {\n    if (config.__compliled) {\n      // already compiled\n      config = clone(config);\n    } else {\n      // will be cloned and compiled\n      config = compileConfig(config);\n    }\n  } else {\n    config = clone(config);\n  }\n\n  config.settings = mergeWith({}, defaultSettings, config.settings, mergeCustomizerNoArrays);\n\n  config.__fieldsCntByType = {};\n  config.__funcsCntByType = {};\n  config.__fieldNames = {};\n\n  _extendTypesConfig(config.types, config);\n  _extendFieldsConfig(config.fields, config);\n  _extendFuncArgsConfig(config.funcs, config);\n\n  const momentLocale = config.settings.locale.moment;\n  if (momentLocale) {\n    moment.locale(momentLocale);\n  }\n\n  Object.defineProperty(config, \"__configId\", {\n    enumerable: false,\n    writable: false,\n    value: configId || uuid()\n  });\n\n  deepFreeze(config);\n\n  return config;\n};\n\nfunction _extendTypesConfig(typesConfig, config) {\n  for (let type in typesConfig) {\n    let typeConfig = typesConfig[type];\n    _extendTypeConfig(type, typeConfig, config);\n  }\n}\n\nfunction _extendTypeConfig(type, typeConfig, config) {\n  let operators = null, defaultOperator = null;\n  typeConfig.mainWidget = typeConfig.mainWidget || Object.keys(typeConfig.widgets).filter(w => w != \"field\" && w != \"func\")[0];\n  for (let widget in typeConfig.widgets) {\n    let typeWidgetConfig = typeConfig.widgets[widget];\n    if (typeWidgetConfig.operators) {\n      let typeWidgetOperators = typeWidgetConfig.operators;\n      if (typeConfig.excludeOperators) {\n        typeWidgetOperators = typeWidgetOperators.filter(op => !typeConfig.excludeOperators.includes(op));\n      }\n      operators = mergeArraysSmart(operators, typeWidgetOperators);\n    }\n    if (typeWidgetConfig.defaultOperator)\n      defaultOperator = typeWidgetConfig.defaultOperator;\n    if (widget == typeConfig.mainWidget) {\n      typeWidgetConfig = merge({}, {widgetProps: typeConfig.mainWidgetProps || {}}, typeWidgetConfig);\n    }\n    typeConfig.widgets[widget] = typeWidgetConfig;\n  }\n  if (!typeConfig.valueSources)\n    typeConfig.valueSources = Object.keys(config.settings.valueSourcesInfo);\n  for (let valueSrc of typeConfig.valueSources) {\n    if (valueSrc != \"value\" && !typeConfig.widgets[valueSrc]) {\n      typeConfig.widgets[valueSrc] = {\n      };\n    }\n  }\n  if (!typeConfig.operators && operators)\n    typeConfig.operators = Array.from(new Set(operators)); //unique\n  if (!typeConfig.defaultOperator && defaultOperator)\n    typeConfig.defaultOperator = defaultOperator;\n}\n\nfunction _extendFieldsConfig(subconfig, config, path = []) {\n  for (let field in subconfig) {\n    _extendFieldConfig(subconfig[field], config, [...path, field]);\n    if (subconfig[field].subfields) {\n      _extendFieldsConfig(subconfig[field].subfields, config, [...path, field]);\n    }\n  }\n}\n\nfunction _extendFuncArgsConfig(subconfig, config, path = []) {\n  if (!subconfig) return;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  for (let funcKey in subconfig) {\n    const funcPath = [...path, funcKey].join(fieldSeparator);\n    const funcDef = subconfig[funcKey];\n    if (funcDef.returnType) {\n      if (!config.__funcsCntByType[funcDef.returnType])\n        config.__funcsCntByType[funcDef.returnType] = 0;\n      config.__funcsCntByType[funcDef.returnType]++;\n    }\n    for (let argKey in funcDef.args) {\n      _extendFieldConfig(funcDef.args[argKey], config, null, true);\n    }\n\n    // isOptional can be only in the end\n    if (funcDef.args) {\n      const argKeys = Object.keys(funcDef.args);\n      let tmpIsOptional = true;\n      for (const argKey of argKeys.reverse()) {\n        const argDef = funcDef.args[argKey];\n        if (!tmpIsOptional && argDef.isOptional) {\n          logger.info(`Arg ${argKey} for func ${funcPath} can't be optional`);\n          delete argDef.isOptional;\n        }\n        if (!argDef.isOptional)\n          tmpIsOptional = false;\n      }\n    }\n\n    if (funcDef.subfields) {\n      _extendFuncArgsConfig(funcDef.subfields, config, [...path, funcKey]);\n    }\n  }\n}\n\nfunction _extendFieldConfig(fieldConfig, config, path = null, isFuncArg = false) {\n  let operators = null, defaultOperator = null;\n  const typeConfig = config.types[fieldConfig.type];\n  const excludeOperatorsForField = fieldConfig.excludeOperators || [];\n  if (fieldConfig.type != \"!struct\" && fieldConfig.type != \"!group\") {\n    const keysToPutInFieldSettings = [\"listValues\", \"treeValues\", \"allowCustomValues\", \"validateValue\"];\n    if (!fieldConfig.fieldSettings)\n      fieldConfig.fieldSettings = {};\n    for (const k of keysToPutInFieldSettings) {\n      if (fieldConfig[k]) {\n        fieldConfig.fieldSettings[k] = fieldConfig[k];\n        delete fieldConfig[k];\n      }\n    }\n\n    // normalize listValues\n    if (fieldConfig.fieldSettings.listValues) {\n      if (config.settings.normalizeListValues) {\n        fieldConfig.fieldSettings.listValues = config.settings.normalizeListValues.call(\n          config.ctx,\n          fieldConfig.fieldSettings.listValues, fieldConfig.type, fieldConfig.fieldSettings\n        );\n      }\n    }\n    // same for treeValues\n    if (fieldConfig.fieldSettings.treeValues) {\n      if (config.settings.normalizeListValues) {\n        fieldConfig.fieldSettings.treeValues = config.settings.normalizeListValues.call(\n          config.ctx,\n          fieldConfig.fieldSettings.treeValues, fieldConfig.type, fieldConfig.fieldSettings\n        );\n      }\n    }\n\n    if (!typeConfig) {\n      //console.warn(`No type config for ${fieldConfig.type}`);\n      fieldConfig.disabled = true;\n      return;\n    }\n    if (!isFuncArg) {\n      if (!config.__fieldsCntByType[fieldConfig.type])\n        config.__fieldsCntByType[fieldConfig.type] = 0;\n      config.__fieldsCntByType[fieldConfig.type]++;\n    }\n\n    if (!fieldConfig.widgets)\n      fieldConfig.widgets = {};\n    if (isFuncArg)\n      fieldConfig._isFuncArg = true;\n    fieldConfig.mainWidget = fieldConfig.mainWidget || typeConfig.mainWidget;\n    fieldConfig.valueSources = fieldConfig.valueSources || typeConfig.valueSources;\n    const excludeOperatorsForType = typeConfig.excludeOperators || [];\n    for (let widget in typeConfig.widgets) {\n      let fieldWidgetConfig = fieldConfig.widgets[widget] || {};\n      const typeWidgetConfig = typeConfig.widgets[widget] || {};\n      if (!isFuncArg) {\n        //todo: why I've excluded isFuncArg ?\n        const excludeOperators = [...excludeOperatorsForField, ...excludeOperatorsForType];\n        const shouldIncludeOperators = fieldConfig.preferWidgets\n          && (widget == \"field\" || fieldConfig.preferWidgets.includes(widget))\n          || excludeOperators.length > 0;\n        if (fieldWidgetConfig.operators) {\n          const addOperators = fieldWidgetConfig.operators.filter(o => !excludeOperators.includes(o));\n          operators = [...(operators || []), ...addOperators];\n        } else if (shouldIncludeOperators && typeWidgetConfig.operators) {\n          const addOperators = typeWidgetConfig.operators.filter(o => !excludeOperators.includes(o));\n          operators = [...(operators || []), ...addOperators];\n        }\n        if (fieldWidgetConfig.defaultOperator)\n          defaultOperator = fieldWidgetConfig.defaultOperator;\n      }\n\n      if (widget == fieldConfig.mainWidget) {\n        fieldWidgetConfig = merge({}, {widgetProps: fieldConfig.mainWidgetProps || {}}, fieldWidgetConfig);\n      }\n      fieldConfig.widgets[widget] = fieldWidgetConfig;\n    }\n    if (!isFuncArg) {\n      if (!fieldConfig.operators && operators)\n        fieldConfig.operators = Array.from(new Set(operators));\n      fieldConfig._origDefaultOperator = fieldConfig.defaultOperator;\n      if (!fieldConfig.defaultOperator && defaultOperator)\n        fieldConfig.defaultOperator = defaultOperator;\n    }\n  }\n\n  const { fieldName, inGroup } = computeFieldName(config, path);\n  if (fieldName) {\n    fieldConfig.fieldName = fieldName;\n    if (!config.__fieldNames[fieldName])\n      config.__fieldNames[fieldName] = [];\n    config.__fieldNames[fieldName].push({fullPath: path, inGroup});\n  }\n}\n\n/////////////\n\nconst mergeCustomizerNoArrays = (objValue, srcValue, _key, _object, _source, _stack) => {\n  if (Array.isArray(objValue)) {\n    return srcValue;\n  }\n};\n\nexport function* iterateFuncs(config) {\n  yield* _iterateFields(config, config.funcs || {}, []);\n}\n\nexport function* iterateFields(config) {\n  yield* _iterateFields(config, config.fields || {}, []);\n}\n\nfunction* _iterateFields(config, subfields, path, subfieldsKey = \"subfields\") {\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  for (const fieldKey in subfields) {\n    const fieldConfig = subfields[fieldKey];\n    if (fieldConfig[subfieldsKey]) {\n      yield* _iterateFields(config, fieldConfig[subfieldsKey], [...path, fieldKey], subfieldsKey);\n    } else {\n      yield [\n        [...path, fieldKey].join(fieldSeparator),\n        fieldConfig\n      ];\n    }\n  }\n}\n\nexport const getFieldRawConfig = (config, field, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  if (field == \"!case_value\") {\n    return {\n      type: \"case_value\",\n      mainWidget: \"case_value\",\n      widgets: {\n        \"case_value\": config.widgets[\"case_value\"]\n      }\n    };\n  }\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const parts = getFieldParts(field, config);\n  const targetFields = config[fieldsKey];\n  if (!targetFields)\n    return null;\n\n  let fields = targetFields;\n  let fieldConfig = null;\n  let path = [];\n  for (let i = 0 ; i < parts.length ; i++) {\n    const part = parts[i];\n    path.push(part);\n    const pathKey = path.join(fieldSeparator);\n    fieldConfig = fields[pathKey];\n    if (i < parts.length-1) {\n      if (fieldConfig && fieldConfig[subfieldsKey]) {\n        fields = fieldConfig[subfieldsKey];\n        path = [];\n      } else {\n        fieldConfig = null;\n      }\n    }\n  }\n\n  return fieldConfig;\n};\n\nconst computeFieldName = (config, path) => {\n  if (!path)\n    return {};\n  const fieldSeparator = config.settings.fieldSeparator;\n  const {computedPath, computed, inGroup} = [...path].reduce(({computedPath, computed, inGroup}, f, i, arr) => {\n    const fullPath = [...arr.slice(0, i), f];\n    const fConfig = getFieldRawConfig(config, fullPath);\n    if (fConfig?.type === \"!group\" && i < arr.length-1) {\n      // don't include group in final field name\n      inGroup = fullPath.join(fieldSeparator);\n      computedPath = [];\n    } else if (fConfig?.fieldName) {\n      // tip: fieldName overrides path !\n      computed = true;\n      computedPath = [fConfig.fieldName];\n    } else {\n      computedPath = [...computedPath, f];\n    }\n    return {computedPath, computed, inGroup};\n  }, {computedPath: [], computed: false, inGroup: undefined});\n  return computed ? {\n    fieldName: computedPath.join(fieldSeparator),\n    inGroup,\n  } : {};\n};\n\n// if `field` is alias (fieldName), convert to original full path\nexport const normalizeField = (config, field, parentField = null) => {\n  // tip: if parentField is present, field is not full path\n  const fieldSeparator = config.settings.fieldSeparator;\n  const path = [\n    parentField,\n    ...field.split(fieldSeparator)\n  ].filter(f => f != null);\n  const findStr = field;\n  const normalizedPath = config.__fieldNames[findStr]?.find?.(({inGroup}) => {\n    if (inGroup)\n      return parentField?.startsWith(inGroup);\n    return true;\n  })?.fullPath;\n  return (normalizedPath || path).join(fieldSeparator);\n};\n\nexport const getFuncSignature = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null;\n  const {\n    returnType,\n    args,\n  } = funcConfig;\n  const argsSignature = Object.fromEntries(Object.entries(args || {}).map(([k, v]) => {\n    const argSignature = pick(v, [\n      \"type\",\n      \"valueSources\",\n      \"defaultValue\",\n      \"fieldSettings\",\n      // \"asyncListValues\", // not supported\n      \"isOptional\",\n    ]);\n    return [k, argSignature];\n  }));\n  const signature = {\n    returnType,\n    args: argsSignature,\n  };\n  return signature;\n};\n\nexport const getFuncConfig = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null; //throw new Error(\"Can't find func \" + func + \", please check your config\");\n  const typeConfig = config.types[funcConfig.returnType] || {};\n  return { ...typeConfig, ...funcConfig, type: funcConfig.returnType || funcConfig.type};\n};\n\nexport const getFuncArgConfig = (config, funcKey, argKey) => {\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return null; //throw new Error(`Can't find func ${funcKey}, please check your config`);\n  const argConfig = funcConfig.args && funcConfig.args[argKey] || null;\n  if (!argConfig)\n    return null; //throw new Error(`Can't find arg ${argKey} for func ${funcKey}, please check your config`);\n\n  //merge, but don't merge operators (rewrite instead)\n  const typeConfig = config.types[argConfig.type] || {};\n  let ret = mergeWith({}, typeConfig, argConfig || {}, mergeCustomizerNoArrays);\n\n  return ret;\n};\n\nexport const isFieldDescendantOfField = (field, parentField, config = null) => {\n  if (!parentField) return false;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const path = getFieldPath(field, config);\n  const parentPath = getFieldPath(parentField, config);\n  return path.startsWith(parentPath + fieldSeparator);\n};\n\nexport const getFieldPath = (field, config = null) => {\n  if (typeof field === \"string\")\n    return field;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  return getFieldParts(field, config).join(fieldSeparator);\n};\n\nexport const getFieldParts = (field, config = null) => {\n  if (!field)\n    return [];\n  if (Array.isArray(field))\n    return field;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  if (field?.func) {\n    return Array.isArray(field.func) ? field.func : field.func.split(fieldSeparator);\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    return field?.get?.(\"func\").split(fieldSeparator);\n  }\n  return field?.split?.(fieldSeparator) || [];\n};\n\nexport const getFieldPathParts = (field, config, onlyKeys = false) => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  if (onlyKeys)\n    return parts;\n  else\n    return parts\n      .map((_curr, ind, arr) => arr.slice(0, ind+1))\n      .map((parts) => parts.join(fieldSeparator));\n};\n\nexport const getFieldSrc = (field) => {\n  if (!field)\n    return null;\n  if (typeof field == \"object\") {\n    if (!field.func && !!field.type) {\n      // it's already a config\n      return \"field\";\n    }\n    if (field.func) {\n      if (field.func && field.arg) {\n        // it's func arg\n        return null;\n      } else {\n        // it's field func\n        return \"func\";\n      }\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return null;\n    } else {\n      // it's field func\n      return \"func\";\n    }\n  }\n  return \"field\";\n};\n\nexport const getFieldConfig = (config, field) => {\n  if (!field)\n    return null;\n  if (typeof field == \"object\") {\n    if (!field.func && !!field.type) {\n      // it's already a config\n      // if (!field.defaultOperator) {\n      //   // if not complete config..\n      //   // merge, but don't merge operators (rewrite instead)\n      //   const typeConfig = config.types[field.type] || {};\n      //   return mergeWith({}, typeConfig, field, mergeCustomizerNoArrays);\n      // }\n      return field;\n    }\n    if (field.func) {\n      if (field.func && field.arg) {\n        // it's func arg\n        return getFuncArgConfig(config, field.func, field.arg);\n      } else {\n        // it's field func\n        return getFuncConfig(config, field.func);\n      }\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return getFuncArgConfig(config, field.get(\"func\"), field.get(\"arg\"));\n    } else {\n      // it's field func\n      return getFuncConfig(config, field.get(\"func\"));\n    }\n  }\n\n  const fieldConfig = getFieldRawConfig(config, field);\n  if (!fieldConfig)\n    return null; //throw new Error(\"Can't find field \" + field + \", please check your config\");\n\n  //merge, but don't merge operators (rewrite instead)\n  const typeConfig = config.types[fieldConfig.type] || {};\n  let ret = mergeWith({}, typeConfig, fieldConfig || {}, mergeCustomizerNoArrays);\n\n  return ret;\n};\n\nexport const getOperatorConfig = (config, operator, field = null) => {\n  if (!operator)\n    return null;\n  const opConfig = config.operators[operator];\n  if (field) {\n    const fieldConfig = getFieldConfig(config, field);\n    const widget = getWidgetForFieldOp(config, field, operator, null);\n    const widgetConfig = config.widgets[widget] || {};\n    const fieldWidgetConfig = (fieldConfig && fieldConfig.widgets ? fieldConfig.widgets[widget] : {}) || {};\n    const widgetOpProps = (widgetConfig.opProps || {})[operator];\n    const fieldWidgetOpProps = (fieldWidgetConfig.opProps || {})[operator];\n    const mergedOpConfig = merge({}, opConfig, widgetOpProps, fieldWidgetOpProps);\n    return mergedOpConfig;\n  } else {\n    return opConfig;\n  }\n};\n\nexport const getFieldWidgetConfig = (config, field, operator, widget = null, valueSrc = null) => {\n  if (!field)\n    return null;\n  if (!(operator || widget) && valueSrc != \"const\" && field != \"!case_value\")\n    return null;\n  const fieldConfig = getFieldConfig(config, field);\n  if (!widget)\n    widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n  const widgetConfig = config.widgets[widget] || {};\n  const fieldWidgetConfig = (fieldConfig && fieldConfig.widgets ? fieldConfig.widgets[widget] : {}) || {};\n  const fieldWidgetProps = (fieldWidgetConfig.widgetProps || {});\n  const valueFieldSettings = (valueSrc == \"value\" || !valueSrc) && fieldConfig && fieldConfig.fieldSettings || {}; // useful to take 'validateValue'\n  const mergedConfig = merge({}, widgetConfig, fieldWidgetProps, valueFieldSettings);\n  return mergedConfig;\n};\n\nexport const _widgetDefKeysToOmit = widgetDefKeysToOmit;\n","import {defaultValue} from \"../utils/stuff\";\nimport {getFieldConfig, getOperatorConfig} from \"../utils/configUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {formatFieldName} from \"../utils/ruleUtils\";\nimport {Map} from \"immutable\";\n\n/*\n Build tree to http://querybuilder.js.org/ like format\n\n Example:\n {\n    \"condition\": \"AND\",\n    \"rules\": [\n        {\n            \"id\": \"price\",\n            \"field\": \"price\",\n            \"type\": \"double\",\n            \"input\": \"text\",\n            \"operator\": \"less\",\n            \"value\": \"10.25\"\n        },\n        {\n            \"condition\": \"OR\",\n            \"rules\": [\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"2\"\n                },\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"1\"\n                }\n            ]\n        }\n    ]\n }\n */\n\n\nexport const queryBuilderFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: []\n  };\n  const res = formatItem(item, config, meta);\n  if (!res)\n    return undefined;\n  return {\n    ...res, \n    ...meta\n  };\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") && children && children.size) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  const id = item.get(\"id\");\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const not = properties.get(\"not\");\n\n  const resultQuery = {\n    id,\n    rules: list.toList(),\n    condition: conjunction.toUpperCase(),\n    not,\n  };\n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const id = item.get(\"id\");\n\n  const operator = properties.get(\"operator\");\n  const options = properties.get(\"operatorOptions\");\n  let field = properties.get(\"field\");\n  let value = properties.get(\"value\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let valueType = properties.get(\"valueType\");\n  const hasUndefinedValues = value.filter(v => v === undefined).size > 0;\n\n  if (field == null || operator == null || hasUndefinedValues)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const fieldType = fieldDefinition.type || \"undefined\";\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const typeConfig = config.types[fieldDefinition.type] || {};\n  const fieldName = formatFieldName(field, config, meta);\n\n  if (value.size < cardinality)\n    return undefined;\n\n  if (meta.usedFields.indexOf(field) == -1)\n    meta.usedFields.push(field);\n  value = value.toArray();\n  valueSrc = valueSrc.toArray();\n  valueType = valueType?.toArray() || [];\n  let values = [];\n  for (let i = 0 ; i < value.length ; i++) {\n    const val = {\n      type: valueType[i],\n      value: value[i],\n    };\n    values.push(val);\n    if (valueSrc[i] == \"field\") {\n      const secondField = value[i];\n      if (meta.usedFields.indexOf(secondField) == -1)\n        meta.usedFields.push(secondField);\n    }\n  }\n  let operatorOptions = options ? options.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n      \n  let ruleQuery = {\n    id,\n    fieldName,\n    type: fieldType,\n    input: typeConfig.mainWidget,\n    operator,\n  };\n  if (operatorOptions)\n    ruleQuery.operatorOptions = operatorOptions;\n  ruleQuery.values = values;\n  return ruleQuery;\n};\n","import {defaultValue, widgetDefKeysToOmit, opDefKeysToOmit} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, extendConfig, getFieldParts\n} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp, formatFieldName, completeValue} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\n\n// http://jsonlogic.com/\n\n\nexport const jsonLogicFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: [],\n    errors: []\n  };\n  \n  const extendedConfig = extendConfig(config, undefined, false);\n  const logic = formatItem(item, extendedConfig, meta, true);\n  \n  // build empty data\n  const {errors, usedFields} = meta;\n  const {fieldSeparator} = extendedConfig.settings;\n  let data = {};\n  for (let ff of usedFields) {\n    //const fieldSrc = typeof ff === \"string\" ? \"field\" : \"func\";\n    const parts = getFieldParts(ff, config);\n    const def = getFieldConfig(extendedConfig, ff) || {};\n    let tmp = data;\n    for (let i = 0 ; i < parts.length ; i++) {\n      const p = parts[i];\n      const pdef = getFieldConfig(extendedConfig, parts.slice(0, i + 1)) || {};\n      if (i != parts.length - 1) {\n        if (pdef.type == \"!group\" && pdef.mode != \"struct\") {\n          if (!tmp[p])\n            tmp[p] = [{}];\n          tmp = tmp[p][0];\n        } else {\n          if (!tmp[p])\n            tmp[p] = {};\n          tmp = tmp[p];\n        }\n      } else {\n        if (!tmp[p])\n          tmp[p] = null; // can use def.type for sample values\n      }\n    }\n  }\n    \n  return {\n    errors,\n    logic,\n    data,\n  };\n};\n\n\nconst formatItem = (item, config, meta, isRoot, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const isLocked = properties.get(\"isLocked\");\n  const {lockedOp} = config.settings.jsonLogic;\n  let ret;\n  if (type === \"group\" || type === \"rule_group\") {\n    ret = formatGroup(item, config, meta, isRoot, parentField);\n  } else if (type === \"rule\") {\n    ret = formatRule(item, config, meta, parentField);\n  }\n  if (isLocked && ret && lockedOp) {\n    ret = { [lockedOp] : ret };\n  }\n  return ret;\n};\n\n\nconst formatGroup = (item, config, meta, isRoot, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n  \n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const conj = conjunctionDefinition.jsonLogicConj || conjunction.toLowerCase();\n  const not = properties.get(\"not\");\n\n  const isRuleGroup = (type === \"rule_group\" && !isRoot);\n  const groupField = isRuleGroup && mode != \"struct\" ? field : parentField;\n  const groupOperator = properties.get(\"operator\");\n  const groupOperatorDefinition = groupOperator && getOperatorConfig(config, groupOperator, field) || null;\n  const formattedValue = formatItemValue(config, properties, meta, groupOperator, parentField);\n  const isGroup0 = isRuleGroup && (!groupOperator || groupOperatorDefinition.cardinality == 0);\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, false, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  \n  if (isRuleGroup && mode != \"struct\" && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size)\n      return undefined;\n  }\n\n  let resultQuery = {};\n  if (list.size == 1 && !isRoot)\n    resultQuery = list.first();\n  else\n    resultQuery[conj] = list.toList().toJS();\n  \n  // revert\n  if (not) {\n    resultQuery = { \"!\": resultQuery };\n  }\n\n  // rule_group (issue #246)\n  if (isRuleGroup && mode != \"struct\") {\n    const formattedField = formatField(meta, config, field, parentField);\n    if (isGroup0) {\n      // config.settings.groupOperators\n      const op = groupOperator || \"some\";\n      resultQuery = {\n        [op]: [\n          formattedField,\n          resultQuery\n        ]\n      };\n    } else {\n      // there is rule for count\n      const filter = !list.size \n        ? formattedField\n        : {\n          \"filter\": [\n            formattedField,\n            resultQuery\n          ]\n        };\n      const count = {\n        \"reduce\": [\n          filter,\n          { \"+\": [1, { var: \"accumulator\" }] },\n          0\n        ]\n      };\n      resultQuery = formatLogic(config, properties, count, formattedValue, groupOperator);\n    }\n  }\n  \n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  operatorOptions = operatorOptions ? operatorOptions.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDefinition.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field) || {};\n\n  // check op\n  let isRev = false;\n  if (!operatorDefinition.jsonLogic && !revOperatorDefinition.jsonLogic) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!operatorDefinition.jsonLogic && revOperatorDefinition.jsonLogic) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n  }\n\n  const formattedValue = formatItemValue(config, properties, meta, operator, parentField);\n  if (formattedValue === undefined)\n    return undefined;\n\n  const formattedField\n    = fieldSrc === \"func\"\n      ? formatFunc(meta, config, field, parentField)\n      : formatField(meta, config, field, parentField);\n  if (formattedField === undefined)\n    return undefined;\n\n  return formatLogic(config, properties, formattedField, formattedValue, operator, operatorOptions, fieldDefinition, isRev);\n};\n\n\nconst formatItemValue = (config, properties, meta, operator, parentField) => {\n  const field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (iValue == undefined)\n    return undefined;\n  \n  let valueSrcs = [];\n  let valueTypes = [];\n  let oldUsedFields = meta.usedFields;\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDef = omit( getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"] );\n    const fv = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDefinition, operator, operatorDefinition, parentField, asyncListValues\n    );\n    if (fv !== undefined) {\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (fvalue.size < cardinality || hasUndefinedValues) {\n    meta.usedFields = oldUsedFields; // restore\n    return undefined;\n  }\n  return cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else if (typeof fieldWidgetDef.jsonLogic === \"function\") {\n    const fn = fieldWidgetDef.jsonLogic;\n    const args = [\n      currentValue,\n      {\n        ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n        asyncListValues\n      },\n      //useful options: valueFormat for date/time\n      omit(fieldWidgetDef, widgetDefKeysToOmit),\n    ];\n    if (operator) {\n      args.push(operator);\n      args.push(operatorDef);\n    }\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    ret = currentValue;\n  }\n  return ret;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  if (!funcConfig?.jsonLogic) {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = omit( getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc), [\"factory\"] );\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, null, null, parentField\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = omit( getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc), [\"factory\"] );\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, null, null, parentField\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // uncomplete\n  }\n\n  const formattedArgsArr = Object.values(formattedArgs);\n  let ret;\n  if (typeof funcConfig.jsonLogic === \"function\") {\n    const fn = funcConfig.jsonLogic;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const funcName = funcConfig.jsonLogic || funcLastKey;\n    const isMethod = !!funcConfig.jsonLogicIsMethod;\n    if (isMethod) {\n      const [obj, ...params] = formattedArgsArr;\n      if (params.length) {\n        ret = { \"method\": [ obj, funcName, params ] };\n      } else {\n        ret = { \"method\": [ obj, funcName ] };\n      }\n    } else {\n      ret = { [funcName]: formattedArgsArr };\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (meta, config, field, parentField = null) => {\n  const {fieldSeparator, jsonLogic} = config.settings;\n\n  let ret;\n  if (field) {\n    if (Array.isArray(field))\n      field = field.join(fieldSeparator);\n    const fieldDef = getFieldConfig(config, field) || {};\n    const fieldName = formatFieldName(field, config, meta, parentField);\n\n    let varName = fieldDef.jsonLogicVar || (fieldDef.type == \"!group\" ? jsonLogic.groupVarKey : \"var\");\n    ret = { [varName] : fieldName };\n    if (meta.usedFields.indexOf(field) == -1)\n      meta.usedFields.push(field);\n  }\n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, formattedField, formattedValue) => {\n  let formatteOp = operator;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const isReverseArgs = defaultValue(operatorDefinition._jsonLogicIsRevArgs, false);\n  if (typeof operatorDefinition.jsonLogic == \"string\")\n    formatteOp = operatorDefinition.jsonLogic;\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  const eqOps = [\"==\", \"!=\"];\n  const fn = (field, op, val, opDef, opOpts) => {\n    if (cardinality == 0 && eqOps.includes(formatteOp))\n      return { [formatteOp]: [formattedField, null] };\n    else if (cardinality == 0)\n      return { [formatteOp]: formattedField };\n    else if (cardinality == 1 && isReverseArgs)\n      return { [formatteOp]: [formattedValue, formattedField] };\n    else if (cardinality == 1)\n      return { [formatteOp]: [formattedField, formattedValue] };\n    else if (cardinality == 2 && rangeOps.includes(formatteOp))\n      return { [formatteOp]: [formattedValue[0], formattedField, formattedValue[1]] };\n    else\n      return { [formatteOp]: [formattedField, ...formattedValue] };\n  };\n  return fn;\n};\n\nconst formatLogic = (config, properties, formattedField, formattedValue, operator, operatorOptions = null, fieldDefinition = null, isRev = false) => {\n  const field = properties.get(\"field\");\n  //const fieldSrc = properties.get(\"fieldSrc\");\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let fn = typeof operatorDefinition.jsonLogic == \"function\" \n    ? operatorDefinition.jsonLogic \n    : buildFnToFormatOp(operator, operatorDefinition, formattedField, formattedValue);\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    omit(operatorDefinition, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n  ];\n  let ruleQuery = fn.call(config.ctx, ...args);\n\n  if (isRev) {\n    ruleQuery = { \"!\": ruleQuery };\n  }\n\n  return ruleQuery;\n};\n","import {defaultValue, widgetDefKeysToOmit, opDefKeysToOmit} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, extendConfig,\n} from \"../utils/configUtils\";\nimport {getFieldPathLabels, getWidgetForFieldOp, formatFieldName, completeValue} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {List, Map} from \"immutable\";\n\n\n// helpers\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const mongodbFormat = (tree, config) => {\n  return _mongodbFormat(tree, config, false);\n};\n\nexport const _mongodbFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem([], tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to MongoDb:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(parents, item, config, meta, _not, _canWrapExpr, _formatFieldName, _value);\n  } else if (type === \"rule\") {\n    return formatRule(parents, item, config, meta, _not, _canWrapExpr, _formatFieldName, _value);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\") || new List();\n  const {canShortMongoQuery, fieldSeparator} = config.settings;\n  const sep = fieldSeparator;\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  const groupField = type === \"rule_group\" ? properties.get(\"field\") : null;\n  const groupFieldName = formatFieldName(groupField, config, meta, realParentPath);\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode; //properties.get(\"mode\");\n  const canHaveEmptyChildren = groupField && mode == \"array\";\n\n  const not = _not ? !(properties.get(\"not\")) : (properties.get(\"not\"));\n  const list = children\n    .map((currentChild) => formatItem(\n      [...parents, item], currentChild, config, meta, not, mode != \"array\", mode == \"array\" ? (f => `$$el${sep}${f}`) : undefined)\n    )\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  let conjunctionDefinition = config.conjunctions[conjunction];\n  const reversedConj = conjunctionDefinition.reversedConj;\n  if (not && reversedConj) {\n    conjunction = reversedConj;\n    conjunctionDefinition = config.conjunctions[conjunction];\n  }\n  if (!conjunctionDefinition)\n    return undefined;\n  const mongoConj = conjunctionDefinition.mongoConj;\n\n  let resultQuery;\n  if (list.size == 1) {\n    resultQuery = list.first();\n  } else if (list.size > 1) {\n    const rules = list.toList().toJS();\n    const canShort = canShortMongoQuery && (mongoConj == \"$and\");\n    if (canShort) {\n      resultQuery = rules.reduce((acc, rule) => {\n        if (!acc) return undefined;\n        for (let k in rule) {\n          if (k[0] == \"$\") {\n            acc = undefined;\n            break;\n          }\n          if (acc[k] == undefined) {\n            acc[k] = rule[k];\n          } else {\n            // https://github.com/ukrbublik/react-awesome-query-builder/issues/182\n            let prev = acc[k], next = rule[k];\n            if (!isObject(prev)) {\n              prev = {\"$eq\": prev};\n            }\n            if (!isObject(next)) {\n              next = {\"$eq\": next};\n            }\n            const prevOp = Object.keys(prev)[0], nextOp = Object.keys(next)[0];\n            if (prevOp == nextOp) {\n              acc = undefined;\n              break;\n            }\n            acc[k] = Object.assign({}, prev, next);\n          }\n        }\n        return acc;\n      }, {});\n    }\n    if (!resultQuery) // can't be shorten\n      resultQuery = { [mongoConj] : rules };\n  }\n\n  if (groupField) {\n    if (mode == \"array\") {\n      const totalQuery = {\n        \"$size\": {\n          \"$ifNull\": [\n            \"$\" + groupFieldName,\n            []\n          ]\n        }\n      };\n      const filterQuery = resultQuery ? {\n        \"$size\": {\n          \"$ifNull\": [\n            {\n              \"$filter\": {\n                input: \"$\" + groupFieldName,\n                as: \"el\",\n                cond: resultQuery\n              }\n            },\n            []\n          ]\n        }\n      } : totalQuery;\n      resultQuery = formatItem(\n        parents, item.set(\"type\", \"rule\"), config, meta, false, false, (_f => filterQuery), totalQuery\n      );\n      resultQuery = { \"$expr\": resultQuery };\n    } else {\n      resultQuery = { [groupFieldName]: {\"$elemMatch\": resultQuery} };\n    }\n  }\n  return resultQuery;\n};\n\n\nconst formatRule = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  const properties = item.get(\"properties\") || new Map();\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  const iValue = properties.get(\"value\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  if (field == null || operator == null || iValue === undefined)\n    return undefined;\n\n  const fieldDef = getFieldConfig(config, field) || {};\n  let operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDefinition.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n\n  let not = _not;\n  if (not && reversedOp) {\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n    not = false;\n  }\n\n  let formattedField;\n  let useExpr = false;\n  if (fieldSrc == \"func\") {\n    [formattedField, useExpr] = formatFunc(meta, config, field, realParentPath);\n  } else {\n    formattedField = formatFieldName(field, config, meta, realParentPath);\n    if (_formatFieldName) {\n      useExpr = true;\n      formattedField = _formatFieldName(formattedField);\n    }\n  }\n  if (formattedField == undefined)\n    return undefined;\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n    const [fv, fvUseExpr] = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, realParentPath,  operator, operatorDefinition, asyncListValues\n    );\n    if (fv !== undefined) {\n      useExpr = useExpr || fvUseExpr;\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const wrapExpr = useExpr && _canWrapExpr;\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (fvalue.size < cardinality || hasUndefinedValues)\n    return undefined;\n  const formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n\n  //build rule\n  const fn = operatorDefinition.mongoFormatOp;\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  const args = [\n    formattedField,\n    operator,\n    _value !== undefined && formattedValue == null ? _value : formattedValue,\n    useExpr,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(operatorDefinition, opDefKeysToOmit),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ruleQuery = fn.call(config.ctx, ...args);\n  if (wrapExpr) {\n    ruleQuery = { \"$expr\": ruleQuery };\n  }\n  if (not) {\n    ruleQuery = { \"$not\": ruleQuery };\n  }\n  return ruleQuery;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, parentPath, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return [undefined, false];\n\n  let ret;\n  let useExpr = false;\n\n  if (valueSrc == \"field\") {\n    [ret, useExpr] = formatRightField(meta, config, currentValue, parentPath);\n  } else if (valueSrc == \"func\") {\n    [ret, useExpr] = formatFunc(meta, config, currentValue, parentPath);\n  } else {\n    if (typeof fieldWidgetDef.mongoFormatValue === \"function\") {\n      const fn = fieldWidgetDef.mongoFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = currentValue;\n    }\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatRightField = (meta, config, rightField, parentPath) => {\n  const {fieldSeparator} = config.settings;\n  let ret;\n  const useExpr = true;\n\n  if (rightField) {\n    const rightFieldDefinition = getFieldConfig(config, rightField) || {};\n    const fieldParts = getFieldParts(rightField, config);\n    const fieldPartsLabels = getFieldPathLabels(rightField, config);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n    const formatFieldFn = config.settings.formatField;\n    const rightFieldName = formatFieldName(rightField, config, meta, parentPath);\n    const formattedField = formatFieldFn(rightFieldName, fieldParts, fieldFullLabel, rightFieldDefinition, config, false);\n    ret = \"$\" + formattedField;\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentPath) => {\n  const useExpr = true;\n  let ret;\n\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return [undefined, false];\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = funcConfig.mongoFunc || funcLastKey;\n  const mongoArgsAsObject = funcConfig.mongoArgsAsObject;\n\n  let formattedArgs = {};\n  let argsCnt = 0;\n  let lastArg = undefined;\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    argsCnt++;\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = omit(getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc), [\"factory\"]);\n    const [formattedArgVal, _argUseExpr] = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return [undefined, false];\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = omit( getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc), [\"factory\"] );\n      let _;\n      ([formattedDefaultVal, _] = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n      ));\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return [undefined, false];\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n      lastArg = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return [undefined, false]; // uncomplete\n  }\n\n  if (typeof funcConfig.mongoFormatFunc === \"function\") {\n    const fn = funcConfig.mongoFormatFunc;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.mongoFormatFunc === null) {\n    meta.errors.push(`Functon ${funcName} is not supported`);\n    return [undefined, false];\n  } else {\n    if (mongoArgsAsObject)\n      ret = { [funcName]: formattedArgs };\n    else if (argsCnt == 1 && lastArg !== undefined)\n      ret = { [funcName]: lastArg };\n    else\n      ret = { [funcName]: Object.values(formattedArgs) };\n  }\n\n  return [ret, useExpr];\n};\n\n\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, extendConfig,\n} from \"../utils/configUtils\";\nimport {\n  getFieldPathLabels, getWidgetForFieldOp, formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {defaultValue, widgetDefKeysToOmit, opDefKeysToOmit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport {SqlString} from \"../utils/export\";\n\nexport const sqlFormat = (tree, config) => {\n  return _sqlFormat(tree, config, false);\n};\n\nexport const _sqlFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SQL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  const groupField = isRuleGroup ? properties.get(\"field\") : null;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode;\n  if (mode == \"array\") {\n    meta.errors.push(`Aggregation is not supported for ${groupField}`);\n  }\n\n  const not = properties.get(\"not\");\n  const canHaveEmptyChildren = false; //isRuleGroup && mode == \"array\";\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  return conjunctionDefinition.sqlFormatConj(list, conjunction, not);\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const sqlOp = operatorDefinition.sqlOp || operator;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, value, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp} ${value}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values.first();\n      const valTo = values.get(1);\n      return `${field} ${sqlOp} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = defaultValue(opDef.cardinality, 1);\n\n  // check op\n  let isRev = false;\n  const canFormatOp = opDef.sqlOp || opDef.sqlFormatOp;\n  const canFormatRevOp = revOpDef.sqlOp || revOpDef.sqlFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDefinition = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n    let fv = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDefinition, fieldDefinition, operator, opDef, asyncListValues\n    );\n    if (fv !== undefined) {\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (hasUndefinedValues || fvalue.size < cardinality)\n    return undefined;\n  const formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n\n  //find fn to format expr\n  const fn = opDef.sqlFormatOp || buildFnToFormatOp(operator, opDef);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n      \n  //format field\n  const formattedField = fieldSrc == \"func\"\n    ? formatFunc(meta, config, field)\n    : formatField(meta, config, field);\n  if (formattedField == undefined)\n    return undefined;\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n  ];\n\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n  if (isRev) {\n    ret = config.settings.sqlFormatReverse(ret);\n  }\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrcs.join(\", \")}`);\n    return undefined;\n  }\n  return ret;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue);\n  } else {\n    if (typeof fieldWidgetDef.sqlFormatValue === \"function\") {\n      const fn = fieldWidgetDef.sqlFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      if (Array.isArray(currentValue)) {\n        ret = currentValue.map(v => SqlString.escape(v));\n      } else {\n        ret = SqlString.escape(currentValue);\n      }\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsLabels = getFieldPathLabels(field, config);\n  const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n  const formatFieldFn = config.settings.formatField;\n  const fieldName = formatFieldName(field, config, meta, null, {useTableName: true});\n  const formattedField = formatFieldFn(fieldName, fieldParts, fieldFullLabel, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue) => {\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = funcConfig.sqlFunc || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // uncomplete\n  }\n\n  let ret;\n  if (typeof funcConfig.sqlFormatFunc === \"function\") {\n    const fn = funcConfig.sqlFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(formattedArgs)\n      .map(([k, v]) => v)\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, extendConfig,\n} from \"../utils/configUtils\";\nimport {\n  getFieldPathLabels, getWidgetForFieldOp, formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {defaultValue, widgetDefKeysToOmit, opDefKeysToOmit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\n\n\nexport const queryString = (item, config, isForDisplay = false) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(item, extendedConfig, meta, isForDisplay, null);\n\n  if (meta.errors.length)\n    console.warn(\"Errors while exporting to string:\", meta.errors);\n  return res;\n};\n\n\nconst formatItem = (item, config, meta, isForDisplay = false, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") ) {\n    return formatGroup(item, config, meta, isForDisplay, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, isForDisplay, parentField);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta, isForDisplay = false, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  // TIP: don't cut group for mode == 'struct' and don't do aggr format (maybe later)\n  const groupField = isRuleGroup && mode == \"array\" ? properties.get(\"field\") : null;\n  const canHaveEmptyChildren = isRuleGroup && mode == \"array\";\n  const not = properties.get(\"not\");\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, isForDisplay, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  const conjStr = list.size ? conjunctionDefinition.formatConj(list, conjunction, not, isForDisplay) : null;\n  \n  let ret;\n  if (groupField) {\n    const aggrArgs = formatRule(item, config, meta, isForDisplay, parentField, true);\n    if (aggrArgs) {\n      const isRev = aggrArgs.pop();\n      const args = [\n        conjStr,\n        ...aggrArgs\n      ];\n      ret = config.settings.formatAggr(...args);\n      if (isRev) {\n        ret = config.settings.formatReverse(ret, null, null, null, null, isForDisplay);\n      }\n    }\n  } else {\n    ret = conjStr;\n  }\n\n  return ret;\n};\n\n\nconst formatItemValue = (config, properties, meta, _operator, isForDisplay, parentField) => {\n  const field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operator = _operator || properties.get(\"operator\");\n  const operatorDef = getOperatorConfig(config, operator, field) || {};\n  const cardinality = defaultValue(operatorDef.cardinality, 1);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n      let fv = formatValue(\n        config, meta, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, isForDisplay, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (!( hasUndefinedValues || fvalue.size < cardinality )) {\n      formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n    }\n  }\n\n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const fop = operatorDefinition.labelForFormat || operator;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} ${fop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} ${fop} ${values}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const valFrom = values.first();\n      const valTo = values.get(1);\n      return `${field} ${fop} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta, isForDisplay = false, parentField = null, returnArgs = false) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  if (field == null || operator == null)\n    return undefined;\n  \n  const fieldDef = getFieldConfig(config, field) || {};\n  let operatorDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDef.reversedOp;\n  let revOperatorDef = getOperatorConfig(config, reversedOp, field) || {};\n  \n  //check op\n  let isRev = false;\n  let fn = operatorDef.formatOp;\n  if (!fn && reversedOp) {\n    fn = revOperatorDef.formatOp;\n    if (fn) {\n      isRev = true;\n      [operator, reversedOp] = [reversedOp, operator];\n      [operatorDef, revOperatorDef] = [revOperatorDef, operatorDef];\n    }\n  }\n\n  //find fn to format expr\n  if (!fn)\n    fn = buildFnToFormatOp(operator, operatorDef);\n  if (!fn)\n    return undefined;\n\n  //format field\n  const formattedField = fieldSrc === \"func\"\n    ? formatFunc(config, meta, field, isForDisplay, parentField)\n    : formatField(config, meta, field, isForDisplay, parentField);\n  if (formattedField == undefined)\n    return undefined;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, operator, isForDisplay, parentField\n  );\n  if (formattedValue === undefined)\n    return undefined;\n\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(operatorDef, opDefKeysToOmit),\n    operatorOptions,\n    isForDisplay,\n    fieldDef,\n    isRev,\n  ];\n\n  if (returnArgs) {\n    return args;\n  } else {\n    //format expr\n    let ret = fn.call(config.ctx, ...args);\n\n    //rev\n    if (isRev) {\n      ret = config.settings.formatReverse(ret, operator, reversedOp, operatorDef, revOperatorDef, isForDisplay);\n    }\n\n    return ret;\n  }\n};\n\n\nconst formatValue = (config, meta, value, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, opDef, isForDisplay, parentField = null, asyncListValues) => {\n  if (value === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(config, meta, value, isForDisplay, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(config, meta, value, isForDisplay, parentField);\n  } else {\n    if (typeof fieldWidgetDef.formatValue === \"function\") {\n      const fn = fieldWidgetDef.formatValue;\n      const args = [\n        value,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n        isForDisplay\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(opDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, value) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = value;\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (config, meta, field, isForDisplay, parentField = null, cutParentField = true) => {\n  const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n  let ret = null;\n  if (field) {\n    const fieldDefinition = getFieldConfig(config, field) || {};\n    const fieldParts = getFieldParts(field, config);\n    const fieldPartsLabels = getFieldPathLabels(field, config, cutParentField ? parentField : null);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparatorDisplay) : null;\n    const fieldLabel2 = fieldDefinition.label2 || fieldFullLabel;\n    const formatFieldFn = config.settings.formatField;\n    const fieldName = formatFieldName(field, config, meta, cutParentField ? parentField : null, {useTableName: true});\n    ret = formatFieldFn(fieldName, fieldParts, fieldLabel2, fieldDefinition, config, isForDisplay);\n  }\n  return ret;\n};\n\n\nconst formatFunc = (config, meta, funcValue, isForDisplay, parentField = null) => {\n  const funcKey = funcValue.get(\"func\");\n  const args = funcValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = isForDisplay && funcConfig.label || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  let formattedArgsWithNames = {};\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argName = isForDisplay && argConfig.label || argKey;\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      config, meta, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, isForDisplay, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      formattedDefaultVal = formatValue(\n        config, meta, defaultValue, defaultValueSrc, argConfig.type, fieldDef, argConfig, null, null, isForDisplay, parentField, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const [missedArgKey, missedArgName] of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n          //formattedArgsWithNames[missedArgName] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n      formattedArgsWithNames[argName] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push([argKey, argName]);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // uncomplete\n  }\n\n  let ret = null;\n  if (typeof funcConfig.formatFunc === \"function\") {\n    const fn = funcConfig.formatFunc;\n    const args = [\n      formattedArgs,\n      isForDisplay\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(isForDisplay ? formattedArgsWithNames : formattedArgs)\n      .map(([k, v]) => (isForDisplay ? `${k}: ${v}` : `${v}`))\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\n\n\n/**\n * Converts a string representation of top_left and bottom_right cords to\n * a ES geo_point required for query\n *\n * @param {string} geoPointString - comma separated string of lat/lon coods\n * @returns {{top_left: {lon: number, lat: number}, bottom_right: {lon: number, lat: number}}} - ES geoPoint formatted object\n * @private\n */\nfunction buildEsGeoPoint(geoPointString) {\n  if (geoPointString == null) {\n    return null;\n  }\n\n  const coordsNumberArray = geoPointString.split(\",\").map(Number);\n  return {\n    top_left: {\n      lat: coordsNumberArray[0],\n      lon: coordsNumberArray[1]\n    },\n    bottom_right: {\n      lat: coordsNumberArray[2],\n      lon: coordsNumberArray[3]\n    }\n  };\n}\n\n/**\n * Converts a dateTime string from the query builder to a ES range formatted object\n *\n * @param {string} dateTime - dateTime formatted string\n * @param {string} operator - query builder operator type, see constants.js and query builder docs\n * @returns {{lt: string}|{lte: string}|{gte: string}|{gte: string, lte: string}|undefined} - ES range query parameter\n *\n * @private\n */\nfunction buildEsRangeParameters(value, operator) {\n  // -- if value is greater than 1 then we assume this is a between operator : BUG this is wrong, a selectable list can have multiple values\n  if (value.length > 1) {\n    return {\n      gte: \"\".concat(value[0]),\n      lte: \"\".concat(value[1])\n    };\n  } // -- if value is only one we assume this is a date time query for a specific day\n\n  const dateTime = value[0]; //TODO: Rethink about this part, what if someone adds a new type of opperator\n\n  //todo: move this logic into config\n  switch (operator) {\n  case \"on_date\": //todo: not used\n  case \"not_on_date\":\n  case \"equal\":\n  case \"select_equals\":\n  case \"not_equal\":\n    return {\n      gte: \"\".concat(dateTime, \"||/d\"),\n      lte: \"\".concat(dateTime, \"||+1d\")\n    };\n\n  case \"less_or_equal\":\n    return {\n      lte: \"\".concat(dateTime)\n    };\n\n  case \"greater_or_equal\":\n    return {\n      gte: \"\".concat(dateTime)\n    };\n\n  case \"less\":\n    return {\n      lt: \"\".concat(dateTime)\n    };\n\n  case \"greater\":\n    return {\n      gt: \"\".concat(dateTime)\n    };\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Builds the DSL parameters for a Wildcard query\n *\n * @param {string} value - The match value\n * @returns {{value: string}} - The value = value parameter surrounded with * on each end\n * @private\n */\nfunction buildEsWildcardParameters(value) {\n  return {\n    value: \"*\" + value + \"*\"\n  };\n}\n\n/**\n * Takes the match type string from awesome query builder like 'greater_or_equal' and\n * returns the ES occurrence required for bool queries\n *\n * @param {string} combinator - query group type or rule condition\n * @param {bool} not\n * @returns {string} - ES occurrence type. See constants.js\n * @private\n */\nfunction determineOccurrence(combinator, not) {\n  //todo: move into config, like mongoConj\n  switch (combinator) {\n  case \"AND\":\n    return not ? \"must_not\" : \"must\";\n    // -- AND\n\n  case \"OR\":\n    return not ? \"should_not\" : \"should\";\n    // -- OR\n\n  case \"NOT\":\n    return not ? \"must\" : \"must_not\";\n    // -- NOT AND\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Determines what field to query off of given the operator type\n *\n * @param {string} fieldDataType - The type of data\n * @param {string} fullFieldName - A '.' separated string containing the property lineage (including self)\n * @param {string} queryType - The query type\n * @returns {string|*} - will be either the fullFieldName or fullFieldName.keyword\n * @private\n */\n//todo: not used\n// function determineQueryField(fieldDataType, fullFieldName, queryType) {\n//   if (fieldDataType === \"boolean\") {\n//     return fullFieldName;\n//   }\n\n//   switch (queryType) {\n//   case \"term\":\n//   case \"wildcard\":\n//     return \"\".concat(fullFieldName, \".keyword\");\n\n//   case \"geo_bounding_box\":\n//   case \"range\":\n//   case \"match\":\n//     return fullFieldName;\n\n//   default:\n//     console.error(\"Can't determine query field for query type \".concat(queryType));\n//     return null;\n//   }\n// }\n\nfunction buildRegexpParameters(value) {\n  return {\n    value: value\n  };\n}\n\nfunction determineField(fieldName, config) {\n  //todo: ElasticSearchTextField - not used\n  //return config.fields[fieldName].ElasticSearchTextField || fieldName;\n  return fieldName;\n}\n\nfunction buildParameters(queryType, value, operator, fieldName, config, syntax) {\n  const textField = determineField(fieldName, config);\n  switch (queryType) {\n  case \"filter\":\n    //todo: elasticSearchScript - not used\n    return {\n      script: config.operators[operator].elasticSearchScript(fieldName, value)\n    };\n\n  case \"exists\":\n    return { field: fieldName };\n\n  case \"match\":\n    return { [textField]: value[0] };\n\n  case \"term\":\n    return syntax === ES_7_SYNTAX\n      ? { [fieldName]: {\n        value: value[0]\n      }} : { [fieldName]: value[0] };\n\n  //todo: not used\n  // need to add geo type into RAQB or remove this code\n  case \"geo_bounding_box\":\n    return { [fieldName]: buildEsGeoPoint(value[0]) };\n\n  case \"range\":\n    return { [fieldName]: buildEsRangeParameters(value, operator) };\n\n  case \"wildcard\":\n    return { [fieldName]: buildEsWildcardParameters(value[0]) };\n\n  case \"regexp\":\n    return { [fieldName]: buildRegexpParameters(value[0]) };\n\n  default:\n    return undefined;\n  }\n}\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {string} fieldName - The name of the field you are building a rule for\n * @param {string} fieldDataType - The type of data this field holds\n * @param {string} value - The value of this rule\n * @param {string} operator - The condition on how the value is matched\n * @param {string} syntax - The version of ElasticSearch syntax to generate\n * @returns {object} - The ES rule\n * @private\n */\nfunction buildEsRule(fieldName, value, operator, config, valueSrc, syntax) {\n  if (!fieldName || !operator || value == undefined)\n    return undefined; // rule is not fully entered\n  let op = operator;\n  let opConfig = config.operators[op];\n  if (!opConfig)\n    return undefined; // unknown operator\n  let { elasticSearchQueryType } = opConfig;\n\n  // not\n  let not = false;\n  if (!elasticSearchQueryType && opConfig.reversedOp) {\n    not = true;\n    op = opConfig.reversedOp;\n    opConfig = config.operators[op];\n    ({ elasticSearchQueryType } = opConfig);\n  }\n  \n  // handle if value 0 has multiple values like a select in a array\n  const widget = getWidgetForFieldOp(config, fieldName, op, valueSrc);\n  const widgetConfig = config.widgets[widget];\n  if (!widgetConfig)\n    return undefined; // unknown widget\n  const { elasticSearchFormatValue } = widgetConfig;\n\n  /** In most cases the queryType will be static however in some casese (like between) the query type will change\n   * based on the data type. i.e. a between time will be different than between number, date, letters etc... */\n  let queryType;\n  if (typeof elasticSearchQueryType === \"function\") {\n    queryType = elasticSearchQueryType(widget);\n  } else {\n    queryType = elasticSearchQueryType;\n  }\n\n  if (!queryType) {\n    // Not supported\n    return undefined;\n  }\n\n  /** If a widget has a rule on how to format that data then use that otherwise use default way of determineing search parameters\n   * */\n  let parameters;\n  if (typeof elasticSearchFormatValue === \"function\") {\n    parameters = elasticSearchFormatValue(queryType, value, op, fieldName, config);\n  } else {\n    parameters = buildParameters(queryType, value, op, fieldName, config, syntax);\n  }\n\n  if (not) {\n    return {\n      bool: {\n        must_not: {\n          [queryType]: {...parameters}\n        }\n      }\n    };\n  } else {\n    return {\n      [queryType]: {...parameters}\n    };\n  }\n}\n\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {object} children - The contents of the group\n * @param {string} conjunction - The way the contents of the group are joined together i.e. AND OR\n * @param {bool} not\n * @param {Function} recursiveFxn - The recursive fxn to build the contents of the groups children\n * @private\n * @returns {object} - The ES group\n */\nfunction buildEsGroup(children, conjunction, not, recursiveFxn, config, syntax) {\n  if (!children || !children.size)\n    return undefined;\n  const childrenArray = children.valueSeq().toArray();\n  const occurrence = determineOccurrence(conjunction, not);\n  const result = childrenArray.map((c) => recursiveFxn(c, config, syntax)).filter(v => v !== undefined);\n  if (!result.length)\n    return undefined;\n  const resultFlat = result.flat(Infinity);\n  return {\n    bool: {\n      [occurrence]: resultFlat\n    }\n  };\n}\n\nexport const ES_7_SYNTAX = \"ES_7_SYNTAX\";\nexport const ES_6_SYNTAX = \"ES_6_SYNTAX\";\n\nexport function elasticSearchFormat(tree, config, syntax = ES_6_SYNTAX) {\n  // -- format the es dsl here\n  if (!tree) return undefined;\n  const type = tree.get(\"type\");\n  const properties = tree.get(\"properties\") || new Map();\n\n  if (type === \"rule\" && properties.get(\"field\")) {\n    // -- field is null when a new blank rule is added\n    const operator = properties.get(\"operator\");\n    const field = properties.get(\"field\");\n    const fieldSrc = properties.get(\"fieldSrc\");\n    const value = properties.get(\"value\").toJS();\n    const _valueType = properties.get(\"valueType\")?.get(0);\n    const valueSrc = properties.get(\"valueSrc\")?.get(0);\n\n    if (valueSrc === \"func\" || fieldSrc == \"func\") {\n      // -- elastic search doesn't support functions (that is post processing)\n      return;\n    }\n\n    if (value && Array.isArray(value[0])) {\n      //TODO : Handle case where the value has multiple values such as in the case of a list\n      return value[0].map((val) =>\n        buildEsRule(field, [val], operator, config, valueSrc, syntax)\n      );\n    } else {\n      return buildEsRule(field, value, operator, config, valueSrc, syntax);\n    }\n  }\n\n  if (type === \"group\" || type === \"rule_group\") {\n    const not = properties.get(\"not\");\n    let conjunction = properties.get(\"conjunction\");\n    if (!conjunction)\n      conjunction = defaultConjunction(config);\n    const children = tree.get(\"children1\");\n    return buildEsGroup(children, conjunction, not, elasticSearchFormat, config, syntax);\n  }\n}\n","import {sleep} from \"./stuff\";\nimport {listValuesToArray, getListValue, makeCustomListValue} from \"./listValues\";\n\n// simple polyfill for Next\nconst findLastIndex = (arr, fn) => {\n  if (arr.findLastIndex) {\n    return arr.findLastIndex(fn);\n  } else {\n    const ind = [...arr].reverse().findIndex(fn);\n    return ind == -1 ? -1 : (arr.length-1 - ind);\n  }\n};\n\nexport const simulateAsyncFetch = (all, cPageSize = 0, delay = 1000) => async (search, offset, meta) => {\n  const pageSize = meta?.pageSize != undefined ? meta.pageSize : cPageSize;\n  const filtered = listValuesToArray(all)\n    .filter(({title, value}) => search == null ? true : (\n      title.toUpperCase().indexOf(search.toUpperCase()) != -1\n      || `${value}`.toUpperCase().indexOf(search.toUpperCase()) != -1\n    ));\n  const pages = pageSize ? Math.ceil(filtered.length / pageSize) : 0;\n  const currentOffset = offset || 0;\n  const currentPage = pageSize ? Math.ceil(currentOffset / pageSize) : null;\n  const values = pageSize ? filtered.slice(currentOffset, currentOffset + pageSize) : filtered;\n  const newOffset = pageSize ? currentOffset + values.length : null;\n  const hasMore = pageSize ? (newOffset < filtered.length) : false;\n  if (delay) {\n    // console.debug(\"simulateAsyncFetch\", {\n    //   search, offset, values, hasMore, filtered\n    // });\n    await sleep(delay);\n  }\n  return {\n    values,\n    hasMore\n  };\n};\n\nexport const mergeListValues = (values, newValues, toStart = false, hideNewValues = false) => {\n  if (!newValues)\n    return values;\n  const old = values || [];\n  const newFiltered = newValues\n    .filter(v => old.find(av => \"\"+av.value == \"\"+v.value) == undefined)\n    .map(v => (hideNewValues ? {...v, isHidden: true} : v));\n  const merged = toStart ? [...newFiltered, ...old] : [...old, ...newFiltered];\n  return merged;\n};\n\nexport const optionToListValue = (val, listValues, allowCustomValues) => {\n  const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n  const item = getListValue(v, listValues);\n  const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n  const listValue = item || customItem;\n  const lvs = listValue ? [listValue] : undefined; //not allow []\n  return [v, lvs];\n};\n\nexport const optionsToListValues = (vals, listValues, allowCustomValues) => {\n  const newSelectedListValues = vals.map((val, _i) => {\n    const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n    const item = getListValue(v, listValues);\n    const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n    const listValue = item || customItem;\n    return listValue;\n  }).filter(o => o != undefined);\n  let newSelectedValues = newSelectedListValues\n    .map(o => (o?.value ?? o));\n  if (!newSelectedValues.length)\n    newSelectedValues = undefined; //not allow []\n  return [newSelectedValues, newSelectedListValues];\n};\n\nexport const listValueToOption = (lv) => {\n  if (lv == null) return null;\n  const {\n    title, value, disabled, groupTitle, grouplabel, renderTitle, children, label, isCustom, isHidden,\n    ...rest\n  } = lv;\n  let option = {\n    value,\n    title: title || label || children, // fix issue #930 for AntD\n  };\n  if (disabled)\n    option.disabled = disabled;\n  if (isCustom)\n    option.isCustom = isCustom;\n  if (isHidden)\n    option.isHidden = isHidden;\n  // group\n  if (groupTitle || grouplabel)\n    option.groupTitle = groupTitle || grouplabel;\n  // used only for MUI field autocomplete (if matchesType, render as bold)\n  if (renderTitle)\n    option.renderTitle = renderTitle;\n  option = {\n    ...option,\n    ...rest,\n  };\n  return option;\n};\n\nexport const fixListValuesGroupOrder = (listValues) => {\n  let newValues = [];\n  let groupTitles = [];\n  for (let lv of listValues) {\n    const i = findLastIndex(newValues, lv1 => {\n      return (lv1.groupTitle ?? \"\") == (lv.groupTitle ?? \"\");\n    });\n    if (lv.groupTitle != undefined && !groupTitles.includes(lv.groupTitle)) {\n      groupTitles.push(lv.groupTitle);\n      if (groupTitles.length === 1) {\n        // fix empty groupTitles\n        newValues = newValues.map(nv => ({...nv, groupTitle: \"\"}));\n      }\n    }\n    if (lv.groupTitle == undefined && groupTitles.length) {\n      // fix empty groupTitle\n      lv = {...lv, groupTitle: \"\"};\n    }\n    if (i != -1) {\n      newValues.splice(i+1, 0, lv);\n    } else {\n      newValues.push(lv);\n    }\n  }\n  return newValues;\n};\n\n\nexport { getListValue };\n","//import { customJsonLogicOperations } from \"../utils/jsonLogic\";\n\n// Tip: search for `customJsonLogicOperations` in codebase to see custom JL funcs we use in `jsonLogicCustomOps`\n\nconst NOW = {\n  label: \"Now\",\n  returnType: \"datetime\",\n  jsonLogic: \"now\",\n  jsonLogicCustomOps: {\n    now: {},\n  },\n  //spelFunc: \"new java.util.Date()\",\n  spelFunc: \"T(java.time.LocalDateTime).now()\",\n  sqlFormatFunc: () => \"NOW()\",\n  mongoFormatFunc: () => new Date(),\n  formatFunc: () => \"NOW\",\n};\n\nconst RELATIVE_DATETIME = {\n  label: \"Relative\",\n  returnType: \"datetime\",\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\"\", \"\", \"\"],\n  spelFormatFunc: ({date, op, val, dim}) => {\n    const dimPlural = dim.charAt(0).toUpperCase() + dim.slice(1) + \"s\";\n    const method = op + dimPlural;\n    return `${date}.${method}(${val})`;\n  },\n  spelImport: (spel) => {\n    let date, op, val, dim;\n    const matchRes = spel.methodName?.match(/^(minus|plus)(\\w+)s$/);\n    if (matchRes) {\n      dim = matchRes[2].toLowerCase();\n      op = matchRes[1];\n      if ([\"minus\", \"plus\"].includes(op)) {\n        if ([\"day\", \"week\", \"month\", \"year\"].includes(dim)) {\n          op = {type: \"string\", val: op};\n          dim = {type: \"string\", val: dim};\n          val = spel.args[0];\n          date = spel.obj;\n          return {date, op, val, dim};\n        }\n      }\n    }\n  },\n  jsonLogic: ({date, op, val, dim}) => ({\n    \"date_add\": [\n      date,\n      val * (op == \"minus\" ? -1 : +1),\n      dim\n    ]\n  }),\n  jsonLogicImport: (v) => {\n    const date = v[\"date_add\"][0];\n    const val = Math.abs(v[\"date_add\"][1]);\n    const op = v[\"date_add\"][1] >= 0 ? \"plus\" : \"minus\";\n    const dim = v[\"date_add\"][2];\n    return [date, op, val, dim];\n  },\n  jsonLogicCustomOps: {\n    date_add: {},\n  },\n  // MySQL\n  //todo: other SQL dialects?\n  sqlFormatFunc: ({date, op, val, dim}) => `DATE_ADD(${date}, INTERVAL ${parseInt(val) * (op == \"minus\" ? -1 : +1)} ${dim.replace(/^'|'$/g, \"\")})`,\n  mongoFormatFunc: null, //todo: support?\n  formatFunc: ({date, op, val, dim}) => (!val ? date : `${date} ${op == \"minus\" ? \"-\" : \"+\"} ${val} ${dim}`),\n  args: {\n    date: {\n      label: \"Date\",\n      type: \"datetime\",\n      defaultValue: {func: \"NOW\", args: []},\n      valueSources: [\"func\", \"field\", \"value\"],\n      spelEscapeForFormat: true,\n    },\n    op: {\n      label: \"Op\",\n      type: \"select\",\n      defaultValue: \"plus\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          plus: \"+\",\n          minus: \"-\",\n        },\n      },\n      spelEscapeForFormat: false,\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      fieldSettings: {\n        min: 0,\n      },\n      defaultValue: 0,\n      valueSources: [\"value\"],\n      spelEscapeForFormat: false,\n    },\n    dim: {\n      label: \"Dimension\",\n      type: \"select\",\n      defaultValue: \"day\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          day: \"day\",\n          week: \"week\",\n          month: \"month\",\n          year: \"year\",\n        },\n      },\n      spelEscapeForFormat: false,\n    },\n  }\n};\n\nconst LOWER = {\n  label: \"Lowercase\",\n  mongoFunc: \"$toLower\",\n  jsonLogic: \"toLowerCase\",\n  spelFunc: \"${str}.toLowerCase()\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toLowerCase: {}\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\", \"func\"],\n    },\n  }\n};\n\nconst UPPER = {\n  label: \"Uppercase\",\n  mongoFunc: \"$toUpper\",\n  jsonLogic: \"toUpperCase\",\n  spelFunc: \"${str}.toUpperCase()\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toUpperCase: {},\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\", \"func\"],\n    },\n  }\n};\n\nconst LINEAR_REGRESSION = {\n  label: \"Linear regression\",\n  returnType: \"number\",\n  formatFunc: ({coef, bias, val}, _) => `(${coef} * ${val} + ${bias})`,\n  sqlFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelImport: (spel) => {\n    let coef, val, bias, a;\n    if (spel.type === \"op-plus\") {\n      [a, bias] = spel.children;\n      if (a.type === \"op-multiply\") {\n        [coef, val] = a.children;\n        return {coef, val, bias};\n      }\n    }\n  },\n  mongoFormatFunc: ({coef, bias, val}) => ({\"$sum\": [{\"$multiply\": [coef, val]}, bias]}),\n  jsonLogic: ({coef, bias, val}) => ({ \"+\": [ {\"*\": [coef, val]}, bias ] }),\n  jsonLogicImport: (v) => {\n    const coef = v[\"+\"][0][\"*\"][0];\n    const val = v[\"+\"][0][\"*\"][1];\n    const bias = v[\"+\"][1];\n    return [coef, val, bias];\n  },\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\" * \", \" + \"],\n  args: {\n    coef: {\n      label: \"Coef\",\n      type: \"number\",\n      defaultValue: 1,\n      valueSources: [\"value\"],\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      valueSources: [\"value\", \"field\"],\n    },\n    bias: {\n      label: \"Bias\",\n      type: \"number\",\n      defaultValue: 0,\n      valueSources: [\"value\"],\n    }\n  }\n};\n\nexport {\n  LOWER,\n  UPPER,\n  NOW,\n  RELATIVE_DATETIME,\n  LINEAR_REGRESSION,\n};\n","import moment from \"moment\";\nimport {\n  SqlString, sqlEmptyValue, mongoEmptyValue, spelEscape, spelFixList,\n  stringifyForDisplay\n} from \"../utils/export\";\nimport {escapeRegExp} from \"../utils/stuff\";\nimport {getTitleInListValues} from \"../utils/listValues\";\n\n// helpers for mongo format\nexport const mongoFormatOp1 = (mop, mc, not,  field, _op, value, useExpr, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  const mv = mc(value, fieldDef);\n  if (mv === undefined)\n    return undefined;\n  if (not) {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: { \"$ne\": mv } }; // short form\n    return !useExpr\n      ? { [field]: { \"$not\": { [mop]: mv } } } \n      : { \"$not\": { [mop]: [$field, mv] } };\n  } else {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: mv }; // short form\n    return !useExpr\n      ? { [field]: { [mop]: mv } } \n      : { [mop]: [$field, mv] };\n  }\n};\n\nexport const mongoFormatOp2 = (mops, not,  field, _op, values, useExpr, valueSrcs, valueTypes, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  if (not) {\n    return !useExpr\n      ? { [field]: { \"$not\": { [mops[0]]: values[0], [mops[1]]: values[1] } } } \n      : {\"$not\":\n                {\"$and\": [\n                  { [mops[0]]: [ $field, values[0] ] },\n                  { [mops[1]]: [ $field, values[1] ] },\n                ]}\n      };\n  } else {\n    return !useExpr\n      ? { [field]: { [mops[0]]: values[0], [mops[1]]: values[1] } } \n      : {\"$and\": [\n        { [mops[0]]: [ $field, values[0] ] },\n        { [mops[1]]: [ $field, values[1] ] },\n      ]};\n  }\n};\n\nconst ctx = {\n  utils: {\n    SqlString,\n    moment,\n    mongoFormatOp1,\n    mongoFormatOp2,\n    mongoEmptyValue,\n    escapeRegExp,\n    sqlEmptyValue,\n    stringifyForDisplay,\n    getTitleInListValues,\n    spelEscape,\n    spelFixList,\n  },\n};\n\nexport default ctx;\n","import {settings as defaultSettings} from \"./default\";\nimport ctx from \"./ctx\";\n\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  AND: {\n    label: \"And\",\n    mongoConj: \"$and\",\n    jsonLogicConj: \"and\",\n    sqlConj: \"AND\",\n    spelConj: \"and\",\n    spelConjs: [\"and\", \"&&\"],\n    reversedConj: \"OR\",\n    formatConj: (children, conj, not, isForDisplay) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"AND\" : \"&&\") + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: (children, conj, not) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"AND\" + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    spelFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"&&\" + \" \") + (omitBrackets ? \"\" : \")\")\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n  },\n  OR: {\n    label: \"Or\",\n    mongoConj: \"$or\",\n    jsonLogicConj: \"or\",\n    sqlConj: \"OR\",\n    spelConj: \"or\",\n    spelConjs: [\"or\", \"||\"],\n    reversedConj: \"AND\",\n    formatConj: (children, conj, not, isForDisplay) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"OR\" : \"||\") + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: (children, conj, not) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"OR\" + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    spelFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"||\" + \" \") + (omitBrackets ? \"\" : \")\")\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n  },\n};\n\n//----------------------------  operators\n\n\n\nconst operators = {\n  equal: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    reversedOp: \"not_equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      const opStr = isForDisplay ? \"=\" : opDef.label;\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `NOT ${field}` : `${field}`;\n      else\n        return `${field} ${opStr} ${value}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  not_equal: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    reversedOp: \"equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `${field}` : `NOT ${field}`;\n      else\n        return `${field} ${opDef.label} ${value}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    jsonLogic: \"!=\",\n  },\n  less: {\n    label: \"<\",\n    labelForFormat: \"<\",\n    sqlOp: \"<\",\n    spelOp: \"<\",\n    spelOps: [\"<\", \"lt\"],\n    reversedOp: \"greater_or_equal\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$lt\", v => v, false, ...args); },\n    jsonLogic: \"<\",\n    elasticSearchQueryType: \"range\",\n  },\n  less_or_equal: {\n    label: \"<=\",\n    labelForFormat: \"<=\",\n    sqlOp: \"<=\",\n    spelOp: \"<=\",\n    spelOps: [\"<=\", \"le\"],\n    reversedOp: \"greater\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$lte\", v => v, false, ...args); },\n    jsonLogic: \"<=\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater: {\n    label: \">\",\n    labelForFormat: \">\",\n    sqlOp: \">\",\n    spelOp: \">\",\n    spelOps: [\">\", \"gt\"],\n    reversedOp: \"less_or_equal\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gt\", v => v, false, ...args); },\n    jsonLogic: \">\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater_or_equal: {\n    label: \">=\",\n    labelForFormat: \">=\",\n    sqlOp: \">=\",\n    spelOp: \">=\",\n    spelOps: [\">=\", \"ge\"],\n    reversedOp: \"less\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gte\", v => v, false, ...args); },\n    jsonLogic: \">=\",\n    elasticSearchQueryType: \"range\",\n  },\n  like: {\n    label: \"Contains\",\n    labelForFormat: \"Contains\",\n    reversedOp: \"not_like\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.contains(${1})\",\n    valueTypes: [\"text\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined), false, ...args); },\n    //jsonLogic: (field, op, val) => ({ \"in\": [val, field] }),\n    jsonLogic: \"in\",\n    _jsonLogicIsRevArgs: true,\n    valueSources: [\"value\"],\n    elasticSearchQueryType: \"regexp\",\n  },\n  not_like: {\n    isNotOp: true,\n    label: \"Not contains\",\n    reversedOp: \"like\",\n    labelForFormat: \"Not Contains\",\n    sqlOp: \"NOT LIKE\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined), true, ...args); },\n    valueSources: [\"value\"],\n  },\n  starts_with: {\n    label: \"Starts with\",\n    labelForFormat: \"Starts with\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.startsWith(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? \"^\" + this.utils.escapeRegExp(v) : undefined), false, ...args); },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  ends_with: {\n    label: \"Ends with\",\n    labelForFormat: \"Ends with\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.endsWith(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) + \"$\" : undefined), false, ...args); },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  between: {\n    label: \"Between\",\n    labelForFormat: \"BETWEEN\",\n    sqlOp: \"BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], false, ...args); },\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"not_between\",\n    jsonLogic: \"<=\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1] ? null : \"Invalid range\";\n      }\n      return null;\n    },\n    elasticSearchQueryType: function elasticSearchQueryType(type) {\n      return type === \"time\" ? \"filter\" : \"range\";\n    },\n  },\n  not_between: {\n    isNotOp: true,\n    label: \"Not between\",\n    labelForFormat: \"NOT BETWEEN\",\n    sqlOp: \"NOT BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} NOT BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], true, ...args); },\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"between\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1] ? null : \"Invalid range\";\n      }\n      return null;\n    },\n  },\n  is_empty: {\n    label: \"Is empty\",\n    labelForFormat: \"IS EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_not_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS EMPTY` : `!${field}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) = ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is empty or null\n      return `${field} <= ''`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null], false, ...args); },\n    jsonLogic: \"!\",\n  },\n  is_not_empty: {\n    isNotOp: true,\n    label: \"Is not empty\",\n    labelForFormat: \"IS NOT EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT EMPTY` : `!!${field}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) <> ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is not empty and not null\n      return `${field} > ''`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$nin\", (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null], false, ...args); },\n    jsonLogic: \"!!\",\n    elasticSearchQueryType: \"exists\",\n  },\n  is_null: {\n    label: \"Is null\",\n    labelForFormat: \"IS NULL\",\n    sqlOp: \"IS NULL\",\n    cardinality: 0,\n    reversedOp: \"is_not_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NULL` : `!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} == null`;\n    },\n    // check if value is null OR not exists\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => null, false, ...args); },\n    jsonLogic: \"==\",\n  },\n  is_not_null: {\n    label: \"Is not null\",\n    labelForFormat: \"IS NOT NULL\",\n    sqlOp: \"IS NOT NULL\",\n    cardinality: 0,\n    reversedOp: \"is_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT NULL` : `!!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} != null`;\n    },\n    // check if value exists and is not null\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => null, false, ...args); },\n    jsonLogic: \"!=\",\n    elasticSearchQueryType: \"exists\",\n  },\n  select_equals: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      return `${field} ${opStr} ${value}`;\n    },\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    reversedOp: \"select_not_equals\",\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_equals: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} != ${value}`;\n    },\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    reversedOp: \"select_equals\",\n    jsonLogic: \"!=\",\n  },\n  select_any_in: {\n    label: \"Any in\",\n    labelForFormat: \"IN\",\n    sqlOp: \"IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} IN (${values.join(\", \")})`;\n      else\n        return `${field} IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    valueTypes: [\"multiselect\"],\n    spelOp: \"${1}.contains(${0})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", v => v, false, ...args); },\n    reversedOp: \"select_not_any_in\",\n    jsonLogic: \"in\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_any_in: {\n    isNotOp: true,\n    label: \"Not in\",\n    labelForFormat: \"NOT IN\",\n    sqlOp: \"NOT IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT IN (${values.join(\", \")})`;\n      else\n        return `${field} NOT IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} NOT IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$nin\", v => v, false, ...args); },\n    reversedOp: \"select_any_in\",\n  },\n  // it's not \"contains all\", but \"contains any\" operator\n  multiselect_contains: {\n    label: \"Contains\",\n    labelForFormat: \"CONTAINS\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_not_contains\",\n    jsonLogic2: \"some-in\",\n    jsonLogic: (field, op, vals) => ({\n      \"some\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    //spelOp: \"${0}.containsAll(${1})\",\n    spelOp: \"T(CollectionUtils).containsAny(${0}, ${1})\",\n    elasticSearchQueryType: \"term\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", v => v, false, ...args); },\n  },\n  multiselect_not_contains: {\n    isNotOp: true,\n    label: \"Not contains\",\n    labelForFormat: \"NOT CONTAINS\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} NOT CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_contains\"\n  },\n  multiselect_equals: {\n    label: \"Equals\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      if (valueSrc == \"value\")\n        return `${field} ${opStr} [${values.join(\", \")}]`;\n      else\n        return `${field} ${opStr} ${values}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} = '${values.map(v => this.utils.SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    spelOp: \"${0}.equals(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    reversedOp: \"multiselect_not_equals\",\n    jsonLogic2: \"all-in\",\n    jsonLogic: (field, op, vals) => ({\n      // it's not \"equals\", but \"includes\" operator - just for example\n      \"all\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    elasticSearchQueryType: \"term\",\n  },\n  multiselect_not_equals: {\n    isNotOp: true,\n    label: \"Not equals\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} != [${values.join(\", \")}]`;\n      else\n        return `${field} != ${values}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} != '${values.map(v => this.utils.SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    reversedOp: \"multiselect_equals\",\n  },\n  proximity: {\n    label: \"Proximity search\",\n    cardinality: 2,\n    valueLabels: [\n      { label: \"Word 1\", placeholder: \"Enter first word\" },\n      { label: \"Word 2\", placeholder: \"Enter second word\" },\n    ],\n    textSeparators: [\n      //'Word 1',\n      //'Word 2'\n    ],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const prox = operatorOptions.get(\"proximity\");\n      return `${field} ${val1} NEAR/${prox} ${val2}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      // https://learn.microsoft.com/en-us/sql/relational-databases/search/search-for-words-close-to-another-word-with-near?view=sql-server-ver16#example-1\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const aVal1 = this.utils.SqlString.trim(val1);\n      const aVal2 = this.utils.SqlString.trim(val2);\n      const prox = operatorOptions.get(\"proximity\");\n      return `CONTAINS(${field}, 'NEAR((${aVal1}, ${aVal2}), ${prox})')`;\n    },\n    mongoFormatOp: undefined, // not supported\n    jsonLogic: undefined, // not supported\n    options: {\n      optionLabel: \"Near\", // label on top of \"near\" selectbox (for config.settings.showLabels==true)\n      optionTextBefore: \"Near\", // label before \"near\" selectbox (for config.settings.showLabels==false)\n      optionPlaceholder: \"Select words between\", // placeholder for \"near\" selectbox\n      minProximity: 2,\n      maxProximity: 10,\n      defaults: {\n        proximity: 2\n      },\n    },\n  },\n  some: {\n    label: \"Some\",\n    labelForFormat: \"SOME\",\n    cardinality: 0,\n    jsonLogic: \"some\",\n    spelFormatOp: (filteredSize) => `${filteredSize} > 0`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gt\", v => 0, false, ...args); },\n  },\n  all: {\n    label: \"All\",\n    labelForFormat: \"ALL\",\n    cardinality: 0,\n    jsonLogic: \"all\",\n    spelFormatOp: (filteredSize, op, fullSize) => `${filteredSize} == ${fullSize}`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n  },\n  none: {\n    label: \"None\",\n    labelForFormat: \"NONE\",\n    cardinality: 0,\n    jsonLogic: \"none\",\n    spelFormatOp: (filteredSize) => `${filteredSize} == 0`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => 0, false, ...args); },\n  }\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"String\",\n    valuePlaceholder: \"Enter string\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  textarea: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Text\",\n    valuePlaceholder: \"Enter text\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n    fullWidth: true,\n  },\n  number: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number\",\n    valueLabels: [\n      { label: \"Number from\", placeholder: \"Enter number from\" },\n      { label: \"Number to\", placeholder: \"Enter number to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef) {\n      const isFloat = wgtDef.step && !Number.isInteger(wgtDef.step);\n      return this.utils.spelEscape(val, isFloat);\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  slider: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number or move slider\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  select: {\n    type: \"select\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Value\",\n    valuePlaceholder: \"Select value\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      let valLabel = this.utils.getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, val);\n      return isForDisplay ? this.utils.stringifyForDisplay(valLabel) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  multiselect: {\n    type: \"multiselect\",\n    jsType: \"array\",\n    valueSrc: \"value\",\n    valueLabel: \"Values\",\n    valuePlaceholder: \"Select values\",\n    formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n      let valsLabels = vals.map(v => this.utils.getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, v));\n      return isForDisplay ? valsLabels.map(this.utils.stringifyForDisplay) : vals.map(JSON.stringify);\n    },\n    sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n      return vals.map(v => this.utils.SqlString.escape(v));\n    },\n    spelFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n      const isCallable = opDef.spelOp && opDef.spelOp.startsWith(\"${1}\");\n      let res = this.utils.spelEscape(vals); // inline list\n      if (isCallable) {\n        // `{1,2}.contains(1)` NOT works\n        // `{1,2}.?[true].contains(1)` works\n        res = this.utils.spelFixList(res);\n      }\n      return res;\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  date: {\n    type: \"date\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD\",\n    valueLabel: \"Date\",\n    valuePlaceholder: \"Enter date\",\n    valueLabels: [\n      { label: \"Date from\", placeholder: \"Enter date from\" },\n      { label: \"Date to\", placeholder: \"Enter date to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"YYYY-MM-DD\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD\");\n      const fmt = \"yyyy-MM-dd\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDate).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    spelImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDate\"],\n        },\n        methodName: \"parse\",\n        args: [\n          {var: \"v\"},\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [\n              {var: \"fmt\"}\n            ]\n          },\n        ],\n      }\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (args?.fmt?.value?.includes?.(\" \") || args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\"))\n        return [undefined, `Invalid date format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      return this.utils.moment(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  time: {\n    type: \"time\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    valueFormat: \"HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Time\",\n    valuePlaceholder: \"Enter time\",\n    valueLabels: [\n      { label: \"Time from\", placeholder: \"Enter time from\" },\n      { label: \"Time to\", placeholder: \"Enter time to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"HH:mm:ss\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const fmt = \"HH:mm:ss\";\n      const v = dateVal.format(\"HH:mm:ss\");\n      return `T(java.time.LocalTime).parse('${v}')`;\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n    },\n    spelImportFuncs: [\n      \"T(java.time.LocalTime).parse(${v})\",\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\"\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (args?.fmt && (!args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\") || args.fmt?.value?.includes(\" \")))\n        return [undefined, `Invalid time format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, \"HH:mm:ss\");\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    toJS: function (val, fieldSettings) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\") : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    elasticSearchFormatValue: function elasticSearchFormatValue(queryType, value, operator, fieldName) {\n      return {\n        script: {\n          script: {\n            source: \"doc[\".concat(fieldName, \"][0].getHour() >== params.min && doc[\").concat(fieldName, \"][0].getHour() <== params.max\"),\n            params: {\n              min: value[0],\n              max: value[1]\n            }\n          }\n        }\n      };\n    },\n  },\n  datetime: {\n    type: \"datetime\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Datetime\",\n    valuePlaceholder: \"Enter datetime\",\n    valueLabels: [\n      { label: \"Datetime from\", placeholder: \"Enter datetime from\" },\n      { label: \"Datetime to\", placeholder: \"Enter datetime to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat + \" \" + wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.toDate());\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD HH:mm:ss\");\n      const fmt = \"yyyy-MM-dd HH:mm:ss\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDateTime).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    spelImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDateTime\"],\n        },\n        methodName: \"parse\",\n        args: [\n          {var: \"v\"},\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [\n              {var: \"fmt\"}\n            ]\n          },\n        ],\n      }\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (!args?.fmt?.value?.includes?.(\" \"))\n        return [undefined, `Invalid datetime format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      return this.utils.moment(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  boolean: {\n    type: \"boolean\",\n    jsType: \"boolean\",\n    valueSrc: \"value\",\n    labelYes: \"Yes\",\n    labelNo: \"No\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? (val ? \"Yes\" : \"No\") : JSON.stringify(!!val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    defaultValue: false,\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  field: {\n    valueSrc: \"field\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay, op, opDef, rightFieldDef) => {\n      return isForDisplay ? (rightFieldDef.label || val) : val;\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef, rightFieldDef) => {\n      return val;\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return val;\n    },\n    valueLabel: \"Field to compare\",\n    valuePlaceholder: \"Select field to compare\",\n  },\n  func: {\n    valueSrc: \"func\",\n    valueLabel: \"Function\",\n    valuePlaceholder: \"Select function\",\n  },\n  case_value: {\n    valueSrc: \"value\",\n    type: \"case_value\",\n    spelFormatValue: function (val) {\n      return this.utils.spelEscape(val === \"\" ? null : val);\n    },\n    spelImportValue: (val) => {\n      return [val.value, []];\n    }\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  text: {\n    defaultOperator: \"equal\",\n    mainWidget: \"text\",\n    widgets: {\n      text: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"proximity\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      textarea: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      field: {\n        operators: [\n          //unary ops (like `is_empty`) will be excluded anyway, see getWidgetsForFieldOp()\n          \"equal\",\n          \"not_equal\",\n          \"proximity\", //can exclude if you want\n        ],\n      }\n    },\n  },\n  number: {\n    defaultOperator: \"equal\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      slider: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ],\n      },\n    },\n  },\n  date: {\n    defaultOperator: \"equal\",\n    widgets: {\n      date: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ]\n      }\n    },\n  },\n  time: {\n    defaultOperator: \"equal\",\n    widgets: {\n      time: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  datetime: {\n    defaultOperator: \"equal\",\n    widgets: {\n      datetime: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      }\n    },\n  },\n  select: {\n    mainWidget: \"select\",\n    defaultOperator: \"select_equals\",\n    widgets: {\n      select: {\n        operators: [\n          \"select_equals\",\n          \"select_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      multiselect: {\n        operators: [\n          \"select_any_in\",\n          \"select_not_any_in\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n    },\n  },\n  multiselect: {\n    defaultOperator: \"multiselect_equals\",\n    widgets: {\n      multiselect: {\n        operators: [\n          \"multiselect_contains\",\n          \"multiselect_not_contains\",\n          \"multiselect_equals\",\n          \"multiselect_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  boolean: {\n    defaultOperator: \"equal\",\n    widgets: {\n      boolean: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {\n          //you can enable this if you don't use fields as value sources\n          // hideOperator: true,\n          // operatorInlineLabel: \"is\",\n        }\n      },\n      field: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n        ],\n      }\n    },\n  },\n  \"!group\": {\n    defaultOperator: \"some\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        widgetProps: {\n          min: 0\n        },\n        operators: [\n          // w/o operand\n          \"some\",\n          \"all\",\n          \"none\",\n\n          // w/ operand - count\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n        ],\n        opProps: {\n          equal: {\n            label: \"Count ==\"\n          },\n          not_equal: {\n            label: \"Count !=\"\n          },\n          less: {\n            label: \"Count <\"\n          },\n          less_or_equal: {\n            label: \"Count <=\"\n          },\n          greater: {\n            label: \"Count >\"\n          },\n          greater_or_equal: {\n            label: \"Count >=\"\n          },\n          between: {\n            label: \"Count between\"\n          },\n          not_between: {\n            label: \"Count not between\"\n          }\n        }\n      }\n    }\n  },\n  \"case_value\": {\n    mainWidget: \"case_value\",\n    widgets: {\n      case_value: {}\n    }\n  },\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...defaultSettings,\n\n  convertableWidgets: {\n    \"number\": [\"slider\", \"rangeslider\"],\n    \"slider\": [\"number\", \"rangeslider\"],\n    \"rangeslider\": [\"number\", \"slider\"],\n    \"text\": [\"textarea\"],\n    \"textarea\": [\"text\"]\n  },\n\n  formatSpelField: function (field, parentField, parts, partsExt, fieldDefinition, config) {\n    let fieldName = partsExt.map(({key, parent, fieldSeparator: sep}, ind) => {\n      if (ind == 0) {\n        if (parent == \"[map]\")\n          return `#this[${this.utils.spelEscape(key)}]`;\n        else if (parent == \"[class]\")\n          return key;\n        else\n          return key;\n      } else {\n        if (parent == \"map\" || parent == \"[map]\")\n          return `[${this.utils.spelEscape(key)}]`;\n        else if (parent == \"class\" || parent == \"[class]\")\n          return `${sep}${key}`;\n        else\n          return `${sep}${key}`;\n      }\n    }).join(\"\");\n    if (fieldDefinition.fieldName) {\n      fieldName = field;\n    }\n    if (fieldDefinition.isSpelVariable) {\n      fieldName = \"#\" + fieldName;\n    }\n    return fieldName;\n  },\n  sqlFormatReverse: (q) => {\n    if (q == undefined) return undefined;\n    return \"NOT(\" + q + \")\";\n  },\n  spelFormatReverse: (q) => {\n    if (q == undefined) return undefined;\n    return \"!(\" + q + \")\";\n  },\n  formatReverse: (q, operator, reversedOp, operatorDefinition, revOperatorDefinition, isForDisplay) => {\n    if (q == undefined) return undefined;\n    if (isForDisplay)\n      return \"NOT (\" + q + \")\";\n    else\n      return \"!(\" + q + \")\";\n  },\n  formatAggr: (whereStr, aggrField, operator, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay, aggrFieldDef) => {\n    const {labelForFormat, cardinality} = opDef;\n    if (cardinality == 0) {\n      const cond = whereStr ? ` HAVE ${whereStr}` : \"\";\n      return `${labelForFormat} OF ${aggrField}${cond}`;\n    } else if (cardinality == undefined || cardinality == 1) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${value}`;\n    } else if (cardinality == 2) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      let valFrom = value.first();\n      let valTo = value.get(1);\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${valFrom} AND ${valTo}`;\n    }\n  },\n  jsonLogic: {\n    groupVarKey: \"var\",\n    altVarKey: \"var\",\n    lockedOp: \"locked\"\n  },\n  \n  canCompareFieldWithField: (leftField, leftFieldConfig, rightField, rightFieldConfig) => {\n    //for type == 'select'/'multiselect' you can check listValues\n    return true;\n  },\n\n  // enable compare fields\n  valueSourcesInfo: {\n    value: {\n      label: \"Value\"\n    },\n    field: {\n      label: \"Field\",\n      widget: \"field\",\n    },\n    func: {\n      label: \"Function\",\n      widget: \"func\",\n    }\n  },\n\n};\n\n//----------------------------\n\nconst _addMixins = (config, mixins, doAdd = true) => {\n  const mixinFuncs = {\n    rangeslider: mixinWidgetRangeslider,\n    treeselect: mixinWidgetTreeselect,\n    treemultiselect: mixinWidgetTreemultiselect,\n    rangeable__date: mixinRangeableWidget(\"date\", \"date\"),\n  };\n  for (const mixName of mixins) {\n    const mixinFunc = mixinFuncs[mixName];\n    if (mixinFunc) {\n      config = mixinFunc(config, doAdd);\n    } else {\n      throw new Error(`Can't ${doAdd ? \"add\": \"remove\"} mixin ${mixName}`);\n    }\n  }\n  return config;\n};\n\nconst addMixins = (config, mixins) => {\n  return _addMixins(config, mixins, true);\n};\nconst removeMixins = (config, mixins) => {\n  return _addMixins(config, mixins, false);\n};\n\nconst mixinRangeableWidget = (type, widget) => (config, addMixin = true) => {\n  let { types } = config;\n\n  types = {\n    ...types,\n    [type]: {\n      ...types[type],\n      widgets: {\n        ...types[type].widgets,\n      }\n    }\n  };\n\n  if (addMixin) {\n    types[type].widgets[widget] = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n          textSeparators: [null, null],\n        },\n        not_between: {\n          isSpecialRange: true,\n          textSeparators: [null, null],\n        }\n      },\n      ...types[type].widgets[widget],\n    };\n  } else {\n    delete types[type].widgets[widget];\n  }\n\n  return {\n    ...config,\n    types,\n  };\n};\n\nconst mixinWidgetRangeslider = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.rangeslider = {\n      type: \"number\",\n      jsType: \"number\",\n      valueSrc: \"value\",\n      valueLabel: \"Range\",\n      valuePlaceholder: \"Select range\",\n      valueLabels: [\n        { label: \"Number from\", placeholder: \"Enter number from\" },\n        { label: \"Number to\", placeholder: \"Enter number to\" },\n      ],\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      singleWidget: \"slider\",\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.rangeslider,\n    };\n  } else {\n    delete widgets.rangeslider;\n  }\n\n  types = {\n    ...types,\n    number: {\n      ...types.number,\n      widgets: {\n        ...types.number.widgets,\n      }\n    }\n  };\n\n  if (addMixin) {\n    types.number.widgets.rangeslider = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n        },\n        not_between: {\n          isSpecialRange: true,\n        }\n      },\n      operators: [\n        \"between\",\n        \"not_between\",\n        // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\",\n        \"is_not_null\",\n      ],\n      ...types.number.widgets.rangeslider,\n    };\n  } else {\n    delete types.number.widgets.rangeslider;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreeselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treeselect = {\n      type: \"treeselect\",\n      jsType: \"string\",\n      valueSrc: \"value\",\n      valueLabel: \"Value\",\n      valuePlaceholder: \"Select value\",\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        const treeData = fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues;\n        let valLabel = this.utils.getTitleInListValues(treeData, val);\n        return isForDisplay ? this.utils.stringifyForDisplay(valLabel) : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.treeselect,\n    };\n  } else {\n    delete widgets.treeselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treeselect = {\n      mainWidget: \"treeselect\",\n      defaultOperator: \"select_equals\",\n      widgets: {\n        treeselect: {\n          operators: [\n            \"select_equals\",\n            \"select_not_equals\"\n          ],\n        },\n        treemultiselect: {\n          operators: [\n            \"select_any_in\",\n            \"select_not_any_in\"\n          ],\n        },\n      },\n      ...types.treeselect,\n    };\n  } else {\n    delete types.treeselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreemultiselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treemultiselect = {\n      type: \"treemultiselect\",\n      jsType: \"array\",\n      valueSrc: \"value\",\n      valueLabel: \"Values\",\n      valuePlaceholder: \"Select values\",\n      formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n        const treeData = fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues;\n        let valsLabels = vals.map(v => this.utils.getTitleInListValues(treeData, v));\n        return isForDisplay ? valsLabels.map(this.utils.stringifyForDisplay) : vals.map(JSON.stringify);\n      },\n      sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n        return vals.map(v => this.utils.SqlString.escape(v));\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.treemultiselect,\n    };\n  } else {\n    delete widgets.treemultiselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treemultiselect = {\n      defaultOperator: \"multiselect_equals\",\n      widgets: {\n        treemultiselect: {\n          operators: [\n            \"multiselect_equals\",\n            \"multiselect_not_equals\",\n          ],\n        }\n      },\n      ...types.treemultiselect,\n    };\n  } else {\n    delete types.treemultiselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nexport const ConfigMixins = {\n  addMixins,\n  removeMixins,\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\n// Mixin advanced widgets just to allow using it on server-side eg. for export routines\nconfig = addMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_FIELD_SRC = \"SET_FIELD_SRC\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import Immutable from \"immutable\";\nimport {\n  expandTreePath, expandTreeSubpath, getItemByPath, fixPathsInTree, \n  getTotalRulesCountInTree, fixEmptyGroupsInTree, isEmptyTree, hasChildren, removeIsLockedInTree\n} from \"../utils/treeUtils\";\nimport {\n  defaultRuleProperties, defaultGroupProperties, getDefaultOperator, \n  defaultOperatorOptions, defaultItemProperties\n} from \"../utils/defaultUtils\";\nimport * as constants from \"./constants\";\nimport uuid from \"../utils/uuid\";\nimport {\n  getFuncConfig, getFieldConfig, getFieldWidgetConfig, getOperatorConfig\n} from \"../utils/configUtils\";\nimport {\n  getOperatorsForField, getOperatorsForType, getFirstOperator, getWidgetForFieldOp,\n  getNewValueForFieldOp, isEmptyItem, selectTypes\n} from \"../utils/ruleUtils\";\nimport {deepEqual, defaultValue, applyToJS} from \"../utils/stuff\";\nimport {validateValue} from \"../utils/validation\";\nimport omit from \"lodash/omit\";\nimport mapValues from \"lodash/mapValues\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst addNewGroup = (state, path, type, groupUuid, properties, config, children = null, meta = {}) => {\n  const {shouldCreateEmptyGroup} = config.settings;\n  const groupPath = path.push(groupUuid);\n  const canAddNewRule = !shouldCreateEmptyGroup;\n  const isDefaultCase = !!meta?.isDefaultCase;\n\n  const origState = state;\n  state = addItem(state, path, type, groupUuid, defaultGroupProperties(config).merge(properties || {}), config, children);\n  if (state !== origState) {\n    if (!children && !isDefaultCase) {\n      state = state.setIn(expandTreePath(groupPath, \"children1\"), new Immutable.OrderedMap());\n\n      // Add one empty rule into new group\n      if (canAddNewRule) {\n        state = addItem(state, groupPath, \"rule\", uuid(), defaultRuleProperties(config), config);\n      }\n    }\n\n    state = fixPathsInTree(state);\n  }\n  \n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst removeGroup = (state, path, config) => {\n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.slice(0, -1);\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  if (isEmptyParentGroup && !canLeaveEmptyGroup) {\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n    \n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty(!) rule to root\n      const canUseDefaultFieldAndOp = false;\n      const canGetFirst = false;\n      state = addItem(\n        state, new Immutable.List(), \"rule\", uuid(), \n        defaultRuleProperties(config, undefined, undefined, canUseDefaultFieldAndOp, canGetFirst), \n        config\n      );\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nconst removeRule = (state, path, config) => {\n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.pop();\n  const parent = state.getIn(expandTreePath(parentPath));\n\n  const parentField = parent.getIn([\"properties\", \"field\"]);\n  const parentOperator = parent.getIn([\"properties\", \"operator\"]);\n  const parentValue = parent.getIn([\"properties\", \"value\", 0]);\n  const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  const parentOperatorConfig = parentOperator ? getOperatorConfig(config, parentOperator, parentField) : null;\n  const hasGroupCountRule = parentField && parentOperator && parentOperatorConfig.cardinality != 0; // && parentValue != undefined;\n  \n  const isParentRuleGroup = parent.get(\"type\") == \"rule_group\";\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  const canLeaveEmpty = isParentRuleGroup \n    ? hasGroupCountRule && parentFieldConfig.initialEmptyWhere\n    : canLeaveEmptyGroup;\n  \n  if (isEmptyParentGroup && !canLeaveEmpty) {\n    if (isParentRuleGroup) {\n      // deleted last rule from rule_group, so delete whole rule_group\n      state = state.deleteIn(expandTreePath(parentPath));\n    }\n\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n\n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty(!) rule to root\n      const canUseDefaultFieldAndOp = false;\n      const canGetFirst = false;\n      state = addItem(\n        state, new Immutable.List(), \"rule\", uuid(), \n        defaultRuleProperties(config, undefined, undefined, canUseDefaultFieldAndOp, canGetFirst), \n        config\n      );\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} not\n */\nconst setNot = (state, path, not) =>\n  state.setIn(expandTreePath(path, \"properties\", \"not\"), not);\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nconst setLock = (state, path, lock) =>\n  removeIsLockedInTree(state.setIn(expandTreePath(path, \"properties\", \"isLocked\"), lock));\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nconst setConjunction = (state, path, conjunction) =>\n  state.setIn(expandTreePath(path, \"properties\", \"conjunction\"), conjunction);\n\n// convert children deeply from JS to Immutable\nconst _addChildren1 = (config, item, children) => {\n  if (children && Array.isArray(children)) {\n    item.children1 = new Immutable.OrderedMap(\n      children.reduce((map, it) => {\n        const id1 = uuid();\n        const it1 = {\n          ...it,\n          properties: defaultItemProperties(config, it).merge(it.properties || {}),\n          id: id1\n        };\n        _addChildren1(config, it1, it1.children1);\n        //todo: guarantee order\n        return {\n          ...map,\n          [id1]: new Immutable.Map(it1)\n        };\n      }, {})\n    );\n  }\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} type\n * @param {string} id\n * @param {Immutable.OrderedMap} properties\n * @param {object} config\n */\nconst addItem = (state, path, type, id, properties, config, children = null) => {\n  if (type == \"switch_group\")\n    throw new Error(\"Can't add switch_group programmatically\");\n  const { maxNumberOfCases, maxNumberOfRules, maxNesting } = config.settings;\n  const rootType = state.get(\"type\");\n  const isTernary = rootType == \"switch_group\";\n  const targetItem = state.getIn(expandTreePath(path));\n  const caseGroup = isTernary ? state.getIn(expandTreePath(path.take(2))) : null;\n  const childrenPath = expandTreePath(path, \"children1\");\n  const targetChildren = state.getIn(childrenPath);\n  const hasChildren = !!targetChildren && targetChildren.size;\n  const targetChildrenSize = hasChildren ? targetChildren.size : null;\n  let currentNumber, maxNumber;\n  if (type == \"case_group\") {\n    currentNumber = targetChildrenSize;\n    maxNumber = maxNumberOfCases;\n  } else if (type == \"group\") {\n    currentNumber = path.size;\n    maxNumber = maxNesting;\n  } else if (targetItem?.get(\"type\") == \"rule_group\") {\n    // don't restrict\n  } else {\n    currentNumber = isTernary ? getTotalRulesCountInTree(caseGroup) : getTotalRulesCountInTree(state);\n    maxNumber = maxNumberOfRules;\n  }\n  const canAdd = maxNumber && currentNumber ? (currentNumber < maxNumber) : true;\n  \n  const item = {type, id, properties};\n  _addChildren1(config, item, children);\n\n  const isLastDefaultCase = type == \"case_group\" && hasChildren && targetChildren.last().get(\"children1\") == null;\n\n  if (canAdd) {\n    const newChildren = new Immutable.OrderedMap({\n      [id]: new Immutable.Map(item)\n    });\n    if (!hasChildren) {\n      state = state.setIn(childrenPath, newChildren);\n    } else if (isLastDefaultCase) {\n      const last = targetChildren.last();\n      const newChildrenWithLast = new Immutable.OrderedMap({\n        [id]: new Immutable.Map(item),\n        [last.get(\"id\")]: last\n      });\n      state = state.deleteIn(expandTreePath(childrenPath, \"children1\", last.get(\"id\")));\n      state = state.mergeIn(childrenPath, newChildrenWithLast);\n    } else {\n      state = state.mergeIn(childrenPath, newChildren);\n    }\n    state = fixPathsInTree(state);\n  }\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n */\nconst removeItem = (state, path) => {\n  state = state.deleteIn(expandTreePath(path));\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} fromPath\n * @param {Immutable.List} toPath\n * @param {string} placement, see constants PLACEMENT_*: PLACEMENT_AFTER, PLACEMENT_BEFORE, PLACEMENT_APPEND, PLACEMENT_PREPEND\n * @param {object} config\n */\nconst moveItem = (state, fromPath, toPath, placement, config) => {\n  const from = getItemByPath(state, fromPath);\n  const sourcePath = fromPath.pop();\n  const source = fromPath.size > 1 ? getItemByPath(state, sourcePath) : null;\n  const sourceChildren = source ? source.get(\"children1\") : null;\n\n  const to = getItemByPath(state, toPath);\n  const targetPath = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) ? toPath : toPath.pop();\n  const target = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) \n    ? to\n    : toPath.size > 1 ? getItemByPath(state, targetPath) : null;\n  const targetChildren = target ? target.get(\"children1\") : null;\n\n  if (!source || !target || !from)\n    return state;\n\n  const isSameParent = (source.get(\"id\") == target.get(\"id\"));\n  const isSourceInsideTarget = targetPath.size < sourcePath.size \n        && deepEqual(targetPath.toArray(), sourcePath.toArray().slice(0, targetPath.size));\n  const isTargetInsideSource = targetPath.size > sourcePath.size \n        && deepEqual(sourcePath.toArray(), targetPath.toArray().slice(0, sourcePath.size));\n  let sourceSubpathFromTarget = null;\n  let targetSubpathFromSource = null;\n  if (isSourceInsideTarget) {\n    sourceSubpathFromTarget = Immutable.List(sourcePath.toArray().slice(targetPath.size));\n  } else if (isTargetInsideSource) {\n    targetSubpathFromSource = Immutable.List(targetPath.toArray().slice(sourcePath.size));\n  }\n\n  let newTargetChildren = targetChildren, newSourceChildren = sourceChildren;\n  if (!isTargetInsideSource)\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  if (isSameParent) {\n    newTargetChildren = newSourceChildren;\n  } else if (isSourceInsideTarget) {\n    newTargetChildren = newTargetChildren.updateIn(expandTreeSubpath(sourceSubpathFromTarget, \"children1\"), (_oldChildren) => newSourceChildren);\n  }\n\n  if (placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) {\n    newTargetChildren = Immutable.OrderedMap().withMutations(r => {\n      for (let [itemId, item] of newTargetChildren.entries()) {\n        if (itemId == to.get(\"id\") && placement == constants.PLACEMENT_BEFORE) {\n          r.set(from.get(\"id\"), from);\n        }\n                \n        r.set(itemId, item);\n\n        if (itemId == to.get(\"id\") && placement == constants.PLACEMENT_AFTER) {\n          r.set(from.get(\"id\"), from);\n        }\n      }\n    });\n  } else if (placement == constants.PLACEMENT_APPEND) {\n    newTargetChildren = newTargetChildren.merge({[from.get(\"id\")]: from});\n  } else if (placement == constants.PLACEMENT_PREPEND) {\n    newTargetChildren = Immutable.OrderedMap({[from.get(\"id\")]: from}).merge(newTargetChildren);\n  }\n\n  if (isTargetInsideSource) {\n    newSourceChildren = newSourceChildren.updateIn(expandTreeSubpath(targetSubpathFromSource, \"children1\"), (_oldChildren) => newTargetChildren);\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  }\n\n  if (!isSameParent && !isSourceInsideTarget)\n    state = state.updateIn(expandTreePath(sourcePath, \"children1\"), (_oldChildren) => newSourceChildren);\n  if (!isTargetInsideSource)\n    state = state.updateIn(expandTreePath(targetPath, \"children1\"), (_oldChildren) => newTargetChildren);\n\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nconst setFieldSrc = (state, path, srcKey, config) => {\n  const {keepInputOnChangeFieldSrc} = config.settings;\n\n  // get fieldType for \"memory effect\"\n  const currentRule = state.getIn(expandTreePath(path));\n  const currentType = currentRule.get(\"type\");\n  const currentProperties = currentRule.get(\"properties\");\n  const currentField = currentProperties.get(\"field\");\n  //const currentFieldSrc = currentProperties.get(\"fieldSrc\");\n  const currentFielType = currentProperties.get(\"fieldType\");\n  const currentFieldConfig = getFieldConfig(config, currentField);\n  let fieldType = currentFieldConfig?.type || currentFielType;\n  if (!fieldType || fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n  const canReuseValue = !selectTypes.includes(fieldType);\n  const keepInput = keepInputOnChangeFieldSrc && !isEmptyItem(currentRule, config, true) && canReuseValue;\n\n  if (!keepInput) {\n    // clear ALL properties\n    state = state.setIn(\n      expandTreePath(path, \"properties\"),\n      defaultRuleProperties(config, null, null, false)\n    );\n  } else {\n    // clear non-relevant properties\n    state = state.setIn(expandTreePath(path, \"properties\", \"field\"), null);\n    // set fieldType for \"memory effect\"\n    state = state.setIn(expandTreePath(path, \"properties\", \"fieldType\"), fieldType);\n  }\n\n  // set fieldSrc\n  state = state.setIn(expandTreePath(path, \"properties\", \"fieldSrc\"), srcKey);\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} field\n */\nconst setField = (state, path, newField, config, asyncListValues, __isInternal) => {\n  let isInternalValueChange;\n  if (!newField)\n    return {tree: removeItem(state, path), isInternalValueChange};\n\n  const {fieldSeparator, setOpOnChangeField, showErrorMessage, keepInputOnChangeFieldSrc} = config.settings;\n  if (Array.isArray(newField))\n    newField = newField.join(fieldSeparator);\n\n  const currentType = state.getIn(expandTreePath(path, \"type\"));\n  const currentProperties = state.getIn(expandTreePath(path, \"properties\"));\n  const wasRuleGroup = currentType == \"rule_group\";\n  const currentFieldSrc = currentProperties.get(\"fieldSrc\");\n  const newFieldConfig = getFieldConfig(config, newField);\n  if (!newFieldConfig) {\n    console.warn(`No config for LHS ${newField}`);\n    return {tree: state, isInternalValueChange};\n  }\n  let fieldType = newFieldConfig.type;\n  if (fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n  \n  const currentOperator = currentProperties.get(\"operator\");\n  const currentOperatorOptions = currentProperties.get(\"operatorOptions\");\n  const currentField = currentProperties.get(\"field\");\n  const currentValue = currentProperties.get(\"value\");\n  const _currentValueSrc = currentProperties.get(\"valueSrc\", new Immutable.List());\n  const _currentValueType = currentProperties.get(\"valueType\", new Immutable.List());\n\n  const isRuleGroup = newFieldConfig.type == \"!group\";\n  const isRuleGroupExt = isRuleGroup && newFieldConfig.mode == \"array\";\n  const isChangeToAnotherType = wasRuleGroup != isRuleGroup;\n  const wasOkWithoutField = !currentField && currentFieldSrc && currentOperator;\n\n  // If the newly selected field supports the same operator the rule currently\n  // uses, keep it selected.\n  const lastOp = newFieldConfig && newFieldConfig.operators?.indexOf(currentOperator) !== -1 ? currentOperator : null;\n  let newOperator = null;\n  const availOps = currentFieldSrc === \"func\" \n    ? getOperatorsForType(config, fieldType)\n    : getOperatorsForField(config, newField);\n  if (availOps && availOps.length == 1)\n    newOperator = availOps[0];\n  else if (availOps && availOps.length > 1) {\n    for (let strategy of setOpOnChangeField || []) {\n      if (strategy == \"keep\" && !isChangeToAnotherType)\n        newOperator = lastOp;\n      else if (strategy == \"default\")\n        newOperator = getDefaultOperator(config, newField, false);\n      else if (strategy == \"first\")\n        newOperator = getFirstOperator(config, newField);\n      if (newOperator) //found op for strategy\n        break;\n    }\n  }\n\n  if (!isRuleGroup && !newFieldConfig.operators) {\n    console.warn(`Type ${newFieldConfig.type} is not supported`);\n    return {tree: state, isInternalValueChange};\n  }\n\n  if (wasRuleGroup && !isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule\");\n    state = state.deleteIn(expandTreePath(path, \"children1\"));\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  if (isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule_group\");\n    const {canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality} = getNewValueForFieldOp(\n      config, config, currentProperties, newField, newOperator, \"field\", true\n    );\n    let groupProperties = defaultGroupProperties(config, newFieldConfig).merge({\n      field: newField,\n      fieldSrc: \"field\",\n      mode: newFieldConfig.mode,\n    });\n    if (isRuleGroupExt) {\n      groupProperties = groupProperties.merge({\n        operator: newOperator,\n        value: newValue,\n        valueSrc: newValueSrc,\n        valueType: newValueType,\n      });\n    }\n    state = state.setIn(expandTreePath(path, \"children1\"), new Immutable.OrderedMap());\n    state = state.setIn(expandTreePath(path, \"properties\"), groupProperties);\n    if (newFieldConfig.initialEmptyWhere && operatorCardinality == 1) { // just `COUNT(grp) > 1` without `HAVING ..`\n      // no childeren\n    } else {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, newField), config);\n    }\n    state = fixPathsInTree(state);\n  } else {\n    state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n      const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n        config, config, current, newField, newOperator, \"field\", true\n      );\n      if (showErrorMessage) {\n        current = current\n          .set(\"valueError\", newValueError);\n      }\n      const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, newField);\n      isInternalValueChange = __isInternal; //todo: filter edge cases?\n      return current\n        .set(\"field\", newField)\n        .delete(\"fieldType\") // remove \"memory effect\"\n        .set(\"fieldSrc\", currentFieldSrc)\n        .set(\"operator\", newOperator)\n        .set(\"operatorOptions\", newOperatorOptions)\n        .set(\"value\", newValue)\n        .set(\"valueSrc\", newValueSrc)\n        .set(\"valueType\", newValueType)\n        .delete(\"asyncListValues\");\n    }));\n  }\n\n  return {tree: state, isInternalValueChange};\n\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} operator\n */\nconst setOperator = (state, path, newOperator, config) => {\n  const {showErrorMessage} = config.settings;\n\n  const properties = state.getIn(expandTreePath(path, \"properties\"));\n  const children = state.getIn(expandTreePath(path, \"children1\"));\n  const currentField = properties.get(\"field\");\n  const currentFieldSrc = properties.get(\"fieldSrc\");\n  const fieldConfig = getFieldConfig(config, currentField);\n  const isRuleGroup = fieldConfig?.type == \"!group\";\n  const operatorConfig = getOperatorConfig(config, newOperator, currentField);\n  const operatorCardinality = operatorConfig ? defaultValue(operatorConfig.cardinality, 1) : null;\n\n  state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n    const currentField = current.get(\"field\");\n    const currentOperatorOptions = current.get(\"operatorOptions\");\n    const _currentValue = current.get(\"value\", new Immutable.List());\n    const _currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n    const _currentOperator = current.get(\"operator\");\n\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, current, currentField, newOperator, \"operator\", true\n    );\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n    const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, currentField);\n\n    if (!canReuseValue) {\n      current = current\n        .delete(\"asyncListValues\");\n    }\n\n    return current\n      .set(\"operator\", newOperator)\n      .set(\"operatorOptions\", newOperatorOptions)\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n  }));\n\n  if (isRuleGroup) {\n    if (operatorCardinality == 0 && children.size == 0) {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, currentField), config);\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n * @param {boolean} __isInternal\n */\nconst setValue = (state, path, delta, value, valueType, config, asyncListValues, __isInternal) => {\n  const {fieldSeparator, showErrorMessage} = config.settings;\n  let isInternalValueChange;\n  const valueSrc = state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\")) || null;\n  if (valueSrc === \"field\" && Array.isArray(value))\n    value = value.join(fieldSeparator);\n\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  //const fieldSrc = state.getIn(expandTreePath(path, \"properties\", \"fieldSrc\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? defaultValue(operatorConfig.cardinality, 1) : null;\n\n  const isEndValue = false;\n  const calculatedValueType = valueType || calculateValueType(value, valueSrc, config);\n  const canFix = false;\n  const [validateError, fixedValue] = validateValue(\n    config, field, field, operator, value, calculatedValueType, valueSrc, asyncListValues, canFix, isEndValue, true\n  );\n  const isValid = !validateError;\n  if (fixedValue !== value) {\n    // eg, get exact value from listValues (not string)\n    value = fixedValue;\n  }\n\n  // Additional validation for range values\n  if (showErrorMessage) {\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, w, valueSrc);\n    const valueSrcs = Array.from({length: operatorCardinality}, (_, i) => (state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", i + \"\")) || null));\n        \n    if (operatorConfig && operatorConfig.validateValues && valueSrcs.filter(vs => vs == \"value\" || vs == null).length == operatorCardinality) {\n      const values = Array.from({length: operatorCardinality}, (_, i) => (i == delta ? value : state.getIn(expandTreePath(path, \"properties\", \"value\", i + \"\")) || null));\n      const jsValues = fieldWidgetDefinition && fieldWidgetDefinition.toJS\n        ? values.map(v => fieldWidgetDefinition.toJS.call(config.ctx, v, fieldWidgetDefinition))\n        : values;\n      const rangeValidateError = operatorConfig.validateValues(jsValues);\n\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), rangeValidateError);\n    }\n  }\n  \n  const lastValueArr = state.getIn(expandTreePath(path, \"properties\", \"value\"));\n  if (!lastValueArr) {\n    state = state\n      .setIn(expandTreePath(path, \"properties\", \"value\"), new Immutable.List(new Array(operatorCardinality)))\n      .setIn(expandTreePath(path, \"properties\", \"valueType\"), new Immutable.List(new Array(operatorCardinality)))\n      .setIn(expandTreePath(path, \"properties\", \"valueError\"), new Immutable.List(new Array(operatorCardinality)));\n  }\n\n  const lastValue = state.getIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"));\n  const lastError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", delta));\n  const isLastEmpty = lastValue == undefined;\n  const isLastError = !!lastError;\n  if (isValid || showErrorMessage) {\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n    // set only good value\n    if (typeof value === \"undefined\") {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), undefined);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), null);\n    } else {\n      if (asyncListValues) {\n        state = state.setIn(expandTreePath(path, \"properties\", \"asyncListValues\"), asyncListValues);\n      }\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), value);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), calculatedValueType);\n      isInternalValueChange = __isInternal && !isLastEmpty && !isLastError;\n    }\n  }\n  if (showErrorMessage) {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), validateError);\n  }\n  if (__isInternal && (isValid && isLastError || !isValid && !isLastError)) {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), validateError);\n    isInternalValueChange = false;\n  }\n  \n  return {tree: state, isInternalValueChange};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nconst setValueSrc = (state, path, delta, srcKey, config) => {\n  const {showErrorMessage} = config.settings;\n\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  const fieldSrc = state.getIn(expandTreePath(path, \"properties\", \"fieldSrc\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n\n  state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), undefined);\n  state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), null);\n  state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n\n  if (showErrorMessage) {\n    // clear value error\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), null);\n\n    // if current operator is range, clear possible range error\n    const operatorConfig = getOperatorConfig(config, operator, field);\n    const operatorCardinality = operator ? defaultValue(operatorConfig.cardinality, 1) : null;\n    if (operatorConfig.validateValues) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), null);\n    }\n  }\n  \n  // set valueSrc\n  if (typeof srcKey === \"undefined\") {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), null);\n  } else {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), srcKey);\n  }\n\n  // maybe set default value\n  if (srcKey) {\n    const properties = state.getIn(expandTreePath(path, \"properties\"));\n    // this call should return canReuseValue = false and provide default value\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, properties, field, operator, \"valueSrc\", true\n    );\n    if (!canReuseValue && newValueSrc.get(delta) == srcKey) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), newValue.get(delta));\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), newValueType.get(delta));\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nconst setOperatorOption = (state, path, name, value) => {\n  return state.setIn(expandTreePath(path, \"properties\", \"operatorOptions\", name), value);\n};\n\n/**\n * @param {Immutable.Map} state\n */\nconst checkEmptyGroups = (state, config) => {\n  const {canLeaveEmptyGroup} = config.settings;\n  if (!canLeaveEmptyGroup) {\n    state = fixEmptyGroupsInTree(state);\n  }\n  return state;\n};\n\n\n/**\n * \n */\nconst calculateValueType = (value, valueSrc, config) => {\n  let calculatedValueType = null;\n  if (value) {\n    if (valueSrc === \"field\") {\n      const fieldConfig = getFieldConfig(config, value);\n      if (fieldConfig) {\n        calculatedValueType = fieldConfig.type;\n      }\n    } else if (valueSrc === \"func\") {\n      const funcKey = value.get(\"func\");\n      if (funcKey) {\n        const funcConfig = getFuncConfig(config, funcKey);\n        if (funcConfig) {\n          calculatedValueType = funcConfig.returnType;\n        }\n      }\n    }\n  }\n  return calculatedValueType;\n};\n\nconst getField = (state, path) => {\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  return field;\n};\n\nconst emptyDrag = {\n  dragging: {\n    id: null,\n    x: null,\n    y: null,\n    w: null,\n    h: null\n  },\n  mousePos: {},\n  dragStart: {\n    id: null,\n  },\n};\n\nconst getActionMeta = (action, state) => {\n  if (!action || !action.type)\n    return null;\n  const actionKeysToOmit = [\n    \"config\", \"asyncListValues\", \"__isInternal\"\n  ];\n  const actionTypesToIgnore = [\n    constants.SET_TREE,\n    constants.SET_DRAG_START,\n    constants.SET_DRAG_PROGRESS,\n    constants.SET_DRAG_END,\n  ];\n  let meta = mapValues(omit(action, actionKeysToOmit), applyToJS);\n  let affectedField = action.path && getField(state.tree, action.path) || action.field;\n  if (affectedField) {\n    if (affectedField?.toJS)\n      affectedField = affectedField.toJS();\n    meta.affectedField = affectedField;\n  }\n  if (actionTypesToIgnore.includes(action.type) || action.type.indexOf(\"@@redux\") == 0)\n    meta = null;\n  return meta;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {object} action\n */\nexport default (config, tree, getMemoizedTree, setLastTree) => {\n  const initTree = tree;\n  const emptyState = {\n    tree: initTree, \n    ...emptyDrag\n  };\n    \n  return (state = emptyState, action) => {\n    const unset = {__isInternalValueChange: undefined, __lastAction: undefined};\n    let set = {};\n    let actionMeta = getActionMeta(action, state);\n\n    switch (action?.type) {\n    case constants.SET_TREE: {\n      const validatedTree = getMemoizedTree(action.config, action.tree);\n      set.tree = validatedTree;\n      break;\n    }\n\n    case constants.ADD_CASE_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"case_group\", action.id, action.properties, action.config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.ADD_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"group\", action.id, action.properties, action.config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.REMOVE_GROUP: {\n      set.tree = removeGroup(state.tree, action.path, action.config);\n      break;\n    }\n\n    case constants.ADD_RULE: {\n      set.tree = addItem(state.tree, action.path, action.ruleType, action.id, action.properties, action.config, action.children);\n      break;\n    }\n\n    case constants.REMOVE_RULE: {\n      set.tree = removeRule(state.tree, action.path, action.config);\n      break;\n    }\n\n    case constants.SET_CONJUNCTION: {\n      set.tree = setConjunction(state.tree, action.path, action.conjunction);\n      break;\n    }\n\n    case constants.SET_NOT: {\n      set.tree = setNot(state.tree, action.path, action.not);\n      break;\n    }\n\n    case constants.SET_FIELD: {\n      const {tree, isInternalValueChange} = setField(\n        state.tree, action.path, action.field, action.config,\n        action.asyncListValues, action.__isInternal\n      );\n      set.__isInternalValueChange = isInternalValueChange;\n      set.tree = tree;\n      break;\n    }\n\n    case constants.SET_FIELD_SRC: {\n      set.tree = setFieldSrc(state.tree, action.path, action.srcKey, action.config);\n      break;\n    }\n\n    case constants.SET_LOCK: {\n      set.tree = setLock(state.tree, action.path, action.lock);\n      break;\n    }\n\n    case constants.SET_OPERATOR: {\n      set.tree = setOperator(state.tree, action.path, action.operator, action.config);\n      break;\n    }\n\n    case constants.SET_VALUE: {\n      const {tree, isInternalValueChange} = setValue(\n        state.tree, action.path, action.delta, action.value, action.valueType, action.config, action.asyncListValues, action.__isInternal\n      );\n      set.__isInternalValueChange = isInternalValueChange;\n      set.tree = tree;\n      break;\n    }\n\n    case constants.SET_VALUE_SRC: {\n      set.tree = setValueSrc(state.tree, action.path, action.delta, action.srcKey, action.config);\n      break;\n    }\n\n    case constants.SET_OPERATOR_OPTION: {\n      set.tree = setOperatorOption(state.tree, action.path, action.name, action.value);\n      break;\n    }\n\n    case constants.MOVE_ITEM: {\n      set.tree = moveItem(state.tree, action.fromPath, action.toPath, action.placement, action.config);\n      break;\n    }\n\n    case constants.SET_DRAG_START: {\n      set.dragStart = action.dragStart;\n      set.dragging = action.dragging;\n      set.mousePos = action.mousePos;\n      break;\n    }\n\n    case constants.SET_DRAG_PROGRESS: {\n      set.mousePos = action.mousePos;\n      set.dragging = action.dragging;\n      break;\n    }\n\n    case constants.SET_DRAG_END: {\n      set.tree = checkEmptyGroups(state.tree, config);\n      set = { ...set, ...emptyDrag };\n      break;\n    }\n\n    default: {\n      break;\n    }\n    }\n\n    if (actionMeta) {\n      set.__lastAction = actionMeta;\n    }\n\n    if (setLastTree && set.tree && state.tree) {\n      setLastTree(state.tree);\n    }\n    \n    return {...state, ...unset, ...set};\n  };\n\n};\n","import Immutable from \"immutable\";\nimport {toImmutableList} from \"../utils/stuff\";\nimport * as constants from \"../stores/constants\";\nimport { defaultRuleProperties, defaultGroupProperties } from \"../utils/defaultUtils\";\nimport uuid from \"../utils/uuid\";\n\n\n/**\n * @param {object} config\n * @param {Immutable.Map} tree\n */\nexport const setTree = (config, tree) => ({\n  type: constants.SET_TREE,\n  tree: tree,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addRule = (config, path, properties, ruleType = \"rule\", children = null, parentRuleGroupPath = null) => ({\n  type: constants.ADD_RULE,\n  ruleType: ruleType,\n  children: children,\n  path: toImmutableList(path),\n  id: uuid(),\n  properties: defaultRuleProperties(config, parentRuleGroupPath).merge(properties || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeRule = (config, path) => ({\n  type: constants.REMOVE_RULE,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addDefaultCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(properties || {}),\n  config: config,\n  meta: {\n    isDefaultCase: true\n  }\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(properties || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(properties || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeGroup = (config, path) => ({\n  type: constants.REMOVE_GROUP,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Array} fromPath\n * @param {Array} toPath\n * @param {String} placement, see constants PLACEMENT_*\n */\nexport const moveItem = (config, fromPath, toPath, placement) => ({\n  type: constants.MOVE_ITEM,\n  fromPath: toImmutableList(fromPath),\n  toPath: toImmutableList(toPath),\n  placement: placement,\n  config: config,\n});\n","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nexport const setConjunction = (config, path, conjunction) => ({\n  type: constants.SET_CONJUNCTION,\n  path: toImmutableList(path),\n  conjunction: conjunction\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} not\n */\nexport const setNot = (config, path, not) => ({\n  type: constants.SET_NOT,\n  path: toImmutableList(path),\n  not: not\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nexport const setLock = (config, path, lock) => ({\n  type: constants.SET_LOCK,\n  path: toImmutableList(path),\n  lock: lock\n});","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} field\n */\nexport const setField = (config, path, field, asyncListValues, __isInternal) => ({\n  type: constants.SET_FIELD,\n  path: toImmutableList(path),\n  field: field,\n  config: config,\n  asyncListValues,\n  __isInternal,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {*} srcKey\n */\nexport const setFieldSrc = (config, path, srcKey) => ({\n  type: constants.SET_FIELD_SRC,\n  path: toImmutableList(path),\n  srcKey: srcKey,\n  config: config,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} operator\n */\nexport const setOperator = (config, path, operator) => ({\n  type: constants.SET_OPERATOR,\n  path: toImmutableList(path),\n  operator: operator,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n * @param {boolean} __isInternal\n */\nexport const setValue = (config, path, delta, value, valueType, asyncListValues, __isInternal) => ({\n  type: constants.SET_VALUE,\n  path: toImmutableList(path),\n  delta: delta,\n  value: value,\n  valueType: valueType,\n  asyncListValues: asyncListValues,\n  config: config,\n  __isInternal: __isInternal\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nexport const setValueSrc = (config, path, delta, srcKey) => ({\n  type: constants.SET_VALUE_SRC,\n  path: toImmutableList(path),\n  delta: delta,\n  srcKey: srcKey,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nexport const setOperatorOption = (config, path, name, value) => ({\n  type: constants.SET_OPERATOR_OPTION,\n  path: toImmutableList(path),\n  name: name,\n  value: value,\n  config: config\n});\n","import * as Export from \"./export\";\nimport * as Import from \"./import\";\nimport * as BasicUtils from \"./utils\";\nimport * as BasicFuncs from \"./config/funcs\";\nimport CoreConfig, { ConfigMixins } from \"./config\";\nimport TreeStore from \"./stores/tree\";\nimport * as TreeActions from \"./actions\";\n\nconst Utils = {...BasicUtils, ...Export, ...Import, ConfigMixins};\n\nexport {Utils, Export, Import, BasicFuncs, CoreConfig, TreeStore, TreeActions};\n","import { TreeStore } from \"@react-awesome-query-builder/core\";\nexport default TreeStore;\n","import React from \"react\";\n\nexport default React.createContext(); ","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_FIELD_SRC = \"SET_FIELD_SRC\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import * as constants from \"../stores/constants\";\n\n\n/**\n * @param {Object} mousePos\n * @param {Object} dragging\n */\nexport const setDragProgress = (mousePos, dragging) => ({\n  type: constants.SET_DRAG_PROGRESS,\n  mousePos: mousePos,\n  dragging: dragging,\n});\n\n/**\n * @param {Object} dragStart\n * @param {Object} dragging\n * @param {Object} mousePos\n */\nexport const setDragStart = (dragStart, dragging, mousePos) => ({\n  type: constants.SET_DRAG_START,\n  dragStart: dragStart,\n  dragging: dragging,\n  mousePos: mousePos,\n});\n\n/**\n *\n */\nexport const setDragEnd = () => ({\n  type: constants.SET_DRAG_END,\n});\n","import { TreeActions } from \"@react-awesome-query-builder/core\";\nimport * as drag from \"./drag\";\nconst { tree, group, rule } = TreeActions;\nexport {\n  tree,\n  group,\n  rule,\n  drag\n};\n","import pick from \"lodash/pick\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { extendConfig, configKeys } = Utils.ConfigUtils;\n\nconst pickConfig = (props) => {\n  return pick(props, configKeys);\n};\n\nexport const createConfigMemo = () => {\n  const configStore = new Map();\n  const maxSize = 2; // current and prev\n  let configId = 0;\n\n  const extendAndStore = (config) => {\n    const extendedConfig = extendConfig(config, ++configId);\n    if ((configStore.size + 1) > maxSize) {\n      configStore.delete(configStore.keys()[0]);\n    }\n    configStore.set(config, extendedConfig);\n    return extendedConfig;\n  };\n\n  const findBasic = (findConfig) => {\n    for (const basicConfig of configStore.keys()) {\n      const extConfig = configStore.get(basicConfig);\n      const found = configKeys.map(k => extConfig[k] === findConfig[k]).filter(v => !v).length === 0;\n      if (found) {\n        return basicConfig;\n      }\n    }\n    return findConfig;\n  };\n\n  const findExtended = (findConfig) => {\n    // strict find:\n    // return configStore.get(findConfig) || configStore.values().find(ec => ec === findConfig);\n\n    for (const savedConfig of configStore.keys()) {\n      const found = configKeys.map(k => savedConfig[k] === findConfig[k]).filter(v => !v).length === 0;\n      if (found) {\n        return configStore.get(savedConfig);\n      }\n    }\n\n    for (const extendedConfig of configStore.values()) {\n      const found = configKeys.map(k => extendedConfig[k] === findConfig[k]).filter(v => !v).length === 0;\n      if (found) {\n        return extendedConfig;\n      }\n    }\n\n    return null;\n  };\n\n  const findOrExtend = (config) => {\n    return findExtended(config) || extendAndStore(config);\n  };\n  \n  return {\n    getExtended: (props) => findOrExtend(pickConfig(props)),\n    getBasic: findBasic\n  };\n};\n","\nexport const defaultValue = (value, _default) => {\n  return (typeof value === \"undefined\") ? _default : value;\n};\n\nexport const truncateString = (str, n, useWordBoundary) => {\n  if (!n || str.length <= n) { return str; }\n  var subString = str.substr(0, n-1);\n  return (useWordBoundary \n    ? subString.substr(0, subString.lastIndexOf(\" \")) \n    : subString) + \"...\";\n};\n\nexport const immutableEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else {\n    return v1.equals(v2);\n  }\n};\n\n// const deepEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else if (Map.isMap(v1)) {\n//     return v1.equals(v2);\n//   } else {\n//     return JSON.stringify(v1) == JSON.stringify(v2);\n//   }\n// };\n\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (a && typeof a.equals === \"function\")\n    return a.equals(b);\n  else if (typeof a === \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n\nconst isDev = () => (typeof process !== \"undefined\" && process.env && process.env.NODE_ENV == \"development\");\n\nexport const getLogger = (devMode = false) => {\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\n\nexport const logger = getLogger();\n\n","import {immutableEqual} from \"../utils/stuff\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { validateAndFixTree } = Utils;\n\nexport const createValidationMemo = () => {\n  let originalTree;\n  let validatedTree;\n  let configId;\n\n  return (config, tree, oldConfig = undefined, sanitizeTree = true) => {\n    if (!tree) {\n      return null;\n    }\n    if (config.__configId === configId && (immutableEqual(tree, originalTree) || immutableEqual(tree, validatedTree))) {\n      return validatedTree;\n    } else {\n      configId = config.__configId;\n      originalTree = tree;\n      if (sanitizeTree === false) {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config, false, false);\n      } else {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config);\n      }\n      return validatedTree;\n    }\n  };\n};\n","import React from \"react\";\nimport mapValues from \"lodash/mapValues\";\nimport {shallowEqual} from \"./stuff\";\n\nconst getReactContainerType = (el) => {\n  if (el._reactRootContainer) {\n    return \"root\";\n  }\n  if (Object.getOwnPropertyNames(el).filter(k => k.startsWith(\"__reactContainer\")).length > 0) {\n    return \"container\";\n  }\n  return undefined;\n};\n\nconst getReactRootNodeType = (node) => {\n  if (!node) {\n    return undefined;\n  }\n  const type = getReactContainerType(node);\n  if (type !== undefined) {\n    return type;\n  } else {\n    return getReactRootNodeType(node.parentNode);\n  }\n};\n\nexport const isUsingLegacyReactDomRender = (node) => {\n  return getReactRootNodeType(node) === \"root\";\n};\n\n\nexport const liteShouldComponentUpdate = (self, config) => (nextProps, nextState) => {\n  const prevProps = self.props;\n  const prevState = self.state;\n\n  let should = nextProps != prevProps || nextState != prevState;\n  if (should) {\n    if (prevState == nextState && prevProps != nextProps) {\n      let chs = [];\n      for (let k in nextProps) {\n        let changed = (nextProps[k] != prevProps[k]);\n        if (changed) {\n          if (config[k] == \"ignore\")\n            changed = false;\n          else if (config[k] == \"shallow_deep\")\n            changed = !shallowEqual(nextProps[k], prevProps[k], true);\n          else if (config[k] == \"shallow\")\n            changed = !shallowEqual(nextProps[k], prevProps[k]);\n          else if (typeof config[k] == \"function\")\n            changed = config[k](nextProps[k], prevProps[k], nextState);\n        }\n        if (changed)\n          chs.push(k);\n      }\n      if (!chs.length)\n        should = false;\n    }\n  }\n  return should;\n};\n\nexport const pureShouldComponentUpdate = (self) => function(nextProps, nextState) {\n  return (\n    !shallowEqual(self.props, nextProps)\n    || !shallowEqual(self.state, nextState)\n  );\n};\n\nconst canUseOldComponentWillReceiveProps = () => {\n  const v = React.version.split(\".\").map(parseInt.bind(null, 10));\n  return v[0] == 16 && v[1] < 3 || v[0] < 16;\n};\n\nexport const useOnPropsChanged = (obj) => {\n  // 1. `shouldComponentUpdate` should be called after `componentWillReceiveProps`\n  // 2. `shouldComponentUpdate` should not be used for PureComponent\n\n  // Because `useOnPropsChanged` can only be applied to `Component` not `PureComponent`, make it pure now\n  if (!obj.shouldComponentUpdate) {\n    obj.shouldComponentUpdate = pureShouldComponentUpdate(obj);\n  }\n\n  if (canUseOldComponentWillReceiveProps()) {\n    // Use old method\n    obj.componentWillReceiveProps = (nextProps) => {\n      obj.onPropsChanged(nextProps);\n    };\n  } else {\n    // Simulate `componentWillReceiveProps` with `shouldComponentUpdate`\n    const origShouldComponentUpdate = obj.shouldComponentUpdate;\n    const newShouldComponentUpdate = function(nextProps, nextState) {\n      const shouldNotify = !shallowEqual(obj.props, nextProps);\n      if (shouldNotify) {\n        obj.onPropsChanged(nextProps);\n      }\n      const shouldUpdate = origShouldComponentUpdate.call(obj, nextProps, nextState);\n      return shouldUpdate;\n    };\n    obj.shouldComponentUpdate = newShouldComponentUpdate.bind(obj);\n  }\n};\n\nexport const bindActionCreators = (actionCreators, config, dispatch) =>\n  mapValues(actionCreators, (actionCreator) =>\n    (...args) => dispatch(actionCreator(config, ...args))\n  );\n","import React, { Component } from \"react\";\nimport merge from \"lodash/merge\";\nimport {connect} from \"react-redux\";\nimport context from \"../stores/context\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../actions\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {useOnPropsChanged, liteShouldComponentUpdate, bindActionCreators} from \"../utils/reactUtils\";\n\n\nclass Query extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    onChange: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    tree: PropTypes.any, //instanceOf(Immutable.Map)\n    //dispatch: PropTypes.func.isRequired,\n    //__isInternalValueChange\n    //__lastAction\n    //getMemoizedTree: PropTypes.func.isRequired,\n    //getBasicConfig: PropTypes.func.isRequired,\n    //sanitizeTree\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this._updateActions(props);\n\n    // For preventive validation (tree and config consistency)\n    // When config has changed from QueryContainer, \n    //  but new dispatched validated tree value is not in redux store yet (tree prop is old)\n    this.validatedTree = props.getMemoizedTree(props.config, props.tree, undefined, props.sanitizeTree);\n    this.oldValidatedTree = this.validatedTree;\n\n    //props.onChange && props.onChange(this.validatedTree, props.config);\n  }\n\n  _updateActions (props) {\n    const {config, dispatch} = props;\n    this.actions = bindActionCreators({...actions.tree, ...actions.group, ...actions.rule}, config, dispatch);\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    tree: (nextValue) => {\n      if (nextValue === this.oldValidatedTree && this.oldValidatedTree === this.validatedTree) {\n        // Got value dispatched from QueryContainer\n        // Ignore, because we've just rendered it\n        return false;\n      }\n      return true;\n    }\n  });\n\n  onPropsChanged(nextProps) {\n    const {onChange} = nextProps;\n    const oldConfig = this.props.config;\n    const newTree = nextProps.tree;\n    const oldTree = this.props.tree;\n    const newConfig = nextProps.config;\n\n    this.oldValidatedTree = this.validatedTree;\n    this.validatedTree = newTree;\n    if (oldConfig !== newConfig) {\n      this._updateActions(nextProps);\n      this.validatedTree = nextProps.getMemoizedTree(newConfig, newTree, oldConfig);\n    }\n\n    const validatedTreeChanged = !immutableEqual(this.validatedTree, this.oldValidatedTree);\n    if (validatedTreeChanged) {\n      const newBasicConfig = nextProps.getBasicConfig(newConfig);\n      onChange && onChange(this.validatedTree, newBasicConfig, nextProps.__lastAction);\n    }\n  }\n\n  render() {\n    const {config, renderBuilder, dispatch, __isInternalValueChange} = this.props;\n    const builderProps = {\n      tree: this.validatedTree,\n      actions: this.actions,\n      config: config,\n      dispatch: dispatch,\n      __isInternalValueChange\n    };\n\n    return renderBuilder(builderProps);\n  }\n}\n\n\nconst ConnectedQuery = connect(\n  (state) => {\n    return {\n      tree: state.tree,\n      __isInternalValueChange: state.__isInternalValueChange,\n      __lastAction: state.__lastAction,\n    };\n  },\n  null,\n  null,\n  {\n    context\n  }\n)(Query);\nConnectedQuery.displayName = \"ConnectedQuery\";\n\n\nexport default ConnectedQuery;\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport treeStoreReducer from \"../stores/tree\";\nimport context from \"../stores/context\";\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport * as actions from \"../actions\";\nimport {createConfigMemo} from \"../utils/configUtils\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {createValidationMemo} from \"../utils/validation\";\nimport {liteShouldComponentUpdate, useOnPropsChanged} from \"../utils/reactUtils\";\nimport ConnectedQuery from \"./Query\";\nconst {defaultRoot} = Utils.DefaultUtils;\n\n\nexport default class QueryContainer extends Component {\n  static propTypes = {\n    //config\n    conjunctions: PropTypes.object.isRequired,\n    fields: PropTypes.object.isRequired,\n    types: PropTypes.object.isRequired,\n    operators: PropTypes.object.isRequired,\n    widgets: PropTypes.object.isRequired,\n    settings: PropTypes.object.isRequired,\n    ctx: PropTypes.object.isRequired,\n\n    onChange: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    value: PropTypes.any, //instanceOf(Immutable.Map)\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    useOnPropsChanged(this);\n\n    const { getExtended, getBasic } = createConfigMemo();\n    this.getMemoizedConfig = getExtended;\n    this.getBasicConfig = getBasic;\n    this.getMemoizedTree = createValidationMemo();\n    \n    const config = this.getMemoizedConfig(props);\n    const {shouldCreateEmptyGroup} = config.settings;\n    const canAddDefaultRule = !shouldCreateEmptyGroup; // if prop `value` is not provided, can add default/empty rule?\n    const emptyTree = defaultRoot(config, canAddDefaultRule);\n    const sanitizeTree = !!props.value;\n    const tree = props.value || emptyTree;\n    const validatedTree = this.getMemoizedTree(config, tree, undefined, sanitizeTree);\n\n    const reducer = treeStoreReducer(config, validatedTree, this.getMemoizedTree, this.setLastTree);\n    const store = createStore(reducer);\n\n    this.config = config;\n    this.state = {\n      store\n    };\n    this.QueryWrapper = (pr) => config.settings.renderProvider(pr, config.ctx);\n  }\n\n  setLastTree = (lastTree) => {\n    if (this.prevTree) {\n      this.prevprevTree = this.prevTree;\n    }\n    this.prevTree = lastTree;\n  };\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    value: (nextValue, prevValue, state) => { return false; }\n  });\n\n  onPropsChanged(nextProps) {\n    // compare configs\n    const prevProps = this.props;\n    const oldConfig = this.config;\n    const nextConfig = this.getMemoizedConfig(nextProps);\n    const isConfigChanged = oldConfig !== nextConfig;\n\n    // compare trees\n    const storeValue = this.state.store.getState().tree;\n    const isTreeChanged = !immutableEqual(nextProps.value, this.props.value) && !immutableEqual(nextProps.value, storeValue);\n    const currentTree = isTreeChanged ? (nextProps.value || defaultRoot(nextProps)) : storeValue;\n    const isTreeTrulyChanged = isTreeChanged && !immutableEqual(nextProps.value, this.prevTree) && !immutableEqual(nextProps.value, this.prevprevTree);\n    this.sanitizeTree = isTreeTrulyChanged || isConfigChanged;\n\n    if (isConfigChanged) {\n      if (prevProps.settings.renderProvider !== nextProps.settings.renderProvider) {\n        this.QueryWrapper = (props) => nextConfig.settings.renderProvider(props, nextConfig.ctx);\n      }\n      this.config = nextConfig;\n    }\n    \n    if (isTreeChanged || isConfigChanged) {\n      const validatedTree = this.getMemoizedTree(nextConfig, currentTree, oldConfig, this.sanitizeTree);\n      //return Promise.resolve().then(() => {\n      this.state.store.dispatch(\n        actions.tree.setTree(nextConfig, validatedTree)\n      );\n      //});\n    }\n  }\n\n  render() {\n    // `get_children` is deprecated!\n    const {renderBuilder, get_children, onChange} = this.props;\n    const {store} = this.state;\n    const config = this.config;\n    const QueryWrapper = this.QueryWrapper;\n\n    return (\n      <QueryWrapper config={config}>\n        <Provider store={store} context={context}>\n          <ConnectedQuery\n            config={config}\n            getMemoizedTree={this.getMemoizedTree}\n            getBasicConfig={this.getBasicConfig}\n            sanitizeTree={this.sanitizeTree}\n            onChange={onChange}\n            renderBuilder={renderBuilder || get_children}\n          />\n        </Provider>\n      </QueryWrapper>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate} from \"../../utils/reactUtils\";\nimport {connect} from \"react-redux\";\nimport classNames from \"classnames\";\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nconst createRuleContainer = (Rule) => \n  class RuleContainer extends Component {\n    static propTypes = {\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      config: PropTypes.object.isRequired,\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      operator: PropTypes.string,\n      field: PropTypes.any,\n      fieldSrc: PropTypes.string,\n      fieldType: PropTypes.string,\n      actions: PropTypes.object.isRequired, //{removeRule: Function, setField, setFieldSrc, setOperator, setOperatorOption, setValue, setValueSrc, ...}\n      onDragStart: PropTypes.func,\n      value: PropTypes.any, //depends on widget\n      valueSrc: PropTypes.any,\n      asyncListValues: PropTypes.array,\n      valueError: PropTypes.any,\n      operatorOptions: PropTypes.object,\n      reordableNodesCnt: PropTypes.number,\n      parentField: PropTypes.string, //from RuleGroup\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      \n      this.dummyFn.isDummyFn = true;\n    }\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeRule(this.props.path);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    setField = (field, asyncListValues, __isInternal) => {\n      this.props.actions.setField(this.props.path, field, asyncListValues, __isInternal);\n    };\n\n    setFieldSrc = (srcKey) => {\n      this.props.actions.setFieldSrc(this.props.path, srcKey);\n    };\n\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    setOperatorOption = (name, value) => {\n      this.props.actions.setOperatorOption(this.props.path, name, value);\n    };\n\n    setValue = (delta, value, type, asyncListValues, __isInternal) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, __isInternal);\n    };\n\n    setValueSrc = (delta, srcKey) => {\n      this.props.actions.setValueSrc(this.props.path, delta, srcKey);\n    };\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    render() {\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const fieldConfig = getFieldConfig(this.props.config, this.props.field);\n      const fieldType = this.props.fieldType || fieldConfig?.type || null;\n      const {showErrorMessage} = this.props.config.settings;\n      const _isGroup = fieldConfig && fieldConfig.type == \"!struct\";\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n\n      const valueError = this.props.valueError;\n      const oneValueError = valueError && valueError.toArray().filter(e => !!e).shift() || null;\n      const hasError = oneValueError != null && showErrorMessage;\n\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"rule-container\", hasError ? \"rule-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Rule\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              setField={this.dummyFn}\n              setFieldSrc={this.dummyFn}\n              setOperator={this.dummyFn}\n              setOperatorOption={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              setValue={this.dummyFn}\n              setValueSrc={this.dummyFn}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueType={this.props.valueType || null}\n              valueError={this.props.valueError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Rule\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setFieldSrc={isInDraggingTempo ? this.dummyFn : this.setFieldSrc}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setOperatorOption={isInDraggingTempo ? this.dummyFn : this.setOperatorOption}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              setValueSrc={isInDraggingTempo ? this.dummyFn : this.setValueSrc}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueType={this.props.valueType || null}\n              valueError={this.props.valueError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Rule) => {\n  const ConnectedRuleContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createRuleContainer(Rule));\n  ConnectedRuleContainer.displayName = \"ConnectedRuleContainer\";\n\n  return ConnectedRuleContainer;\n};\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport {connect} from \"react-redux\";\nimport {logger} from \"../../utils/stuff\";\nimport context from \"../../stores/context\";\nimport * as constants from \"../../stores/constants\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../../actions\";\nimport {pureShouldComponentUpdate, useOnPropsChanged, isUsingLegacyReactDomRender} from \"../../utils/reactUtils\";\nconst {clone} = Utils;\nconst {getFlatTree} = Utils.TreeUtils;\n\nlet _isReorderingTree = false;\n\nconst createSortableContainer = (Builder, CanMoveFn = null) => \n  class SortableContainer extends Component {\n    static propTypes = {\n      tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n      actions: PropTypes.object.isRequired, // {moveItem: Function, ..}\n      //... see Builder\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.onPropsChanged(props);\n    }\n\n    onPropsChanged(nextProps) {\n      this.tree = getFlatTree(nextProps.tree);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (changed) {\n              //don't render <Builder> on dragging - appropriate redux-connected components will do it\n              if(k != \"dragging\" && k != \"mousePos\")\n                chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    componentDidUpdate(_prevProps, _prevState) {\n      let dragging = this.props.dragging;\n      let startDragging = this.props.dragStart;\n      _isReorderingTree = false;\n      if (startDragging && startDragging.id) {\n        dragging.itemInfo = this.tree.items[dragging.id];\n        if (dragging.itemInfo) {\n          if (dragging.itemInfo.index != startDragging.itemInfo.index || dragging.itemInfo.parent != startDragging.itemInfo.parent) {\n            const treeEl = startDragging.treeEl;\n            const treeElContainer = startDragging.treeElContainer;\n            const plhEl = this._getPlaceholderNodeEl(treeEl, true);\n            if (plhEl) {\n              const plX = plhEl.getBoundingClientRect().left + window.scrollX;\n              const plY = plhEl.getBoundingClientRect().top + window.scrollY;\n              const oldPlX = startDragging.plX;\n              const oldPlY = startDragging.plY;\n              const scrollTop = treeElContainer.scrollTop;\n              startDragging.plX = plX;\n              startDragging.plY = plY;\n              startDragging.itemInfo = clone(dragging.itemInfo);\n              startDragging.y = plhEl.offsetTop;\n              startDragging.x = plhEl.offsetLeft;\n              startDragging.clientY += (plY - oldPlY);\n              startDragging.clientX += (plX - oldPlX);\n              if (treeElContainer != document.body)\n                startDragging.scrollTop = scrollTop;\n\n              this.onDrag(this.props.mousePos, false);\n            }\n          }\n        }\n      }\n    }\n\n    _getNodeElById (treeEl, indexId, ignoreCache = false) {\n      if (indexId == null)\n        return null;\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[indexId];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      el = treeEl.querySelector('.group-or-rule-container[data-id=\"'+indexId+'\"]');\n      this._cacheEls[indexId] = el;\n      return el;\n    }\n\n    _getDraggableNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"draggable\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-draggable\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"draggable\"] = el;\n      return el;\n    }\n\n    _getPlaceholderNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"placeholder\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-placeholder\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"placeholder\"] = el;\n      return el;\n    }\n\n    _isScrollable(node) {\n      const overflowY = window.getComputedStyle(node)[\"overflow-y\"];\n      return (overflowY === \"scroll\" || overflowY === \"auto\") && (node.scrollHeight > node.offsetHeight);\n    }\n\n    _getScrollParent(node) {\n      if (node == null)\n        return null;\n    \n      if (node === document.body || this._isScrollable(node)) {\n        return node;\n      } else {\n        return this._getScrollParent(node.parentNode);\n      }\n    }\n\n    _getEventTarget = (e, dragStart) => {\n      return e && e.__mocked_window || document.body || window;\n    };\n\n    onDragStart = (id, dom, e) => {\n      let treeEl = dom.closest(\".query-builder\");\n      if (this._isUsingLegacyReactDomRender === undefined) {\n        this._isUsingLegacyReactDomRender = isUsingLegacyReactDomRender(treeEl);\n      }\n      document.body.classList.add(\"qb-dragging\");\n      treeEl.classList.add(\"qb-dragging\");\n      let treeElContainer = treeEl.closest(\".query-builder-container\") || treeEl;\n      treeElContainer = this._getScrollParent(treeElContainer) || document.body;\n      const scrollTop = treeElContainer.scrollTop;\n      \n      const _dragEl = this._getDraggableNodeEl(treeEl);\n      const _plhEl = this._getPlaceholderNodeEl(treeEl);\n\n      const tmpAllGroups = treeEl.querySelectorAll(\".group--children\");\n      const anyGroup = tmpAllGroups.length ? tmpAllGroups[0] : null;\n      let groupPadding;\n      if (anyGroup) {\n        groupPadding = window.getComputedStyle(anyGroup, null).getPropertyValue(\"padding-left\");\n        groupPadding = parseInt(groupPadding);\n      }\n\n      const dragging = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        w: dom.offsetWidth,\n        h: dom.offsetHeight,\n        itemInfo: this.tree.items[id],\n        paddingLeft: groupPadding,\n      };\n      const dragStart = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        scrollTop: scrollTop,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        itemInfo: clone(this.tree.items[id]),\n        treeEl: treeEl,\n        treeElContainer: treeElContainer,\n      };\n      const mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n\n      const target = this._getEventTarget(e, dragStart);\n      this.eventTarget = target;\n      target.addEventListener(\"mousemove\", this.onDrag);\n      target.addEventListener(\"mouseup\", this.onDragEnd);\n\n      this.props.setDragStart(dragStart, dragging, mousePos);\n    };\n\n\n    onDrag = (e, doHandleDrag = true) => {\n      let dragging = Object.assign({}, this.props.dragging);\n      let startDragging = this.props.dragStart;\n      const paddingLeft = dragging.paddingLeft; //this.props.paddingLeft;\n      const treeElContainer = startDragging.treeElContainer;\n      const scrollTop = treeElContainer.scrollTop;\n      dragging.itemInfo = this.tree.items[dragging.id];\n      if (!dragging.itemInfo) {\n        return;\n      }\n\n      let mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n      const startMousePos = {\n        clientX: startDragging.clientX,\n        clientY: startDragging.clientY,\n      };\n\n      if (e.__mock_dom) {\n        const treeEl = startDragging.treeEl;\n        const dragEl = this._getDraggableNodeEl(treeEl);\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        e.__mock_dom({treeEl, dragEl, plhEl});\n      }\n\n      //first init plX/plY\n      if (!startDragging.plX) {\n        const treeEl = startDragging.treeEl;\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        if (plhEl) {\n          startDragging.plX = plhEl.getBoundingClientRect().left + window.scrollX;\n          startDragging.plY = plhEl.getBoundingClientRect().top + window.scrollY;\n        }\n      }\n\n      const startX = startDragging.x;\n      const startY = startDragging.y;\n      const startClientX = startDragging.clientX;\n      const startClientY = startDragging.clientY;\n      const startScrollTop = startDragging.scrollTop;\n      const pos = {\n        x: startX + (e.clientX - startClientX),\n        y: startY + (e.clientY - startClientY) + (scrollTop - startScrollTop)\n      };\n      dragging.x = pos.x;\n      dragging.y = pos.y;\n      dragging.paddingLeft = paddingLeft;\n      dragging.mousePos = mousePos;\n      dragging.startMousePos = startMousePos;\n\n\n      this.props.setDragProgress(mousePos, dragging);\n\n      const moved = doHandleDrag ? this.handleDrag(dragging, e, CanMoveFn) : false;\n\n      if (!moved) {\n        if (e.preventDefault)\n          e.preventDefault();\n      }\n    };\n\n    onDragEnd = () => {\n      let treeEl = this.props.dragStart.treeEl;\n\n      this.props.setDragEnd();\n\n      treeEl.classList.remove(\"qb-dragging\");\n      document.body.classList.remove(\"qb-dragging\");\n      this._cacheEls = {};\n\n      const target = this.eventTarget || this._getEventTarget();\n      target.removeEventListener(\"mousemove\", this.onDrag);\n      target.removeEventListener(\"mouseup\", this.onDragEnd);\n    };\n    \n\n    handleDrag (dragInfo, e, canMoveFn) {\n      const canMoveBeforeAfterGroup = true;\n      const itemInfo = dragInfo.itemInfo;\n      const paddingLeft = dragInfo.paddingLeft;\n\n      let moveInfo = null;\n      const treeEl = this.props.dragStart.treeEl;\n      const dragId = dragInfo.id;\n      const dragEl = this._getDraggableNodeEl(treeEl);\n      const plhEl = this._getPlaceholderNodeEl(treeEl);\n      let dragRect, plhRect, hovRect, treeRect;\n      if (dragEl && plhEl) {\n        dragRect = dragEl.getBoundingClientRect();\n        plhRect = plhEl.getBoundingClientRect();\n        if (!plhRect.width) {\n          return;\n        }\n        let dragDirs = {hrz: 0, vrt: 0};\n        if (dragRect.top < plhRect.top)\n          dragDirs.vrt = -1; //up\n        else if (dragRect.bottom > plhRect.bottom)\n          dragDirs.vrt = +1; //down\n        if (dragRect.left > plhRect.left)\n          dragDirs.hrz = +1; //right\n        else if (dragRect.left < plhRect.left)\n          dragDirs.hrz = -1; //left\n\n        treeRect = treeEl.getBoundingClientRect();\n        const trgCoord = {\n          x: treeRect.left + (treeRect.right - treeRect.left) / 2,\n          y: dragDirs.vrt >= 0 ? dragRect.bottom : dragRect.top,\n        };\n        let hovCNodeEl;\n        if (e.__mocked_hov_container) {\n          hovCNodeEl = e.__mocked_hov_container;\n        } else {\n          const hovNodeEl = document.elementFromPoint(trgCoord.x, trgCoord.y-1);\n          hovCNodeEl = hovNodeEl ? hovNodeEl.closest(\".group-or-rule-container\") : null;\n          if (!hovCNodeEl && hovNodeEl && hovNodeEl.classList.contains(\"query-builder-container\")) {\n            // fix 2022-01-24 - get root .group-or-rule-container\n            const rootGroupContainer = hovNodeEl?.firstChild?.firstChild;\n            if (rootGroupContainer && rootGroupContainer.classList.contains(\"group-or-rule-container\")) {\n              hovCNodeEl = rootGroupContainer;\n            }\n          }\n        }\n        if (!hovCNodeEl) {\n          logger.log(\"out of tree bounds!\");\n        } else {\n          const isGroup = hovCNodeEl.classList.contains(\"group-container\");\n          const hovNodeId = hovCNodeEl.getAttribute(\"data-id\");\n          const hovEl = hovCNodeEl;\n          let doAppend = false;\n          let doPrepend = false;\n          if (hovEl) {\n            hovRect = hovEl.getBoundingClientRect();\n            const hovHeight = hovRect.bottom - hovRect.top;\n            const hovII = this.tree.items[hovNodeId];\n            if (!hovII) {\n              throw new Error(\"There is an issue with rendering. If you use Next.js, please check getServerSideProps() method.\");\n            }\n            let trgRect = null,\n              trgEl = null,\n              trgII = null,\n              altII = null; //for canMoveBeforeAfterGroup\n\n            if (dragDirs.vrt == 0) {\n              trgII = itemInfo;\n              trgEl = plhEl;\n              if (trgEl)\n                trgRect = trgEl.getBoundingClientRect();\n            } else {\n              if (isGroup) {\n                if (dragDirs.vrt > 0) { //down\n                  //take group header (for prepend only)\n                  const hovInnerEl = hovCNodeEl.getElementsByClassName(\"group--header\");\n                  const hovEl2 = hovInnerEl.length ? hovInnerEl[0] : null;\n                  if (hovEl2) {\n                    const hovRect2 = hovEl2.getBoundingClientRect();\n                    const hovHeight2 = hovRect2.bottom - hovRect2.top;\n                    const isOverHover = ((dragRect.bottom - hovRect2.top) > hovHeight2*3/4);\n                    if (isOverHover && hovII.top > dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect2;\n                      trgEl = hovEl2;\n                      doPrepend = true;\n                    }\n                  }\n                } else if (dragDirs.vrt < 0) { //up\n                  if (hovII.lev >= itemInfo.lev) {\n                    //take whole group\n                    const isClimbToHover = ((hovRect.bottom - dragRect.top) >= 2);\n                    if (isClimbToHover && hovII.top < dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                      doAppend = true;\n                    }\n                  }\n                }\n                if (!doPrepend && !doAppend || canMoveBeforeAfterGroup) {\n                  //take whole group and check if we can move before/after group\n                  const isOverHover = (dragDirs.vrt < 0 //up\n                    ? ((hovRect.bottom - dragRect.top) > (hovHeight-5))\n                    : ((dragRect.bottom - hovRect.top) > (hovHeight-5)));\n                  if (isOverHover) {\n                    if (!doPrepend && !doAppend) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                    }\n                    if (canMoveBeforeAfterGroup) {\n                      altII = hovII;\n                    }\n                  }\n                }\n              } else {\n                //check if we can move before/after group\n                const isOverHover = (dragDirs.vrt < 0 //up\n                  ? ((hovRect.bottom - dragRect.top) > hovHeight/2)\n                  : ((dragRect.bottom - hovRect.top) > hovHeight/2));\n                if (isOverHover) {\n                  trgII = hovII;\n                  trgRect = hovRect;\n                  trgEl = hovEl;\n                }\n              }\n            }\n\n            const isSamePos = (trgII && trgII.id == dragId);\n            if (trgRect) {\n              const dragLeftOffset = dragRect.left - treeRect.left;\n              const trgLeftOffset = trgRect.left - treeRect.left;\n              const _trgLev = trgLeftOffset / paddingLeft;\n              const dragLev = Math.max(0, Math.round(dragLeftOffset / paddingLeft));\n\n              //find all possible moves\n              let availMoves = [];\n              let altMoves = []; //alternatively can move after/before group, if can't move into it\n              if (isSamePos) {\n                //do nothing\n              } else {\n                if (isGroup) {\n                  if (doAppend) {\n                    availMoves.push([constants.PLACEMENT_APPEND, trgII, trgII.lev+1]);\n                  } else if (doPrepend) {\n                    availMoves.push([constants.PLACEMENT_PREPEND, trgII, trgII.lev+1]);\n                  }\n                  //alt\n                  if (canMoveBeforeAfterGroup && altII) {\n                    // fix 2022-01-24: do prepend/append instead of before/after for root\n                    const isToRoot = altII.lev == 0;\n                    // fix 2022-01-25: fix prepend/append instead of before/after for case_group\n                    const isToCase = altII.type == \"case_group\" && itemInfo.type != \"case_group\";\n                    let prevCaseId = altII.prev && this.tree.items[altII.prev].caseId;\n                    let nextCaseId = altII.next && this.tree.items[altII.next].caseId;\n                    if (itemInfo.caseId == prevCaseId)\n                      prevCaseId = null;\n                    if (itemInfo.caseId == nextCaseId)\n                      nextCaseId = null;\n                    const prevCase = prevCaseId && this.tree.items[prevCaseId];\n                    const nextCase = nextCaseId && this.tree.items[nextCaseId];\n\n                    if (dragDirs.vrt > 0) { //down\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_APPEND, altII, altII.lev+1]);\n                      } else if (isToCase && nextCase) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, nextCase, nextCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_AFTER, altII, altII.lev]);\n                      }\n                    } else if (dragDirs.vrt < 0) { //up\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, altII, altII.lev+1]);\n                      } else if (isToCase && prevCase) {\n                        altMoves.push([constants.PLACEMENT_APPEND, prevCase, prevCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_BEFORE, altII, altII.lev]);\n                      }\n                    }\n                  }\n                }\n                if (!doAppend && !doPrepend) {\n                  if (dragDirs.vrt < 0) { //up\n                    availMoves.push([constants.PLACEMENT_BEFORE, trgII, trgII.lev]);\n                  } else if (dragDirs.vrt > 0) { //down\n                    availMoves.push([constants.PLACEMENT_AFTER, trgII, trgII.lev]);\n                  }\n                }\n              }\n              \n              //add case\n              const addCaseII = am => {\n                const toII = am[1];\n                const fromCaseII = itemInfo.caseId ? this.tree.items[itemInfo.caseId] : null;\n                const toCaseII = toII.caseId ? this.tree.items[toII.caseId] : null;\n                return [...am, fromCaseII, toCaseII];\n              };\n              availMoves = availMoves.map(addCaseII);\n              altMoves = altMoves.map(addCaseII);\n\n              //sanitize\n              availMoves = availMoves.filter(am => {\n                const placement = am[0];\n                const trg = am[1];\n                if ((placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) && trg.parent == null)\n                  return false;\n                if (trg.collapsed && (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND))\n                  return false;\n\n                let isInside = (trg.id == itemInfo.id);\n                if (!isInside) {\n                  let tmp = trg;\n                  while (tmp.parent) {\n                    tmp = this.tree.items[tmp.parent];\n                    if (tmp.id == itemInfo.id) {\n                      isInside = true;\n                      break;\n                    }\n                  }\n                }\n                return !isInside;\n              }).map(am => {\n                const placement = am[0],\n                  toII = am[1],\n                  _lev = am[2],\n                  _fromCaseII = am[3],\n                  _toCaseII = am[4];\n                let toParentII = null;\n                if (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND)\n                  toParentII = toII;\n                else\n                  toParentII = this.tree.items[toII.parent];\n                if (toParentII && toParentII.parent == null)\n                  toParentII = null;\n                am[5] = toParentII;\n                return am;\n              });\n\n              let bestMode = null;\n              let filteredMoves = availMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              if (canMoveBeforeAfterGroup && filteredMoves.length == 0 && altMoves.length > 0) {\n                filteredMoves = altMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              }\n              const levs = filteredMoves.map(am => am[2]);\n              const curLev = itemInfo.lev;\n              const allLevs = levs.concat(curLev);\n              let closestDragLev = null;\n              if (allLevs.indexOf(dragLev) != -1)\n                closestDragLev = dragLev;\n              else if (dragLev > Math.max(...allLevs))\n                closestDragLev = Math.max(...allLevs);\n              else if (dragLev < Math.min(...allLevs))\n                closestDragLev = Math.min(...allLevs);\n              bestMode = filteredMoves.find(am => am[2] == closestDragLev);\n              if (!isSamePos && !bestMode && filteredMoves.length)\n                bestMode = filteredMoves[0];\n              moveInfo = bestMode;\n            }\n          }\n        }\n      }\n\n      if (moveInfo) {\n        this.move(itemInfo, moveInfo[1], moveInfo[0], moveInfo[3]);\n\n        // logger.log(\"DRAG-N-DROP\", JSON.stringify({\n        //   dragRect,\n        //   plhRect,\n        //   treeRect,\n        //   hovRect,\n        //   startMousePos: dragInfo.startMousePos,\n        //   mousePos: dragInfo.mousePos,\n        // }));\n        return true;\n      }\n\n      return false;\n    }\n\n    canMove (fromII, toII, placement, fromCaseII, toCaseII, toParentII, canMoveFn) {\n      if (!fromII || !toII)\n        return false;\n      if (fromII.id === toII.id)\n        return false;\n\n      const { canRegroup, canRegroupCases, maxNesting, maxNumberOfRules, canLeaveEmptyCase } = this.props.config.settings;\n      const newLev = toParentII ? toParentII.lev + 1 : toII.lev;\n      const newDepthLev = newLev + (fromII.depth || 0);\n      const isBeforeAfter = placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER;\n      const isPend = placement == constants.PLACEMENT_PREPEND || placement == constants.PLACEMENT_APPEND;\n      const isLev1 = isBeforeAfter && toII.lev == 1 || isPend && toII.lev == 0;\n      const isParentChange = fromII.parent != toII.parent;\n      const isStructChange = isPend || isParentChange;\n      // can't move `case_group` anywhere but before/after anoter `case_group`\n      const isForbiddenStructChange = fromII.type == \"case_group\" && !isLev1\n        // can't restruct `rule_group`\n        || fromII.parentType == \"rule_group\" || toII.type == \"rule_group\" || toII.parentType == \"rule_group\" \n        // only `case_group` can be placed under `switch_group`\n        || fromII.type != \"case_group\" && toII.type == \"case_group\" && isBeforeAfter\n        || fromII.type != \"case_group\" && toII.type == \"switch_group\"\n        // can't move rule/group to another case\n        || !canRegroupCases && fromII.caseId != toII.caseId;\n      const isLockedChange = toII.isLocked || fromII.isLocked || toParentII && toParentII.isLocked;\n      \n      if (maxNesting && newDepthLev > maxNesting)\n        return false;\n      \n      if (isStructChange && (!canRegroup || isForbiddenStructChange || isLockedChange))\n        return false;\n      \n      if (fromII.type != \"case_group\" && fromII.caseId != toII.caseId) {\n        const isLastFromCase = fromCaseII ? fromCaseII._height == 2 : false;\n        const newRulesInTargetCase = toCaseII ? toCaseII.leafsCount + 1 : 0;\n        if (maxNumberOfRules && newRulesInTargetCase > maxNumberOfRules)\n          return false;\n        if (isLastFromCase && !canLeaveEmptyCase)\n          return false;\n      }\n\n      if (fromII.type == \"case_group\" && (\n        fromII.isDefaultCase || toII.isDefaultCase\n        || toII.type == \"switch_group\" && placement == constants.PLACEMENT_APPEND\n      )) {\n        // leave default case alone\n        return false;\n      }\n\n      let res = true;\n      if (canMoveFn) {\n        res = canMoveFn(fromII.node.toJS(), toII.node.toJS(), placement, toParentII ? toParentII.node.toJS() : null);\n      }\n      return res;\n    }\n\n    move (fromII, toII, placement, toParentII) {\n      if (!this._isUsingLegacyReactDomRender) {\n        _isReorderingTree = true;\n      }\n      //logger.log(\"move\", fromII, toII, placement, toParentII);\n      this.props.actions.moveItem(fromII.path, toII.path, placement);\n    }\n\n    render() {\n      return <Builder\n        {...this.props}\n        onDragStart={this.onDragStart}\n      />;\n    }\n  };\n\n\nexport default (Builder, CanMoveFn = null) => {\n  const ConnectedSortableContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n        dragStart: state.dragStart,\n        mousePos: state.mousePos,\n      };\n    }, {\n      setDragStart: actions.drag.setDragStart,\n      setDragProgress: actions.drag.setDragProgress,\n      setDragEnd: actions.drag.setDragEnd,\n    },\n    null,\n    {\n      context\n    }\n  )(createSortableContainer(Builder, CanMoveFn));\n  ConnectedSortableContainer.displayName = \"ConnectedSortableContainer\";\n\n  return ConnectedSortableContainer;\n};\n\nexport { _isReorderingTree };\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { _isReorderingTree } from \"./SortableContainer\";\nimport classNames from \"classnames\";\n\n\nexport default (className) => (GroupOrRule) =>\n  class Draggable extends PureComponent {\n    static propTypes = {\n      isDraggingTempo: PropTypes.bool,\n      isDraggingMe: PropTypes.bool,\n      onDragStart: PropTypes.func,\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.wrapper = React.createRef();\n    }\n\n    handleDraggerMouseDown = (e) => {\n      var nodeId = this.props.id;\n      var dom = this.wrapper.current;\n        \n      if (this.props.onDragStart) {\n        this.props.onDragStart(nodeId, dom, e);\n      }\n    };\n\n    render () {\n      const {\n        isDraggingTempo,\n        isDraggingMe,\n        dragging,\n        ...otherProps\n      } = this.props;\n      const {\n        isTrueLocked,\n      } = otherProps;\n\n      let styles = {};\n      if (isDraggingMe && isDraggingTempo) {\n        if (_isReorderingTree) {\n          // don't apply old styles for dragging tempo during reorder\n        } else {\n          styles = {\n            top: dragging.y,\n            left: dragging.x,\n            width: dragging.w\n          };\n        }\n      }\n\n      const cn = classNames(className, \"group-or-rule\",\n        isDraggingMe && isDraggingTempo ? \"qb-draggable\" : null,\n        isDraggingMe && !isDraggingTempo ? \"qb-placeholder\" : null,\n        isTrueLocked ? \"locked\" : null\n      );\n\n      return (\n        <div\n          className={cn}\n          style={styles}\n          ref={this.wrapper}\n          data-id={this.props.id}\n        >\n          <GroupOrRule\n            handleDraggerMouseDown={this.handleDraggerMouseDown}\n            isDraggingMe={isDraggingMe}\n            isDraggingTempo={isDraggingTempo}\n            {...otherProps}\n          />\n        </div>\n      );\n    }\n\n  };\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport keys from \"lodash/keys\";\nimport pickBy from \"lodash/pickBy\";\nimport mapValues from \"lodash/mapValues\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFieldConfig, getOperatorConfig} = Utils.ConfigUtils;\n\n\nexport default class Operator extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.any,\n    selectedFieldType: PropTypes.string,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    readonly: PropTypes.bool,\n    //actions\n    setOperator: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"selectedOperator\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({config, selectedField, selectedFieldType, selectedOperator}) {\n    const fieldConfig = getFieldConfig(config, selectedField);\n    let operators = [...(fieldConfig?.operators || config.types[selectedFieldType]?.operators || [])];\n    if (!selectedField && !operators.includes(selectedOperator)) {\n      // eg. `prox` field was selected, then `fieldSrc` changed to `func`\n      // But `text` type excludes `proximity` operator in config, so add manually\n      operators.push(selectedOperator);\n    }\n    \n    const operatorsOptions \n      = mapValues(\n        pickBy(\n          config.operators, \n          (item, key) => operators?.indexOf(key) !== -1\n        ), \n        (_opts, op) => getOperatorConfig(config, op, selectedField)\n      );\n      \n    const items = this.buildOptions(config, operatorsOptions, operators);\n\n    const selectedOpts = operatorsOptions[selectedOperator] || {};\n    const placeholder = this.props.config.settings.operatorPlaceholder;\n    const selectedKey = selectedOperator;\n    const selectedKeys = selectedKey ? [selectedKey] : null;\n    const selectedPath = selectedKeys;\n    const selectedLabel = selectedOpts.label;\n    \n    return {\n      placeholder, items,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, fieldConfig\n    };\n  }\n\n  buildOptions(config, fields, ops) {\n    if (!fields || !ops)\n      return null;\n\n    return keys(fields).sort((a, b) => (ops.indexOf(a) - ops.indexOf(b))).map(fieldKey => {\n      const field = fields[fieldKey];\n      const label = field.label;\n      return {\n        key: fieldKey,\n        path: fieldKey,\n        label,\n      };\n    });\n  }\n\n  render() {\n    const {config, customProps, setOperator, readonly, id, groupId} = this.props;\n    const {renderOperator} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: setOperator,\n      ...this.meta\n    };\n    if (!renderProps.items)\n      return null;\n    return renderOperator(renderProps, config.ctx);\n  }\n\n\n}\n","import React from \"react\";\n\nconst Col = ({children, ...props}) => (<div {...props}>{children}</div>);\n\nconst dummyFn = () => {};\n\nconst DragIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"gray\" width=\"18px\" height=\"18px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"/>\n  </svg>\n);\n\nconst WithConfirmFn = (Cmp) => (\n  props => {\n    const {useConfirm} = props.config.settings;\n    const confirmFn = useConfirm ? useConfirm.call(props.config.ctx, props.config.ctx) : null;\n    return <Cmp {...props} confirmFn={confirmFn} />;\n  }\n);\n\nexport {\n  Col, dummyFn, DragIcon, WithConfirmFn\n};\n","import React, { PureComponent } from \"react\";\nimport Operator from \"./Operator\";\nimport {Col} from \"../utils\";\n\n\nexport default class OperatorWrapper extends PureComponent {\n  render() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, selectedOperator, setOperator, \n      selectedFieldParts, showOperator, showOperatorLabel, selectedFieldWidgetConfig, readonly, id, groupId\n    } = this.props;\n    const operator = showOperator\n            && <Col key={\"operators-for-\"+(selectedFieldParts || []).join(\"_\")} className=\"rule--operator\">\n              { config.settings.showLabels\n                    && <label className=\"rule--label\">{config.settings.operatorLabel}</label>\n              }\n              <Operator\n                key=\"operator\"\n                config={config}\n                selectedField={selectedField}\n                selectedFieldSrc={selectedFieldSrc}\n                selectedFieldType={selectedFieldType}\n                selectedOperator={selectedOperator}\n                setOperator={setOperator}\n                readonly={readonly}\n                id={id}\n                groupId={groupId}\n              />\n            </Col>;\n    const hiddenOperator = showOperatorLabel\n            && <Col key={\"operators-for-\"+(selectedFieldParts || []).join(\"_\")} className=\"rule--operator\">\n              <div className=\"rule--operator-wrapper\">\n                {config.settings.showLabels\n                  ? <label className=\"rule--label\">&nbsp;</label>\n                  : null}\n                <div className=\"rule--operator-text-wrapper\">\n                  <span className=\"rule--operator-text\">{selectedFieldWidgetConfig.operatorInlineLabel}</span>\n                </div>\n              </div>\n            </Col>;\n    return [\n      operator,\n      hiddenOperator\n    ];\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {getFieldPathLabels} = Utils.RuleUtils;\nconst {getFieldConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\n\n\nexport default class Field extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    parentField: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //actions\n    setField: PropTypes.func.isRequired,\n    setFieldSrc: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"config\", \"parentField\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({selectedField, selectedFieldType, config, parentField}) {\n    const selectedKey = selectedField;\n    const {maxLabelsLength, fieldSeparatorDisplay, fieldPlaceholder, fieldSeparator} = config.settings;\n    const isFieldSelected = !!selectedField;\n    const placeholder = !isFieldSelected ? truncateString(fieldPlaceholder, maxLabelsLength) : null;\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPathParts(selectedKey, config);\n    const selectedPath = getFieldPathParts(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2;\n\n    const parentFieldPath = getFieldParts(parentField, config);\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig && parentFieldConfig.subfields : config.fields;\n    const lookingForFieldType = !isFieldSelected && selectedFieldType;\n    const items = this.buildOptions(parentFieldPath, config, sourceFields, lookingForFieldType, parentFieldPath);\n\n    // Field source has been chnaged, no new field selected, but op & value remains\n    const errorText = lookingForFieldType ? \"Please select field\" : null;\n\n    return {\n      placeholder, items, parentField,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n      errorText,\n    };\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = getFieldParts(fieldKey, config);\n    let label = fieldOpts?.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  buildOptions(parentFieldPath, config, fields, fieldType = undefined, path = null, optGroup = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    const countFieldsMatchesType = (fields) => {\n      return Object.keys(fields || {}).reduce((acc, fieldKey) => {\n        const field = fields[fieldKey];\n        if (field.type === \"!struct\") {\n          return acc + countFieldsMatchesType(field.subfields);\n        } else {\n          return acc + (field.type === fieldType ? 1 : 0);\n        }\n      }, 0);\n    };\n\n    return keys(fields).map(fieldKey => {\n      const fullFieldPath = [...(path ?? []), fieldKey];\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fullFieldPath, config);\n      const partsLabels = getFieldPathLabels(fullFieldPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath?.length)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      const disabled = field.disabled;\n\n      if (field.hideForSelect)\n        return undefined;\n\n      if (field.type == \"!struct\") {\n        const items = this.buildOptions(parentFieldPath, config, field.subfields, fieldType, fullFieldPath, {\n          label,\n          tooltip,\n        });\n        const hasItemsMatchesType = countFieldsMatchesType(field.subfields) > 0;\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items,\n          matchesType: hasItemsMatchesType,\n        };\n      } else {\n        const matchesType = fieldType !== undefined ? field.type === fieldType : undefined;\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n          matchesType,\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  render() {\n    const {config, customProps, setField, setFieldSrc, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField,\n      setFieldSrc,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst { clone } = Utils;\nconst {getFieldConfig, getFuncConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\nconst {getFuncPathLabels, getWidgetForFieldOp} = Utils.RuleUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class FuncSelect extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldType: PropTypes.string,\n    fieldSrc: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n    isLHS: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n      \n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"fieldType\", \"fieldSrc\", \"operator\", \"isFuncArg\", \"isLHS\"];\n    const keysForMeta = [\"config\", \"field\", \"fieldType\", \"fieldSrc\", \"value\", \"isLHS\"];\n    const needUpdateItems = !this.items || keysForItems.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps, this.meta);\n    }\n  }\n\n  getItems({config, field, fieldType, isLHS, operator, parentFuncs, fieldDefinition, isFuncArg}, {lookingForFieldType}) {\n    const {canUseFuncForField} = config.settings;\n    const filteredFuncs = this.filterFuncs(config, config.funcs, field, fieldType, isLHS, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition);\n    const items = this.buildOptions(config, filteredFuncs, lookingForFieldType);\n    return items;\n  }\n\n  getMeta({config, field, fieldType, value, isLHS, isFuncArg}) {\n    const {funcPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedFuncKey = value;\n    const isFuncSelected = !!value;\n\n    const leftFieldConfig = getFieldConfig(config, field);\n    const leftFieldWidgetField = leftFieldConfig?.widgets?.field;\n    const leftFieldWidgetFieldProps = leftFieldWidgetField && leftFieldWidgetField.widgetProps || {};\n    const placeholder = !isFuncSelected ? funcPlaceholder : null;\n\n    const currFunc = isFuncSelected ? getFuncConfig(config, selectedFuncKey) : null;\n    const selectedOpts = currFunc || {};\n\n    const selectedKeys = getFieldPathParts(selectedFuncKey, config);\n    const selectedPath = getFieldPathParts(selectedFuncKey, config, true);\n    const selectedLabel = this.getFuncLabel(currFunc, selectedFuncKey, config);\n    const partsLabels = getFuncPathLabels(selectedFuncKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel)\n      selectedFullLabel = null;\n\n    const isRootFuncAtLHS = isLHS && !isFuncArg;\n    const lookingForFieldType = isRootFuncAtLHS && !isFuncSelected && fieldType;\n    // Field source has been chnaged, no new func selected, but op & value remains\n    const errorText = lookingForFieldType ? \"Please select function\" : null;\n  \n    return {\n      placeholder,\n      selectedKey: selectedFuncKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedFullLabel,\n      errorText,\n      lookingForFieldType,\n    };\n  }\n\n  filterFuncs(config, funcs, leftFieldFullkey, fieldType, isLHS, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition) {\n    funcs = clone(funcs);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    let expectedType;\n    let targetDefinition = leftFieldConfig;\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = widget && config.widgets[widget];\n    if (isFuncArg) {\n      targetDefinition = fieldDefinition;\n      expectedType = fieldDefinition?.type;\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else if (leftFieldConfig) {\n      expectedType = leftFieldConfig.type;\n    } else if (!isLHS) {\n      // no field at LHS, but can use type from \"memory effect\"\n      expectedType = fieldType;\n    }\n\n    function _filter(list, path) {\n      for (let funcKey in list) {\n        let subfields = list[funcKey].subfields;\n        let subpath = (path ? path : []).concat(funcKey);\n        let funcFullkey = subpath.join(fieldSeparator);\n        let funcConfig = getFuncConfig(config, funcFullkey);\n        if (funcConfig.type == \"!struct\") {\n          if(_filter(subfields, subpath) == 0)\n            delete list[funcKey];\n        } else {\n          let canUse = !expectedType || funcConfig.returnType == expectedType;\n          if (targetDefinition?.funcs)\n            canUse = canUse && targetDefinition.funcs.includes(funcFullkey);\n          if (canUseFuncForField)\n            canUse = canUse && canUseFuncForField(leftFieldFullkey, leftFieldConfig, funcFullkey, funcConfig, operator);\n          // don't use func in func (can be configurable, but usually users don't need this)\n          if (!funcConfig.allowSelfNesting && parentFuncs && parentFuncs.map(([func, _arg]) => func).includes(funcFullkey))\n            canUse = false;\n          if (!canUse)\n            delete list[funcKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(funcs, []);\n\n    return funcs;\n  }\n\n  buildOptions(config, funcs, fieldType = undefined, path = null, optGroup = null) {\n    if (!funcs)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    const countFieldsMatchesType = (fields) => {\n      return Object.keys(fields || {}).reduce((acc, fieldKey) => {\n        const field = fields[fieldKey];\n        if (field.type === \"!struct\") {\n          return acc + countFieldsMatchesType(field.subfields);\n        } else {\n          return acc + (field.type === fieldType ? 1 : 0);\n        }\n      }, 0);\n    };\n\n    return keys(funcs).map(funcKey => {\n      const fullFuncPath = [...(path ?? []), funcKey];\n      const func = funcs[funcKey];\n      const label = this.getFuncLabel(func, fullFuncPath, config);\n      const partsLabels = getFuncPathLabels(fullFuncPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label)\n        fullLabel = null;\n      const tooltip = func.tooltip;\n\n      if (func.type == \"!struct\") {\n        const items = this.buildOptions(config, func.subfields, fieldType, fullFuncPath, {\n          label,\n          tooltip,\n        });\n        const hasItemsMatchesType = countFieldsMatchesType(func.subfields) > 0;\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          items,\n          matchesType: hasItemsMatchesType,\n        };\n      } else {\n        const matchesType = fieldType !== undefined ? func.returnType === fieldType : undefined;\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n          matchesType,\n        };\n      }\n    });\n  }\n\n  getFuncLabel(funcOpts, funcKey, config) {\n    if (!funcKey) return null;\n    let fieldSeparator = config.settings.fieldSeparator;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let funcParts = getFieldParts(funcKey, config);\n    let label = funcOpts?.label || last(funcParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderFunc} = config.settings;\n    const renderProps = {\n      config,\n      customProps,\n      readonly,\n      setField: setValue,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderFunc(renderProps, config.ctx);\n  }\n\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { getTitleInListValues } = Utils.ListUtils;\nconst { _widgetDefKeysToOmit } = Utils.ConfigUtils;\n\nexport default ({\n  delta, isFuncArg, valueSrc,\n  value: immValue, valueError: immValueError, asyncListValues,\n  isSpecialRange, fieldDefinition,\n  widget, widgetDefinition, widgetValueLabel, valueLabels, textSeparators, setValueHandler,\n  config, field, fieldSrc, fieldType, isLHS, operator, readonly, parentField, parentFuncs, id, groupId\n}) => {\n  const {factory: widgetFactory, ...fieldWidgetProps} = widgetDefinition;\n  const isConst = isFuncArg && fieldDefinition.valueSources && fieldDefinition.valueSources.length == 1 && fieldDefinition.valueSources[0] == \"const\";\n  const defaultValue = fieldDefinition.defaultValue;\n\n  if (!widgetFactory) {\n    return \"?\";\n  }\n    \n  let value = isSpecialRange \n    ? [immValue.get(0), immValue.get(1)] \n    : (immValue ? immValue.get(delta) : undefined);\n  const valueError = immValueError && (isSpecialRange \n    ? [immValueError.get(0), immValueError.get(1)]\n    : immValueError.get(delta)\n  ) || null;\n  if (isSpecialRange && value[0] === undefined && value[1] === undefined)\n    value = undefined;\n  const {fieldSettings} = fieldDefinition || {};\n  const widgetProps = omit({\n    ...fieldWidgetProps, \n    ...fieldSettings,\n    config: config,\n    field: field,\n    fieldSrc: fieldSrc,\n    fieldType: fieldType,\n    isLHS: isLHS,\n    parentField: parentField,\n    parentFuncs: parentFuncs,\n    fieldDefinition: fieldDefinition,\n    operator: operator,\n    delta: delta,\n    isSpecialRange: isSpecialRange,\n    isFuncArg: isFuncArg,\n    value: value,\n    valueError: valueError,\n    label: widgetValueLabel.label,\n    placeholder: widgetValueLabel.placeholder,\n    placeholders: valueLabels ? valueLabels.placeholder : null,\n    textSeparators: textSeparators,\n    setValue: setValueHandler,\n    readonly: readonly,\n    asyncListValues: asyncListValues,\n    id, groupId\n  }, [\n    ..._widgetDefKeysToOmit,\n    \"toJS\"\n  ]);\n\n  if (widget == \"field\") {\n    //\n  }\n\n  if (isConst && defaultValue) {\n    const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n    if (typeof defaultValue == \"boolean\") {\n      return defaultValue ? (widgetProps.labelYes || \"YES\") : (widgetProps.labelNo || \"NO\");\n    } else if (listValues) {\n      if (Array.isArray(defaultValue))\n        return defaultValue.map(v => getTitleInListValues(listValues, v) || v).join(\", \");\n      else\n        return (getTitleInListValues(listValues, defaultValue) || defaultValue);  \n    }\n    return \"\"+defaultValue;\n  }\n    \n  return widgetFactory(widgetProps, config.ctx);\n};\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\nimport {defaultValue} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport pick from \"lodash/pick\";\nimport WidgetFactory from \"./WidgetFactory\";\nimport classNames from \"classnames\";\nimport {Col} from \"../utils\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\nconst {getValueSourcesForFieldOp, getWidgetForFieldOp, getValueLabel} = Utils.RuleUtils;\nconst { createListFromArray } = Utils.DefaultUtils;\n\nconst funcArgDummyOpDef = {cardinality: 1};\n\nexport default class Widget extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //instanceOf(Immutable.List)\n    valueSrc: PropTypes.any, //instanceOf(Immutable.List)\n    valueError: PropTypes.any,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    operator: PropTypes.string,\n    readonly: PropTypes.bool,\n    asyncListValues: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    //actions\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    // for isFuncArg\n    isFuncArg: PropTypes.bool,\n    fieldFunc: PropTypes.string,\n    fieldArg: PropTypes.string,\n    leftField: PropTypes.any,\n    // for RuleGroupExt\n    isForRuleGroup: PropTypes.bool,\n    parentField: PropTypes.string,\n    // for func in func\n    parentFuncs: PropTypes.array,\n    isLHS: PropTypes.bool,\n    // for case_value\n    isCaseValue: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\n      \"config\", \"field\", \"fieldSrc\", \"fieldType\", \"fieldFunc\", \"fieldArg\", \"leftField\", \"operator\", \"valueSrc\", \"isFuncArg\", \"asyncListValues\", \"isLHS\"\n    ];\n    const needUpdateMeta = !this.meta \n          || keysForMeta\n            .map(k => (\n              nextProps[k] !== prevProps[k] \n                  //tip: for isFuncArg we need to wrap value in Imm list\n                  || k == \"isFuncArg\" && nextProps[\"isFuncArg\"] && nextProps[\"value\"] !== prevProps[\"value\"])\n            )\n            .filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  _setValue = (isSpecialRange, delta, widgetType, value, asyncListValues, __isInternal) => {\n    if (isSpecialRange && Array.isArray(value)) {\n      const oldRange = [this.props.value.get(0), this.props.value.get(1)];\n      if (oldRange[0] != value[0])\n        this.props.setValue(0, value[0], widgetType, asyncListValues, __isInternal);\n      if (oldRange[1] != value[1])\n        this.props.setValue(1, value[1], widgetType, asyncListValues, __isInternal);\n    } else {\n      this.props.setValue(delta, value, widgetType, asyncListValues, __isInternal);\n    }\n  };\n\n  _onChangeValueSrc = (delta, srcKey) => {\n    this.props.setValueSrc(delta, srcKey);\n  };\n\n  getMeta({\n    config, field: simpleField, fieldSrc, fieldType, fieldFunc, fieldArg, operator, valueSrc: valueSrcs, value: values,\n    isForRuleGroup, isCaseValue, isFuncArg, leftField, asyncListValues\n  }) {\n    const field = isFuncArg ? {func: fieldFunc, arg: fieldArg} : simpleField;\n    const isOkWithoutField = !simpleField && fieldType;\n    let iValueSrcs = valueSrcs;\n    let iValues = values;\n    if (isFuncArg || isForRuleGroup || isCaseValue) {\n      iValueSrcs = createListFromArray([valueSrcs]);\n      iValues = createListFromArray([values]);\n    }\n\n    let fieldDefinition = getFieldConfig(config, field);\n    if (!fieldDefinition && isOkWithoutField) {\n      fieldDefinition = config.types[fieldType];\n    }\n    let defaultWidget = getWidgetForFieldOp(config, field, operator);\n    if (!defaultWidget && isOkWithoutField) {\n      defaultWidget = config.types[fieldType]?.mainWidget;\n    }\n    const operatorDefinition = isFuncArg\n      ? funcArgDummyOpDef\n      : getOperatorConfig(config, operator, field);\n    if ((fieldDefinition == null || operatorDefinition == null) && !isCaseValue) {\n      return null;\n    }\n    const isSpecialRange = operatorDefinition?.isSpecialRange;\n    const isSpecialRangeForSrcField = isSpecialRange && (iValueSrcs.get(0) == \"field\" || iValueSrcs.get(1) == \"field\");\n    const isTrueSpecialRange = isSpecialRange && !isSpecialRangeForSrcField;\n    const cardinality = isTrueSpecialRange ? 1 : defaultValue(operatorDefinition?.cardinality, 1);\n    if (cardinality === 0) {\n      return null;\n    }\n\n    let valueSources = getValueSourcesForFieldOp(config, field, operator, fieldDefinition);\n    if (!field) {\n      valueSources = Object.keys(config.settings.valueSourcesInfo);\n    }\n    const widgets = range(0, cardinality).map(delta => {\n      const valueSrc = iValueSrcs.get(delta) || null;\n      let widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      let widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      if (isSpecialRangeForSrcField) {\n        widget = widgetDefinition.singleWidget;\n        widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      }\n      if (!widgetDefinition && isOkWithoutField) {\n        widget = [\"func\", \"field\"].includes(valueSrc) ? valueSrc : defaultWidget;\n        widgetDefinition = config.widgets[widget];\n      }\n      const widgetType = widgetDefinition?.type;\n      const valueLabel = getValueLabel(config, field, operator, delta, valueSrc, isTrueSpecialRange);\n      const widgetValueLabel = getValueLabel(config, field, operator, delta, null, isTrueSpecialRange);\n      const sepText = operatorDefinition?.textSeparators ? operatorDefinition?.textSeparators[delta] : null;\n      const setValueSrcHandler = this._onChangeValueSrc.bind(this, delta);\n\n      let valueLabels = null;\n      let textSeparators = null;\n      if (isSpecialRange) {\n        valueLabels = [\n          getValueLabel(config, field, operator, 0),\n          getValueLabel(config, field, operator, 1)\n        ];\n        valueLabels = {\n          placeholder: [ valueLabels[0].placeholder, valueLabels[1].placeholder ],\n          label: [ valueLabels[0].label, valueLabels[1].label ],\n        };\n        textSeparators = operatorDefinition?.textSeparators;\n      }\n\n      const setValueHandler = this._setValue.bind(this, isSpecialRange, delta, widgetType);\n\n      return {\n        valueSrc,\n        valueLabel,\n        widget,\n        sepText,\n        setValueSrcHandler,\n        widgetDefinition,\n        widgetValueLabel,\n        valueLabels,\n        textSeparators,\n        setValueHandler\n      };\n    });\n      \n    return {\n      defaultWidget,\n      fieldDefinition,\n      operatorDefinition,\n      isSpecialRange: isTrueSpecialRange,\n      cardinality,\n      valueSources,\n      widgets,\n      iValues, //correct for isFuncArg\n      aField: field, //correct for isFuncArg\n      asyncListValues,\n    };\n  }\n\n  renderWidget = (delta, meta, props) => {\n    const {config, isFuncArg, leftField, operator, value: values, valueError, readonly, parentField, parentFuncs, id, groupId, fieldSrc, fieldType, isLHS} = props;\n    const {settings} = config;\n    const { widgets, iValues, aField, valueSources } = meta;\n    const value = isFuncArg ? iValues : values;\n    const field = isFuncArg ? leftField : aField;\n    const {valueSrc, valueLabel} = widgets[delta];\n    const hasValueSources = valueSources.length > 1 && !readonly;\n    \n    const widgetLabel = settings.showLabels\n      ? <label className=\"rule--label\">{valueLabel.label}</label>\n      : null;\n    return (\n      <div key={\"widget-\"+field+\"-\"+delta} className={classNames(\n        valueSrc == \"func\" ? \"widget--func\" : \"widget--widget\",\n        hasValueSources ? \"widget--has-valuerscs\" : \"widget--has-no-valuerscs\"\n      )}>\n        {valueSrc == \"func\" ? null : widgetLabel}\n        <WidgetFactory\n          id={id}\n          groupId={groupId}\n          valueSrc={valueSrc}\n          delta={delta}\n          value={value}\n          valueError={valueError}\n          isFuncArg={isFuncArg}\n          isLHS={isLHS}\n          {...pick(meta, [\"isSpecialRange\", \"fieldDefinition\", \"asyncListValues\"])}\n          {...pick(widgets[delta], [\"widget\", \"widgetDefinition\", \"widgetValueLabel\", \"valueLabels\", \"textSeparators\", \"setValueHandler\"])}\n          config={config}\n          field={field}\n          fieldSrc={fieldSrc}\n          fieldType={fieldType}\n          parentField={parentField}\n          parentFuncs={parentFuncs}\n          operator={operator}\n          readonly={readonly}\n        />\n      </div>\n    );\n  };\n\n  renderValueSources = (delta, meta, props) => {\n    const {config, isFuncArg, leftField, operator, readonly} = props;\n    const {settings} = config;\n    const { valueSources, widgets, aField } = meta;\n    const field = isFuncArg ? leftField : aField;\n    const {valueSrc, setValueSrcHandler} = widgets[delta];\n    const {valueSourcesInfo, renderValueSources} = settings;\n    const valueSourcesOptions = valueSources.map(srcKey => [srcKey, {\n      label: valueSourcesInfo[srcKey].label\n    }]);\n    const ValueSources = (pr) => renderValueSources(pr, config.ctx);\n\n    const sourceLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return valueSources.length > 1 && !readonly\n      && <div key={\"valuesrc-\"+field+\"-\"+delta} className=\"widget--valuesrc\">\n        {sourceLabel}\n        <ValueSources\n          key={\"valuesrc-\"+delta}\n          delta={delta}\n          valueSources={valueSourcesOptions}\n          valueSrc={valueSrc}\n          config={config}\n          field={field}\n          operator={operator}\n          setValueSrc={setValueSrcHandler}\n          readonly={readonly}\n          title={settings.valueSourcesPopupTitle}\n        />\n      </div>;\n  };\n\n  renderSep = (delta, meta, props) => {\n    const {config} = props;\n    const {widgets} = meta;\n    const {settings} = config;\n    const {sepText} = widgets[delta];\n\n    const sepLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return sepText\n      && <div key={\"widget-separators-\"+delta} className={classNames(\n        \"widget--sep\",\n        delta == 0 && \"widget--sep-first\"\n      )} >\n        {sepLabel}\n        <span>{sepText}</span>\n      </div>;\n  };\n\n  renderWidgetDelta = (delta) => {\n    const sep = this.renderSep(delta, this.meta, this.props);\n    const sources = this.renderValueSources(delta, this.meta, this.props);\n    const widgetCmp = this.renderWidget(delta, this.meta, this.props);\n\n    return [\n      sep,\n      sources,\n      widgetCmp,\n    ];\n  };\n\n  render() {\n    if (!this.meta) return null;\n    const { defaultWidget, cardinality } = this.meta;\n    if (!defaultWidget) return null;\n    const name = defaultWidget;\n\n    return (\n      <Col\n        className={`rule--widget rule--widget--${name.toUpperCase()}`}\n        key={\"widget-col-\"+name}\n      >\n        {range(0, cardinality).map(this.renderWidgetDelta)}\n      </Col>\n    );\n  }\n\n}\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport FuncSelect from \"./FuncSelect\";\nimport Widget from \"./Widget\";\nimport {Col} from \"../utils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFuncConfig} = Utils.ConfigUtils;\nconst {setFunc, setArgValue, setArgValueSrc} = Utils.FuncUtils;\n\n\nexport default class FuncWidget extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.object, //instanceOf(Immutable.Map) //with keys 'func' and `args`\n    setValue: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n    isLHS: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"field\", \"operator\", \"value\", \"fieldSrc\", \"fieldType\", \"isLHS\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({config, field, operator, value}) {\n    const funcKey = value ? value.get(\"func\") : null;\n    const funcDefinition = funcKey ? getFuncConfig(config, funcKey) : null;\n\n    return {\n      funcDefinition, funcKey\n    };\n  }\n\n  setFunc = (funcKey) => {\n    this.props.setValue( setFunc(this.props.value, funcKey, this.props.config) );\n  };\n\n  setArgValue = (argKey, argVal, asyncListValues, __isInternal) => {\n    const {config} = this.props;\n    const {funcDefinition} = this.meta;\n    const {args} = funcDefinition;\n    const argDefinition = args[argKey];\n\n    this.props.setValue(\n      setArgValue(this.props.value, argKey, argVal, argDefinition, config),\n      asyncListValues,\n      __isInternal\n    );\n  };\n\n  setArgValueSrc = (argKey, argValSrc) => {\n    const {config} = this.props;\n    const {funcDefinition} = this.meta;\n    const {args} = funcDefinition;\n    const argDefinition = args[argKey];\n\n    this.props.setValue(\n      setArgValueSrc(this.props.value, argKey, argValSrc, argDefinition, config),\n    );\n  };\n\n  renderFuncSelect = () => {\n    const {config, field, fieldType, fieldSrc, isLHS, operator, customProps, value, readonly, parentFuncs, id, groupId, isFuncArg, fieldDefinition} = this.props;\n    const funcKey = value ? value.get(\"func\") : null;\n    const selectProps = {\n      value: funcKey,\n      setValue: this.setFunc,\n      config, field, fieldType, fieldSrc, isLHS, operator, customProps, readonly, parentFuncs, \n      isFuncArg, fieldDefinition,\n      id, groupId,\n    };\n    const {showLabels, funcLabel} = config.settings;\n    const widgetLabel = showLabels\n      ? <label className=\"rule--label\">{funcLabel}</label>\n      : null;\n\n    return (\n      <Col key=\"func\" className=\"rule--func\">\n        {widgetLabel}\n        <FuncSelect {...selectProps} />\n      </Col>\n    );\n  };\n\n  renderArgLabel = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix, label} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label\">\n        {label || argKey}\n      </Col>\n    );\n  };\n\n  renderArgLabelSep = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label-sep\">\n        {\":\"}\n      </Col>\n    );\n  };\n\n  renderArgVal = (funcKey, argKey, argDefinition) => {\n    const {config, field, fieldType, fieldSrc, isLHS, operator, value, readonly, parentFuncs, id, groupId} = this.props;\n    const arg = value ? value.getIn([\"args\", argKey]) : null;\n    const argVal = arg ? arg.get(\"value\") : undefined;\n    const defaultValueSource = argDefinition.valueSources.length == 1 ? argDefinition.valueSources[0] : undefined;\n    const argValSrc = arg ? (arg.get(\"valueSrc\") || defaultValueSource || \"value\") : defaultValueSource;\n\n    const widgetProps = {\n      config, \n      fieldFunc: funcKey,\n      fieldArg: argKey,\n      leftField: field,\n      fieldType, // type of leftField\n      fieldSrc, // src of leftField\n      isLHS,\n      operator: null,\n      value: argVal,\n      valueSrc: argValSrc,\n      setValue: this.setArgValue,\n      setValueSrc: this.setArgValueSrc,\n      funcKey,\n      argKey,\n      argDefinition,\n      readonly,\n      parentFuncs,\n      id,\n      groupId,\n    };\n    //tip: value & valueSrc will be converted to Immutable.List at <Widget>\n\n    return (\n      <Col className=\"rule--func--arg-value\">\n        <ArgWidget {...widgetProps} />\n      </Col>\n    );\n  };\n\n  renderArgSep = (argKey, argDefinition, argIndex, {renderSeps}) => {\n    if (!argIndex) return null;\n    return (\n      <Col className=\"rule--func--arg-sep\">\n        {renderSeps ? renderSeps[argIndex - 1] : \", \"}\n      </Col>\n    );\n  };\n\n  renderBracketBefore = ({renderBrackets}) => {\n    return (\n      <Col key=\"before_args\" className=\"rule--func--bracket-before\">\n        {renderBrackets ? renderBrackets[0] : \"(\"}\n      </Col>\n    );\n  };\n\n  renderBracketAfter = ({renderBrackets}) => {\n    return (\n      <Col key=\"after_args\" className=\"rule--func--bracket-after\">\n        {renderBrackets ? renderBrackets[1] : \")\"}\n      </Col>\n    );\n  };\n\n  renderFuncArgs = () => {\n    const {funcDefinition, funcKey} = this.meta;\n    if (!funcKey) return null;\n    const {args} = funcDefinition || {};\n    if (!args) return null;\n\n    return (\n      <>\n        {this.renderBracketBefore(funcDefinition)}\n        <Col key=\"args\" className=\"rule--func--args\">\n          {Object.keys(args).map((argKey, argIndex) => (\n            <Col key={`arg-${argKey}-${argIndex}`} className=\"rule--func--arg\">\n              {this.renderArgSep(argKey, args[argKey], argIndex, funcDefinition)}\n              {this.renderArgLabel(argKey, args[argKey])}\n              {this.renderArgLabelSep(argKey, args[argKey])}\n              {this.renderArgVal(funcKey, argKey, args[argKey])}\n            </Col>\n          ))}\n        </Col>\n        {this.renderBracketAfter(funcDefinition)}\n      </>\n    );\n  };\n\n  render() {\n    return (\n      <Col className=\"rule--func--wrapper\">\n        {this.renderFuncSelect()}\n        {this.renderFuncArgs()}\n      </Col>\n    );\n  }\n}\n\n\nclass ArgWidget extends Component {\n  static propTypes = {\n    funcKey: PropTypes.string.isRequired,\n    argKey: PropTypes.string.isRequired,\n    setValue: PropTypes.func.isRequired,\n    setValueSrc: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    isLHS: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"parentFuncs\", \"funcKey\", \"argKey\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({parentFuncs, funcKey, argKey}) {\n    const newParentFuncs = [...(parentFuncs || []), [funcKey, argKey]];\n\n    return {\n      parentFuncs: newParentFuncs\n    };\n  }\n\n  setValue = (_delta, value, _widgetType, asyncListValues, __isInternal) => {\n    const {setValue, argKey} = this.props;\n    setValue(argKey, value, asyncListValues, __isInternal);\n  };\n\n  setValueSrc = (_delta, valueSrc, _widgetType) => {\n    const {setValueSrc, argKey} = this.props;\n    setValueSrc(argKey, valueSrc);\n  };\n\n  render() {\n    const {parentFuncs} = this.meta;\n    return (\n      <Widget\n        {...this.props}\n        setValue={this.setValue}\n        setValueSrc={this.setValueSrc}\n        isFuncArg={true}\n        parentFuncs={parentFuncs}\n      />\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport Field from \"./Field\";\nimport {Col} from \"../utils\";\nimport FuncWidget from \"./FuncWidget\";\n\n\nexport default class FieldWrapper extends PureComponent {\n  render() {\n    const {classname, canSelectFieldSource} = this.props;\n    const fieldSources = canSelectFieldSource && this.renderFieldSources();\n    const field = this.renderField();\n    if (!canSelectFieldSource) {\n      return field;\n    } else {\n      return (\n        <Col className={\"rule--field-wrapper\"}>\n          {fieldSources}\n          {field}\n        </Col>\n      );\n    }\n  }\n\n  renderField = () => {\n    const {config, classname, selectedField, selectedFieldSrc, selectedFieldType, setField, parentField, readonly, id, groupId} = this.props;\n    const supportedFieldSrcs = [\"func\", \"field\"];\n    if (!supportedFieldSrcs.includes(selectedFieldSrc)) {\n      return \"?\";\n    }\n    const field = selectedFieldSrc === \"func\" ? (\n      <FuncWidget\n        isLHS={true}\n        config={config}\n        value={selectedField}\n        fieldSrc={selectedFieldSrc}\n        fieldType={selectedFieldType}\n        parentField={parentField}\n        setValue={setField}\n        readonly={readonly}\n        id={id}\n        groupId={groupId}\n        key={\"field-func-\" + id}\n      />\n    ) : (\n      <Field\n        config={config}\n        selectedField={selectedField}\n        selectedFieldSrc={selectedFieldSrc}\n        selectedFieldType={selectedFieldType}\n        parentField={parentField}\n        setField={setField}\n        customProps={config.settings.customFieldSelectProps}\n        readonly={readonly}\n        id={id}\n        groupId={groupId}\n        key={\"field-\" + id}\n      />\n    );\n    const fieldLabel = selectedFieldSrc === \"func\" ? config.settings.funcLabel : config.settings.fieldLabel;\n    const label = config.settings.showLabels && selectedFieldSrc !== \"func\" && <label className=\"rule--label\">{fieldLabel}</label>;\n    return (\n      <div key={selectedFieldSrc} className={classname}>\n        {label}\n        {field}\n      </div>\n    );\n  };\n\n  renderFieldSources = () => {\n    const { config, readonly, selectedFieldSrc, setFieldSrc, id } = this.props;\n    const { settings } = config;\n    const {\n      fieldSources,\n      valueSourcesInfo,\n      renderValueSources,\n    } = settings;\n    const fieldSourcesOptions = fieldSources.map((srcKey) => [\n      srcKey,\n      {\n        label: valueSourcesInfo[srcKey].label,\n      },\n    ]);\n    const ValueSources = (pr) => renderValueSources(pr, config.ctx);\n\n    const sourceLabel = settings.showLabels ? (\n      <label className=\"rule--label\">&nbsp;</label>\n    ) : null;\n\n    return (\n      fieldSources.length > 1 && !readonly && (\n        <div key={\"fieldsrc\"} className={\"rule--fieldsrc\"}>\n          {sourceLabel}\n          <ValueSources\n            key={\"fieldsrc-\" + id}\n            valueSources={fieldSourcesOptions}\n            valueSrc={selectedFieldSrc}\n            config={config}\n            setValueSrc={setFieldSrc}\n            readonly={readonly}\n            title={settings.fieldSourcesPopupTitle}\n          />\n        </div>\n      )\n    );\n  };\n}\n","import React, { PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nconst {getOperatorConfig} = Utils.ConfigUtils;\n\nexport default class OperatorOptions extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    operatorOptions: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string.isRequired,\n    readonly: PropTypes.bool,\n    //actions\n    setOperatorOption: PropTypes.func.isRequired,\n  };\n\n  render() {\n    if (!this.props.selectedOperator)\n      return null;\n    const operatorDefinitions = getOperatorConfig(this.props.config, this.props.selectedOperator, this.props.selectedField);\n    if (typeof operatorDefinitions.options === \"undefined\") {\n      return null;\n    }\n\n    const { factory: optionsFactory, ...basicOptionsProps } = operatorDefinitions.options;\n    const optionsProps = Object.assign({}, basicOptionsProps, {\n      config: this.props.config,\n      field: this.props.selectedField,\n      fieldSrc: this.props.selectedFieldSrc,\n      operator: this.props.selectedOperator,\n      options: this.props.operatorOptions,\n      setOption: this.props.setOperatorOption,\n      readonly: this.props.readonly,\n    });\n    const optionsCmp = optionsFactory(optionsProps, this.props.config.ctx);\n    const name = this.props.selectedOperator;\n\n    return (\n      <div className={`rule--operator rule--operator--${name.toUpperCase()}`}>\n        {optionsCmp}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport RuleContainer from \"../containers/RuleContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport Widget from \"../rule/Widget\";\nimport OperatorOptions from \"../rule/OperatorOptions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldParts} = Utils.ConfigUtils;\nconst {isEmptyRuleProperties} = Utils.RuleUtils;\n\n\nclass Rule extends Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    operatorOptions: PropTypes.object,\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //depends on widget\n    valueSrc: PropTypes.any,\n    valueType: PropTypes.any,\n    asyncListValues: PropTypes.array,\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    parentField: PropTypes.string, //from RuleGroup\n    valueError: PropTypes.any,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //path: PropTypes.instanceOf(Immutable.List),\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    setOperator: PropTypes.func,\n    setOperatorOption: PropTypes.func,\n    setLock: PropTypes.func,\n    removeSelf: PropTypes.func,\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    reordableNodesCnt: PropTypes.number,\n    totalRulesCnt: PropTypes.number,\n    parentReordableNodesCnt: PropTypes.number,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"selectedOperator\", \"config\", \"reordableNodesCnt\", \"isLocked\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({selectedField, selectedFieldType, selectedOperator, config, reordableNodesCnt, isLocked}) {\n    const {keepInputOnChangeFieldSrc} = config.settings;\n    const selectedFieldParts = getFieldParts(selectedField, config);\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    const isSelectedGroup = selectedFieldConfig && selectedFieldConfig.type == \"!struct\";\n    const isOkWithoutField = keepInputOnChangeFieldSrc && selectedFieldType;\n    const isFieldSelected = !!selectedField || isOkWithoutField;\n    const isFieldAndOpSelected = isFieldSelected && selectedOperator;\n    const selectedOperatorConfig = getOperatorConfig(config, selectedOperator, selectedField);\n    const selectedOperatorHasOptions = selectedOperatorConfig && selectedOperatorConfig.options != null;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator, null, null) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n\n    const showDragIcon = config.settings.canReorder && reordableNodesCnt > 1 && !isLocked;\n    const showOperator = isFieldSelected && !hideOperator;\n    const showOperatorLabel = isFieldSelected && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showWidget = isFieldAndOpSelected && !isSelectedGroup;\n    const showOperatorOptions = isFieldAndOpSelected && selectedOperatorHasOptions;\n\n    return {\n      selectedFieldParts, selectedFieldWidgetConfig,\n      showDragIcon, showOperator, showOperatorLabel, showWidget, showOperatorOptions\n    };\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeRuleConfirmOptions: confirmOptions} = config.settings;\n    const doRemove = () => {\n      this.props.removeSelf();\n    };\n    if (confirmOptions && !this.isEmptyCurrentRule()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      doRemove();\n    }\n  }\n\n  _buildWidgetProps({\n    selectedField, selectedFieldSrc, selectedFieldType,\n    selectedOperator, operatorOptions,\n    value, valueType, valueSrc, asyncListValues, valueError,\n    parentField,\n  }) {\n    return {\n      field: selectedField,\n      fieldSrc: selectedFieldSrc,\n      fieldType: selectedFieldType,\n      operator: selectedOperator,\n      operatorOptions,\n      value,\n      valueType,\n      valueSrc,\n      asyncListValues,\n      valueError,\n      parentField,\n    };\n  }\n\n  isEmptyCurrentRule() {\n    const {config} = this.props;\n    const ruleData = this._buildWidgetProps(this.props);\n    return isEmptyRuleProperties(ruleData, config);\n  }\n\n  renderField() {\n    const {\n      config, isLocked, parentField, groupId, id,\n      selectedFieldSrc, selectedField, selectedFieldType, setField, setFieldSrc,\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    // tip: don't allow function inside !group (yet)\n\n    return <FieldWrapper\n      key=\"field\"\n      classname={classNames(\n        selectedFieldSrc == \"func\" ? \"rule--field--func\" : \"rule--field\",\n      )}\n      config={config}\n      canSelectFieldSource={!parentField}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={!immutableFieldsMode ? setField : dummyFn}\n      setFieldSrc={!immutableFieldsMode ? setFieldSrc : dummyFn}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator () {\n    const {config, isLocked} = this.props;\n    const {\n      selectedFieldParts, selectedFieldWidgetConfig, showOperator, showOperatorLabel\n    } = this.meta;\n    const { immutableOpsMode } = config.settings;\n    \n    return <OperatorWrapper\n      key=\"operator\"\n      config={config}\n      selectedField={this.props.selectedField}\n      selectedFieldSrc={this.props.selectedFieldSrc}\n      selectedFieldType={this.props.selectedFieldType}\n      selectedOperator={this.props.selectedOperator}\n      setOperator={!immutableOpsMode ? this.props.setOperator : dummyFn}\n      selectedFieldParts={selectedFieldParts}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableOpsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  renderWidget() {\n    const {config, isLocked} = this.props;\n    const { showWidget } = this.meta;\n    const { immutableValuesMode } = config.settings;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      {...this._buildWidgetProps(this.props)}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      setValueSrc={!immutableValuesMode ? this.props.setValueSrc : dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderOperatorOptions() {\n    const {config} = this.props;\n    const { showOperatorOptions } = this.meta;\n    const { immutableOpsMode, immutableValuesMode } = config.settings;\n    if (!showOperatorOptions) return null;\n\n    const opOpts = <OperatorOptions\n      key=\"operatorOptions\"\n      selectedField={this.props.selectedField}\n      selectedOperator={this.props.selectedOperator}\n      operatorOptions={this.props.operatorOptions}\n      setOperatorOption={!immutableOpsMode ? this.props.setOperatorOption : dummyFn}\n      config={config}\n      readonly={immutableValuesMode}\n    />;\n\n    return (\n      <Col key={\"op-options-for-\"+this.props.selectedOperator} className=\"rule--operator-options\">\n        {opOpts}\n      </Col>\n    );\n  }\n\n  renderBeforeWidget() {\n    const {config} = this.props;\n    const { renderBeforeWidget } = config.settings;\n    return renderBeforeWidget \n        && <Col key={\"before-widget-for-\" +this.props.selectedOperator} className=\"rule--before-widget\">\n          {typeof renderBeforeWidget === \"function\" ? renderBeforeWidget(this.props, config.ctx) : renderBeforeWidget}\n        </Col>;\n  }\n\n  renderAfterWidget() {\n    const {config} = this.props;\n    const { renderAfterWidget } = config.settings;\n    return renderAfterWidget \n        && <Col key={\"after-widget-for-\" +this.props.selectedOperator} className=\"rule--after-widget\">\n          {typeof renderAfterWidget === \"function\" ? renderAfterWidget(this.props, config.ctx) : renderAfterWidget}\n        </Col>;\n  }\n\n  renderError() {\n    const {config, valueError} = this.props;\n    const { renderRuleError, showErrorMessage } = config.settings;\n    const oneValueError = valueError && valueError.toArray().filter(e => !!e).shift() || null;\n    return showErrorMessage && oneValueError \n        && <div className=\"rule--error\">\n          {renderRuleError ? renderRuleError({error: oneValueError}, config.ctx) : oneValueError}\n        </div>;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const { config } = this.props;\n    const { showDragIcon } = this.meta;\n    const { renderIcon } = config.settings;\n    const Icon = (pr) => renderIcon?.(pr, config.ctx);\n    const icon = <Icon\n      type=\"drag\"\n    />;\n    return showDragIcon && (<div \n      key=\"rule-drag-icon\"\n      onMouseDown={handleDraggerMouseDown}\n      className={\"qb-drag-handler rule--drag-handler\"}\n    >{icon}</div>);\n  }\n\n  renderDel() {\n    const {config, isLocked} = this.props;\n    const {\n      deleteLabel, \n      immutableGroupsMode, \n      renderButton,\n      renderIcon,\n      canDeleteLocked\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n\n    return !immutableGroupsMode && (!isLocked || isLocked && canDeleteLocked) && (\n      <Btn \n        type=\"delRule\" onClick={this.removeSelf} label={deleteLabel} config={config} renderIcon={Icon}\n      />\n    );\n  }\n\n  renderLock() {\n    const {config, isLocked, isTrueLocked, id} = this.props;\n    const {\n      lockLabel, lockedLabel, showLock,\n      renderSwitch\n    } = config.settings;\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n      \n    return showLock && !(isLocked && !isTrueLocked) && (\n      <Switch \n        type=\"lock\" id={id} value={isLocked} setValue={this.setLock} label={lockLabel} checkedLabel={lockedLabel} hideLabel={true} config={config}\n      />\n    );\n  }\n\n  render () {\n    const { showOperatorOptions, selectedFieldWidgetConfig } = this.meta;\n    const { valueSrc, value, config } = this.props;\n    const canShrinkValue = valueSrc.first() == \"value\" && !showOperatorOptions && value.size == 1 && selectedFieldWidgetConfig.fullWidth;\n    const { renderButtonGroup } = config.settings;\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const parts = [\n      this.renderField(),\n      this.renderOperator(),\n      this.renderBeforeWidget(),\n      this.renderWidget(),\n      this.renderAfterWidget(),\n      this.renderOperatorOptions(),\n    ];\n    const body = <div key=\"rule-body\" className={classNames(\"rule--body\", canShrinkValue && \"can--shrink--value\")}>{parts}</div>;\n\n    const error = this.renderError();\n    const drag = this.renderDrag();\n    const lock = this.renderLock();\n    const del = this.renderDel();\n      \n    return (\n      <>\n        {drag}\n        <div className=\"rule--body--wrapper\">\n          {body}{error}\n        </div>\n        <div className=\"rule--header\">\n          <BtnGrp config={config}>\n            {lock}\n            {del}\n          </BtnGrp>\n        </div>\n      </>\n    );\n  }\n\n}\n\n\nexport default RuleContainer(Draggable(\"rule\")(WithConfirmFn(Rule)));\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport mapValues from \"lodash/mapValues\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate, useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {connect} from \"react-redux\";\nconst {defaultGroupConjunction} = Utils.DefaultUtils;\n\n\nconst createGroupContainer = (Group, itemType) => \n  class GroupContainer extends Component {\n    static propTypes = {\n      config: PropTypes.object.isRequired,\n      actions: PropTypes.object.isRequired, //{setConjunction: Function, removeGroup, addGroup, addRule, ...}\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      not: PropTypes.bool,\n      conjunction: PropTypes.string,\n      children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n      onDragStart: PropTypes.func,\n      reordableNodesCnt: PropTypes.number,\n      field: PropTypes.any, // for RuleGroup\n      fieldSrc: PropTypes.string, // for RuleGroup\n      fieldType: PropTypes.string, // for RuleGroup\n      parentField: PropTypes.string, //from RuleGroup\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.selectedConjunction = this._selectedConjunction(props);\n      this.conjunctionOptions = this._getConjunctionOptions(props);\n      this.dummyFn.isDummyFn = true;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    onPropsChanged(nextProps) {\n      const {config, id, conjunction} = nextProps;\n      const oldConfig = this.props.config;\n      const oldConjunction = this.props.conjunction;\n      if (oldConfig != config || oldConjunction != conjunction) {\n        this.selectedConjunction = this._selectedConjunction(nextProps);\n        this.conjunctionOptions = this._getConjunctionOptions(nextProps);\n      }\n    }\n\n    _getConjunctionOptions (props) {\n      return mapValues(props.config.conjunctions, (item, index) => ({\n        id: `conjunction-${props.id}-${index}`,\n        name: `conjunction[${props.id}]`,\n        key: index,\n        label: item.label,\n        checked: index === this._selectedConjunction(props),\n      }));\n    }\n\n    _selectedConjunction = (props) => {\n      props = props || this.props;\n      return props.conjunction || defaultGroupConjunction(props.config, props.field);\n    };\n\n    setConjunction = (conj = null) => {\n      this.props.actions.setConjunction(this.props.path, conj);\n    };\n\n    setNot = (not = null) => {\n      this.props.actions.setNot(this.props.path, not);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeGroup(this.props.path);\n    };\n\n    addGroup = () => {\n      this.props.actions.addGroup(this.props.path);\n    };\n\n    addCaseGroup = () => {\n      this.props.actions.addCaseGroup(this.props.path);\n    };\n\n    addDefaultCaseGroup = () => {\n      this.props.actions.addDefaultCaseGroup(this.props.path);\n    };\n\n    addRule = () => {\n      const parentRuleGroupPath = itemType == \"rule_group\" ? this.props.field : null;\n      this.props.actions.addRule(this.props.path, undefined, undefined, undefined, parentRuleGroupPath);\n    };\n\n    // for RuleGroup\n    setField = (field, asyncListValues, __isInternal) => {\n      this.props.actions.setField(this.props.path, field, asyncListValues, __isInternal);\n    };\n\n    // for RuleGroupExt\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    setValue = (delta, value, type) => {\n      this.props.actions.setValue(this.props.path, delta, value, type);\n    };\n\n    render() {\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const currentNesting = this.props.path.size;\n      const maxNesting = this.props.config.settings.maxNesting;\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n      const fieldType = this.props.fieldType || null;\n\n      // Don't allow nesting further than the maximum configured depth and don't\n      // allow removal of the root group.\n      const allowFurtherNesting = typeof maxNesting === \"undefined\" || currentNesting < maxNesting;\n      const isRoot = currentNesting == 1;\n      return (\n        <div\n          className={\"group-or-rule-container group-container\"}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Group\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              isRoot={isRoot}\n              allowFurtherNesting={allowFurtherNesting}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={this.dummyFn}\n              setNot={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              addGroup={this.dummyFn}\n              addCaseGroup={this.dummyFn}\n              addDefaultCaseGroup={this.dummyFn}\n              addRule={this.dummyFn}\n              setField={this.dummyFn}\n              setOperator={this.dummyFn}\n              setValue={this.dummyFn}\n              value={this.props.value || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Group\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              isRoot={isRoot}\n              allowFurtherNesting={allowFurtherNesting}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={isInDraggingTempo ? this.dummyFn : this.setConjunction}\n              setNot={isInDraggingTempo ? this.dummyFn : this.setNot}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              addGroup={isInDraggingTempo ? this.dummyFn : this.addGroup}\n              addCaseGroup={isInDraggingTempo ? this.dummyFn : this.addCaseGroup}\n              addDefaultCaseGroup={isInDraggingTempo ? this.dummyFn : this.addDefaultCaseGroup}\n              addRule={isInDraggingTempo ? this.dummyFn : this.addRule}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              value={this.props.value || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Group, itemType) => {\n  const ConnectedGroupContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createGroupContainer(Group, itemType));\n  ConnectedGroupContainer.displayName = \"ConnectedGroupContainer\";\n\n  return ConnectedGroupContainer;\n};\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class GroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, addGroup, removeSelf, setLock, isLocked, isTrueLocked, id,\n      canAddGroup, canAddRule, canDeleteGroup\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, addGroupLabel, delGroupLabel, groupActionsPosition, \n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn\n      type=\"addRule\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n    const addGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addGroup\" onClick={addGroup} label={addGroupLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn\n      type=\"delGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {addGroupBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport startsWith from \"lodash/startsWith\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport classNames from \"classnames\";\nimport { Item } from \"./Item\";\nimport {GroupActions} from \"./GroupActions\";\nimport {WithConfirmFn, dummyFn} from \"../utils\";\nconst {isEmptyGroupChildren} = Utils.RuleUtils;\n\nconst defaultPosition = \"topRight\";\n\n\nexport class BasicGroup extends Component {\n  static propTypes = {\n    reordableNodesCnt: PropTypes.number,\n    conjunctionOptions: PropTypes.object.isRequired,\n    allowFurtherNesting: PropTypes.bool.isRequired,\n    isRoot: PropTypes.bool.isRequired,\n    not: PropTypes.bool,\n    selectedConjunction: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    path: PropTypes.any, //instanceOf(Immutable.List)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    onDragStart: PropTypes.func,\n    addRule: PropTypes.func.isRequired,\n    addGroup: PropTypes.func.isRequired,\n    removeSelf: PropTypes.func.isRequired,\n    setConjunction: PropTypes.func.isRequired,\n    setNot: PropTypes.func.isRequired,\n    setLock: PropTypes.func.isRequired,\n    actions: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n    this.renderItem = this.renderItem.bind(this);\n  }\n\n  isGroupTopPosition() {\n    return startsWith(this.props.config.settings.groupActionsPosition || defaultPosition, \"top\");\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeGroupConfirmOptions: confirmOptions} = config.settings;\n    const doRemove = () => {\n      this.props.removeSelf();\n    };\n    if (confirmOptions && !this.isEmptyCurrentGroup()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      doRemove();\n    }\n  }\n\n  isEmptyCurrentGroup() {\n    const {children1, config} = this.props;\n    return isEmptyGroupChildren(children1, config);\n  }\n\n  render() {\n    return <>\n      {this.renderHeaderWrapper()}\n      {this.renderChildrenWrapper()}\n      {this.renderFooterWrapper()}\n    </>;\n  }\n\n  showNot() {\n    const {config} = this.props;\n    return config.settings.showNot;\n  }\n\n  // show conjs for 2+ children?\n  showConjs() {\n    const {conjunctionOptions, children1, config} = this.props;\n    const conjunctionCount = Object.keys(conjunctionOptions).length;\n    return conjunctionCount > 1 || this.showNot();\n  }\n\n  isNoChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.size == 0 : true;\n  }\n\n\n  isOneChild() {\n    const {children1} = this.props;\n    return children1 ? children1.size < 2 : true;\n  }\n\n  renderChildrenWrapper() {\n    const {children1} = this.props;\n\n    return children1 && (\n      <div key=\"group-children\" className={classNames(\n        \"group--children\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        this.childrenClassName()\n      )}>{this.renderChildren()}</div>\n    );\n  }\n\n  childrenClassName = () => \"\";\n\n  renderHeaderWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n      )}>\n        {this.renderHeader()}\n        {isGroupTopPosition && this.renderBeforeActions()}\n        {isGroupTopPosition && this.renderActions()}\n        {isGroupTopPosition && this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderFooterWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return !isGroupTopPosition && (\n      <div key=\"group-footer\" className='group--footer'>\n        {this.renderBeforeActions()}\n        {this.renderActions()}\n        {this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderBeforeActions = () => {\n    const BeforeActions = this.props.config.settings.renderBeforeActions;\n    if (BeforeActions == undefined)\n      return null;\n\n    return typeof BeforeActions === \"function\" ? BeforeActions(this.props, this.props.config.ctx) : BeforeActions;\n  };\n\n  renderAfterActions = () => {\n    const AfterActions = this.props.config.settings.renderAfterActions;\n    if (AfterActions == undefined)\n      return null;\n\n    return typeof AfterActions === \"function\" ? AfterActions(this.props, this.props.config.ctx) : AfterActions;\n  };\n\n  renderActions() {\n    const {config, addRule, addGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <GroupActions\n      config={config}\n      addRule={addRule}\n      addGroup={addGroup}\n      canAddGroup={this.canAddGroup()}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  canAddGroup() {\n    return this.props.allowFurtherNesting;\n  }\n  canAddRule() {\n    const maxNumberOfRules = this.props.config.settings.maxNumberOfRules;\n    const totalRulesCnt = this.props.totalRulesCnt;\n    if (maxNumberOfRules) {\n      return totalRulesCnt < maxNumberOfRules;\n    }\n    return true;\n  }\n  canDeleteGroup() {\n    return !this.props.isRoot;\n  }\n\n  renderChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.map(this.renderItem).toList() : null;\n  }\n\n  renderItem(item) {\n    const props = this.props;\n    const {config, actions, onDragStart, isLocked} = props;\n    const isRuleGroup = item.get(\"type\") == \"group\" && item.getIn([\"properties\", \"field\"]) != null;\n    const type = isRuleGroup ? \"rule_group\" : item.get(\"type\");\n    \n    return (\n      <Item\n        {...this.extraPropsForItem(item)}\n        key={item.get(\"id\")}\n        id={item.get(\"id\")}\n        groupId={props.id}\n        //path={props.path.push(item.get('id'))}\n        path={item.get(\"path\")}\n        type={type}\n        properties={item.get(\"properties\")}\n        config={config}\n        actions={actions}\n        children1={item.get(\"children1\")}\n        reordableNodesCnt={this.reordableNodesCntForItem(item)}\n        totalRulesCnt={this.totalRulesCntForItem(item)}\n        parentReordableNodesCnt={this.reordableNodesCnt()}\n        onDragStart={onDragStart}\n        isDraggingTempo={this.props.isDraggingTempo}\n        isParentLocked={isLocked}\n      />\n    );\n  }\n\n  extraPropsForItem(_item) {\n    return {};\n  }\n\n  reordableNodesCnt() {\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    return this.props.totalRulesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    return this.reordableNodesCnt();\n  }\n\n  showDragIcon() {\n    const { config, isRoot, isLocked } = this.props;\n    const reordableNodesCnt = this.reordableNodesCnt();\n    return config.settings.canReorder && !isRoot && reordableNodesCnt > 1 && !isLocked;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const { config } = this.props;\n    const { renderIcon } = config.settings;\n    const Icon = (pr) => renderIcon?.(pr, config.ctx);\n    const icon = <Icon\n      type=\"drag\"\n    />;\n    return this.showDragIcon() && (<div \n      key=\"group-drag-icon\"\n      onMouseDown={handleDraggerMouseDown}\n      className={\"qb-drag-handler group--drag-handler\"}\n    >{icon}</div>);\n  }\n\n  conjunctionOptions() {\n    const { conjunctionOptions } = this.props;\n    return conjunctionOptions;\n  }\n\n  renderConjs() {\n    const {\n      config, children1, id,\n      selectedConjunction, setConjunction, not, setNot, isLocked\n    } = this.props;\n\n    const {immutableGroupsMode, renderConjs, showNot: _showNot, notLabel} = config.settings;\n    const conjunctionOptions = this.conjunctionOptions();\n    if (!this.showConjs())\n      return null;\n    if (!children1 || !children1.size)\n      return null;\n\n    const renderProps = {\n      disabled: this.isOneChild(),\n      readonly: immutableGroupsMode || isLocked,\n      selectedConjunction: selectedConjunction,\n      setConjunction: immutableGroupsMode ? dummyFn : setConjunction,\n      conjunctionOptions: conjunctionOptions,\n      config: config,\n      not: not || false,\n      id: id,\n      setNot: immutableGroupsMode ? dummyFn : setNot,\n      notLabel: notLabel,\n      showNot: this.showNot(),\n      isLocked: isLocked\n    };\n    return renderConjs(renderProps, config.ctx);\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n}\n\nexport default GroupContainer(Draggable(\"group\")(WithConfirmFn(BasicGroup)), \"group\");\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, delGroupLabel,\n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} hideLabel={true} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addRuleGroup\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={\"group--actions\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupActions} from \"./RuleGroupActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {WithConfirmFn} from \"../utils\";\n\n\nclass RuleGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  childrenClassName = () => \"rule_group--children\";\n  \n  renderHeaderWrapper = () => null;\n  renderFooterWrapper = () => null;\n  renderConjs = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => false;\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1?.size || 0;\n  }\n\n  renderChildrenWrapper() {\n    return (\n      <>\n        {this.renderDrag()}\n        {this.renderField()}\n        {this.renderActions()}\n        {super.renderChildrenWrapper()}\n      </>\n    );\n  }\n\n  renderField() {\n    const { config, selectedField, selectedFieldSrc, selectedFieldType, setField, setFieldSrc, parentField, id, groupId, isLocked } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    \n    return <FieldWrapper\n      key=\"field\"\n      classname={\"group--field\"}\n      config={config}\n      canSelectFieldSource={false}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={setField}\n      setFieldSrc={setFieldSrc}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  extraPropsForItem(_item) {\n    return {\n      parentField: this.props.selectedField\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group\")(WithConfirmFn(RuleGroup)), \"rule_group\");\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupExtActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addSubRuleLabel, delGroupLabel,\n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addRuleGroupExt\" onClick={addRule} label={addSubRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={\"group--actions group--actions--tr\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupExtActions} from \"./RuleGroupExtActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\nconst {isEmptyRuleGroupExtPropertiesAndChildren} = Utils.RuleUtils;\n\n\nclass RuleGroupExt extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    value: PropTypes.any,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    setOperator: PropTypes.func,\n    setValue: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  childrenClassName = () => \"rule_group_ext--children\";\n  \n  renderFooterWrapper = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => true;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderGroupField()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderGroupField() {\n    return (\n      <div className={\"group--field--count--rule\"}>\n        {this.renderField()}\n        {this.renderOperator()}\n        {this.renderWidget()}\n      </div>\n    );\n  }\n\n  showNot() {\n    const {config, selectedField, selectedOperator} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField) || {};\n    return selectedFieldConfig.showNot != undefined ? selectedFieldConfig.showNot : config.settings.showNot;\n  }\n\n  conjunctionOptions() {\n    const {config, selectedField, selectedOperator} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField) || {};\n    let conjunctionOptions = super.conjunctionOptions();\n    if (selectedFieldConfig.conjunctions) {\n      let filtered = {};\n      for (let k of selectedFieldConfig.conjunctions) {\n        const options = conjunctionOptions[k];\n        if (options) {\n          filtered[k] = options;\n        }\n      }\n      conjunctionOptions = filtered;\n    }\n    return conjunctionOptions;\n  }\n\n  renderField() {\n    const { config, selectedField, selectedFieldSrc, selectedFieldType, setField, setFieldSrc, parentField, id, groupId, isLocked } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    \n    return <FieldWrapper\n      key=\"field\"\n      classname={\"rule--field\"}\n      config={config}\n      canSelectFieldSource={false}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={setField}\n      setFieldSrc={setFieldSrc}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator() {\n    const {config, selectedField, selectedFieldSrc, selectedOperator, setField, setOperator, isLocked} = this.props;\n    const { immutableFieldsMode } = config.settings;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n    const showOperatorLabel = selectedField && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showOperator = selectedField && !hideOperator;\n\n    return <OperatorWrapper\n      key=\"operator\"\n      classname={\"group--operator\"}\n      config={config}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedOperator={selectedOperator}\n      setOperator={setOperator}\n      selectedFieldPartsLabels={[\"group\"]}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableFieldsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    const {children1, config} = this.props;\n    const ruleData = this._buildWidgetProps(this.props);\n    return isEmptyRuleGroupExtPropertiesAndChildren(ruleData, children1, config);\n  }\n\n  _buildWidgetProps({\n    selectedField, selectedFieldSrc, selectedFieldType,\n    selectedOperator, operatorOptions,\n    value, valueType, valueSrc, asyncListValues, valueError,\n    parentField,\n  }) {\n    return {\n      field: selectedField,\n      fieldSrc: selectedFieldSrc,\n      fieldType: selectedFieldType,\n      operator: selectedOperator,\n      operatorOptions,\n      value,\n      valueType, // new Immutable.List([\"number\"])\n      valueSrc: [\"value\"], //new Immutable.List([\"value\"]), // should be fixed in isEmptyRuleGroupExtPropertiesAndChildren\n      //asyncListValues,\n      valueError : null,\n      parentField,\n    };\n  }\n\n  renderWidget() {\n    const {config, selectedField, selectedOperator, isLocked} = this.props;\n    const { immutableValuesMode } = config.settings;\n    const isFieldAndOpSelected = selectedField && selectedOperator;\n    const showWidget = isFieldAndOpSelected;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      isForRuleGroup={true}\n      {...this._buildWidgetProps(this.props)}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      setValueSrc={dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupExtActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1?.size || 0;\n  }\n\n  extraPropsForItem(_item) {\n    return {\n      parentField: this.props.selectedField\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group_ext\")(WithConfirmFn(RuleGroupExt)), \"rule_group\");\n\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class SwitchGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addCaseGroup, addDefaultCaseGroup, setLock, isLocked, isTrueLocked, id, canAddGroup, canAddDefault\n    } = this.props;\n    const {\n      immutableGroupsMode, addCaseLabel, addDefaultCaseLabel, groupActionsPosition, \n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addCaseGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addCaseGroup\" onClick={addCaseGroup} label={addCaseLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const addDefaultCaseGroupBtn = !immutableGroupsMode && canAddDefault && !isLocked && <Btn\n      type=\"addDefaultCaseGroup\" onClick={addDefaultCaseGroup} label={addDefaultCaseLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addCaseGroupBtn}\n          {addDefaultCaseGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {SwitchGroupActions} from \"./SwitchGroupActions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getTotalReordableNodesCountInTree, getTotalRulesCountInTree} = Utils.TreeUtils;\n\n\nclass SwitchGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  childrenClassName = () => \"switch_group--children\";\n  \n  renderFooterWrapper = () => null;\n  hasDefaultCase = () => {\n    return this.props.children1?.size && this.props.children1.filter(c => c.get(\"children1\") == null).size > 0;\n  };\n  canAddGroup() {\n    const { maxNumberOfCases } = this.props.config.settings;\n    const totalCasesCnt = this.props.children1?.size || 0;\n    if (maxNumberOfCases) {\n      return totalCasesCnt < maxNumberOfCases;\n    }\n    return true;\n  }\n  canAddRule() {\n    return false;\n  }\n\n  reordableNodesCnt() {\n    // result will be passed to each case's `parentReordableNodesCnt` prop\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n    return casesToReorder;\n  }\n\n  totalRulesCntForItem(item) {\n    return getTotalRulesCountInTree(item);\n  }\n\n  reordableNodesCntForItem(item) {\n    if (this.props.isLocked)\n      return 0;\n    const { canLeaveEmptyCase, canRegroupCases } = this.props.config.settings;\n\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n\n    const nodesInCase = getTotalReordableNodesCountInTree(item);\n    let cnt = nodesInCase;\n    if (cnt == 1 && canRegroupCases && canLeaveEmptyCase && casesToReorder > 1)\n      cnt = 111;\n    return cnt;\n  }\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        //this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderConjs() {\n    const { config } = this.props;\n    const { renderSwitchPrefix } = config.settings;\n    return renderSwitchPrefix || null;\n  }\n\n  showNot() {\n    return false;\n  }\n\n\n  renderActions() {\n    const {config, addCaseGroup, addDefaultCaseGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <SwitchGroupActions\n      config={config}\n      addCaseGroup={addCaseGroup}\n      addDefaultCaseGroup={addDefaultCaseGroup}\n      canAddDefault={!this.hasDefaultCase()}\n      canAddGroup={this.canAddGroup()}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n}\n\n\nexport default GroupContainer(Draggable(\"group switch_group\")(WithConfirmFn(SwitchGroup)), \"switch_group\");\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {GroupActions} from \"./GroupActions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\n\n\nclass CaseGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    parentReordableNodesCnt: PropTypes.number,\n    value: PropTypes.any,\n    setValue: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  isDefaultCase() {\n    return this.props.children1 == undefined;\n  }\n\n  reordableNodesCnt() {\n    // `parentReordableNodesCnt` is number of cases to reorder\n    return this.props.parentReordableNodesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    // `reordableNodesCnt` is number of nodes is current case\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    // `totalRulesCnt` is number of nodes is current case\n    return this.props.totalRulesCnt;\n  }\n\n  showDragIcon() {\n    // default impl of `showDragIcon()` uses `this.reordableNodesCnt()`\n    if (this.isDefaultCase())\n      return false;\n    return super.showDragIcon();\n  }\n\n  childrenClassName = () => \"case_group--children\";\n  \n  renderFooterWrapper = () => null;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeaderLeft()}\n        {this.renderHeaderCenter()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderChildrenWrapper() {\n    if (this.isDefaultCase())\n      return null;\n    // body has 2 columns: condition & value\n    return (\n      <div className={\"case_group--body\"}>\n        {this.renderCondition()}\n        {this.renderValue()}\n      </div>\n    );\n  }\n\n  renderHeaderLeft() {\n    if (this.isDefaultCase()) {\n      const { defaultCaseLabel } = this.props.config.settings;\n      return defaultCaseLabel || \"\";\n    }\n    // default impl:\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderCondition() {\n    if (this.isDefaultCase())\n      return null;\n    return super.renderChildrenWrapper();\n  }\n\n  renderHeaderCenter() {\n    if (this.isDefaultCase())\n      return this.renderValue();\n    else\n      return null;\n  }\n\n  canAddGroup() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddGroup();\n  }\n\n  canAddRule() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddRule();\n  }\n\n  renderValue() {\n    const { config, isLocked, value, setValue, id } = this.props;\n    const { immutableValuesMode } = config.settings;\n\n    const widget = <Widget\n      key=\"values\"\n      isCaseValue={true}\n      field={\"!case_value\"}\n      operator={null}\n      value={value}\n      valueSrc={\"value\"}\n      valueError={null}\n      config={config}\n      setValue={!immutableValuesMode ? setValue : dummyFn}\n      setValueSrc={dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={id}\n      groupId={null}\n    />;\n\n    return (\n      <Col className=\"case_group--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addGroup, addRule, isLocked, isTrueLocked, id} = this.props;\n    return <GroupActions\n      config={config}\n      addGroup={addGroup}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canAddGroup={this.canAddGroup()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    // used to confirm self-deletion\n    const { value } = this.props;\n    const oneValue = value && value.size ? value.get(0) : null;\n    const hasValue = oneValue != null && (Array.isArray(oneValue) ? oneValue.length > 0 : true);\n    return super.isEmptyCurrentGroup() && !hasValue;\n  }\n\n}\n\nexport default GroupContainer(Draggable(\"group case_group\")(WithConfirmFn(CaseGroup)), \"case_group\");\n\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Rule from \"./Rule\";\nimport Group from \"./Group\";\nimport RuleGroup from \"./RuleGroup\";\nimport RuleGroupExt from \"./RuleGroupExt\";\nimport SwitchGroup from \"./SwitchGroup\";\nimport CaseGroup from \"./CaseGroup\";\n\nconst types = [\n  \"rule\",\n  \"group\",\n  \"rule_group\",\n  \"switch_group\",\n  \"case_group\"\n];\n\nconst getProperties = (props) => {\n  const properties = props.properties?.toObject() || {};\n  const result = {...properties};\n  if (props.isParentLocked) {\n    result.isLocked = true;\n  }\n  if (properties.isLocked) {\n    result.isTrueLocked = true;\n  }\n  return result;\n};\n\nconst typeMap = {\n  rule: (props) => (\n    <Rule\n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      config={props.config}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  group: (props) => (\n    <Group \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  rule_group: (props) => (\n    <RuleGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  rule_group_ext: (props) => (\n    <RuleGroupExt \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  switch_group: (props) => (\n    <SwitchGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  case_group: (props) => (\n    <CaseGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n};\n\n\nclass Item extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    type: PropTypes.oneOf(types).isRequired,\n    path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n    properties: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    actions: PropTypes.object.isRequired,\n    reordableNodesCnt: PropTypes.number,\n    onDragStart: PropTypes.func,\n    parentField: PropTypes.string, //from RuleGroup\n    isDraggingTempo: PropTypes.bool,\n    isParentLocked: PropTypes.bool,\n  };\n\n  render() {\n    const { type, ...props } = this.props;\n    const mode = props.properties?.get(\"mode\");\n    const postfix = mode == \"array\" ? \"_ext\" : \"\";    \n    const renderItem = props.config.settings.renderItem;\n    let Cmp = typeMap[type + postfix];\n    if (renderItem) {\n      return renderItem({...props, type, itemComponent: Cmp}, props.config.ctx);\n    }\n    if (!Cmp) return null;\n    return Cmp(props);\n  }\n}\n\nexport { Item };\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Item } from \"./item/Item\";\nimport SortableContainer from \"./containers/SortableContainer\";\nimport {pureShouldComponentUpdate} from \"../utils/reactUtils\";\nconst { getTotalReordableNodesCountInTree, getTotalRulesCountInTree } = Utils.TreeUtils;\nconst { createListFromArray, emptyProperies } = Utils.DefaultUtils;\n\nclass Builder extends Component {\n  static propTypes = {\n    tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    config: PropTypes.object.isRequired,\n    actions: PropTypes.object.isRequired,\n    onDragStart: PropTypes.func,\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const prevProps = this.props;\n    let should = this.pureShouldComponentUpdate(nextProps, nextState);\n    if (should) {\n      let chs = [];\n      for (let k in nextProps) {\n        let changed = (nextProps[k] !== prevProps[k]);\n        if (changed && k != \"__isInternalValueChange\") {\n          chs.push(k);\n        }\n      }\n      if (!chs.length)\n        should = false;\n      //optimize render\n      if (chs.length == 1 && chs[0] == \"tree\" && nextProps.__isInternalValueChange)\n        should = false;\n    }\n    return should;\n  }\n\n  constructor(props) {\n    super(props);\n    this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n\n    this._updPath(props);\n  }\n\n  _updPath (props) {\n    const id = props.tree.get(\"id\");\n    this.path = createListFromArray([id]);\n  }\n\n  render() {\n    const tree = this.props.tree;\n    const rootType = tree.get(\"type\");\n    const isTernary = rootType == \"switch_group\";\n    const reordableNodesCnt = isTernary ? null : getTotalReordableNodesCountInTree(tree);\n    const totalRulesCnt = isTernary ? null : getTotalRulesCountInTree(tree);\n    const id = tree.get(\"id\");\n    return (\n      <Item \n        key={id}\n        id={id}\n        path={this.path}\n        type={rootType}\n        properties={tree.get(\"properties\") || emptyProperies()}\n        config={this.props.config}\n        actions={this.props.actions}\n        children1={tree.get(\"children1\") || emptyProperies()}\n        //tree={tree}\n        reordableNodesCnt={reordableNodesCnt}\n        totalRulesCnt={totalRulesCnt}\n        parentReordableNodesCnt={0}\n        onDragStart={this.props.onDragStart}\n      />\n    );\n  }\n}\n\nexport default SortableContainer(Builder);\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {clone} = Utils;\nconst {getFieldConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\nconst {getFieldPathLabels, getWidgetForFieldOp} = Utils.RuleUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class ValueField extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    value: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    parentField: PropTypes.string,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"fieldSrc\", \"fieldType\", \"operator\", \"isFuncArg\", \"parentField\"];\n    const keysForMeta = [\"config\", \"field\", \"fieldSrc\", \"fieldType\", \"operator\", \"value\", \"placeholder\", \"isFuncArg\", \"parentField\"];\n    const needUpdateItems = !this.items || keysForItems.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps);\n    }\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getItems({config, field, fieldType, operator, parentField, isFuncArg, fieldDefinition}) {\n    const {canCompareFieldWithField} = config.settings;\n    const fieldSeparator = config.settings.fieldSeparator;\n    const parentFieldPath = getFieldParts(parentField, config);\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig?.subfields : config.fields;\n\n    const filteredFields = this.filterFields(config, sourceFields, field, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition, fieldType);\n    const items = this.buildOptions(parentFieldPath, config, filteredFields, parentFieldPath);\n    return items;\n  }\n\n  getMeta({config, field, fieldType, operator, value, placeholder: customPlaceholder, isFuncArg, parentField}) {\n    const {fieldPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedKey = value;\n    const isFieldSelected = !!value;\n\n    const leftFieldConfig = field ? getFieldConfig(config, field) : {};\n    const leftFieldWidgetField = leftFieldConfig?.widgets?.field;\n    const leftFieldWidgetFieldProps = leftFieldWidgetField?.widgetProps || {};\n    const placeholder = isFieldSelected ? null \n      : (isFuncArg && customPlaceholder || leftFieldWidgetFieldProps.valuePlaceholder || fieldPlaceholder);\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPathParts(selectedKey, config);\n    const selectedPath = getFieldPathParts(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2;\n\n    return {\n      placeholder,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n    };\n  }\n\n  filterFields(config, fields, leftFieldFullkey, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition, fieldType) {\n    fields = clone(fields);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = config.widgets[widget];\n    let expectedType;\n    if (isFuncArg) {\n      expectedType = fieldDefinition?.type;\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else if (leftFieldConfig) {\n      expectedType = leftFieldConfig.type;\n    } else {\n      // no field at LHS, but can use type from \"memory effect\"\n      expectedType = fieldType;\n    }\n    \n    function _filter(list, path) {\n      for (let rightFieldKey in list) {\n        let subfields = list[rightFieldKey].subfields;\n        let subpath = (path ? path : []).concat(rightFieldKey);\n        let rightFieldFullkey = subpath.join(fieldSeparator);\n        let rightFieldConfig = getFieldConfig(config, rightFieldFullkey);\n        if (!rightFieldConfig) {\n          delete list[rightFieldKey];\n        } else if (rightFieldConfig.type == \"!struct\" || rightFieldConfig.type == \"!group\") {\n          if (_filter(subfields, subpath) == 0)\n            delete list[rightFieldKey];\n        } else {\n          // tip: LHS field can be used as arg in RHS function\n          let canUse = (!expectedType || rightFieldConfig.type == expectedType)\n            && (isFuncArg ? true : rightFieldFullkey != leftFieldFullkey);\n          let fn = canCompareFieldWithField || config.settings.canCompareFieldWithField;\n          if (fn)\n            canUse = canUse && fn(leftFieldFullkey, leftFieldConfig, rightFieldFullkey, rightFieldConfig, operator);\n          if (!canUse)\n            delete list[rightFieldKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(fields, parentFieldPath || []);\n\n    return fields;\n  }\n\n  buildOptions(parentFieldPath, config, fields, path = null, optGroup = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    return keys(fields).map(fieldKey => {\n      const fullFieldPath = [...(path ?? []), fieldKey];\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fullFieldPath, config);\n      const partsLabels = getFieldPathLabels(fullFieldPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n\n      if (field.hideForCompare)\n        return undefined;\n\n      if (field.type == \"!struct\" || field.type == \"!group\") {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items: this.buildOptions(parentFieldPath, config, field.subfields, fullFieldPath, {\n            label,\n            tooltip,\n          })\n        };\n      } else {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = getFieldParts(fieldKey, config);\n    let label = fieldOpts?.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      isValueField: true,\n      config,\n      customProps,\n      setField: setValue,\n      readonly,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, labelYes, labelNo, readonly, customProps = {}} = props;\n  const customRadioYesProps = customProps.radioYes || {};\n  const customRadioNoProps = customProps.radioNo || {};\n\n  const onCheckboxChange = e => setValue(e.target.checked);\n  const onRadioChange = e => setValue(e.target.value == \"true\");\n\n  // return <>\n  //     <input key={id}  type=\"checkbox\" id={id} checked={!!value} disabled={readonly} onChange={onCheckboxChange} />\n  //     <label style={{display: \"inline\"}} key={id+\"label\"}  htmlFor={id}>{value ? labelYes : labelNo}</label>\n  // </>;\n\n  return <>\n    <input type=\"radio\" value={true} checked={!!value} disabled={readonly} onChange={onRadioChange} { ...customRadioYesProps }/> {labelYes}\n    <input type=\"radio\" value={false} checked={!value} disabled={readonly} onChange={onRadioChange} { ...customRadioNoProps } /> {labelNo}\n  </>;\n\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <input\n      type=\"text\" \n      value={textValue} \n      placeholder={placeholder} \n      disabled={readonly} \n      onChange={onChange}\n      maxLength={maxLength}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, maxRows, fullWidth, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <textarea\n      value={textValue} \n      placeholder={placeholder}\n      disabled={readonly}\n      onChange={onChange}\n      maxLength={maxLength}\n      style={{\n        width: fullWidth ? \"100%\" : undefined\n      }}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"date\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"time\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    else\n      value = moment(new Date(value)).format(valueFormat);\n    setValue(value);\n  };\n\n  let dtValue = value;\n  if (!value)\n    dtValue = \"\";\n  else\n    dtValue = moment(value).format(\"YYYY-MM-DDTHH:mm\");\n  \n  return (\n    <input type=\"datetime-local\"  value={dtValue}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const getMultiSelectValues = (multiselect) => {\n    let values = [];\n    const options = multiselect.options;\n    for (let i = 0 ; i < options.length ; i++) {\n      const opt = options[i];\n      if (opt.selected) {\n        values.push(opt.value);\n      }\n    }\n    if (!values.length)\n      values = undefined; //not allow []\n    return values;\n  };\n\n  const onChange = e => setValue(getMultiSelectValues(e.target));\n  \n  return (\n    <select multiple\n      onChange={onChange}\n      value={value}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n    >\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const onChange = e => setValue(e.target.value);\n  \n  const hasValue = value != null;\n  return (\n    <select\n      onChange={onChange}\n      value={hasValue ? value : \"\"}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\"])}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <input type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps = {}, } = props;\n  const customInputProps = customProps.input || {};\n  const customSliderProps = customProps.slider || customProps;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <div style={{display: \"inline-flex\"}}>\n      <input key={\"number\"} type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customInputProps} />\n      <input key={\"range\"} type=\"range\"  value={numberValue} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customSliderProps} />\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({items, setField, selectedKey, readonly, errorText}) => {\n  const renderOptions = (fields) => (\n    fields.map(field => {\n      const {items, path, label, disabled, matchesType} = field;\n      if (items) {\n        return <optgroup disabled={disabled} key={path} label={label}>{renderOptions(items)}</optgroup>;\n      } else {\n        const style = matchesType ? { fontWeight: \"bold\" } : {};\n        return <option disabled={disabled} key={path} value={path} style={style}>{label}</option>;\n      }\n    })\n  );\n\n  const onChange = e => setField(e.target.value);\n  \n  const hasValue = selectedKey != null;\n  return (\n    <select \n      onChange={onChange}\n      value={hasValue ? selectedKey : \"\"}\n      disabled={readonly}\n      style={{ color: errorText ? \"red\" : null }}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions(items)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel}) => {\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(key => {\n      const {id, name, label, checked} = conjunctionOptions[key];\n      const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n      if ((readonly || disabled) && !checked)\n        return null;\n      return [\n        <input key={id+postfix} type=\"radio\" id={id+postfix} name={name+postfix} checked={checked} disabled={readonly || disabled} value={key} onChange={onChange} />\n        ,\n        <label key={id+postfix+\"label\"} htmlFor={id+postfix}>{label}</label>\n      ];\n    });\n  \n  const renderNot = () => {\n    const postfix = \"not\";\n    return [\n      <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={not} disabled={readonly} onChange={onNotChange} />\n      ,\n      <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{notLabel || \"NOT\"}</label>\n    ];\n  };\n\n  const onChange = e => setConjunction(e.target.value);\n\n  const onNotChange = e => setNot(e.target.checked);\n\n  return [\n    showNot && renderNot(),\n    showConj && renderOptions()\n  ];\n  \n};\n","import React from \"react\";\n\nconst typeToLabel = {\n  \"addRuleGroup\": \"+\",\n  \"addRuleGroupExt\": \"+\",\n  \"delGroup\": \"x\",\n  \"delRuleGroup\": \"x\",\n  \"delRule\": \"x\",\n};\n\nexport default ({type, label, onClick, readonly}) => {\n  const btnLabel = label || typeToLabel[type];\n  return <button onClick={onClick} type=\"button\" disabled={readonly}>{btnLabel}</button>;\n};\n","import React from \"react\";\nimport { DragIcon } from \"../../../utils\";\n\nexport default ({type}) => {\n  const typeToIcon = {\n  };\n  let icon = typeToIcon[type] || null;\n  if (!icon && type === \"drag\") {\n    icon = <DragIcon />;\n  }\n\n  return icon;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\n\nexport default ({config, valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => (\n      <option key={srcKey} value={srcKey}>{info.label}</option>\n    ))\n  );\n\n  const onChange = e => setValueSrc(e.target.value);\n  \n  return (\n    <select \n      onChange={onChange}\n      value={valueSrc || \"\"}\n      disabled={readonly}\n    >\n      {renderOptions(valueSources)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({value, setValue, label, id, config, type}) => {\n  const onChange = e => setValue(e.target.checked);\n  const postfix = type;\n  return [\n    <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={!!value} onChange={onChange} />\n    ,\n    <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{label}</label>\n  ];\n};\n","export default ({onOk, okText, cancelText, title}) => {\n  if (confirm(title)) {\n    onOk();\n  }\n};\n","import React from \"react\";\n\n// value widgets\nexport {default as VanillaBooleanWidget} from \"./value/VanillaBoolean\";\nexport {default as VanillaTextWidget} from \"./value/VanillaText\";\nexport {default as VanillaTextAreaWidget} from \"./value/VanillaTextArea\";\nexport {default as VanillaDateWidget} from \"./value/VanillaDate\";\nexport {default as VanillaTimeWidget} from \"./value/VanillaTime\";\nexport {default as VanillaDateTimeWidget} from \"./value/VanillaDateTime\";\nexport {default as VanillaMultiSelectWidget} from \"./value/VanillaMultiSelect\";\nexport {default as VanillaSelectWidget} from \"./value/VanillaSelect\";\nexport {default as VanillaNumberWidget} from \"./value/VanillaNumber\";\nexport {default as VanillaSliderWidget} from \"./value/VanillaSlider\";\n\n// field select widget\nexport {default as VanillaFieldSelect} from \"./core/VanillaFieldSelect\";\n\n// core components\nexport {default as VanillaConjs} from \"./core/VanillaConjs\";\nexport {default as VanillaButton} from \"./core/VanillaButton\";\nexport {default as VanillaIcon} from \"./core/VanillaIcon\";\nexport {default as VanillaButtonGroup} from \"./core/VanillaButtonGroup\";\nexport {default as VanillaValueSources} from \"./core/VanillaValueSources\";\nexport {default as VanillaSwitch} from \"./core/VanillaSwitch\";\nexport {default as vanillaConfirm} from \"./core/vanillaConfirm\";\n\nexport const VanillaProvider = ({config, children}) => children;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\n\nexport default class Proximity extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    setOption: PropTypes.func.isRequired,\n    options: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    minProximity: PropTypes.number,\n    maxProximity: PropTypes.number,\n    optionPlaceholder: PropTypes.string,\n    optionTextBefore: PropTypes.string,\n    optionLabel: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //children\n  };\n\n  static defaultProps = {\n    customProps: {},\n    minProximity: 2,\n    maxProximity: 10,\n    optionPlaceholder: \"Select words between\",\n    optionLabel: \"Words between\",\n    optionTextBefore: null,\n  };\n\n  handleChange = (value) => {\n    this.props.setOption(\"proximity\", parseInt(value));\n  };\n\n  render() {\n    const {\n      defaults, options, config, optionLabel, optionPlaceholder, customProps, \n      minProximity, maxProximity, optionTextBefore, readonly\n    } = this.props;\n    const {settings, widgets, ctx} = config;\n    const defaultProximity = defaults ? defaults.proximity : undefined;\n    const {showLabels} = settings;\n    const selectedProximity = options.get(\"proximity\", defaultProximity);\n    const proxValues = range(minProximity, maxProximity + 1).map((item) => ({title: item, value: item}));\n    const factory = widgets.select.factory;\n    const Select = (props) => factory(props, ctx);\n\n    return (\n      <div className=\"operator--PROXIMITY\">\n        <div className=\"operator--options\">\n          { showLabels\n            && <label className=\"rule--label\">{optionLabel}</label>\n          }\n          { !showLabels && optionTextBefore\n            && <div className=\"operator--options--sep\">\n              <span>{optionTextBefore}</span>\n            </div>\n          }\n          <Select\n            config={config}\n            value={selectedProximity}\n            listValues={proxValues}\n            setValue={this.handleChange}\n            readonly={readonly}\n            placeholder={optionPlaceholder}\n            {...customProps}\n          />\n        </div>\n        <div className=\"operator--widgets\">{this.props.children}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport * as Widgets from \"../components/widgets\";\nimport * as CustomOperators from \"../components/operators\";\nimport { CoreConfig, Utils } from \"@react-awesome-query-builder/core\";\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  ...CoreConfig.conjunctions,\n};\n\n//----------------------------  operators\n\nconst operators = {\n  ...CoreConfig.operators,\n  proximity: {\n    ...CoreConfig.operators.proximity,\n    options: {\n      ...CoreConfig.operators.proximity.options,\n      factory: (props, {RCE, O: {ProximityOperator}}) => RCE(ProximityOperator, props),\n    },\n  },\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    ...CoreConfig.widgets.text,\n    factory: (props, {RCE, W: {VanillaTextWidget}}) => RCE(VanillaTextWidget, props),\n  },\n  textarea: {\n    ...CoreConfig.widgets.textarea,\n    factory: (props, {RCE, W: {VanillaTextAreaWidget}}) => RCE(VanillaTextAreaWidget, props),\n  },\n  number: {\n    ...CoreConfig.widgets.number,\n    factory: (props, {RCE, W: {VanillaNumberWidget}}) => RCE(VanillaNumberWidget, props),\n  },\n  slider: {\n    ...CoreConfig.widgets.slider,\n    factory: (props, {RCE, W: {VanillaSliderWidget}}) => RCE(VanillaSliderWidget, props),\n  },\n  select: {\n    ...CoreConfig.widgets.select,\n    factory: (props, {RCE, W: {VanillaSelectWidget}}) => RCE(VanillaSelectWidget, props),\n  },\n  multiselect: {\n    ...CoreConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {VanillaMultiSelectWidget}}) => RCE(VanillaMultiSelectWidget, props),\n  },\n  date: {\n    ...CoreConfig.widgets.date,\n    factory: (props, {RCE, W: {VanillaDateWidget}}) => RCE(VanillaDateWidget, props),\n  },\n  time: {\n    ...CoreConfig.widgets.time,\n    factory: (props, {RCE, W: {VanillaTimeWidget}}) => RCE(VanillaTimeWidget, props),\n  },\n  datetime: {\n    ...CoreConfig.widgets.datetime,\n    factory: (props, {RCE, W: {VanillaDateTimeWidget}}) => RCE(VanillaDateTimeWidget, props),\n  },\n  boolean: {\n    ...CoreConfig.widgets.boolean,\n    factory: (props, {RCE, W: {VanillaBooleanWidget}}) => RCE(VanillaBooleanWidget, props),\n  },\n  field: {\n    ...CoreConfig.widgets.field,\n    factory: (props, {RCE, W: {ValueFieldWidget}}) => RCE(ValueFieldWidget, props),\n    customProps: {\n      showSearch: true\n    }\n  },\n  func: {\n    ...CoreConfig.widgets.func,\n    factory: (props, {RCE, W: {FuncWidget}}) => RCE(FuncWidget, props),\n    customProps: {\n      //showSearch: true\n    }\n  },\n  case_value: {\n    ...CoreConfig.widgets.case_value,\n    // simple text value\n    factory: (props, {RCE, W: {VanillaTextWidget}}) =>  RCE(VanillaTextWidget, props),\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  ...CoreConfig.types,\n  select: {\n    ...CoreConfig.types.select,\n    widgets: {\n      ...CoreConfig.types.select.widgets,\n      select: {\n        ...CoreConfig.types.select.widgets.select,\n        widgetProps: {\n          customProps: {\n            showSearch: true\n          }\n        },\n      }\n    }\n  }\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...CoreConfig.settings,\n\n  renderField: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderOperator: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderFunc: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderConjs: (props, {RCE, W: {VanillaConjs}}) => RCE(VanillaConjs, props),\n  renderSwitch: (props, {RCE, W: {VanillaSwitch}}) => RCE(VanillaSwitch, props),\n  renderButton: (props, {RCE, W: {VanillaButton}}) => RCE(VanillaButton, props),\n  renderIcon: (props, {RCE, W: {VanillaIcon}}) => RCE(VanillaIcon, props),\n  renderButtonGroup: (props, {RCE, W: {VanillaButtonGroup}}) => RCE(VanillaButtonGroup, props),\n  renderProvider: (props, {RCE, W: {VanillaProvider}}) => RCE(VanillaProvider, props),\n  renderValueSources: (props, {RCE, W: {VanillaValueSources}}) => RCE(VanillaValueSources, props),\n  renderFieldSources: (props, {RCE, W: {VanillaValueSources}}) => RCE(VanillaValueSources, props),\n  renderConfirm: (props, {W: {vanillaConfirm}}) => vanillaConfirm(props),\n  renderSwitchPrefix: \"Conditions\",\n\n  customFieldSelectProps: {\n    showSearch: true\n  },\n\n  defaultSliderWidth: \"200px\",\n  defaultSelectWidth: \"200px\",\n  defaultSearchWidth: \"100px\",\n  defaultMaxRows: 5,\n  renderSize: \"small\",\n  maxLabelsLength: 100,\n\n  showLock: false,\n  showNot: true,\n  forceShowConj: false,\n  groupActionsPosition: \"topRight\", // oneOf [topLeft, topCenter, topRight, bottomLeft, bottomCenter, bottomRight]\n  \n};\n\n//----------------------------\n\nconst ctx = {\n  ...CoreConfig.ctx,\n  W: {\n    ...Widgets\n  },\n  O: {\n    ...CustomOperators\n  },\n  RCE: (C, P) => React.createElement(C, P),\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\nconfig = Utils.ConfigMixins.removeMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport debounce from \"lodash/debounce\";\nconst { mergeListValues, listValueToOption, optionToListValue, optionsToListValues, fixListValuesGroupOrder } = Utils.Autocomplete;\nconst { mapListValues, listValuesToArray, getListValue, makeCustomListValue, searchListValue, getItemInListValues } = Utils.ListUtils;\n\nfunction sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\nconst useListValuesAutocomplete = ({\n  asyncFetch, useLoadMore, useAsyncSearch, forceAsyncSearch,\n  asyncListValues: selectedAsyncListValues,\n  listValues: staticListValues, allowCustomValues,\n  value: selectedValue, setValue, placeholder, \n  config\n}, {\n  debounceTimeout,\n  multiple,\n  uif\n}) => {\n  const knownSpecialValues = [\"LOAD_MORE\", \"LOADING_MORE\"];\n  const loadMoreTitle = \"Load more...\";\n  const loadingMoreTitle = \"Loading more...\";\n  const aPlaceholder = forceAsyncSearch ? \"Type to search\" : placeholder;\n\n  // state\n  const [open, setOpen] = React.useState(false);\n  const [asyncFetchMeta, setAsyncFetchMeta] = React.useState(undefined);\n  const [loadingCnt, setLoadingCnt] = React.useState(0);\n  const [isLoadingMore, setIsLoadingMore] = React.useState(false);\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [asyncListValues, setAsyncListValues] = React.useState(undefined);\n\n  // ref\n  const asyncFectchCnt = React.useRef(0);\n  const componentIsMounted = React.useRef(0);\n  const isSelectedLoadMore = React.useRef(false);\n\n  // compute\n  const nSelectedAsyncListValues = listValuesToArray(selectedAsyncListValues);\n  const listValues = asyncFetch\n    ? (selectedAsyncListValues ? mergeListValues(asyncListValues, nSelectedAsyncListValues, true) : asyncListValues)\n    : staticListValues;\n  let listValuesToDisplay = asyncFetch\n    ? asyncListValues\n    : staticListValues;\n  if (allowCustomValues && inputValue && !searchListValue(inputValue, asyncListValues)) {\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, [makeCustomListValue(inputValue)], true);\n  }\n  if (asyncFetch && !asyncListValues && selectedAsyncListValues && !inputValue && !open && uif === \"antd\") {\n    // for initial loading, to resolve \"a\" -> \"A\"\n    listValuesToDisplay = listValues;\n  }\n  if (asyncFetch && !allowCustomValues && selectedAsyncListValues && uif === \"mui\") {\n    // to prevent warning, when select A, search E -> A is missing in options\n    //  MUI: The value provided to Autocomplete is invalid.\n    //  None of the options match with `\"a\"`.\n    //  You can use the `isOptionEqualToValue` prop to customize the equality test.\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, nSelectedAsyncListValues, true, true);\n  }\n  //const isDirtyInitialListValues = asyncListValues == undefined && selectedAsyncListValues && selectedAsyncListValues.length && typeof selectedAsyncListValues[0] != \"object\";\n  const isLoading = loadingCnt > 0;\n  const canInitialLoad = open && asyncFetch\n    && asyncListValues === undefined\n    && (forceAsyncSearch ? inputValue : true);\n  const isInitialLoading = canInitialLoad && isLoading;\n  const canLoadMore = !isInitialLoading && listValues && listValues.length > 0\n    && asyncFetchMeta && asyncFetchMeta.hasMore && (asyncFetchMeta.filter || \"\") === inputValue;\n  const canShowLoadMore = !isLoading && canLoadMore;\n  const options = mapListValues(listValuesToDisplay, listValueToOption);\n  const hasValue = selectedValue != null;\n  const selectedListValue = !multiple && hasValue ? getListValue(selectedValue, listValues) : null;\n  // const selectedListValues = multiple && hasValue ? selectedValue.map(v => getItemInListValues(listValues, v)) : [];\n\n  // fetch\n  const fetchListValues = async (filter = null, isLoadMore = false) => {\n    // clear obsolete meta\n    if (!isLoadMore && asyncFetchMeta) {\n      setAsyncFetchMeta(undefined);\n    }\n\n    const offset = isLoadMore && asyncListValues ? asyncListValues.length : 0;\n    const meta = isLoadMore && asyncFetchMeta || !useLoadMore && { pageSize: 0 };\n\n    const newAsyncFetchCnt = ++asyncFectchCnt.current;\n    const res = await asyncFetch.call(config?.ctx, filter, offset, meta);\n    const isFetchCancelled = asyncFectchCnt.current != newAsyncFetchCnt;\n    if (isFetchCancelled || !componentIsMounted.current) {\n      return null;\n    }\n\n    const { values, hasMore, meta: newMeta } = res?.values\n      ? res\n      : { values: res } // fallback, if response contains just array, not object\n    ;\n    const nValues = listValuesToArray(values);\n    let assumeHasMore;\n    let newValues;\n    if (isLoadMore) {\n      newValues = mergeListValues(asyncListValues, nValues, false);\n      assumeHasMore = newValues.length > asyncListValues.length;\n    } else {\n      newValues = nValues;\n      if (useLoadMore) {\n        assumeHasMore = newValues.length > 0;\n      }\n    }\n\n    // save new meta\n    const realNewMeta = hasMore != null || newMeta != null || assumeHasMore != null ? {\n      ...(assumeHasMore != null ? { hasMore: assumeHasMore } : {}),\n      ...(hasMore != null ? { hasMore } : {}),\n      ...(newMeta != null ? newMeta : {}),\n      filter\n    } : undefined;\n    if (realNewMeta) {\n      setAsyncFetchMeta(realNewMeta);\n    }\n\n    return newValues;\n  };\n\n  const loadListValues = async (filter = null, isLoadMore = false) => {\n    setLoadingCnt(x => (x + 1));\n    setIsLoadingMore(isLoadMore);\n    const list = await fetchListValues(filter, isLoadMore);\n    if (!componentIsMounted.current) {\n      return;\n    }\n    if (list != null) {\n      // tip: null can be used for reject (eg, if user don't want to filter by input)\n      setAsyncListValues(list);\n    }\n    setLoadingCnt(x => (x - 1));\n    setIsLoadingMore(false);\n  };\n  const loadListValuesDebounced = React.useCallback(debounce(loadListValues, debounceTimeout), []);\n\n  React.useEffect(() => {\n    componentIsMounted.current++;\n    // Initial loading\n    if (canInitialLoad && loadingCnt == 0 && asyncFectchCnt.current == 0) {\n      (async () => {\n        await loadListValues();\n      })();\n    }\n    // Unmount\n    return () => {\n      componentIsMounted.current--;\n    };\n  }, [canInitialLoad]);\n\n  // Event handlers\n  const onOpen = () => {\n    setOpen(true);\n  };\n\n  const onClose = async (_e) => {\n    const isLoadMoreClick = isSelectedLoadMore.current;\n    if (isLoadMoreClick) {\n      isSelectedLoadMore.current = false;\n      if (multiple) {\n        // required for MUI\n        setOpen(false);\n      }\n    } else {\n      setOpen(false);\n    }\n\n    if (uif === \"mui\" && !isLoadMoreClick) {\n      // parity with Antd\n      const resetValue = \"\";\n      await onInputChange(null, resetValue, \"my-reset\");\n    }\n  };\n\n  const onDropdownVisibleChange = (open) => {\n    if (open) {\n      onOpen();\n    } else {\n      onClose();\n    }\n  };\n\n  const isSpecialValue = (option) => {\n    const specialValue = option?.specialValue || option?.value;\n    return knownSpecialValues.includes(specialValue);\n  };\n\n  const onChange = async (e, val, option) => {\n    // todo: don't rely on 3rd param. check MUI 6\n    const isClearingAll = multiple && uif === \"mui\" && option === \"clear\";\n    // if user removes all chars in search, don't clear selected value\n    const isClearingInput = !multiple && uif === \"mui\" && option === \"clear\" && e?.type === \"change\";\n    if (uif === \"mui\") {\n      option = val;\n      if (multiple) {\n        val = option.map(o => (o?.value ?? o));\n      } else {\n        val = option?.value ?? option;\n      }\n    }\n    const specialValue = multiple && Array.isArray(option) && option.map(opt => opt?.specialValue).find(v => !!v)\n      || option?.specialValue;\n    if (multiple && val && !Array.isArray(val)) {\n      val = [...(selectedValue || []), val];\n      option = null;\n    }\n    // if there are tags AND input and select is opened, clear input first\n    const shouldIgnore = isClearingAll && val.length === 0 && inputValue && open\n      || isClearingInput;\n    if (shouldIgnore) {\n      return;\n    }\n    const isAddingCustomOptionFromSearch \n      = multiple\n      && val.length && val.length > (selectedValue || []).length\n      && val[val.length-1] == inputValue\n      && !getListValue(inputValue, asyncListValues);\n\n    if (specialValue == \"LOAD_MORE\") {\n      setInputValue(inputValue);\n      isSelectedLoadMore.current = true;\n      await loadListValues(inputValue, true);\n    } else if (specialValue == \"LOADING_MORE\") {\n      isSelectedLoadMore.current = true;\n    } else {\n      if (multiple) {\n        const [newSelectedValues, newSelectedListValues] = optionsToListValues(val, listValues, allowCustomValues);\n        setValue(newSelectedValues, asyncFetch ? newSelectedListValues : undefined);\n        \n        if (isAddingCustomOptionFromSearch) {\n          await sleep(0);\n          await onInputChange(null, \"\", \"my-reset\");\n        }\n      } else {\n        const [v, lvs] = optionToListValue(val, listValues, allowCustomValues);\n        setValue(v, asyncFetch ? lvs : undefined);\n      }\n    }\n  };\n\n  const onInputChange = async (e, newInputValue, eventType) => {\n    // eventType=reset used by MUI on:\n    // - (single) initial set, select option - e = null, newInputValue = selected  (+1 call before with e != null)\n    // - (single/multi, -ACV) blur - e != null, newInputValue = ''\n    // - (multiple v5, -ACV) blur - e = null, newInputValue = '' # unwanted\n    // - (multiple) select option - e != null, newInputValue = ''\n    // - (multiple v4) delete tag while searching - e = null, newInputValue = ''  # unwanted\n    // - (multiple v4) select option while searching - e = null, newInputValue = ''  # unwanted\n\n    const shouldIgnore = uif === \"mui\" && eventType === \"reset\"\n    // && (\n    //   e != null\n    //   // for MUI 4 if search \"A\" and select any option -> should NOT reset search\n    //   // for MUI 5 if search \"A\" and close -> let's hold search but hide, as it's done in antd\n    //   || e === null && inputValue && multiple\n    // )\n    ;\n    const val = newInputValue;\n    if (val === loadMoreTitle || val === loadingMoreTitle || shouldIgnore) {\n      return;\n    }\n\n    if (newInputValue != inputValue) {\n      setInputValue(val);\n\n      const canSearchAsync = useAsyncSearch && (forceAsyncSearch ? !!val : true);\n      if (canSearchAsync) {\n        await loadListValuesDebounced(val);\n      } else if (useAsyncSearch && forceAsyncSearch) {\n        setAsyncListValues([]);\n      }\n    }\n  };\n\n  // Options\n  const extendOptions = (options) => {\n    const filtered = [...options];\n    if (useLoadMore) {\n      if (canShowLoadMore) {\n        filtered.push({\n          specialValue: \"LOAD_MORE\",\n          title: loadMoreTitle,\n        });\n      } else if (isLoadingMore) {\n        filtered.push({\n          specialValue: \"LOADING_MORE\",\n          title: loadingMoreTitle,\n          disabled: true\n        });\n      }\n    }\n    return filtered;\n  };\n\n  const getOptionSelected = (option, valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const selectedValue = valueOrOption.value != undefined ? valueOrOption.value : valueOrOption;\n    return option.value === selectedValue;\n  };\n\n  const getOptionDisabled = (valueOrOption) => {\n    return valueOrOption && valueOrOption.disabled;\n  };\n\n  const getOptionIsCustom = (valueOrOption) => {\n    if (valueOrOption?.isCustom)\n      return true;\n    const val = valueOrOption?.value ?? valueOrOption;\n    const lv = getListValue(val, listValues);\n    return lv?.isCustom || false;\n  };\n\n  const getOptionLabel = (valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const option = valueOrOption.value != undefined ? valueOrOption\n      : listValueToOption(getListValue(valueOrOption, listValues));\n    if (!option && valueOrOption.specialValue) {\n      // special last 'Load more...' item\n      return valueOrOption.title;\n    }\n    if (!option && allowCustomValues) {\n      // there is just string value, it's not item from list\n      return valueOrOption;\n    }\n    if (!option) {\n      // weird\n      return valueOrOption;\n    }\n    return option.title || option.label || option.value; // fallback to value\n  };\n\n  const fixedOptions = uif === \"mui\" ? fixListValuesGroupOrder(options) : options;\n\n  return {\n    options: fixedOptions,\n    listValues,\n    hasValue,\n    selectedListValue,\n\n    open,\n    onOpen,\n    onClose,\n    onDropdownVisibleChange,\n    onChange,\n    \n    inputValue,\n    onInputChange,\n    canShowLoadMore,\n    isInitialLoading,\n    isLoading,\n    isLoadingMore,\n    isSpecialValue,\n\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    aPlaceholder,\n  };\n};\n\nexport default useListValuesAutocomplete;\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport * as ReactUtils from \"./reactUtils\";\nimport { DragIcon } from \"../components/utils\";\nexport default { ...Utils, ReactUtils, DragIcon };\n","var map = {\n\t\"./es-us\": 88218,\n\t\"./es-us.js\": 88218,\n\t\"./ru\": 31313,\n\t\"./ru.js\": 31313\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 40164;"],"names":["mapListValues","Utils","ListUtils","useListValuesAutocomplete","Hooks","nonCheckedIcon","React","CheckBoxOutlineBlankIcon","fontSize","style","marginRight","marginTop","checkedIcon","CheckBoxIcon","emptyArray","props","allowCustomValues","multiple","disableClearable","selectedValue","value","customProps","readonly","config","filterOptionsConfig","errorText","defaultFilterOptionsConfig","stringify","useCallback","option","settings","listKeysForSearch","map","k","join","filterOptionsFn","createFilterOptions","_useListValuesAutocom","debounceTimeout","uif","open","onOpen","onClose","onChange","onInputChange","inputValue","options","isInitialLoading","isLoading","aPlaceholder","extendOptions","getOptionSelected","getOptionDisabled","getOptionIsCustom","getOptionLabel","selectedListValue","_config$settings","defaultSelectWidth","defaultSearchWidth","_ref","width","rest","_objectWithoutProperties","_excluded","customInputProps","input","inputWidth","omit","customAutocompleteProps","minWidth","undefined","placeholder","useStyles","makeStyles","theme","classesChip","root","height","label","marginBottom","useStylesChip","classes","FormControl","fullWidth","Autocomplete","_extends","disableCloseOnSelect","freeSolo","loading","disabled","readOnly","groupBy","groupTitle","renderInput","params","_selectedListValue$ti","shouldRenderSelected","selectedTitle","title","TextField","inputProps","_objectSpread","InputProps","endAdornment","CircularProgress","color","size","error","renderTags","getTagProps","index","className","titleSpan","Chip","key","renderOption","_ref2","selected","renderTitle","specialValue","isHidden","Box","filterOptions","filtered","mapFieldItemToOptionKeys","path","altLabel","tooltip","grouplabel","itemsToListValues","items","level","arguments","length","item","matchesType","prefix","repeat","_value2","_altLabel","flat","Infinity","fieldAdapter","selectedKey","setField","isValueField","listValues","fieldItemKeysForSearch","setValue","_asyncValues","isFieldAutocomplete","DragIcon","typeToIcon","DeleteIcon","AddIcon","DragHandle","typeToColor","hideLabelsFor","paper","padding","spacing","MaterialTextWidget","maxLength","textValue","e","val","target","MaterialTextAreaWidget","maxRows","defaultMaxRows","multiline","MaterialDateWidget","_window","_window$matchMedia","_window2","dateFormat","valueFormat","Picker","window","matchMedia","call","matches","useKeyboard","KeyboardDatePicker","DatePicker","format","isValid","formatSingleValue","MaterialDateTimeWidget","use12Hours","timeFormat","KeyboardDateTimePicker","DateTimePicker","dateTimeFormat","ampm","MaterialTimeWidget","KeyboardTimePicker","TimePicker","hasSeconds","indexOf","timeValue","moment","views","MaterialSelectWidget","hasValue","Select","autoWidth","displayEmpty","renderValue","_ref3","filter","v","shift","getListValueTitle","MenuItem","MaterialNumberWidget","min","max","step","numberValue","type","Number","MaterialSliderWidget","marks","defaultSliderWidth","customSliderProps","slider","sliderValue","muiMarks","Object","keys","InputCmp","onBlur","SliderCmp","Slider","_e","newValue","valueLabelDisplay","stylesSliderWrapper","marginLeft","paddingLeft","display","alignItems","flexWrap","MaterialRangeWidget","placeholders","textSeparators","useEffect","_slicedToArray","valueFrom","valueTo","setTimeout","oneValue","handleInputBlur","_toConsumableArray","_sliderValue","FromInputCmp","ToInputCmp","newValues","stylesInputWrapper","MaterialBooleanWidget","labelYes","labelNo","Typography","component","Grid","container","Switch","checked","MaterialMultiSelectWidget","selectedValues","selectedTitles","Checkbox","ListItemText","primary","MaterialAutocompleteWidget","MaterialFieldSelect","findLabel","fields","field","Array","isArray","some","pop","renderOptions","ListSubheader","disableSticky","MaterialFieldAutocomplete","MaterialAutocomplete","MaterialIcon","icon","Icon","MaterialButton","onClick","renderIcon","IconButton","Button","startIcon","MaterialButtonGroup","children","MaterialConjs","id","not","setNot","conjunctionOptions","setConjunction","showNot","notLabel","conjsCount","lessThenTwo","showConj","forceShowConj","ButtonGroup","disableElevation","variant","bind","_conjunctionOptions$k","name","postfix","isDummyFn","MaterialSwitch","checkedLabel","hideLabel","renderSize","showLabel","LockIcon","LockOpenIcon","FormControlLabel","control","MaterialValueSources","valueSources","valueSrc","setValueSrc","_React$useState","_React$useState2","anchorEl","setAnchorEl","handleClose","Boolean","event","currentTarget","handleOpen","ExpandMoreSharpIcon","Popover","anchorOrigin","vertical","horizontal","transformOrigin","disablePortal","FormLabel","RadioGroup","srcKey","info","Radio","MaterialConfirm","onOk","okText","cancelText","confirmFn","description","confirmationText","cancellationText","then","MaterialUseConfirm","useConfirm","MaterialProvider","settingsTheme","settingsLocale","locale","themeConfig","material","createTheme","base","withProviders","MuiPickersUtilsProvider","utils","MomentUtils","ConfirmProvider","ThemeProvider","BasicConfig","renderField","_props$customProps","RCE","_ref$W","W","showSearch","renderOperator","renderFunc","renderConjs","_ref4","renderSwitch","_ref5","renderButton","_ref6","_ref7","renderButtonGroup","_ref8","renderValueSources","_ref9","renderFieldSources","_ref10","renderProvider","_ref11","renderConfirm","_ref12","_ref13","widgets","text","factory","_ref14","textarea","_ref15","number","_ref16","multiselect","_ref17","_ref17$W","asyncFetch","select","_ref18","_ref18$W","_ref19","boolean","_ref20","date","_ref21","time","_ref22","datetime","_ref23","rangeslider","_ref24","types","ctx","MaterialWidgets","ConfigMixins","addMixins","query_builder_seed","timePart","Date","getTime","toString","substr","replace","c","r","Math","floor","random","isObject","_typeof","widgetDefKeysToOmit","opDefKeysToOmit","defaultValue","_default","deepEqual","v1","v2","Map","isMap","equals","JSON","shallowEqual","a","b","deep","arrA","arrB","len","i","shallowEqualArrays","objA","objB","aKeys","bKeys","shallowEqualObjects","isImmutable","toJS","toImmutableList","Immutable","applyToJS","escapeRegExp","string","cleanJSX","jsx","el","_i","isDirtyJSX","_cleaned$props","cleaned","includes","isJSX","isJsonLogic","logic","sleep","delay","Promise","resolve","mergeArraysSmart","arr1","arr2","op","orig","next","slice","after","reverse","find","before","x","reduce","acc","newOp","rel","relOp","ind","splice","deepFreeze","obj","forEach","prop","freeze","isJsonCompatible","tpl","bag","concat","getLogger","devMode","console","log","warn","debug","getFirstDefined","ret","arr","logger","formatField","parts","label2","fieldDefinition","isForDisplay","fieldSources","keepInputOnChangeFieldSrc","valueSourcesInfo","fieldSeparator","fieldSeparatorDisplay","canReorder","canRegroup","canDeleteLocked","canLeaveEmptyGroup","shouldCreateEmptyGroup","canShortMongoQuery","removeEmptyGroupsOnLoad","removeIncompleteRulesOnLoad","removeInvalidMultiSelectValuesOnLoad","setOpOnChangeField","groupOperators","defaultGroupConjunction","valueLabel","valuePlaceholder","fieldLabel","operatorLabel","funcLabel","fieldPlaceholder","funcPlaceholder","operatorPlaceholder","lockLabel","lockedLabel","deleteLabel","addGroupLabel","addCaseLabel","addDefaultCaseLabel","defaultCaseLabel","addRuleLabel","addSubRuleLabel","delGroupLabel","fieldSourcesPopupTitle","valueSourcesPopupTitle","removeRuleConfirmOptions","removeGroupConfirmOptions","toListValue","makeCustomListValue","lv","isCustom","listValuesToArray","listValuesObj","listValuesArr","push","getItemInListValues","getTitleInListValues","it","getValueInListValues","mapFn","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","f","searchListValue","search","getListValue","expandTreePath","_len","suffix","_key","interpose","withMutations","list","skip","apply","expandTreeSubpath","_len2","_key2","getItemByPath","tree","_defineProperty","get","res","removeIsLockedInTree","newTree","_processNode","isParentLocked","itemPath","isLocked","getIn","deleteIn","child","_childId","fixPathsInTree","lev","nodeId","currPath","currId","itemId","setIn","constructor","childId","fixEmptyGroupsInTree","allChildrenGone","curr","getFlatTree","realHeight","_flatizeTree","insideCollapsed","insideLocked","insideRuleGroup","parentType","caseId","depth","collapsed","childrenIds","_child","toArray","isRuleGroup","isLeaf","hasChildren","itemsBefore","top","parent","isDefaultCase","leaf","leafsCount","_top","node","subinfo","itemsAfter","assign","_height","bottom","prevId","nextId","prev","getTotalReordableNodesCountInTree","cnt","children1","getTotalRulesCountInTree","getTreeBadFields","badFields","valueError","from","Set","getLightTree","children1AsArray","properties","operatorOptions","values","getSwitchValues","vals","caseValue","isEmptyTree","getTree","immutableTree","light","loadTree","serTree","isImmutableTree","isTree","jsToImmutable","startsWith","parse","checkTree","extendedConfig","extendConfig","validateTree","isValidTree","fromJS","outValue","toOrderedMap","_outValue$get","isIndexed","_v$toJS","vJs","func","toList","loadFromJsonLogic","logicTree","_loadFromJsonLogic","returnErrors","meta","errors","conv","buildConv","jsTree","convertFromLogic","wrapInDefaultConj","immTree","operators","opKey","opConfig","jsonLogic","opk","_jsonLogicIsRevArgs","cardinality","jsonLogic2","conjunctions","conjKey","jsonLogicConj","toLowerCase","funcs","iterateFuncs","_step$value","funcPath","funcConfig","fk","jsonLogicIsMethod","_config$settings$json","varKeys","groupVarKey","altVarKey","expectedType","fieldConfig","widget","parentField","beforeErrorsCnt","lockedOp","isEmptyOp","isRev","convertFieldRhs","convertFuncRhs","convertValRhs","convertConj","convertOp","afterErrorsCnt","_fieldConfig$fieldSet","widgetConfig","mainWidget","fieldType","h","m","dateVal","setMilliseconds","setHours","setMinutes","setSeconds","toISOString","asyncListValues","fieldSettings","valueType","normalizeField","getFieldConfig","argsArr","funcKey","opts","_vals","_toArray","returnType","funcKeys","getFuncConfig","_step2","_iterator2","_step2$value","fc","jsonLogicImport","parsed","argKeys","args","argsObj","argVal","argKey","argConfig","_argVal","isOptional","complexFields","_v$properties","_v$properties2","fieldSrc","_f$includes","complexFieldsGroupAncestors","fromEntries","split","ancs","fp","conjunction","uuid","groupToId","entries","_v$properties3","groupAncestors","groupField","ch","parentFieldParts","getFieldParts","groupPath","gf","gfc","groupId","mode","rule","defaultConjunction","_parseRule","arity","isRevArgs","isGroup0","opKeys","jlField","jlArgs","_vals2","_vals3","lhs","having","isGroup","_parse","convertFieldLhs","convertFuncLhs","_v","_v2","init","_v3","_v4","group","parsedGroup","convertLhs","op2","parseRes","submeta","parseRule","conj","havingVals","havingNot","reversedOp","getWidgetForFieldOp","convertedArgs","parentFieldConfig","wrapInDefaultConjRuleGroup","operator","asyncListValuesArr","SqlString","SqlStringOrig","trim","charAt","substring","escapeLike","any_start","any_end","escape","sqlEmptyValue","fieldDef","mongoEmptyValue","spelFixList","spelEscape","numberToFloat","arrayToArray","isFinite","isNaN","isInteger","javaType","jt","escapedVals","numberJavaTypes","Error","spelInlineList","spelEscapeString","spelFormatConcat","part","spelImportConcat","isVariable","stringifyForDisplay","compareToSign","TypesWithCompareTo","spelFormat","_spelFormat","formatItem","formatGroup","formatRule","formatSwitch","formatCase","_formatItemValue","formatItemValue","_formatItemValue2","formattedValue","cases","currentChild","filteredCases","left","right","_filteredCases$_i","cond","List","conjunctionDefinition","isRuleGroupArray","isSpelArray","groupOperator","realGroupOperator","checkOp","isGroupOpRev","realGroupOperatorDefinition","getOperatorConfig","_formatItemValue3","_formatItemValue4","omitBrackets","spelFormatConj","formattedField","getSize","fullSize","filteredSize","formatExpression","opDef","fn","spelFormatOp","operatorDefinition","spelOp","isSign","isCompareTo","sop","compareRes","_","buildFnToFormatOp","spelFormatReverse","revOpDef","canFormatOp","canFormatRevOp","realOp","_formatItemValue5","_formatItemValue6","formatLhs","formatFunc","expectedValueType","iValueSrc","iValueType","iValue","valueSrcs","valueTypes","fvalue","currentValue","cValue","completeValue","fieldWidgetDef","getFieldWidgetConfig","fv","formatValue","hasUndefinedValues","first","operatorDef","spelFormatValue","pick","valFieldDefinition","fieldParts","fieldPartsConfigs","getFieldPartsConfigs","formatFieldFn","formatSpelField","fieldName","formatFieldName","fieldPartsMeta","cnf","parentCnf","isSpelMap","isSpelItemMap","isSpelVariable","formattedArgs","gaps","missingArgKeys","_argConfig$spelEscape","defaultValueSrc","argValue","argValueSrc","argAsyncListValues","doEscape","spelEscapeForFormat","formattedArgVal","formattedDefaultVal","defaultWidget","defaultFieldWidgetDef","finalFormattedVal","missedArgKey","spelFormatFunc","spelFunc","found","_formattedArgs$argKey","optionalArgs","RegExp","SpelPrimitiveTypes","null","SpelPrimitiveClasses","String","loadFromSpel","_loadFromSpel","spelStr","compiledExpression","convertedObj","SpelExpressionEvaluator","compile","_compiledExpression","postprocessCompiled","convertToTree","expr","parentExpr","getType","getChildren","selection","lastChild","isSize","methodName","isLength","sourceParts","source","convertPath","isThis","isRoot","itype","_lastChild","_lastChild2","getRaw","getValue","flatizeTernary","functionName","qid","cls","_val","isVar","_processTernaryChildren","tern","_tern","if_val","else_val","_loop","spelOps","spelConj","_loop2","fks","funcSignMain","_k","funcSignsOptional","optionalArgKeys","_step3","_iterator3","valueFuncs","w","widgetDef","spelImportFuncs","fs","argsOrder","matchAll","opFuncs","spel","parentSpel","canParseAsArg","_groupFilter","groupFieldValue","_groupField","groupFilter","caseI","buildCase","convertArg","sw","buildSimpleSwitch","isUnary","isBetweenNormal","isBetweenRev","_spel$children$0$chil","_spel$children$1$chil","to","compareArgs","convertChildren","_newChildren","newChildren","_fieldObj$groupFieldV","_convertedArgs","fieldObj","opArg","_vals$","_vals$2","ws","needWrapReverse","buildRuleGroup","buildRule","expectingField","isError","_meta$errors","_meta$errors$push","_spel$children","at","_values$","buildCaseValueConcat","maybe","convertFunc","_buildFuncSignatures","brns","p","currBrn","o","_currBrn$params","_buildFuncSignatures2","_buildFuncSignatures3","s1","params1","newBrn","objs","unshift","_step4","_iterator4","_brn$objs","brn","_params","_buildFuncSignatures4","_buildFuncSignatures5","_fsigns$","convertFuncArg","fsigns","buildFuncSignatures","firstSign","maybeValue","convertFuncToValue","maybeOp","convertFuncToOp","_step5","_iterator5","_loop3","_step5$value","_step6","_iterator6","_step6$value","spelImport","funcArgs","errs","foundSign","foundWidget","candidates","fj","_step7","_iterator7","_step8","_step7$value","_iterator8","_loop4","_step8$value","_candidates","_candidates$_i","spelImportValue","_spelImportValue$call","_spelImportValue$call2","_step9","_iterator9","_step10","_step9$value","_iterator10","_loop5","_argsArr$filter$find","_step10$value","parseInt","_ret2","_field3","groupOpRule","_map","_map2","leftSource","rightSource","_map3","_map4","leftVal","rightVal","valProperties","buildCaseValProperties","_processConcatChildren","convertedChild","convVal","importCaseValue","_importCaseValue","_importCaseValue2","normVal","getDefaultField","canGetFirst","parentRuleGroupPath","defaultField","getDefaultSubField","getFirstField","parentRuleGroupConfig","getDefaultFieldSrc","_config$settings$fiel","getDefaultOperator","defaultOperator","fieldOperators","fieldDefaultOperator","getFirstOperator","_origDefaultOperator","defaultOperatorOptions","operatorConfig","defaults","defaultRuleProperties","_item$properties","_item$properties2","_item$properties3","canUseDefaultFieldAndOp","showErrorMessage","current","set","_getNewValueForFieldO","getNewValueForFieldOp","newValueSrc","newValueType","newValueError","conjs","defaultGroupProperties","defaultItemProperties","_item$properties4","defaultRule","defaultRoot","canAddDefaultRule","createListFromArray","ids","emptyProperies","validateAndFixTree","_oldTree","newConfig","oldConfig","removeEmptyGroups","removeIncompleteRules","validateItem","oldChildren","sanitized","validateGroup","_field","_field$toJS","_field2","_field2$toJS","oldSerialized","getFieldSrc","availOps","getOperatorsForField","newSerialized","isValueCompleted","delta","isCompletedValue","isFieldCompleted","isCompleted","_newSerialized$valueS","_newSerialized$valueS2","_oldSerialized$valueS","reason","validateRule","validateValue","leftField","canFix","isEndValue","isRawValue","validError","fixedValue","_validateFieldValue","validateFieldValue","_validateFieldValue2","_validateFuncValue","validateFuncValue","_validateFuncValue2","_validateNormalValue","validateNormalValue","_validateNormalValue2","fieldWidgetDefinition","rightFieldDefinition","validResult","wConfig","wType","jsType","treeValues","isAsyncListValues","canSkipCheck","typeOf","realListValues","isList","_values$reduce","goodVals","badVals","vv","_values$reduce2","goodValues","badValues","plural","validateValueInList","_valueSrc","isFuncArg","_isFuncArg","leftFieldStr","rightFieldStr","argDef","_validateValue","_validateValue2","argValidError","fixedArgVal","completeFuncValue","complValue","tmpHasOptional","filteredValueSources","filterValueSourcesForField","argDefaultValueSrc","completeArgValue","getDefaultArgValue","setFunc","oldFuncKey","oldArgs","newFuncSignature","getFuncSignature","oldFuncSignature","keepArgsKeys","getCompatibleArgsOnFuncChange","firstValueSrc","setArgValue","setArgValueSrc","argValSrc","_argConfig","_config","s2","argVals","arg2","arg1","selectTypes","listValuesType","newField","newOperator","changedProp","currentField","currentFieldType","currentOperator","currentValueSrc","currentValueType","currentAsyncListValues","convertableWidgets","clearValueOnChangeField","clearValueOnChangeOp","newOperatorConfig","operatorCardinality","currentFieldConfig","newFieldConfig","isOkWithoutField","currentType","newType","canReuseValue","newListValuesType","currentListValuesType","vs","currentWidget","newWidget","currentValueWidget","newValueWidget","firstWidgetConfig","getValueSourcesForFieldOp","valueFixes","valueErrors","vType","vSrc","isValidSrc","validateError","fixValue","dropValue","_ignore","_newFieldConfig$field","validateValues","jsValues","rangeValidateError","vt","parentPathArr","firstField","getFieldRawConfig","keysPath","_firstField","subfields","getOperatorsForType","_config$types$fieldTy","_fieldOps$","fieldOps","getFuncPathLabels","getFieldPathLabels","fieldsKey","subfieldsKey","parentParts","_curr","last","parentFieldDef","isFieldDescendantOfField","getValueLabel","isSpecialRange","arg","showLabels","fieldWidgetConfig","mergedOpConfig","valueLabels","_getWidgetsAndSrcsForFieldOp","widgetValueSrc","canAdd","_fieldConfig$valueSou","_opConfig$valueSource","canAddValueSrc","widgetWeight","wg","preferWidgets","sort","w1","w2","getWidgetsForFieldOp","_fieldDefinition$type","__fieldsCntByType","minCnt","__funcsCntByType","useTableName","tableName","fieldPartsCopy","parentFieldName","isEmptyItem","liteCheck","isEmptyRuleGroupExt","isEmptyGroup","isEmptyRule","isEmptyRuleGroupExtPropertiesAndChildren","toObject","_config$operators$ope","_config$operators$ope2","isEmptyRuleProperties","isEmptyGroupChildren","_config$operators$ope3","_config$operators$ope4","_valueSrc$get","applyJsonLogic","data","JL","customJsonLogicOperations","CALL","JSX","mergeObjects","obj1","obj2","strlen","str","regexTest","pattern","flags","match","now","date_add","dim","add","toDate","toUpperCase","applyJsonLogicWithPath","message","callContextFn","_this","addRequiredJsonLogicOperations","configKeys","compileMetaFieldSettings","isArr","compileMetaWidget","sqlFormatValue","mongoFormatValue","elasticSearchFormatValue","compileMetaOperator","formatOp","mongoFormatOp","sqlFormatOp","ignore","elasticSearchQueryType","compileMetaWidgetForType","widgetProps","opProps","compileMeta","mainWidgetProps","formatConj","sqlFormatConj","renderBrackets","renderSeps","sqlFormatFunc","mongoFormatFunc","mui","invokeWith","canCompareFieldWithField","formatReverse","sqlFormatReverse","formatAggr","normalizeListValues","renderSwitchPrefix","renderItem","renderBeforeWidget","renderAfterWidget","renderBeforeActions","renderAfterActions","renderRuleError","compressConfig","baseConfig","__fieldNames","zipConfig","_clean","BasicFuncs","prototype","hasOwnProperty","_base","_configKeys","rootKey","clone","decompressConfig","useConfigCompress","unzipConfig","_mergeDeep","mixin","_resolveAndMergeDeep","resolved","_i2","_configKeys2","merge","compileConfig","__compliled","_compileConfigParts","defineProperty","enumerable","writable","subconfig","logs","newPath","targetObj","newVal","renderReactElement","compileJsonLogicReact","_newVal4","compileJsonLogic","def","jl","re","this","argNames","_ctx$components","_props","Cmp","components","O","_marked2","_regeneratorRuntime","iterateFields","allowArrayLike","Symbol","iterator","minLen","_arrayLikeToArray","test","_unsupportedIterableToArray","F","TypeError","normalCompletion","didErr","_e2","configId","canCompile","__configId","mergeWith","defaultSettings","mergeCustomizerNoArrays","typesConfig","_extendTypeConfig","_extendTypesConfig","_extendFieldsConfig","_extendFuncArgsConfig","momentLocale","typeConfig","typeWidgetConfig","typeWidgetOperators","excludeOperators","_extendFieldConfig","funcDef","tmpIsOptional","excludeOperatorsForField","_keysToPutInFieldSett","excludeOperatorsForType","shouldIncludeOperators","addOperators","_computeFieldName","computeFieldName","inGroup","fullPath","objValue","srcValue","_object","_source","_stack","_context","delegateYield","_iterateFields","stop","_marked","_context2","_callee","_config$settings2","fieldKey","_context3","t0","t1","_config$settings3","targetFields","_reduce","computedPath","computed","fConfig","_config$__fieldNames$","_config$__fieldNames$2","findStr","getFuncArgConfig","_config$settings4","getFieldPath","parentPath","_config$settings5","_config$settings6","_field$get","_field$split","_field$get2","getFieldPathParts","onlyKeys","_field$get3","_field$get4","widgetOpProps","fieldWidgetOpProps","fieldWidgetProps","valueFieldSettings","_widgetDefKeysToOmit","queryBuilderFormat","usedFields","rules","condition","_valueType","secondField","ruleQuery","jsonLogicFormat","ff","tmp","pdef","groupOperatorDefinition","resultQuery","formatLogic","var","revOperatorDefinition","oldUsedFields","funcParts","funcLastKey","formattedArgsArr","funcName","varName","jsonLogicVar","formatteOp","isReverseArgs","rangeOps","eqOps","opOpts","mongodbFormat","_mongodbFormat","parents","_not","_canWrapExpr","_formatFieldName","_value","sep","hasParentRuleGroup","realParentPath","groupFieldName","canHaveEmptyChildren","reversedConj","mongoConj","totalQuery","filterQuery","as","_f","useExpr","_formatFunc","_formatFunc2","_formatValue","_formatValue2","fvUseExpr","wrapExpr","_formatRightField","formatRightField","_formatRightField2","_formatFunc3","_formatFunc4","rightField","fieldPartsLabels","fieldFullLabel","mongoFunc","mongoArgsAsObject","argsCnt","lastArg","_formatValue3","_formatValue4","_formatValue5","_formatValue6","sqlFormat","_sqlFormat","sqlOp","valFrom","valTo","sqlFunc","argsStr","queryString","conjStr","aggrArgs","returnArgs","revOperatorDef","fop","labelForFormat","_operator","_fn","cutParentField","fieldLabel2","funcValue","formattedArgsWithNames","argName","buildEsRule","syntax","queryType","parameters","textField","determineField","script","elasticSearchScript","ES_7_SYNTAX","geoPointString","coordsNumberArray","top_left","lat","lon","bottom_right","buildEsGeoPoint","gte","lte","dateTime","lt","gt","buildEsRangeParameters","buildEsWildcardParameters","buildRegexpParameters","buildParameters","bool","must_not","ES_6_SYNTAX","elasticSearchFormat","_properties$get","_properties$get2","recursiveFxn","childrenArray","valueSeq","occurrence","combinator","determineOccurrence","result","resultFlat","buildEsGroup","simulateAsyncFetch","all","cPageSize","_asyncToGenerator","offset","pageSize","currentOffset","newOffset","hasMore","ceil","abrupt","_x","_x2","_x3","mergeListValues","toStart","hideNewValues","old","newFiltered","av","optionToListValue","_val$value","customItem","listValue","optionsToListValues","newSelectedListValues","_val$value2","newSelectedValues","_o$value","listValueToOption","fixListValuesGroupOrder","groupTitles","findLastIndex","findIndex","lv1","_lv1$groupTitle","_lv$groupTitle","nv","NOW","jsonLogicCustomOps","RELATIVE_DATETIME","method","_spel$methodName","matchRes","abs","plus","minus","day","week","month","year","LOWER","UPPER","LINEAR_REGRESSION","coef","bias","_a$children","mongoFormatOp1","mop","mc","_op","$field","mv","mongoFormatOp2","mops","_$not3","equal","opStr","_this$utils","not_equal","isNotOp","_this$utils2","less","_this$utils3","_len3","_key3","less_or_equal","_this$utils4","_len4","_key4","greater","_this$utils5","_len5","_key5","greater_or_equal","_this$utils6","_len6","_key6","like","_this$utils7","_len7","_key7","not_like","_this$utils8","_this2","_len8","_key8","starts_with","_this$utils9","_this3","_len9","_key9","ends_with","_this$utils10","_this4","_len10","_key10","between","_this$utils11","_len11","_key11","not_between","_this$utils12","_len12","_key12","is_empty","empty","_this$utils13","_this5","_len13","_key13","is_not_empty","_this$utils14","_this6","_len14","_key14","is_null","_this$utils15","_len15","_key15","is_not_null","_this$utils16","_len16","_key16","select_equals","_this$utils17","_len17","_key17","select_not_equals","_this$utils18","_len18","_key18","select_any_in","_this$utils19","_len19","_key19","select_not_any_in","_this$utils20","_len20","_key20","multiselect_contains","_this$utils21","_len21","_key21","multiselect_not_contains","multiselect_equals","_this7","_this$utils22","_len22","_key22","multiselect_not_equals","_this8","_this$utils23","_len23","_key23","proximity","val1","val2","prox","aVal1","aVal2","optionLabel","optionTextBefore","optionPlaceholder","minProximity","maxProximity","_this$utils24","_len24","_key24","_this$utils25","_len25","_key25","none","_this$utils26","_len26","_key26","wgtDef","isFloat","valLabel","_this9","valsLabels","_this10","isCallable","_args$fmt","_args$fmt$includes","_args$fmt2","_args$fmt2$toLowerCas","fmt","ISO_8601","_args$fmt3","_args$fmt3$toLowerCas","_args$fmt4","_args$fmt5","_args$fmt5$includes","rightFieldDef","case_value","partsExt","_this11","q","whereStr","aggrField","aggrFieldDef","leftFieldConfig","rightFieldConfig","_addMixins","mixins","doAdd","mixinFuncs","mixinWidgetRangeslider","treeselect","mixinWidgetTreeselect","treemultiselect","mixinWidgetTreemultiselect","rangeable__date","mixinRangeableWidget","mixName","mixinFunc","addMixin","singleWidget","treeData","_this12","_this13","removeMixins","AND","sqlConj","spelConjs","OR","ADD_GROUP","ADD_CASE_GROUP","REMOVE_GROUP","SET_CONJUNCTION","SET_NOT","ADD_RULE","REMOVE_RULE","SET_FIELD","SET_FIELD_SRC","SET_OPERATOR","SET_VALUE","SET_VALUE_SRC","SET_OPERATOR_OPTION","SET_LOCK","SET_TREE","MOVE_ITEM","PLACEMENT_AFTER","PLACEMENT_BEFORE","PLACEMENT_APPEND","PLACEMENT_PREPEND","SET_DRAG_PROGRESS","SET_DRAG_START","SET_DRAG_END","addNewGroup","state","groupUuid","canAddNewRule","origState","addItem","_addChildren1","id1","it1","currentNumber","maxNumber","maxNumberOfCases","maxNumberOfRules","maxNesting","isTernary","targetItem","caseGroup","take","childrenPath","targetChildren","targetChildrenSize","isLastDefaultCase","_Immutable$OrderedMap2","newChildrenWithLast","mergeIn","removeItem","emptyDrag","dragging","y","mousePos","dragStart","setTree","constants","addRule","ruleType","removeRule","addDefaultCaseGroup","addCaseGroup","addGroup","removeGroup","moveItem","fromPath","toPath","placement","setLock","lock","__isInternal","setFieldSrc","setOperator","setOperatorOption","BasicUtils","Export","Import","getMemoizedTree","setLastTree","emptyState","action","actionMeta","_affectedField","actionTypesToIgnore","mapValues","affectedField","getField","getActionMeta","validatedTree","parentOperator","parentOperatorConfig","hasGroupCountRule","isParentRuleGroup","isEmptyParentGroup","canLeaveEmpty","initialEmptyWhere","_setField","_newFieldConfig$opera","isInternalValueChange","currentProperties","wasRuleGroup","currentFieldSrc","currentOperatorOptions","isRuleGroupExt","isChangeToAnotherType","lastOp","strategy","groupProperties","updateIn","_getNewValueForFieldO2","newOperatorOptions","__isInternalValueChange","currentRule","currentFielType","_getNewValueForFieldO3","_setValue","calculatedValueType","calculateValueType","isLastEmpty","isLastError","_getNewValueForFieldO4","sourcePath","sourceChildren","targetPath","isSameParent","isSourceInsideTarget","isTargetInsideSource","sourceSubpathFromTarget","targetSubpathFromSource","newTargetChildren","newSourceChildren","_oldChildren","checkEmptyGroups","__lastAction","setDragProgress","setDragStart","setDragEnd","TreeActions","_Utils$ConfigUtils","ConfigUtils","createConfigMemo","configStore","getExtended","findConfig","savedConfig","_ret3","findExtended","extendAndStore","findOrExtend","pickConfig","getBasic","basicConfig","extConfig","_ret","truncateString","useWordBoundary","subString","lastIndexOf","immutableEqual","getReactRootNodeType","_reactRootContainer","getOwnPropertyNames","parentNode","isUsingLegacyReactDomRender","liteShouldComponentUpdate","self","nextProps","nextState","prevProps","prevState","should","chs","changed","pureShouldComponentUpdate","useOnPropsChanged","shouldComponentUpdate","componentWillReceiveProps","onPropsChanged","origShouldComponentUpdate","bindActionCreators","actionCreators","dispatch","actionCreator","Query","_Component","_inherits","_super","_classCallCheck","_assertThisInitialized","nextValue","oldValidatedTree","_updateActions","sanitizeTree","_createClass","actions","newBasicConfig","getBasicConfig","_this$props","renderBuilder","Component","propTypes","PropTypes","isRequired","ConnectedQuery","connect","context","displayName","DefaultUtils","QueryContainer","lastTree","prevTree","prevprevTree","prevValue","_createConfigMemo","getMemoizedConfig","originalTree","createValidationMemo","emptyTree","reducer","treeStoreReducer","store","createStore","QueryWrapper","pr","nextConfig","isConfigChanged","storeValue","getState","isTreeChanged","currentTree","isTreeTrulyChanged","get_children","Provider","TreeUtils","_isReorderingTree","GroupOrRule","_class","_PureComponent","Draggable","handleDraggerMouseDown","dom","wrapper","onDragStart","isDraggingTempo","isDraggingMe","otherProps","isTrueLocked","styles","cn","classNames","ref","PureComponent","Operator","getMeta","_config$types$selecte","selectedField","selectedFieldType","selectedOperator","operatorsOptions","pickBy","_opts","buildOptions","selectedOpts","selectedKeys","selectedPath","selectedLabel","ops","renderProps","selectedFieldSrc","Col","dummyFn","xmlns","viewBox","fill","d","WithConfirmFn","OperatorWrapper","selectedFieldParts","showOperator","showOperatorLabel","selectedFieldWidgetConfig","operatorInlineLabel","RuleUtils","Field","maxLabelsLength","isFieldSelected","currField","getFieldLabel","partsLabels","selectedFullLabel","selectedAltLabel","parentFieldPath","sourceFields","lookingForFieldType","fieldOpts","optGroup","countFieldsMatchesType","fullFieldPath","fullLabel","hideForSelect","hasItemsMatchesType","_Utils$RuleUtils","FuncSelect","needUpdateItems","getItems","isLHS","parentFuncs","canUseFuncForField","filteredFuncs","filterFuncs","_leftFieldConfig$widg","selectedFuncKey","isFuncSelected","leftFieldWidgetField","currFunc","getFuncLabel","leftFieldFullkey","targetDefinition","_filter","subpath","funcFullkey","_targetDefinition","canUse","allowSelfNesting","fullFuncPath","funcOpts","immValue","immValueError","widgetDefinition","widgetValueLabel","setValueHandler","widgetFactory","isConst","funcArgDummyOpDef","Widget","widgetType","oldRange","_onChangeValueSrc","renderWidget","iValues","aField","_widgets$delta","hasValueSources","widgetLabel","WidgetFactory","_widgets$delta2","setValueSrcHandler","valueSourcesOptions","ValueSources","sourceLabel","renderSep","sepText","sepLabel","renderWidgetDelta","simpleField","fieldFunc","fieldArg","isForRuleGroup","isCaseValue","iValueSrcs","isSpecialRangeForSrcField","isTrueSpecialRange","range","_widgetDefinition","_this$meta","_Utils$FuncUtils","FuncUtils","FuncWidget","_createSuper","argDefinition","funcDefinition","renderFuncSelect","selectProps","renderArgLabel","showPrefix","renderArgLabelSep","renderArgVal","_this$props2","defaultValueSource","ArgWidget","renderArgSep","argIndex","renderBracketBefore","renderBracketAfter","renderFuncArgs","_Component2","_super2","_delta","_widgetType","_this2$props","_this2$props2","FieldWrapper","classname","customFieldSelectProps","fieldSourcesOptions","_this$props3","canSelectFieldSource","OperatorOptions","operatorDefinitions","_operatorDefinitions$","optionsFactory","basicOptionsProps","optionsCmp","setOption","Rule","removeSelf","reordableNodesCnt","selectedFieldConfig","isSelectedGroup","isFieldAndOpSelected","selectedOperatorConfig","selectedOperatorHasOptions","hideOperator","showDragIcon","showWidget","showOperatorOptions","confirmOptions","doRemove","isEmptyCurrentRule","onCancel","ruleData","_buildWidgetProps","immutableFieldsMode","immutableOpsMode","_this$props4","immutableValuesMode","_this$props5","oneValueError","onMouseDown","_this$props6","immutableGroupsMode","Btn","_this$props7","showLock","_this$meta2","_this$props8","canShrinkValue","BtnGrp","renderOperatorOptions","body","renderError","drag","renderDrag","renderLock","del","renderDel","totalRulesCnt","parentReordableNodesCnt","ConnectedRuleContainer","RuleContainer","isInDraggingTempo","hasError","createRuleContainer","Group","itemType","ConnectedGroupContainer","GroupContainer","_selectedConjunction","selectedConjunction","_getConjunctionOptions","oldConjunction","currentNesting","allowFurtherNesting","createGroupContainer","groupActionsPositionList","topLeft","topCenter","topRight","bottomLeft","bottomCenter","bottomRight","GroupActions","canAddGroup","canAddRule","canDeleteGroup","groupActionsPosition","position","setLockSwitch","addRuleBtn","addGroupBtn","delGroupBtn","BasicGroup","childrenClassName","BeforeActions","AfterActions","isEmptyCurrentGroup","renderHeaderWrapper","renderChildrenWrapper","renderFooterWrapper","showConjs","isOneChild","renderChildren","isGroupTopPosition","isNoChildren","renderHeader","renderActions","Item","extraPropsForItem","reordableNodesCntForItem","totalRulesCntForItem","_item","RuleGroupActions","RuleGroup","_BasicGroup","_get","_getPrototypeOf","RuleGroupExtActions","RuleGroupExt","renderGroupField","selectedFieldPartsLabels","SwitchGroupActions","canAddDefault","addCaseGroupBtn","addDefaultCaseGroupBtn","_Utils$TreeUtils","SwitchGroup","hasDefaultCase","_this$props$children","_this$props$children2","totalCasesCnt","_this$props$children3","casesToReorder","_this$props$children4","_this$props$config$se","canLeaveEmptyCase","canRegroupCases","CaseGroup","renderHeaderLeft","renderHeaderCenter","renderCondition","getProperties","_props$properties","typeMap","rule_group","rule_group_ext","switch_group","case_group","_props$properties2","itemComponent","_Utils$DefaultUtils","Builder","_updPath","rootType","CanMoveFn","ConnectedSortableContainer","SortableContainer","_getEventTarget","__mocked_window","document","treeEl","closest","_isUsingLegacyReactDomRender","classList","groupPadding","treeElContainer","scrollTop","_getScrollParent","tmpAllGroups","_getDraggableNodeEl","_getPlaceholderNodeEl","querySelectorAll","anyGroup","getComputedStyle","getPropertyValue","offsetLeft","offsetTop","offsetWidth","offsetHeight","itemInfo","clientX","clientY","eventTarget","addEventListener","onDrag","onDragEnd","doHandleDrag","startDragging","startMousePos","__mock_dom","dragEl","plhEl","plX","getBoundingClientRect","scrollX","plY","scrollY","startX","startY","startClientX","startClientY","startScrollTop","pos","handleDrag","preventDefault","remove","_cacheEls","removeEventListener","_prevProps","_prevState","oldPlX","oldPlY","indexId","ignoreCache","contains","querySelector","els","getElementsByClassName","overflowY","scrollHeight","_isScrollable","dragInfo","canMoveFn","dragRect","plhRect","hovRect","treeRect","moveInfo","dragId","dragDirs","hrz","vrt","hovCNodeEl","trgCoord","__mocked_hov_container","hovNodeEl","elementFromPoint","_hovNodeEl$firstChild","rootGroupContainer","firstChild","hovNodeId","getAttribute","hovEl","doAppend","doPrepend","hovHeight","hovII","trgRect","trgEl","trgII","altII","hovInnerEl","hovEl2","hovRect2","hovHeight2","isSamePos","dragLeftOffset","dragLev","round","availMoves","altMoves","isToRoot","isToCase","prevCaseId","nextCaseId","prevCase","nextCase","addCaseII","am","toII","fromCaseII","toCaseII","bestMode","filteredMoves","trg","isInside","toParentII","canMove","levs","curLev","allLevs","closestDragLev","move","fromII","newDepthLev","isBeforeAfter","isPend","isLev1","isParentChange","isStructChange","isForbiddenStructChange","isLockedChange","isLastFromCase","newRulesInTargetCase","createSortableContainer","ValueField","needUpdateMeta","filteredFields","filterFields","customPlaceholder","leftFieldWidgetFieldProps","rightFieldKey","rightFieldFullkey","hideForCompare","customRadioYesProps","radioYes","customRadioNoProps","radioNo","onRadioChange","dtValue","opt","getMultiSelectValues","fontWeight","htmlFor","typeToLabel","btnLabel","confirm","VanillaProvider","Proximity","handleChange","defaultProximity","selectedProximity","proxValues","defaultProps","CoreConfig","ProximityOperator","VanillaTextWidget","VanillaTextAreaWidget","VanillaNumberWidget","VanillaSliderWidget","VanillaSelectWidget","VanillaMultiSelectWidget","VanillaDateWidget","VanillaTimeWidget","VanillaDateTimeWidget","VanillaBooleanWidget","ValueFieldWidget","VanillaFieldSelect","VanillaConjs","VanillaSwitch","VanillaButton","VanillaIcon","VanillaButtonGroup","VanillaValueSources","_ref25","_ref26","vanillaConfirm","Widgets","CustomOperators","C","P","_Utils$Autocomplete","_Utils$ListUtils","useLoadMore","useAsyncSearch","forceAsyncSearch","selectedAsyncListValues","staticListValues","knownSpecialValues","loadMoreTitle","loadingMoreTitle","setOpen","_React$useState3","_React$useState4","asyncFetchMeta","setAsyncFetchMeta","_React$useState5","_React$useState6","loadingCnt","setLoadingCnt","_React$useState7","_React$useState8","isLoadingMore","setIsLoadingMore","_React$useState9","_React$useState10","setInputValue","_React$useState11","_React$useState12","setAsyncListValues","asyncFectchCnt","componentIsMounted","isSelectedLoadMore","nSelectedAsyncListValues","listValuesToDisplay","canInitialLoad","canLoadMore","canShowLoadMore","fetchListValues","isLoadMore","newAsyncFetchCnt","newMeta","nValues","assumeHasMore","realNewMeta","_args","sent","loadListValues","_callee2","_args2","loadListValuesDebounced","debounce","_callee3","_callee4","isLoadMoreClick","_context4","_callee5","_option2","isClearingAll","isClearingInput","_option$value","_option","isAddingCustomOptionFromSearch","_optionsToListValues","_optionsToListValues2","_optionToListValue","_optionToListValue2","lvs","_context5","_x4","_callee6","newInputValue","eventType","shouldIgnore","_context6","_x5","_x6","_x7","onDropdownVisibleChange","isSpecialValue","valueOrOption","_valueOrOption$value","ReactUtils","webpackContext","req","webpackContextResolve","__webpack_require__","code","module","exports"],"sourceRoot":""}