{"version":3,"file":"171.bundle.js","mappings":"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CA,UACA,mBACA,UACA,cAGA,UACA,gBAGJte,OAAQ,CACNse,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBAGA,UACA,kBAKRlS,KAAM,CACJ8wB,gBAAiB,QACjBhyB,QAAS,CACPkB,KAAM,CACJkS,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKRhS,KAAM,CACJ4wB,gBAAiB,QACjBhyB,QAAS,CACPoB,KAAM,CACJgS,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKR9R,SAAU,CACR0wB,gBAAiB,QACjBhyB,QAAS,CACPsB,SAAU,CACR8R,UAAW,CACT,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,cAGA,UACA,kBAKRxS,OAAQ,CACN+U,WAAY,SACZqc,gBAAiB,gBACjBhyB,QAAS,CACPY,OAAQ,CACNwS,UAAW,CACT,gBACA,oBAGA,UACA,gBAGJ5S,YAAa,CACX4S,UAAW,CACT,gBACA,oBAGA,UACA,kBAKR5S,YAAa,CACXwxB,gBAAiB,qBACjBhyB,QAAS,CACPQ,YAAa,CACX4S,UAAW,CACT,uBACA,2BACA,qBACA,yBAGA,UACA,kBAKRpS,QAAS,CACPgxB,gBAAiB,QACjBhyB,QAAS,CACPgB,QAAS,CACPoS,UAAW,CACT,QACA,YACA,UACA,eAEF0+B,YAAa,CAGX,GAGJ95C,MAAO,CACLob,UAAW,CACT,QACA,gBAKR,SAAU,CACR4e,gBAAiB,OACjBrc,WAAY,SACZ3V,QAAS,CACPM,OAAQ,CACNwxC,YAAa,CACX79C,IAAK,GAEPmf,UAAW,CAET,OACA,MACA,OAGA,QACA,YACA,OACA,gBACA,UACA,mBACA,UACA,eAEF2+B,QAAS,CACP2U,MAAO,CACLj9D,MAAO,YAETo9D,UAAW,CACTp9D,MAAO,YAETu9D,KAAM,CACJv9D,MAAO,WAET29D,cAAe,CACb39D,MAAO,YAET+9D,QAAS,CACP/9D,MAAO,WAETm+D,iBAAkB,CAChBn+D,MAAO,YAET0/D,QAAS,CACP1/D,MAAO,iBAET8/D,YAA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","sources":["webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiDate.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiDateTime.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiTime.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiFieldAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiIcon.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiButton.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/index.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiText.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiTextArea.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiNumber.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiSlider.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiRange.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/value/MuiBoolean.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiConjs.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiSwitch.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiValueSources.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/widgets/core/MuiConfirm.jsx","webpack://@react-awesome-query-builder/examples/../mui/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../core/modules/utils/uuid.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/listValues.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/treeUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/export.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/spel.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/defaultUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryString.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/validation/constains.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/validation/translations.js","webpack://@react-awesome-query-builder/examples/../core/modules/i18n/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/validation.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/funcUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/ruleUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configSerialize.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/default.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configExtend.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryBuilder.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/mongoDb.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/sql.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/elasticSearch.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/autocomplete.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/funcs.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/ctx.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/group.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/rule.js","webpack://@react-awesome-query-builder/examples/../core/modules/index.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/context.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/drag.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/index.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/configUtils.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/validation.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/reactUtils.js","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Query.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/QueryContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/RuleContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/SortableContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/Draggable.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Operator.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/utils.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Field.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/WidgetFactory.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Widget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncWidget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FieldWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorOptions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Rule.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/GroupContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/GroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Group.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExtActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExt.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/CaseGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Item.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Builder.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/ValueField.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaBoolean.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaText.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTextArea.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDate.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDateTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaNumber.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSlider.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaConjs.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButton.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaIcon.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaValueSources.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaSwitch.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/vanillaConfirm.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/operators/Proximity.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/hooks/useListValuesAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/index.js","webpack://@react-awesome-query-builder/examples/../../node_modules/.pnpm/moment@2.30.1/node_modules/moment/locale/ sync [/\\\\](es-us(\\.js)"],"sourcesContent":["import React from \"react\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { moment } = Utils;\nconst xdpVersion = xdpPackage?.version?.split(\".\")?.[0];\n\nexport default (props) => {\n  const {value, setValue, readonly, customProps, dateFormat, valueFormat, placeholder} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n  \n  const renderInput = (params) => \n    <TextField \n      size=\"small\" \n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion === \"6\" ? {\n    format: dateFormat,\n    slotProps: {\n      textField: {\n        size: \"small\",\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: dateFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  const aValue = value ? (xdpVersion === \"6\" ? moment(value, valueFormat) : value) : null;\n\n  return (\n    <FormControl>\n      <DatePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        value={aValue}\n        onChange={handleChange}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};","import React from \"react\";\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { moment } = Utils;\nconst xdpVersion = xdpPackage?.version?.split(\".\")?.[0];\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, dateFormat, timeFormat, valueFormat, customProps} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const dateTimeFormat = dateFormat + \" \" + timeFormat;\n  \n  const renderInput = (params) => \n    <TextField \n      size=\"small\" \n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion === \"6\" ? {\n    format: dateTimeFormat,\n    slotProps: {\n      textField: {\n        size: \"small\",\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: dateTimeFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  const aValue = value ? (xdpVersion === \"6\" ? moment(value, valueFormat) : value) : null;\n\n  return (\n    <FormControl>\n      <DateTimePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        value={aValue}\n        onChange={handleChange}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport TextField from \"@mui/material/TextField\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nimport { TimePicker } from \"@mui/x-date-pickers/TimePicker\";\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\nconst { moment } = Utils;\nconst xdpVersion = xdpPackage?.version?.split(\".\")?.[0];\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, timeFormat, valueFormat, customProps} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const hasSeconds = timeFormat.indexOf(\":ss\") != -1;\n  const timeValue = value ? moment(value, timeFormat) : null;\n\n  const renderInput = (params) => \n    <TextField \n      size=\"small\" \n      variant=\"standard\"\n      {...params}\n    />;\n\n  const desktopModeMediaQuery = \"@media (pointer: fine), (pointer: none)\";\n\n  const pickerProps = xdpVersion === \"6\" ? {\n    format: timeFormat,\n    slotProps: {\n      textField: {\n        size: \"small\",\n        variant: \"standard\"\n      },\n      toolbar: {\n        toolbarPlaceholder: !readonly ? placeholder : \"\",\n      },\n    },\n  } : {\n    inputFormat: timeFormat,\n    renderInput,\n    toolbarPlaceholder: !readonly ? placeholder : \"\",\n  };\n\n  return (\n    <FormControl>\n      <TimePicker\n        desktopModeMediaQuery={desktopModeMediaQuery}\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        value={timeValue}\n        onChange={handleChange}\n        views={hasSeconds ? [\"hours\", \"minutes\", \"seconds\"] : [\"hours\", \"minutes\"]}\n        {...pickerProps}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = () =>\n    mapListValues(listValues, ({title, value}) => {\n      return <MenuItem key={value} value={value}>{title}</MenuItem>;\n    });\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  const renderValue = (selectedValue) => {\n    if (!readonly && selectedValue == null)\n      return placeholder;\n    return getListValueTitle(selectedValue);\n  };\n\n  const getListValueTitle = (selectedValue) => \n    mapListValues(listValues, ({title, value}) => \n      (value === selectedValue ? title : null)\n    )\n      .filter(v => v !== null)\n      .shift();\n  \n  const hasValue = value != null;\n\n  return (\n    <FormControl>\n      <Select\n        variant=\"standard\"\n        autoWidth\n        displayEmpty\n        placeholder={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : \"\"}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        size=\"small\"\n        {...omit(customProps, [\"showSearch\", \"input\"])}\n      >\n        {renderOptions()}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = (selectedValues) => \n    mapListValues(listValues, ({title, value}) => {\n      return (\n        <MenuItem key={value} value={value}>\n          <Checkbox checked={selectedValues.indexOf(value) > -1} />\n          <ListItemText primary={title} />\n        </MenuItem>\n      );\n    });\n\n  const renderValue = (selectedValues) => {\n    if (!readonly && !selectedValues.length)\n      return placeholder;\n    const selectedTitles = mapListValues(listValues, ({title, value}) => (\n      selectedValues.indexOf(value) > -1 ? title : null\n    )).filter(v => v !== null);\n    return selectedTitles.join(\", \");\n  };\n\n  const hasValue = value != null && value.length > 0;\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  return (\n    <FormControl>\n      <Select multiple\n        variant=\"standard\"\n        autoWidth\n        displayEmpty\n        label={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : []}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        size=\"small\"\n        {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n      >\n        {renderOptions(hasValue ? value : [])}\n      </Select>\n    </FormControl>\n  );\n};\n","import React, {useCallback} from \"react\";\nimport omit from \"lodash/omit\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Chip from \"@mui/material/Chip\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Check from \"@mui/icons-material/Check\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport { Hooks } from \"@react-awesome-query-builder/ui\";\nimport { styled } from \"@mui/system\";\nimport { useTheme } from \"@mui/material/styles\";\nconst { useListValuesAutocomplete } = Hooks;\nconst emptyArray = [];\n\n// tip: option can contain `group: {label, title}` intead of `groupTitle`\n// but it's internal format, made for field autocomplete\n// see `JSON.stringify(option.group)` and `JSON.parse(groupMaybeJson)`\n\nexport default (props) => {\n  const {\n    allowCustomValues, multiple, disableClearable,\n    value: selectedValue, customProps, readonly, config, filterOptionsConfig, errorText,\n    tooltipText, isFieldAutocomplete,\n  } = props;\n  const stringifyOption = useCallback((option) => {\n    const keysForFilter = config.settings.listKeysForSearch;\n    const valueForFilter = keysForFilter\n      .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n      .join(\"\\0\");\n    return valueForFilter;\n  }, [config]);\n  const defaultFilterOptionsConfig = {\n    stringify: stringifyOption\n  };\n  const filterOptionsFn = createFilterOptions(filterOptionsConfig || defaultFilterOptionsConfig);\n\n  // hook\n  const {\n    open,\n    onOpen,\n    onClose,\n    onChange,\n    onInputChange,\n    inputValue,\n    options,\n    isInitialLoading,\n    isLoading,\n    aPlaceholder,\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    selectedListValue,\n  } = useListValuesAutocomplete(props, {\n    debounceTimeout: 100,\n    multiple,\n    uif: \"mui\",\n    isFieldAutocomplete,\n  });\n\n  // setings\n  const {defaultSelectWidth, defaultSearchWidth} = config.settings;\n  const {width, ...rest} = customProps || {};\n  let customInputProps = rest.input || {};\n  const inputWidth = customInputProps.width || defaultSearchWidth; // todo: use as min-width for Autocomplete comp\n  customInputProps = omit(customInputProps, [\"width\"]);\n  const customAutocompleteProps = omit(rest, [\"showSearch\", \"showCheckboxes\"]);\n\n  const fullWidth = false;\n  const minWidth = width || defaultSelectWidth;\n  const style = {\n    width: (multiple ? undefined : minWidth),\n    minWidth: minWidth\n  };\n  const placeholder = !readonly ? aPlaceholder : \"\";\n  const hasValue = selectedValue != null;\n  // should be simple value to prevent re-render!s\n  const value = hasValue ? selectedValue : (multiple ? emptyArray : null);\n\n  const filterOptions = (options, params) => {\n    const filtered = filterOptionsFn(options, params);\n    const extended = extendOptions(filtered);\n    return extended;\n  };\n\n  const groupBy = (option) => option?.group ? JSON.stringify(option.group) : option?.groupTitle;\n\n  const theme = useTheme();\n\n  // render\n  const renderInput = (params) => {\n    // parity with Antd\n    const shouldRenderSelected = !multiple && !open;\n    const selectedTitle = selectedListValue?.title ?? \"\";\n    const shouldHide = multiple && !open;\n    const value = shouldRenderSelected ? selectedTitle : (shouldHide ? \"\" : inputValue ?? \"\");\n    return (\n      <TextField \n        variant=\"standard\"\n        {...params}\n        inputProps={{\n          ...params.inputProps,\n          value,\n        }}\n        InputProps={{\n          ...params.InputProps,\n          readOnly: readonly,\n          endAdornment: (\n            <React.Fragment>\n              {isLoading ? <CircularProgress color=\"inherit\" size={20}  /> : null}\n              {params.InputProps.endAdornment}\n            </React.Fragment>\n          ),\n        }}\n        disabled={readonly}\n        placeholder={placeholder}\n        error={!!errorText}\n        //onChange={onInputChange}\n        {...customInputProps}\n      />\n    );\n  };\n\n  const GroupHeader = ({groupMaybeJson}) => {\n    if (!groupMaybeJson) return null;\n    let group = {\n      label: groupMaybeJson,\n    };\n    if (typeof groupMaybeJson === \"string\" && groupMaybeJson[0] === \"{\") {\n      try {\n        group = JSON.parse(groupMaybeJson);\n      } catch (_) {\n        // ignore\n      }\n    }\n    let groupLabel = group.label;\n    if (groupLabel && group.tooltip) {\n      groupLabel = (\n        <Tooltip title={group.tooltip} placement=\"left-start\"><span>{groupLabel}</span></Tooltip>\n      );\n    }\n    let res = (\n      <div style={{\n        position: \"sticky\",\n        top: \"-8px\",\n        padding: \"4px 10px\",\n        color: theme.palette.primary.main,\n        backgroundColor: theme.palette.background.default,\n      }}>\n        {groupLabel}\n      </div>\n    );\n    return res;\n  };\n\n  const GroupItems = ({children}) => {\n    return <>{children}</>;\n  };\n\n  const renderGroup = (params) => {\n    let res = (\n      <div key={params.key}>\n        <GroupHeader groupMaybeJson={params.group} />\n        <GroupItems>{params.children}</GroupItems>\n      </div>\n    );\n    return res;\n  };\n\n  const renderTags = (value, getTagProps) => value.map((option, index) => {\n    return <Chip\n      key={option.value}\n      label={getOptionLabel(option)}\n      size={\"small\"}\n      variant={getOptionIsCustom(option) ? \"outlined\" : \"filled\"}\n      {...getTagProps({ index })}\n    />;\n  });\n\n  const isOptionEqualToValue = (option, value) => {\n    return option?.value == value;\n  };\n\n  const renderOption = (props, option) => {\n    const { title, renderTitle, value, isHidden, tooltip, group, groupTitle } = option;\n    const isGrouped = groupTitle || group;\n    const isSelected = multiple ? (selectedValue || []).includes(value) : selectedValue == value;\n    const className = getOptionIsCustom(option) ? \"customSelectOption\" : undefined;\n    const prefix = !isFieldAutocomplete && isGrouped ? \"\\u00A0\\u00A0\" : \"\";\n    const finalTitle = (renderTitle || prefix + title);\n    let titleSpan = (\n      <span className={className}>\n        {finalTitle}\n      </span>\n    );\n    if (tooltip) {\n      titleSpan = (\n        <Tooltip title={tooltip} placement=\"left-start\">{titleSpan}</Tooltip>\n      );\n    }\n    if (isHidden)\n      return null;\n    if (option.specialValue) {\n      return <div {...props}>{finalTitle}</div>;\n    } else if (multiple) {\n      const itemContent = isSelected ? (\n        <><ListItemIcon><Check /></ListItemIcon>{titleSpan}</>\n      ) : (\n        <ListItemText inset>{titleSpan}</ListItemText>\n      );\n      return (\n        <MenuItem\n          {...props}\n          size={\"small\"}\n          selected={isSelected}\n        >{itemContent}</MenuItem>\n      );\n    } else {\n      return <div {...props}>{titleSpan}</div>;\n    }\n  };\n  \n  let res = (\n    <Autocomplete\n      disableClearable={disableClearable}\n      disableCloseOnSelect={multiple}\n      fullWidth={fullWidth}\n      multiple={multiple}\n      style={style}\n      freeSolo={allowCustomValues}\n      loading={isInitialLoading}\n      open={open}\n      onOpen={onOpen}\n      onClose={onClose}\n      inputValue={inputValue}\n      onInputChange={onInputChange}\n      label={placeholder}\n      onChange={onChange}\n      value={value}\n      disabled={readonly}\n      readOnly={readonly}\n      options={options}\n      groupBy={groupBy}\n      getOptionLabel={getOptionLabel}\n      getOptionDisabled={getOptionDisabled}\n      renderInput={renderInput}\n      renderGroup={renderGroup}\n      renderTags={renderTags}\n      renderOption={renderOption}\n      filterOptions={filterOptions}\n      isOptionEqualToValue={isOptionEqualToValue}\n      size=\"small\"\n      {...customAutocompleteProps}\n    />\n  );\n  if (tooltipText) {\n    res = (\n      <Tooltip title={!open ? tooltipText : null} placement=\"top-start\">{res}</Tooltip>\n    );\n  }\n  res = (\n    <FormControl fullWidth={fullWidth}>{res}</FormControl>\n  );\n  return res;\n};\n","import React, {useCallback} from \"react\";\nimport MuiAutocomplete from \"../value/MuiAutocomplete\";\n\n// see type FieldItemSearchableKeys\nconst mapFieldItemToOptionKeys = {\n  key: \"_value2\",\n  path: \"value\",\n  label: \"title\",\n  altLabel: \"_altLabel\",\n  tooltip: \"tooltip\",\n  grouplabel: \"groupTitle\",\n};\n\nconst itemsToListValues = (items, level = 0) => (\n  items.map(item => {\n    const {items, path, key, label, altLabel, disabled, grouplabel, group, matchesType, tooltip} = item;\n    const prefix = \"\\u00A0\\u00A0\".repeat(level);\n    if (items) {\n      return itemsToListValues(items, level+1);\n    } else {\n      return {\n        title: label,\n        renderTitle: matchesType ? <b>{prefix+label}</b> : prefix+label,\n        value: path,\n        disabled,\n        groupTitle: level > 0 ? prefix+grouplabel : null,\n        group: level > 0 ? {\n          ...group,\n          label: prefix+group.label,\n        } : null,\n        tooltip: tooltip,\n        _value2: key,\n        _altLabel: altLabel,\n      };\n    }\n  }).flat(Infinity)\n);\n\nconst fieldAdapter = ({\n  items, selectedKey, setField, isValueField,\n  selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n  ...rest\n}, config) => {\n  let tooltipText = selectedAltLabel || selectedFullLabel;\n  if (tooltipText == selectedLabel)\n    tooltipText = null;\n  const listValues = itemsToListValues(items);\n  const value = selectedKey;\n  const setValue = (value, _asyncValues) => {\n    if (!value && !isValueField) return undefined;\n    return setField(value);\n  };\n  const filterOptionsConfig = {\n    stringify: useCallback((option) => {\n      const keysForFilter = config.settings.fieldItemKeysForSearch\n        .map(k => mapFieldItemToOptionKeys[k]);\n      const valueForFilter = keysForFilter\n        .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n        .join(\"\\0\");\n      return valueForFilter;\n    }, [config])\n  };\n\n  return {\n    ...rest,\n    tooltipText,\n    listValues,\n    setValue,\n    filterOptionsConfig,\n    allowCustomValues: false,\n    multiple: false,\n    disableClearable: !isValueField,\n    value,\n    isFieldAutocomplete: true,\n  };\n};\n\nexport default (props) => {\n  return <MuiAutocomplete  {...fieldAdapter(props, props.config)} />;\n};\n","import React from \"react\";\nimport DragHandle from \"@mui/icons-material/DragHandle\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport Icon from \"@mui/material/Icon\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { DragIcon } = Utils;\n\nconst typeToIcon = {\n  \"delGroup\": <DeleteIcon />,\n  \"delRuleGroup\": <DeleteIcon />,\n  \"delRule\": <DeleteIcon />,\n  \"addRuleGroup\": <AddIcon />,\n  \"addRuleGroupExt\": <AddIcon />,\n  \"addRule\": <AddIcon />,\n  \"addGroup\": <AddIcon />,\n  \"drag\": <DragHandle />,\n};\n\nconst typeToColor = {\n  // \"addRule\": \"primary\",\n  // \"addGroup\": \"primary\",\n  // \"delGroup\": \"secondary\",\n  // \"delRuleGroup\": \"secondary\",\n  // \"delRule\": \"secondary\",\n  \"drag\": \"primary\",\n};\n\nexport default ({type, readonly}) => {\n  let icon = typeToIcon[type] || null;\n  if (!icon && type === \"drag\") {\n    return <DragIcon />;\n  }\n\n  if (type === \"drag\") {\n    return (\n      <Icon\n        size=\"small\" \n        disabled={readonly} \n        color={typeToColor[type]}\n      >{icon}</Icon>\n    );\n  } else {\n    return icon;\n  }\n};\n","import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\n\nconst hideLabelsFor = {\n  \"addRuleGroup\": true,\n  \"addRuleGroupExt\": true,\n  \"delGroup\": true,\n  \"delRuleGroup\": true,\n  \"delRule\": true,\n};\n\nconst typeToColor = {\n  \"addRule\": \"primary\",\n  \"addGroup\": \"primary\",\n  \"delGroup\": \"secondary\",\n  \"delRuleGroup\": \"secondary\",\n  \"delRule\": \"secondary\",\n};\n\nexport default (props) => {\n  const {type, label, onClick, readonly, renderIcon} = props;\n  const iconProps = {\n    type,\n    readonly,\n  };\n  const icon = renderIcon?.(iconProps);\n\n  if (!label || hideLabelsFor[type]) {\n    return (\n      <IconButton\n        size=\"small\" \n        disabled={readonly} \n        onClick={onClick} \n        color={typeToColor[type]}\n      >{icon}</IconButton>\n    );\n  } else {\n    return (\n      <Button \n        size=\"small\" \n        disabled={readonly} \n        onClick={onClick} \n        color={typeToColor[type]} \n        startIcon={icon}\n      >{label}</Button>\n    );\n  }\n};\n","import React from \"react\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport { ConfirmProvider, useConfirm } from \"material-ui-confirm\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterMoment } from \"@mui/x-date-pickers/AdapterMoment\"; // TODO: set moment to dayjs\nimport xdpPackage from \"@mui/x-date-pickers/package.json\"; // to determine version\n\nconst xdpVersion = xdpPackage?.version?.split(\".\")?.[0];\n\n// value widgets\nimport MuiTextWidget from \"./value/MuiText\";\nimport MuiTextAreaWidget from \"./value/MuiTextArea\";\nimport MuiDateWidget from \"./value/MuiDate\";\nimport MuiDateTimeWidget from \"./value/MuiDateTime\";\nimport MuiTimeWidget from \"./value/MuiTime\";\nimport MuiSelectWidget from \"./value/MuiSelect\";\nimport MuiNumberWidget from \"./value/MuiNumber\";\nimport MuiSliderWidget from \"./value/MuiSlider\";\nimport MuiRangeWidget from \"./value/MuiRange\";\nimport MuiBooleanWidget from \"./value/MuiBoolean\";\nimport MuiMultiSelectWidget from \"./value/MuiMultiSelect\";\nimport MuiAutocompleteWidget from \"./value/MuiAutocomplete\";\n\n// field select widgets\nimport MuiFieldSelect from \"./core/MuiFieldSelect\";\nimport MuiFieldAutocomplete from \"./core/MuiFieldAutocomplete\";\n\n// core components\nimport MuiIcon from \"./core/MuiIcon\";\nimport MuiButton from \"./core/MuiButton\";\nimport MuiButtonGroup from \"./core/MuiButtonGroup\";\nimport MuiConjs from \"./core/MuiConjs\";\nimport MuiSwitch from \"./core/MuiSwitch\";\nimport MuiValueSources from \"./core/MuiValueSources\";\nimport MuiConfirm from \"./core/MuiConfirm\";\n\n// provider\nconst MuiProvider = ({config, children}) => {\n  const settingsTheme = config.settings.theme || {};\n  const settingsLocale = config.settings.locale || {};\n  const momentLocale = settingsLocale.moment;\n  const themeConfig = settingsTheme.mui;\n  const locale = settingsLocale.mui;\n  const theme = createTheme(themeConfig, locale, { \n    palette: {\n      // neutral: {\n      //   main: \"#64748B\",\n      //   contrastText: \"#fff\"\n      // },\n    }\n  });\n\n  const locProviderProps = xdpVersion === \"6\" ? {\n    locale: momentLocale,\n  } : {\n    adapterLocale: momentLocale,\n  };\n\n  const base = (<div className=\"mui\">{children}</div>);\n  const withProviders = (\n    <LocalizationProvider dateAdapter={AdapterMoment} {...locProviderProps} >\n      <ConfirmProvider>\n        {base}\n      </ConfirmProvider>\n    </LocalizationProvider>\n  );\n  const withTheme = theme ? (\n    <ThemeProvider theme={theme}>\n      {withProviders}\n    </ThemeProvider>\n  ) : withProviders;\n\n  return withTheme;\n};\n\n\nexport default {\n  MuiTextWidget,\n  MuiTextAreaWidget,\n  MuiDateWidget,\n  MuiDateTimeWidget,\n  MuiTimeWidget,\n  MuiSelectWidget,\n  MuiNumberWidget,\n  MuiSliderWidget,\n  MuiRangeWidget,\n  MuiBooleanWidget,\n  MuiMultiSelectWidget,\n  MuiAutocompleteWidget,\n\n  MuiFieldSelect,\n  MuiFieldAutocomplete,\n\n  MuiIcon,\n  MuiButton,\n  MuiButtonGroup,\n  MuiConjs,\n  MuiSwitch,\n  MuiValueSources,\n  MuiConfirm,\n  MuiUseConfirm: useConfirm,\n\n  MuiProvider,\n};\n","import React, {useState, useEffect} from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength, errorMessage} = props;\n  const {showErrorMessage, optimizeRenderWithInternals} = config.settings;\n  const [internalValue, setInternalValue] = useState(value);\n\n  useEffect(() => {\n    if (value !== internalValue)\n      setInternalValue(value);\n  }, [value, errorMessage]);\n\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n\n    if (optimizeRenderWithInternals)\n      setInternalValue(val);\n    const didEmptinessChanged = !!val !== !!internalValue;\n    const __isInternal = optimizeRenderWithInternals && !didEmptinessChanged;\n    setValue(val, undefined, { __isInternal });\n  };\n  const canUseInternal = optimizeRenderWithInternals && (showErrorMessage ? true : !errorMessage);\n  const textValue = (canUseInternal ? internalValue : value) || \"\";\n\n  return (\n    <FormControl>\n      <TextField \n        variant=\"standard\"\n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        size=\"small\"\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength, maxRows, fullWidth} = props;\n  const {defaultMaxRows} = config.settings;\n\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  \n  const textValue = value || \"\";\n\n  return (\n    <FormControl fullWidth={fullWidth}>\n      <TextField \n        variant=\"standard\"\n        fullWidth={fullWidth}\n        maxRows={maxRows || defaultMaxRows}\n        multiline={true}\n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        size=\"small\"\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps} = props;\n  \n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n\n  const numberValue = value == undefined ? \"\" : value;\n  \n  return (\n    <FormControl>\n      <TextField \n        variant=\"standard\"\n        type=\"number\"\n        value={numberValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          min: min,\n          max: max,\n          step: step,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        size=\"small\"\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React, { useCallback, useMemo } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {config, placeholder, customProps, value, setValue, min, max, step, marks, readonly} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  const handleSliderChange = useCallback((_e, newValue) => {\n    setValue(newValue);\n  }, []);\n\n  const handleInputChange = (e) => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n\n  const handleInputBlur = () => {\n    // TIP: Fix if typed value out of range in input\n    if (value < min) {\n      setValue(min);\n    } else if (value > max) {\n      setValue(max);\n    }\n  };\n\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n  \n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0\n  const inputValue = typeof value === \"number\" ? value : \"\";\n  const sliderValue = typeof value === \"number\" ? value : null;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = useMemo(() => marks ? Object.keys(marks).map(v => ({\n    value: Number(v),\n    label: typeof marks[v] === \"object\" || typeof marks[v] === \"undefined\" ? marks[v] : <p>{marks[v]}</p>\n  })) : false, [marks]);\n\n  const InputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={inputValue}\n      placeholder={placeholder}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChange}\n      onBlur={handleInputBlur}\n      size=\"small\"\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      size=\"small\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    alignItems: \"center\",\n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {InputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport Slider from \"@mui/material/Slider\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControl from \"@mui/material/FormControl\";\n\nexport default (props) => {\n  const {config, placeholders, customProps, value, setValue, min, max, step, marks, readonly, textSeparators} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  useEffect(() => {\n    const [valueFrom, valueTo] = props.value || [undefined, undefined];\n    if (props.value && (valueFrom == undefined || valueTo == undefined)) {\n      // happens if we changed op from '==' to 'between'\n      // (I know, timeout is dirty hack..)\n      // setTimeout(() => {\n      //   const oneValue = valueFrom || valueTo;\n      //   const value = [oneValue, oneValue];\n      //   setValue(value);\n      // }, 1);\n    }\n  }, []);\n\n  const handleSliderChange = (_e, newValues) => {\n    setValue(newValues);\n  };\n\n  const handleInputChangeFrom = (e) => {\n    // TIP: need to use props.value instead of value\n    let valueFrom = e.target.value;\n    if (valueFrom === \"\" || valueFrom == null)\n      valueFrom = undefined;\n    else\n      valueFrom = Number(valueFrom);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[0] = valueFrom;\n    setValue(value);\n  };\n\n  const handleInputChangeTo = (e) => {\n    let valueTo = e.target.value;\n    if (valueTo === \"\" || valueTo == null)\n      valueTo = undefined;\n    else\n      valueTo = Number(valueTo);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[1] = valueTo;\n    setValue(value);\n  };\n\n  const handleInputBlur = () => {\n    // TIP: Fix if typed value out of range in inputs\n    if (!value) return;\n    if (value[0] < min) {\n      setValue([min, value[1]]);\n    } else if (value[1] > max) {\n      setValue([value[0], max]);\n    }\n  };\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = marks ? Object.keys(marks).map(v => ({\n    value: Number(v),\n    label: typeof marks[v] === \"object\" || typeof marks[v] === \"undefined\" ? marks[v] : <p>{marks[v]}</p>\n  })) : false;\n\n\n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0, but null will cause problems with range mode\n  let sliderValue = value ? [...value] : [undefined, undefined];\n  let [valueFrom, valueTo] = sliderValue;\n  if (valueFrom == undefined) {\n    valueFrom = \"\";\n    sliderValue[0] = 0;\n  }\n  if (valueTo == undefined) {\n    valueTo = \"\";\n    sliderValue[1] = 0;\n  }\n  \n\n  const FromInputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={valueFrom}\n      placeholder={placeholders[0]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeFrom}\n      onBlur={handleInputBlur}\n      size=\"small\"\n      {...customInputProps}\n    />\n  );\n\n  const ToInputCmp = (\n    <TextField \n      variant=\"standard\"\n      type=\"number\"\n      value={valueTo}\n      placeholder={placeholders[1]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeTo}\n      onBlur={handleInputBlur}\n      size=\"small\"\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      size=\"small\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {FromInputCmp}\n        </div>\n        <div className={\"widget--sep\"}>\n          <span>{ textSeparators[1] }</span>\n        </div>\n        <div style={stylesInputWrapper}>\n          {ToInputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Switch from \"@mui/material/Switch\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\n\nexport default (props) => {\n  const { customProps, value, setValue, labelYes, labelNo, readonly } = props;\n\n  const onChange = () => {\n    setValue(!value);\n  };\n  \n  return (\n    <FormControl>\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\n          <Grid item component=\"span\">{labelNo}</Grid>\n          <Grid item component=\"span\">\n            <Switch\n              checked={!!value}\n              onChange={onChange}\n              disabled={readonly}\n              {...customProps}\n            />\n          </Grid>\n          <Grid item component=\"span\">{labelYes}</Grid>\n        </Grid>\n      </Typography>\n    </FormControl>\n  );\n};\n","import React, {useCallback, useState} from \"react\";\nimport Select from \"@mui/material/Select\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport ListSubheader from \"@mui/material/ListSubheader\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\nexport default ({\n  items, setField, selectedKey, readonly, placeholder, errorText,\n  selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n}) => {\n  const [open, setOpen] = useState(false);\n\n  const onOpen = useCallback(() => {\n    setOpen(true);\n  }, [setOpen]);\n\n  const onClose = useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n\n  const renderOptions = (fields, level = 0) => (\n    Object.keys(fields).map(fieldKey => {\n      const field = fields[fieldKey];\n      const {items, path, label, disabled, matchesType, tooltip} = field;\n      const prefix = \"\\u00A0\\u00A0\".repeat(level);\n      let finalLabel = (\n        <span>\n          {prefix && <span>{prefix}</span>}\n          {matchesType ? <b>{label}</b> : label}\n        </span>\n      );\n      if (tooltip) {\n        finalLabel = (\n          <Tooltip title={tooltip} placement=\"left-start\">\n            {finalLabel}\n          </Tooltip>\n        );\n      }\n      if (items) {\n        return [\n          <ListSubheader disabled={disabled} key={path} disableSticky={true}>\n            {finalLabel}\n          </ListSubheader>,\n          renderOptions(items, level+1),\n        ];\n      } else {\n        return (\n          <MenuItem disabled={disabled} key={path} value={path}>\n            {finalLabel}\n          </MenuItem>\n        );\n      }\n    })\n  );\n\n  const onChange = useCallback(e => {\n    if (e.target.value === undefined)\n      return;\n    setField(e.target.value);\n  }, [setField]);\n\n  const renderValue = useCallback((selectedValue) => {\n    if (!readonly && !selectedValue)\n      return placeholder;\n    const findLabel = (fields) => {\n      return fields.map(field => {\n        if(!field.items) return field.path === selectedValue ? field.label : null;\n        return findLabel(field.items);\n      });\n    };\n    const label = findLabel(items).filter((v) => {\n      if (Array.isArray(v)) {\n        return v.some((value) => value !== null);\n      } else {\n        return v !== null;\n      }\n    }).pop();\n    return label;\n  }, [readonly, placeholder, items]);\n  \n  const hasValue = selectedKey != null;\n  let tooltipText = selectedAltLabel || selectedFullLabel;\n  if (tooltipText == selectedLabel)\n    tooltipText = null;\n  let res = (\n    <Select\n      error={!!errorText}\n      variant=\"standard\"\n      autoWidth\n      displayEmpty\n      placeholder={placeholder}\n      onChange={onChange}\n      value={hasValue ? selectedKey : \"\"}\n      disabled={readonly}\n      renderValue={renderValue}\n      size=\"small\"\n      open={open}\n      onOpen={onOpen}\n      onClose={onClose}\n    >\n      {renderOptions(items)}\n    </Select>\n  );\n  if (tooltipText) {\n    res = (\n      <Tooltip title={!open ? tooltipText : null}>{res}</Tooltip>\n    );\n  }\n  res = <FormControl>{res}</FormControl>;\n  return res;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport ButtonGroup from \"@mui/material/ButtonGroup\";\nimport Button from \"@mui/material/Button\";\n\nexport default ({id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel}) => {\n  //TIP: disabled=true if only 1 rule; readonly=true if immutable mode\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(key => {\n      const {id, name, label, checked} = conjunctionOptions[key];\n      let postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n      if ((readonly || disabled) && !checked)\n        return null;\n      return (\n        <Button \n          key={id+postfix} \n          id={id+postfix} \n          color={checked ? \"primary\" : \"inherit\"} \n          value={key} \n          onClick={onClick.bind(null, key)} \n          disabled={readonly || disabled}\n        >\n          {label}\n        </Button>\n      );\n    });\n  \n  const renderNot = () => {\n    if (readonly && !not)\n      return null;\n    return (\n      <Button \n        key={id}\n        id={id + \"__not\"}\n        color={not ? \"error\" : \"inherit\"} \n        onClick={onNotClick.bind(null, !not)} \n        disabled={readonly}\n      >\n        {notLabel || \"NOT\"}\n      </Button>\n    );\n  };\n\n  const onClick = value => setConjunction(value);\n  const onNotClick = checked => setNot(checked);\n\n  return (\n    <FormControl>\n      <ButtonGroup \n        disableElevation \n        variant=\"contained\" \n        size=\"small\"\n        disabled={readonly}\n      >\n        {showNot && renderNot()}\n        {showConj && renderOptions()}\n      </ButtonGroup>\n    </FormControl>\n  );\n  \n};\n","import React from \"react\";\nimport Switch from \"@mui/material/Switch\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Button from \"@mui/material/Button\";\nimport LockOpenIcon from \"@mui/icons-material/LockOpen\";\nimport LockIcon from \"@mui/icons-material/Lock\";\n\nexport default ({value, setValue, label, checkedLabel, hideLabel, id, config, type}) => {\n  const {renderSize} = config.settings;\n  const onChange = e => setValue(e.target.checked);\n  const onClick = () => setValue(!value);\n  const postfix = type;\n  const showLabel = value ? (checkedLabel || label) : label;\n  const icon = value ? <LockIcon /> : <LockOpenIcon />;\n\n  if (type == \"lock\") {\n    if (hideLabel) {\n      return <IconButton\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n      >{icon}</IconButton>;\n    } else {\n      return <Button\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n        startIcon={icon}\n      >{showLabel}</Button>;\n    }\n  }\n\n  return <FormControlLabel \n    control={<Switch\n      checked={!!value}\n      size={\"small\"}\n      onChange={onChange}\n    />} \n    label={showLabel} \n  />;\n};\n","import React from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ExpandMoreSharpIcon from \"@mui/icons-material/ExpandMoreSharp\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormLabel from \"@mui/material/FormLabel\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Check from \"@mui/icons-material/Check\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\n\nexport default ({ valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const toggleOpenClose = (event) => {\n    anchorEl ? handleClose() : handleOpen(event);\n  };\n\n  const handleChange = (_e, srcKey) => {\n    setValueSrc(srcKey);\n    handleClose();\n  };\n\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => {\n      const isSelected = valueSrc == srcKey || !valueSrc && srcKey == \"value\";\n      const onClick = (e) => handleChange(e, srcKey);\n      return (\n        <MenuItem\n          key={srcKey}\n          value={srcKey}\n          selected={isSelected}\n          onClick={onClick}\n        >\n          {!isSelected && <ListItemText inset>{info.label}</ListItemText>}\n          {isSelected && <><ListItemIcon><Check /></ListItemIcon>{info.label}</>}\n        </MenuItem>\n      );\n    })\n  );\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <div>\n      <IconButton size=\"small\" onClick={toggleOpenClose}>\n        <ExpandMoreSharpIcon />\n      </IconButton>\n\n      <Menu\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n      >\n        <FormControl component=\"fieldset\" sx={{ p: 0 }}>\n          <FormLabel component=\"legend\" sx={{ p: 2, pt: 0, pb: 1 }}>{title}</FormLabel>\n          {renderOptions(valueSources)}\n        </FormControl>\n      </Menu>\n    </div>\n  );\n};\n","export default ({onOk, okText, cancelText, title, confirmFn}) => {\n  confirmFn({ \n    description: title || \"Are you sure?\",\n    title: null,\n    confirmationText: okText || \"Ok\",\n    cancellationText: cancelText || \"Cancel\",\n  })\n    .then(onOk)\n    .catch(() => {});\n};\n","import React from \"react\";\nimport MuiWidgets from \"../widgets\";\nimport { BasicConfig, Utils } from \"@react-awesome-query-builder/ui\";\n\n\nconst settings = {\n  ...BasicConfig.settings,\n\n  renderField: (props, {RCE, W: {MuiFieldAutocomplete, MuiFieldSelect}}) => props?.customProps?.showSearch \n    ? RCE(MuiFieldAutocomplete, props)\n    : RCE(MuiFieldSelect, props),\n  renderOperator: (props, {RCE, W: {MuiFieldSelect}}) => RCE(MuiFieldSelect, props),\n  renderFunc: (props, {RCE, W: {MuiFieldSelect}}) => RCE(MuiFieldSelect, props),\n  renderConjs: (props, {RCE, W: {MuiConjs}}) => RCE(MuiConjs, props),\n  renderSwitch: (props, {RCE, W: {MuiSwitch}}) => RCE(MuiSwitch, props),\n  renderButton: (props, {RCE, W: {MuiButton}}) => RCE(MuiButton, props),\n  renderIcon: (props, {RCE, W: {MuiIcon}}) => RCE(MuiIcon, props),\n  renderButtonGroup: (props, {RCE, W: {MuiButtonGroup}}) => RCE(MuiButtonGroup, props),\n  renderValueSources: (props, {RCE, W: {MuiValueSources}}) => RCE(MuiValueSources, props),\n  renderFieldSources: (props, {RCE, W: {MuiValueSources}}) => RCE(MuiValueSources, props),\n  renderProvider: (props, {RCE, W: {MuiProvider}}) => RCE(MuiProvider, props),\n  renderConfirm: (props, {W: {MuiConfirm}}) => MuiConfirm(props),\n  useConfirm: ({W: {MuiUseConfirm}}) => MuiUseConfirm(),\n};\n\nconst widgets = {\n  ...BasicConfig.widgets,\n  text: {\n    ...BasicConfig.widgets.text,\n    factory: (props, {RCE, W: {MuiTextWidget}}) => RCE(MuiTextWidget, props),\n  },\n  textarea: {\n    ...BasicConfig.widgets.textarea,\n    factory: (props, {RCE, W: {MuiTextAreaWidget}}) => RCE(MuiTextAreaWidget, props),\n  },\n  number: {\n    ...BasicConfig.widgets.number,\n    factory: (props, {RCE, W: {MuiNumberWidget}}) => RCE(MuiNumberWidget, props),\n  },\n  multiselect: {\n    ...BasicConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {MuiAutocompleteWidget, MuiMultiSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch) \n        ? RCE(MuiAutocompleteWidget, {...props, multiple: true}) \n        : RCE(MuiMultiSelectWidget, props);\n    },\n  },\n  select: {\n    ...BasicConfig.widgets.select,\n    factory: (props, {RCE, W: {MuiAutocompleteWidget, MuiSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch) \n        ? RCE(MuiAutocompleteWidget, props) \n        : RCE(MuiSelectWidget, props);\n    },\n  },\n  slider: {\n    ...BasicConfig.widgets.slider,\n    factory: (props, {RCE, W: {MuiSliderWidget}}) => RCE(MuiSliderWidget, props),\n  },\n  boolean: {\n    ...BasicConfig.widgets.boolean,\n    factory: (props, {RCE, W: {MuiBooleanWidget}}) => RCE(MuiBooleanWidget, props),\n  },\n  date: {\n    ...BasicConfig.widgets.date,\n    factory: (props, {RCE, W: {MuiDateWidget}}) => RCE(MuiDateWidget, props),\n  },\n  time: {\n    ...BasicConfig.widgets.time,\n    factory: (props, {RCE, W: {MuiTimeWidget}}) => RCE(MuiTimeWidget, props),\n  },\n  datetime: {\n    ...BasicConfig.widgets.datetime,\n    factory: (props, {RCE, W: {MuiDateTimeWidget}}) => RCE(MuiDateTimeWidget, props),\n  },\n  rangeslider: {\n    ...BasicConfig.widgets.rangeslider,\n    factory: (props, {RCE, W: {MuiRangeWidget}}) => RCE(MuiRangeWidget, props),\n  },\n};\n\nconst types = {\n  ...BasicConfig.types,\n};\n\nconst ctx = {\n  ...BasicConfig.ctx,\n  W: {\n    ...BasicConfig.ctx.W,\n    ...MuiWidgets,\n  },\n};\n\n\nlet config = {\n  ...BasicConfig,\n  ctx,\n  types,\n  widgets,\n  settings,\n};\nconfig = Utils.ConfigMixins.addMixins(config, [\n  \"rangeslider\",\n]);\n\nexport default config;\n","// Had to make uuid use a constant seed so it would generate same sequence across runs. This was needed\n// so server side rendering and client side rendering yield same results (e.g. the uuid is used when rendering\n// the concunctions with their name and id)\nvar query_builder_seed = 0;\nexport default () => {\n  // Generate a random GUID http://stackoverflow.com/a/2117523.\n  const timePart = (new Date().getTime().toString(16)+\"FF\").substr(0,11);\n  const s = \"ssssssss-xxxx-4xxx-yxxx-x\".replace(/[xys]/g, (c) => {\n    const r = c === \"s\" ? Math.floor(Math.random() * 16) : (query_builder_seed++) & 0xf;\n    const v = c === \"x\" ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n  return s + timePart;\n};\n","import Immutable, { Map } from \"immutable\";\nimport omit from \"lodash/omit\";\nimport {default as uuid} from \"./uuid\";\n\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport {uuid};\n\nexport const widgetDefKeysToOmit = [\n  \"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\", \"spelImportFuncs\", \"spelImportValue\"\n];\n\nexport const opDefKeysToOmit = [\n  \"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"\n];\n\n// RegExp.quote = function (str) {\n//     return str.replace(/([.?*+^$[\\]\\\\(){}|-])/g, \"\\\\$1\");\n// };\n\nexport const getOpCardinality = (opDef) => {\n  return opDef?.cardinality ?? 1;\n};\n\n// const immutableEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else {\n//     return v1.equals(v2);\n//   }\n// };\n\nexport const deepEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else if (Map.isMap(v1)) {\n    return v1.equals(v2);\n  } else {\n    return JSON.stringify(v1) == JSON.stringify(v2);\n  }\n};\n\n// //Do sets have same values?\n// const eqSet = function (as, bs) {\n//   if (as.size !== bs.size) return false;\n//   for (var a of as) if (!bs.has(a)) return false;\n//   return true;\n// };\n\n\n// //Do arrays have same values?\n// const eqArrSet = function (arr1, arr2) {\n//   return eqSet(new Set(arr1), new Set(arr2));\n// };\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (Map.isMap(a))\n    return a.equals(b);\n  else if (typeof a == \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport const isImmutable = (v) => {\n  return typeof v === \"object\" && v !== null && typeof v.toJS === \"function\";\n};\n\nexport function toImmutableList(v) {\n  return (isImmutable(v) ? v : new Immutable.List(v));\n}\n\nexport function applyToJS(v) {\n  return (isImmutable(v) ? v.toJS() : v);\n}\n\nexport const escapeRegExp = (string) => {\n  return string.replace(/[.*+?^${}()|[\\]\\\\/]/g, \"\\\\$&\"); // $& means the whole matched string\n};\n\nexport const mergeCustomizerNoArrays = (objValue, srcValue, _key, _object, _source, _stack) => {\n  if (Array.isArray(objValue)) {\n    return srcValue;\n  }\n};\n\nexport const cleanJSX = (jsx) => {\n  const jsxKeys = [\"$$typeof\", \"_owner\", \"_store\", \"ref\", \"key\"];\n\n  const getName = (val) => {\n    if (typeof val === \"string\") {\n      return val;\n    } else if (typeof val === \"function\") {\n      return val.name;\n    }\n    return val;\n  };\n\n  if (jsx instanceof Array) {\n    return jsx.map((el, _i) => cleanJSX(el));\n  } else if (typeof jsx === \"object\" && jsx !== null) {\n    if (isDirtyJSX(jsx)) {\n      const cleaned = omit(jsx, jsxKeys);\n      if (cleaned.type) {\n        cleaned.type = getName(cleaned.type);\n      }\n      if (cleaned?.props?.children) {\n        cleaned.props.children = cleanJSX(cleaned.props.children);\n      }\n      return cleaned;\n    }\n  }\n  return jsx;\n};\n\nexport const isDirtyJSX = (jsx) => {\n  return typeof jsx === \"object\"\n    && jsx !== null\n    && !Array.isArray(jsx)\n    && Object.keys(jsx).includes(\"type\")\n    && Object.keys(jsx).includes(\"props\") // even if {}\n    && Object.keys(jsx).includes(\"key\") // even if null\n    && Object.keys(jsx).includes(\"ref\") // even if null\n    && Object.keys(jsx).includes(\"$$typeof\"); // Symbol(react.element)\n};\n\nexport const isJSX = (jsx) => (\n  typeof jsx === \"object\"\n  && jsx !== null\n  && !Array.isArray(jsx)\n  && typeof jsx[\"type\"] === \"string\"\n  && Object.keys(jsx).includes(\"props\")\n);\n\nexport const isJsonLogic = (logic) => {\n  let isJL = typeof logic === \"object\" // An object\n    && logic !== null // but not null\n    && !Array.isArray(logic) // and not an array\n    && Object.keys(logic).length === 1; // with exactly one key\n  if (isJL) {\n    // additional checks ?\n  }\n  return isJL;\n};\n\nexport function sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\n\n// [1, 4, 9] + [1, 5, 9] => [1, 4, 5, 9]\n// Used for merging arrays of operators for different widgets of 1 type\nexport function mergeArraysSmart(arr1, arr2) {\n  if (!arr1) arr1 = [];\n  if (!arr2) arr2 = [];\n  return arr2\n    .map(op => [op, arr1.indexOf(op)])\n    .map(([op, ind], i, orig) => {\n      if (ind == -1) {\n        const next = orig.slice(i+1);\n        const prev = orig.slice(0, i);\n        const after = prev.reverse().find(([_cop, ci]) => ci != -1);\n        const before = next.find(([_cop, ci]) => ci != -1);\n        if (before)\n          return [op, \"before\", before[0]];\n        else if (after)\n          return [op, \"after\", after[0]];\n        else\n          return [op, \"append\", null];\n      } else {\n      // already exists\n        return null;\n      }\n    })\n    .filter(x => x !== null)\n    .reduce((acc, [newOp, rel, relOp]) => {\n      const ind = acc.indexOf(relOp);\n      if (acc.indexOf(newOp) == -1) {\n        if (ind > -1) {\n        // insert after or before\n          acc.splice( ind + (rel == \"after\" ? 1 : 0), 0, newOp );\n        } else {\n        // insert to end or start\n          acc.splice( (rel == \"append\" ? Infinity : 0), 0, newOp );\n        }\n      }\n      return acc;\n    }, arr1.slice());\n}\n\nexport const deepFreeze = obj => {\n  if (typeof obj === \"object\" && obj !== null) {\n    Object.keys(obj).forEach(prop => {\n      deepFreeze(obj[prop]);\n    });\n    Object.freeze(obj);\n  }\n};\n\nexport const isJsonCompatible = (tpl, obj, bag = {}, path = []) => {\n  if (isObject(tpl)) {\n    if (tpl.var) {\n      bag[tpl.var] = obj;\n      return true;\n    }\n    if (!isObject(obj))\n      return false;\n    for (const k in tpl) {\n      const tv = tpl[k];\n      const ov = obj[k];\n      if (!isJsonCompatible(tv, ov, bag, [...path, k]))\n        return false;\n    }\n    return true;\n  } else if (Array.isArray(tpl)) {\n    if (!Array.isArray(obj))\n      return false;\n    for (let i = 0 ; i < tpl.length ; i++) {\n      const tv = tpl[i];\n      const ov = obj[i];\n      if (!isJsonCompatible(tv, ov, bag, [...path, i]))\n        return false;\n    }\n    return true;\n  } else {\n    return tpl === obj;\n  }\n};\n\nconst isDev = () => (typeof process !== \"undefined\" && process.env && process.env.NODE_ENV == \"development\");\n\nexport const getLogger = (devMode = false) => {\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\nexport const getFirstDefined = (arr = []) => {\n  let ret;\n  for (let i = 0 ; i < arr.length ; i++) {\n    const v = arr[i];\n    if (v !== undefined) {\n      ret = v;\n      break;\n    }\n  }\n  return ret;\n};\n\nexport const logger = getLogger();\n","\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const toListValue = (v, title) => {\n  if (v == null || v == \"\") {\n    return undefined;\n  } else if (isObject(v)) {\n    return {\n      ...v,\n      title: v.title || v.value, // fallback to value\n    };\n  } else {\n    return {\n      value: v,\n      title: (title !== undefined ? title : \"\"+v)\n    };\n  }\n};\n\nexport const makeCustomListValue = (v) => {\n  const lv = toListValue(v);\n  if (isObject(lv)) {\n    return {\n      ...toListValue(v),\n      isCustom: true,\n    };\n  } else { // only if undefined\n    return lv;\n  }\n};\n\n// convert {<value>: <title>, ..} or [value, ..] to normal [{value, title}, ..]\nexport const listValuesToArray = (listValuesObj) => {\n  if (Array.isArray(listValuesObj))\n    return listValuesObj.map(v => toListValue(v));\n  if (!isObject(listValuesObj))\n    return listValuesObj;\n  \n  let listValuesArr = [];\n  for (let v in listValuesObj) {\n    const title = listValuesObj[v];\n    listValuesArr.push(toListValue(v, title));\n  }\n  return listValuesArr;\n};\n\n// listValues can be {<value>: <title>, ..} or [{value, title}, ..] or [value, ..]\n// todo: same as getListValue() (but args are switched)\nexport const getItemInListValues = (listValues, value) => {\n  if (Array.isArray(listValues)) {\n    const values = listValues.map(v => toListValue(v));\n    return values.find(v => (\"\"+v.value === \"\"+value));\n  } else {\n    return listValues[value] !== undefined ? toListValue(value, listValues[value]) : undefined;\n  }\n};\n\nexport const getTitleInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.title : value;\n};\n\nexport const getValueInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.value : value;\n};\n\nexport const mapListValues = (listValues, mapFn) => {\n  let ret = [];\n  if (Array.isArray(listValues)) {\n    for (let v of listValues) {\n      const lv = mapFn(toListValue(v));\n      if (lv != null)\n        ret.push(lv);\n    }\n  } else {\n    for (let value in listValues) {\n      const lv = mapFn(toListValue(value, listValues[value]));\n      if (lv != null)\n        ret.push(lv);\n    }\n  }\n  return ret;\n};\n\nexport const searchListValue = (search, listValues) => \n  mapListValues(listValues, (lv) => (\n    `${lv.value}`.indexOf(search) != -1 || lv.title.indexOf(search) != -1\n      ? lv : null\n  ))\n    .filter(v => v !== null)\n    .shift();\n\nexport const getListValue = (selectedValue, listValues) => \n  mapListValues(listValues, \n    (lv) => (\"\"+lv.value === \"\"+selectedValue ? lv : null)\n  )\n    .filter(v => v !== null)\n    .shift();\n","import Immutable  from \"immutable\";\nimport {toImmutableList, isImmutable, applyToJS as immutableToJs} from \"./stuff\";\nimport {getTreeBadFields} from \"./validation\";\nimport {jsToImmutable} from \"../import/tree\";\nimport uuid from \"./uuid\";\n\nexport {\n  toImmutableList, jsToImmutable, immutableToJs, isImmutable,\n  // for backward compatibility\n  getTreeBadFields\n};\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreePath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.skip(1);\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreeSubpath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {Immutable.List} path\n * @return {Immutable.Map}\n */\nexport const getItemByPath = (tree, path) => {\n  let children = new Immutable.OrderedMap({ [tree.get(\"id\")] : tree });\n  let res = tree;\n  path.forEach((id) => {\n    res = children.get(id);\n    children = res?.get(\"children1\");\n  });\n  return res;\n};\n\n\n/**\n * Remove `path` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\n// export const removePathsInTree = (tree) => {\n//   let newTree = tree;\n\n//   function _processNode (item, path) {\n//     const itemPath = path.push(item.get(\"id\"));\n//     if (item.get(\"path\")) {\n//       newTree = newTree.removeIn(expandTreePath(itemPath, \"path\"));\n//     }\n\n//     const children = item.get(\"children1\");\n//     if (children) {\n//       children.map((child, _childId) => {\n//         _processNode(child, itemPath);\n//       });\n//     }\n//   }\n\n//   _processNode(tree, new Immutable.List());\n\n//   return newTree;\n// };\n\n\n/**\n * Remove `isLocked` in items that inherit parent's `isLocked`\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const removeIsLockedInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, isParentLocked = false) {\n    const itemPath = path.push(item.get(\"id\"));\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    if (isParentLocked && isLocked) {\n      newTree = newTree.deleteIn(expandTreePath(itemPath, \"properties\", \"isLocked\"));\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, itemPath, isLocked || isParentLocked);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List());\n\n  return newTree;\n};\n\n\n/**\n * Set correct `path` and `id` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const fixPathsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return;\n    const currPath = item.get(\"path\");\n    const currId = item.get(\"id\");\n    const itemId = currId || nodeId || uuid();\n    const itemPath = path.push(itemId);\n    if (!currPath || !currPath.equals(itemPath)) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"path\"), itemPath);\n    }\n    if (!currId) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"id\"), itemId);\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      if (children.constructor.name === \"Map\") {\n        // protect: should be OrderedMap, not Map (issue #501)\n        newTree = newTree.setIn(\n          expandTreePath(itemPath, \"children1\"), \n          new Immutable.OrderedMap(children)\n        );\n      }\n      children.map((child, childId) => {\n        _processNode(child, itemPath, lev + 1, childId);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\nexport const fixEmptyGroupsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return false;\n    const itemId = item.get(\"id\") || nodeId;\n    const itemPath = path.push(itemId);\n\n    const children = item.get(\"children1\");\n    if (children) {\n      const allChildrenGone = children.map((child, childId) => {\n        return _processNode(child, itemPath, lev + 1, childId);\n      }).reduce((curr, v) => (curr && v), true);\n      if ((children.size == 0 || allChildrenGone) && lev > 0) {\n        newTree = newTree.deleteIn(expandTreePath(itemPath));\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @return {Object} {flat, items}\n */\nexport const getFlatTree = (tree) => {\n  let flat = [];\n  let items = {};\n  let cases = [];\n  let visibleHeight = 0; // number of non-collapsed nodes\n  let globalLeafCount = 0;\n  let globalAtomicCount = 0;\n  let globalGroupCount = 0;\n  let globalCountByType = {};\n  // rule_group_ext can be counted as group  (group #x)\n  // or by similars (rule-group #x) (NOT both _ext and no ext)\n\n  function _flatizeTree (\n    item, path, insideCollapsed, insideLocked, insideRuleGroup, lev, caseId, childNo\n  ) {\n    const isRoot = item === tree;\n    const type = item.get(\"type\");\n    const collapsed = item.get(\"collapsed\");\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    const childrenIds = children ? children.map((_child, childId) => childId).valueSeq().toArray() : null;\n    const isRuleGroup = type === \"rule_group\";\n    const isRule = type === \"rule\";\n    const isGroup = type === \"group\";\n    const isCaseGroup = type === \"case_group\";\n    // tip: count rule_group as 1 atomic rule\n    const isAtomicRule = !insideRuleGroup && (!children || isRuleGroup);\n    const hasChildren = childrenIds?.length > 0;\n    const parentId = path.length ? path[path.length-1] : null;\n    const currentCaseId = isCaseGroup ? id : caseId;\n\n    // Calculations before\n    if (isCaseGroup) {\n      cases.push(id);\n      // reset counters\n      globalLeafCount = 0;\n      globalAtomicCount = 0;\n      globalGroupCount = 0;\n      globalCountByType = {};\n    }\n    const caseNo = currentCaseId ? cases.indexOf(currentCaseId) : null;\n    const itemsBefore = flat.length;\n    const top = visibleHeight;\n\n    let position;\n    if (!isRoot) {\n      position = {};\n      position.caseNo = caseNo;\n      position.globalNoByType = globalCountByType[type] || 0;\n      position.indexPath = [ ...path.slice(1).map(id => items[id].childNo), childNo ];\n      if (isRule) {\n        position.globalLeafNo = globalLeafCount;\n      } else if (isGroup) {\n        position.globalGroupNo = globalGroupCount;\n      }\n    }\n\n    flat.push(id);\n    items[id] = {\n      node: item,\n      index: itemsBefore, // index in `flat`\n      id: id,\n      type: type,\n      parent: parentId,\n      parentType: parentId ? items[parentId].type : null,\n      children: childrenIds,\n      childNo,\n      caseId: currentCaseId,\n      caseNo,\n      path: path.concat(id),\n      lev: lev, // depth level (0 for root node)\n      isLeaf: !children, // is atomic rule OR rule inside rule_group\n      isAtomicRule, // is atomic (rule or rule_group, but not rules inside rule_group)\n      isLocked: isLocked || insideLocked,\n      // vertical\n      top: (insideCollapsed ? null : top),\n      // for case\n      isDefaultCase: isCaseGroup ? !children : undefined,\n      atomicRulesCountInCase: isCaseGroup ? 0 : undefined,\n      // object with numbers indicating # of item in tree\n      position,\n      // unused\n      collapsed: collapsed,\n      _top: itemsBefore,\n      // @deprecated use isLeaf instead\n      leaf: !children,\n\n      // will be added later:\n      //  prev\n      //  next\n      //  depth  - for any group (children of rule_group are not counted, collapsed are not counted)\n      //  height  - visible height\n      //  bottom = (insideCollapsed ? null : top + height)\n      //  _height = (itemsAfter - itemsBefore)  - real height (incl. collapsed)\n    };\n\n    // Calculations before traversing children\n    let height = 0;\n    let depth = 0;\n    if (!insideCollapsed) {\n      visibleHeight += 1;\n      height += 1;\n      if (hasChildren && !collapsed && !isRuleGroup) {\n        // tip: don't count children of rule_group\n        depth += 1;\n      }\n      if (!isRoot && !isCaseGroup) {\n        isGroup && globalGroupCount++;\n        isAtomicRule && globalAtomicCount++;\n        isRule && globalLeafCount++;\n        globalCountByType[type] = (globalCountByType[type] || 0) + 1;\n      }\n    }\n    if (caseId && isAtomicRule) {\n      items[caseId].atomicRulesCountInCase++;\n    }\n\n    // Traverse children deeply\n    let maxChildDepth = 0;\n    let sumHeight = 0;\n    if (hasChildren) {\n      let childCount = 0;\n      children.map((child, childId) => {\n        if (child) {\n          _flatizeTree(\n            child, \n            path.concat(id), \n            insideCollapsed || collapsed, insideLocked || isLocked, insideRuleGroup || isRuleGroup,\n            lev + 1, currentCaseId, childCount\n          );\n          const childItem = items[childId];\n          // Calculations after deep traversing 1 child\n          maxChildDepth = Math.max(maxChildDepth, childItem.depth || 0);\n          sumHeight += childItem.height;\n          childCount++;\n        }\n      });\n    }\n\n    // Calculations after deep traversing ALL children\n    height += sumHeight;\n    depth += maxChildDepth;\n    const itemsAfter = flat.length;\n    const _height = itemsAfter - itemsBefore;\n    const bottom = (insideCollapsed ? null : top + height);\n\n    Object.assign(items[id], {\n      depth: children ? depth : undefined,\n      _height,\n      height,\n      bottom,\n    });\n  }\n\n  // Start recursion\n  _flatizeTree(tree, [], false, false, false, 0, null, null);\n\n  // Calc after recursion\n  for (let i = 0 ; i < flat.length ; i++) {\n    const prevId = i > 0 ? flat[i-1] : null;\n    const nextId = i < (flat.length-1) ? flat[i+1] : null;\n    let item = items[flat[i]];\n    item.prev = prevId;\n    item.next = nextId;\n  }\n\n  return {flat, items, cases};\n};\n\n\n/**\n * Returns count of reorderable(!) nodes\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalReordableNodesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    const isRuleGroup = type == \"rule_group\";\n    cnt++;\n    //tip: rules in rule-group can be reordered only inside\n    if (children && !isRuleGroup) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt - 1; // -1 for root\n};\n\n/**\n * Returns count of atomic rules (i.e. don't count groups; count rule_group as 1 atomic rule)\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalRulesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    \n    if (type == \"rule\" || type == \"rule_group\") {\n      // tip: count rule_group as 1 rule\n      cnt++;\n    } else if (children) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt;\n};\n\n\n// Remove fields that can be calced: \"id\", \"path\"\n// Remove empty fields: \"operatorOptions\"\nexport const getLightTree = (tree, deleteExcess = true, children1AsArray = true) => {\n  let newTree = tree;\n\n  function _processNode (item, itemId) {\n    if (deleteExcess && item.path) {\n      delete item.path;\n    }\n    if (deleteExcess && !children1AsArray && itemId) {\n      delete item.id;\n    }\n    let properties = item.properties;\n    if (properties) {\n      if (properties.operatorOptions == null) {\n        delete properties.operatorOptions;\n      }\n    }\n\n    const children = item.children1;\n    if (children) {\n      for (let id in children) {\n        if (children[id]) {\n          _processNode(children[id], id);\n        }\n      }\n      if (children1AsArray) {\n        item.children1 = Object.values(children);\n      }\n    }\n  }\n\n  _processNode(tree, null);\n\n  return newTree;\n};\n\nexport const getSwitchValues = (tree) => {\n  let vals = [];\n  const children = tree.get(\"children1\");\n  if (children) {\n    children.map((child) => {\n      const value = child.getIn([\"properties\", \"value\"]);\n      let caseValue;\n      if (value && value.size == 1) {\n        caseValue = value.get(0);\n        if (Array.isArray(caseValue) && caseValue.length == 0) {\n          caseValue = null;\n        }\n      } else {\n        caseValue = null;\n      }\n      vals = [...vals, caseValue];\n    });\n  }\n\n  return vals;\n};\n\nexport const isEmptyTree = (tree) => (!tree.get(\"children1\") || tree.get(\"children1\").size == 0);\n\nexport const hasChildren = (tree, path) => tree.getIn(expandTreePath(path, \"children1\")).size > 0;\n\n\nexport const _fixImmutableValue = (v) => {\n  if (v?.toJS) {\n    const vJs = v?.toJS?.();\n    if (vJs?.func) {\n      // `v` is a func, keep Immutable\n      return v.toOrderedMap();\n    } else {\n      // for values of multiselect use Array instead of List\n      return vJs;\n    }\n  } else {\n    return v;\n  }\n};\n","import Immutable, { fromJS, Map } from \"immutable\";\nimport {checkTree, isValidTree} from \"../utils/validation\";\nimport {getLightTree, _fixImmutableValue, fixPathsInTree} from \"../utils/treeUtils\";\nimport {isJsonLogic} from \"../utils/stuff\";\nimport uuid from \"../utils/uuid\";\n\nexport {\n  isJsonLogic,\n  // for backward compatibility:\n  checkTree, isValidTree\n};\n\nexport const getTree = (immutableTree, light = true, children1AsArray = true) => {\n  if (!immutableTree) return undefined;\n  let tree = immutableTree;\n  tree = tree.toJS();\n  tree = getLightTree(tree, light, children1AsArray);\n  return tree;\n};\n\nexport const loadTree = (serTree) => {\n  if (isImmutableTree(serTree)) {\n    return serTree;\n  } else if (isTree(serTree)) {\n    return fixPathsInTree(jsToImmutable(serTree));\n  } else if (typeof serTree == \"string\" && serTree.startsWith('[\"~#iM\"')) {\n    //tip: old versions of RAQB were saving tree with `transit.toJSON()`\n    // https://github.com/ukrbublik/react-awesome-query-builder/issues/69\n    throw new Error(\"You are trying to load query in obsolete serialization format (Immutable string) which is not supported in versions starting from 2.1.17\");\n  } else if (typeof serTree === \"string\") {\n    return fixPathsInTree(jsToImmutable(JSON.parse(serTree)));\n  } else throw new Error(\"Can't load tree!\");\n};\n\nexport const isImmutableTree = (tree) => {\n  return Map.isMap(tree);\n};\n\nexport const isTree = (tree) => {\n  return typeof tree == \"object\" && (tree.type == \"group\" || tree.type == \"switch_group\");\n};\n\nexport function jsToImmutable(tree) {\n  const imm = fromJS(tree, function (key, value, path) {\n    const isFuncArg = path\n      && path.length > 3\n      && path[path.length-1] === \"value\"\n      && path[path.length-3] === \"args\";\n    const isRuleValue = path\n      && path.length > 3\n      && path[path.length-1] === \"value\"\n      && path[path.length-2] === \"properties\";\n\n    let outValue;\n    if (key == \"properties\") {\n      outValue = value.toOrderedMap();\n\n      // `value` should be undefined instead of null\n      // JSON doesn't support undefined and replaces undefined -> null\n      // So fix: null -> undefined\n      for (let i = 0 ; i < 2 ; i++) {\n        if (outValue.get(\"value\")?.get?.(i) === null) {\n          outValue = outValue.setIn([\"value\", i], undefined);\n        }\n      }\n    } else if (isFuncArg) {\n      outValue = _fixImmutableValue(value);\n    } else if ((path ? isRuleValue : key == \"value\") && Immutable.Iterable.isIndexed(value)) {\n      outValue = value.map(_fixImmutableValue).toList();\n    } else if (key == \"asyncListValues\") {\n      // keep in JS format\n      outValue = value.toJS();\n    } else if (key == \"children1\" && Immutable.Iterable.isIndexed(value)) {\n      outValue = new Immutable.OrderedMap(value.map(child => [child?.get(\"id\") || uuid(), child]));\n    } else {\n      outValue = Immutable.Iterable.isIndexed(value) ? value.toList() : value.toOrderedMap();\n    }\n    return outValue;\n  });\n  return imm;\n}\n","import uuid from \"../utils/uuid\";\nimport {getOpCardinality, isJsonLogic, shallowEqual, logger} from \"../utils/stuff\";\nimport {getFieldConfig, extendConfig, normalizeField, getFuncConfig, iterateFuncs, getFieldParts} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {loadTree} from \"./tree\";\nimport {defaultConjunction, defaultGroupConjunction} from \"../utils/defaultUtils\";\n\nimport moment from \"moment\";\n\n// http://jsonlogic.com/\n\n// helpers\nconst arrayUniq = (arr) => Array.from(new Set(arr));\nconst arrayToObject = (arr) => arr.reduce((acc, [f, fc]) => ({ ...acc, [f]: fc }), {});\n\nconst createMeta = (parentMeta) => {\n  return {\n    errors: [],\n    settings: parentMeta?.settings,\n  };\n};\n\nexport const loadFromJsonLogic = (logicTree, config) => {\n  return _loadFromJsonLogic(logicTree, config, false);\n};\n\nexport const _loadFromJsonLogic = (logicTree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = createMeta();\n  meta.settings = {\n    allowUnknownFields: false,\n    returnErrors,\n  };\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  let jsTree = logicTree ? convertFromLogic(logicTree, conv, extendedConfig, \"rule\", meta) : undefined;\n  if (jsTree && jsTree.type != \"group\") {\n    jsTree = wrapInDefaultConj(jsTree, extendedConfig);\n  }\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from JsonLogic:\", meta.errors);\n    return immTree;\n  }\n};\n\n\nconst buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (typeof opConfig.jsonLogic == \"string\") {\n      // example: \"</2\", \"#in/1\"\n      const opk = (opConfig._jsonLogicIsRevArgs ? \"#\" : \"\") + opConfig.jsonLogic + \"/\" + getOpCardinality(opConfig);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else if(typeof opConfig.jsonLogic2 == \"string\") {\n      // example: all-in/1\"\n      const opk = opConfig.jsonLogic2 + \"/\" + getOpCardinality(opConfig);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.jsonLogicConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (const [funcPath, funcConfig] of iterateFuncs(config)) {\n    let fk;\n    if (funcConfig.jsonLogicIsMethod) {\n      fk = \"#\" + funcConfig.jsonLogic;\n    } else if (typeof funcConfig.jsonLogic == \"string\") {\n      fk = funcConfig.jsonLogic;\n    }\n    if (fk) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcPath);\n    }\n  }\n\n  const {groupVarKey, altVarKey} = config.settings.jsonLogic;\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    varKeys: [\"var\", groupVarKey, altVarKey],\n  };\n};\n\nconst convertFromLogic = (logic, conv, config, expectedType, meta, not = false, fieldConfig, widget, parentField = null, _isLockedLogic = false) => {\n  let op, vals;\n  if (isJsonLogic(logic)) {\n    op = Object.keys(logic)[0];\n    vals = logic[op];\n    if (!Array.isArray(vals))\n      vals = [ vals ];\n  }\n  \n  let ret;\n  const beforeErrorsCnt = meta.errors.length;\n\n  const {lockedOp} = config.settings.jsonLogic;\n  const isEmptyOp = op == \"!\" && (vals.length == 1 && vals[0] && isJsonLogic(vals[0]) && conv.varKeys.includes(Object.keys(vals[0])[0]));\n  const isRev = op == \"!\" && !isEmptyOp;\n  const isLocked = lockedOp && op == lockedOp;\n  if (isLocked) {\n    ret = convertFromLogic(vals[0], conv, config, expectedType, meta, not, fieldConfig, widget, parentField, true);\n  } else if (isRev) {\n    // reverse with not\n    ret = convertFromLogic(vals[0], conv, config, expectedType, meta, !not, fieldConfig, widget, parentField);\n  } else if(expectedType == \"val\") {\n    // not is not used here\n    ret = convertFieldRhs(op, vals, conv, config, not, meta, parentField) \n      || convertFuncRhs(op, vals, conv, config, not, fieldConfig, meta, parentField) \n      || convertValRhs(logic, fieldConfig, widget, config, meta);\n  } else if(expectedType == \"rule\") {\n    ret = convertConj(op, vals, conv, config, not, meta, parentField, false) \n    || convertOp(op, vals, conv, config, not, meta, parentField);\n  }\n\n  const afterErrorsCnt = meta.errors.length;\n  if (op != \"!\" && ret === undefined && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Can't parse logic ${JSON.stringify(logic)}`);\n  }\n\n  if (isLocked) {\n    ret.properties.isLocked = true;\n  }\n\n  return ret;\n};\n\n\nconst convertValRhs = (val, fieldConfig, widget, config, meta) => {\n  if (val === undefined)\n    val = fieldConfig?.defaultValue;\n  if (val === undefined) return undefined;\n  const widgetConfig = config.widgets[widget || fieldConfig?.mainWidget];\n  const fieldType = fieldConfig?.type;\n\n  if (fieldType && !widgetConfig) {\n    meta.errors.push(`No widget for type ${fieldType}`);\n    return undefined;\n  }\n\n  if (isJsonLogic(val)) {\n    meta.errors.push(`Unexpected logic in value: ${JSON.stringify(val)}`);\n    return undefined;\n  }\n\n  // number of seconds -> time string\n  if (fieldType == \"time\" && typeof val == \"number\") {\n    const [h, m, s] = [Math.floor(val / 60 / 60) % 24, Math.floor(val / 60) % 60, val % 60];\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      const dateVal = new Date(val);\n      dateVal.setMilliseconds(0);\n      dateVal.setHours(h);\n      dateVal.setMinutes(m);\n      dateVal.setSeconds(s);\n      val = moment(dateVal).format(valueFormat);\n    } else {\n      val = `${h}:${m}:${s}`;\n    }\n  }\n\n  // \"2020-01-08T22:00:00.000Z\" -> Date object\n  if ([\"date\", \"datetime\"].includes(fieldType) && val && !(val instanceof Date)) {\n    try {\n      const dateVal = new Date(val);\n      if (dateVal instanceof Date && dateVal.toISOString() === val) {\n        val = dateVal;\n      }\n    } catch(e) {\n      meta.errors.push(`Can't convert value ${val} as Date`);\n      val = undefined;\n    }\n  }\n\n  // Date object -> formatted string\n  if (val instanceof Date && fieldConfig) {\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      val = moment(val).format(valueFormat);\n    }\n  }\n\n  let asyncListValues;\n  if (val && fieldConfig?.fieldSettings?.asyncFetch) {\n    const vals = Array.isArray(val) ? val : [val];\n    asyncListValues = vals;\n  }\n\n  return {\n    valueSrc: \"value\",\n    value: val,\n    valueType: widgetConfig?.type,\n    asyncListValues\n  };\n};\n\nconst convertFieldRhs = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (conv.varKeys.includes(op) && typeof vals[0] == \"string\") {\n    const field = normalizeField(config, vals[0], parentField);\n    const fieldConfig = getFieldConfig(config, field);\n    if (!fieldConfig && !meta.settings?.allowUnknownFields) {\n      meta.errors.push(`No config for field ${field}`);\n      return undefined;\n    }\n\n    return {\n      valueSrc: \"field\",\n      value: field,\n      valueType: fieldConfig?.type,\n    };\n  }\n\n  return undefined;\n};\n\nconst convertLhs = (isGroup0, jlField, args, conv, config, not = null, fieldConfig = null, meta, parentField = null) => {\n  let k = Object.keys(jlField)[0];\n  let v = Object.values(jlField)[0];\n\n  const _parse = (k, v) => {\n    return convertFieldLhs(k, v, conv, config, not, meta, parentField)\n    || convertFuncLhs(k, v, conv, config, not, fieldConfig, meta, parentField);\n  };\n\n  const beforeErrorsCnt = meta.errors.length;\n  let field, fieldSrc, having, isGroup;\n  const parsed = _parse(k, v);\n  if (parsed) {\n    field = parsed.field;\n    fieldSrc = parsed.fieldSrc;\n  }\n  if (isGroup0) {\n    isGroup = true;\n    having = args[0];\n    args = [];\n  }\n  // reduce/filter for group ext\n  if (k == \"reduce\" && Array.isArray(v) && v.length == 3) {\n    let [filter, acc, init] = v;\n    if (isJsonLogic(filter) && init == 0\n      && isJsonLogic(acc)\n      && Array.isArray(acc[\"+\"]) && acc[\"+\"][0] == 1\n      && isJsonLogic(acc[\"+\"][1]) && acc[\"+\"][1][\"var\"] == \"accumulator\"\n    ) {\n      k = Object.keys(filter)[0];\n      v = Object.values(filter)[0];\n      if (k == \"filter\") {\n        let [group, filter] = v;\n        if (isJsonLogic(group)) {\n          k = Object.keys(group)[0];\n          v = Object.values(group)[0];\n          const parsedGroup = _parse(k, v);\n          if (parsedGroup) {\n            field = parsedGroup.field;\n            fieldSrc = parsedGroup.fieldSrc;\n            having = filter;\n            isGroup = true;\n          }\n        }\n      } else {\n        const parsedGroup = _parse(k, v);\n        if (parsedGroup) {\n          field = parsedGroup.field;\n          fieldSrc = parsedGroup.fieldSrc;\n          isGroup = true;\n        }\n      }\n    }\n  }\n  const afterErrorsCnt = meta.errors.length;\n\n  if (!field && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Unknown LHS ${JSON.stringify(jlField)}`);\n  }\n  if (!field) return;\n\n  return {\n    field, fieldSrc, having, isGroup, args\n  };\n};\n\nconst convertFieldLhs = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (!Array.isArray(vals))\n    vals = [ vals ];\n  const parsed = convertFieldRhs(op, vals, conv, config, not, meta, parentField);\n  if (parsed) {\n    return {\n      fieldSrc: \"field\",\n      field: parsed.value,\n    };\n  }\n  return undefined;\n};\n\nconst convertFuncLhs = (op, vals, conv, config, not, fieldConfig = null, meta, parentField = null) => {\n  const parsed = convertFuncRhs(op, vals, conv, config, not, fieldConfig, meta, parentField);\n  if (parsed) {\n    return {\n      fieldSrc: \"func\",\n      field: parsed.value,\n    };\n  }\n  return undefined;\n};\n\nconst convertFuncRhs = (op, vals, conv, config, not, fieldConfig = null, meta, parentField = null) => {\n  if (!op) return undefined;\n  let func, argsArr, funcKey;\n  const jsonLogicIsMethod = (op == \"method\");\n  if (jsonLogicIsMethod) {\n    let obj, opts;\n    [obj, func, ...opts] = vals;\n    argsArr = [obj, ...opts];\n  } else {\n    func = op;\n    argsArr = vals;\n  }\n\n  const fk = (jsonLogicIsMethod ? \"#\" : \"\") + func;\n  const returnType = fieldConfig?.type || fieldConfig?.returnType;\n  const funcKeys = (conv.funcs[fk] || []).filter(k => \n    (fieldConfig ? getFuncConfig(config, k).returnType == returnType : true)\n  );\n  if (funcKeys.length) {\n    funcKey = funcKeys[0];\n  } else {\n    const v = {[op]: vals};\n\n    for (const [f, fc] of iterateFuncs(config)) {\n      if (fc.jsonLogicImport && (returnType ? fc.returnType == returnType : true)) {\n        let parsed;\n        try {\n          parsed = fc.jsonLogicImport(v);\n        } catch(_e) {\n          // given expression `v` can't be parsed into function\n        }\n        if (parsed) {\n          funcKey = f;\n          argsArr = parsed;\n        }\n      }\n    }\n  }\n  if (!funcKey)\n    return undefined;\n\n  if (funcKey) {\n    const funcConfig = getFuncConfig(config, funcKey);\n    const argKeys = Object.keys(funcConfig.args || {});\n    let argsObj = argsArr.reduce((acc, val, ind) => {\n      const argKey = argKeys[ind];\n      const argConfig = funcConfig.args[argKey];\n      let argVal;\n      if (argConfig) {\n        argVal = convertFromLogic(val, conv, config, \"val\", meta, false, argConfig, null, parentField);\n      }\n      return argVal !== undefined ? {...acc, [argKey]: argVal} : acc;\n    }, {});\n\n    for (let argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      let argVal = argsObj[argKey];\n      if (argVal === undefined) {\n        argVal = argConfig?.defaultValue;\n        if (argVal !== undefined) {\n          argVal = {\n            value: argVal,\n            valueSrc: argVal?.func ? \"func\" : \"value\",\n            valueType: argConfig.type,\n          };\n        }\n        if (argVal === undefined) {\n          if (argConfig?.isOptional) {\n            //ignore\n          } else {\n            meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n            return undefined;\n          }\n        } else {\n          argsObj[argKey] = argVal;\n        }\n      }\n    }\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: argsObj\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  return undefined;\n};\n\n\nconst convertConj = (op, vals, conv, config, not, meta, parentField = null, isRuleGroup = false) => {\n  const conjKey = conv.conjunctions[op];\n  const {fieldSeparator} = config.settings;\n  // const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  // const isParentGroup = parentFieldConfig?.type == \"!group\";\n  if (conjKey) {\n    let type = \"group\";\n    const children = vals\n      .map(v => convertFromLogic(v, conv, config, \"rule\", meta, false, null, null, parentField))\n      .filter(r => r !== undefined)\n      .reduce((acc, r) => ({...acc, [r.id] : r}), {});\n    const complexFields = Object.values(children)\n      .map(v => v?.properties?.fieldSrc == \"field\" && v?.properties?.field)\n      .filter(f => f?.includes?.(fieldSeparator));\n    const complexFieldsGroupAncestors = Object.fromEntries(\n      arrayUniq(complexFields).map(f => {\n        const parts = f.split(fieldSeparator);\n        const ancs = Object.fromEntries(\n          parts.slice(0, -1)\n            .map((f, i, parts) => [...parts.slice(0, i), f])\n            .map(fp => [fp.join(fieldSeparator), getFieldConfig(config, fp)])\n            .filter(([_f, fc]) => fc?.type == \"!group\")\n        );\n        return [f, Object.keys(ancs)];\n      })\n    );\n    // const childrenInRuleGroup = Object.values(children)\n    //   .map(v => v?.properties?.fieldSrc == \"field\" && v?.properties?.field)\n    //   .map(f => complexFieldsGroupAncestors[f])\n    //   .filter(ancs => ancs && ancs.length);\n    // const usedRuleGroups = arrayUniq(Object.values(complexFieldsGroupAncestors).flat());\n    // const usedTopRuleGroups = topLevelFieldsFilter(usedRuleGroups);\n    \n    let properties = {\n      conjunction: conjKey,\n      not: not\n    };\n    const id = uuid();\n\n    let children1 = {};\n    let groupToId = {};\n    Object.entries(children).map(([k, v]) => {\n      if (v?.type == \"group\" || v?.type == \"rule_group\") {\n        // put as-is\n        children1[k] = v;\n      } else {\n        const field = v?.properties?.field;\n        const groupAncestors = complexFieldsGroupAncestors[field] || [];\n        const groupField = groupAncestors[groupAncestors.length - 1];\n        if (!groupField) {\n          // not in rule_group (can be simple field or in struct) - put as-is\n          if (v) {\n            children1[k] = v;\n          }\n        } else {\n          // wrap field in rule_group (with creating hierarchy if need)\n          let ch = children1;\n          let parentFieldParts = getFieldParts(parentField, config);\n          const groupPath = getFieldParts(groupField, config);\n          const isInParent = shallowEqual(parentFieldParts, groupPath.slice(0, parentFieldParts.length));\n          if (!isInParent)\n            parentFieldParts = []; // should not be\n          const traverseGroupFields = groupField\n            .split(fieldSeparator)\n            .slice(parentFieldParts.length)\n            .map((f, i, parts) => [...parentFieldParts, ...parts.slice(0, i), f].join(fieldSeparator))\n            .map((f) => ({f, fc: getFieldConfig(config, f) || {}}))\n            .filter(({fc}) => (fc.type != \"!struct\"));\n          traverseGroupFields.map(({f: gf, fc: gfc}, i) => {\n            let groupId = groupToId[gf];\n            if (!groupId) {\n              groupId = uuid();\n              groupToId[gf] = groupId;\n              ch[groupId] = {\n                type: \"rule_group\",\n                id: groupId,\n                children1: {},\n                properties: {\n                  conjunction: conjKey,\n                  not: false,\n                  field: gf,\n                  fieldSrc: \"field\",\n                  mode: gfc.mode,\n                }\n              };\n            }\n            ch = ch[groupId].children1;\n          });\n          ch[k] = v;\n        }\n      }\n    });\n\n    // tip: for isRuleGroup=true correct type and properties will be set out of this func\n\n    return {\n      type: type,\n      id: id,\n      children1: children1,\n      properties: properties\n    };\n  }\n\n  return undefined;\n};\n\n\n// const topLevelFieldsFilter = (fields) => {\n//   let arr = [...fields].sort((a, b) => (a.length - b.length));\n//   for (let i = 0 ; i < arr.length ; i++) {\n//     for (let j = i + 1 ; j < arr.length ; j++) {\n//       if (arr[j].indexOf(arr[i]) == 0) {\n//         // arr[j] is inside arr[i] (eg. \"a.b\" inside \"a\")\n//         arr.splice(j, 1);\n//         j--;\n//       }\n//     }\n//   }\n//   return arr;\n// };\n\nconst wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj) => {\n  if (!rule) return undefined;\n  return {\n    type: \"rule_group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n      not: false,\n      field: parentField,\n    }\n  };\n};\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not\n    }\n  };\n};\n\nconst parseRule = (op, arity, vals, parentField, conv, config, meta) => {\n  const submeta = createMeta(meta);\n  let res = _parseRule(op, arity, vals, parentField, conv, config, false, submeta);\n  if (!res) {\n    // try reverse\n    res = _parseRule(op, arity, vals, parentField, conv, config, true, createMeta(meta));\n  }\n  if (!res) {\n    meta.errors.push(submeta.errors.join(\"; \") || `Unknown op ${op}/${arity}`);\n    return undefined;\n  }\n  \n  return res;\n};\n\nconst _parseRule = (op, arity, vals, parentField, conv, config, isRevArgs, meta) => {\n  // config.settings.groupOperators are used for group count (cardinality = 0 is exception)\n  // but don't confuse with \"all-in\" or \"some-in\" for multiselect\n  const isAllOrSomeInForMultiselect\n    = (op == \"all\" || op == \"some\")\n    && isJsonLogic(vals[1])\n    && Object.keys(vals[1])[0] == \"in\"\n    && vals[1][\"in\"][0]?.[\"var\"] === \"\";\n  const isGroup0 = !isAllOrSomeInForMultiselect && config.settings.groupOperators.includes(op);\n  const eqOps = [\"==\", \"!=\"];\n  let cardinality = isGroup0 ? 0 : arity - 1;\n  if (isGroup0)\n    cardinality = 0;\n  else if (eqOps.includes(op) && cardinality == 1 && vals[1] === null) {\n    arity = 1;\n    cardinality = 0;\n    vals = [vals[0]];\n  }\n\n  const opk = op + \"/\" + cardinality;\n  let opKeys = conv.operators[(isRevArgs ? \"#\" : \"\") + opk];\n  if (!opKeys)\n    return;\n  \n  let jlField, jlArgs = [];\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  if (rangeOps.includes(op) && arity == 3) {\n    jlField = vals[1];\n    jlArgs = [ vals[0], vals[2] ];\n  } else if (isRevArgs) {\n    jlField = vals[1];\n    jlArgs = [ vals[0] ];\n  } else {\n    [jlField, ...jlArgs] = vals;\n  }\n\n  if (!isJsonLogic(jlField)) {\n    meta.errors.push(`Incorrect operands for ${op}: ${JSON.stringify(vals)}`);\n    return;\n  }\n\n  const lhs = convertLhs(isGroup0, jlField, jlArgs, conv, config, null, null, meta, parentField);\n  if (!lhs) return;\n  const {\n    field, fieldSrc, having, isGroup, args\n  } = lhs;\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig && !meta.settings?.allowUnknownFields) {\n    meta.errors.push(`No config for LHS ${field}`);\n    return;\n  }\n\n  let opKey = opKeys[0];\n  if (opKeys.length > 1 && fieldConfig && fieldConfig.operators) {\n    // eg. for \"equal\" and \"select_equals\"\n    opKeys = opKeys\n      .filter(k => fieldConfig.operators.includes(k));\n    if (opKeys.length == 0) {\n      meta.errors.push(`No corresponding ops for LHS ${field}`);\n      return;\n    }\n    opKey = opKeys[0];\n  }\n  \n  return {\n    field, fieldSrc, fieldConfig, opKey, args, having\n  };\n};\n\nconst convertOp = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (!op) return undefined;\n\n  const arity = vals.length;\n  if ((op == \"all\" || op == \"some\") && isJsonLogic(vals[1])) {\n    // special case for \"all-in\" and \"some-in\"\n    const op2 = Object.keys(vals[1])[0];\n    const isEmptyVar = vals[1][op2][0]?.[\"var\"] === \"\";\n    if (op2 == \"in\" && isEmptyVar) {\n      vals = [\n        vals[0],\n        vals[1][op2][1]\n      ];\n      op = op + \"-\" + op2; // \"all-in\" and \"some-in\"\n    }\n  }\n\n  const parseRes = parseRule(op, arity, vals, parentField, conv, config, meta);\n  if (!parseRes) return undefined;\n  let {field, fieldSrc, fieldConfig, opKey, args, having} = parseRes;\n  let opConfig = config.operators[opKey];\n\n  // Group component in array mode can show NOT checkbox, so do nothing in this case\n  // Otherwise try to revert\n  const showNot = fieldConfig?.showNot !== undefined ? fieldConfig.showNot : config.settings.showNot; \n  let canRev = true;\n  // if (fieldConfig.type == \"!group\" && fieldConfig.mode == \"array\" && showNot)\n  //   canRev = false;\n\n  let conj;\n  let havingVals;\n  let havingNot = false;\n  if (fieldConfig?.type == \"!group\" && having) {\n    conj = Object.keys(having)[0];\n    havingVals = having[conj];\n    if (!Array.isArray(havingVals))\n      havingVals = [ havingVals ];\n\n    // Preprocess \"!\": Try to reverse op in single rule in having\n    // Eg. use `not_equal` instead of `not` `equal`\n    const isEmptyOp = conj == \"!\" && (havingVals.length == 1 && havingVals[0] && isJsonLogic(havingVals[0]) && conv.varKeys.includes(Object.keys(havingVals[0])[0]));\n    if (conj == \"!\" && !isEmptyOp) {\n      havingNot = true;\n      having = having[\"!\"];\n      conj = Object.keys(having)[0];\n      havingVals = having[conj];\n      if (!Array.isArray(havingVals))\n        havingVals = [ havingVals ];\n    }\n  }\n\n  // Use reversed op\n  if (not && canRev && opConfig.reversedOp) {\n    not = false;\n    opKey = opConfig.reversedOp;\n    opConfig = config.operators[opKey];\n  }\n\n  const widget = getWidgetForFieldOp(config, field, opKey, null);\n\n  const convertedArgs = args\n    .map(v => convertFromLogic(v, conv, config, \"val\", meta, false, fieldConfig, widget, parentField));\n  if (convertedArgs.filter(v => v === undefined).length) {\n    //meta.errors.push(`Undefined arg for field ${field} and op ${opKey}`);\n    return undefined;\n  }\n\n  let res;\n\n  let fieldType = fieldConfig?.type;\n  if (fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n\n  if (fieldConfig?.type == \"!group\" && having) {\n    if (conv.conjunctions[conj] !== undefined) {\n      // group\n      res = convertConj(conj, havingVals, conv, config, havingNot, meta, field, true);\n      havingNot = false;\n    } else {\n      // need to be wrapped in `rule_group`\n      const rule = convertOp(conj, havingVals, conv, config, havingNot, meta, field);\n      havingNot = false;\n      res = wrapInDefaultConjRuleGroup(rule, field, fieldConfig, config, conv.conjunctions[\"and\"]);\n    }\n    if (!res)\n      return undefined;\n    \n    res.type = \"rule_group\";\n    Object.assign(res.properties, {\n      field: field,\n      mode: fieldConfig.mode,\n      operator: opKey,\n    });\n    if (fieldConfig.mode == \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n    if (not) {\n      res = wrapInDefaultConj(res, config, not);\n    }\n  } else if (fieldConfig?.type == \"!group\" && !having) {\n    res = {\n      type: \"rule_group\",\n      id: uuid(),\n      children1: {},\n      properties: {\n        conjunction: defaultGroupConjunction(config, fieldConfig),\n        not: not,\n        mode: fieldConfig.mode,\n        field: field,\n        operator: opKey,\n      }\n    };\n    if (fieldConfig.mode == \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n  } else {\n    const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n    const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n    res = {\n      type: \"rule\",\n      id: uuid(),\n      properties: {\n        field: field,\n        fieldSrc: fieldSrc,\n        operator: opKey,\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n        ...(asyncListValues ? {asyncListValues} : {}),\n      }\n    };\n    if (not) {\n      //meta.errors.push(`No rev op for ${opKey}`);\n      res = wrapInDefaultConj(res, config, not);\n    }\n  }\n\n  return res;\n};\n\n","import SqlStringOrig from \"sqlstring\";\n\nexport const SqlString = SqlStringOrig;\n\nSqlString.trim = (val) => {\n  if (val.charAt(0) == \"'\")\n    return val.substring(1, val.length-1);\n  else\n    return val;\n};\n\nSqlString.escapeLike = (val, any_start = true, any_end = true) => {\n  // normal escape\n  let res = SqlString.escape(val);\n  // unwrap ''\n  res = SqlString.trim(res);\n  // escape % and _\n  res = res.replace(/[%_]/g, \"\\\\$&\");\n  // wrap with % for LIKE\n  res = (any_start ? \"%\" : \"\") + res + (any_end ? \"%\" : \"\");\n  // wrap ''\n  res = \"'\" + res + \"'\";\n  return res;\n};\n\nexport const sqlEmptyValue = (fieldDef) => {\n  let v = \"''\";\n  const type = fieldDef?.type;\n  if (type == \"date\") {\n    //todo: support other SQL dialects?  0001-01-01 for oracle, 1970-01-01 for timestamp\n    v = \"'0000-00-00'\";\n  } else if (type == \"datetime\") {\n    v = \"'0000-00-00 00:00'\";\n  } else if (type == \"time\") {\n    v = \"'00:00'\";\n  } else if (type == \"number\") {\n    v = \"0\";\n  }\n  return v;\n};\n\nexport const mongoEmptyValue = (fieldDef) => {\n  let v = \"\";\n  const type = fieldDef?.type;\n  if (type == \"number\") {\n    v = 0;\n  }\n  return v;\n};\n\n\nconst spelEscapeString = (val) => {\n  // Strings are delimited by single quotes. To put a single quote itself in a string, use two single quote characters. \n  return \"'\" + val.replace(/'/g, \"''\") + \"'\";\n};\n\nconst spelInlineList = (vals, toArray = false) => {\n  // find java type of values\n  let javaType;\n  let jt;\n  const numberJavaTypes = [\"int\", \"float\"];\n  vals.map(v => {\n    if (v !== undefined && v !== null) {\n      if (typeof v === \"string\") {\n        jt = \"String\";\n      } else if (typeof v === \"number\") {\n        jt = Number.isInteger(v) ? \"int\" : \"float\";\n      } else throw new Error(`spelEscape: Can't use value ${v} in array`);\n\n      if (!javaType) {\n        javaType = jt;\n      } else if (javaType != jt) {\n        if (numberJavaTypes.includes(javaType) && numberJavaTypes.includes(jt)) {\n          // found int and float in collecton - use float\n          javaType = \"float\";\n        } else throw new Error(`spelEscape: Can't use different types in array: found ${javaType} and ${jt}`);\n      }\n    }\n  });\n  if (!javaType) {\n    javaType = \"String\"; //default if empty array\n  }\n\n  // for floats we should add 'f' to all items\n  let escapedVals;\n  if (javaType == \"float\") {\n    escapedVals = vals.map(v => spelEscape(v, true));\n  } else {\n    escapedVals = vals.map(v => spelEscape(v));\n  }\n\n  // build inline list or array\n  let res;\n  if (toArray) {\n    res = `new ${javaType}[]{${escapedVals.join(\", \")}}`;\n  } else {\n    res = `{${escapedVals.join(\", \")}}`;\n  }\n  \n  return res;\n};\n\nexport const spelFixList = (val) => {\n  // `{1,2}.contains(1)` NOT works\n  // `{1,2}.?[true].contains(1)` works\n  return `${val}.?[true]`;\n};\n\nexport const spelEscape = (val, numberToFloat = false, arrayToArray = false) => {\n  // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-ref-literal\n  if (val === undefined || val === null) {\n    return \"null\";\n  }\n  switch (typeof val) {\n  case \"boolean\":\n    return (val) ? \"true\" : \"false\";\n  case \"number\":\n    if (!Number.isFinite(val) || isNaN(val))\n      return undefined;\n    return val + (!Number.isInteger(val) || numberToFloat ? \"f\" : \"\");\n  case \"object\":\n    if (Array.isArray(val)) {\n      return spelInlineList(val, arrayToArray);\n    } else {\n      // see `spelFormatValue` for Date, LocalTime\n      throw new Error(\"spelEscape: Object is not supported\");\n    }\n  default: return spelEscapeString(val);\n  }\n};\n\nexport const spelFormatConcat = (parts) => {\n  if (parts && Array.isArray(parts) && parts.length) {\n    return parts\n      .map(part => {\n        if (part.type == \"const\") {\n          return spelEscape(part.value);\n        } else if (part.type == \"property\") {\n          return \"\"+part.value;\n        } else if (part.type == \"variable\") {\n          return \"#\"+part.value;\n        } return undefined;\n      })\n      .filter(r => r != undefined)\n      .join(\" + \");\n  } else {\n    return \"null\";\n  }\n};\n\n// `val` is {value, valueType, valueSrc}\n// If `valueType` == \"case_value\", `value` is array of such items (to be considered as concatenation)\nexport const spelImportConcat = (val) => {\n  if (val == undefined)\n    return [undefined, []];\n  let errors = [];\n  const parts = val.valueType == \"case_value\" ? val.value : [val];\n  const res = parts.map(child => {\n    if (child.valueSrc == \"value\") {\n      if (child.value === null) {\n        return undefined;\n      } else {\n        return {\n          type: \"const\", \n          value: child.value\n        };\n      }\n    } else if (child.valueSrc == \"field\") {\n      return {\n        type: (child.isVariable ? \"variable\" : \"property\"), \n        value: child.value\n      };\n    } else {\n      errors.push(`Unsupported valueSrc ${child.valueSrc} in concatenation`);\n    }\n  }).filter(v => v != undefined);\n  return [res, errors];\n};\n\nexport const stringifyForDisplay = (v) => (v == null ? \"NULL\" : v.toString());\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, extendConfig, getFieldParts\n} from \"../utils/configUtils\";\nimport {\n  getWidgetForFieldOp, formatFieldName, getFieldPartsConfigs, completeValue\n} from \"../utils/ruleUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, logger, widgetDefKeysToOmit, opDefKeysToOmit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport {spelEscape} from \"../utils/export\";\n\n// https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions\n\nexport const compareToSign = \"${0}.compareTo(${1})\";\nconst TypesWithCompareTo = {\n  datetime: true,\n  time: true,\n  date: true,\n};\n\nexport const spelFormat = (tree, config) => {\n  return _spelFormat(tree, config, false);\n};\n\nexport const _spelFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta, null);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SpEL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, parentField);\n  } else if (type == \"switch_group\") {\n    return formatSwitch(item, config, meta, parentField);\n  } else if (type == \"case_group\") {\n    return formatCase(item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\nconst formatCase = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  if (type != \"case_group\") {\n    meta.errors.push(`Unexpected child of type ${type} inside switch`);\n    return undefined;\n  }\n  const properties = item.get(\"properties\") || new Map();\n  \n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, null, parentField, \"!case_value\"\n  );\n\n  const cond = formatGroup(item, config, meta, parentField);\n  return [cond, formattedValue];\n};\n\nconst formatSwitch = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  if (!children) return undefined;\n  const cases = children\n    .map((currentChild) => formatCase(currentChild, config, meta, null))\n    .filter((currentChild) => typeof currentChild !== \"undefined\")\n    .valueSeq()\n    .toArray();\n  \n  if (!cases.length) return undefined;\n\n  if (cases.length == 1 && !cases[0][0]) {\n    // only 1 case without condition\n    return cases[0][1];\n  }\n\n  let filteredCases = [];\n  for (let i = 0 ; i < cases.length ; i++) {\n    if (i != (cases.length - 1) && !cases[i][0]) {\n      meta.errors.push(`No condition for case ${i}`);\n    } else {\n      filteredCases.push(cases[i]);\n      if (i == (cases.length - 1) && cases[i][0]) {\n        // no default - add null as default\n        filteredCases.push([undefined, null]);\n      }\n    }\n  }\n\n  let left = \"\", right = \"\";\n  for (let i = 0 ; i < filteredCases.length ; i++) {\n    let [cond, value] = filteredCases[i];\n    if (value == undefined)\n      value = \"null\";\n    if (cond == undefined)\n      cond = \"true\";\n    if (i != (filteredCases.length - 1)) {\n      left += `(${cond} ? ${value} : `;\n      right += \")\";\n    } else {\n      left += `${value}`;\n    }\n  }\n  return left + right;\n};\n\nconst formatGroup = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const not = properties.get(\"not\");\n\n  const isRuleGroup = type === \"rule_group\";\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const groupField = isRuleGroupArray ? field : parentField;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const isSpelArray = groupFieldDef.isSpelArray;\n  const {fieldSeparator} = config.settings;\n  \n  // check op for reverse\n  let groupOperator = properties.get(\"operator\");\n  if (!groupOperator && (!mode || mode == \"some\")) {\n    groupOperator = \"some\";\n  }\n  const realGroupOperator = checkOp(config, groupOperator, field);\n  const isGroupOpRev = realGroupOperator != groupOperator;\n  const realGroupOperatorDefinition = groupOperator && getOperatorConfig(config, realGroupOperator, field) || null;\n  const isGroup0 = isRuleGroup && (!realGroupOperator || realGroupOperatorDefinition.cardinality == 0);\n  \n  // build value for aggregation op\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realGroupOperator, parentField, null\n  );\n  \n  // build filter in aggregation\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n\n  if (isRuleGroupArray && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size)\n      return undefined;\n  }\n\n  const omitBrackets = isRuleGroup;\n  const filter = list.size ? conjunctionDefinition.spelFormatConj(list, conjunction, not, omitBrackets) : null;\n\n  // build result\n  let ret;\n  if (isRuleGroupArray) {\n    const formattedField = formatField(meta, config, field, parentField);\n    const sep = fieldSeparator || \".\";\n    const getSize = sep + (isSpelArray ? \"length\" : \"size()\");\n    const fullSize = `${formattedField}${getSize}`;\n    // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-collection-selection\n    const filteredSize = filter ? `${formattedField}.?[${filter}]${getSize}` : fullSize;\n    const groupValue = isGroup0 ? fullSize : formattedValue;\n    // format expression\n    ret = formatExpression(\n      meta, config, properties, filteredSize, groupValue, realGroupOperator, valueSrc, valueType, isGroupOpRev\n    );\n  } else {\n    ret = filter;\n  }\n  \n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, valueType) => {\n  const spelOp = operatorDefinition.spelOp;\n  if (!spelOp) return undefined;\n  const isSign = spelOp.includes(\"${0}\");\n  const isCompareTo = TypesWithCompareTo[valueType];\n  let sop = spelOp;\n  let fn;\n  const cardinality = getOpCardinality(operatorDefinition);\n  if (isCompareTo) {\n    // date1.compareTo(date2) >= 0\n    //   instead of\n    // date1 >= date2\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const compareRes = compareToSign.replace(/\\${(\\w+)}/g, (_, k) => (k == 0 ? field : (cardinality > 1 ? values[k-1] : values)));\n      return `${compareRes} ${sop} 0`;\n    };\n  } else if (isSign) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return spelOp.replace(/\\${(\\w+)}/g, (_, k) => (k == 0 ? field : (cardinality > 1 ? values[k-1] : values)));\n    };\n  } else if (cardinality == 0) {\n    // should not be\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sop} ${values}`;\n    };\n  }\n  return fn;\n};\n\nconst formatExpression = (meta, config, properties, formattedField, formattedValue, operator, valueSrc, valueType, isRev = false) => {\n  const field = properties.get(\"field\");\n  const opDef = getOperatorConfig(config, operator, field) || {};\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorOptions = properties.get(\"operatorOptions\");\n\n  //find fn to format expr\n  const fn = opDef.spelFormatOp || buildFnToFormatOp(operator, opDef, valueType);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n\n  //rev\n  if (isRev) {\n    ret = config.settings.spelFormatReverse(ret);\n  }\n\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrc}`);\n  }\n\n  return ret;\n};\n\nconst checkOp = (config, operator, field) => {\n  if (!operator) return undefined;\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n\n  let isRev = false;\n  const canFormatOp = opDef.spelOp || opDef.spelFormatOp;\n  const canFormatRevOp = revOpDef.spelOp || revOpDef.spelFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n  return operator;\n};\n\nconst formatRule = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  if (field == null || operator == null)\n    return undefined;\n\n  // check op for reverse\n  const realOp = checkOp(config, operator, field);\n  if (!realOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  const isRev = realOp != operator;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realOp, parentField, null\n  );\n  if (formattedValue === undefined)\n    return undefined;\n      \n  //format field\n  const formattedField = formatLhs(meta, config, field, fieldSrc, parentField);\n  if (formattedField === undefined)\n    return undefined;\n  \n  // format expression\n  let res = formatExpression(\n    meta, config, properties, formattedField, formattedValue, realOp, valueSrc, valueType, isRev\n  );\n  return res;\n};\n\nconst formatLhs = (meta, config, field, fieldSrc, parentField = null) => {\n  if (fieldSrc === \"func\")\n    return formatFunc(meta, config, field, parentField);\n  else\n    return formatField(meta, config, field, parentField);\n};\n\nconst formatItemValue = (config, properties, meta, operator, parentField, expectedValueType = null) => {\n  let field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  if (expectedValueType == \"!case_value\" || iValueType && iValueType.get(0) == \"case_value\") {\n    field = \"!case_value\";\n  }\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const cardinality = getOpCardinality(operatorDefinition);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  \n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  \n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n      const fv = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDefinition, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (!( fvalue.size < cardinality || hasUndefinedValues )) {\n      formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n    }\n  }\n  \n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc === \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc === \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else {\n    if (typeof fieldWidgetDef.spelFormatValue === \"function\") {\n      const fn = fieldWidgetDef.spelFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = spelEscape(currentValue);\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field, parentField = null) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsConfigs = getFieldPartsConfigs(field, config, parentField);\n  const formatFieldFn = config.settings.formatSpelField;\n  const fieldName = formatFieldName(field, config, meta, parentField);\n  const fieldPartsMeta = fieldPartsConfigs.map(([key, cnf, parentCnf]) => {\n    let parent;\n    if (parentCnf) {\n      if (parentCnf.type == \"!struct\" || parentCnf.type == \"!group\" && parentCnf.mode == \"struct\")\n        parent = cnf.isSpelMap ? \"map\" : \"class\";\n      else if (parentCnf.type == \"!group\")\n        parent = cnf.isSpelItemMap ? \"[map]\" : \"[class]\";\n      else\n        parent = \"class\";\n    }\n    const isSpelVariable = cnf?.isSpelVariable;\n    return {\n      key,\n      parent,\n      isSpelVariable,\n      fieldSeparator\n    };\n  });\n  const formattedField = formatFieldFn.call(config.ctx, fieldName, parentField, fieldParts, fieldPartsMeta, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const doEscape = argConfig.spelEscapeForFormat ?? true;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = omit(getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc), [\"factory\"]);\n\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, null, null, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = omit( getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc), [\"factory\"] );\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, null, null, parentField, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = doEscape ? finalFormattedVal : (argValue ?? defaultValue);\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n  \n  let ret;\n  if (typeof funcConfig.spelFormatFunc === \"function\") {\n    const fn = funcConfig.spelFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.spelFunc) {\n    // fill arg values\n    ret = funcConfig.spelFunc\n      .replace(/\\${(\\w+)}/g, (found, argKey) => {\n        return formattedArgs[argKey] ?? found;\n      });\n    // remove optional args (from end only)\n    const optionalArgs = Object.keys(funcConfig.args || {})\n      .reverse()\n      .filter(argKey => !!funcConfig.args[argKey].isOptional);\n    for (const argKey of optionalArgs) {\n      if (formattedArgs[argKey] != undefined)\n        break;\n      ret = ret.replace(new RegExp(\"(, )?\" + \"\\\\${\" + argKey + \"}\", \"g\"), \"\");\n    }\n    // missing required arg vals\n    ret = ret.replace(/\\${(\\w+)}/g, \"null\");\n  } else {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n  }\n  return ret;\n};\n","import { SpelExpressionEvaluator } from \"spel2js\";\nimport uuid from \"../utils/uuid\";\nimport {getFieldConfig, getFuncConfig, extendConfig, normalizeField, iterateFuncs} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {loadTree} from \"./tree\";\nimport {defaultConjunction, defaultGroupConjunction} from \"../utils/defaultUtils\";\nimport {getOpCardinality, logger, isJsonCompatible} from \"../utils/stuff\";\nimport moment from \"moment\";\nimport {compareToSign} from \"../export/spel\";\n\n// https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions\n\n// spel type => raqb type\nconst SpelPrimitiveTypes = {\n  number: \"number\",\n  string: \"text\",\n  boolean: \"boolean\",\n  null: \"null\" // should not be\n};\n// spel class => raqb type\nconst SpelPrimitiveClasses = {\n  String: \"text\",\n};\nconst ListValueType = \"multiselect\";\nconst isFuncableProperty = (p) => [\"length\"].includes(p);\n\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const loadFromSpel = (logicTree, config) => {\n  return _loadFromSpel(logicTree, config, true);\n};\n\nexport const _loadFromSpel = (spelStr, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  \n  let compiledExpression;\n  let convertedObj;\n  let jsTree = undefined;\n  try {\n    const compileRes = SpelExpressionEvaluator.compile(spelStr);\n    compiledExpression = compileRes._compiledExpression;\n  } catch (e) {\n    meta.errors.push(e);\n  }\n  \n  if (compiledExpression) {\n    //logger.debug(\"compiledExpression:\", compiledExpression);\n    convertedObj = postprocessCompiled(compiledExpression, meta);\n    logger.debug(\"convertedObj:\", convertedObj, meta);\n\n    jsTree = convertToTree(convertedObj, conv, extendedConfig, meta);\n    if (jsTree && jsTree.type != \"group\" && jsTree.type != \"switch_group\") {\n      jsTree = wrapInDefaultConj(jsTree, extendedConfig, convertedObj[\"not\"]);\n    }\n    logger.debug(\"jsTree:\", jsTree);\n  }\n\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from SpEL:\", meta.errors);\n    return immTree;\n  }\n};\n\nconst postprocessCompiled = (expr, meta, parentExpr = null) => {\n  const type = expr.getType();\n  let children = expr.getChildren().map(child => postprocessCompiled(child, meta, expr));\n\n  // flatize OR/AND\n  if (type == \"op-or\" || type == \"op-and\") {\n    children = children.reduce((acc, child) => {\n      const canFlatize = child.type == type && !child.not;\n      const flat = canFlatize ? child.children : [child];\n      return [...acc, ...flat];\n    }, []);\n  }\n\n  // unwrap NOT\n  if (type == \"op-not\") {\n    if (children.length != 1) {\n      meta.errors.push(`Operator NOT should have 1 child, but got ${children.length}}`);\n    }\n    return {\n      ...children[0],\n      not: !(children[0].not || false)\n    };\n  }\n\n  if (type == \"compound\") {\n    // remove `.?[true]`\n    children = children.filter(child => {\n      const isListFix = child.type == \"selection\" && child.children.length == 1 && child.children[0].type == \"boolean\" && child.children[0].val == true;\n      return !isListFix;\n    });\n    // aggregation\n    // eg. `results.?[product == 'abc'].length`\n    const selection = children.find(child => \n      child.type == \"selection\"\n    );\n    if (selection && selection.children.length != 1) {\n      meta.errors.push(`Selection should have 1 child, but got ${selection.children.length}`);\n    }\n    const filter = selection ? selection.children[0] : null;\n    let lastChild = children[children.length - 1];\n    const isSize = lastChild.type == \"method\" && lastChild.val.methodName == \"size\" \n      || lastChild.type == \"!func\" && lastChild.methodName == \"size\";\n    const isLength = lastChild.type == \"property\" && lastChild.val == \"length\";\n    const sourceParts = children.filter(child => \n      child !== selection && child !== lastChild\n    );\n    const source = {\n      type: \"compound\",\n      children: sourceParts\n    };\n    const isAggr = (isSize || isLength) && convertPath(sourceParts) != null;\n    if (isAggr) {\n      return {\n        type: \"!aggr\",\n        filter,\n        source\n      };\n    }\n    // remove `#this`, `#root`\n    children = children.filter(child => {\n      const isThis = child.type == \"variable\" && child.val == \"this\";\n      const isRoot = child.type == \"variable\" && child.val == \"root\";\n      return !(isThis || isRoot);\n    });\n    // indexer\n    children = children.map(child => {\n      if (child.type == \"indexer\" && child.children.length == 1) {\n        return {\n          type: \"indexer\", \n          val: child.children[0].val,\n          itype: child.children[0].type\n        };\n      } else {\n        return child;\n      }\n    });\n    // method\n    // if (lastChild.type == \"method\") {\n    //   // seems like obsolete code!\n    //   debugger\n    //   const obj = children.filter(child => \n    //     child !== lastChild\n    //   );\n    //   return {\n    //     type: \"!func\",\n    //     obj,\n    //     methodName: lastChild.val.methodName,\n    //     args: lastChild.val.args\n    //   };\n    // }\n    // !func\n    if (lastChild.type == \"!func\") {\n      const ret = {};\n      let curr = ret;\n      do {\n        Object.assign(curr, lastChild);\n        children = children.filter(child => child !== lastChild);\n        lastChild = children[children.length - 1];\n        if (lastChild?.type == \"!func\") {\n          curr.obj = {};\n          curr = curr.obj;\n        } else {\n          if (children.length > 1) {\n            curr.obj = {\n              type: \"compound\",\n              children\n            };\n          } else {\n            curr.obj = lastChild;\n          }\n        }\n      } while(lastChild?.type == \"!func\");\n      return ret;\n    }\n  }\n\n  // getRaw || getValue\n  let val;\n  try {\n    if (expr.getRaw) { // use my fork\n      val = expr.getRaw();\n    } else if (expr.getValue.length == 0) { // getValue not requires context arg -> can use\n      val = expr.getValue();\n    }\n  } catch(e) {\n    logger.error(\"[spel2js] Error in getValue()\", e);\n  }\n\n  // ternary\n  if (type == \"ternary\") {\n    val = flatizeTernary(children);\n  }\n\n  // convert method/function args\n  if (typeof val === \"object\" && val !== null) {\n    if (val.methodName || val.functionName) {\n      val.args = val.args.map(child => postprocessCompiled(child, meta, expr));\n    }\n  }\n  // convert list\n  if (type == \"list\") {\n    val = val.map(item => postprocessCompiled(item, meta, expr));\n\n    // fix whole expression wrapped in `{}`\n    if (!parentExpr && val.length == 1) {\n      return val[0];\n    }\n  }\n  // convert constructor\n  if (type == \"constructorref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in constructorref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!new\",\n      cls,\n      args\n    };\n  }\n  // convert type\n  if (type == \"typeref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in typeref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const _args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!type\",\n      cls\n    };\n  }\n  // convert function/method\n  if (type == \"function\" || type == \"method\") {\n    // `foo()` is method, `#foo()` is function\n    // let's use common property `methodName` and just add `isVar` for function\n    const {functionName, methodName, args} = val;\n    return {\n      type: \"!func\",\n      methodName: functionName || methodName,\n      isVar: type == \"function\",\n      args\n    };\n  }\n\n  return {\n    type,\n    children,\n    val,\n  };\n};\n\nconst flatizeTernary = (children) => {\n  let flat = [];\n  function _processTernaryChildren(tern) {\n    let [cond, if_val, else_val] = tern;\n    flat.push([cond, if_val]);\n    if (else_val?.type == \"ternary\") {\n      _processTernaryChildren(else_val.children);\n    } else {\n      flat.push([undefined, else_val]);\n    }\n  }\n  _processTernaryChildren(children);\n  return flat;\n};\n\nconst buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (opConfig.spelOps) {\n      // examples: \"==\", \"eq\", \".contains\", \"matches\" (can be used for starts_with, ends_with)\n      opConfig.spelOps.forEach(spelOp => {\n        const opk = spelOp; // + \"/\" + getOpCardinality(opConfig);\n        if (!operators[opk])\n          operators[opk] = [];\n        operators[opk].push(opKey);\n      });\n    } else if (opConfig.spelOp) {\n      const opk = opConfig.spelOp; // + \"/\" + getOpCardinality(opConfig);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else {\n      logger.log(`[spel] No spelOp for operator ${opKey}`);\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.spelConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (const [funcPath, funcConfig] of iterateFuncs(config)) {\n    let fks = [];\n    const {spelFunc} = funcConfig;\n    if (typeof spelFunc === \"string\") {\n      const optionalArgs = Object.keys(funcConfig.args || {})\n        .reverse()\n        .filter(argKey => !!funcConfig.args[argKey].isOptional || funcConfig.args[argKey].defaultValue != undefined);\n      const funcSignMain = spelFunc\n        .replace(/\\${(\\w+)}/g, (_, _k) => \"?\");\n      const funcSignsOptional = optionalArgs\n        .reduce((acc, argKey) => (\n          [\n            ...acc,\n            [\n              argKey,\n              ...(acc[acc.length-1] || []),\n            ]\n          ]\n        ), [])\n        .map(optionalArgKeys => (\n          spelFunc\n            .replace(/(?:, )?\\${(\\w+)}/g, (found, a) => (\n              optionalArgKeys.includes(a) ? \"\" : found\n            ))\n            .replace(/\\${(\\w+)}/g, (_, _k) => \"?\")\n        ));\n      fks = [\n        funcSignMain,\n        ...funcSignsOptional,\n      ];\n    }\n    for (const fk of fks) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcPath);\n    }\n  }\n\n  let valueFuncs = {};\n  for (let w in config.widgets) {\n    const widgetDef = config.widgets[w];\n    const {spelImportFuncs, type} = widgetDef;\n    if (spelImportFuncs) {\n      for (const fk of spelImportFuncs) {\n        if (typeof fk === \"string\") {\n          const fs = fk.replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n          const argsOrder = [...fk.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n          if (!valueFuncs[fs])\n            valueFuncs[fs] = [];\n          valueFuncs[fs].push({\n            w,\n            argsOrder\n          });\n        }\n      }\n    }\n  }\n\n  let opFuncs = {};\n  for (let op in config.operators) {\n    const opDef = config.operators[op];\n    const {spelOp} = opDef;\n    if (spelOp?.includes(\"${0}\")) {\n      const fs = spelOp.replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n      const argsOrder = [...spelOp.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n      if (!opFuncs[fs])\n        opFuncs[fs] = [];\n      opFuncs[fs].push({\n        op,\n        argsOrder\n      });\n    }\n  }\n  // Special .compareTo()\n  const compareToSS = compareToSign.replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n  opFuncs[compareToSS] = [{\n    op: \"!compare\",\n    argsOrder: [\"0\", \"1\"]\n  }];\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    valueFuncs,\n    opFuncs,\n  };\n};\n\nconst convertToTree = (spel, conv, config, meta, parentSpel = null) => {\n  if (!spel) return undefined;\n\n  let res, canParseAsArg = true;\n  if (spel.type.indexOf(\"op-\") === 0 || spel.type === \"matches\") {\n    res = convertOp(spel, conv, config, meta, parentSpel);\n  } else if (spel.type == \"!aggr\") {\n    const groupFieldValue = convertToTree(spel.source, conv, config, meta, {\n      ...spel, \n      _groupField: parentSpel?._groupField\n    });\n    let groupFilter = convertToTree(spel.filter, conv, config, meta, {\n      ...spel, \n      _groupField: groupFieldValue?.value\n    });\n    if (groupFilter?.type == \"rule\") {\n      groupFilter = wrapInDefaultConj(groupFilter, config, spel.filter.not);\n    }\n    res = {\n      groupFilter,\n      groupFieldValue\n    };\n    if (!parentSpel) {\n      // !aggr can't be in root, it should be compared with something\n      res = undefined;\n      meta.errors.push(\"Unexpected !aggr in root\");\n      canParseAsArg = false;\n    }\n  } else if (spel.type == \"ternary\") {\n    const children1 = {};\n    spel.val.forEach(v => {\n      const [cond, val] = v;\n      const caseI = buildCase(cond, val, conv, config, meta, spel);\n      if (caseI) {\n        children1[caseI.id] = caseI;\n      }\n    });\n    res = {\n      type: \"switch_group\",\n      id: uuid(),\n      children1,\n      properties: {}\n    };\n  }\n\n  if (!res && canParseAsArg) {\n    res = convertArg(spel, conv, config, meta, parentSpel);\n  }\n\n  if (res && !res.type && !parentSpel) {\n    // res is not a rule, it's value at root\n    // try to parse whole `\"1\"` as ternary\n    const sw = buildSimpleSwitch(spel, conv, config, meta);\n    if (sw) {\n      res = sw;\n    } else {\n      res = undefined;\n      meta.errors.push(`Can't convert rule of type ${spel.type}, it looks like var/literal`);\n    }\n  }\n  \n  return res;\n};\n\nconst convertOp = (spel, conv, config, meta, parentSpel = null) => {\n  let res;\n\n  let op = spel.type.startsWith(\"op-\") ? spel.type.slice(\"op-\".length) : spel.type;\n\n  // unary\n  const isUnary = (op == \"minus\" || op == \"plus\") && spel.children.length == 1;\n  if (isUnary) {\n    spel.isUnary = true;\n    return convertOp(spel.children[0], conv, config, meta, spel);\n  }\n\n  // between\n  let isBetweenNormal = (op == \"and\" && spel.children.length == 2 && spel.children[0].type == \"op-ge\" && spel.children[1].type == \"op-le\");\n  let isBetweenRev = (op == \"or\" && spel.children.length == 2 && spel.children[0].type == \"op-lt\" && spel.children[1].type == \"op-gt\");\n  let isBetween = isBetweenNormal || isBetweenRev;\n  if (isBetween) {\n    const [left, from] = spel.children[0].children;\n    const [right, to] = spel.children[1].children;\n    const isSameSource = compareArgs(left, right,  spel, conv, config, meta, parentSpel);\n    if (isSameSource) {\n      const _fromValue = from.val;\n      const _toValue = to.val;\n      const oneSpel = {\n        type: \"op-between\",\n        children: [\n          left,\n          from,\n          to\n        ],\n        not: isBetweenRev,\n      };\n      return convertOp(oneSpel, conv, config, meta, parentSpel);\n    }\n  }\n\n  // find op\n  let opKeys = conv.operators[op];\n  if (op == \"eq\" && spel.children[1].type == \"null\") {\n    opKeys = [\"is_null\"];\n  } else if (op == \"ne\" && spel.children[1].type == \"null\") {\n    opKeys = [\"is_not_null\"];\n  } else if (op == \"le\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n    opKeys = [\"is_empty\"];\n  } else if (op == \"gt\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n    opKeys = [\"is_not_empty\"];\n  } else if (op == \"between\") {\n    opKeys = [\"between\"];\n  }\n\n  // convert children\n  const convertChildren = () => {\n    let newChildren = spel.children.map(child =>\n      convertToTree(child, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      })\n    );\n    if (newChildren.length >= 2 && newChildren?.[0]?.type == \"!compare\") {\n      newChildren = newChildren[0].children;\n    }\n    return newChildren;\n  };\n\n  if (op == \"and\" || op == \"or\") {\n    const children1 = {};\n    const vals = convertChildren();\n    vals.forEach(v => {\n      if (v) {\n        const id = uuid();\n        v.id = id;\n        if (v.type != undefined) {\n          children1[id] = v;\n        } else {\n          meta.errors.push(`Bad item in AND/OR: ${JSON.stringify(v)}`);\n        }\n      }\n    });\n    res = {\n      type: \"group\",\n      id: uuid(),\n      children1,\n      properties: {\n        conjunction: conv.conjunctions[op],\n        not: spel.not\n      }\n    };\n  } else if (opKeys) {\n    const vals = convertChildren();\n    const fieldObj = vals[0];\n    let convertedArgs = vals.slice(1);\n    const groupField = fieldObj?.groupFieldValue?.value;\n    const opArg = convertedArgs?.[0];\n    \n    let opKey = opKeys[0];\n    if (opKeys.length > 1) {\n      const valueType = vals[0]?.valueType || vals[1]?.valueType;\n      //todo: it's naive, use valueType\n      const field = fieldObj?.value;\n      const widgets = opKeys.map(op => ({op, widget: getWidgetForFieldOp(config, field, op)}));\n      logger.warn(`[spel] Spel operator ${op} can be mapped to ${opKeys}.`,\n        \"widgets:\", widgets, \"vals:\", vals, \"valueType=\", valueType);\n      \n      if (op == \"eq\" || op == \"ne\") {\n        const ws = widgets.find(({ op, widget }) => (widget && widget != \"field\"));\n        if (ws) {\n          opKey = ws.op;\n        }\n      }\n    }\n\n    // some/all/none\n    if (fieldObj?.groupFieldValue) {\n      if (opArg && opArg.groupFieldValue && opArg.groupFieldValue.valueSrc == \"field\" && opArg.groupFieldValue.value == groupField) {\n        // group.?[...].size() == group.size()\n        opKey = \"all\";\n        convertedArgs = [];\n      } else if (opKey == \"equal\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n        opKey = \"none\";\n        convertedArgs = [];\n      } else if (opKey == \"greater\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n        opKey = \"some\";\n        convertedArgs = [];\n      }\n    }\n\n    let canRev = true;\n    let needWrapReverse = false;\n    if (spel.not && canRev) {\n      const opConfig = config.operators[opKey];\n      if (opConfig.reversedOp) {\n        opKey = opConfig.reversedOp;\n        spel.not = false;\n      } else {\n        needWrapReverse = true;\n      }\n    }\n    \n    if (!fieldObj) {\n      // LHS can't be parsed\n    } else if (fieldObj.groupFieldValue) {\n      // 1. group\n      if (fieldObj.groupFieldValue.valueSrc != \"field\") {\n        meta.errors.push(`Expected group field ${JSON.stringify(fieldObj)}`);\n      }\n\n      res = buildRuleGroup(fieldObj, opKey, convertedArgs, config, meta);\n    } else {\n      // 2. not group\n      if (fieldObj.valueSrc != \"field\" && fieldObj.valueSrc != \"func\") {\n        meta.errors.push(`Expected field/func at LHS, but got ${JSON.stringify(fieldObj)}`);\n      }\n      const field = fieldObj.value;\n      res = buildRule(config, meta, field, opKey, convertedArgs);\n    }\n\n    if (needWrapReverse) {\n      if (res.type !== \"group\") {\n        res = wrapInDefaultConj(res, config, spel.not);\n      } else {\n        res.properties.not = !res.properties.not;\n      }\n    }\n  } else {\n    if (!parentSpel) {\n      // try to parse whole `\"str\" + prop + #var` as ternary\n      res = buildSimpleSwitch(spel, conv, config, meta);\n    }\n    // if (!res) {\n    //   meta.errors.push(`Can't convert op ${op}`);\n    // }\n  }\n  return res;\n};\n\nconst convertPath = (parts, meta = {}, expectingField = false) => {\n  let isError = false;\n  const res = parts.map(c => {\n    if (c.type == \"variable\" || c.type == \"property\" || c.type == \"indexer\" && c.itype == \"string\") {\n      return c.val;\n    } else {\n      isError = true;\n      expectingField && meta?.errors?.push?.(`Unexpected item in field path compound: ${JSON.stringify(c)}`);\n    }\n  });\n  return !isError ? res : undefined;\n};\n\nconst convertArg = (spel, conv, config, meta, parentSpel) => {\n  if (spel == undefined)\n    return undefined;\n  const {fieldSeparator} = config.settings;\n\n  if (spel.type == \"variable\" || spel.type == \"property\") {\n    // normal field\n    const field = normalizeField(config, spel.val, parentSpel?._groupField);\n    const fieldConfig = getFieldConfig(config, field);\n    const isVariable = spel.type == \"variable\";\n    return {\n      valueSrc: \"field\",\n      valueType: fieldConfig?.type,\n      isVariable,\n      value: field,\n    };\n  } else if (spel.type == \"compound\") {\n    // complex field\n    const parts = convertPath(spel.children, meta);\n    if (parts) {\n      const field = normalizeField(config, parts.join(fieldSeparator), parentSpel?._groupField);\n      const fieldConfig = getFieldConfig(config, field);\n      const isVariable = spel.children?.[0]?.type == \"variable\";\n      return {\n        valueSrc: \"field\",\n        valueType: fieldConfig?.type,\n        isVariable,\n        value: field,\n      };\n    } else {\n      // it's not complex field\n    }\n  } else if (SpelPrimitiveTypes[spel.type]) {\n    let value = spel.val;\n    const valueType = SpelPrimitiveTypes[spel.type];\n    if (parentSpel?.isUnary) {\n      value = -value;\n    }\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type == \"!new\" && SpelPrimitiveClasses[spel.cls.at(-1)]) {\n    const args = spel.args.map(v => convertArg(v, conv, config, meta, spel));\n    const value = args?.[0];\n    const valueType = SpelPrimitiveClasses[spel.cls.at(-1)];\n    return {\n      ...value,\n      valueType,\n    };\n  } else if (spel.type == \"list\") {\n    const values = spel.val.map(v => convertArg(v, conv, config, meta, spel));\n    const _itemType = values.length ? values[0]?.valueType : null;\n    const value = values.map(v => v?.value);\n    const valueType = ListValueType;\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type == \"op-plus\" && parentSpel?.type == \"ternary\") {\n    return buildCaseValueConcat(spel, conv, config, meta);\n  }\n\n  let maybe = convertFunc(spel, conv, config, meta, parentSpel);\n  if (maybe !== undefined) {\n    return maybe;\n  }\n\n  meta.errors.push(`Can't convert arg of type ${spel.type}`);\n  return undefined;\n};\n\nconst buildFuncSignatures = (spel) => {\n  // branches\n  const brns = [\n    {s: \"\", params: [], objs: []}\n  ];\n  _buildFuncSignatures(spel, brns);\n  return brns.map(({s, params}) => ({s, params})).reverse().filter(({s}) => s !== \"\" && s !== \"?\");\n};\n\n// a.toLower().toUpper()\n// ->\n// ?.toLower().toUpper()\n// ?.toUpper()\nconst _buildFuncSignatures = (spel, brns) => {\n  let params = [], s = \"\";\n  const { type, methodName, val, obj, args, isVar, cls, children } = spel;\n  const lastChild = children?.[children.length-1];\n  let currBrn = brns[brns.length-1];\n  if (type === \"!func\") {\n    // T(DateTimeFormat).forPattern(?).parseDateTime(?)  --  ok\n    // T(LocalDateTime).parse(?, T(DateTimeFormatter).ofPattern(?))  --  will not work\n    let o = obj;\n    while (o) {\n      const [s1, params1] = _buildFuncSignatures({...o, obj: null}, [{}]);\n      if (s1 !== \"?\") {\n        // start new branch\n        const newBrn = {\n          s: currBrn.s,\n          params: [...currBrn.params],\n          objs: [...currBrn.objs]\n        };\n        // finish old branch\n        currBrn.objs.unshift(\"?\");\n        currBrn.params.unshift(o);\n        // switch\n        brns.push(newBrn);\n        currBrn = brns[brns.length-1];\n      }\n      // step\n      currBrn.objs.unshift(s1);\n      currBrn.params.unshift(...params1);\n      o = o.type === \"!func\" ? o.obj : null;\n    }\n    for (const brn of brns) {\n      params = [\n        ...(brn?.params || []),\n        ...(args || []),\n      ];\n      s = \"\";\n      if (brn?.objs?.length)\n        s += brn.objs.join(\".\") + \".\";\n      s += (isVar ? \"#\" : \"\") + methodName;\n      s += \"(\" + (args || []).map(_ => \"?\").join(\", \") + \")\";\n      brn.s = s;\n      brn.params = params;\n    }\n  } else if (type === \"!new\") {\n    // new java.text.SimpleDateFormat('HH:mm:ss').parse('...')\n    params = args || [];\n    s = `new ${cls.join(\".\")}(${params.map(_ => \"?\").join(\", \")})`;\n  } else if (type === \"!type\") {\n    // T(java.time.LocalTime).parse('...')\n    s = `T(${cls.join(\".\")})`;\n  } else if (type === \"compound\" && lastChild.type === \"property\" && isFuncableProperty(lastChild.val)) {\n    // {1,2}.length  --  ok\n    // 'Hello World'.bytes.length  --  will not work\n    s = children.map((c) => {\n      if (c === lastChild)\n        return c.val;\n      const [s1, params1] = _buildFuncSignatures({...c, obj: null}, [{}]);\n      params.push(...params1);\n      return s1;\n    }).join(\".\");\n  } else {\n    params = [spel];\n    s = \"?\";\n  }\n\n  if (currBrn) {\n    currBrn.s = s;\n    currBrn.params = params;\n  }\n\n  return [s, params];\n};\n\nconst convertFunc = (spel, conv, config, meta, parentSpel) => {\n  // Build signatures\n  const convertFuncArg = v => convertArg(v, conv, config, meta, {\n    ...spel,\n    _groupField: parentSpel?._groupField\n  });\n  const fsigns = buildFuncSignatures(spel);\n  const firstSign = fsigns?.[0]?.s;\n  if (fsigns.length)\n    logger.debug(\"Signatures for \", spel, \":\", firstSign, fsigns);\n  \n  // 1. Try to parse as value\n  let maybeValue = convertFuncToValue(spel, conv, config, meta, parentSpel, fsigns, convertFuncArg);\n  if (maybeValue !== undefined)\n    return maybeValue;\n  \n  // 2. Try to parse as op\n  let maybeOp = convertFuncToOp(spel, conv, config, meta, parentSpel, fsigns, convertFuncArg);\n  if (maybeOp !== undefined)\n    return maybeOp;\n  \n  // 3. Try to parse as func\n  let funcKey, funcConfig, argsObj;\n  // try func signature matching\n  for (const {s, params} of fsigns) {\n    const funcKeys = conv.funcs[s];\n    if (funcKeys) {\n      // todo: here we can check arg types, if we have function overloading\n      funcKey = funcKeys[0];\n      funcConfig = getFuncConfig(config, funcKey);\n      const {spelFunc} = funcConfig;\n      const argsArr = params.map(convertFuncArg);\n      const argsOrder = [...spelFunc.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n      argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      break;\n    }\n  }\n  // try `spelImport`\n  if (!funcKey) {\n    for (const [f, fc] of iterateFuncs(config)) {\n      if (fc.spelImport) {\n        let parsed;\n        try {\n          parsed = fc.spelImport(spel);\n        } catch(_e) {\n          // can't be parsed\n        }\n        if (parsed) {\n          funcKey = f;\n          funcConfig = getFuncConfig(config, funcKey);\n          argsObj = {};\n          for (let argKey in parsed) {\n            argsObj[argKey] = convertFuncArg(parsed[argKey]);\n          }\n        }\n      }\n    }\n  }\n\n  // convert\n  if (funcKey) {\n    const funcArgs = {};\n    for (let argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      let argVal = argsObj[argKey];\n      if (argVal === undefined) {\n        argVal = argConfig?.defaultValue;\n        if (argVal === undefined) {\n          if (argConfig?.isOptional) {\n            //ignore\n          } else {\n            meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n            return undefined;\n          }\n        } else {\n          argVal = {\n            value: argVal,\n            valueSrc: argVal?.func ? \"func\" : \"value\",\n            valueType: argConfig.type,\n          };\n        }\n      }\n      if (argVal)\n        funcArgs[argKey] = argVal;\n    }\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: funcArgs\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  const {methodName} = spel;\n  if (methodName)\n    meta.errors.push(`Signature ${firstSign} - failed to convert`);\n  \n  return undefined;\n};\n\nconst convertFuncToValue = (spel, conv, config, meta, parentSpel, fsigns, convertFuncArg) => {\n  let errs, foundSign, foundWidget;\n  const candidates = [];\n\n  for (let w in config.widgets) {\n    const widgetDef = config.widgets[w];\n    const {spelImportFuncs} = widgetDef;\n    if (spelImportFuncs) {\n      for (let i = 0 ; i < spelImportFuncs.length ; i++) {\n        const fj = spelImportFuncs[i];\n        if (isObject(fj)) {\n          const bag = {};\n          if (isJsonCompatible(fj, spel, bag)) {\n            for (const k in bag) {\n              bag[k] = convertFuncArg(bag[k]);\n            }\n            candidates.push({\n              s: `widgets.${w}.spelImportFuncs[${i}]`,\n              w,\n              argsObj: bag,\n            });\n          }\n        }\n      }\n    }\n  }\n\n  for (const {s, params} of fsigns) {\n    const found = conv.valueFuncs[s] || [];\n    for (const {w, argsOrder} of found) {\n      const argsArr = params.map(convertFuncArg);\n      const argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      candidates.push({\n        s,\n        w,\n        argsObj,\n      });\n    }\n  }\n\n  for (const {s, w, argsObj} of candidates) {\n    const widgetDef = config.widgets[w];\n    const {spelImportValue, type} = widgetDef;\n    foundWidget = w;\n    foundSign = s;\n    errs = [];\n    for (const k in argsObj) {\n      if (![\"value\"].includes(argsObj[k].valueSrc)) {\n        errs.push(`${k} has unsupported value src ${argsObj[k].valueSrc}`);\n      }\n    }\n    let value = argsObj.v.value;\n    if (spelImportValue && !errs.length) {\n      [value, errs] = spelImportValue.call(config.ctx, argsObj.v, widgetDef, argsObj);\n      if (errs && !Array.isArray(errs))\n        errs = [errs];\n    }\n    if (!errs.length) {\n      return {\n        valueSrc: \"value\",\n        valueType: type,\n        value,\n      };\n    }\n  }\n\n  if (foundWidget && errs.length) {\n    meta.errors.push(`Signature ${foundSign} - looks like convertable to ${foundWidget}, but: ${errs.join(\"; \")}`);\n  }\n\n  return undefined;\n};\n\nconst convertFuncToOp = (spel, conv, config, meta, parentSpel, fsigns, convertFuncArg) => {\n  let errs, opKey, foundSign;\n  for (const {s, params} of fsigns) {\n    const found = conv.opFuncs[s] || [];\n    for (const {op, argsOrder} of found) {\n      const argsArr = params.map(convertFuncArg);\n      opKey = op;\n      if (op === \"!compare\") {\n        if (\n          parentSpel.type.startsWith(\"op-\")\n          && parentSpel.children.length == 2\n          && parentSpel.children[1].type == \"number\"\n          && parentSpel.children[1].val === 0\n        ) {\n          return {\n            type: \"!compare\",\n            children: argsArr,\n          };\n        } else {\n          errs.push(\"Result of compareTo() should be compared to 0\");\n        }\n      }\n      foundSign = s;\n      errs = [];\n      const opDef = config.operators[opKey];\n      const {spelOp, valueTypes} = opDef;\n      const argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      const field = argsObj[\"0\"];\n      const convertedArgs = Object.keys(argsObj).filter(k => parseInt(k) > 0).map(k => argsObj[k]);\n      \n      const valueType = argsArr.filter(a => !!a).find(({valueSrc}) => valueSrc === \"value\")?.valueType;\n      if (valueTypes && valueType && !valueTypes.includes(valueType)) {\n        errs.push(`Op supports types ${valueTypes}, but got ${valueType}`);\n      }\n      if (!errs.length) {\n        return buildRule(config, meta, field, opKey, convertedArgs, spel);\n      }\n    }\n  }\n\n  if (opKey && errs.length) {\n    meta.errors.push(`Signature ${foundSign} - looks like convertable to ${opKey}, but: ${errs.join(\"; \")}`);\n  }\n\n  return undefined;\n};\n\nconst buildRule = (config, meta, field, opKey, convertedArgs, spel) => {\n  if (convertedArgs.filter(v => v === undefined).length) {\n    return undefined;\n  }\n  let fieldSrc = field?.func ? \"func\" : \"field\";\n  if (isObject(field) && field.valueSrc) {\n    // if comed from convertFuncToOp()\n    fieldSrc = field.valueSrc;\n    field = field.value;\n  }\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig) {\n    meta.errors.push(`No config for field ${field}`);\n    return undefined;\n  }\n\n  let canRev = true;\n  let needWrapReverse = false;\n  if (spel?.not && canRev) {\n    const opConfig = config.operators[opKey];\n    if (opConfig.reversedOp) {\n      opKey = opConfig.reversedOp;\n      spel.not = false;\n    } else {\n      needWrapReverse = true;\n    }\n  }\n\n  const widget = getWidgetForFieldOp(config, field, opKey);\n  const widgetConfig = config.widgets[widget || fieldConfig.mainWidget];\n  const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n  const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n\n  let res = {\n    type: \"rule\",\n    id: uuid(),\n    properties: {\n      field,\n      fieldSrc,\n      operator: opKey,\n      value: convertedArgs.map(v => v.value),\n      valueSrc: convertedArgs.map(v => v.valueSrc),\n      valueType: convertedArgs.map(v => {\n        if (v.valueSrc == \"value\") {\n          return widgetConfig?.type || fieldConfig?.type || v.valueType;\n        }\n        return v.valueType;\n      }),\n      ...(asyncListValues ? {asyncListValues} : {}),\n    }\n  };\n\n  if (needWrapReverse) {\n    res = wrapInDefaultConj(res, config, spel?.not);\n    if (spel?.not) {\n      spel.not = false;\n    }\n  }\n\n  return res;\n};\n\nconst buildRuleGroup = ({groupFilter, groupFieldValue}, opKey, convertedArgs, config, meta) => {\n  if (groupFieldValue.valueSrc != \"field\")\n    throw `Bad groupFieldValue: ${JSON.stringify(groupFieldValue)}`;\n  const groupField = groupFieldValue.value;\n  let groupOpRule = buildRule(config, meta, groupField, opKey, convertedArgs);\n  if (!groupOpRule)\n    return undefined;\n  const fieldConfig = getFieldConfig(config, groupField);\n  const mode = fieldConfig?.mode;\n  let res;\n\n  if (groupFilter?.type === \"group\") {\n    res = {\n      ...(groupFilter || {}),\n      type: \"rule_group\",\n      properties: {\n        ...groupOpRule.properties,\n        ...(groupFilter?.properties || {}),\n        mode\n      }\n    };\n  } else if (groupFilter) {\n    // rule_group in rule_group\n    res = {\n      ...(groupOpRule || {}),\n      type: \"rule_group\",\n      children1: [ groupFilter ],\n      properties: {\n        ...groupOpRule.properties,\n        mode\n      }\n    };\n  } else {\n    res = {\n      ...(groupOpRule || {}),\n      type: \"rule_group\",\n      properties: {\n        ...groupOpRule.properties,\n        mode\n      }\n    };\n  }\n\n  if (!res.id)\n    res.id = uuid();\n  return res;\n};\n\n\nconst compareArgs = (left, right,  spel, conv, config, meta, parentSpel = null) => {\n  if (left.type == right.type) {\n    if (left.type == \"!aggr\") {\n      const [leftSource, rightSource] = [left.source, right.source].map(v => convertArg(v, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      }));\n      //todo: check same filter\n      return leftSource.value == rightSource.value;\n    } else {\n      const [leftVal, rightVal] = [left, right].map(v => convertArg(v, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      }));\n      return leftVal.value == rightVal.value;\n    }\n  }\n  return false;\n};\n\nconst buildSimpleSwitch = (val, conv, config, meta) => {\n  let children1 = {};\n  const cond = null;\n  const caseI = buildCase(cond, val, conv, config, meta);\n  if (caseI) {\n    children1[caseI.id] = caseI;\n  }\n  let res = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n  return res;\n};\n\nconst buildCase = (cond, val, conv, config, meta, spel = null) => {\n  const valProperties = buildCaseValProperties(config, meta, conv, val, spel);\n\n  let caseI;\n  if (cond) {\n    caseI = convertToTree(cond, conv, config, meta, spel);\n    if (caseI && caseI.type) {\n      if (caseI.type != \"group\") {\n        caseI = wrapInDefaultConj(caseI, config);\n      }\n      caseI.type = \"case_group\";\n    } else {\n      meta.errors.push(`Unexpected case: ${JSON.stringify(caseI)}`);\n      caseI = undefined;\n    }\n  } else {\n    caseI = {\n      id: uuid(),\n      type: \"case_group\",\n      properties: {}\n    };\n  }\n\n  if (caseI) {\n    caseI.properties = {\n      ...caseI.properties,\n      ...valProperties\n    };\n  }\n\n  return caseI;\n};\n\nconst buildCaseValueConcat = (spel, conv, config, meta) => {\n  let flat = [];\n  function _processConcatChildren(children) {\n    children.map(child => {\n      if (child.type == \"op-plus\") {\n        _processConcatChildren(child.children);\n      } else {\n        const convertedChild = convertArg(child, conv, config, meta, spel);\n        if (convertedChild) {\n          flat.push(convertedChild);\n        } else {\n          meta.errors.push(`Can't convert ${child.type} in concatenation`);\n        }\n      }\n    });\n  }\n  _processConcatChildren(spel.children);\n  return {\n    valueSrc: \"value\",\n    valueType: \"case_value\",\n    value: flat,\n  };\n};\n\nconst buildCaseValProperties = (config, meta, conv, val, spel = null) => {\n  let valProperties = {};\n  let convVal;\n  if (val?.type == \"op-plus\") {\n    convVal = buildCaseValueConcat(val, conv, config, meta);\n  } else {\n    convVal = convertArg(val, conv, config, meta, spel);\n  }\n  const widgetDef = config.widgets[\"case_value\"];\n  const importCaseValue = widgetDef?.spelImportValue;\n  if (importCaseValue) {\n    const [normVal, normErrors] = importCaseValue(convVal);\n    normErrors.map(e => meta.errors.push(e));\n    if (normVal) {\n      valProperties = {\n        value: [normVal],\n        valueSrc: [\"value\"],\n        valueType: [\"case_value\"]\n      };\n    }\n  } else {\n    meta.errors.push(\"No fucntion to import case value\");\n  }\n  return valProperties;\n};\n\nconst wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj) => {\n  if (!rule) return undefined;\n  return {\n    type: \"rule_group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n      not: false,\n      field: parentField,\n    }\n  };\n};\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not || false\n    }\n  };\n};\n","import Immutable from \"immutable\";\nimport uuid from \"./uuid\";\nimport {getFieldConfig, getOperatorConfig, getFieldParts, getFirstField} from \"./configUtils\";\nimport {getFirstOperator} from \"../utils/ruleUtils\";\nimport {getNewValueForFieldOp} from \"../utils/validation\";\nimport { isImmutable } from \"./stuff\";\nimport { jsToImmutable } from \"../import\";\n\n\nexport const getDefaultField = (config, canGetFirst = true, parentRuleGroupPath = null) => {\n  const {defaultField} = config.settings;\n  let f = (!parentRuleGroupPath ? defaultField : getDefaultSubField(config, parentRuleGroupPath))\n    || canGetFirst && getFirstField(config, parentRuleGroupPath)\n    || null;\n  // if default LHS is func, convert to Immutable\n  if (f != null && typeof f !== \"string\" && !isImmutable(f)) {\n    f = jsToImmutable(f);\n  }\n  return f;\n};\n\nexport const getDefaultSubField = (config, parentRuleGroupPath = null) => {\n  if (!parentRuleGroupPath)\n    return null;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const parentRuleGroupConfig = getFieldConfig(config, parentRuleGroupPath);\n  let f = parentRuleGroupConfig?.defaultField;\n  if (f) {\n    f = [...getFieldParts(parentRuleGroupPath), f].join(fieldSeparator);\n  }\n  return f;\n};\n\nexport const getDefaultFieldSrc = (config, canGetFirst = true) => {\n  return canGetFirst && config.settings.fieldSources?.[0] || \"field\";\n};\n\nexport const getDefaultOperator = (config, field, canGetFirst = true) => {\n  let {defaultOperator} = config.settings;\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOperators = fieldConfig?.operators || [];\n  if (defaultOperator && !fieldOperators.includes(defaultOperator))\n    defaultOperator = null;\n  let fieldDefaultOperator = fieldConfig?.defaultOperator;\n  if (fieldDefaultOperator && !fieldOperators.includes(fieldDefaultOperator))\n    fieldDefaultOperator = null;\n  if (!fieldDefaultOperator && canGetFirst)\n    fieldDefaultOperator = getFirstOperator(config, field);\n  const fieldHasExplicitDefOp = fieldConfig?._origDefaultOperator;\n  const op = fieldHasExplicitDefOp && fieldDefaultOperator || defaultOperator || fieldDefaultOperator;\n  return op;\n};\n\n//used for complex operators like proximity\nexport const defaultOperatorOptions = (config, operator, field) => {\n  let operatorConfig = operator ? getOperatorConfig(config, operator, field) : null;\n  if (!operatorConfig)\n    return null; //new Immutable.Map();\n  return operatorConfig.options ? new Immutable.Map(\n    operatorConfig.options\n    && operatorConfig.options.defaults || {}\n  ) : null;\n};\n\nexport const defaultRuleProperties = (config, parentRuleGroupPath = null, item = null, canUseDefaultFieldAndOp = true, canGetFirst = false) => {\n  let field = null, operator = null, fieldSrc = null;\n  const {showErrorMessage} = config.settings;\n  if (item) {\n    fieldSrc = item?.properties?.fieldSrc;\n    field = item?.properties?.field;\n    operator = item?.properties?.operator;\n  } else if (canUseDefaultFieldAndOp) {\n    field = getDefaultField(config, canGetFirst, parentRuleGroupPath);\n    if (field) {\n      fieldSrc = isImmutable(field) ? \"func\" : \"field\";\n    } else {\n      fieldSrc = getDefaultFieldSrc(config);\n    }\n    operator = getDefaultOperator(config, field, true);\n  } else {\n    fieldSrc = getDefaultFieldSrc(config);\n  }\n  let current = new Immutable.Map({\n    fieldSrc: fieldSrc,\n    field: field,\n    operator: operator,\n    value: new Immutable.List(),\n    valueSrc: new Immutable.List(),\n    //used for complex operators like proximity\n    operatorOptions: defaultOperatorOptions(config, operator, field),\n  });\n  if (showErrorMessage) {\n    current = current.set(\"valueError\", new Immutable.List());\n  }\n  \n  if (field && operator) {\n    const canFix = false;\n    let {newValue, newValueSrc, newValueType, newValueError, newFieldError} = getNewValueForFieldOp(\n      config, config, current, field, operator, \"operator\", canFix\n    );\n    current = current\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError)\n        .set(\"fieldError\", newFieldError);\n    }\n  }\n  return current; \n};\n\n\nexport const defaultGroupConjunction = (config, fieldConfig = null) => {\n  fieldConfig = getFieldConfig(config, fieldConfig); // if `fieldConfig` is field name, not config\n  const conjs = fieldConfig && fieldConfig.conjunctions || Object.keys(config.conjunctions);\n  if (conjs.length == 1)\n    return conjs[0];\n  return config.settings.defaultGroupConjunction || config.settings.defaultConjunction || conjs[0];\n};\n\nexport const defaultConjunction = (config) =>\n  config.settings.defaultConjunction || Object.keys(config.conjunctions)[0];\n\nexport const defaultGroupProperties = (config, fieldConfig = null) => new Immutable.Map({\n  conjunction: defaultGroupConjunction(config, fieldConfig),\n  not: false\n});\n\nexport const defaultItemProperties = (config, item) => {\n  return item && item.type == \"group\" \n    ? defaultGroupProperties(config, item?.properties?.field) \n    : defaultRuleProperties(config, null, item);\n};\n\nexport const defaultRule = (id, config) => ({\n  [id]: new Immutable.Map({\n    type: \"rule\",\n    id: id,\n    properties: defaultRuleProperties(config)\n  })\n});\n\nexport const defaultRoot = (config, canAddDefaultRule = true) => {\n  return new Immutable.Map({\n    type: \"group\",\n    id: uuid(),\n    children1: new Immutable.OrderedMap(canAddDefaultRule ? { ...defaultRule(uuid(), config) } : {}),\n    properties: defaultGroupProperties(config)\n  });\n};\n\nexport const createListFromArray = (ids) => {\n  return new Immutable.List(ids);\n};\n\nexport const emptyProperties = () => new Immutable.Map();\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, extendConfig,\n} from \"../utils/configUtils\";\nimport {\n  getFieldPathLabels, getWidgetForFieldOp, formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\n\n\nexport const queryString = (item, config, isForDisplay = false, isDebugMode = false) => {\n  //meta is mutable\n  let meta = {\n    errors: [],\n    settings: {\n      isForDisplay,\n      isDebugMode,\n    }\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(item, extendedConfig, meta, null);\n\n  if (meta.errors.length)\n    console.warn(\"Errors while exporting to string:\", meta.errors);\n  return res;\n};\n\n\nconst formatItem = (item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") ) {\n    return formatGroup(item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta, parentField = null) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  // TIP: don't cut group for mode == 'struct' and don't do aggr format (maybe later)\n  const groupField = isRuleGroup && mode == \"array\" ? properties.get(\"field\") : null;\n  const groupOperator = type === \"rule_group\" ? properties.get(\"operator\") : null;\n  const groupOperatorCardinality = groupOperator ? config.operators[groupOperator]?.cardinality ?? 1 : undefined;\n  const canHaveEmptyChildren = isRuleGroup && mode === \"array\" && groupOperatorCardinality >= 1;\n  const not = properties.get(\"not\");\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size && !isDebugMode) {\n    return undefined;\n  }\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  const conjStr = list.size ? conjunctionDefinition.formatConj(list, conjunction, not, isForDisplay) : null;\n  \n  let ret;\n  if (groupField) {\n    const aggrArgs = formatRule(item, config, meta, parentField, true);\n    if (aggrArgs) {\n      const isRev = aggrArgs.pop();\n      const args = [\n        conjStr,\n        ...aggrArgs\n      ];\n      ret = config.settings.formatAggr(...args);\n      if (isRev) {\n        ret = config.settings.formatReverse(ret, null, null, null, null, isForDisplay);\n      }\n    }\n  } else {\n    ret = conjStr;\n  }\n\n  if (isDebugMode && ret == null) {\n    ret = \"?\";\n  }\n  return ret;\n};\n\n\nconst formatItemValue = (config, properties, meta, _operator, parentField) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operator = _operator || properties.get(\"operator\");\n  const operatorDef = getOperatorConfig(config, operator, field) || {};\n  const cardinality = getOpCardinality(operatorDef);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  let fvalue;\n\n  if (iValue != undefined) {\n    fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = !isDebugMode ? completeValue(currentValue, valueSrc, config) : currentValue;\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n      let fv = formatValue(\n        config, meta, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    const isOK = !hasUndefinedValues && fvalue.size === cardinality;\n    if (isOK) {\n      formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n    }\n  }\n  if (isDebugMode && !formattedValue) {\n    formattedValue = cardinality > 1 ? new List(Array.from({length: cardinality}).map(\n      (_, i) => fvalue?.get(i) ?? \"?\")\n    ) : \"?\";\n  }\n\n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, meta) => {\n  const { isDebugMode } = meta.settings;\n  const fop = operatorDefinition?.labelForFormat || operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} ${fop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (isDebugMode && op === \"?\" && values === \"?\") {\n        return field && field !== \"?\" ? `${field} ?` : \"?\";\n      }\n      return `${field} ${fop} ${values}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const valFrom = values?.first?.();\n      const valTo = values?.get?.(1);\n      return `${field} ${fop} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta, parentField = null, returnArgs = false) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  if ((field == null || operator == null) && !isDebugMode)\n    return undefined;\n  \n  const fieldDef = getFieldConfig(config, field) || {};\n  let operatorDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDef.reversedOp;\n  let revOperatorDef = getOperatorConfig(config, reversedOp, field) || {};\n  \n  //check op\n  let isRev = false;\n  let fn = operatorDef.formatOp;\n  if (!fn && reversedOp) {\n    fn = revOperatorDef.formatOp;\n    if (fn) {\n      isRev = true;\n      [operator, reversedOp] = [reversedOp, operator];\n      [operatorDef, revOperatorDef] = [revOperatorDef, operatorDef];\n    }\n  }\n\n  if (isDebugMode && !operator) {\n    operator = \"?\";\n  }\n\n  //find fn to format expr\n  if (!fn)\n    fn = buildFnToFormatOp(operator, operatorDef, meta);\n  if (!fn)\n    return undefined;\n\n  //format field\n  const formattedField = fieldSrc === \"func\"\n    ? formatFunc(config, meta, field, parentField)\n    : formatField(config, meta, field, parentField);\n  if (formattedField == undefined)\n    return undefined;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, operator, parentField\n  );\n  if (formattedValue === undefined) {\n    return undefined;\n  }\n\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(operatorDef, opDefKeysToOmit),\n    operatorOptions,\n    isForDisplay,\n    fieldDef,\n    isRev,\n  ];\n\n  if (returnArgs) {\n    return args;\n  } else {\n    //format expr\n    let ret = fn.call(config.ctx, ...args);\n\n    //rev\n    if (isRev) {\n      ret = config.settings.formatReverse(ret, operator, reversedOp, operatorDef, revOperatorDef, isForDisplay);\n    }\n\n    return ret;\n  }\n};\n\n\nconst formatValue = (config, meta, value, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, opDef, parentField = null, asyncListValues) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  if (value === undefined) {\n    if (isDebugMode) {\n      if (fieldWidgetDef?.jsType === \"array\") {\n        return [];\n      }\n      return \"?\";\n    } else {\n      return undefined;\n    }\n  }\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(config, meta, value, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(config, meta, value, parentField);\n  } else {\n    if (typeof fieldWidgetDef.formatValue === \"function\") {\n      const fn = fieldWidgetDef.formatValue;\n      const args = [\n        value,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n        isForDisplay\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(opDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, value) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = value;\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (config, meta, field, parentField = null, cutParentField = true) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n  let ret = null;\n  if (field) {\n    const fieldDefinition = getFieldConfig(config, field) || {};\n    const fieldParts = getFieldParts(field, config);\n    const fieldPartsLabels = getFieldPathLabels(field, config, cutParentField ? parentField : null);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparatorDisplay) : null;\n    const fieldLabel2 = fieldDefinition.label2 || fieldFullLabel;\n    const formatFieldFn = config.settings.formatField;\n    const fieldName = formatFieldName(field, config, meta, cutParentField ? parentField : null, {useTableName: true});\n    ret = formatFieldFn(fieldName, fieldParts, fieldLabel2, fieldDefinition, config, isForDisplay);\n  } else if(isDebugMode) {\n    ret = \"?\";\n  }\n  return ret;\n};\n\n\nconst formatFunc = (config, meta, funcValue, parentField = null) => {\n  const { isForDisplay, isDebugMode } = meta.settings;\n  const funcKey = funcValue?.get?.(\"func\");\n  if (!funcKey) {\n    return isDebugMode ? \"?()\" : undefined;\n  }\n  const args = funcValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    if (!isDebugMode) {\n      meta.errors.push(`Func ${funcKey} is not defined in config`);\n      return undefined;\n    }\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = isForDisplay && funcConfig?.label || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  let formattedArgsWithNames = {};\n  const argsKeys = funcConfig ? Object.keys(funcConfig.args || {}) : args?.keySeq?.().toArray() || [];\n  for (const argKey of argsKeys) {\n    const argConfig = funcConfig?.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig || {};\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argName = isForDisplay && argConfig?.label || argKey;\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      config, meta, argValue, argValueSrc, argConfig?.type, fieldDef, argConfig, null, null, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n    }\n\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      formattedDefaultVal = formatValue(\n        config, meta, defaultValue, defaultValueSrc, argConfig?.type, fieldDef, argConfig, null, null, parentField, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const [missedArgKey, missedArgName] of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n          //formattedArgsWithNames[missedArgName] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n      formattedArgsWithNames[argName] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push([argKey, argName]);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    if (!isDebugMode) {\n      return undefined; // incomplete\n    }\n  }\n\n  let ret = null;\n  if (typeof funcConfig?.formatFunc === \"function\") {\n    const fn = funcConfig.formatFunc;\n    const args = [\n      formattedArgs,\n      isForDisplay\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(isForDisplay ? formattedArgsWithNames : formattedArgs)\n      .map(([k, v]) => (isForDisplay ? `${k}: ${v}` : `${v}`))\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","// Note: Don't use \":\" char inside strings, it's reserved as a namespace\n\nexport const EMPTY_GROUP = \"EMPTY_GROUP\";\nexport const EMPTY_RULE_GROUP = \"EMPTY_RULE_GROUP\";\nexport const EMPTY_QUERY = \"EMPTY_QUERY\";\nexport const EMPTY_CASE = \"EMPTY_CASE\";\nexport const NO_CONFIG_FOR_FIELD = \"NO_CONFIG_FOR_FIELD\";\nexport const NO_CONFIG_FOR_OPERATOR = \"NO_CONFIG_FOR_OPERATOR\";\nexport const FIXED_OPERATOR = \"FIXED_OPERATOR\";\nexport const NO_CONFIG_FOR_FUNCTION = \"NO_CONFIG_FOR_FUNCTION\";\nexport const INVALID_VALUE = \"INVALID_VALUE\";\nexport const INVALID_FUNC_ARG_VALUE = \"INVALID_FUNC_ARG_VALUE\";\nexport const UNSUPPORTED_FIELD_TYPE = \"UNSUPPORTED_FIELD_TYPE\";\nexport const UNSUPPORTED_OPERATOR_FOR_FIELD = \"UNSUPPORTED_OPERATOR_FOR_FIELD\";\nexport const INVALID_VALUE_SRC = \"INVALID_VALUE_SRC\";\nexport const INCOMPLETE_RULE = \"INCOMPLETE_RULE\";\nexport const INCOMPLETE_LHS = \"INCOMPLETE_LHS\";\nexport const INCOMPLETE_RHS = \"INCOMPLETE_RHS\";\nexport const BAD_MULTISELECT_VALUES = \"BAD_MULTISELECT_VALUES\";\nexport const BAD_SELECT_VALUE = \"BAD_SELECT_VALUE\";\nexport const INCORRECT_VALUE_TYPE = \"INCORRECT_VALUE_TYPE\";\nexport const INCORRECT_VALUE_JS_TYPE = \"INCORRECT_VALUE_JS_TYPE\";\nexport const VALUE_LENGTH_CONSTRAINT_FAIL = \"VALUE_LENGTH_CONSTRAINT_FAIL\";\nexport const VALUE_MIN_CONSTRAINT_FAIL = \"VALUE_MIN_CONSTRAINT_FAIL\";\nexport const VALUE_MAX_CONSTRAINT_FAIL = \"VALUE_MAX_CONSTRAINT_FAIL\";\nexport const NO_CONFIG_FOR_FIELD_VALUE = \"NO_CONFIG_FOR_FIELD_VALUE\";\nexport const CANT_COMPARE_FIELD_WITH_ITSELF = \"CANT_COMPARE_FIELD_WITH_ITSELF\";\nexport const CANT_COMPARE_FIELD_WITH_FIELD = \"CANT_COMPARE_FIELD_WITH_FIELD\";\nexport const INCORRECT_FIELD_TYPE = \"INCORRECT_FIELD_TYPE\";\nexport const UNSUPPORTED_FUNCTION_FOR_FIELD = \"UNSUPPORTED_FUNCTION_FOR_FIELD\";\nexport const REQUIRED_FUNCTION_ARG = \"REQUIRED_FUNCTION_ARG\";\nexport const INCORRECT_FUNCTION_RETURN_TYPE = \"INCORRECT_FUNCTION_RETURN_TYPE\";\nexport const INVALID_RANGE = \"INVALID_RANGE\";\n\nexport const ITEM_POSITION = \"ITEM_POSITION\";\nexport const ITEM_POSITION_ROOT = \"ITEM_POSITION_ROOT\";\nexport const ITEM_POSITION_WITH_INDEX_PATH = \"ITEM_POSITION_WITH_INDEX_PATH\";\nexport const ITEM_POSITION_IN_CASE = \"ITEM_POSITION_IN_CASE\";\n\n","import * as constants from \"./constains\";\n\nexport const translations = {\n  [constants.EMPTY_GROUP]: \"Empty group\",\n  [constants.EMPTY_RULE_GROUP]: \"No conditions for group field {{field}}\",\n  [constants.EMPTY_QUERY]: \"Empty query\",\n  [constants.EMPTY_CASE]: \"Empty case\",\n  [constants.NO_CONFIG_FOR_FIELD]: \"No config for field {{field}}\",\n  [constants.FIXED_OPERATOR]: \"Fixed operator {{from}} to {{to}} for field {{field}}\",\n  [constants.NO_CONFIG_FOR_OPERATOR]: \"No config for operator {{operator}}\",\n  [constants.NO_CONFIG_FOR_FUNCTION]: \"No config for function {{funcKey}}\",\n  [constants.INVALID_VALUE]: \"Invalid value\",\n  [constants.INVALID_FUNC_ARG_VALUE]: \"Invalid value of arg {{argName}} for func {{funcName}}: {{argValidationError}}\",\n  [constants.UNSUPPORTED_FIELD_TYPE]: \"Type of field {{field}} is not supported\",\n  [constants.UNSUPPORTED_OPERATOR_FOR_FIELD]: \"Operator {{operator}} is not supported for field {{field}}\",\n  [constants.INCOMPLETE_RULE]: \"Incomplete rule\",\n  [constants.INCOMPLETE_LHS]: \"Incomplete LHS\",\n  [constants.INCOMPLETE_RHS]: \"Incomplete RHS\",\n  [constants.INVALID_VALUE_SRC]: \"Invalid value src {{valueSrcs, list}}\",\n  [constants.BAD_MULTISELECT_VALUES+\"_one\"]: \"Value {{badValues, list}} is not in the list of allowed values\",\n  [constants.BAD_MULTISELECT_VALUES+\"_other\"]: \"Values {{badValues, list}} are not in the list of allowed values\",\n  [constants.BAD_SELECT_VALUE]: \"Value {{value}} is not in the list of allowed values\",\n  [constants.INCORRECT_VALUE_TYPE]: \"Value should have type {{wType}}, but got value of type {{valueType}}\",\n  [constants.INCORRECT_VALUE_JS_TYPE]: \"Value should have JS type {{jsType}}, but got value of type {{valueTypeof}}\",\n  [constants.VALUE_LENGTH_CONSTRAINT_FAIL]: \"Value {{value}} should have max length {{fieldSettings.maxLength}} but got {{length}}\",\n  [constants.VALUE_MIN_CONSTRAINT_FAIL]: \"Value {{value}} should be from {{fieldSettings.min}} to {{fieldSettings.max}}\",\n  [constants.VALUE_MAX_CONSTRAINT_FAIL]: \"Value {{value}} should be from {{fieldSettings.min}} to {{fieldSettings.max}}\",\n  [constants.NO_CONFIG_FOR_FIELD_VALUE]: \"No config for field {{field}}\",\n  [constants.CANT_COMPARE_FIELD_WITH_ITSELF]: \"Can't compare field {{field}} with itself\",\n  [constants.CANT_COMPARE_FIELD_WITH_FIELD]: \"Can't compare field {{leftField}} with {{rightField}}\",\n  [constants.INCORRECT_FIELD_TYPE]: \"Field {{field}} is of type {{type}}, but expected {{expected}}\",\n  [constants.UNSUPPORTED_FUNCTION_FOR_FIELD]: \"Unsupported function {{funcKey}} for field {{field}}\",\n  [constants.REQUIRED_FUNCTION_ARG]: \"Value of arg {{argName}} for func {{funcName}} is required\",\n  [constants.INCORRECT_FUNCTION_RETURN_TYPE]: \"Function {{funcKey}} should return value of type {{returnType}}, but got {{valueType}}\",\n  [constants.INVALID_RANGE]: \"Invalid range\",\n  \n  [constants.ITEM_POSITION_ROOT]: \"Root\",\n  [constants.ITEM_POSITION+\"__rule\"]: \"Leaf #{{globalLeafNo}}\",\n  [constants.ITEM_POSITION+\"__group\"]: \"Group #{{globalGroupNo}}\",\n  [constants.ITEM_POSITION+\"__rule_group\"]: \"Rule-group #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__case_group\"]: \"Case #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__rule__deleted\"]: \"Deleted leaf #{{globalLeafNo}}\",\n  [constants.ITEM_POSITION+\"__group__deleted\"]: \"Deleted group #{{globalGroupNo}}\",\n  [constants.ITEM_POSITION+\"__rule_group__deleted\"]: \"Deleted rule-group #{{globalNoByType}}\",\n  [constants.ITEM_POSITION+\"__case_group__deleted\"]: \"Deleted case #{{globalNoByType}}\",\n  [constants.ITEM_POSITION_IN_CASE]: \"{{str}} in case #{{caseNo}}\",\n  [constants.ITEM_POSITION_WITH_INDEX_PATH]: \"{{str}} (index path: {{indexPath, list}})\",\n};\n","import i18next from \"i18next\";\nimport { translations as validationTranslations } from \"./validation/translations\";\n\nexport const NSV = \"raqbvalidation\";\nexport const NSVP = `${NSV}:`;\n\nconst i18n = i18next.createInstance();\ni18n.init({\n  fallbackLng: \"en\",\n});\ni18n.addResources(\"en\", NSV, validationTranslations);\n\nexport const translateValidation = (key, args) => {\n  if (key?.str) {\n    // already translated\n    return key.str;\n  }\n  if (key?.key) {\n    return translateValidation(key.key, key.args);\n  }\n  if (args === null) {\n    return key;\n  }\n  return i18n.t(\n    key.includes(\":\") ? key : NSVP+key,\n    args\n  );\n};\n\nexport default i18n;\n","import omit from \"lodash/omit\";\nimport Immutable from \"immutable\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldSrc,\n  extendConfig} from \"./configUtils\";\nimport {\n  getOperatorsForField, getWidgetForFieldOp, whatRulePropertiesAreCompleted,\n  selectTypes, getValueSourcesForFieldOp,\n} from \"../utils/ruleUtils\";\nimport {getOpCardinality, getFirstDefined, deepEqual} from \"../utils/stuff\";\nimport {getItemInListValues} from \"../utils/listValues\";\nimport {defaultOperatorOptions} from \"../utils/defaultUtils\";\nimport {fixPathsInTree, getItemByPath, getFlatTree} from \"../utils/treeUtils\";\nimport {setFuncDefaultArg} from \"../utils/funcUtils\";\nimport {queryString} from \"../export/queryString\";\nimport * as constants from \"../i18n/validation/constains\";\nimport { translateValidation } from \"../i18n\";\n\nexport { translateValidation };\n\nconst typeOf = (v) => {\n  if (typeof v === \"object\" && v !== null && Array.isArray(v))\n    return \"array\";\n  else\n    return (typeof v);\n};\n\nconst isTypeOf = (v, type) => {\n  if (typeOf(v) === type)\n    return true;\n  if (type === \"number\" && !isNaN(v))\n    return true; //can be casted\n  return false;\n};\n\n// tip: If showErrorMessage is false, this function will always return true\nexport const isValidTree = (tree, config) => {\n  return getTreeBadFields(tree, config).length === 0;\n};\n\n// tip: If showErrorMessage is false, this function will always return []\n// tip: If LHS is func, func key will be used to put in array of bad fields (naive)\nexport const getTreeBadFields = (tree, config) => {\n  const {showErrorMessage} = config.settings;\n  let badFields = [];\n\n  function _processNode (item, path, lev) {\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const valueError = item.getIn([\"properties\", \"valueError\"]);\n    const fieldError = item.getIn([\"properties\", \"fieldError\"]);\n    const field = item.getIn([\"properties\", \"field\"]);\n    const fieldStr = field?.get?.(\"func\") ?? field;\n    const hasValueError = valueError?.size > 0 && valueError.filter(v => v != null).size > 0;\n    const isBad = hasValueError || !!fieldError;\n    if (isBad && showErrorMessage) {\n      // for showErrorMessage=false valueError/fieldError is used to hold last error, but actual value is always valid\n      badFields.push(fieldStr);\n    }\n    if (children) {\n      children.map((child, _childId) => {\n        if (child) {\n          _processNode(child, path.concat(id), lev + 1);\n        }\n      });\n    }\n  }\n\n  if (tree)\n    _processNode(tree, [], 0);\n\n  return Array.from(new Set(badFields));\n};\n\n// @deprecated\nexport const checkTree = (tree, config) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const options = {\n    removeEmptyGroups: config.settings.removeEmptyGroupsOnLoad,\n    removeIncompleteRules: config.settings.removeIncompleteRulesOnLoad,\n    removeEmptyRules: config.settings.removeEmptyRulesOnLoad,\n    forceFix: false,\n  };\n  const {fixedTree, allErrors, isSanitized} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    options\n  );\n  if (isSanitized && allErrors.length) {\n    console.warn(\"Tree check errors: \", allErrors);\n  }\n  return fixedTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @returns {ValidationItemErrors[]}\n*/\nexport const validateTree = (tree, config, options = {}) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const finalOptions = {\n    ...options,\n    // disbale sanitize options, just validate\n    removeEmptyGroups: false,\n    removeEmptyRules: false,\n    removeIncompleteRules: false,\n    forceFix: false,\n  };\n  const {allErrors} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    finalOptions\n  );\n  return allErrors;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @returns {{\n *   fixedTree: Immutable.Map, \n *   fixedErrors: ValidationItemErrors[],\n *   nonFixedErrors: ValidationItemErrors[],\n *   allErrors: ValidationItemErrors[],\n * }}\n */\nexport const sanitizeTree = (tree, config, options = {}) => {\n  const extendedConfig = extendConfig(config, undefined, true);\n  const finalOptions = {\n    // defaults\n    removeEmptyGroups: true,\n    removeEmptyRules: true,\n    removeIncompleteRules: true,\n    forceFix: false,\n    ...options,\n  };\n  const {fixedTree, fixedErrors, nonFixedErrors, allErrors} = _validateTree(\n    tree, null, extendedConfig, extendedConfig,\n    finalOptions\n  );\n  return {fixedTree, fixedErrors, nonFixedErrors, allErrors};\n};\n\n// tip: Should be used only internally in createValidationMemo()\nexport const validateAndFixTree = (newTree, _oldTree, newConfig, oldConfig, removeEmptyGroups, removeEmptyRules, removeIncompleteRules) => {\n  if (removeEmptyGroups === undefined) {\n    removeEmptyGroups = newConfig.settings.removeEmptyGroupsOnLoad;\n  }\n  if (removeEmptyRules === undefined) {\n    removeEmptyRules = newConfig.settings.removeEmptyRulesOnLoad;\n  }\n  if (removeIncompleteRules === undefined) {\n    removeIncompleteRules = newConfig.settings.removeIncompleteRulesOnLoad;\n  }\n  const options = {\n    // sanitize options\n    removeEmptyGroups,\n    removeEmptyRules,\n    removeIncompleteRules,\n    forceFix: false,\n  };\n  let {fixedTree, allErrors, fixedErrors, nonFixedErrors, isSanitized} = _validateTree(\n    newTree, _oldTree, newConfig, oldConfig,\n    options\n  );\n  if (isSanitized && fixedErrors.length) {\n    console.warn(\"Fixed tree errors: \", fixedErrors);\n  }\n  // if (nonFixedErrors.length) {\n  //   console.info(\"Tree validation errors: \", nonFixedErrors);\n  // }\n  fixedTree = fixPathsInTree(fixedTree);\n  return fixedTree;\n};\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {SanitizeOptions} options\n * @typedef {{\n *   removeEmptyGroups?: boolean,\n *   removeEmptyRules?: boolean,\n *   removeIncompleteRules?: boolean,\n *   forceFix?: boolean,\n *   translateErrors?: boolean,\n *   includeStringifiedItems?: boolean,\n *   stringifyFixedItems?: boolean,\n *   stringifyItemsUserFriendly?: boolean,\n *   includeItemsPositions?: boolean,\n * }} SanitizeOptions\n * @typedef {{\n *   path: string[],\n *   errors: {\n *     key: string, args?: object | null, str?: string,\n *     side?: \"lhs\"|\"rhs\"|\"op\", delta?: number, fixed?: boolean, fixedTo?: any, fixedFrom?: any,\n *   }[],\n *   itemStr?: string,\n *   itemPosition?: {\n *     caseNo: number | null, globalNoByType: number, indexPath: number[], globalLeafNo?: number, globalGroupNo?: number,\n *     isDeleted: boolean, index: number, type: \"rule\"|\"group\"|\"rule_group\"\n *   },\n *   itemPositionStr?: string,\n * }} ValidationItemErrors\n * @returns {{\n *   fixedTree: Immutable.Map, \n *   allErrors: ValidationItemErrors[],\n *   fixedErrors: ValidationItemErrors[],\n *   nonFixedErrors: ValidationItemErrors[],\n *   isSanitized: boolean\n * }}\n */\nexport const _validateTree = (\n  tree, _oldTree, config, oldConfig, options\n) => {\n  if (!tree) {\n    return {\n      fixedTree: tree,\n      allErrors: [],\n      fixedErrors: [],\n      nonFixedErrors: [],\n      isSanitized: false,\n    };\n  }\n\n  const {\n    // sanitize options\n    removeEmptyGroups,\n    removeEmptyRules,\n    removeIncompleteRules,\n    forceFix,\n    // translation options\n    translateErrors = true,\n    includeStringifiedItems = true,\n    stringifyFixedItems = false,\n    stringifyItemsUserFriendly = true,\n    includeItemsPositions = true,\n  } = options || {};\n  const c = {\n    config, oldConfig, removeEmptyGroups, removeEmptyRules, removeIncompleteRules, forceFix,\n  };\n  const meta = {\n    errors: {},\n  };\n  const fixedTree = validateItem(tree, [], null, meta, c);\n  const isSanitized = meta.sanitized;\n\n  // build allErrors\n  const allErrors = [];\n  let flatItems, oldFlatItems;\n  if (includeItemsPositions) {\n    flatItems = getFlatTree(fixedTree).items;\n  }\n  for (const id in meta.errors) {\n    let { path, errors } = meta.errors[id];\n    if (translateErrors) {\n      errors = errors.map(e => {\n        return {\n          ...e,\n          str: translateValidation(e),\n        };\n      });\n    }\n    let errorItem = { path, errors };\n    if (includeStringifiedItems) {\n      const item = getItemByPath(stringifyFixedItems ? fixedTree : tree, path);\n      const isRoot = path.length === 1;\n      if (!isRoot && item.get(\"type\") !== \"group\") {\n        const isDebugMode = true;\n        const isForDisplay = stringifyItemsUserFriendly;\n        const itemStr = queryString(item, config, isForDisplay, isDebugMode);\n        errorItem.itemStr = itemStr;\n      }\n    }\n    if (includeItemsPositions) {\n      let flatItem = flatItems[id];\n      const isDeleted = !flatItem;\n      if (isDeleted) {\n        // get positions from old tree\n        if (!oldFlatItems) {\n          oldFlatItems = getFlatTree(tree).items;\n        }\n        flatItem = oldFlatItems[id];\n      }\n      if (flatItem) {\n        // build position object\n        const itemPosition = {\n          ...flatItem.position,\n          index: flatItem.index,\n          type: flatItem.type,\n          isDeleted,\n        };\n        errorItem.itemPosition = itemPosition;\n        // build position string\n        const trKey = !flatItem.index\n          ? constants.ITEM_POSITION_ROOT\n          : constants.ITEM_POSITION+\"__\"+flatItem.type+(isDeleted ? \"__deleted\" : \"\");\n        const trArgs = {\n          ...itemPosition\n        };\n        if (stringifyItemsUserFriendly) {\n          // convert indexes from 0-based to 1-based (user friendly)\n          for (const k of [\"caseNo\", \"globalLeafNo\", \"globalGroupNo\", \"globalNoByType\"]) {\n            if (trArgs[k] != undefined) {\n              trArgs[k] = trArgs[k] + 1;\n            }\n          }\n          trArgs.indexPath = itemPosition.indexPath?.map(ind => ind+1);\n        }\n        errorItem.itemPositionStr = translateValidation(trKey, trArgs);\n        if (flatItem.index) { // don't extend for root\n          if (flatItem.caseId && flatItem.type !== \"case_group\") {\n            errorItem.itemPositionStr = translateValidation(constants.ITEM_POSITION_IN_CASE, {\n              ...trArgs,\n              str: errorItem.itemPositionStr\n            });\n          }\n          errorItem.itemPositionStr = translateValidation(constants.ITEM_POSITION_WITH_INDEX_PATH, {\n            ...trArgs,\n            str: errorItem.itemPositionStr\n          });\n        }\n      }\n    }\n    allErrors.push(errorItem);\n  }\n\n  // split allErrors to fixedErrors and nonFixedErrors\n  let fixedErrors = [];\n  let nonFixedErrors = [];\n  for (const itemErrors of allErrors) {\n    const fixedItemErrors = itemErrors.errors.filter(e => !!e.fixed);\n    let nonFixedItemErrors = itemErrors.errors.filter(e => !e.fixed && e.key !== \"EMPTY_QUERY\");\n    if (fixedItemErrors.length) {\n      fixedErrors.push({\n        ...itemErrors,\n        errors: fixedItemErrors,\n      });\n    }\n    if (nonFixedItemErrors.length) {\n      nonFixedErrors.push({\n        ...itemErrors,\n        errors: nonFixedItemErrors,\n      });\n    }\n  }\n\n  return {\n    fixedTree, allErrors, fixedErrors, nonFixedErrors, isSanitized\n  };\n};\n\nfunction _addError(meta, item, path, err) {\n  const id = item.get(\"id\");\n  if (!meta.errors[id]) {\n    meta.errors[id] = {\n      path: [...path, id],\n      errors: [],\n    };\n  }\n  meta.errors[id].errors.push(err);\n}\n\nfunction _setErrorsAsFixed(meta, item) {\n  const id = item.get(\"id\");\n  if (meta.errors[id]) {\n    meta.errors[id].errors.map(e => {\n      e.fixed = true;\n    });\n  }\n}\n\nfunction validateItem (item, path, itemId, meta, c) {\n  const type = item?.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\" || type == \"case_group\" || type == \"switch_group\")) {\n    return validateGroup(item, path, itemId, meta, c);\n  } else if (type === \"rule\") {\n    return validateRule(item, path, itemId, meta, c);\n  } else {\n    return item;\n  }\n}\n\nfunction validateGroup (item, path, itemId, meta, c) {\n  const {removeEmptyGroups, removeIncompleteRules, forceFix, config} = c;\n  const {showErrorMessage} = config.settings;\n  const canFix = !showErrorMessage || forceFix;\n  let id = item.get(\"id\");\n  let children = item.get(\"children1\");\n  const isRoot = !path.length;\n  const oldChildren = children;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\");\n  const field = properties?.get(\"field\");\n  const mode = properties?.get(\"mode\");\n  const operator = properties?.get?.(\"operator\");\n  const isGroupExt = type === \"rule_group\" && mode === \"array\";\n  const isCase = type === \"case_group\";\n  const isDefaultCase = isCase && children == undefined;\n  const cardinality = operator ? config.operators[operator]?.cardinality ?? 1 : undefined;\n  // tip: for group operators some/none/all children ARE required, for group operator count children are NOT required\n  // tip: default case should contain only value\n  const childrenAreRequired = isCase ? !isDefaultCase : (isGroupExt ? cardinality == 0 : true);\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  if (isGroupExt) {\n    item = validateRule(item, path, itemId, meta, c);\n  }\n\n  //validate children\n  let submeta = {\n    errors: {}\n  };\n  children = children\n    ?.map( (currentChild, childId) => validateItem(currentChild, path.concat(id), childId, submeta, c) );\n  const nonEmptyChildren = children?.filter((currentChild) => (currentChild != undefined));\n  if (removeEmptyGroups) {\n    children = nonEmptyChildren;\n  }\n  let sanitized = submeta.sanitized || (oldChildren?.size != children?.size);\n  const isEmptyChildren = !nonEmptyChildren?.size;\n  let canDrop = removeEmptyGroups && !isRoot;\n  if (isGroupExt && field) {\n    // to remove rule-group like \"SOME cars\" (with SOME/ALL/NONE, but without filters), we need to rely on removeIncompleteRules\n    canDrop = removeIncompleteRules;\n  }\n  if (isEmptyChildren && childrenAreRequired) {\n    _addError(meta, item, path, {\n      key: isRoot\n        ? constants.EMPTY_QUERY\n        : isCase\n          ? constants.EMPTY_CASE\n          : isGroupExt\n            ? constants.EMPTY_RULE_GROUP\n            : constants.EMPTY_GROUP,\n      args: { field },\n      fixed: canDrop,\n    });\n    if (canDrop) {\n      _setErrorsAsFixed(meta, item);\n      item = undefined;\n    }\n  }\n\n  if (sanitized)\n    meta.sanitized = true;\n  if (sanitized && item)\n    item = item.set(\"children1\", children);\n\n  meta.errors = {\n    ...meta.errors,\n    ...(submeta?.errors || {}),\n  };\n  return item;\n}\n\n/**\n * @param {Immutable.Map} item\n * @returns {Immutable.Map}\n */\nfunction validateRule (item, path, itemId, meta, c) {\n  const {removeIncompleteRules, removeEmptyRules, forceFix, config, oldConfig} = c;\n  const {showErrorMessage} = config.settings;\n  const canFix = !showErrorMessage || forceFix;\n  const origItem = item;\n  let id = item.get(\"id\");\n  let properties = item.get(\"properties\");\n  if (!properties) {\n    const err = {\n      key: constants.INCOMPLETE_RULE,\n      args: {},\n      fixed: removeIncompleteRules || removeEmptyRules\n    };\n    _addError(meta, item, path, err);\n    return undefined;\n  }\n  let field = properties.get(\"field\") || null;\n  let fieldSrc = properties.get(\"fieldSrc\") || null;\n  let operator = properties.get(\"operator\") || null;\n  let operatorOptions = properties.get(\"operatorOptions\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let value = properties.get(\"value\");\n  let valueError = properties.get(\"valueError\");\n  let fieldError = properties.get(\"fieldError\");\n\n  const serializeRule = () => {\n    return {\n      field: field?.toJS?.() || field,\n      fieldSrc,\n      operator,\n      operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n      valueSrc: valueSrc ? valueSrc.toJS() : null,\n      value: value ? value.toJS() : null,\n      valueError: valueError ? valueError.toJS() : null,\n      fieldError: fieldError ? fieldError : null,\n    };\n  };\n\n  const oldSerialized = serializeRule();\n  //const _wasValid = field && operator && value && !value.includes(undefined);\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  //validate field\n  const fieldDefinition = field ? getFieldConfig(config, field) : null;\n  if (field && !fieldDefinition) {\n    _addError(meta, item, path, {\n      key: constants.NO_CONFIG_FOR_FIELD,\n      args: { field },\n      side: \"lhs\",\n      fixed: removeIncompleteRules || removeEmptyRules,\n    });\n    field = null;\n  }\n  if (field == null) {\n    properties = [\n      \"operator\", \"operatorOptions\", \"valueSrc\", \"value\", \"valueError\", \"fieldError\", \"field\"\n    ].reduce((map, key) => map.delete(key), properties);\n    operator = null;\n  }\n  if (!fieldSrc) {\n    fieldSrc = getFieldSrc(field);\n    properties = properties.set(\"fieldSrc\", fieldSrc);\n  }\n\n  //validate operator\n  // Backward compatibility: obsolete operator range_between\n  if (operator === \"range_between\" || operator === \"range_not_between\") {\n    operator = operator === \"range_between\" ? \"between\" : \"not_between\";\n    // _addError(meta, item, path, {\n    //   type: \"fix\",\n    //   key: constants.FIXED_OPERATOR,\n    //   args: { from: properties.get(\"operator\"), to: operator, field }\n    // });\n    properties = properties.set(\"operator\", operator);\n  }\n  const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n  if (operator && !operatorDefinition) {\n    _addError(meta, item, path, {\n      key: constants.NO_CONFIG_FOR_OPERATOR,\n      args: { operator },\n      side: \"op\",\n      fixed: removeIncompleteRules || removeEmptyRules,\n    });\n    operator = null;\n  }\n  const availOps = field ? getOperatorsForField(config, field) : [];\n  if (field) {\n    if (!availOps?.length) {\n      _addError(meta, item, path, {\n        key: constants.UNSUPPORTED_FIELD_TYPE,\n        args: { field },\n        side: \"lhs\",\n        fixed: removeIncompleteRules || removeEmptyRules,\n      });\n      operator = null;\n    } else if (operator && availOps.indexOf(operator) == -1) {\n      if (operator === \"is_empty\" || operator === \"is_not_empty\") {\n        // Backward compatibility: is_empty #494\n        operator = operator === \"is_empty\" ? \"is_null\" : \"is_not_null\";\n        // _addError(meta, item, path, {\n        //   type: \"fix\",\n        //   key: constants.FIXED_OPERATOR,\n        //   args: { from: properties.get(\"operator\"), to: operator, field }\n        // });\n        properties = properties.set(\"operator\", operator);\n      } else {\n        _addError(meta, item, path, {\n          key: constants.UNSUPPORTED_OPERATOR_FOR_FIELD,\n          args: { operator, field },\n          side: \"lhs\",\n          fixed: removeIncompleteRules || removeEmptyRules,\n        });\n        operator = null;\n      }\n    }\n  }\n  if (operator == null) {\n    // do not unset operator ?\n    properties = [\n      \"operatorOptions\", \"valueSrc\", \"value\", \"valueError\"\n    ].reduce((map, key) => map.delete(key), properties);\n  }\n\n  //validate operator options\n  operatorOptions = properties.get(\"operatorOptions\");\n  //const _operatorCardinality = operator ? getOpCardinality(operatorDefinition) : null;\n  if (!operator || operatorOptions && !operatorDefinition.options) {\n    operatorOptions = null;\n    properties = properties.delete(\"operatorOptions\");\n  } else if (operator && !operatorOptions && operatorDefinition.options) {\n    operatorOptions = defaultOperatorOptions(config, operator, field);\n    properties = properties.set(\"operatorOptions\", operatorOptions);\n  }\n\n  //validate values\n  valueSrc = properties.get(\"valueSrc\");\n  value = properties.get(\"value\");\n  const isEndValue = true;\n  let {\n    newValue, newValueSrc, newValueError, validationErrors, newFieldError, fixedField,\n  } = getNewValueForFieldOp(config, oldConfig, properties, field, operator, null, canFix, isEndValue);\n  value = newValue;\n  valueSrc = newValueSrc;\n  valueError = newValueError;\n  fieldError = newFieldError;\n  field = fixedField;\n  properties = properties.set(\"field\", field);\n  properties = properties.set(\"value\", value);\n  properties = properties.set(\"valueSrc\", valueSrc);\n  if (showErrorMessage) {\n    properties = properties\n      .set(\"valueError\", valueError)\n      .set(\"fieldError\", fieldError);\n  } else {\n    properties = properties\n      .delete(\"valueError\")\n      .delete(\"fieldError\");\n  }\n\n  const newSerialized = serializeRule();\n  const hasBeenSanitized = !deepEqual(oldSerialized, newSerialized);\n  const compl = whatRulePropertiesAreCompleted(properties.toObject(), config);\n  const isCompleted = compl.score >= 3;\n  if (hasBeenSanitized) {\n    meta.sanitized = true;\n    item = item.set(\"properties\", properties);\n  }\n  validationErrors?.map(e =>\n    _addError(meta, item, path, e)\n  );\n  if (!isCompleted) {\n    let shoudlRemoveRule = !compl.score ? removeEmptyRules : removeIncompleteRules;\n    // if (shoudlRemoveRule && showErrorMessage) {\n    //   // try to be not so rude about removing incomplete rule with functions\n    //   const complLite = whatRulePropertiesAreCompleted(properties.toObject(), config, true);\n    //   const isCompletedLite = complLite.score >= 3;\n    //   if (isCompletedLite) {\n    //     shoudlRemoveRule = false;\n    //   }\n    // }\n    let incError = { key: constants.INCOMPLETE_RULE, args: {} };\n    if (!compl.parts.field) {\n      incError.key = constants.INCOMPLETE_LHS;\n      incError.side = \"lhs\";\n    } else if(!compl.parts.value) {\n      incError.key = constants.INCOMPLETE_RHS;\n      incError.side = \"rhs\";\n      if (\n        newSerialized.valueSrc?.[0] && newSerialized.valueSrc?.[0] != oldSerialized.valueSrc?.[0]\n        && newSerialized.value?.[0] != undefined \n      ) {\n        // eg. operator `starts_with` supports only valueSrc \"value\"\n        incError.key = constants.INVALID_VALUE_SRC;\n        incError.args = {\n          valueSrcs: newSerialized.valueSrc\n        };\n      }\n    }\n    incError.fixed = shoudlRemoveRule;\n    _addError(meta, item, path, incError);\n    if (shoudlRemoveRule) {\n      _setErrorsAsFixed(meta, item);\n      item = undefined;\n    }\n  }\n\n  return item;\n}\n\n\n/**\n * \n * @param {bool} canFix true is useful for func values to remove bad args\n * @param {bool} isEndValue false if value is in process of editing by user\n * @return {array} [fixedValue, allErrors] - if `allErrors` is empty and `canFix` == true, `fixedValue` can differ from value if was fixed.\n *  `allErrors` is an array of {key, args, fixed, fixedFrom, fixedTo}\n *  If `args` === null, `key` should not be translated\n */\nexport const validateValue = (\n  config, leftField, field, operator, value, valueType, valueSrc, asyncListValues,\n  canFix = false, isEndValue = false, canDropArgs = false\n) => {\n  let allErrors = [];\n  let fixedValue = value;\n\n  if (value != null) {\n    if (valueSrc === \"field\") {\n      [fixedValue, allErrors] = validateFieldValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue);\n    } else if (valueSrc === \"func\") {\n      [fixedValue, allErrors] = validateFuncValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue, canDropArgs);\n    } else if (valueSrc === \"value\" || !valueSrc) {\n      [fixedValue, allErrors] = validateNormalValue(field, value, valueSrc, valueType, asyncListValues, config, operator, canFix, isEndValue);\n    }\n\n    let fixedAllErrors = !allErrors?.find(e => !e.fixed);\n    const shouldCallValidateFn = !!field\n      // `validateValue` should not be available for valueSrc === \"func\" or \"field\"\n      && ![\"field\", \"func\"].includes(valueSrc)\n      // eg. if value was > max, and fixed to max, but max value can not satisfy validateValue() in config\n      && (!allErrors?.length || fixedAllErrors);\n    if (shouldCallValidateFn) {\n      //todo: why not just take fieldSettings from fieldConfig, why need to use getFieldWidgetConfig() ??\n      // const fieldConfig = getFieldConfig(config, field);\n      // const fieldSettings = fieldConfig?.fieldSettings;\n      const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n      const fieldWidgetDefinition = omit(getFieldWidgetConfig(config, field, operator, w, valueSrc), [\"factory\"]);\n      const rightFieldDefinition = (valueSrc === \"field\" ? getFieldConfig(config, value) : null);\n      const fieldSettings = fieldWidgetDefinition; // widget definition merged with fieldSettings\n\n      const fn = fieldWidgetDefinition.validateValue;\n      if (typeof fn === \"function\") {\n        const args = [\n          fixedValue, \n          fieldSettings,\n          operator,\n          operatorDefinition\n        ];\n        if (valueSrc === \"field\")\n          args.push(rightFieldDefinition);\n        const validResult = fn.call(config.ctx, ...args);\n        if (typeof validResult === \"object\" && validResult !== null && !Array.isArray(validResult)) {\n          let newError;\n          if (validResult.error?.key) {\n            newError = {...validResult.error};\n          } else {\n            // Note: `null` means it's not translated string!\n            newError = {key: validResult.error, args: null};\n          }\n          if (validResult.fixedValue !== undefined && canFix) {\n            newError.fixed = true;\n            newError.fixedFrom = fixedValue;\n            newError.fixedTo = validResult.fixedValue;\n            fixedValue = validResult.fixedValue;\n          }\n          allErrors.push(newError);\n        } else if (typeof validResult === \"boolean\") {\n          if (validResult == false) {\n            allErrors.push({key: constants.INVALID_VALUE, args: {}});\n          }\n        } else if (typeof validResult === \"string\") {\n          allErrors.push({key: validResult, args: null});\n        }\n      }\n    }\n\n    // if can't fix value, use defaultValue\n    fixedAllErrors = !allErrors?.find(e => !e.fixed);\n    if (allErrors?.length && !fixedAllErrors && canFix) {\n      const fieldConfig = getFieldConfig(config, field);\n      const fieldSettings = fieldConfig?.fieldSettings;\n      const defaultValue = fieldSettings?.defaultValue;\n      if (defaultValue !== undefined) {\n        const lastError = allErrors[allErrors.length - 1];\n        lastError.fixed = true;\n        lastError.fixedFrom = fixedValue;\n        lastError.fixedTo = defaultValue;\n        fixedValue = defaultValue;\n        // mark all errors as fixed\n        allErrors.map(e => {\n          e.fixed = true;\n        });\n      }\n    }\n  }\n  \n  return [fixedValue, allErrors];\n};\n\n/**\n * \n */\nconst validateValueInList = (value, listValues, canFix, isEndValue, removeInvalidMultiSelectValuesOnLoad) => {\n  const values = Immutable.List.isList(value) ? value.toJS() : (value instanceof Array ? [...value] : undefined);\n  let fixedValue = value;\n  let allErrors = [];\n  if (values) {\n    const [goodValues, badValues] = values.reduce(([goodVals, badVals], val) => {\n      const vv = getItemInListValues(listValues, val);\n      if (vv == undefined) {\n        return [goodVals, [...badVals, val]];\n      } else {\n        return [[...goodVals, vv.value], badVals];\n      }\n    }, [[], []]);\n    const needFix = badValues.length > 0;\n    // always remove bad values at tree validation as user can't unselect them (except AntDesign widget)\n    canFix = canFix || removeInvalidMultiSelectValuesOnLoad === true;\n    fixedValue = canFix && needFix ? goodValues : value;\n    if (badValues.length) {\n      const fixed = canFix && needFix;\n      allErrors.push({\n        key: constants.BAD_MULTISELECT_VALUES,\n        args: { badValues, count: badValues.length },\n        fixed,\n        fixedFrom: fixed ? values : undefined,\n        fixedTo: fixed ? fixedValue : undefined,\n      });\n    }\n    return [fixedValue, allErrors];\n  } else {\n    const vv = getItemInListValues(listValues, value);\n    if (vv == undefined) {\n      fixedValue = canFix ? null : value;\n      allErrors.push({\n        key: constants.BAD_SELECT_VALUE,\n        args: { value },\n        fixed: canFix,\n        fixedFrom: canFix ? value : undefined,\n        fixedTo: canFix ? fixedValue : undefined,\n      });\n    } else {\n      fixedValue = vv.value;\n    }\n    return [fixedValue, allErrors];\n  }\n};\n\n/**\n * \n */\nconst validateNormalValue = (field, value, valueSrc, valueType, asyncListValues, config, operator = null, canFix = false, isEndValue = false) => {\n  let allErrors = [];\n  let fixedValue = value;\n  if (field) {\n    const fieldConfig = getFieldConfig(config, field);\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const wConfig = config.widgets[w];\n    const wType = wConfig?.type;\n    const jsType = wConfig?.jsType;\n    const fieldSettings = fieldConfig?.fieldSettings;\n    const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n    const isAsyncListValues = !!fieldSettings?.asyncFetch;\n    // todo: for select/multiselect value can be string or number\n    const canSkipTypeCheck = listValues || isAsyncListValues;\n\n    // validate type\n    if (valueType && wType && valueType != wType) {\n      allErrors.push({\n        key: constants.INCORRECT_VALUE_TYPE,\n        args: { wType, valueType }\n      });\n      return [value, allErrors];\n    }\n    if (jsType && !isTypeOf(value, jsType) && !canSkipTypeCheck) {\n      allErrors.push({\n        key: constants.INCORRECT_VALUE_JS_TYPE,\n        args: { jsType, valueTypeof: typeOf(value) }\n      });\n      return [value, allErrors];\n    }\n\n    if (fieldSettings) {\n      // validate against list of values\n      const realListValues = asyncListValues || listValues;\n      if (realListValues && !fieldSettings.allowCustomValues) {\n        [fixedValue, allErrors] = validateValueInList(\n          value, realListValues, canFix, isEndValue, config.settings.removeInvalidMultiSelectValuesOnLoad\n        );\n      }\n      // validate length\n      if (fieldSettings.maxLength > 0 && value != null && String(value).length > fieldSettings.maxLength) {\n        fixedValue = canFix ? String(value).substring(0, fieldSettings.maxLength) : value;\n        allErrors.push({\n          key: constants.VALUE_LENGTH_CONSTRAINT_FAIL,\n          args: { value, length: String(value).length, fieldSettings },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n      // validate min/max\n      if (fieldSettings.min != null && value < fieldSettings.min) {\n        fixedValue = canFix ? fieldSettings.min : value;\n        allErrors.push({\n          key: constants.VALUE_MIN_CONSTRAINT_FAIL,\n          args: { value, fieldSettings },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n      if (fieldSettings.max != null && value > fieldSettings.max) {\n        fixedValue = canFix ? fieldSettings.max : value;\n        allErrors.push({\n          key: constants.VALUE_MAX_CONSTRAINT_FAIL,\n          args: { value, fieldSettings },\n          fixed: canFix,\n          fixedFrom: canFix ? value : undefined,\n          fixedTo: canFix ? fixedValue : undefined,\n        });\n      }\n    }\n  }\n\n  return [fixedValue, allErrors];\n};\n\n\n/**\n * \n */\nconst validateFieldValue = (leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null, canFix = false, isEndValue = false) => {\n  const allErrors = [];\n  const {fieldSeparator, canCompareFieldWithField} = config.settings;\n  const isFuncArg = typeof field == \"object\" && field?._isFuncArg;\n  const leftFieldStr = Array.isArray(leftField) ? leftField.join(fieldSeparator) : leftField;\n  const leftFieldConfig = getFieldConfig(config, leftField);\n  const rightFieldStr = Array.isArray(value) ? value.join(fieldSeparator) : value;\n  const rightFieldConfig = getFieldConfig(config, value);\n  if (!rightFieldConfig) {\n    allErrors.push({\n      key: constants.NO_CONFIG_FOR_FIELD_VALUE,\n      args: { field: rightFieldStr }\n    });\n    return [value, allErrors];\n  }\n  if (leftField && rightFieldStr === leftFieldStr && !isFuncArg) {\n    allErrors.push({\n      key: constants.CANT_COMPARE_FIELD_WITH_ITSELF,\n      args: { field: leftFieldStr }\n    });\n    return [value, allErrors];\n  }\n  if (valueType && valueType != rightFieldConfig.type) {\n    allErrors.push({\n      key: constants.INCORRECT_FIELD_TYPE,\n      args: { field: rightFieldStr, type: rightFieldConfig.type, expected: valueType }\n    });\n    return [value, allErrors];\n  }\n  if (leftField && !isFuncArg && canCompareFieldWithField) {\n    const canUse = canCompareFieldWithField(\n      leftFieldStr, leftFieldConfig, rightFieldStr, rightFieldConfig, operator\n    );\n    if (!canUse) {\n      allErrors.push({\n        key: constants.CANT_COMPARE_FIELD_WITH_FIELD,\n        args: { leftField: leftFieldStr, rightField: rightFieldStr }\n      });\n      return [value, allErrors];\n    }\n  }\n  return [value];\n};\n\n/**\n * @param {bool} canDropArgs true only if user sets new func key\n */\nconst validateFuncValue = (\n  leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null,\n  canFix = false, isEndValue = false, canDropArgs = false\n) => {\n  let fixedValue = value;\n  const allErrors = [];\n\n  if (!value) {\n    // empty value\n    return [value];\n  }\n  const funcKey = value.get?.(\"func\");\n  if (!funcKey) {\n    // it's not a function value\n    return [value];\n  }\n  const fieldDef = getFieldConfig(config, field);\n  if (fieldDef?.funcs && !fieldDef.funcs.includes(funcKey)) {\n    allErrors.push({\n      key: constants.UNSUPPORTED_FUNCTION_FOR_FIELD,\n      args: { funcKey, field }\n    });\n    return [value, allErrors];\n  }\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    allErrors.push({\n      key: constants.NO_CONFIG_FOR_FUNCTION,\n      args: { funcKey }\n    });\n    return [value, allErrors];\n  }\n  const funcName = funcConfig.label ?? funcKey;\n  if (valueType && funcConfig.returnType != valueType) {\n    allErrors.push({\n      key: constants.INCORRECT_FUNCTION_RETURN_TYPE,\n      args: { funcKey, funcName, returnType: funcConfig.returnType, valueType }\n    });\n    return [value, allErrors];\n  }\n  //tip: Exception for canDropArgs (true only if changing func) - can fix/drop args to fit new func validations\n  canFix = canFix || canDropArgs;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const args = fixedValue.get(\"args\");\n    const argVal = args ? args.get(argKey) : undefined;\n    const argDef = getFieldConfig(config, argConfig);\n    const argName = argDef?.label ?? argKey;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValue !== undefined) {\n      const [fixedArgVal, argErrors] = validateValue(\n        config, leftField, argDef, operator, argValue, argConfig.type, argValueSrc, asyncListValues, canFix, isEndValue, canDropArgs,\n      );\n      const isValid = !argErrors?.length;\n      const willFix = canFix && fixedArgVal !== argValue;\n      //const willFixAllErrors = !isValid && willFix && !allErrors?.find(e => !e.fixed);\n      //tip: reset to default ONLY if isEndValue==true\n      const canDropOrReset = canFix && !isValid && !willFix && (isEndValue || canDropArgs);\n      if (willFix) {\n        fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], fixedArgVal);\n      }\n      if (canDropOrReset) {\n        // reset to default\n        fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n        fixedValue = setFuncDefaultArg(config, fixedValue, funcConfig, argKey);\n      }\n      if (!isValid) {\n        const firstError = argErrors.find(e => !e.fixed && !e.ignore) ?? argErrors.find(e => !e.fixed) ?? argErrors[0];\n        const fixed = willFix || canDropOrReset;\n        const ignore = argErrors.filter(e => !e.ignore).length === 0;\n        if (firstError) {\n          const argValidationError = translateValidation(firstError);\n          allErrors.push({\n            key: constants.INVALID_FUNC_ARG_VALUE,\n            args: {\n              funcKey, funcName, argKey, argName, argValidationError,\n              // more meta\n              argErrors,\n            },\n            ignore,\n            fixed,\n            fixedFrom: fixed ? argValue : undefined,\n            fixedTo: fixed ? (willFix ? fixedArgVal : argConfig.defaultValue) : undefined,\n          });\n        }\n      }\n    } else if (!argConfig.isOptional && (isEndValue || canDropArgs)) {\n      const canReset = canFix && argConfig.defaultValue !== undefined && (isEndValue || canDropArgs);\n      const canAddError = isEndValue;\n      //tip: Exception for canDropArgs (true only if changing func) - don't show error about required args\n      if (canAddError) {\n        allErrors.push({\n          key: constants.REQUIRED_FUNCTION_ARG,\n          args: { funcKey, funcName, argKey, argName },\n          fixed: canReset,\n          fixedTo: canReset ? argConfig.defaultValue : undefined,\n          ignore: !canReset, // tip: don't show error message in UI about missing arg after validation API call\n        });\n      }\n      if (canReset) {\n        // set default\n        fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n        fixedValue = setFuncDefaultArg(config, fixedValue, funcConfig, argKey);\n      }\n    }\n  }\n\n  return [fixedValue, allErrors];\n};\n\n/**\n * \n */\nexport const validateRange = (config, field, operator, values, valueSrcs) => {\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n  const valueSrcsArr = (valueSrcs.toJS ? valueSrcs.toJS() : valueSrcs);\n  const valuesArr = (values.toJS ? values.toJS() : values);\n  const areValueSrcsPureValues = valueSrcsArr.filter(vs => vs == \"value\" || vs == null).length == operatorCardinality;\n  let rangeError;\n  if (operatorConfig?.validateValues && areValueSrcsPureValues) {\n    const valueSrc = valueSrcsArr[0];\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, w, valueSrc);\n    const jsValues = fieldWidgetDefinition?.toJS\n      ? valuesArr.map(v => {\n        let jsVal = fieldWidgetDefinition.toJS.call(config.ctx, v, fieldWidgetDefinition);\n        if (jsVal instanceof Date) {\n          jsVal = jsVal.getTime();\n        }\n        return jsVal;\n      })\n      : valuesArr;\n    const validResult = operatorConfig.validateValues(jsValues);\n    if (typeof validResult === \"boolean\") {\n      if (validResult == false) {\n        rangeError = {\n          key: constants.INVALID_RANGE,\n          args: {\n            jsValues,\n            values: valuesArr,\n          }\n        };\n      }\n    }\n  }\n  return rangeError;\n};\n\n\n\n/**\n * @param {Immutable.Map} current\n * @param {string} changedProp\n * @param {boolean} canFix (default: false) true - eg. set value to max if it > max or revert or drop\n * @param {boolean} isEndValue (default: false) true - if value is in process of editing by user\n * @param {boolean} canDropArgs (default: false)\n * @return {{canReuseValue, newValue, newValueSrc, newValueType, fixedField, operatorCardinality,  newValueError, newFieldError, validationErrors}}\n */\nexport const getNewValueForFieldOp = function (\n  config, oldConfig = null, current, newField, newOperator, changedProp = null,\n  canFix = false, isEndValue = false, canDropArgs = false\n) {\n  //const isValidatingTree = (changedProp === null);\n  if (!oldConfig)\n    oldConfig = config;\n  const {\n    keepInputOnChangeFieldSrc, convertableWidgets, clearValueOnChangeField, clearValueOnChangeOp,\n  } = config.settings;\n  const currentField = current.get(\"field\");\n  const currentFieldType = current.get(\"fieldType\");\n  const currentFieldSrc = current.get(\"fieldSrc\");\n  const currentOperator = current.get(\"operator\");\n  const currentValue = current.get(\"value\");\n  const currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n  const currentValueType = current.get(\"valueType\", new Immutable.List());\n  const asyncListValues = current.get(\"asyncListValues\");\n\n  const currentOperatorConfig = getOperatorConfig(oldConfig, currentOperator);\n  const newOperatorConfig = getOperatorConfig(config, newOperator, newField);\n  const currentOperatorCardinality = currentOperator ? getOpCardinality(currentOperatorConfig) : null;\n  const operatorCardinality = newOperator ? getOpCardinality(newOperatorConfig) : null;\n  const currentFieldConfig = getFieldConfig(oldConfig, currentField);\n  const newFieldConfig = getFieldConfig(config, newField);\n  const isOkWithoutField = !currentField && currentFieldType && keepInputOnChangeFieldSrc;\n  const currentType = currentFieldConfig?.type || currentFieldType;\n  const newType = newFieldConfig?.type || !newField && isOkWithoutField && currentType;\n  const currentListValuesType = currentFieldConfig?.listValuesType;\n  const newListValuesType = newFieldConfig?.listValuesType;\n  const currentFieldSimpleValue = currentField?.get?.(\"func\") || currentField;\n  const newFieldSimpleValue = newField?.get?.(\"func\") || newField;\n  const hasFieldChanged = newFieldSimpleValue != currentFieldSimpleValue;\n\n  let validationErrors = [];\n\n  let canReuseValue = (currentField || isOkWithoutField) && currentOperator && newOperator && currentValue != undefined;\n  if (\n    !(currentType && newType && currentType == newType)\n    || changedProp === \"field\" && hasFieldChanged && clearValueOnChangeField\n    || changedProp === \"operator\" && clearValueOnChangeOp\n  ) {\n    canReuseValue = false;\n  }\n  if (hasFieldChanged && selectTypes.includes(newType)) {\n    if (newListValuesType && newListValuesType === currentListValuesType) {\n      // ok\n    } else {\n      // different fields of select types has different listValues\n      canReuseValue = false;\n    }\n  }\n\n  // validate func LHS\n  let newFieldError;\n  if (currentFieldSrc === \"func\" && newField) {\n    const [fixedField, fieldErrors] = validateValue(\n      config, null, null, newOperator, newField, newType, currentFieldSrc, asyncListValues, canFix, isEndValue, canDropArgs\n    );\n    const isValid = !fieldErrors?.length;\n    const willFix = fixedField !== newField;\n    const willFixAllErrors = !isValid && willFix && !fieldErrors.find(e => !e.fixed);\n    const willRevert = canFix && !isValid && !willFixAllErrors && !!changedProp && newField !== currentField;\n    const willDrop = false; //canFix && !isValid && !willFixAllErrors && !willRevert && !changedProp;\n    if (willDrop) {\n      newField = null;\n    } else if (willRevert) {\n      newField = currentField;\n    } else if (willFix) {\n      newField = fixedField;\n    }\n    if (!isValid) {\n      const showError = !isValid && !willFixAllErrors && !willDrop && !willRevert;\n      const firstError = fieldErrors.find(e => !e.fixed && !e.ignore);\n      if (showError && firstError) {\n        newFieldError = translateValidation(firstError);\n      }\n      // tip: even if we don't show errors, but revert LHS, put the reason of revert\n      fieldErrors.map(e => validationErrors.push({\n        side: \"lhs\",\n        ...e,\n        fixed: e.fixed || willRevert || willDrop,\n      }));\n    }\n  }\n\n  // compare old & new widgets\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    const vs = currentValueSrc.get(i) || null;\n    const currentWidget = getWidgetForFieldOp(oldConfig, currentField, currentOperator, vs);\n    const newWidget = getWidgetForFieldOp(config, newField, newOperator, vs);\n    // need to also check value widgets if we changed operator and current value source was 'field'\n    // cause for select type op '=' requires single value and op 'in' requires array value\n    const currentValueWidget = vs === \"value\" ? currentWidget\n      : getWidgetForFieldOp(oldConfig, currentField, currentOperator, \"value\");\n    const newValueWidget = vs === \"value\" ? newWidget\n      : getWidgetForFieldOp(config, newField, newOperator, \"value\");\n\n    const canReuseWidget = newValueWidget == currentValueWidget\n      || (convertableWidgets[currentValueWidget] || []).includes(newValueWidget)\n      || !currentValueWidget && isOkWithoutField;\n    if (!canReuseWidget) {\n      canReuseValue = false;\n    }\n  }\n\n  if (currentOperator != newOperator && [currentOperator, newOperator].includes(\"proximity\")) {\n    canReuseValue = false;\n  }\n\n  const firstValueSrc = currentValueSrc.first();\n  const firstWidgetConfig = getFieldWidgetConfig(config, newField, newOperator, null, firstValueSrc);\n  let valueSources = getValueSourcesForFieldOp(config, newField, newOperator, null);\n  if (!newField && isOkWithoutField) {\n    valueSources = Object.keys(config.settings.valueSourcesInfo);\n  }\n  const defaultValueSrc = valueSources[0];\n  let defaultValueType;\n  if (operatorCardinality == 1 && firstWidgetConfig && firstWidgetConfig.type !== undefined) {\n    defaultValueType = firstWidgetConfig.type;\n  } else if (operatorCardinality == 1 && newFieldConfig && newFieldConfig.type !== undefined) {\n    defaultValueType = newFieldConfig.type === \"!group\" ? \"number\" : newFieldConfig.type;\n  }\n\n  // changed operator from '==' to 'between'\n  let canExtendValueToRange = canReuseValue && changedProp === \"operator\"\n    && currentOperatorCardinality === 1 && operatorCardinality === 2;\n\n  let valueFixes = [];\n  let valueSrcFixes = [];\n  let valueTypeFixes = [];\n  let valueErrors = Array.from({length: operatorCardinality}, () => null);\n  if (canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      let v = currentValue.get(i);\n      let vType = currentValueType.get(i) || null;\n      let vSrc = currentValueSrc.get(i) || null;\n      if (canExtendValueToRange && i === 1) {\n        v = valueFixes[0] !== undefined ? valueFixes[0] : currentValue.get(0);\n        valueFixes[i] = v;\n        vType = currentValueType.get(0) || null;\n        vSrc = currentValueSrc.get(0) || null;\n      }\n      const isValidSrc = vSrc ? (valueSources.find(v => v == vSrc) !== undefined) : true;\n      const [fixedValue, allErrors] = validateValue(\n        config, newField, newField, newOperator, v, vType, vSrc, asyncListValues, canFix, isEndValue, canDropArgs\n      );\n      const isValid = !allErrors?.length;\n      // Allow bad value with error message\n      // But not on field change - in that case just drop bad value that can't be reused\n      // ? Maybe we should also drop bad value on op change?\n      // For bad multiselect value we have both error message + fixed value.\n      //  If we show error message, it will gone on next tree validation\n      const willFix = fixedValue !== v;\n      const willFixAllErrors = !isValid && willFix && !allErrors?.find(e => !e.fixed);\n      const allErrorsHandled = !allErrors?.find(e => !e.fixed && !e.ignore);\n     \n      // tip: is value src is invalid, drop ANYWAY\n      // tip: Edge case in demo:\n      //      Given \"login = LOWER(?)\", change config to not show errors -> \"LOWER(?)\" will be dropped\n      //      We don't want to drop func completely, so need to add `allErrorsAheHandled` or `vSrc !== \"func\"`\n      // todo: `hasFieldChanged` is not needed ?\n      const willDrop = !isValidSrc\n        || canFix && !isValid && !willFixAllErrors && (!allErrorsHandled || hasFieldChanged);\n      if (!isValid) {\n        // tip: even if we don't show errors, but drop bad values, put the reason of removal\n        allErrors?.map(e => validationErrors.push({\n          side: \"rhs\",\n          delta: i,\n          ...e,\n          fixed: e.fixed || willDrop,\n        }));\n      }\n      if (willDrop) {\n        valueFixes[i] = null;\n        if (i === 0) {\n          delete valueFixes[1];\n        }\n      }\n      const showError = !isValid && !willFix;\n      const firstError = allErrors?.find(e => !e.fixed && !e.ignore);\n      if (showError && firstError) {\n        valueErrors[i] = translateValidation(firstError);\n      }\n      if (willFix) {\n        valueFixes[i] = fixedValue;\n      }\n      if (canExtendValueToRange && i === 0 && !isValid && !willFix) {\n        // don't extend bad value to range\n        canExtendValueToRange = false;\n      }\n      if (canExtendValueToRange && i === 0 && [\"func\", \"field\"].includes(vSrc)) {\n        // don't extend func/field value, only primitive value\n        canExtendValueToRange = false;\n      }\n    }\n  }\n\n  // if can't reuse, get defaultValue\n  if (!canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      if (operatorCardinality === 1) {\n        // tip: default range values (for cardinality > 1) are not supported yet, todo\n        const dv = getFirstDefined([\n          newFieldConfig?.defaultValue,\n          newFieldConfig?.fieldSettings?.defaultValue,\n          firstWidgetConfig?.defaultValue\n        ]);\n        valueFixes[i] = dv;\n        if (dv?.func) {\n          valueSrcFixes[i] = \"func\";\n          //tip: defaultValue of src \"field\" is not supported, todo\n        }\n      }\n    }\n  }\n\n  // set default valueSrc and valueType\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    let vs = canReuseValue && currentValueSrc.get(i) || null;\n    let vt = canReuseValue && currentValueType.get(i) || null;\n    if (canReuseValue && canExtendValueToRange && i === 1) {\n      vs = valueSrcFixes[i] ?? currentValueSrc.get(0);\n      vt = valueTypeFixes[i] ?? currentValueType.get(0);\n      valueSrcFixes[i] = vs;\n      valueTypeFixes[i] = vt;\n    }\n    const isValidSrc = valueSources.includes(vs);\n    if (!isValidSrc) {\n      valueSrcFixes[i] = defaultValueSrc;\n    }\n    if (!vt) {\n      valueTypeFixes[i] = defaultValueType;\n    }\n  }\n\n  // build new values\n  let newValue = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n    return valueFixes[i] !== undefined ? valueFixes[i] : (canReuseValue ? currentValue.get(i) : undefined);\n  }));\n  const newValueSrc = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n    return valueSrcFixes[i] ?? (canReuseValue && currentValueSrc.get(i) || null);\n  }));\n  const newValueType = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n    return valueTypeFixes[i] ?? (canReuseValue && currentValueType.get(i) || null);\n  }));\n\n  // Validate range\n  const rangeErrorObj = validateRange(config, newField, newOperator, newValue, newValueSrc);\n  if (rangeErrorObj) {\n    // last element in `valueError` list is for range validation error\n    const rangeValidationError = translateValidation(rangeErrorObj);\n    const willFix = canFix && operatorCardinality >= 2;\n    const badValue = newValue;\n    if (willFix) {\n      valueFixes[1] = newValue.get(0);\n      newValue = newValue.set(1, valueFixes[1]);\n      valueErrors[1] = valueErrors[0];\n    }\n    const showError = !willFix;\n    if (showError) {\n      valueErrors.push(rangeValidationError);\n    }\n    validationErrors.push({\n      side: \"rhs\",\n      delta: -1,\n      ...rangeErrorObj,\n      fixed: willFix,\n      fixedFrom: willFix ? [badValue.get(0), badValue.get(1)] : undefined,\n      fixedTo: willFix ? [newValue.get(0), newValue.get(1)] : undefined\n    });\n  }\n\n  const newValueError = new Immutable.List(valueErrors);\n\n  return {\n    canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality, fixedField: newField,\n    newValueError, newFieldError, validationErrors,\n  };\n};\n","\nimport {getFieldConfig, getFuncConfig, getFuncSignature} from \"../utils/configUtils\";\nimport {filterValueSourcesForField, completeValue, selectTypes} from \"../utils/ruleUtils\";\nimport {validateValue} from \"../utils/validation\";\nimport Immutable from \"immutable\";\n\n// helpers\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\n\n/**\n * @param {Immutable.Map} value\n * @param {object} config\n * @return {Immutable.Map | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeFuncValue = (value, config) => {\n  if (!value)\n    return undefined;\n  const funcKey = value.get(\"func\");\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return undefined;\n  let complValue = value;\n  let tmpHasOptional = false;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const {valueSources, isOptional, defaultValue} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    const args = complValue.get(\"args\");\n    const argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = (argVal ? argVal.get(\"valueSrc\") : undefined) || argDefaultValueSrc;\n    if (argValue !== undefined) {\n      const completeArgValue = completeValue(argValue, argValueSrc, config);\n      if (completeArgValue === undefined) {\n        return undefined;\n      } else if (completeArgValue !== argValue) {\n        complValue = complValue.setIn([\"args\", argKey, \"value\"], completeArgValue);\n      }\n      if (tmpHasOptional) {\n        // has gap\n        return undefined;\n      }\n    } else if (defaultValue !== undefined && !isObject(defaultValue)) {\n      complValue = complValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n      complValue = complValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n    } else if (isOptional) {\n      // optional\n      tmpHasOptional = true;\n    } else {\n      // missing value\n      return undefined;\n    }\n  }\n  return complValue;\n};\n\n\n/**\n * @param {Immutable.Map} value \n * @return {array} - [usedFields, badFields]\n */\n// const getUsedFieldsInFuncValue = (value, config) => {\n//   let usedFields = [];\n//   let badFields = [];\n\n//   const _traverse = (value) => {\n//     const args = value && value.get(\"args\");\n//     if (!args) return;\n//     for (const arg of args.values()) {\n//       if (arg.get(\"valueSrc\") == \"field\") {\n//         const rightField = arg.get(\"value\");\n//         if (rightField) {\n//           const rightFieldDefinition = config ? getFieldConfig(config, rightField) : undefined;\n//           if (config && !rightFieldDefinition)\n//             badFields.push(rightField);\n//           else\n//             usedFields.push(rightField);\n//         }\n//       } else if (arg.get(\"valueSrc\") == \"func\") {\n//         _traverse(arg.get(\"value\"));\n//       }\n//     }\n//   };\n\n//   _traverse(value);\n\n//   return [usedFields, badFields];\n// };\n\n\n/**\n * Used @ FuncWidget\n * @param {Immutable.Map} value \n * @param {string} funcKey \n * @param {object} config \n * @param {boolean} canFixArgs\n */\nexport const setFunc = (value, funcKey, config, canFixArgs) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  value = value || new Immutable.Map();\n  if (Array.isArray(funcKey)) {\n    // fix for cascader\n    funcKey = funcKey.join(fieldSeparator);\n  }\n  const oldFuncKey = value.get(\"func\");\n  const oldArgs = value.get(\"args\");\n  value = value.set(\"func\", funcKey);\n\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  const newFuncSignature = funcKey && getFuncSignature(config, funcKey);\n  const oldFuncSignature = oldFuncKey && getFuncSignature(config, oldFuncKey);\n  const keepArgsKeys = getCompatibleArgsOnFuncChange(oldFuncSignature, newFuncSignature, oldArgs, config, canFixArgs);\n  if (keepArgsKeys.length) {\n    const argsKeys = Object.keys(newFuncSignature.args);\n    const deleteArgsKeys = argsKeys.filter(k => !keepArgsKeys.includes(k));\n    value = deleteArgsKeys.reduce((value, k) => value.deleteIn([\"args\", k]), value);\n  } else {\n    value = value.set(\"args\", new Immutable.Map());\n  }\n\n  // defaults\n  value = setFuncDefaultArgs(config, value, funcConfig);\n\n  return value;\n};\n\nconst setFuncDefaultArgs = (config, funcValue, funcConfig) => {\n  if (funcConfig) {\n    for (const argKey in funcConfig.args) {\n      funcValue = setFuncDefaultArg(config, funcValue, funcConfig, argKey);\n    }\n  }\n  return funcValue;\n};\n\nexport const setFuncDefaultArg = (config, funcValue, funcConfig, argKey) => {\n  const argConfig = funcConfig.args[argKey];\n  const {valueSources, defaultValue} = argConfig;\n  const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n  const firstValueSrc = filteredValueSources.length ? filteredValueSources[0] : undefined;\n  const defaultValueSrc = defaultValue ? (isObject(defaultValue) && !!defaultValue.func ? \"func\" : \"value\") : undefined;\n  const argDefaultValueSrc = defaultValueSrc || firstValueSrc;\n  const hasValue = funcValue.getIn([\"args\", argKey]);\n  if (!hasValue) {\n    if (defaultValue !== undefined) {\n      funcValue = funcValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n    }\n    if (argDefaultValueSrc) {\n      funcValue = funcValue.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return funcValue;\n};\n\nconst getDefaultArgValue = ({defaultValue: value}) => {\n  if (isObject(value) && !Immutable.Map.isMap(value) && value.func) {\n    return Immutable.fromJS(value, function (k, v) {\n      return Immutable.Iterable.isIndexed(v) ? v.toList() : v.toOrderedMap();\n    });\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {*} argVal \n* @param {object} argConfig \n*/\nexport const setArgValue = (value, argKey, argVal, argConfig, config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey, \"value\"], argVal);\n\n    // set default arg value source\n    const valueSrc = value.getIn([\"args\", argKey, \"valueSrc\"]);\n    const {valueSources} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    let argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    if (!argDefaultValueSrc && filteredValueSources.includes(\"value\")) {\n      argDefaultValueSrc = \"value\";\n    }\n    if (!valueSrc && argDefaultValueSrc) {\n      value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {string} argValSrc \n* @param {object} argConfig \n*/\nexport const setArgValueSrc = (value, argKey, argValSrc, _argConfig, _config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey], new Immutable.Map({valueSrc: argValSrc}));\n  }\n  return value;\n};\n\n// see getFuncSignature in configUtils\nexport const getCompatibleArgsOnFuncChange = (s1, s2, argVals, config, canFixArgs = false) => {\n  if (s1?.returnType != s2?.returnType)\n    return [];\n  const checkIndexes = false;\n  const keys = Object.keys(s2.args);\n  const compatibleKeys = keys.filter((k, i) => {\n    const arg2 = s2.args[k];\n    const arg1 = s1.args[k];\n    const oldInd = Object.keys(s1.args).indexOf(k);\n    if (!arg1 && (arg2.defaultValue !== undefined || arg2.isOptional)) {\n      return true;\n    }\n    if (checkIndexes && i !== oldInd) {\n      return false;\n    }\n    if (arg1?.type != arg2.type)\n      return false;\n    if (selectTypes.includes(arg2.type)) {\n      if (!arg1.listValuesType || arg1.listValuesType !== arg2.listValuesType)\n        return false;\n    }\n    if (argVals) {\n      const argVal = argVals.get(k);\n      const argValue = argVal?.get(\"value\");\n      const argValueSrc = argVal?.get(\"valueSrc\");\n      if (argValueSrc && arg2.valueSources && !arg2.valueSources.includes(argValueSrc))\n        return false;\n      const leftField = null, operator = null, argDef = arg2, asyncListValues = null, isEndValue = true;\n      const [_fixedArgVal, argValidErrors] = validateValue(\n        config, leftField, argDef, operator, argValue, argDef.type, argValueSrc, asyncListValues, canFixArgs, isEndValue\n      );\n      if (argValidErrors?.filter(e => !e.fixed)?.length)\n        return false;\n    }\n\n    return true;\n  });\n  return compatibleKeys;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldRawConfig, getFuncConfig, getFieldParts,\n  isFieldDescendantOfField\n} from \"./configUtils\";\nimport last from \"lodash/last\";\nimport {completeFuncValue} from \"./funcUtils\";\n\nexport const selectTypes = [\n  \"select\",\n  \"multiselect\",\n  \"treeselect\",\n  \"treemultiselect\",\n];\n\n\nexport const getOperatorsForType = (config, fieldType) => {\n  return config.types[fieldType]?.operators || null;\n};\n\nexport const getOperatorsForField = (config, field) => {\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOps = fieldConfig ? fieldConfig.operators : [];\n  return fieldOps;\n};\n\nexport const getFirstOperator = (config, field) => {\n  const fieldOps = getOperatorsForField(config, field);\n  return fieldOps?.[0] ?? null;\n};\n\nexport const calculateValueType = (value, valueSrc, config) => {\n  let calculatedValueType = null;\n  if (value) {\n    if (valueSrc === \"field\") {\n      const fieldConfig = getFieldConfig(config, value);\n      if (fieldConfig) {\n        calculatedValueType = fieldConfig.type;\n      }\n    } else if (valueSrc === \"func\") {\n      const funcKey = value.get(\"func\");\n      if (funcKey) {\n        const funcConfig = getFuncConfig(config, funcKey);\n        if (funcConfig) {\n          calculatedValueType = funcConfig.returnType || funcConfig.type;\n        }\n      }\n    }\n  }\n  return calculatedValueType;\n};\n\nexport const getFuncPathLabels = (field, config, parentField = null) => {\n  return getFieldPathLabels(field, config, parentField, \"funcs\", \"subfields\");\n};\n\nexport const getFieldPathLabels = (field, config, parentField = null, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  const parentParts = getFieldParts(parentField, config);\n  const res = parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => [...parentParts, ...parts].join(fieldSeparator))\n    .map(part => {\n      const cnf = getFieldRawConfig(config, part, fieldsKey, subfieldsKey);\n      return cnf && cnf.label || last(part.split(fieldSeparator));\n    })\n    .filter(label => label != null);\n  return res;\n};\n\nexport const getFieldPartsConfigs = (field, config, parentField = null) => {\n  if (!field)\n    return null;\n  const parentFieldDef = parentField && getFieldRawConfig(config, parentField) || null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  const isDescendant = isFieldDescendantOfField(field, parentField, config);\n  const parentParts = !isDescendant ? [] : getFieldParts(parentField, config);\n  return parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => ({\n      part: [...parentParts, ...parts].join(fieldSeparator),\n      key: parts[parts.length - 1]\n    }))\n    .map(({part, key}) => {\n      const cnf = getFieldRawConfig(config, part);\n      return {key, cnf};\n    })\n    .map(({key, cnf}, ind, arr) => {\n      const parentCnf = ind > 0 ? arr[ind - 1].cnf : parentFieldDef;\n      return [key, cnf, parentCnf];\n    });\n};\n\nexport const getValueLabel = (config, field, operator, delta, valueSrc = null, isSpecialRange = false) => {\n  const isFuncArg = field && typeof field == \"object\" && !!field.func && !!field.arg;\n  const {showLabels} = config.settings;\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldWidgetConfig = getFieldWidgetConfig(config, field, operator, null, valueSrc) || {};\n  const mergedOpConfig = getOperatorConfig(config, operator, field) || {};\n    \n  const cardinality = isSpecialRange ? 1 : mergedOpConfig.cardinality;\n  let ret = null;\n  if (cardinality > 1) {\n    const valueLabels = fieldWidgetConfig.valueLabels || mergedOpConfig.valueLabels;\n    if (valueLabels)\n      ret = valueLabels[delta];\n    if (ret && typeof ret != \"object\") {\n      ret = {label: ret, placeholder: ret};\n    }\n    if (!ret) {\n      ret = {\n        label: config.settings.valueLabel + \" \" + (delta+1),\n        placeholder: config.settings.valuePlaceholder + \" \" + (delta+1),\n      };\n    }\n  } else {\n    let label = fieldWidgetConfig.valueLabel;\n    let placeholder = fieldWidgetConfig.valuePlaceholder;\n    if (isFuncArg) {\n      if (!label)\n        label = fieldConfig.label || field.arg;\n      if (!placeholder && !showLabels)\n        placeholder = fieldConfig.label || field.arg;\n    }\n\n    ret = {\n      label: label || config.settings.valueLabel, \n      placeholder: placeholder || config.settings.valuePlaceholder,\n    };\n  }\n  return ret;\n};\n\nfunction _getWidgetsAndSrcsForFieldOp (config, field, operator = null, valueSrc = null) {\n  let widgets = [];\n  let valueSrcs = [];\n  if (!field)\n    return {widgets, valueSrcs};\n  const isFuncArg = typeof field === \"object\" && (!!field.func && !!field.arg || field._isFuncArg);\n  const fieldConfig = getFieldConfig(config, field);\n  const opConfig = operator ? config.operators[operator] : null;\n  \n  if (fieldConfig?.widgets) {\n    for (const widget in fieldConfig.widgets) {\n      const widgetConfig = fieldConfig.widgets[widget];\n      if (!config.widgets[widget]) {\n        continue;\n      }\n      const widgetValueSrc = config.widgets[widget].valueSrc || \"value\";\n      let canAdd = true;\n      if (widget == \"field\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"field\"], fieldConfig).length > 0;\n      }\n      if (widget == \"func\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"func\"], fieldConfig).length > 0;\n      }\n      // If can't check operators, don't add\n      // Func args don't have operators\n      if (valueSrc == \"value\" && !widgetConfig.operators && !isFuncArg && field != \"!case_value\")\n        canAdd = false;\n      if (widgetConfig.operators && operator)\n        canAdd = canAdd && widgetConfig.operators.indexOf(operator) != -1;\n      if (valueSrc && valueSrc != widgetValueSrc && valueSrc != \"const\")\n        canAdd = false;\n      if (opConfig && opConfig.cardinality == 0 && (widgetValueSrc != \"value\"))\n        canAdd = false;\n      if (canAdd) {\n        widgets.push(widget);\n        let canAddValueSrc = fieldConfig.valueSources?.indexOf(widgetValueSrc) != -1;\n        if (opConfig?.valueSources?.indexOf(widgetValueSrc) == -1)\n          canAddValueSrc = false;\n        if (canAddValueSrc && !valueSrcs.find(v => v == widgetValueSrc))\n          valueSrcs.push(widgetValueSrc);\n      }\n    }\n  }\n\n  const widgetWeight = (w) => {\n    let wg = 0;\n    if (fieldConfig.preferWidgets) {\n      if (fieldConfig.preferWidgets.includes(w))\n        wg += (10 - fieldConfig.preferWidgets.indexOf(w));\n    } else if (w == fieldConfig.mainWidget) {\n      wg += 100;\n    }\n    if (w == \"field\") {\n      wg -= 1;\n    }\n    if (w == \"func\") {\n      wg -= 2;\n    }\n    return wg;\n  };\n\n  widgets.sort((w1, w2) => (widgetWeight(w2) - widgetWeight(w1)));\n    \n  return {widgets, valueSrcs};\n}\n\nexport const getWidgetsForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  return widgets;\n};\n\nexport const filterValueSourcesForField = (config, valueSrcs, fieldDefinition) => {\n  if (!fieldDefinition)\n    return valueSrcs;\n  const fieldType = fieldDefinition.type ?? fieldDefinition.returnType;\n  if (!valueSrcs)\n    valueSrcs = Object.keys(config.settings.valueSourcesInfo);\n  return valueSrcs.filter(vs => {\n    let canAdd = true;\n    if (vs == \"field\") {\n      if (config.__fieldsCntByType) {\n        // tip: LHS field can be used as arg in RHS function\n        const minCnt = fieldDefinition._isFuncArg ? 0 : 1;\n        canAdd = canAdd && config.__fieldsCntByType[fieldType] > minCnt;\n      }\n    }\n    if (vs == \"func\") {\n      if (config.__funcsCntByType)\n        canAdd = canAdd && !!config.__funcsCntByType[fieldType];\n      if (fieldDefinition.funcs)\n        canAdd = canAdd && fieldDefinition.funcs.length > 0;\n    }\n    return canAdd;\n  });\n};\n\nexport const getValueSourcesForFieldOp = (config, field, operator, fieldDefinition = null) => {\n  const {valueSrcs} = _getWidgetsAndSrcsForFieldOp(config, field, operator, null);\n  const filteredValueSrcs = filterValueSourcesForField(config, valueSrcs, fieldDefinition);\n  return filteredValueSrcs;\n};\n\nexport const getWidgetForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  let widget = null;\n  if (widgets.length)\n    widget = widgets[0];\n  return widget;\n};\n\n// can use alias (fieldName)\n// even if `parentField` is provided, `field` is still a full path\nexport const formatFieldName = (field, config, meta, parentField = null, options = {}) => {\n  if (!field) return;\n  const fieldDef = getFieldConfig(config, field) || {};\n  const {fieldSeparator} = config.settings;\n  const fieldParts = getFieldParts(field, config);\n  let fieldName = Array.isArray(field) ? field.join(fieldSeparator) : field;\n  if (options?.useTableName && fieldDef.tableName) { // legacy\n    const fieldPartsCopy = [...fieldParts];\n    fieldPartsCopy[0] = fieldDef.tableName;\n    fieldName = fieldPartsCopy.join(fieldSeparator);\n  }\n  if (fieldDef.fieldName) {\n    fieldName = fieldDef.fieldName;\n  }\n  if (parentField) {\n    const parentFieldDef = getFieldConfig(config, parentField) || {};\n    let parentFieldName = parentField;\n    if (fieldName.indexOf(parentFieldName + fieldSeparator) == 0) {\n      fieldName = fieldName.slice((parentFieldName + fieldSeparator).length);\n      // fieldName = \"#this.\" + fieldName; // ? for spel\n    } else {\n      if (fieldDef.fieldName) {\n        // ignore\n      } else {\n        meta.errors.push(`Can't cut group ${parentFieldName} from field ${fieldName}`);\n      }\n    }\n  }\n  return fieldName;\n};\n\n\n/**\n * Used together with keepInputOnChangeFieldSrc\n */\nexport const isEmptyItem = (item, config) => {\n  const type = item.get(\"type\");\n  const mode = item.getIn([\"properties\", \"mode\"]);\n  if (type == \"rule_group\" && mode == \"array\") {\n    return isEmptyRuleGroupExt(item, config);\n  } else if (type == \"group\" || type == \"rule_group\") {\n    return isEmptyGroup(item, config);\n  } else {\n    return isEmptyRule(item, config);\n  }\n};\n\nconst isEmptyRuleGroupExt = (item, config) => {\n  const children = item.get(\"children1\");\n  const properties = item.get(\"properties\");\n  return isEmptyRuleGroupExtPropertiesAndChildren(properties.toObject(), children, config);\n};\n\n/**\n * Used to remove group ext without confirmation\n * \n * If group operator is count, children can be empty.\n * If group operator is some/none/all, there should be at least one non-empty (even incomplete) child.\n */\nexport const isEmptyRuleGroupExtPropertiesAndChildren = (properties, children, config) => {\n  const operator = properties.operator;\n  const cardinality = config.operators[operator]?.cardinality ?? 1;\n  const childrenAreRequired = cardinality == 0; // tip: for group operators some/none/all\n  const filledParts = {\n    group: !isEmptyRuleProperties(properties, config),\n    children: !isEmptyGroupChildren(children, config),\n  };\n  const hasEnough = filledParts.group && (childrenAreRequired ? filledParts.children : true);\n  return !hasEnough;\n};\n\nconst isEmptyGroup = (group, config) => {\n  const children = group.get(\"children1\");\n  return isEmptyGroupChildren(children, config);\n};\n\n/**\n * Used to remove group without confirmation\n * @returns {boolean} false if there is at least one (even incomplete) child\n */\nexport const isEmptyGroupChildren = (children, config) => {\n  const hasEnough = children?.size > 0 && children.filter(ch => !isEmptyItem(ch, config)).size > 0;\n  return !hasEnough;\n};\n\nconst isEmptyRule = (rule, config) => {\n  const properties = rule.get(\"properties\");\n  return isEmptyRuleProperties(properties?.toObject() || {}, config);\n};\n\n/**\n * Used to remove rule without confirmation\n * @param properties is an Object, but properties (like value) are Immutable\n * @returns {boolean} true if there is no enough data in rule\n */\nexport const isEmptyRuleProperties = (properties, config) => {\n  const liteCheck = true;\n  const scoreThreshold = 3;\n  const compl = whatRulePropertiesAreCompleted(properties, config, liteCheck);\n  const hasEnough = compl.score >= scoreThreshold;\n  return !hasEnough;\n};\n\n/**\n * Used to validate rule\n * @param properties is an Object, but its properties (like `value`) are Immutable\n * @param liteCheck true can be used to check that rule has enough data to ask confirmation before delete\n * @return {{parts: {field: boolean, operator: boolean, value: boolean}, score: number}}\n */\nexport const whatRulePropertiesAreCompleted = ({\n  field, fieldSrc, fieldType,\n  operator,\n  value, valueSrc, valueType,\n}, config, liteCheck = false) => {\n  const cardinality = config.operators[operator]?.cardinality ?? 1;\n  const valueSrcs = valueSrc?.get ? valueSrc.toJS() : valueSrc;\n\n  // tip: for liteCheck==true `score` should equal 3 if both LHS and RHS are at least partially filled\n  const res = { parts: {}, score: 0 };\n  res.parts.field = liteCheck ? (field != null) : isCompletedValue(field, fieldSrc, config);\n  res.parts.operator = !!operator;\n  res.parts.value = value?.filter((val, delta) => \n    isCompletedValue(val, valueSrcs?.[delta], config, liteCheck)\n  )?.size >= (liteCheck ? Math.min(cardinality, 1) : cardinality);\n  res.score = Object.keys(res.parts).filter(k => !!res.parts[k]).length;\n\n  if (liteCheck && res.score < 3) {\n    // Boost score to confirm deletion:\n    // - if RHS is empty, but LHS is a completed function\n    // - if LHS is empty (only fieldType is set), but there is a completed function in RHS\n    const deepCheck = true;\n    if (!res.parts.value && fieldSrc === \"func\" && isCompletedValue(field, fieldSrc, config, false, deepCheck)) {\n      res.score++;\n    }\n    if (!res.parts.field) {\n      value?.map((val, delta) => {\n        if (valueSrcs?.[delta] === \"func\" && isCompletedValue(val, valueSrcs?.[delta], config, false, deepCheck)) {\n          res.score++;\n        }\n      });\n    }\n  }\n\n  return res;\n};\n\nconst isCompletedValue = (value, valueSrc, config, liteCheck = false, deepCheck = true) => {\n  if (!liteCheck && valueSrc == \"func\" && value) {\n    const funcKey = value.get?.(\"func\");\n    const funcConfig = getFuncConfig(config, funcKey);\n    if (funcConfig) {\n      const args = value.get(\"args\");\n      for (const argKey in funcConfig.args) {\n        const argConfig = funcConfig.args[argKey];\n        const argVal = args ? args.get(argKey) : undefined;\n        // const argDef = getFieldConfig(config, argConfig);\n        const argValue = argVal ? argVal.get(\"value\") : undefined;\n        const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n        if (argValue == undefined && argConfig?.defaultValue === undefined && !argConfig?.isOptional) {\n          // arg is not completed\n          return false;\n        }\n        if (argValue != undefined) {\n          if (!isCompletedValue(argValue, argValueSrc, config, deepCheck ? liteCheck : true)) {\n            // arg is complex and is not completed\n            return false;\n          }\n        }\n      }\n      // all args are completed\n      return true;\n    }\n  }\n  return value != undefined;\n};\n\n/**\n * @param {*} value\n * @param {'value'|'field'|'func'} valueSrc\n * @param {object} config\n * @return {* | undefined}  undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeValue = (value, valueSrc, config) => {\n  if (valueSrc == \"func\")\n    return completeFuncValue(value, config);\n  else\n    return value;\n};\n","import JL from \"json-logic-js\";\nimport moment from \"moment\";\n\nexport function applyJsonLogic(logic, data) {\n  return JL.apply(logic, data);\n}\n\nfunction addJsonLogicOperation(name, op) {\n  return JL.add_operation(name, op);\n}\n\nexport const customJsonLogicOperations = {\n  CALL: (fn, ctx, ...args) => (fn.call(ctx, ...args)),\n  JSX: (type, props) => ({type, props}),\n  mergeObjects: (obj1, obj2) => ({...obj1, ...obj2}),\n  fromEntries: (entries) => Object.fromEntries(entries),\n  strlen: (str) => (str?.length || 0),\n  regexTest: (str, pattern, flags) => str?.match(new RegExp(pattern, flags)) != null,\n  now: () => new Date(),\n  date_add: (date, val, dim) => { return moment(date).add(val, dim).toDate(); },\n  toLowerCase: (str) => str.toLowerCase(),\n  toUpperCase: (str) => str.toUpperCase(),\n};\n\nexport function addRequiredJsonLogicOperations() {\n  for (let k in customJsonLogicOperations) {\n    addJsonLogicOperation(k, customJsonLogicOperations[k]);\n  }\n}\n","import merge from \"lodash/merge\";\nimport pick from \"lodash/pick\";\nimport {isJsonLogic, isJSX, isDirtyJSX, cleanJSX, shallowEqual} from \"./stuff\";\nimport clone from \"clone\";\nimport JL from \"json-logic-js\";\nimport { addRequiredJsonLogicOperations, applyJsonLogic } from \"./jsonLogic\";\nimport { BasicFuncs } from \"..\";\nimport { getFieldRawConfig } from \"./configUtils\";\n\n// Add new operations for JsonLogic\naddRequiredJsonLogicOperations();\n\nexport { isJSX, isDirtyJSX, cleanJSX, applyJsonLogic };\n\nfunction applyJsonLogicWithPath(logic, data, path) {\n  let ret;\n  try {\n    ret = JL.apply(logic, data);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\nfunction callContextFn(_this, fn, args, path) {\n  let ret;\n  try {\n    ret = fn.call(_this, ...args);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\nexport const configKeys = [\"conjunctions\", \"fields\", \"types\", \"operators\", \"widgets\", \"settings\", \"funcs\", \"ctx\"];\n\n// type: \n//  x - iterate (with nesting `subfields`)\n//  \"r\" - RenderedReactElement\n//    Will be compiled with renderReactElement() into React element rendered with `React.createElement` (`ctx.RCE`)\n//  \"rf\" - JsonLogicFunction/string to render React\n//    JL data is { props, ctx }\n//    Should return {type, props} or string, where type or string - React component\n//    Can use { JSX: [\"SomeComponent\", {var: \"props\"}] } or just return \"SomeComponent\"\n//    Returned component will be searched in ctx.components/ctx.W/ctx.O, see getReactComponentFromCtx()\n//    Will be compiled with compileJsonLogicReact() into function with args (props, ctx) that will return renderReactElement()\n//  \"f\" - JsonLogicFunction/string\n//    JL data is { args, ctx } plus named args defined in `args` inside `compileMeta`\n//    Can use { CALL: [ {var: \"ctx.someFunc\"}, null, {var: \"args[0]\" }] } \n//    If string is passed, it's a path to function in ctx (with dot notation)\n//    Will be compiled with compileJsonLogic() into function with any args and `this` should be `ctx`\n\nconst compileMetaFieldSettings = {\n  asyncFetch: { type: \"f\", args: [\"search\", \"offset\"] },\n  labelYes: { type: \"r\" },\n  labelNo: { type: \"r\" },\n  marks: { type: \"r\", isArr: true },\n  validateValue: { type: \"f\", args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"] },\n};\n\nconst compileMetaWidget = {\n  ...compileMetaFieldSettings,\n  factory: { type: \"rf\" },\n  formatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"isForDisplay\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  sqlFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  spelFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  spelImportValue: { type: \"f\", args: [\"val\", \"wgtDef\", \"args\"] },\n  mongoFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  elasticSearchFormatValue: { type: \"f\", args: [\"queryType\", \"val\", \"op\", \"field\", \"config\"] },\n  jsonLogic: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  validateValue: { type: \"f\", args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"] }, // obsolete\n  toJS: { type: \"f\", args: [\"val\"] },\n};\n\nconst compileMetaOperator = {\n  options: { // proximity\n    factory: { type: \"rf\" },\n  },\n  formatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"isForDisplay\", \"fieldDef\"] },\n  mongoFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"useExpr\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  sqlFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  spelFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"field\", \"op\", \"vals\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  elasticSearchQueryType: { type: \"f\", ignore: \"string\", args: [\"valueType\"] },\n  textSeparators: { type: \"r\", isArr: true },\n};\n\nconst compileMetaConjunction = {\n  formatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"isForDisplay\"] },\n  sqlFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\"] },\n  spelFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"omitBrackets\"] },\n};\n\nconst compileMetaWidgetForType = {\n  widgetProps: compileMetaWidget,\n  opProps: compileMetaOperator\n};\n\nconst compileMetaFunc = {\n  renderBrackets: { type: \"r\", isArr: true },\n  renderSeps: { type: \"r\", isArr: true },\n\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"formattedArgs\"] },\n  jsonLogicImport: { type: \"f\", args: [\"val\"] },\n  spelImport: { type: \"f\", args: [\"spel\"] },\n  formatFunc: { type: \"f\", args: [\"formattedArgs\", \"isForDisplay\"] },\n  sqlFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n  mongoFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n  spelFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n};\n\nconst compileMetaSettings = {\n  locale: {\n    mui: { type: \"f\", args: [], invokeWith: [], ignore: \"jl\" },\n  },\n\n  canCompareFieldWithField: { type: \"f\", args: [\"leftField\", \"leftFieldConfig\", \"rightField\", \"rightFieldConfig\", \"op\"] },\n  formatReverse: { type: \"f\", args: [\"q\", \"op\", \"reversedOp\", \"operatorDefinition\", \"revOperatorDefinition\", \"isForDisplay\"] },\n  sqlFormatReverse: { type: \"f\", args: [\"q\"] },\n  spelFormatReverse: { type: \"f\", args: [\"q\"] },\n  formatField: { type: \"f\", args: [\"field\", \"parts\", \"label2\", \"fieldDefinition\", \"config\", \"isForDisplay\"] },\n  formatSpelField: { type: \"f\", args: [\"field\", \"parentField\", \"parts\", \"partsExt\", \"fieldDefinition\", \"config\"] },\n  formatAggr: { type: \"f\", args: [\"whereStr\", \"aggrField\", \"operator\", \"value\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"isForDisplay\", \"aggrFieldDef\"] },\n  \n  normalizeListValues: { type: \"f\", args: [\"listValues\", \"type\", \"fieldSettings\"] },\n\n  renderConfirm: { type: \"f\", args: [\"props\"] },\n  useConfirm: { type: \"f\", args: [] },\n\n  renderField: { type: \"rf\" },\n  renderOperator: { type: \"rf\" },\n  renderFunc: { type: \"rf\" },\n  renderConjs: { type: \"rf\" },\n  renderButton: { type: \"rf\" },\n  renderIcon: { type: \"rf\" },\n  renderButtonGroup: { type: \"rf\" },\n  renderValueSources: { type: \"rf\" },\n  renderFieldSources: { type: \"rf\" },\n  renderProvider: { type: \"rf\" },\n  renderSwitch: { type: \"rf\" },\n  renderSwitchPrefix: { type: \"r\" },\n\n  renderItem: { type: \"rf\" },\n  renderBeforeWidget: { type: \"rf\" },\n  renderAfterWidget: { type: \"rf\" },\n  renderBeforeActions: { type: \"rf\" },\n  renderAfterActions: { type: \"rf\" },\n  renderRuleError: { type: \"rf\" },\n};\n\nconst compileMeta = {\n  fields: {\n    x: {\n      fieldSettings: compileMetaFieldSettings,\n      widgets: {\n        x: compileMetaWidgetForType\n      },\n      mainWidgetProps: compileMetaWidget\n    },\n  },\n  widgets: {\n    x: compileMetaWidget\n  },\n  conjunctions: {\n    x: compileMetaConjunction\n  },\n  operators: {\n    x: compileMetaOperator\n  },\n  types: {\n    x: {\n      widgets: {\n        x: compileMetaWidgetForType\n      }\n    }\n  },\n  funcs: {\n    x: {\n      ...compileMetaFunc,\n      ...compileMetaFieldSettings,\n      fieldSettings: compileMetaFieldSettings,\n      args: {\n        x: {\n          ...compileMetaFieldSettings,\n          fieldSettings: compileMetaFieldSettings,\n        }\n      }\n    }\n  },\n  settings: compileMetaSettings,\n};\n\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\n/////////////\n\nexport const compressConfig = (config, baseConfig) => {\n  if (config.__fieldNames) {\n    throw new Error(\"Don't apply `compressConfig()` to extended config\");\n  }\n  let zipConfig = pick(config, configKeys);\n  delete zipConfig.ctx;\n\n  const _clean = (target, base, path, meta) => {\n    if (isObject(target)) {\n      if (isDirtyJSX(target)) {\n        target = cleanJSX(target);\n      }\n      if (path[0] === \"funcs\" && !base) {\n        const funcKey = path[path.length - 1];\n        // todo: if there will be change in `BasicFuncs` when funcs can be nested, need to chnage code to find `base`\n        base = getFieldRawConfig({\n          funcs: meta.BasicFuncs\n        }, funcKey, \"funcs\", \"subfields\") || undefined;\n        if (base) {\n          target[\"$$key\"] = funcKey;\n        }\n      }\n      if (base !== undefined && isObject(base)) {\n        for (let k in base) {\n          if (Object.prototype.hasOwnProperty.call(base, k)) {\n            if (!Object.keys(target).includes(k) || target[k] === undefined && base[k] !== undefined) {\n              // deleted in target\n              target[k] = \"$$deleted\";\n            } else {\n              target[k] = _clean(target[k], base[k], [...path, k], meta);\n              if (target[k] === undefined) {\n                delete target[k];\n              }\n            }\n          }\n        }\n      }\n      for (let k in target) {\n        if (Object.prototype.hasOwnProperty.call(target, k)) {\n          if (!base || !Object.keys(base).includes(k)) {\n            // new in target\n            target[k] = _clean(target[k], base?.[k], [...path, k], meta);\n          }\n          if (target[k] === undefined) {\n            delete target[k];\n          }\n        }\n      }\n      if (Object.keys(target).length === 0) {\n        target = undefined;\n      }\n    } else if (Array.isArray(target)) {\n      // don't deep compare arrays, but allow clean JSX inside array\n      target.forEach((val, ind) => {\n        target[ind] = _clean(target[ind], undefined, [...path, ind], meta);\n      });\n    }\n\n    if (base !== undefined && shallowEqual(target, base, true)) {\n      return undefined;\n    }\n\n    if (typeof target === \"function\") {\n      throw new Error(`compressConfig: function at ${path.join(\".\")} should be converted to JsonLogic`);\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // ignore\n    } else if (rootKey === \"fields\") {\n      // just copy\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], {}, [rootKey]);\n    } else if (rootKey === \"funcs\") {\n      // leave only diff for every used func\n      zipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      for (let k in zipConfig[rootKey]) {\n        _clean(zipConfig[rootKey][k], null, [rootKey, k], {\n          BasicFuncs\n        });\n      }\n    } else {\n      // leave only diff\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], baseConfig[rootKey], [rootKey]);\n    }\n  }\n\n  return zipConfig;\n};\n\n\nexport const decompressConfig = (zipConfig, baseConfig, ctx) => {\n  if (!zipConfig.settings.useConfigCompress) {\n    throw new Error(\"Please enable `useConfigCompress` in config settings to use decompressConfig()\");\n  }\n  let unzipConfig = {};\n\n  const _mergeDeep = (target, mixin, path) => {\n    if (isObject(mixin)) {\n      if (!isObject(target)) {\n        target = {};\n      }\n      for (let k in mixin) {\n        if (Object.prototype.hasOwnProperty.call(mixin, k)) {\n          if (mixin[k] === \"$$deleted\") {\n            delete target[k];\n          } else {\n            target[k] = _mergeDeep(target[k], mixin[k], [...path, k]);\n          }\n        }\n      }\n    } else if (Array.isArray(mixin)) {\n      // don't merge arrays, just replace\n      target = clone(mixin);\n    } else {\n      target = mixin;\n    }\n\n    return target;\n  };\n\n  const _resolveAndMergeDeep = (target, path, meta) => {\n    // try to resolve by $$key and merge\n    let resolved = false;\n    if (isObject(target) && Object.prototype.hasOwnProperty.call(target, \"$$key\") && target[\"$$key\"]) {\n      const func = getFieldRawConfig({\n        funcs: meta.BasicFuncs\n      }, target[\"$$key\"], \"funcs\", \"subfields\");\n      if (func) {\n        // deep merge func <- zip\n        delete target[\"$$key\"];\n        target = _mergeDeep(clone(func), target, path);\n        resolved = true;\n      } else {\n        throw new Error(`decompressConfig: basic function not found by key ${target[\"$$key\"]} at ${path.join(\".\")}`);\n      }\n    }\n\n    if (!resolved) {\n      if (isObject(target)) {\n        // loop through object to find refs ($$key)\n        for (let k in target) {\n          if (Object.prototype.hasOwnProperty.call(target, k)) {\n            target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n          }\n        }\n      } else if (Array.isArray(target)) {\n        // also loop through array to find refs ($$key)\n        for (const k of target) {\n          target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n        }\n      }\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // simple deep merge\n      unzipConfig[rootKey] = merge({}, baseConfig.ctx || {}, ctx || {});\n    } else if (rootKey === \"funcs\") {\n      // use $$key to pick funcs from BasicFuncs\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      _resolveAndMergeDeep(unzipConfig[rootKey], [rootKey], {\n        BasicFuncs\n      });\n    } else if (rootKey === \"fields\") {\n      // just copy\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n    } else {\n      // deep merge base <- zip\n      unzipConfig[rootKey] = clone(baseConfig[rootKey] || {});\n      _mergeDeep(unzipConfig[rootKey], zipConfig[rootKey] || {}, [rootKey]);\n    }\n  }\n\n  return unzipConfig;\n};\n\n/////////////\n\nexport const compileConfig = (config) => {\n  if (config.__compliled) {\n    return config;\n  }\n\n  config = clone(config);\n\n  const opts = {\n    ctx: config.ctx,\n  };\n\n  const logs = [];\n  _compileConfigParts(config, config, opts, compileMeta, logs);\n  //console.log(logs.join(\"\\n\"));\n\n  Object.defineProperty(config, \"__compliled\", {\n    enumerable: false,\n    writable: false,\n    value: true\n  });\n\n  return config;\n};\n\nfunction _compileConfigParts(config, subconfig, opts, meta, logs, path = []) {\n  if (!subconfig) return;\n  const isRoot = !path.length;\n  for (const k in meta) {\n    const submeta = meta[k];\n    let newPath = k === \"x\" ? path : [...path, k];\n    // if (isRoot) {\n    //   //logs.push(`Cloned ${newPath.join(\".\")}`);\n    //   config[k] = clone(config[k]);\n    // }\n    if (submeta.type === \"r\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      if (submeta.isArr) {\n        for (const ind in val) {\n          const newVal = renderReactElement(val[ind], opts, [...newPath, ind]);\n          if (newVal !== val[ind]) {\n            logs.push(`Compiled ${newPath.join(\".\")}[${ind}]`);\n            val[ind] = newVal;\n          }\n        }\n      } else {\n        const newVal = renderReactElement(val, opts, newPath, undefined);\n        if (newVal !== val) {\n          logs.push(`Compiled R ${newPath.join(\".\")}`);\n          targetObj[k] = newVal;\n        }\n      }\n    } else if (submeta.type === \"rf\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      const newVal = compileJsonLogicReact(val, opts, newPath, submeta.ignore);\n      if (newVal !== val) {\n        logs.push(`Compiled JL-RF ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (submeta.type === \"f\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      let newVal = compileJsonLogic(val, opts, newPath, submeta.args, submeta.ignore);\n      if (submeta.invokeWith && newVal && typeof newVal === \"function\") {\n        newVal = newVal.call(null, ...submeta.invokeWith);\n      }\n      if (newVal !== val) {\n        logs.push(`Compiled JL-F ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (k === \"x\") {\n      for (const field in subconfig) {\n        newPath = [...path, field];\n        const def = subconfig[field];\n        _compileConfigParts(config, def, opts, submeta, logs, newPath);\n        if (def.subfields) {\n          // tip: need to pass `meta`, not `submeta`\n          _compileConfigParts(config, def.subfields, opts, meta, logs, newPath);\n        }\n      }\n    } else {\n      const def = subconfig[k];\n      _compileConfigParts(config, def, opts, submeta, logs, newPath);\n    }\n  }\n}\n\nfunction compileJsonLogicReact(jl, opts, path, ignore = undefined) {\n  if (isJsonLogic(jl)) {\n    return function(props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = {\n        props, ctx,\n      };\n      let re = applyJsonLogicWithPath(jl, data, path);\n      if (typeof re === \"string\") {\n        re = {\n          type: re,\n          props\n        };\n      }\n      \n      const ret = renderReactElement(re, {ctx}, path);\n      return ret;\n    };\n  } else if (typeof jl === \"string\") {\n    return function(props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, [props, ctx], path);\n      } else {\n        const re = {\n          type: jl,\n          props\n        };\n        const ret = renderReactElement(re, {ctx}, path);\n        return ret;\n      }\n    };\n  }\n  return jl;\n}\n\nfunction compileJsonLogic(jl, opts, path, argNames, ignore = undefined) {\n  if (isJsonLogic(jl) && ignore !== \"jl\") {\n    return function(...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = (argNames || []).reduce((acc, k, i) => ({...acc, [k]: args[i]}), {\n        args, ctx\n      });\n      const ret = applyJsonLogicWithPath(jl, data, path);\n      return ret;\n    }.bind(opts?.ctx);\n  } else if (typeof jl === \"string\" && ignore !== \"string\") {\n    return function(...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, args, path);\n      } else {\n        throw new Error(`${path.join(\".\")} :: Function ${jl} is not found in ctx`);\n      }\n    }.bind(opts?.ctx);\n  }\n  return jl;\n}\n\n\n\nfunction getReactComponentFromCtx(name, ctx) {\n  return ctx?.components?.[name] || ctx.W[name] || ctx.O[name];\n}\n\nfunction renderReactElement(jsx, opts, path, key = undefined) {\n  if (isJSX(jsx)) {\n    let { type, props } = jsx;\n    if (typeof type !== \"string\") {\n      throw new Error(`renderReactElement for ${path.join(\".\")}: type should be string`);\n    }\n    const Cmp = getReactComponentFromCtx(type, opts.ctx) || type.toLowerCase();\n    let children;\n    if (key !== undefined) {\n      props = { ...props, key };\n    }\n    if (props?.children) {\n      children = renderReactElement(props.children, opts, path);\n      props = { ...props, children };\n    }\n    const res = opts.ctx.RCE(Cmp, props);\n    return res;\n  } else if (jsx instanceof Array) {\n    return jsx.map((el, i) => renderReactElement(el, opts, path, \"\"+i));\n  }\n  return jsx;\n}\n","\n\nexport const settings = {\n  formatField: (field, parts, label2, fieldDefinition, config, isForDisplay) => {\n    if (isForDisplay)\n      return label2;\n    else\n      return field;\n  },\n\n\n  fieldSources: [\"field\"],\n  keepInputOnChangeFieldSrc: true,\n  fieldItemKeysForSearch: [\"label\", \"path\", \"altLabel\", \"grouplabel\"],\n  listKeysForSearch: [\"title\", \"value\"],\n  valueSourcesInfo: {\n    value: {},\n  },\n  fieldSeparator: \".\",\n  fieldSeparatorDisplay: \".\",\n  canReorder: true,\n  canRegroup: true,\n  canDeleteLocked: false,\n  canLeaveEmptyGroup: true,\n  shouldCreateEmptyGroup: false,\n  canShortMongoQuery: true,\n  removeEmptyGroupsOnLoad: true,\n  removeEmptyRulesOnLoad: true,\n  removeIncompleteRulesOnLoad: false,\n  removeInvalidMultiSelectValuesOnLoad: true,\n  optimizeRenderWithInternals: false,\n  showErrorMessage: false,\n  setOpOnChangeField: [\"keep\", \"default\"], // 'default' (default if present), 'keep' (keep prev from last field), 'first', 'none'\n  groupOperators: [\"some\", \"all\", \"none\"],\n\n  defaultGroupConjunction: \"AND\",\n\n  // localization\n  locale: {\n    moment: \"en\",\n  },\n  valueLabel: \"Value\",\n  valuePlaceholder: \"Value\",\n  fieldLabel: \"Field\",\n  operatorLabel: \"Operator\",\n  funcLabel: \"Function\",\n  fieldPlaceholder: \"Select field\",\n  funcPlaceholder: \"Select function\",\n  operatorPlaceholder: \"Select operator\",\n  lockLabel: \"Lock\",\n  lockedLabel: \"Locked\",\n  deleteLabel: \"Delete\",\n  addGroupLabel: \"Add group\",\n  addCaseLabel: \"Add condition\",\n  addDefaultCaseLabel: \"Add default condition\",\n  defaultCaseLabel: \"Default:\",\n  addRuleLabel: \"Add rule\",\n  addSubRuleLabel: \"Add sub rule\",\n  delGroupLabel: \"Delete\",\n  notLabel: \"Not\",\n  fieldSourcesPopupTitle: \"Select source\",\n  valueSourcesPopupTitle: \"Select value source\",\n  removeRuleConfirmOptions: null,\n  removeGroupConfirmOptions: null,\n\n};\n","import merge from \"lodash/merge\";\nimport uuid from \"./uuid\";\nimport mergeWith from \"lodash/mergeWith\";\nimport {settings as defaultSettings} from \"../config/default\";\nimport moment from \"moment\";\nimport {mergeArraysSmart, logger, deepFreeze, mergeCustomizerNoArrays} from \"./stuff\";\nimport clone from \"clone\";\n\nimport { compileConfig } from \"./configSerialize\";\nimport { getFieldRawConfig } from \"./configUtils\";\n\n\nexport const extendConfig = (config, configId, canCompile = true) => {\n  //operators, defaultOperator - merge\n  //widgetProps (including valueLabel, valuePlaceholder, hideOperator, operatorInlineLabel) - concrete by widget\n\n  if (config.__configId) {\n    return config;\n  }\n\n  // Clone (and compile if need)\n  if (canCompile && config.settings.useConfigCompress) {\n    if (config.__compliled) {\n      // already compiled\n      config = clone(config);\n    } else {\n      // will be cloned and compiled\n      config = compileConfig(config);\n    }\n  } else {\n    config = clone(config);\n  }\n\n  config.settings = mergeWith({}, defaultSettings, config.settings, mergeCustomizerNoArrays);\n\n  config.__fieldsCntByType = {};\n  config.__funcsCntByType = {};\n  config.__fieldNames = {};\n\n  extendTypesConfig(config.types, config);\n  extendFieldsConfig(config.fields, config);\n  extendFuncArgsConfig(config.funcs, config);\n\n  const momentLocale = config.settings.locale.moment;\n  if (momentLocale) {\n    moment.locale(momentLocale);\n  }\n\n  Object.defineProperty(config, \"__configId\", {\n    enumerable: false,\n    writable: false,\n    value: configId || uuid()\n  });\n\n  deepFreeze(config);\n\n  return config;\n};\n\nfunction extendTypesConfig(typesConfig, config) {\n  for (let type in typesConfig) {\n    let typeConfig = typesConfig[type];\n    extendTypeConfig(type, typeConfig, config);\n  }\n}\n\nfunction extendTypeConfig(type, typeConfig, config) {\n  let operators = null, defaultOperator = null;\n  typeConfig.mainWidget = typeConfig.mainWidget || Object.keys(typeConfig.widgets).filter(w => w != \"field\" && w != \"func\")[0];\n  for (let widget in typeConfig.widgets) {\n    let typeWidgetConfig = typeConfig.widgets[widget];\n    if (typeWidgetConfig.operators) {\n      let typeWidgetOperators = typeWidgetConfig.operators;\n      if (typeConfig.excludeOperators) {\n        typeWidgetOperators = typeWidgetOperators.filter(op => !typeConfig.excludeOperators.includes(op));\n      }\n      operators = mergeArraysSmart(operators, typeWidgetOperators);\n    }\n    if (typeWidgetConfig.defaultOperator)\n      defaultOperator = typeWidgetConfig.defaultOperator;\n    if (widget == typeConfig.mainWidget) {\n      typeWidgetConfig = merge({}, {widgetProps: typeConfig.mainWidgetProps || {}}, typeWidgetConfig);\n    }\n    typeConfig.widgets[widget] = typeWidgetConfig;\n  }\n  if (!typeConfig.valueSources)\n    typeConfig.valueSources = Object.keys(config.settings.valueSourcesInfo);\n  for (let valueSrc of typeConfig.valueSources) {\n    if (valueSrc != \"value\" && !typeConfig.widgets[valueSrc]) {\n      typeConfig.widgets[valueSrc] = {\n      };\n    }\n  }\n  if (!typeConfig.operators && operators)\n    typeConfig.operators = Array.from(new Set(operators)); //unique\n  if (!typeConfig.defaultOperator && defaultOperator)\n    typeConfig.defaultOperator = defaultOperator;\n}\n\nfunction extendFieldsConfig(subconfig, config, path = []) {\n  for (let field in subconfig) {\n    extendFieldConfig(subconfig[field], config, [...path, field]);\n    if (subconfig[field].subfields) {\n      extendFieldsConfig(subconfig[field].subfields, config, [...path, field]);\n    }\n  }\n}\n\nfunction extendFuncArgsConfig(subconfig, config, path = []) {\n  if (!subconfig) return;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  for (let funcKey in subconfig) {\n    const funcPath = [...path, funcKey].join(fieldSeparator);\n    const funcDef = subconfig[funcKey];\n    if (funcDef.returnType) {\n      if (!config.__funcsCntByType[funcDef.returnType])\n        config.__funcsCntByType[funcDef.returnType] = 0;\n      config.__funcsCntByType[funcDef.returnType]++;\n    }\n    extendFieldConfig(funcDef, config, null, false);\n\n    if (funcDef.args) {\n      for (let argKey in funcDef.args) {\n        extendFieldConfig(funcDef.args[argKey], config, null, true);\n      }\n      // isOptional can be only in the end\n      const argKeys = Object.keys(funcDef.args);\n      let tmpIsOptional = true;\n      for (const argKey of argKeys.reverse()) {\n        const argDef = funcDef.args[argKey];\n        if (!tmpIsOptional && argDef.isOptional) {\n          logger.info(`Arg ${argKey} for func ${funcPath} can't be optional`);\n          delete argDef.isOptional;\n        }\n        if (!argDef.isOptional)\n          tmpIsOptional = false;\n      }\n    }\n\n    if (funcDef.subfields) {\n      extendFuncArgsConfig(funcDef.subfields, config, [...path, funcKey]);\n    }\n  }\n}\n\nfunction extendFieldConfig(fieldConfig, config, path = null, isFuncArg = false) {\n  let operators = null, defaultOperator = null;\n  const typeConfig = config.types[fieldConfig.type || fieldConfig.returnType];\n  const isFunc = !!fieldConfig.returnType;\n  const excludeOperatorsForField = fieldConfig.excludeOperators || [];\n  if (fieldConfig.type != \"!struct\" && fieldConfig.type != \"!group\") {\n    const keysToPutInFieldSettings = [\"listValues\", \"treeValues\", \"allowCustomValues\", \"validateValue\"];\n    if (!fieldConfig.fieldSettings)\n      fieldConfig.fieldSettings = {};\n    for (const k of keysToPutInFieldSettings) {\n      if (fieldConfig[k]) {\n        fieldConfig.fieldSettings[k] = fieldConfig[k];\n        delete fieldConfig[k];\n      }\n    }\n\n    // normalize listValues\n    if (fieldConfig.fieldSettings.listValues) {\n      if (config.settings.normalizeListValues) {\n        fieldConfig.fieldSettings.listValues = config.settings.normalizeListValues.call(\n          config.ctx,\n          fieldConfig.fieldSettings.listValues, fieldConfig.type, fieldConfig.fieldSettings\n        );\n      }\n    }\n    // same for treeValues\n    if (fieldConfig.fieldSettings.treeValues) {\n      if (config.settings.normalizeListValues) {\n        fieldConfig.fieldSettings.treeValues = config.settings.normalizeListValues.call(\n          config.ctx,\n          fieldConfig.fieldSettings.treeValues, fieldConfig.type, fieldConfig.fieldSettings\n        );\n      }\n    }\n\n    if (!typeConfig) {\n      //console.warn(`No type config for ${fieldConfig.type}`);\n      fieldConfig.disabled = true;\n      return;\n    }\n    if (!isFuncArg && !isFunc) {\n      if (!config.__fieldsCntByType[fieldConfig.type])\n        config.__fieldsCntByType[fieldConfig.type] = 0;\n      config.__fieldsCntByType[fieldConfig.type]++;\n    }\n\n    if (isFuncArg)\n      fieldConfig._isFuncArg = true;\n\n    if (!isFunc) { // tip: func always have its own widget\n      fieldConfig.mainWidget = fieldConfig.mainWidget || typeConfig.mainWidget;\n      fieldConfig.valueSources = fieldConfig.valueSources || typeConfig.valueSources;\n      const excludeOperatorsForType = typeConfig.excludeOperators || [];\n      if (!fieldConfig.widgets)\n        fieldConfig.widgets = {};\n      for (let widget in typeConfig.widgets) {\n        let fieldWidgetConfig = fieldConfig.widgets[widget] || {};\n        const typeWidgetConfig = typeConfig.widgets[widget] || {};\n        if (!isFuncArg) {\n          const excludeOperators = [...excludeOperatorsForField, ...excludeOperatorsForType];\n          const shouldIncludeOperators = fieldConfig.preferWidgets\n            && (widget == \"field\" || fieldConfig.preferWidgets.includes(widget))\n            || excludeOperators.length > 0;\n          if (fieldWidgetConfig.operators) {\n            const addOperators = fieldWidgetConfig.operators.filter(o => !excludeOperators.includes(o));\n            operators = [...(operators || []), ...addOperators];\n          } else if (shouldIncludeOperators && typeWidgetConfig.operators) {\n            const addOperators = typeWidgetConfig.operators.filter(o => !excludeOperators.includes(o));\n            operators = [...(operators || []), ...addOperators];\n          }\n          if (fieldWidgetConfig.defaultOperator)\n            defaultOperator = fieldWidgetConfig.defaultOperator;\n        }\n\n        if (widget == fieldConfig.mainWidget) {\n          fieldWidgetConfig = merge({}, {widgetProps: fieldConfig.mainWidgetProps || {}}, fieldWidgetConfig);\n        }\n        fieldConfig.widgets[widget] = fieldWidgetConfig;\n      }\n    }\n    if (!isFuncArg) {\n      if (!fieldConfig.operators && operators)\n        fieldConfig.operators = Array.from(new Set(operators));\n      fieldConfig._origDefaultOperator = fieldConfig.defaultOperator;\n      if (!fieldConfig.defaultOperator && defaultOperator)\n        fieldConfig.defaultOperator = defaultOperator;\n    }\n  }\n\n  const { fieldName, inGroup } = computeFieldName(config, path);\n  if (fieldName) {\n    fieldConfig.fieldName = fieldName;\n    if (!config.__fieldNames[fieldName])\n      config.__fieldNames[fieldName] = [];\n    config.__fieldNames[fieldName].push({fullPath: path, inGroup});\n  }\n}\n\nfunction computeFieldName(config, path) {\n  if (!path)\n    return {};\n  const fieldSeparator = config.settings.fieldSeparator;\n  const {computedPath, computed, inGroup} = [...path].reduce(({computedPath, computed, inGroup}, f, i, arr) => {\n    const fullPath = [...arr.slice(0, i), f];\n    const fConfig = getFieldRawConfig(config, fullPath);\n    if (fConfig?.type === \"!group\" && i < arr.length-1) {\n      // don't include group in final field name\n      inGroup = fullPath.join(fieldSeparator);\n      computedPath = [];\n    } else if (fConfig?.fieldName) {\n      // tip: fieldName overrides path !\n      computed = true;\n      computedPath = [fConfig.fieldName];\n    } else {\n      computedPath = [...computedPath, f];\n    }\n    return {computedPath, computed, inGroup};\n  }, {computedPath: [], computed: false, inGroup: undefined});\n  return computed ? {\n    fieldName: computedPath.join(fieldSeparator),\n    inGroup,\n  } : {};\n}\n","import merge from \"lodash/merge\";\nimport pick from \"lodash/pick\";\nimport mergeWith from \"lodash/mergeWith\";\nimport {widgetDefKeysToOmit, mergeCustomizerNoArrays} from \"./stuff\";\nimport {getWidgetForFieldOp} from \"./ruleUtils\";\n\nexport * from \"./configSerialize\";\nexport * from \"./configExtend\";\nexport const _widgetDefKeysToOmit = widgetDefKeysToOmit; // for ui\n\n\nexport function* iterateFuncs(config) {\n  yield* _iterateFields(config, config.funcs || {}, []);\n}\n\nexport function* iterateFields(config) {\n  yield* _iterateFields(config, config.fields || {}, []);\n}\n\nfunction* _iterateFields(config, subfields, path, subfieldsKey = \"subfields\") {\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  for (const fieldKey in subfields) {\n    const fieldConfig = subfields[fieldKey];\n    if (fieldConfig[subfieldsKey]) {\n      yield* _iterateFields(config, fieldConfig[subfieldsKey], [...path, fieldKey], subfieldsKey);\n    } else {\n      yield [\n        [...path, fieldKey].join(fieldSeparator),\n        fieldConfig\n      ];\n    }\n  }\n}\n\nexport const getFieldRawConfig = (config, field, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  if (field == \"!case_value\") {\n    return {\n      type: \"case_value\",\n      mainWidget: \"case_value\",\n      widgets: {\n        \"case_value\": config.widgets[\"case_value\"]\n      }\n    };\n  }\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const parts = getFieldParts(field, config);\n  const targetFields = config[fieldsKey];\n  if (!targetFields)\n    return null;\n\n  let fields = targetFields;\n  let fieldConfig = null;\n  let path = [];\n  for (let i = 0 ; i < parts.length ; i++) {\n    const part = parts[i];\n    path.push(part);\n    const pathKey = path.join(fieldSeparator);\n    fieldConfig = fields[pathKey];\n    if (i < parts.length-1) {\n      if (fieldConfig && fieldConfig[subfieldsKey]) {\n        fields = fieldConfig[subfieldsKey];\n        path = [];\n      } else {\n        fieldConfig = null;\n      }\n    }\n  }\n\n  return fieldConfig;\n};\n\n\n// if `field` is alias (fieldName), convert to original full path\nexport const normalizeField = (config, field, parentField = null) => {\n  // tip: if parentField is present, field is not full path\n  const fieldSeparator = config.settings.fieldSeparator;\n  const path = [\n    parentField,\n    ...field.split(fieldSeparator)\n  ].filter(f => f != null);\n  const findStr = field;\n  const normalizedPath = config.__fieldNames[findStr]?.find?.(({inGroup}) => {\n    if (inGroup)\n      return parentField?.startsWith(inGroup);\n    return true;\n  })?.fullPath;\n  return (normalizedPath || path).join(fieldSeparator);\n};\n\nexport const getFuncSignature = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null;\n  const {\n    returnType,\n    args,\n  } = funcConfig;\n  const argsSignature = Object.fromEntries(Object.entries(args || {}).map(([k, v]) => {\n    const argSignature = pick(v, [\n      \"type\",\n      \"valueSources\",\n      \"defaultValue\",\n      \"fieldSettings\",\n      // \"asyncListValues\", // not supported\n      \"isOptional\",\n    ]);\n    return [k, argSignature];\n  }));\n  const signature = {\n    returnType,\n    args: argsSignature,\n  };\n  return signature;\n};\n\nexport const getFuncConfig = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null; //throw new Error(\"Can't find func \" + func + \", please check your config\");\n  const typeConfig = config.types[funcConfig.returnType] || {};\n  const ret = mergeWith({}, typeConfig, funcConfig, mergeCustomizerNoArrays);\n  ret.type = funcConfig.returnType || funcConfig.type;\n  return ret;\n};\n\nexport const getFuncArgConfig = (config, funcKey, argKey) => {\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return null; //throw new Error(`Can't find func ${funcKey}, please check your config`);\n  const argConfig = funcConfig.args && funcConfig.args[argKey] || null;\n  if (!argConfig)\n    return null; //throw new Error(`Can't find arg ${argKey} for func ${funcKey}, please check your config`);\n\n  //merge, but don't merge operators (rewrite instead)\n  const typeConfig = config.types[argConfig.type] || {};\n  const ret = mergeWith({}, typeConfig, argConfig || {}, mergeCustomizerNoArrays);\n  return ret;\n};\n\nexport const isFieldDescendantOfField = (field, parentField, config = null) => {\n  if (!parentField) return false;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const path = getFieldPath(field, config);\n  const parentPath = getFieldPath(parentField, config);\n  return path.startsWith(parentPath + fieldSeparator);\n};\n\nexport const getFieldPath = (field, config = null) => {\n  if (typeof field === \"string\")\n    return field;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  return getFieldParts(field, config).join(fieldSeparator);\n};\n\nexport const getFieldParts = (field, config = null) => {\n  if (!field)\n    return [];\n  if (Array.isArray(field))\n    return field;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  if (field?.func) {\n    return Array.isArray(field.func) ? field.func : field.func.split(fieldSeparator);\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    return field?.get?.(\"func\").split(fieldSeparator);\n  }\n  return field?.split?.(fieldSeparator) || [];\n};\n\nexport const getFieldPathParts = (field, config, onlyKeys = false) => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  if (onlyKeys)\n    return parts;\n  else\n    return parts\n      .map((_curr, ind, arr) => arr.slice(0, ind+1))\n      .map((parts) => parts.join(fieldSeparator));\n};\n\nexport const getFieldSrc = (field) => {\n  if (!field)\n    return null;\n  if (typeof field == \"object\") {\n    if (!field.func && !!field.type) {\n      // it's already a config\n      return \"field\";\n    }\n    if (field.func) {\n      if (field.func && field.arg) {\n        // it's func arg\n        return null;\n      } else {\n        // it's field func\n        return \"func\";\n      }\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return null;\n    } else {\n      // it's field func\n      return \"func\";\n    }\n  }\n  return \"field\";\n};\n\nexport const getFieldConfig = (config, field) => {\n  if (!field)\n    return null;\n  if (typeof field == \"object\") {\n    if (!field.func && !!field.type) {\n      // it's already a config\n      // if (!field.defaultOperator) {\n      //   // if not complete config..\n      //   // merge, but don't merge operators (rewrite instead)\n      //   const typeConfig = config.types[field.type] || {};\n      //   return mergeWith({}, typeConfig, field, mergeCustomizerNoArrays);\n      // }\n      return field;\n    }\n    if (field.func) {\n      if (field.func && field.arg) {\n        // it's func arg\n        return getFuncArgConfig(config, field.func, field.arg);\n      } else {\n        // it's field func\n        return getFuncConfig(config, field.func);\n      }\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return getFuncArgConfig(config, field.get(\"func\"), field.get(\"arg\"));\n    } else {\n      // it's field func\n      return getFuncConfig(config, field.get(\"func\"));\n    }\n  }\n\n  const fieldConfig = getFieldRawConfig(config, field);\n  if (!fieldConfig)\n    return null; //throw new Error(\"Can't find field \" + field + \", please check your config\");\n\n  //merge, but don't merge operators (rewrite instead)\n  const typeConfig = config.types[fieldConfig.type] || {};\n  let ret = mergeWith({}, typeConfig, fieldConfig || {}, mergeCustomizerNoArrays);\n\n  return ret;\n};\n\nexport const getOperatorConfig = (config, operator, field = null) => {\n  if (!operator)\n    return null;\n  const opConfig = config.operators[operator];\n  if (field) {\n    const fieldConfig = getFieldConfig(config, field);\n    const widget = getWidgetForFieldOp(config, field, operator, null);\n    const widgetConfig = config.widgets[widget] || {};\n    const fieldWidgetConfig = (fieldConfig && fieldConfig.widgets ? fieldConfig.widgets[widget] : {}) || {};\n    const widgetOpProps = (widgetConfig.opProps || {})[operator];\n    const fieldWidgetOpProps = (fieldWidgetConfig.opProps || {})[operator];\n    const mergedOpConfig = merge({}, opConfig, widgetOpProps, fieldWidgetOpProps);\n    return mergedOpConfig;\n  } else {\n    return opConfig;\n  }\n};\n\nexport const getFieldWidgetConfig = (config, field, operator, widget = null, valueSrc = null) => {\n  if (!field)\n    return null;\n  if (!(operator || widget) && valueSrc !== \"const\" && field !== \"!case_value\")\n    return null;\n  const fieldConfig = getFieldConfig(config, field);\n  if (!widget)\n    widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n  const widgetConfig = config.widgets[widget] || {};\n  const fieldWidgetConfig = (fieldConfig && fieldConfig.widgets ? fieldConfig.widgets[widget] : {}) || {};\n  const fieldWidgetProps = (fieldWidgetConfig.widgetProps || {});\n  const valueFieldSettings = (valueSrc === \"value\" || !valueSrc) && fieldConfig?.fieldSettings || {}; // useful to take 'validateValue'\n  const mergedConfig = merge({}, widgetConfig, fieldWidgetProps, valueFieldSettings);\n  return mergedConfig;\n};\n\nexport const getFirstField = (config, parentRuleGroupPath = null) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parentPathArr = getFieldParts(parentRuleGroupPath, config);\n  const parentField = parentRuleGroupPath ? getFieldRawConfig(config, parentRuleGroupPath) : config;\n\n  let firstField = parentField, key = null, keysPath = [];\n  do {\n    const subfields = firstField === config ? config.fields : firstField?.subfields;\n    if (!subfields || !Object.keys(subfields).length) {\n      firstField = key = null;\n      break;\n    }\n    key = Object.keys(subfields)[0];\n    keysPath.push(key);\n    firstField = subfields[key];\n  } while (firstField.type == \"!struct\" || firstField.type == \"!group\");\n  return (parentPathArr || []).concat(keysPath).join(fieldSeparator);\n};\n","import {getOpCardinality} from \"../utils/stuff\";\nimport {getFieldConfig, getOperatorConfig} from \"../utils/configUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {formatFieldName} from \"../utils/ruleUtils\";\nimport {Map} from \"immutable\";\n\n/*\n Build tree to http://querybuilder.js.org/ like format\n\n Example:\n {\n    \"condition\": \"AND\",\n    \"rules\": [\n        {\n            \"id\": \"price\",\n            \"field\": \"price\",\n            \"type\": \"double\",\n            \"input\": \"text\",\n            \"operator\": \"less\",\n            \"value\": \"10.25\"\n        },\n        {\n            \"condition\": \"OR\",\n            \"rules\": [\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"2\"\n                },\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"1\"\n                }\n            ]\n        }\n    ]\n }\n */\n\n\nexport const queryBuilderFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: []\n  };\n  const res = formatItem(item, config, meta);\n  if (!res)\n    return undefined;\n  return {\n    ...res, \n    ...meta\n  };\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") && children && children.size) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  const id = item.get(\"id\");\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const not = properties.get(\"not\");\n\n  const resultQuery = {\n    id,\n    rules: list.toList(),\n    condition: conjunction.toUpperCase(),\n    not,\n  };\n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const id = item.get(\"id\");\n\n  const operator = properties.get(\"operator\");\n  const options = properties.get(\"operatorOptions\");\n  let field = properties.get(\"field\");\n  let value = properties.get(\"value\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let valueType = properties.get(\"valueType\");\n  const hasUndefinedValues = value.filter(v => v === undefined).size > 0;\n\n  if (field == null || operator == null || hasUndefinedValues)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const fieldType = fieldDefinition.type || \"undefined\";\n  const cardinality = getOpCardinality(operatorDefinition);\n  const typeConfig = config.types[fieldDefinition.type] || {};\n  const fieldName = formatFieldName(field, config, meta);\n\n  if (value.size < cardinality)\n    return undefined;\n\n  if (meta.usedFields.indexOf(field) == -1)\n    meta.usedFields.push(field);\n  value = value.toArray();\n  valueSrc = valueSrc.toArray();\n  valueType = valueType?.toArray() || [];\n  let values = [];\n  for (let i = 0 ; i < value.length ; i++) {\n    const val = {\n      type: valueType[i],\n      value: value[i],\n    };\n    values.push(val);\n    if (valueSrc[i] == \"field\") {\n      const secondField = value[i];\n      if (meta.usedFields.indexOf(secondField) == -1)\n        meta.usedFields.push(secondField);\n    }\n  }\n  let operatorOptions = options ? options.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n      \n  let ruleQuery = {\n    id,\n    fieldName,\n    type: fieldType,\n    input: typeConfig.mainWidget,\n    operator,\n  };\n  if (operatorOptions)\n    ruleQuery.operatorOptions = operatorOptions;\n  ruleQuery.values = values;\n  return ruleQuery;\n};\n","import {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, extendConfig, getFieldParts\n} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp, formatFieldName, completeValue} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\n\n// http://jsonlogic.com/\n\n\nexport const jsonLogicFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: [],\n    errors: []\n  };\n  \n  const extendedConfig = extendConfig(config, undefined, false);\n  const logic = formatItem(item, extendedConfig, meta, true);\n  \n  // build empty data\n  const {errors, usedFields} = meta;\n  const {fieldSeparator} = extendedConfig.settings;\n  let data = {};\n  for (let ff of usedFields) {\n    //const fieldSrc = typeof ff === \"string\" ? \"field\" : \"func\";\n    const parts = getFieldParts(ff, config);\n    const def = getFieldConfig(extendedConfig, ff) || {};\n    let tmp = data;\n    for (let i = 0 ; i < parts.length ; i++) {\n      const p = parts[i];\n      const pdef = getFieldConfig(extendedConfig, parts.slice(0, i + 1)) || {};\n      if (i != parts.length - 1) {\n        if (pdef.type == \"!group\" && pdef.mode != \"struct\") {\n          if (!tmp[p])\n            tmp[p] = [{}];\n          tmp = tmp[p][0];\n        } else {\n          if (!tmp[p])\n            tmp[p] = {};\n          tmp = tmp[p];\n        }\n      } else {\n        if (!tmp[p])\n          tmp[p] = null; // can use def.type for sample values\n      }\n    }\n  }\n    \n  return {\n    errors,\n    logic,\n    data,\n  };\n};\n\n\nconst formatItem = (item, config, meta, isRoot, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const isLocked = properties.get(\"isLocked\");\n  const {lockedOp} = config.settings.jsonLogic;\n  let ret;\n  if (type === \"group\" || type === \"rule_group\") {\n    ret = formatGroup(item, config, meta, isRoot, parentField);\n  } else if (type === \"rule\") {\n    ret = formatRule(item, config, meta, parentField);\n  }\n  if (isLocked && ret && lockedOp) {\n    ret = { [lockedOp] : ret };\n  }\n  return ret;\n};\n\n\nconst formatGroup = (item, config, meta, isRoot, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n  \n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const conj = conjunctionDefinition.jsonLogicConj || conjunction.toLowerCase();\n  const not = properties.get(\"not\");\n\n  const isRuleGroup = (type === \"rule_group\" && !isRoot);\n  const groupField = isRuleGroup && mode != \"struct\" ? field : parentField;\n  const groupOperator = properties.get(\"operator\");\n  const groupOperatorDefinition = groupOperator && getOperatorConfig(config, groupOperator, field) || null;\n  const formattedValue = formatItemValue(config, properties, meta, groupOperator, parentField);\n  const isGroup0 = isRuleGroup && (!groupOperator || groupOperatorDefinition.cardinality == 0);\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, false, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  \n  if (isRuleGroup && mode != \"struct\" && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size)\n      return undefined;\n  }\n\n  let resultQuery = {};\n  if (list.size == 1 && !isRoot)\n    resultQuery = list.first();\n  else\n    resultQuery[conj] = list.toList().toJS();\n  \n  // revert\n  if (not) {\n    resultQuery = { \"!\": resultQuery };\n  }\n\n  // rule_group (issue #246)\n  if (isRuleGroup && mode != \"struct\") {\n    const formattedField = formatField(meta, config, field, parentField);\n    if (isGroup0) {\n      // config.settings.groupOperators\n      const op = groupOperator || \"some\";\n      resultQuery = {\n        [op]: [\n          formattedField,\n          resultQuery\n        ]\n      };\n    } else {\n      // there is rule for count\n      const filter = !list.size \n        ? formattedField\n        : {\n          \"filter\": [\n            formattedField,\n            resultQuery\n          ]\n        };\n      const count = {\n        \"reduce\": [\n          filter,\n          { \"+\": [1, { var: \"accumulator\" }] },\n          0\n        ]\n      };\n      resultQuery = formatLogic(config, properties, count, formattedValue, groupOperator);\n    }\n  }\n  \n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  operatorOptions = operatorOptions ? operatorOptions.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDefinition.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field) || {};\n\n  // check op\n  let isRev = false;\n  if (!operatorDefinition.jsonLogic && !revOperatorDefinition.jsonLogic) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!operatorDefinition.jsonLogic && revOperatorDefinition.jsonLogic) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n  }\n\n  const formattedValue = formatItemValue(config, properties, meta, operator, parentField);\n  if (formattedValue === undefined)\n    return undefined;\n\n  const formattedField\n    = fieldSrc === \"func\"\n      ? formatFunc(meta, config, field, parentField)\n      : formatField(meta, config, field, parentField);\n  if (formattedField === undefined)\n    return undefined;\n\n  return formatLogic(config, properties, formattedField, formattedValue, operator, operatorOptions, fieldDefinition, isRev);\n};\n\n\nconst formatItemValue = (config, properties, meta, operator, parentField) => {\n  const field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const cardinality = getOpCardinality(operatorDefinition);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (iValue == undefined)\n    return undefined;\n  \n  let valueSrcs = [];\n  let valueTypes = [];\n  let oldUsedFields = meta.usedFields;\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDef = omit( getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"] );\n    const fv = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDefinition, operator, operatorDefinition, parentField, asyncListValues\n    );\n    if (fv !== undefined) {\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (fvalue.size < cardinality || hasUndefinedValues) {\n    meta.usedFields = oldUsedFields; // restore\n    return undefined;\n  }\n  return cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else if (typeof fieldWidgetDef.jsonLogic === \"function\") {\n    const fn = fieldWidgetDef.jsonLogic;\n    const args = [\n      currentValue,\n      {\n        ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n        asyncListValues\n      },\n      //useful options: valueFormat for date/time\n      omit(fieldWidgetDef, widgetDefKeysToOmit),\n    ];\n    if (operator) {\n      args.push(operator);\n      args.push(operatorDef);\n    }\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    ret = currentValue;\n  }\n  return ret;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  if (!funcConfig?.jsonLogic) {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = omit( getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc), [\"factory\"] );\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, null, null, parentField\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = omit( getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc), [\"factory\"] );\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, null, null, parentField\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n\n  const formattedArgsArr = Object.values(formattedArgs);\n  let ret;\n  if (typeof funcConfig.jsonLogic === \"function\") {\n    const fn = funcConfig.jsonLogic;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const funcName = funcConfig.jsonLogic || funcLastKey;\n    const isMethod = !!funcConfig.jsonLogicIsMethod;\n    if (isMethod) {\n      const [obj, ...params] = formattedArgsArr;\n      if (params.length) {\n        ret = { \"method\": [ obj, funcName, params ] };\n      } else {\n        ret = { \"method\": [ obj, funcName ] };\n      }\n    } else {\n      ret = { [funcName]: formattedArgsArr };\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (meta, config, field, parentField = null) => {\n  const {fieldSeparator, jsonLogic} = config.settings;\n\n  let ret;\n  if (field) {\n    if (Array.isArray(field))\n      field = field.join(fieldSeparator);\n    const fieldDef = getFieldConfig(config, field) || {};\n    const fieldName = formatFieldName(field, config, meta, parentField);\n\n    let varName = fieldDef.jsonLogicVar || (fieldDef.type == \"!group\" ? jsonLogic.groupVarKey : \"var\");\n    ret = { [varName] : fieldName };\n    if (meta.usedFields.indexOf(field) == -1)\n      meta.usedFields.push(field);\n  }\n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, formattedField, formattedValue) => {\n  let formatteOp = operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  const isReverseArgs = operatorDefinition._jsonLogicIsRevArgs ?? false;\n  if (typeof operatorDefinition.jsonLogic == \"string\")\n    formatteOp = operatorDefinition.jsonLogic;\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  const eqOps = [\"==\", \"!=\"];\n  const fn = (field, op, val, opDef, opOpts) => {\n    if (cardinality == 0 && eqOps.includes(formatteOp))\n      return { [formatteOp]: [formattedField, null] };\n    else if (cardinality == 0)\n      return { [formatteOp]: formattedField };\n    else if (cardinality == 1 && isReverseArgs)\n      return { [formatteOp]: [formattedValue, formattedField] };\n    else if (cardinality == 1)\n      return { [formatteOp]: [formattedField, formattedValue] };\n    else if (cardinality == 2 && rangeOps.includes(formatteOp))\n      return { [formatteOp]: [formattedValue[0], formattedField, formattedValue[1]] };\n    else\n      return { [formatteOp]: [formattedField, ...formattedValue] };\n  };\n  return fn;\n};\n\nconst formatLogic = (config, properties, formattedField, formattedValue, operator, operatorOptions = null, fieldDefinition = null, isRev = false) => {\n  const field = properties.get(\"field\");\n  //const fieldSrc = properties.get(\"fieldSrc\");\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let fn = typeof operatorDefinition.jsonLogic == \"function\" \n    ? operatorDefinition.jsonLogic \n    : buildFnToFormatOp(operator, operatorDefinition, formattedField, formattedValue);\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    omit(operatorDefinition, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n  ];\n  let ruleQuery = fn.call(config.ctx, ...args);\n\n  if (isRev) {\n    ruleQuery = { \"!\": ruleQuery };\n  }\n\n  return ruleQuery;\n};\n","import {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, extendConfig,\n} from \"../utils/configUtils\";\nimport {getFieldPathLabels, getWidgetForFieldOp, formatFieldName, completeValue} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {List, Map} from \"immutable\";\n\n\n// helpers\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const mongodbFormat = (tree, config) => {\n  return _mongodbFormat(tree, config, false);\n};\n\nexport const _mongodbFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem([], tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to MongoDb:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(parents, item, config, meta, _not, _canWrapExpr, _formatFieldName, _value);\n  } else if (type === \"rule\") {\n    return formatRule(parents, item, config, meta, _not, _canWrapExpr, _formatFieldName, _value);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\") || new List();\n  const {canShortMongoQuery, fieldSeparator} = config.settings;\n  const sep = fieldSeparator;\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  const groupField = type === \"rule_group\" ? properties.get(\"field\") : null;\n  const groupOperator = type === \"rule_group\" ? properties.get(\"operator\") : null;\n  const groupOperatorCardinality = groupOperator ? config.operators[groupOperator]?.cardinality ?? 1 : undefined;\n  const groupFieldName = formatFieldName(groupField, config, meta, realParentPath);\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode; //properties.get(\"mode\");\n  const canHaveEmptyChildren = groupField && mode === \"array\" && groupOperatorCardinality >= 1;\n\n  const not = _not ? !(properties.get(\"not\")) : (properties.get(\"not\"));\n  const list = children\n    .map((currentChild) => formatItem(\n      [...parents, item], currentChild, config, meta, not, mode != \"array\", mode == \"array\" ? (f => `$$el${sep}${f}`) : undefined)\n    )\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  let conjunctionDefinition = config.conjunctions[conjunction];\n  const reversedConj = conjunctionDefinition.reversedConj;\n  if (not && reversedConj) {\n    conjunction = reversedConj;\n    conjunctionDefinition = config.conjunctions[conjunction];\n  }\n  if (!conjunctionDefinition)\n    return undefined;\n  const mongoConj = conjunctionDefinition.mongoConj;\n\n  let resultQuery;\n  if (list.size == 1) {\n    resultQuery = list.first();\n  } else if (list.size > 1) {\n    const rules = list.toList().toJS();\n    const canShort = canShortMongoQuery && (mongoConj == \"$and\");\n    if (canShort) {\n      resultQuery = rules.reduce((acc, rule) => {\n        if (!acc) return undefined;\n        for (let k in rule) {\n          if (k[0] == \"$\") {\n            acc = undefined;\n            break;\n          }\n          if (acc[k] == undefined) {\n            acc[k] = rule[k];\n          } else {\n            // https://github.com/ukrbublik/react-awesome-query-builder/issues/182\n            let prev = acc[k], next = rule[k];\n            if (!isObject(prev)) {\n              prev = {\"$eq\": prev};\n            }\n            if (!isObject(next)) {\n              next = {\"$eq\": next};\n            }\n            const prevOp = Object.keys(prev)[0], nextOp = Object.keys(next)[0];\n            if (prevOp == nextOp) {\n              acc = undefined;\n              break;\n            }\n            acc[k] = Object.assign({}, prev, next);\n          }\n        }\n        return acc;\n      }, {});\n    }\n    if (!resultQuery) // can't be shorten\n      resultQuery = { [mongoConj] : rules };\n  }\n\n  if (groupField) {\n    if (mode == \"array\") {\n      const totalQuery = {\n        \"$size\": {\n          \"$ifNull\": [\n            \"$\" + groupFieldName,\n            []\n          ]\n        }\n      };\n      const filterQuery = resultQuery ? {\n        \"$size\": {\n          \"$ifNull\": [\n            {\n              \"$filter\": {\n                input: \"$\" + groupFieldName,\n                as: \"el\",\n                cond: resultQuery\n              }\n            },\n            []\n          ]\n        }\n      } : totalQuery;\n      resultQuery = formatItem(\n        parents, item.set(\"type\", \"rule\"), config, meta, false, false, (_f => filterQuery), totalQuery\n      );\n      resultQuery = { \"$expr\": resultQuery };\n    } else {\n      resultQuery = { [groupFieldName]: {\"$elemMatch\": resultQuery} };\n    }\n  }\n  return resultQuery;\n};\n\n\nconst formatRule = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  const properties = item.get(\"properties\") || new Map();\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  const iValue = properties.get(\"value\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  if (field == null || operator == null || iValue === undefined)\n    return undefined;\n\n  const fieldDef = getFieldConfig(config, field) || {};\n  let operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDefinition.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = getOpCardinality(operatorDefinition);\n\n  let not = _not;\n  if (not && reversedOp) {\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n    not = false;\n  }\n\n  let formattedField;\n  let useExpr = false;\n  if (fieldSrc == \"func\") {\n    [formattedField, useExpr] = formatFunc(meta, config, field, realParentPath);\n  } else {\n    formattedField = formatFieldName(field, config, meta, realParentPath);\n    if (_formatFieldName) {\n      useExpr = true;\n      formattedField = _formatFieldName(formattedField);\n    }\n  }\n  if (formattedField == undefined)\n    return undefined;\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n      const [fv, fvUseExpr] = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, realParentPath,  operator, operatorDefinition, asyncListValues\n      );\n      if (fv !== undefined) {\n        useExpr = useExpr || fvUseExpr;\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (fvalue.size < cardinality || hasUndefinedValues)\n      return undefined;\n    formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n  }\n  const wrapExpr = useExpr && _canWrapExpr;\n\n  //build rule\n  const fn = operatorDefinition.mongoFormatOp;\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  const args = [\n    formattedField,\n    operator,\n    _value !== undefined && formattedValue == null ? _value : formattedValue,\n    useExpr,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(operatorDefinition, opDefKeysToOmit),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ruleQuery = fn.call(config.ctx, ...args);\n  if (wrapExpr) {\n    ruleQuery = { \"$expr\": ruleQuery };\n  }\n  if (not) {\n    ruleQuery = { \"$not\": ruleQuery };\n  }\n  return ruleQuery;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, parentPath, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return [undefined, false];\n\n  let ret;\n  let useExpr = false;\n\n  if (valueSrc == \"field\") {\n    [ret, useExpr] = formatRightField(meta, config, currentValue, parentPath);\n  } else if (valueSrc == \"func\") {\n    [ret, useExpr] = formatFunc(meta, config, currentValue, parentPath);\n  } else {\n    if (typeof fieldWidgetDef.mongoFormatValue === \"function\") {\n      const fn = fieldWidgetDef.mongoFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = currentValue;\n    }\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatRightField = (meta, config, rightField, parentPath) => {\n  const {fieldSeparator} = config.settings;\n  let ret;\n  const useExpr = true;\n\n  if (rightField) {\n    const rightFieldDefinition = getFieldConfig(config, rightField) || {};\n    const fieldParts = getFieldParts(rightField, config);\n    const fieldPartsLabels = getFieldPathLabels(rightField, config);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n    const formatFieldFn = config.settings.formatField;\n    const rightFieldName = formatFieldName(rightField, config, meta, parentPath);\n    const formattedField = formatFieldFn(rightFieldName, fieldParts, fieldFullLabel, rightFieldDefinition, config, false);\n    ret = \"$\" + formattedField;\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentPath) => {\n  const useExpr = true;\n  let ret;\n\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return [undefined, false];\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = funcConfig.mongoFunc || funcLastKey;\n  const mongoArgsAsObject = funcConfig.mongoArgsAsObject;\n\n  let formattedArgs = {};\n  let argsCnt = 0;\n  let lastArg = undefined;\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    argsCnt++;\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = omit(getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc), [\"factory\"]);\n    const [formattedArgVal, _argUseExpr] = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return [undefined, false];\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = omit( getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc), [\"factory\"] );\n      let _;\n      ([formattedDefaultVal, _] = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n      ));\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return [undefined, false];\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n      lastArg = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return [undefined, false]; // incomplete\n  }\n\n  if (typeof funcConfig.mongoFormatFunc === \"function\") {\n    const fn = funcConfig.mongoFormatFunc;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.mongoFormatFunc === null) {\n    meta.errors.push(`Functon ${funcName} is not supported`);\n    return [undefined, false];\n  } else {\n    if (mongoArgsAsObject)\n      ret = { [funcName]: formattedArgs };\n    else if (argsCnt == 1 && lastArg !== undefined)\n      ret = { [funcName]: lastArg };\n    else\n      ret = { [funcName]: Object.values(formattedArgs) };\n  }\n\n  return [ret, useExpr];\n};\n\n\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, extendConfig,\n} from \"../utils/configUtils\";\nimport {\n  getFieldPathLabels, getWidgetForFieldOp, formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {getOpCardinality, widgetDefKeysToOmit, opDefKeysToOmit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport {SqlString} from \"../utils/export\";\n\nexport const sqlFormat = (tree, config) => {\n  return _sqlFormat(tree, config, false);\n};\n\nexport const _sqlFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SQL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  const groupField = isRuleGroup ? properties.get(\"field\") : null;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode;\n  if (mode == \"array\") {\n    meta.errors.push(`Aggregation is not supported for ${groupField}`);\n  }\n\n  const not = properties.get(\"not\");\n  const canHaveEmptyChildren = false; //isRuleGroup && mode == \"array\";\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  return conjunctionDefinition.sqlFormatConj(list, conjunction, not);\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const sqlOp = operatorDefinition.sqlOp || operator;\n  const cardinality = getOpCardinality(operatorDefinition);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, value, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp} ${value}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values?.first?.();\n      const valTo = values?.get?.(1);\n      return `${field} ${sqlOp} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = getOpCardinality(opDef);\n\n  // check op\n  let isRev = false;\n  const canFormatOp = opDef.sqlOp || opDef.sqlFormatOp;\n  const canFormatRevOp = revOpDef.sqlOp || revOpDef.sqlFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDefinition = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n      let fv = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDefinition, fieldDefinition, operator, opDef, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (hasUndefinedValues || fvalue.size < cardinality)\n      return undefined;\n    formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n  }\n\n  //find fn to format expr\n  const fn = opDef.sqlFormatOp || buildFnToFormatOp(operator, opDef);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n      \n  //format field\n  const formattedField = fieldSrc == \"func\"\n    ? formatFunc(meta, config, field)\n    : formatField(meta, config, field);\n  if (formattedField == undefined)\n    return undefined;\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n  ];\n\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n  if (isRev) {\n    ret = config.settings.sqlFormatReverse(ret);\n  }\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrcs.join(\", \")}`);\n    return undefined;\n  }\n  return ret;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue);\n  } else {\n    if (typeof fieldWidgetDef.sqlFormatValue === \"function\") {\n      const fn = fieldWidgetDef.sqlFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      if (Array.isArray(currentValue)) {\n        ret = currentValue.map(v => SqlString.escape(v));\n      } else {\n        ret = SqlString.escape(currentValue);\n      }\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsLabels = getFieldPathLabels(field, config);\n  const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n  const formatFieldFn = config.settings.formatField;\n  const fieldName = formatFieldName(field, config, meta, null, {useTableName: true});\n  const formattedField = formatFieldFn(fieldName, fieldParts, fieldFullLabel, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue) => {\n  const funcKey = currentValue.get?.(\"func\");\n  const args = currentValue.get?.(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = funcConfig.sqlFunc || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    let argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    if (argValueSrc !== \"func\" && argValue?.toJS) {\n      // value should not be Immutable\n      argValue = argValue.toJS();\n    }\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another incomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another incomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // incomplete\n  }\n\n  let ret;\n  if (typeof funcConfig.sqlFormatFunc === \"function\") {\n    const fn = funcConfig.sqlFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(formattedArgs)\n      .map(([k, v]) => v)\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\n\n\n/**\n * Converts a string representation of top_left and bottom_right cords to\n * a ES geo_point required for query\n *\n * @param {string} geoPointString - comma separated string of lat/lon coods\n * @returns {{top_left: {lon: number, lat: number}, bottom_right: {lon: number, lat: number}}} - ES geoPoint formatted object\n * @private\n */\nfunction buildEsGeoPoint(geoPointString) {\n  if (geoPointString == null) {\n    return null;\n  }\n\n  const coordsNumberArray = geoPointString.split(\",\").map(Number);\n  return {\n    top_left: {\n      lat: coordsNumberArray[0],\n      lon: coordsNumberArray[1]\n    },\n    bottom_right: {\n      lat: coordsNumberArray[2],\n      lon: coordsNumberArray[3]\n    }\n  };\n}\n\n/**\n * Converts a dateTime string from the query builder to a ES range formatted object\n *\n * @param {string} dateTime - dateTime formatted string\n * @param {string} operator - query builder operator type, see constants.js and query builder docs\n * @returns {{lt: string}|{lte: string}|{gte: string}|{gte: string, lte: string}|undefined} - ES range query parameter\n *\n * @private\n */\nfunction buildEsRangeParameters(value, operator) {\n  // -- if value is greater than 1 then we assume this is a between operator : BUG this is wrong, a selectable list can have multiple values\n  if (value.length > 1) {\n    return {\n      gte: \"\".concat(value[0]),\n      lte: \"\".concat(value[1])\n    };\n  } // -- if value is only one we assume this is a date time query for a specific day\n\n  const dateTime = value[0]; //TODO: Rethink about this part, what if someone adds a new type of opperator\n\n  //todo: move this logic into config\n  switch (operator) {\n  case \"on_date\": //todo: not used\n  case \"not_on_date\":\n  case \"equal\":\n  case \"select_equals\":\n  case \"not_equal\":\n    return {\n      gte: \"\".concat(dateTime, \"||/d\"),\n      lte: \"\".concat(dateTime, \"||+1d\")\n    };\n\n  case \"less_or_equal\":\n    return {\n      lte: \"\".concat(dateTime)\n    };\n\n  case \"greater_or_equal\":\n    return {\n      gte: \"\".concat(dateTime)\n    };\n\n  case \"less\":\n    return {\n      lt: \"\".concat(dateTime)\n    };\n\n  case \"greater\":\n    return {\n      gt: \"\".concat(dateTime)\n    };\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Builds the DSL parameters for a Wildcard query\n *\n * @param {string} value - The match value\n * @returns {{value: string}} - The value = value parameter surrounded with * on each end\n * @private\n */\nfunction buildEsWildcardParameters(value) {\n  return {\n    value: \"*\" + value + \"*\"\n  };\n}\n\n/**\n * Takes the match type string from awesome query builder like 'greater_or_equal' and\n * returns the ES occurrence required for bool queries\n *\n * @param {string} combinator - query group type or rule condition\n * @param {bool} not\n * @returns {string} - ES occurrence type. See constants.js\n * @private\n */\nfunction determineOccurrence(combinator, not) {\n  //todo: move into config, like mongoConj\n  switch (combinator) {\n  case \"AND\":\n    return not ? \"must_not\" : \"must\";\n    // -- AND\n\n  case \"OR\":\n    return not ? \"should_not\" : \"should\";\n    // -- OR\n\n  case \"NOT\":\n    return not ? \"must\" : \"must_not\";\n    // -- NOT AND\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Determines what field to query off of given the operator type\n *\n * @param {string} fieldDataType - The type of data\n * @param {string} fullFieldName - A '.' separated string containing the property lineage (including self)\n * @param {string} queryType - The query type\n * @returns {string|*} - will be either the fullFieldName or fullFieldName.keyword\n * @private\n */\n//todo: not used\n// function determineQueryField(fieldDataType, fullFieldName, queryType) {\n//   if (fieldDataType === \"boolean\") {\n//     return fullFieldName;\n//   }\n\n//   switch (queryType) {\n//   case \"term\":\n//   case \"wildcard\":\n//     return \"\".concat(fullFieldName, \".keyword\");\n\n//   case \"geo_bounding_box\":\n//   case \"range\":\n//   case \"match\":\n//     return fullFieldName;\n\n//   default:\n//     console.error(\"Can't determine query field for query type \".concat(queryType));\n//     return null;\n//   }\n// }\n\nfunction buildRegexpParameters(value) {\n  return {\n    value: value\n  };\n}\n\nfunction determineField(fieldName, config) {\n  //todo: ElasticSearchTextField - not used\n  //return config.fields[fieldName].ElasticSearchTextField || fieldName;\n  return fieldName;\n}\n\nfunction buildParameters(queryType, value, operator, fieldName, config, syntax) {\n  const textField = determineField(fieldName, config);\n  switch (queryType) {\n  case \"filter\":\n    //todo: elasticSearchScript - not used\n    return {\n      script: config.operators[operator].elasticSearchScript(fieldName, value)\n    };\n\n  case \"exists\":\n    return { field: fieldName };\n\n  case \"match\":\n    return { [textField]: value[0] };\n\n  case \"term\":\n    return syntax === ES_7_SYNTAX\n      ? { [fieldName]: {\n        value: value[0]\n      }} : { [fieldName]: value[0] };\n\n  //todo: not used\n  // need to add geo type into RAQB or remove this code\n  case \"geo_bounding_box\":\n    return { [fieldName]: buildEsGeoPoint(value[0]) };\n\n  case \"range\":\n    return { [fieldName]: buildEsRangeParameters(value, operator) };\n\n  case \"wildcard\":\n    return { [fieldName]: buildEsWildcardParameters(value[0]) };\n\n  case \"regexp\":\n    return { [fieldName]: buildRegexpParameters(value[0]) };\n\n  default:\n    return undefined;\n  }\n}\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {string} fieldName - The name of the field you are building a rule for\n * @param {string} fieldDataType - The type of data this field holds\n * @param {string} value - The value of this rule\n * @param {string} operator - The condition on how the value is matched\n * @param {string} syntax - The version of ElasticSearch syntax to generate\n * @returns {object} - The ES rule\n * @private\n */\nfunction buildEsRule(fieldName, value, operator, config, valueSrc, syntax) {\n  if (!fieldName || !operator || value == undefined)\n    return undefined; // rule is not fully entered\n  let op = operator;\n  let opConfig = config.operators[op];\n  if (!opConfig)\n    return undefined; // unknown operator\n  let { elasticSearchQueryType } = opConfig;\n\n  // not\n  let not = false;\n  if (!elasticSearchQueryType && opConfig.reversedOp) {\n    not = true;\n    op = opConfig.reversedOp;\n    opConfig = config.operators[op];\n    ({ elasticSearchQueryType } = opConfig);\n  }\n  \n  // handle if value 0 has multiple values like a select in a array\n  const widget = getWidgetForFieldOp(config, fieldName, op, valueSrc);\n  const widgetConfig = config.widgets[widget];\n  if (!widgetConfig)\n    return undefined; // unknown widget\n  const { elasticSearchFormatValue } = widgetConfig;\n\n  /** In most cases the queryType will be static however in some casese (like between) the query type will change\n   * based on the data type. i.e. a between time will be different than between number, date, letters etc... */\n  let queryType;\n  if (typeof elasticSearchQueryType === \"function\") {\n    queryType = elasticSearchQueryType(widget);\n  } else {\n    queryType = elasticSearchQueryType;\n  }\n\n  if (!queryType) {\n    // Not supported\n    return undefined;\n  }\n\n  /** If a widget has a rule on how to format that data then use that otherwise use default way of determineing search parameters\n   * */\n  let parameters;\n  if (typeof elasticSearchFormatValue === \"function\") {\n    parameters = elasticSearchFormatValue(queryType, value, op, fieldName, config);\n  } else {\n    parameters = buildParameters(queryType, value, op, fieldName, config, syntax);\n  }\n\n  if (not) {\n    return {\n      bool: {\n        must_not: {\n          [queryType]: {...parameters}\n        }\n      }\n    };\n  } else {\n    return {\n      [queryType]: {...parameters}\n    };\n  }\n}\n\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {object} children - The contents of the group\n * @param {string} conjunction - The way the contents of the group are joined together i.e. AND OR\n * @param {bool} not\n * @param {Function} recursiveFxn - The recursive fxn to build the contents of the groups children\n * @private\n * @returns {object} - The ES group\n */\nfunction buildEsGroup(children, conjunction, not, recursiveFxn, config, syntax) {\n  if (!children || !children.size)\n    return undefined;\n  const childrenArray = children.valueSeq().toArray();\n  const occurrence = determineOccurrence(conjunction, not);\n  const result = childrenArray.map((c) => recursiveFxn(c, config, syntax)).filter(v => v !== undefined);\n  if (!result.length)\n    return undefined;\n  const resultFlat = result.flat(Infinity);\n  return {\n    bool: {\n      [occurrence]: resultFlat\n    }\n  };\n}\n\nexport const ES_7_SYNTAX = \"ES_7_SYNTAX\";\nexport const ES_6_SYNTAX = \"ES_6_SYNTAX\";\n\nexport function elasticSearchFormat(tree, config, syntax = ES_6_SYNTAX) {\n  // -- format the es dsl here\n  if (!tree) return undefined;\n  const type = tree.get(\"type\");\n  const properties = tree.get(\"properties\") || new Map();\n\n  if (type === \"rule\" && properties.get(\"field\")) {\n    // -- field is null when a new blank rule is added\n    const operator = properties.get(\"operator\");\n    const field = properties.get(\"field\");\n    const fieldSrc = properties.get(\"fieldSrc\");\n    const value = properties.get(\"value\")?.toJS();\n    const _valueType = properties.get(\"valueType\")?.get(0);\n    const valueSrc = properties.get(\"valueSrc\")?.get(0);\n\n    if (valueSrc === \"func\" || fieldSrc == \"func\") {\n      // -- elastic search doesn't support functions (that is post processing)\n      return;\n    }\n\n    if (value && Array.isArray(value[0])) {\n      //TODO : Handle case where the value has multiple values such as in the case of a list\n      return value[0].map((val) =>\n        buildEsRule(field, [val], operator, config, valueSrc, syntax)\n      );\n    } else {\n      return buildEsRule(field, value, operator, config, valueSrc, syntax);\n    }\n  }\n\n  if (type === \"group\" || type === \"rule_group\") {\n    const not = properties.get(\"not\");\n    let conjunction = properties.get(\"conjunction\");\n    if (!conjunction)\n      conjunction = defaultConjunction(config);\n    const children = tree.get(\"children1\");\n    return buildEsGroup(children, conjunction, not, elasticSearchFormat, config, syntax);\n  }\n}\n","import {sleep} from \"./stuff\";\nimport {listValuesToArray, getListValue, makeCustomListValue} from \"./listValues\";\n\n// simple polyfill for Next\nconst findLastIndex = (arr, fn) => {\n  if (arr.findLastIndex) {\n    return arr.findLastIndex(fn);\n  } else {\n    const ind = [...arr].reverse().findIndex(fn);\n    return ind == -1 ? -1 : (arr.length-1 - ind);\n  }\n};\n\nexport const simulateAsyncFetch = (all, cPageSize = 0, delay = 1000) => async (search, offset, meta) => {\n  const pageSize = meta?.pageSize != undefined ? meta.pageSize : cPageSize;\n  const filtered = listValuesToArray(all)\n    .filter(({title, value}) => search == null ? true : (\n      title.toUpperCase().indexOf(search.toUpperCase()) != -1\n      || `${value}`.toUpperCase().indexOf(search.toUpperCase()) != -1\n    ));\n  const pages = pageSize ? Math.ceil(filtered.length / pageSize) : 0;\n  const currentOffset = offset || 0;\n  const currentPage = pageSize ? Math.ceil(currentOffset / pageSize) : null;\n  const values = pageSize ? filtered.slice(currentOffset, currentOffset + pageSize) : filtered;\n  const newOffset = pageSize ? currentOffset + values.length : null;\n  const hasMore = pageSize ? (newOffset < filtered.length) : false;\n  if (delay) {\n    // console.debug(\"simulateAsyncFetch\", {\n    //   search, offset, values, hasMore, filtered\n    // });\n    await sleep(delay);\n  }\n  return {\n    values,\n    hasMore\n  };\n};\n\nexport const mergeListValues = (values, newValues, toStart = false, hideNewValues = false) => {\n  if (!newValues)\n    return values;\n  const old = values || [];\n  const newFiltered = newValues\n    .filter(v => old.find(av => \"\"+av.value == \"\"+v.value) == undefined)\n    .map(v => (hideNewValues ? {...v, isHidden: true} : v));\n  const merged = toStart ? [...newFiltered, ...old] : [...old, ...newFiltered];\n  return merged;\n};\n\nexport const optionToListValue = (val, listValues, allowCustomValues) => {\n  const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n  const item = getListValue(v, listValues);\n  const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n  const listValue = item || customItem;\n  const lvs = listValue ? [listValue] : undefined; //not allow []\n  return [v, lvs];\n};\n\nexport const optionsToListValues = (vals, listValues, allowCustomValues) => {\n  const newSelectedListValues = vals.map((val, _i) => {\n    const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n    const item = getListValue(v, listValues);\n    const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n    const listValue = item || customItem;\n    return listValue;\n  }).filter(o => o != undefined);\n  let newSelectedValues = newSelectedListValues\n    .map(o => (o?.value ?? o));\n  if (!newSelectedValues.length)\n    newSelectedValues = undefined; //not allow []\n  return [newSelectedValues, newSelectedListValues];\n};\n\nexport const listValueToOption = (lv) => {\n  if (lv == null) return null;\n  const {\n    title, value, disabled, groupTitle, grouplabel, renderTitle, children, label, isCustom, isHidden,\n    ...rest\n  } = lv;\n  let option = {\n    value,\n    title: title || label || children, // fix issue #930 for AntD\n  };\n  if (disabled)\n    option.disabled = disabled;\n  if (isCustom)\n    option.isCustom = isCustom;\n  if (isHidden)\n    option.isHidden = isHidden;\n  // group\n  if (groupTitle || grouplabel)\n    option.groupTitle = groupTitle || grouplabel;\n  // used only for MUI field autocomplete (if matchesType, render as bold)\n  if (renderTitle)\n    option.renderTitle = renderTitle;\n  option = {\n    ...option,\n    ...rest,\n  };\n  return option;\n};\n\nexport const fixListValuesGroupOrder = (listValues) => {\n  let newValues = [];\n  let groupTitles = [];\n  for (let lv of listValues) {\n    const i = findLastIndex(newValues, lv1 => {\n      return (lv1.groupTitle ?? \"\") == (lv.groupTitle ?? \"\");\n    });\n    if (lv.groupTitle != undefined && !groupTitles.includes(lv.groupTitle)) {\n      groupTitles.push(lv.groupTitle);\n      if (groupTitles.length === 1) {\n        // fix empty groupTitles\n        newValues = newValues.map(nv => ({...nv, groupTitle: \"\"}));\n      }\n    }\n    if (lv.groupTitle == undefined && groupTitles.length) {\n      // fix empty groupTitle\n      lv = {...lv, groupTitle: \"\"};\n    }\n    if (i != -1) {\n      newValues.splice(i+1, 0, lv);\n    } else {\n      newValues.push(lv);\n    }\n  }\n  return newValues;\n};\n\n\nexport { getListValue };\n","//import { customJsonLogicOperations } from \"../utils/jsonLogic\";\n\n// Tip: search for `customJsonLogicOperations` in codebase to see custom JL funcs we use in `jsonLogicCustomOps`\n\nconst NOW = {\n  label: \"Now\",\n  returnType: \"datetime\",\n  jsonLogic: \"now\",\n  jsonLogicCustomOps: {\n    now: {},\n  },\n  //spelFunc: \"new java.util.Date()\",\n  spelFunc: \"T(java.time.LocalDateTime).now()\",\n  sqlFormatFunc: () => \"NOW()\",\n  mongoFormatFunc: () => new Date(),\n  formatFunc: () => \"NOW\",\n};\n\nconst RELATIVE_DATETIME = {\n  label: \"Relative\",\n  returnType: \"datetime\",\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\"\", \"\", \"\"],\n  spelFormatFunc: ({date, op, val, dim}) => {\n    const dimPlural = dim.charAt(0).toUpperCase() + dim.slice(1) + \"s\";\n    const method = op + dimPlural;\n    return `${date}.${method}(${val})`;\n  },\n  spelImport: (spel) => {\n    let date, op, val, dim;\n    const matchRes = spel.methodName?.match(/^(minus|plus)(\\w+)s$/);\n    if (matchRes) {\n      dim = matchRes[2].toLowerCase();\n      op = matchRes[1];\n      if ([\"minus\", \"plus\"].includes(op)) {\n        if ([\"day\", \"week\", \"month\", \"year\"].includes(dim)) {\n          op = {type: \"string\", val: op};\n          dim = {type: \"string\", val: dim};\n          val = spel.args[0];\n          date = spel.obj;\n          return {date, op, val, dim};\n        }\n      }\n    }\n  },\n  jsonLogic: ({date, op, val, dim}) => ({\n    \"date_add\": [\n      date,\n      val * (op == \"minus\" ? -1 : +1),\n      dim\n    ]\n  }),\n  jsonLogicImport: (v) => {\n    const date = v[\"date_add\"][0];\n    const val = Math.abs(v[\"date_add\"][1]);\n    const op = v[\"date_add\"][1] >= 0 ? \"plus\" : \"minus\";\n    const dim = v[\"date_add\"][2];\n    return [date, op, val, dim];\n  },\n  jsonLogicCustomOps: {\n    date_add: {},\n  },\n  // MySQL\n  //todo: other SQL dialects?\n  sqlFormatFunc: ({date, op, val, dim}) => `DATE_ADD(${date}, INTERVAL ${parseInt(val) * (op == \"minus\" ? -1 : +1)} ${dim.replace(/^'|'$/g, \"\")})`,\n  mongoFormatFunc: null, //todo: support?\n  formatFunc: ({date, op, val, dim}) => (!val ? date : `${date} ${op == \"minus\" ? \"-\" : \"+\"} ${val} ${dim}`),\n  args: {\n    date: {\n      label: \"Date\",\n      type: \"datetime\",\n      defaultValue: {func: \"NOW\", args: []},\n      valueSources: [\"func\", \"field\", \"value\"],\n      spelEscapeForFormat: true,\n    },\n    op: {\n      label: \"Op\",\n      type: \"select\",\n      defaultValue: \"plus\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          plus: \"+\",\n          minus: \"-\",\n        },\n      },\n      spelEscapeForFormat: false,\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      fieldSettings: {\n        min: 0,\n      },\n      defaultValue: 0,\n      valueSources: [\"value\"],\n      spelEscapeForFormat: false,\n    },\n    dim: {\n      label: \"Dimension\",\n      type: \"select\",\n      defaultValue: \"day\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          day: \"day\",\n          week: \"week\",\n          month: \"month\",\n          year: \"year\",\n        },\n      },\n      spelEscapeForFormat: false,\n    },\n  }\n};\n\nconst LOWER = {\n  label: \"Lowercase\",\n  mongoFunc: \"$toLower\",\n  jsonLogic: \"toLowerCase\",\n  spelFunc: \"${str}.toLowerCase()\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toLowerCase: {}\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\", \"func\"],\n    },\n  }\n};\n\nconst UPPER = {\n  label: \"Uppercase\",\n  mongoFunc: \"$toUpper\",\n  jsonLogic: \"toUpperCase\",\n  spelFunc: \"${str}.toUpperCase()\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toUpperCase: {},\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\", \"func\"],\n    },\n  }\n};\n\nconst LINEAR_REGRESSION = {\n  label: \"Linear regression\",\n  returnType: \"number\",\n  formatFunc: ({coef, bias, val}, _) => `(${coef} * ${val} + ${bias})`,\n  sqlFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelImport: (spel) => {\n    let coef, val, bias, a;\n    if (spel.type === \"op-plus\") {\n      [a, bias] = spel.children;\n      if (a.type === \"op-multiply\") {\n        [coef, val] = a.children;\n        return {coef, val, bias};\n      }\n    }\n  },\n  mongoFormatFunc: ({coef, bias, val}) => ({\"$sum\": [{\"$multiply\": [coef, val]}, bias]}),\n  jsonLogic: ({coef, bias, val}) => ({ \"+\": [ {\"*\": [coef, val]}, bias ] }),\n  jsonLogicImport: (v) => {\n    const coef = v[\"+\"][0][\"*\"][0];\n    const val = v[\"+\"][0][\"*\"][1];\n    const bias = v[\"+\"][1];\n    return [coef, val, bias];\n  },\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\" * \", \" + \"],\n  args: {\n    coef: {\n      label: \"Coef\",\n      type: \"number\",\n      defaultValue: 1,\n      valueSources: [\"value\"],\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      valueSources: [\"value\", \"field\"],\n    },\n    bias: {\n      label: \"Bias\",\n      type: \"number\",\n      defaultValue: 0,\n      valueSources: [\"value\"],\n    }\n  }\n};\n\nexport {\n  LOWER,\n  UPPER,\n  NOW,\n  RELATIVE_DATETIME,\n  LINEAR_REGRESSION,\n};\n","import moment from \"moment\";\nimport {\n  SqlString, sqlEmptyValue, mongoEmptyValue, spelEscape, spelFixList,\n  stringifyForDisplay\n} from \"../utils/export\";\nimport {escapeRegExp} from \"../utils/stuff\";\nimport {getTitleInListValues} from \"../utils/listValues\";\n\n// helpers for mongo format\nexport const mongoFormatOp1 = (mop, mc, not,  field, _op, value, useExpr, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  const mv = mc(value, fieldDef);\n  if (mv === undefined)\n    return undefined;\n  if (not) {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: { \"$ne\": mv } }; // short form\n    return !useExpr\n      ? { [field]: { \"$not\": { [mop]: mv } } } \n      : { \"$not\": { [mop]: [$field, mv] } };\n  } else {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: mv }; // short form\n    return !useExpr\n      ? { [field]: { [mop]: mv } } \n      : { [mop]: [$field, mv] };\n  }\n};\n\nexport const mongoFormatOp2 = (mops, not,  field, _op, values, useExpr, valueSrcs, valueTypes, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  if (not) {\n    return !useExpr\n      ? { [field]: { \"$not\": { [mops[0]]: values[0], [mops[1]]: values[1] } } } \n      : {\"$not\":\n                {\"$and\": [\n                  { [mops[0]]: [ $field, values[0] ] },\n                  { [mops[1]]: [ $field, values[1] ] },\n                ]}\n      };\n  } else {\n    return !useExpr\n      ? { [field]: { [mops[0]]: values[0], [mops[1]]: values[1] } } \n      : {\"$and\": [\n        { [mops[0]]: [ $field, values[0] ] },\n        { [mops[1]]: [ $field, values[1] ] },\n      ]};\n  }\n};\n\nconst ctx = {\n  utils: {\n    SqlString,\n    moment,\n    mongoFormatOp1,\n    mongoFormatOp2,\n    mongoEmptyValue,\n    escapeRegExp,\n    sqlEmptyValue,\n    stringifyForDisplay,\n    getTitleInListValues,\n    spelEscape,\n    spelFixList,\n  },\n};\n\nexport default ctx;\n","import {settings as defaultSettings} from \"./default\";\nimport ctx from \"./ctx\";\n\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  AND: {\n    label: \"And\",\n    mongoConj: \"$and\",\n    jsonLogicConj: \"and\",\n    sqlConj: \"AND\",\n    spelConj: \"and\",\n    spelConjs: [\"and\", \"&&\"],\n    reversedConj: \"OR\",\n    formatConj: (children, conj, not, isForDisplay) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"AND\" : \"&&\") + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: (children, conj, not) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"AND\" + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    spelFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"&&\" + \" \") + (omitBrackets ? \"\" : \")\")\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n  },\n  OR: {\n    label: \"Or\",\n    mongoConj: \"$or\",\n    jsonLogicConj: \"or\",\n    sqlConj: \"OR\",\n    spelConj: \"or\",\n    spelConjs: [\"or\", \"||\"],\n    reversedConj: \"AND\",\n    formatConj: (children, conj, not, isForDisplay) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"OR\" : \"||\") + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: (children, conj, not) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"OR\" + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    spelFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"||\" + \" \") + (omitBrackets ? \"\" : \")\")\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n  },\n};\n\n//----------------------------  operators\n\n\n\nconst operators = {\n  equal: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    reversedOp: \"not_equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      const opStr = isForDisplay ? \"=\" : opDef.label;\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `NOT ${field}` : `${field}`;\n      else\n        return `${field} ${opStr} ${value}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  not_equal: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    reversedOp: \"equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `${field}` : `NOT ${field}`;\n      else\n        return `${field} ${opDef.label} ${value}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    jsonLogic: \"!=\",\n  },\n  less: {\n    label: \"<\",\n    labelForFormat: \"<\",\n    sqlOp: \"<\",\n    spelOp: \"<\",\n    spelOps: [\"<\", \"lt\"],\n    reversedOp: \"greater_or_equal\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$lt\", v => v, false, ...args); },\n    jsonLogic: \"<\",\n    elasticSearchQueryType: \"range\",\n  },\n  less_or_equal: {\n    label: \"<=\",\n    labelForFormat: \"<=\",\n    sqlOp: \"<=\",\n    spelOp: \"<=\",\n    spelOps: [\"<=\", \"le\"],\n    reversedOp: \"greater\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$lte\", v => v, false, ...args); },\n    jsonLogic: \"<=\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater: {\n    label: \">\",\n    labelForFormat: \">\",\n    sqlOp: \">\",\n    spelOp: \">\",\n    spelOps: [\">\", \"gt\"],\n    reversedOp: \"less_or_equal\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gt\", v => v, false, ...args); },\n    jsonLogic: \">\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater_or_equal: {\n    label: \">=\",\n    labelForFormat: \">=\",\n    sqlOp: \">=\",\n    spelOp: \">=\",\n    spelOps: [\">=\", \"ge\"],\n    reversedOp: \"less\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gte\", v => v, false, ...args); },\n    jsonLogic: \">=\",\n    elasticSearchQueryType: \"range\",\n  },\n  like: {\n    label: \"Contains\",\n    labelForFormat: \"Contains\",\n    reversedOp: \"not_like\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.contains(${1})\",\n    valueTypes: [\"text\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined), false, ...args); },\n    //jsonLogic: (field, op, val) => ({ \"in\": [val, field] }),\n    jsonLogic: \"in\",\n    _jsonLogicIsRevArgs: true,\n    valueSources: [\"value\"],\n    elasticSearchQueryType: \"regexp\",\n  },\n  not_like: {\n    isNotOp: true,\n    label: \"Not contains\",\n    reversedOp: \"like\",\n    labelForFormat: \"Not Contains\",\n    sqlOp: \"NOT LIKE\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined), true, ...args); },\n    valueSources: [\"value\"],\n  },\n  starts_with: {\n    label: \"Starts with\",\n    labelForFormat: \"Starts with\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.startsWith(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? \"^\" + this.utils.escapeRegExp(v) : undefined), false, ...args); },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  ends_with: {\n    label: \"Ends with\",\n    labelForFormat: \"Ends with\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.endsWith(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) + \"$\" : undefined), false, ...args); },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  between: {\n    label: \"Between\",\n    labelForFormat: \"BETWEEN\",\n    sqlOp: \"BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], false, ...args); },\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"not_between\",\n    jsonLogic: \"<=\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1];\n      }\n      return null;\n    },\n    elasticSearchQueryType: function elasticSearchQueryType(type) {\n      return type === \"time\" ? \"filter\" : \"range\";\n    },\n  },\n  not_between: {\n    isNotOp: true,\n    label: \"Not between\",\n    labelForFormat: \"NOT BETWEEN\",\n    sqlOp: \"NOT BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} NOT BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], true, ...args); },\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"between\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1];\n      }\n      return null;\n    },\n  },\n  is_empty: {\n    label: \"Is empty\",\n    labelForFormat: \"IS EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_not_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS EMPTY` : `!${field}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) = ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is empty or null\n      return `${field} <= ''`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null], false, ...args); },\n    jsonLogic: \"!\",\n  },\n  is_not_empty: {\n    isNotOp: true,\n    label: \"Is not empty\",\n    labelForFormat: \"IS NOT EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT EMPTY` : `!!${field}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) <> ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is not empty and not null\n      return `${field} > ''`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$nin\", (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null], false, ...args); },\n    jsonLogic: \"!!\",\n    elasticSearchQueryType: \"exists\",\n  },\n  is_null: {\n    label: \"Is null\",\n    labelForFormat: \"IS NULL\",\n    sqlOp: \"IS NULL\",\n    cardinality: 0,\n    reversedOp: \"is_not_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NULL` : `!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} == null`;\n    },\n    // check if value is null OR not exists\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => null, false, ...args); },\n    jsonLogic: \"==\",\n  },\n  is_not_null: {\n    label: \"Is not null\",\n    labelForFormat: \"IS NOT NULL\",\n    sqlOp: \"IS NOT NULL\",\n    cardinality: 0,\n    reversedOp: \"is_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT NULL` : `!!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} != null`;\n    },\n    // check if value exists and is not null\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => null, false, ...args); },\n    jsonLogic: \"!=\",\n    elasticSearchQueryType: \"exists\",\n  },\n  select_equals: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      return `${field} ${opStr} ${value}`;\n    },\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    reversedOp: \"select_not_equals\",\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_equals: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} != ${value}`;\n    },\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    reversedOp: \"select_equals\",\n    jsonLogic: \"!=\",\n  },\n  select_any_in: {\n    label: \"Any in\",\n    labelForFormat: \"IN\",\n    sqlOp: \"IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} IN (${values.join(\", \")})`;\n      else\n        return `${field} IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    valueTypes: [\"multiselect\"],\n    spelOp: \"${1}.contains(${0})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", v => v, false, ...args); },\n    reversedOp: \"select_not_any_in\",\n    jsonLogic: \"in\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_any_in: {\n    isNotOp: true,\n    label: \"Not in\",\n    labelForFormat: \"NOT IN\",\n    sqlOp: \"NOT IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT IN (${values.join(\", \")})`;\n      else\n        return `${field} NOT IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} NOT IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$nin\", v => v, false, ...args); },\n    reversedOp: \"select_any_in\",\n  },\n  // it's not \"contains all\", but \"contains any\" operator\n  multiselect_contains: {\n    label: \"Contains\",\n    labelForFormat: \"CONTAINS\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_not_contains\",\n    jsonLogic2: \"some-in\",\n    jsonLogic: (field, op, vals) => ({\n      \"some\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    //spelOp: \"${0}.containsAll(${1})\",\n    spelOp: \"T(CollectionUtils).containsAny(${0}, ${1})\",\n    elasticSearchQueryType: \"term\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", v => v, false, ...args); },\n  },\n  multiselect_not_contains: {\n    isNotOp: true,\n    label: \"Not contains\",\n    labelForFormat: \"NOT CONTAINS\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} NOT CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_contains\"\n  },\n  multiselect_equals: {\n    label: \"Equals\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      if (valueSrc == \"value\")\n        return `${field} ${opStr} [${values.join(\", \")}]`;\n      else\n        return `${field} ${opStr} ${values}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} = '${values.map(v => this.utils.SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    spelOp: \"${0}.equals(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    reversedOp: \"multiselect_not_equals\",\n    jsonLogic2: \"all-in\",\n    jsonLogic: (field, op, vals) => ({\n      // it's not \"equals\", but \"includes\" operator - just for example\n      \"all\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    elasticSearchQueryType: \"term\",\n  },\n  multiselect_not_equals: {\n    isNotOp: true,\n    label: \"Not equals\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} != [${values.join(\", \")}]`;\n      else\n        return `${field} != ${values}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} != '${values.map(v => this.utils.SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    reversedOp: \"multiselect_equals\",\n  },\n  proximity: {\n    label: \"Proximity search\",\n    cardinality: 2,\n    valueLabels: [\n      { label: \"Word 1\", placeholder: \"Enter first word\" },\n      { label: \"Word 2\", placeholder: \"Enter second word\" },\n    ],\n    textSeparators: [\n      //'Word 1',\n      //'Word 2'\n    ],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const prox = operatorOptions.get(\"proximity\");\n      return `${field} ${val1} NEAR/${prox} ${val2}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      // https://learn.microsoft.com/en-us/sql/relational-databases/search/search-for-words-close-to-another-word-with-near?view=sql-server-ver16#example-1\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const aVal1 = this.utils.SqlString.trim(val1);\n      const aVal2 = this.utils.SqlString.trim(val2);\n      const prox = operatorOptions.get(\"proximity\");\n      return `CONTAINS(${field}, 'NEAR((${aVal1}, ${aVal2}), ${prox})')`;\n    },\n    mongoFormatOp: undefined, // not supported\n    jsonLogic: undefined, // not supported\n    options: {\n      optionLabel: \"Near\", // label on top of \"near\" selectbox (for config.settings.showLabels==true)\n      optionTextBefore: \"Near\", // label before \"near\" selectbox (for config.settings.showLabels==false)\n      optionPlaceholder: \"Select words between\", // placeholder for \"near\" selectbox\n      minProximity: 2,\n      maxProximity: 10,\n      defaults: {\n        proximity: 2\n      },\n    },\n  },\n  some: {\n    label: \"Some\",\n    labelForFormat: \"SOME\",\n    cardinality: 0,\n    jsonLogic: \"some\",\n    spelFormatOp: (filteredSize) => `${filteredSize} > 0`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gt\", v => 0, false, ...args); },\n  },\n  all: {\n    label: \"All\",\n    labelForFormat: \"ALL\",\n    cardinality: 0,\n    jsonLogic: \"all\",\n    spelFormatOp: (filteredSize, op, fullSize) => `${filteredSize} == ${fullSize}`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n  },\n  none: {\n    label: \"None\",\n    labelForFormat: \"NONE\",\n    cardinality: 0,\n    jsonLogic: \"none\",\n    spelFormatOp: (filteredSize) => `${filteredSize} == 0`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => 0, false, ...args); },\n  }\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"String\",\n    valuePlaceholder: \"Enter string\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  textarea: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Text\",\n    valuePlaceholder: \"Enter text\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n    fullWidth: true,\n  },\n  number: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number\",\n    valueLabels: [\n      { label: \"Number from\", placeholder: \"Enter number from\" },\n      { label: \"Number to\", placeholder: \"Enter number to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef) {\n      const isFloat = wgtDef.step && !Number.isInteger(wgtDef.step);\n      return this.utils.spelEscape(val, isFloat);\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  slider: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number or move slider\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  select: {\n    type: \"select\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Value\",\n    valuePlaceholder: \"Select value\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      let valLabel = this.utils.getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, val);\n      return isForDisplay ? this.utils.stringifyForDisplay(valLabel) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  multiselect: {\n    type: \"multiselect\",\n    jsType: \"array\",\n    valueSrc: \"value\",\n    valueLabel: \"Values\",\n    valuePlaceholder: \"Select values\",\n    formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n      let valsLabels = vals.map(v => this.utils.getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, v));\n      return isForDisplay ? valsLabels.map(this.utils.stringifyForDisplay) : vals.map(JSON.stringify);\n    },\n    sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n      return vals.map(v => this.utils.SqlString.escape(v));\n    },\n    spelFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n      const isCallable = opDef && opDef.spelOp && opDef.spelOp.startsWith(\"${1}\");\n      let res = this.utils.spelEscape(vals); // inline list\n      if (isCallable) {\n        // `{1,2}.contains(1)` NOT works\n        // `{1,2}.?[true].contains(1)` works\n        res = this.utils.spelFixList(res);\n      }\n      return res;\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  date: {\n    type: \"date\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD\",\n    valueLabel: \"Date\",\n    valuePlaceholder: \"Enter date\",\n    valueLabels: [\n      { label: \"Date from\", placeholder: \"Enter date from\" },\n      { label: \"Date to\", placeholder: \"Enter date to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"YYYY-MM-DD\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD\");\n      const fmt = \"yyyy-MM-dd\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDate).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    spelImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDate\"],\n        },\n        methodName: \"parse\",\n        args: [\n          {var: \"v\"},\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [\n              {var: \"fmt\"}\n            ]\n          },\n        ],\n      }\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (args?.fmt?.value?.includes?.(\" \") || args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\"))\n        return [undefined, `Invalid date format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      return this.utils.moment(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  time: {\n    type: \"time\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    valueFormat: \"HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Time\",\n    valuePlaceholder: \"Enter time\",\n    valueLabels: [\n      { label: \"Time from\", placeholder: \"Enter time from\" },\n      { label: \"Time to\", placeholder: \"Enter time to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"HH:mm:ss\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const fmt = \"HH:mm:ss\";\n      const v = dateVal.format(\"HH:mm:ss\");\n      return `T(java.time.LocalTime).parse('${v}')`;\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n    },\n    spelImportFuncs: [\n      \"T(java.time.LocalTime).parse(${v})\",\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\"\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (args?.fmt && (!args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\") || args.fmt?.value?.includes(\" \")))\n        return [undefined, `Invalid time format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, \"HH:mm:ss\");\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    toJS: function (val, fieldSettings) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\") : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    elasticSearchFormatValue: function elasticSearchFormatValue(queryType, value, operator, fieldName) {\n      return {\n        script: {\n          script: {\n            source: \"doc[\".concat(fieldName, \"][0].getHour() >== params.min && doc[\").concat(fieldName, \"][0].getHour() <== params.max\"),\n            params: {\n              min: value[0],\n              max: value[1]\n            }\n          }\n        }\n      };\n    },\n  },\n  datetime: {\n    type: \"datetime\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Datetime\",\n    valuePlaceholder: \"Enter datetime\",\n    valueLabels: [\n      { label: \"Datetime from\", placeholder: \"Enter datetime from\" },\n      { label: \"Datetime to\", placeholder: \"Enter datetime to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat + \" \" + wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.toDate());\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD HH:mm:ss\");\n      const fmt = \"yyyy-MM-dd HH:mm:ss\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDateTime).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    spelImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDateTime\"],\n        },\n        methodName: \"parse\",\n        args: [\n          {var: \"v\"},\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [\n              {var: \"fmt\"}\n            ]\n          },\n        ],\n      }\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (!args?.fmt?.value?.includes?.(\" \"))\n        return [undefined, `Invalid datetime format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      return this.utils.moment(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  boolean: {\n    type: \"boolean\",\n    jsType: \"boolean\",\n    valueSrc: \"value\",\n    labelYes: \"Yes\",\n    labelNo: \"No\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? (val ? \"Yes\" : \"No\") : JSON.stringify(!!val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    defaultValue: false,\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  field: {\n    valueSrc: \"field\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay, op, opDef, rightFieldDef) => {\n      return isForDisplay ? (rightFieldDef.label || val) : val;\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef, rightFieldDef) => {\n      return val;\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return val;\n    },\n    valueLabel: \"Field to compare\",\n    valuePlaceholder: \"Select field to compare\",\n  },\n  func: {\n    valueSrc: \"func\",\n    valueLabel: \"Function\",\n    valuePlaceholder: \"Select function\",\n  },\n  case_value: {\n    valueSrc: \"value\",\n    type: \"case_value\",\n    spelFormatValue: function (val) {\n      return this.utils.spelEscape(val === \"\" ? null : val);\n    },\n    spelImportValue: (val) => {\n      return [val.value, []];\n    }\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  text: {\n    defaultOperator: \"equal\",\n    mainWidget: \"text\",\n    widgets: {\n      text: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"proximity\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      textarea: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      field: {\n        operators: [\n          //unary ops (like `is_empty`) will be excluded anyway, see getWidgetsForFieldOp()\n          \"equal\",\n          \"not_equal\",\n          \"proximity\", //can exclude if you want\n        ],\n      }\n    },\n  },\n  number: {\n    defaultOperator: \"equal\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      slider: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ],\n      },\n    },\n  },\n  date: {\n    defaultOperator: \"equal\",\n    widgets: {\n      date: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ]\n      }\n    },\n  },\n  time: {\n    defaultOperator: \"equal\",\n    widgets: {\n      time: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  datetime: {\n    defaultOperator: \"equal\",\n    widgets: {\n      datetime: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      }\n    },\n  },\n  select: {\n    mainWidget: \"select\",\n    defaultOperator: \"select_equals\",\n    widgets: {\n      select: {\n        operators: [\n          \"select_equals\",\n          \"select_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      multiselect: {\n        operators: [\n          \"select_any_in\",\n          \"select_not_any_in\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n    },\n  },\n  multiselect: {\n    defaultOperator: \"multiselect_equals\",\n    widgets: {\n      multiselect: {\n        operators: [\n          \"multiselect_contains\",\n          \"multiselect_not_contains\",\n          \"multiselect_equals\",\n          \"multiselect_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  boolean: {\n    defaultOperator: \"equal\",\n    widgets: {\n      boolean: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {\n          //you can enable this if you don't use fields as value sources\n          // hideOperator: true,\n          // operatorInlineLabel: \"is\",\n        }\n      },\n      field: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n        ],\n      }\n    },\n  },\n  \"!group\": {\n    defaultOperator: \"some\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        widgetProps: {\n          min: 0\n        },\n        operators: [\n          // w/o operand\n          \"some\",\n          \"all\",\n          \"none\",\n\n          // w/ operand - count\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n        ],\n        opProps: {\n          equal: {\n            label: \"Count ==\"\n          },\n          not_equal: {\n            label: \"Count !=\"\n          },\n          less: {\n            label: \"Count <\"\n          },\n          less_or_equal: {\n            label: \"Count <=\"\n          },\n          greater: {\n            label: \"Count >\"\n          },\n          greater_or_equal: {\n            label: \"Count >=\"\n          },\n          between: {\n            label: \"Count between\"\n          },\n          not_between: {\n            label: \"Count not between\"\n          }\n        }\n      }\n    }\n  },\n  \"case_value\": {\n    mainWidget: \"case_value\",\n    widgets: {\n      case_value: {}\n    }\n  },\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...defaultSettings,\n\n  convertableWidgets: {\n    \"number\": [\"slider\", \"rangeslider\"],\n    \"slider\": [\"number\", \"rangeslider\"],\n    \"rangeslider\": [\"number\", \"slider\"],\n    \"text\": [\"textarea\"],\n    \"textarea\": [\"text\"]\n  },\n\n  formatSpelField: function (field, parentField, parts, partsExt, fieldDefinition, config) {\n    let fieldName = partsExt.map(({key, parent, fieldSeparator: sep}, ind) => {\n      if (ind == 0) {\n        if (parent == \"[map]\")\n          return `#this[${this.utils.spelEscape(key)}]`;\n        else if (parent == \"[class]\")\n          return key;\n        else\n          return key;\n      } else {\n        if (parent == \"map\" || parent == \"[map]\")\n          return `[${this.utils.spelEscape(key)}]`;\n        else if (parent == \"class\" || parent == \"[class]\")\n          return `${sep}${key}`;\n        else\n          return `${sep}${key}`;\n      }\n    }).join(\"\");\n    if (fieldDefinition.fieldName) {\n      fieldName = field;\n    }\n    if (fieldDefinition.isSpelVariable) {\n      fieldName = \"#\" + fieldName;\n    }\n    return fieldName;\n  },\n  sqlFormatReverse: (q) => {\n    if (q == undefined) return undefined;\n    return \"NOT(\" + q + \")\";\n  },\n  spelFormatReverse: (q) => {\n    if (q == undefined) return undefined;\n    return \"!(\" + q + \")\";\n  },\n  formatReverse: (q, operator, reversedOp, operatorDefinition, revOperatorDefinition, isForDisplay) => {\n    if (q == undefined) return undefined;\n    if (isForDisplay)\n      return \"NOT (\" + q + \")\";\n    else\n      return \"!(\" + q + \")\";\n  },\n  formatAggr: (whereStr, aggrField, operator, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay, aggrFieldDef) => {\n    const {labelForFormat, cardinality} = opDef;\n    if (cardinality == 0) {\n      const cond = whereStr ? ` HAVE ${whereStr}` : \"\";\n      return `${labelForFormat} OF ${aggrField}${cond}`;\n    } else if (cardinality == undefined || cardinality == 1) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${value}`;\n    } else if (cardinality == 2) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      let valFrom = value.first();\n      let valTo = value.get(1);\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${valFrom} AND ${valTo}`;\n    }\n  },\n  jsonLogic: {\n    groupVarKey: \"var\",\n    altVarKey: \"var\",\n    lockedOp: \"locked\"\n  },\n  \n  canCompareFieldWithField: (leftField, leftFieldConfig, rightField, rightFieldConfig) => {\n    //for type == 'select'/'multiselect' you can check listValues\n    return true;\n  },\n\n  // enable compare fields\n  valueSourcesInfo: {\n    value: {\n      label: \"Value\"\n    },\n    field: {\n      label: \"Field\",\n      widget: \"field\",\n    },\n    func: {\n      label: \"Function\",\n      widget: \"func\",\n    }\n  },\n\n};\n\n//----------------------------\n\nconst _addMixins = (config, mixins, doAdd = true) => {\n  const mixinFuncs = {\n    rangeslider: mixinWidgetRangeslider,\n    treeselect: mixinWidgetTreeselect,\n    treemultiselect: mixinWidgetTreemultiselect,\n    rangeable__date: mixinRangeableWidget(\"date\", \"date\"),\n  };\n  for (const mixName of mixins) {\n    const mixinFunc = mixinFuncs[mixName];\n    if (mixinFunc) {\n      config = mixinFunc(config, doAdd);\n    } else {\n      throw new Error(`Can't ${doAdd ? \"add\": \"remove\"} mixin ${mixName}`);\n    }\n  }\n  return config;\n};\n\nconst addMixins = (config, mixins) => {\n  return _addMixins(config, mixins, true);\n};\nconst removeMixins = (config, mixins) => {\n  return _addMixins(config, mixins, false);\n};\n\nconst mixinRangeableWidget = (type, widget) => (config, addMixin = true) => {\n  let { types } = config;\n\n  types = {\n    ...types,\n    [type]: {\n      ...types[type],\n      widgets: {\n        ...types[type].widgets,\n      }\n    }\n  };\n\n  if (addMixin) {\n    types[type].widgets[widget] = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n          textSeparators: [null, null],\n        },\n        not_between: {\n          isSpecialRange: true,\n          textSeparators: [null, null],\n        }\n      },\n      ...types[type].widgets[widget],\n    };\n  } else {\n    delete types[type].widgets[widget];\n  }\n\n  return {\n    ...config,\n    types,\n  };\n};\n\nconst mixinWidgetRangeslider = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.rangeslider = {\n      type: \"number\",\n      jsType: \"number\",\n      valueSrc: \"value\",\n      valueLabel: \"Range\",\n      valuePlaceholder: \"Select range\",\n      valueLabels: [\n        { label: \"Number from\", placeholder: \"Enter number from\" },\n        { label: \"Number to\", placeholder: \"Enter number to\" },\n      ],\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      singleWidget: \"slider\",\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.rangeslider,\n    };\n  } else {\n    delete widgets.rangeslider;\n  }\n\n  types = {\n    ...types,\n    number: {\n      ...types.number,\n      widgets: {\n        ...types.number.widgets,\n      }\n    }\n  };\n\n  if (addMixin) {\n    types.number.widgets.rangeslider = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n        },\n        not_between: {\n          isSpecialRange: true,\n        }\n      },\n      operators: [\n        \"between\",\n        \"not_between\",\n        // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\",\n        \"is_not_null\",\n      ],\n      ...types.number.widgets.rangeslider,\n    };\n  } else {\n    delete types.number.widgets.rangeslider;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreeselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treeselect = {\n      type: \"treeselect\",\n      jsType: \"string\",\n      valueSrc: \"value\",\n      valueLabel: \"Value\",\n      valuePlaceholder: \"Select value\",\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        const treeData = fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues;\n        let valLabel = this.utils.getTitleInListValues(treeData, val);\n        return isForDisplay ? this.utils.stringifyForDisplay(valLabel) : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.treeselect,\n    };\n  } else {\n    delete widgets.treeselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treeselect = {\n      mainWidget: \"treeselect\",\n      defaultOperator: \"select_equals\",\n      widgets: {\n        treeselect: {\n          operators: [\n            \"select_equals\",\n            \"select_not_equals\"\n          ],\n        },\n        treemultiselect: {\n          operators: [\n            \"select_any_in\",\n            \"select_not_any_in\"\n          ],\n        },\n      },\n      ...types.treeselect,\n    };\n  } else {\n    delete types.treeselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreemultiselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treemultiselect = {\n      type: \"treemultiselect\",\n      jsType: \"array\",\n      valueSrc: \"value\",\n      valueLabel: \"Values\",\n      valuePlaceholder: \"Select values\",\n      formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n        const treeData = fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues;\n        let valsLabels = vals.map(v => this.utils.getTitleInListValues(treeData, v));\n        return isForDisplay ? valsLabels.map(this.utils.stringifyForDisplay) : vals.map(JSON.stringify);\n      },\n      sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n        return vals.map(v => this.utils.SqlString.escape(v));\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.treemultiselect,\n    };\n  } else {\n    delete widgets.treemultiselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treemultiselect = {\n      defaultOperator: \"multiselect_equals\",\n      widgets: {\n        treemultiselect: {\n          operators: [\n            \"multiselect_equals\",\n            \"multiselect_not_equals\",\n          ],\n        }\n      },\n      ...types.treemultiselect,\n    };\n  } else {\n    delete types.treemultiselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nexport const ConfigMixins = {\n  addMixins,\n  removeMixins,\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\n// Mixin advanced widgets just to allow using it on server-side eg. for export routines\nconfig = addMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_FIELD_SRC = \"SET_FIELD_SRC\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_FUNC_VALUE = \"SET_FUNC_VALUE\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import Immutable, { fromJS } from \"immutable\";\nimport {\n  expandTreePath, expandTreeSubpath, getItemByPath, fixPathsInTree, \n  getTotalRulesCountInTree, fixEmptyGroupsInTree, isEmptyTree, hasChildren, removeIsLockedInTree\n} from \"../utils/treeUtils\";\nimport {\n  defaultRuleProperties, defaultGroupProperties, getDefaultOperator, \n  defaultOperatorOptions, defaultItemProperties\n} from \"../utils/defaultUtils\";\nimport * as constants from \"./constants\";\nimport uuid from \"../utils/uuid\";\nimport {\n  getFuncConfig, getFieldConfig, getOperatorConfig\n} from \"../utils/configUtils\";\nimport {\n  getOperatorsForField, getOperatorsForType, getFirstOperator,\n  isEmptyItem, selectTypes, calculateValueType\n} from \"../utils/ruleUtils\";\nimport {deepEqual, getOpCardinality, applyToJS} from \"../utils/stuff\";\nimport {validateValue, validateRange, getNewValueForFieldOp} from \"../utils/validation\";\nimport {translateValidation} from \"../i18n\";\nimport omit from \"lodash/omit\";\nimport mapValues from \"lodash/mapValues\";\nimport {setFunc, setArgValue, setArgValueSrc} from \"../utils/funcUtils\";\n\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst addNewGroup = (state, path, type, generatedId, properties, config, children = null, meta = {}) => {\n  const groupUuid = properties?.get?.(\"id\") || generatedId;\n  const {shouldCreateEmptyGroup} = config.settings;\n  const groupPath = path.push(groupUuid);\n  const canAddNewRule = !shouldCreateEmptyGroup;\n  const isDefaultCase = !!meta?.isDefaultCase;\n\n  const origState = state;\n  state = addItem(state, path, type, groupUuid, defaultGroupProperties(config).merge(fromJS(properties) || {}), config, children);\n  if (state !== origState) {\n    if (!children && !isDefaultCase) {\n      state = state.setIn(expandTreePath(groupPath, \"children1\"), new Immutable.OrderedMap());\n\n      // Add one empty rule into new group\n      if (canAddNewRule) {\n        state = addItem(state, groupPath, \"rule\", uuid(), defaultRuleProperties(config), config);\n      }\n    }\n\n    state = fixPathsInTree(state);\n  }\n  \n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst removeGroup = (state, path, config) => {\n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.slice(0, -1);\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  if (isEmptyParentGroup && !canLeaveEmptyGroup) {\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n    \n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty(!) rule to root\n      const canUseDefaultFieldAndOp = false;\n      const canGetFirst = false;\n      state = addItem(\n        state, new Immutable.List(), \"rule\", uuid(), \n        defaultRuleProperties(config, undefined, undefined, canUseDefaultFieldAndOp, canGetFirst), \n        config\n      );\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nconst removeRule = (state, path, config) => {\n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.pop();\n  const parent = state.getIn(expandTreePath(parentPath));\n\n  const parentField = parent.getIn([\"properties\", \"field\"]);\n  const parentOperator = parent.getIn([\"properties\", \"operator\"]);\n  const parentValue = parent.getIn([\"properties\", \"value\", 0]);\n  const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  const parentOperatorConfig = parentOperator ? getOperatorConfig(config, parentOperator, parentField) : null;\n  const hasGroupCountRule = parentField && parentOperator && parentOperatorConfig.cardinality != 0; // && parentValue != undefined;\n  \n  const isParentRuleGroup = parent.get(\"type\") == \"rule_group\";\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  const canLeaveEmpty = isParentRuleGroup \n    ? hasGroupCountRule && parentFieldConfig.initialEmptyWhere\n    : canLeaveEmptyGroup;\n  \n  if (isEmptyParentGroup && !canLeaveEmpty) {\n    if (isParentRuleGroup) {\n      // deleted last rule from rule_group, so delete whole rule_group\n      state = state.deleteIn(expandTreePath(parentPath));\n    }\n\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n\n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty(!) rule to root\n      const canUseDefaultFieldAndOp = false;\n      const canGetFirst = false;\n      state = addItem(\n        state, new Immutable.List(), \"rule\", uuid(), \n        defaultRuleProperties(config, undefined, undefined, canUseDefaultFieldAndOp, canGetFirst), \n        config\n      );\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} not\n */\nconst setNot = (state, path, not) =>\n  state.setIn(expandTreePath(path, \"properties\", \"not\"), not);\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nconst setLock = (state, path, lock) =>\n  removeIsLockedInTree(state.setIn(expandTreePath(path, \"properties\", \"isLocked\"), lock));\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nconst setConjunction = (state, path, conjunction) =>\n  state.setIn(expandTreePath(path, \"properties\", \"conjunction\"), conjunction);\n\n// convert children deeply from JS to Immutable\nconst _addChildren1 = (config, item, children) => {\n  if (children && Array.isArray(children)) {\n    item.children1 = new Immutable.OrderedMap(\n      children.reduce((map, it) => {\n        const id1 = it.id ?? uuid();\n        const it1 = {\n          ...it,\n          properties: defaultItemProperties(config, it).merge(fromJS(it.properties) || {}),\n          id: id1\n        };\n        _addChildren1(config, it1, it1.children1);\n        //todo: guarantee order\n        return {\n          ...map,\n          [id1]: new Immutable.Map(it1)\n        };\n      }, {})\n    );\n  }\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} type\n * @param {string} id\n * @param {Immutable.OrderedMap} properties\n * @param {object} config\n */\nconst addItem = (state, path, type, generatedId, properties, config, children = null) => {\n  const id = properties?.get?.(\"id\") || generatedId;\n  if (type == \"switch_group\")\n    throw new Error(\"Can't add switch_group programmatically\");\n  const { maxNumberOfCases, maxNumberOfRules, maxNesting } = config.settings;\n  const rootType = state.get(\"type\");\n  const isTernary = rootType == \"switch_group\";\n  const targetItem = state.getIn(expandTreePath(path));\n  const caseGroup = isTernary ? state.getIn(expandTreePath(path.take(2))) : null;\n  const childrenPath = expandTreePath(path, \"children1\");\n  const targetChildren = state.getIn(childrenPath);\n  const hasChildren = !!targetChildren && targetChildren.size;\n  const targetChildrenSize = hasChildren ? targetChildren.size : null;\n  let currentNumber, maxNumber;\n  if (type == \"case_group\") {\n    currentNumber = targetChildrenSize;\n    maxNumber = maxNumberOfCases;\n  } else if (type == \"group\") {\n    currentNumber = path.size;\n    maxNumber = maxNesting;\n  } else if (targetItem?.get(\"type\") == \"rule_group\") {\n    // don't restrict\n  } else {\n    currentNumber = isTernary ? getTotalRulesCountInTree(caseGroup) : getTotalRulesCountInTree(state);\n    maxNumber = maxNumberOfRules;\n  }\n  const canAdd = maxNumber && currentNumber ? (currentNumber < maxNumber) : true;\n  \n  const item = {type, id, properties};\n  _addChildren1(config, item, children);\n\n  const isLastDefaultCase = type == \"case_group\" && hasChildren && targetChildren.last().get(\"children1\") == null;\n\n  if (canAdd) {\n    const newChildren = new Immutable.OrderedMap({\n      [id]: new Immutable.Map(item)\n    });\n    if (!hasChildren) {\n      state = state.setIn(childrenPath, newChildren);\n    } else if (isLastDefaultCase) {\n      const last = targetChildren.last();\n      const newChildrenWithLast = new Immutable.OrderedMap({\n        [id]: new Immutable.Map(item),\n        [last.get(\"id\")]: last\n      });\n      state = state.deleteIn(expandTreePath(childrenPath, \"children1\", last.get(\"id\")));\n      state = state.mergeIn(childrenPath, newChildrenWithLast);\n    } else {\n      state = state.mergeIn(childrenPath, newChildren);\n    }\n    state = fixPathsInTree(state);\n  }\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n */\nconst removeItem = (state, path) => {\n  state = state.deleteIn(expandTreePath(path));\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} fromPath\n * @param {Immutable.List} toPath\n * @param {string} placement, see constants PLACEMENT_*: PLACEMENT_AFTER, PLACEMENT_BEFORE, PLACEMENT_APPEND, PLACEMENT_PREPEND\n * @param {object} config\n */\nconst moveItem = (state, fromPath, toPath, placement, config) => {\n  const from = getItemByPath(state, fromPath);\n  const sourcePath = fromPath.pop();\n  const source = fromPath.size > 1 ? getItemByPath(state, sourcePath) : null;\n  const sourceChildren = source ? source.get(\"children1\") : null;\n\n  const to = getItemByPath(state, toPath);\n  const targetPath = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) ? toPath : toPath.pop();\n  const target = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) \n    ? to\n    : toPath.size > 1 ? getItemByPath(state, targetPath) : null;\n  const targetChildren = target ? target.get(\"children1\") : null;\n\n  if (!source || !target || !from)\n    return state;\n\n  const isSameParent = (source.get(\"id\") == target.get(\"id\"));\n  const isSourceInsideTarget = targetPath.size < sourcePath.size \n        && deepEqual(targetPath.toArray(), sourcePath.toArray().slice(0, targetPath.size));\n  const isTargetInsideSource = targetPath.size > sourcePath.size \n        && deepEqual(sourcePath.toArray(), targetPath.toArray().slice(0, sourcePath.size));\n  let sourceSubpathFromTarget = null;\n  let targetSubpathFromSource = null;\n  if (isSourceInsideTarget) {\n    sourceSubpathFromTarget = Immutable.List(sourcePath.toArray().slice(targetPath.size));\n  } else if (isTargetInsideSource) {\n    targetSubpathFromSource = Immutable.List(targetPath.toArray().slice(sourcePath.size));\n  }\n\n  let newTargetChildren = targetChildren, newSourceChildren = sourceChildren;\n  if (!isTargetInsideSource)\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  if (isSameParent) {\n    newTargetChildren = newSourceChildren;\n  } else if (isSourceInsideTarget) {\n    newTargetChildren = newTargetChildren.updateIn(expandTreeSubpath(sourceSubpathFromTarget, \"children1\"), (_oldChildren) => newSourceChildren);\n  }\n\n  if (placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) {\n    newTargetChildren = Immutable.OrderedMap().withMutations(r => {\n      for (let [itemId, item] of newTargetChildren.entries()) {\n        if (itemId == to.get(\"id\") && placement == constants.PLACEMENT_BEFORE) {\n          r.set(from.get(\"id\"), from);\n        }\n                \n        r.set(itemId, item);\n\n        if (itemId == to.get(\"id\") && placement == constants.PLACEMENT_AFTER) {\n          r.set(from.get(\"id\"), from);\n        }\n      }\n    });\n  } else if (placement == constants.PLACEMENT_APPEND) {\n    newTargetChildren = newTargetChildren.merge(Immutable.OrderedMap({[from.get(\"id\")]: from}));\n  } else if (placement == constants.PLACEMENT_PREPEND) {\n    newTargetChildren = Immutable.OrderedMap({[from.get(\"id\")]: from}).merge(newTargetChildren);\n  }\n\n  if (isTargetInsideSource) {\n    newSourceChildren = newSourceChildren.updateIn(expandTreeSubpath(targetSubpathFromSource, \"children1\"), (_oldChildren) => newTargetChildren);\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  }\n\n  if (!isSameParent && !isSourceInsideTarget)\n    state = state.updateIn(expandTreePath(sourcePath, \"children1\"), (_oldChildren) => newSourceChildren);\n  if (!isTargetInsideSource)\n    state = state.updateIn(expandTreePath(targetPath, \"children1\"), (_oldChildren) => newTargetChildren);\n\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {string} srcKey\n */\nconst setFieldSrc = (state, path, srcKey, config) => {\n  const {keepInputOnChangeFieldSrc} = config.settings;\n\n  // get fieldType for \"memory effect\"\n  const currentRule = state.getIn(expandTreePath(path));\n  const currentType = currentRule.get(\"type\");\n  const currentProperties = currentRule.get(\"properties\");\n  const currentField = currentProperties?.get(\"field\");\n  //const currentFieldSrc = currentProperties?.get(\"fieldSrc\");\n  const currentFielType = currentProperties?.get(\"fieldType\");\n  const currentFieldConfig = getFieldConfig(config, currentField);\n  let fieldType = currentFieldConfig?.type || currentFielType;\n  if (!fieldType || fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n  const canReuseValue = !selectTypes.includes(fieldType);\n  const keepInput = keepInputOnChangeFieldSrc && !isEmptyItem(currentRule, config) && canReuseValue;\n\n  if (!keepInput) {\n    // clear ALL properties\n    state = state.setIn(\n      expandTreePath(path, \"properties\"),\n      defaultRuleProperties(config, null, null, false)\n    );\n  } else {\n    // clear non-relevant properties\n    state = state.setIn(expandTreePath(path, \"properties\", \"field\"), null);\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"fieldError\"));\n    // set fieldType for \"memory effect\"\n    state = state.setIn(expandTreePath(path, \"properties\", \"fieldType\"), fieldType);\n  }\n\n  // set fieldSrc\n  state = state.setIn(expandTreePath(path, \"properties\", \"fieldSrc\"), srcKey);\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {Array} parentFuncs\n * @param {string | null} argKey\n * @param {*} argValue if argKey is null, it's new func key\n * @param {string | \"!valueSrc\"} valueType\n * @param {*} asyncListValues\n */\nconst setFuncValue = (config, state, path, delta, parentFuncs, argKey, argValue, valueType, asyncListValues, _meta = {}) => {\n  const {showErrorMessage} = config.settings;\n  const isLHS = delta === -1;\n  const currentProperties = state.getIn(expandTreePath(path, \"properties\"));\n  const currentField = currentProperties.get(\"field\");\n  const currentValue = currentProperties.get(\"value\");\n  const currentV = isLHS ? currentField : currentValue.getIn([delta]);\n\n  // go inwards\n  let funcsPath = [];\n  let targetFV = currentV;\n  for (const [funcK, argK] of parentFuncs || []) {\n    funcsPath.push([funcK, argK, targetFV]);\n    if (funcK !== targetFV.get(\"func\")) {\n      const funcPath = funcsPath.map(([f, a]) => `${f}(${a})`).join(\"/\") || \"root\";\n      throw new Error(\n        `In ${isLHS ? \"LHS\" : \"RHS\"} for path ${funcPath} expected func key ${funcK} but got ${parent.get(\"func\")}`\n      );\n    }\n    targetFV = targetFV.getIn([\"args\", argK, \"value\"]);\n  }\n\n  // modify\n  if (!argKey) {\n    const newFuncKey = argValue;\n    const canFixArgs = true; // try to fix args to fit new func validations, otherwise - drop invalid args\n    targetFV = setFunc(targetFV, newFuncKey, config, canFixArgs);\n    // allow drop invalid args / reset to default, but don't trigger error if some arg is required\n    // (not same as setting isEndValue = true)\n    _meta.canDropArgs = true;\n  } else {\n    const funcKey = targetFV.get(\"func\");\n    const funcDefinition = getFuncConfig(config, funcKey);\n    const {args} = funcDefinition;\n    const argDefinition = args[argKey];\n\n    if (valueType === \"!valueSrc\") {\n      targetFV = setArgValueSrc(targetFV, argKey, argValue, argDefinition, config);\n    } else {\n      targetFV = setArgValue(targetFV, argKey, argValue, argDefinition, config);\n    }\n  }\n\n  // go outwards\n  let newV = targetFV;\n  while (funcsPath.length) {\n    const [funcK, argK, parentFV] = funcsPath.pop();\n    const funcDefinition = getFuncConfig(config, funcK);\n    const {args} = funcDefinition;\n    const argDefinition = args[argK];\n    newV = setArgValue(parentFV, argK, newV, argDefinition, config);\n  }\n\n  if (isLHS) {\n    return setField(state, path, newV, config, asyncListValues, _meta);\n  } else {\n    return setValue(state, path, delta, newV, undefined, config, asyncListValues, _meta);\n  }\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string | Immutable.OrderedMap} newField\n */\nconst setField = (state, path, newField, config, asyncListValues, _meta = {}) => {\n  const { __isInternal, isEndValue, canDropArgs } = _meta;\n  let isInternalValueChange;\n  if (!newField)\n    return {tree: removeItem(state, path), isInternalValueChange};\n\n  const {fieldSeparator, setOpOnChangeField, showErrorMessage} = config.settings;\n  if (Array.isArray(newField))\n    newField = newField.join(fieldSeparator);\n\n  const currentType = state.getIn(expandTreePath(path, \"type\"));\n  const currentProperties = state.getIn(expandTreePath(path, \"properties\"));\n  const wasRuleGroup = currentType == \"rule_group\";\n  const currentFieldSrc = currentProperties?.get(\"fieldSrc\");\n  const currentFieldError = currentProperties?.get(\"fieldError\");\n  const newFieldConfig = getFieldConfig(config, newField);\n  if (!newFieldConfig) {\n    console.warn(`No config for LHS ${newField}`);\n    return {tree: state, isInternalValueChange};\n  }\n  let fieldType = newFieldConfig.type;\n  if (fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n\n  const currentOperator = currentProperties?.get(\"operator\");\n  const currentOperatorOptions = currentProperties?.get(\"operatorOptions\");\n  const currentField = currentProperties?.get(\"field\");\n  // const currentValue = currentProperties?.get(\"value\");\n  const currentValueErrorStr = currentProperties?.get(\"valueError\")?.join?.(\"|\");\n  // const _currentValueSrc = currentProperties?.get(\"valueSrc\", new Immutable.List());\n  // const _currentValueType = currentProperties?.get(\"valueType\", new Immutable.List());\n\n  const isRuleGroup = newFieldConfig.type == \"!group\";\n  const isRuleGroupExt = isRuleGroup && newFieldConfig.mode == \"array\";\n  const isChangeToAnotherType = wasRuleGroup != isRuleGroup;\n  // const wasOkWithoutField = !currentField && currentFieldSrc && currentOperator;\n\n  // If the newly selected field supports the same operator the rule currently\n  // uses, keep it selected.\n  const lastOp = newFieldConfig && newFieldConfig.operators?.indexOf(currentOperator) !== -1 ? currentOperator : null;\n  const isSameFunc = currentFieldSrc === \"func\" && currentField?.get?.(\"func\") === newField?.get?.(\"func\");\n  const forceKeepOp = isSameFunc && !!lastOp;\n  let newOperator = null;\n  const availOps = currentFieldSrc === \"func\" \n    ? getOperatorsForType(config, fieldType)\n    : getOperatorsForField(config, newField);\n  if (availOps && availOps.length == 1)\n    newOperator = availOps[0];\n  else if (forceKeepOp)\n    newOperator = lastOp;\n  else if (availOps && availOps.length > 1) {\n    for (let strategy of setOpOnChangeField) {\n      if (strategy == \"keep\" && !isChangeToAnotherType)\n        newOperator = lastOp;\n      else if (strategy == \"default\")\n        newOperator = getDefaultOperator(config, newField, false);\n      else if (strategy == \"first\")\n        newOperator = getFirstOperator(config, newField);\n      if (newOperator) //found op for strategy\n        break;\n    }\n  }\n\n  if (!isRuleGroup && !newFieldConfig.operators) {\n    console.warn(`Type ${newFieldConfig.type} is not supported`);\n    return {tree: state, isInternalValueChange};\n  }\n\n  if (wasRuleGroup && !isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule\");\n    state = state.deleteIn(expandTreePath(path, \"children1\"));\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  if (!currentProperties) {\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  const canFix = !showErrorMessage;\n  if (isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule_group\");\n    const {canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality} = getNewValueForFieldOp(\n      config, config, currentProperties, newField, newOperator, \"field\", canFix, isEndValue, canDropArgs\n    );\n    let groupProperties = defaultGroupProperties(config, newFieldConfig).merge({\n      field: newField,\n      fieldSrc: \"field\",\n      mode: newFieldConfig.mode,\n    });\n    if (isRuleGroupExt) {\n      groupProperties = groupProperties.merge({\n        operator: newOperator,\n        value: newValue,\n        valueSrc: newValueSrc,\n        valueType: newValueType,\n      });\n    }\n    state = state.setIn(expandTreePath(path, \"children1\"), new Immutable.OrderedMap());\n    state = state.setIn(expandTreePath(path, \"properties\"), groupProperties);\n    if (newFieldConfig.initialEmptyWhere && operatorCardinality == 1) { // just `COUNT(grp) > 1` without `HAVING ..`\n      // no children\n    } else {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, newField), config);\n    }\n    state = fixPathsInTree(state);\n  } else {\n    state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n      const {\n        canReuseValue, newValue, newValueSrc, newValueType, newValueError, newFieldError, fixedField\n      } = getNewValueForFieldOp(\n        config, config, current, newField, newOperator, \"field\", canFix, isEndValue, canDropArgs\n      );\n      const newValueErrorStr = newValueError?.join?.(\"|\");\n      let newCorrectField = newField;\n      const willFixField = (fixedField !== newField);\n      if (willFixField) {\n        newCorrectField = fixedField;\n      }\n      // tip: `newCorrectField` is SAFE to set: even if it can't be fixed, it is reverted to previous good field.\n      //      Unlike logic in `setValue()` action where we need to calc `canUpdValue`\n      const didFieldErrorChanged = showErrorMessage ? currentFieldError != newFieldError : !!currentFieldError != !!newFieldError;\n      const didValueErrorChanged = showErrorMessage ? currentValueErrorStr != newValueErrorStr : !!currentValueErrorStr != !!newValueErrorStr;\n      const didErrorChanged = didFieldErrorChanged || didValueErrorChanged;\n      isInternalValueChange = !!__isInternal && !didErrorChanged && !willFixField;\n      if (showErrorMessage || !!__isInternal && didErrorChanged) {\n        current = current.set(\"fieldError\", newFieldError);\n        current = current.set(\"valueError\", newValueError);\n      }\n      const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, newCorrectField);\n      current = current\n        .set(\"field\", newCorrectField)\n        .delete(\"fieldType\") // remove \"memory effect\"\n        .set(\"fieldSrc\", currentFieldSrc)\n        .set(\"operator\", newOperator)\n        .set(\"operatorOptions\", newOperatorOptions)\n        .set(\"value\", newValue)\n        .set(\"valueSrc\", newValueSrc)\n        .set(\"valueType\", newValueType);\n      if (!canReuseValue) {\n        current = current.delete(\"asyncListValues\");\n      }\n      return current;\n    }));\n  }\n\n  return {tree: state, isInternalValueChange};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} operator\n */\nconst setOperator = (state, path, newOperator, config) => {\n  const {showErrorMessage} = config.settings;\n\n  const properties = state.getIn(expandTreePath(path, \"properties\"));\n  const children = state.getIn(expandTreePath(path, \"children1\"));\n  const currentField = properties.get(\"field\");\n  const currentFieldSrc = properties.get(\"fieldSrc\");\n  const fieldConfig = getFieldConfig(config, currentField);\n  const isRuleGroup = fieldConfig?.type == \"!group\";\n  const operatorConfig = getOperatorConfig(config, newOperator, currentField);\n  const operatorCardinality = operatorConfig ? getOpCardinality(operatorConfig) : null;\n  const canFix = true;\n\n  state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n    const currentField = current.get(\"field\");\n    const currentOperatorOptions = current.get(\"operatorOptions\");\n    const _currentValue = current.get(\"value\", new Immutable.List());\n    const _currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n    const _currentOperator = current.get(\"operator\");\n\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, current, currentField, newOperator, \"operator\", canFix\n    );\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n    const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, currentField);\n\n    if (!canReuseValue) {\n      current = current\n        .delete(\"asyncListValues\");\n    }\n\n    return current\n      .set(\"operator\", newOperator)\n      .set(\"operatorOptions\", newOperatorOptions)\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n  }));\n\n  if (isRuleGroup) {\n    if (operatorCardinality == 0 && children.size == 0) {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, currentField), config);\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n */\nconst setValue = (state, path, delta, value, valueType, config, asyncListValues, _meta = {}) => {\n  const { __isInternal, canDropArgs, isEndValue } = _meta;\n  const {fieldSeparator, showErrorMessage} = config.settings;\n  let isInternalValueChange;\n  const valueSrc = state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\")) || null;\n  if (valueSrc === \"field\" && Array.isArray(value))\n    value = value.join(fieldSeparator);\n\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  //const fieldSrc = state.getIn(expandTreePath(path, \"properties\", \"fieldSrc\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n\n  const calculatedValueType = valueType || calculateValueType(value, valueSrc, config);\n  const canFix = !showErrorMessage;\n  const [fixedValue, allErrors] = validateValue(\n    config, field, field, operator, value, calculatedValueType, valueSrc, asyncListValues, canFix, isEndValue, canDropArgs\n  );\n  const firstError = allErrors?.find(e => !e.fixed && !e.ignore);\n  const validationError = firstError ? translateValidation(firstError) : null;\n  // tip: even if canFix == false, use fixedValue, it can SAFELY fix value of select\n  //  (get exact value from listValues, not string)\n  let willFix = fixedValue !== value;\n  if (willFix) {\n    value = fixedValue;\n  }\n\n  // init lists\n  state = initEmptyValueLists(state, path, config, operatorCardinality);\n\n  // Additional validation for range values\n  const values = Array.from({length: operatorCardinality}, (_, i) =>\n    (i == delta ? value : state.getIn(expandTreePath(path, \"properties\", \"value\", i + \"\")) || null));\n  const valueSrcs = Array.from({length: operatorCardinality}, (_, i) =>\n    (state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", i + \"\")) || null));\n  const rangeErrorObj = validateRange(config, field, operator, values, valueSrcs);\n  const rangeValidationError = rangeErrorObj ? translateValidation(rangeErrorObj) : null;\n\n  const isValid = !validationError && !rangeValidationError;\n  const lastValue = state.getIn(expandTreePath(path, \"properties\", \"value\", delta));\n  const lastError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", delta));\n  const lastRangeError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality));\n  const didDeltaErrorChanged = showErrorMessage ? lastError != validationError : !!lastError != !!validationError;\n  const didRangeErrorChanged = showErrorMessage ? lastRangeError != rangeValidationError : !!lastRangeError != !!rangeValidationError;\n  const didErrorChanged = didDeltaErrorChanged || didRangeErrorChanged;\n  const didEmptinessChanged = !!lastValue != !!value;\n  const canUpdValue = showErrorMessage ? true : isValid || willFix; // set only good value\n  isInternalValueChange = !!__isInternal && !didEmptinessChanged && !didErrorChanged && !willFix;\n\n  if (canUpdValue) {\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n    if (typeof value === \"undefined\") {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta), undefined);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta), null);\n    } else {\n      if (asyncListValues) {\n        state = state.setIn(expandTreePath(path, \"properties\", \"asyncListValues\"), asyncListValues);\n      }\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta), value);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta), calculatedValueType);\n    }\n  }\n  if (showErrorMessage || !!__isInternal && didErrorChanged) {\n    // check list\n    const lastValueErrorArr = state.getIn(expandTreePath(path, \"properties\", \"valueError\"));\n    if (!lastValueErrorArr) {\n      state = state\n        .setIn(expandTreePath(path, \"properties\", \"valueError\"), new Immutable.List(new Array(operatorCardinality)));\n    }\n    // set error at delta\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), validationError);\n    // set range error\n    if (operatorCardinality >= 2) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), rangeValidationError);\n    }\n  }\n\n  return {tree: state, isInternalValueChange};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nconst setValueSrc = (state, path, delta, srcKey, config, _meta = {}) => {\n  const {showErrorMessage} = config.settings;\n\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  //const fieldSrc = state.getIn(expandTreePath(path, \"properties\", \"fieldSrc\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n\n  // init lists\n  state = initEmptyValueLists(state, path, config, operatorCardinality);\n\n  state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), undefined);\n  state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), null);\n  state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n\n  if (showErrorMessage) {\n    // clear value error\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), null);\n\n    // if current operator is range, clear possible range error\n    if (operatorConfig.validateValues) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), null);\n    }\n  }\n  \n  // set valueSrc\n  if (typeof srcKey === \"undefined\") {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), null);\n  } else {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), srcKey);\n  }\n\n  // maybe set default value\n  if (srcKey) {\n    const properties = state.getIn(expandTreePath(path, \"properties\"));\n    // this call should return canReuseValue = false and provide default value\n    const canFix = true;\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, properties, field, operator, \"valueSrc\", canFix\n    );\n    if (!canReuseValue && newValueSrc.get(delta) == srcKey) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), newValue.get(delta));\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), newValueType.get(delta));\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nconst setOperatorOption = (state, path, name, value) => {\n  return state.setIn(expandTreePath(path, \"properties\", \"operatorOptions\", name), value);\n};\n\n/**\n * @param {Immutable.Map} state\n */\nconst checkEmptyGroups = (state, config) => {\n  const {canLeaveEmptyGroup} = config.settings;\n  if (!canLeaveEmptyGroup) {\n    state = fixEmptyGroupsInTree(state);\n  }\n  return state;\n};\n\nconst initEmptyValueLists = (state, path, config, operatorCardinality) => {\n  if (!operatorCardinality) {\n    const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n    const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n    const operatorConfig = getOperatorConfig(config, operator, field);\n    operatorCardinality = operator ? getOpCardinality(operatorConfig) : null;\n  }\n\n  for (const k of [\"value\", \"valueType\", \"valueError\", \"valueSrc\"]) {\n    if (!state.getIn(expandTreePath(path, \"properties\", k))) {\n      state = state\n        .setIn(expandTreePath(path, \"properties\", k), new Immutable.List(\n          operatorCardinality ? Array.from({length: operatorCardinality}) : []\n        ));\n    }\n  }\n\n  return state;\n};\n\nconst getField = (state, path) => {\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  return field;\n};\n\nconst emptyDrag = {\n  dragging: {\n    id: null,\n    x: null,\n    y: null,\n    w: null,\n    h: null\n  },\n  mousePos: {},\n  dragStart: {\n    id: null,\n  },\n};\n\nconst getActionMeta = (action, state) => {\n  if (!action || !action.type)\n    return null;\n  const actionKeysToOmit = [\n    \"config\", \"asyncListValues\"\n  ];\n  const actionTypesToIgnore = [\n    constants.SET_TREE,\n    constants.SET_DRAG_START,\n    constants.SET_DRAG_PROGRESS,\n    constants.SET_DRAG_END,\n  ];\n  let meta = mapValues(omit(action, actionKeysToOmit), applyToJS);\n  let affectedField = action.path && getField(state.tree, action.path) || action.field;\n  if (affectedField) {\n    if (affectedField?.toJS)\n      affectedField = affectedField.toJS();\n    meta.affectedField = affectedField;\n  }\n  if (actionTypesToIgnore.includes(action.type) || action.type.indexOf(\"@@redux\") == 0)\n    meta = null;\n  return meta;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {object} action\n */\nexport default (initialConfig, tree, getMemoizedTree, setLastTree, getLastConfig) => {\n  const initTree = tree;\n  const emptyState = {\n    tree: initTree, \n    ...emptyDrag\n  };\n    \n  return (state = emptyState, action) => {\n    const config = getLastConfig?.() ?? action.config ?? initialConfig;\n    const unset = {__isInternalValueChange: undefined, __lastAction: undefined};\n    let set = {};\n    let actionMeta = getActionMeta(action, state);\n\n    switch (action?.type) {\n    case constants.SET_TREE: {\n      const validatedTree = getMemoizedTree(config, action.tree);\n      set.tree = validatedTree;\n      break;\n    }\n\n    case constants.ADD_CASE_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"case_group\", action.id, action.properties, config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.ADD_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"group\", action.id, action.properties, config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.REMOVE_GROUP: {\n      set.tree = removeGroup(state.tree, action.path, config);\n      break;\n    }\n\n    case constants.ADD_RULE: {\n      set.tree = addItem(state.tree, action.path, action.ruleType, action.id, action.properties, config, action.children);\n      break;\n    }\n\n    case constants.REMOVE_RULE: {\n      set.tree = removeRule(state.tree, action.path, config);\n      break;\n    }\n\n    case constants.SET_CONJUNCTION: {\n      set.tree = setConjunction(state.tree, action.path, action.conjunction);\n      break;\n    }\n\n    case constants.SET_NOT: {\n      set.tree = setNot(state.tree, action.path, action.not);\n      break;\n    }\n\n    case constants.SET_FIELD: {\n      const {optimizeRenderWithInternals} = config.settings;\n      const {tree, isInternalValueChange} = setField(\n        state.tree, action.path, action.field, config,\n        action.asyncListValues, action._meta\n      );\n      set.__isInternalValueChange = optimizeRenderWithInternals && isInternalValueChange;\n      set.tree = tree;\n      break;\n    }\n\n    case constants.SET_FIELD_SRC: {\n      set.tree = setFieldSrc(state.tree, action.path, action.srcKey, config);\n      break;\n    }\n\n    case constants.SET_LOCK: {\n      set.tree = setLock(state.tree, action.path, action.lock);\n      break;\n    }\n\n    case constants.SET_OPERATOR: {\n      set.tree = setOperator(state.tree, action.path, action.operator, config);\n      break;\n    }\n\n    case constants.SET_VALUE: {\n      const {optimizeRenderWithInternals} = config.settings;\n      const {tree, isInternalValueChange} = setValue(\n        state.tree, action.path, action.delta, action.value, action.valueType,  config,\n        action.asyncListValues, action._meta\n      );\n      set.__isInternalValueChange = optimizeRenderWithInternals && isInternalValueChange;\n      set.tree = tree;\n      break;\n    }\n\n    case constants.SET_FUNC_VALUE: {\n      const {optimizeRenderWithInternals} = config.settings;\n      const {tree, isInternalValueChange} = setFuncValue(\n        config, state.tree, action.path, action.delta, action.parentFuncs, \n        action.argKey, action.value, action.valueType,\n        action.asyncListValues, action._meta\n      );\n      set.__isInternalValueChange = optimizeRenderWithInternals && isInternalValueChange;\n      set.tree = tree;\n      break;\n    }\n\n    case constants.SET_VALUE_SRC: {\n      set.tree = setValueSrc(state.tree, action.path, action.delta, action.srcKey, config, action._meta);\n      break;\n    }\n\n    case constants.SET_OPERATOR_OPTION: {\n      set.tree = setOperatorOption(state.tree, action.path, action.name, action.value);\n      break;\n    }\n\n    case constants.MOVE_ITEM: {\n      set.tree = moveItem(state.tree, action.fromPath, action.toPath, action.placement, config);\n      break;\n    }\n\n    case constants.SET_DRAG_START: {\n      set.dragStart = action.dragStart;\n      set.dragging = action.dragging;\n      set.mousePos = action.mousePos;\n      break;\n    }\n\n    case constants.SET_DRAG_PROGRESS: {\n      set.mousePos = action.mousePos;\n      set.dragging = action.dragging;\n      break;\n    }\n\n    case constants.SET_DRAG_END: {\n      set.tree = checkEmptyGroups(state.tree, config);\n      set = { ...set, ...emptyDrag };\n      break;\n    }\n\n    default: {\n      break;\n    }\n    }\n\n    if (actionMeta) {\n      set.__lastAction = actionMeta;\n    }\n\n    if (setLastTree && set.tree && state.tree) {\n      setLastTree(state.tree);\n    }\n    \n    return {...state, ...unset, ...set};\n  };\n\n};\n","import Immutable, {fromJS} from \"immutable\";\nimport {toImmutableList} from \"../utils/stuff\";\nimport * as constants from \"../stores/constants\";\nimport { defaultRuleProperties, defaultGroupProperties } from \"../utils/defaultUtils\";\nimport uuid from \"../utils/uuid\";\n\n\n/**\n * @param {object} config\n * @param {Immutable.Map} tree\n */\nexport const setTree = (config, tree) => ({\n  type: constants.SET_TREE,\n  tree: tree,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addRule = (config, path, properties, ruleType = \"rule\", children = null, parentRuleGroupPath = null) => ({\n  type: constants.ADD_RULE,\n  ruleType: ruleType,\n  children: children,\n  path: toImmutableList(path),\n  id: uuid(),\n  properties: defaultRuleProperties(config, parentRuleGroupPath).merge(fromJS(properties) || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeRule = (config, path) => ({\n  type: constants.REMOVE_RULE,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addDefaultCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(fromJS(properties) || {}),\n  config: config,\n  meta: {\n    isDefaultCase: true\n  }\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(fromJS(properties) || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(fromJS(properties) || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeGroup = (config, path) => ({\n  type: constants.REMOVE_GROUP,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Array} fromPath\n * @param {Array} toPath\n * @param {String} placement, see constants PLACEMENT_*\n */\nexport const moveItem = (config, fromPath, toPath, placement) => ({\n  type: constants.MOVE_ITEM,\n  fromPath: toImmutableList(fromPath),\n  toPath: toImmutableList(toPath),\n  placement: placement,\n  config: config,\n});\n","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nexport const setConjunction = (config, path, conjunction) => ({\n  type: constants.SET_CONJUNCTION,\n  path: toImmutableList(path),\n  conjunction: conjunction\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} not\n */\nexport const setNot = (config, path, not) => ({\n  type: constants.SET_NOT,\n  path: toImmutableList(path),\n  not: not\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nexport const setLock = (config, path, lock) => ({\n  type: constants.SET_LOCK,\n  path: toImmutableList(path),\n  lock: lock\n});","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} field\n */\nexport const setField = (config, path, field, asyncListValues, _meta) => ({\n  type: constants.SET_FIELD,\n  path: toImmutableList(path),\n  field,\n  config,\n  asyncListValues,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {*} srcKey\n */\nexport const setFieldSrc = (config, path, srcKey) => ({\n  type: constants.SET_FIELD_SRC,\n  path: toImmutableList(path),\n  srcKey: srcKey,\n  config: config,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} operator\n */\nexport const setOperator = (config, path, operator) => ({\n  type: constants.SET_OPERATOR,\n  path: toImmutableList(path),\n  operator: operator,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n */\nexport const setValue = (config, path, delta, value, valueType, asyncListValues, _meta) => ({\n  type: constants.SET_VALUE,\n  path: toImmutableList(path),\n  delta,\n  value,\n  valueType,\n  asyncListValues,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nexport const setValueSrc = (config, path, delta, srcKey, _meta) => ({\n  type: constants.SET_VALUE_SRC,\n  path: toImmutableList(path),\n  delta,\n  srcKey,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {Array} parentFuncs\n * @param {string | null} argKey\n * @param {*} value\n * @param {string | \"!valueSrc\"} valueType\n * @param {*} asyncListValues\n */\nexport const setFuncValue = (config, path, delta, parentFuncs, argKey, value, valueType, asyncListValues, _meta) => ({\n  type: constants.SET_FUNC_VALUE,\n  path: toImmutableList(path),\n  delta,\n  parentFuncs,\n  argKey,\n  value,\n  valueType,\n  asyncListValues,\n  config,\n  _meta,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nexport const setOperatorOption = (config, path, name, value) => ({\n  type: constants.SET_OPERATOR_OPTION,\n  path: toImmutableList(path),\n  name: name,\n  value: value,\n  config: config\n});\n","import * as Export from \"./export\";\nimport * as Import from \"./import\";\nimport * as BasicUtils from \"./utils\";\nimport * as BasicFuncs from \"./config/funcs\";\nimport CoreConfig, { ConfigMixins } from \"./config\";\nimport TreeStore from \"./stores/tree\";\nimport * as TreeActions from \"./actions\";\n\nconst Utils = {\n  ...BasicUtils,\n  Export, Import,\n  // intrenal\n  ConfigMixins,\n  // expose import/export api to top level for convenience\n  ...Export, ...Import\n};\n\nexport {Utils, BasicFuncs, CoreConfig, TreeStore, TreeActions};\n","import { TreeStore } from \"@react-awesome-query-builder/core\";\nexport default TreeStore;\n","import React from \"react\";\n\nexport default React.createContext(); ","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_FIELD_SRC = \"SET_FIELD_SRC\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import * as constants from \"../stores/constants\";\n\n\n/**\n * @param {Object} mousePos\n * @param {Object} dragging\n */\nexport const setDragProgress = (mousePos, dragging) => ({\n  type: constants.SET_DRAG_PROGRESS,\n  mousePos: mousePos,\n  dragging: dragging,\n});\n\n/**\n * @param {Object} dragStart\n * @param {Object} dragging\n * @param {Object} mousePos\n */\nexport const setDragStart = (dragStart, dragging, mousePos) => ({\n  type: constants.SET_DRAG_START,\n  dragStart: dragStart,\n  dragging: dragging,\n  mousePos: mousePos,\n});\n\n/**\n *\n */\nexport const setDragEnd = () => ({\n  type: constants.SET_DRAG_END,\n});\n","import { TreeActions } from \"@react-awesome-query-builder/core\";\nimport * as drag from \"./drag\";\nconst { tree, group, rule } = TreeActions;\nexport {\n  tree,\n  group,\n  rule,\n  drag\n};\n","import pick from \"lodash/pick\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { extendConfig, configKeys } = Utils.ConfigUtils;\n\nconst pickConfig = (props) => {\n  return pick(props, configKeys);\n};\n\nexport const createConfigMemo = () => {\n  const configStore = new Map();\n  const maxSize = 2; // current and prev\n  let configId = 0;\n\n  const extendAndStore = (config) => {\n    const extendedConfig = extendConfig(config, ++configId);\n    if ((configStore.size + 1) > maxSize) {\n      configStore.delete(configStore.keys().next().value);\n    }\n    configStore.set(config, extendedConfig);\n    return extendedConfig;\n  };\n\n  const findBasic = (findConfig) => {\n    for (const basicConfig of configStore.keys()) {\n      const extConfig = configStore.get(basicConfig);\n      const found = configKeys.map(k => extConfig[k] === findConfig[k]).filter(v => !v).length === 0;\n      if (found) {\n        return basicConfig;\n      }\n    }\n    return findConfig;\n  };\n\n  const findExtended = (findConfig) => {\n    // strict find:\n    // return configStore.get(findConfig) || configStore.values().find(ec => ec === findConfig);\n\n    for (const savedConfig of configStore.keys()) {\n      const foundParts = configKeys.filter(k => savedConfig[k] === findConfig[k]);\n      const found = foundParts.length === configKeys.length;\n      if (found) {\n        return configStore.get(savedConfig);\n      }\n    }\n\n\n    for (const extendedConfig of configStore.values()) {\n      const foundParts = configKeys.filter(k => extendedConfig[k] === findConfig[k]);\n      const found = foundParts.length === configKeys.length;\n      if (found) {\n        return extendedConfig;\n      }\n    }\n\n    return null;\n  };\n\n  const findOrExtend = (config) => {\n    return findExtended(config) || extendAndStore(config);\n  };\n  \n  return {\n    getExtended: (props) => findOrExtend(pickConfig(props)),\n    getBasic: findBasic\n  };\n};\n","\nexport const getOpCardinality = (opDef) => {\n  return opDef?.cardinality ?? 1;\n};\n\nexport const truncateString = (str, n, useWordBoundary) => {\n  if (!n || !str || str.length <= n) { return str; }\n  var subString = str.substr(0, n-1);\n  return (useWordBoundary \n    ? subString.substr(0, subString.lastIndexOf(\" \")) \n    : subString) + \"...\";\n};\n\nexport const immutableEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else {\n    return v1?.equals(v2);\n  }\n};\n\n// const deepEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else if (Map.isMap(v1)) {\n//     return v1.equals(v2);\n//   } else {\n//     return JSON.stringify(v1) == JSON.stringify(v2);\n//   }\n// };\n\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (a && typeof a.equals === \"function\")\n    return a.equals(b);\n  else if (typeof a === \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n\nconst isDev = () => (typeof process !== \"undefined\" && process.env && process.env.NODE_ENV == \"development\");\n\nexport const getLogger = (devMode = false) => {\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\n\nexport const logger = getLogger();\n","import {immutableEqual} from \"../utils/stuff\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { validateAndFixTree } = Utils.Validation;\n\nexport const createValidationMemo = () => {\n  let originalTree;\n  let validatedTree;\n  let configId;\n\n  return (config, tree, oldConfig = undefined, sanitizeTree = true) => {\n    if (!tree) {\n      return null;\n    }\n    if (config.__configId === configId && (immutableEqual(tree, originalTree) || immutableEqual(tree, validatedTree))) {\n      return validatedTree;\n    } else {\n      configId = config.__configId;\n      originalTree = tree;\n      if (sanitizeTree === false) {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config, false, false, false);\n      } else {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config);\n      }\n      return validatedTree;\n    }\n  };\n};\n","import React from \"react\";\nimport mapValues from \"lodash/mapValues\";\nimport {shallowEqual} from \"./stuff\";\n\nconst getReactContainerType = (el) => {\n  if (el._reactRootContainer) {\n    return \"root\";\n  }\n  if (Object.getOwnPropertyNames(el).filter(k => k.startsWith(\"__reactContainer\")).length > 0) {\n    return \"container\";\n  }\n  return undefined;\n};\n\nconst getReactRootNodeType = (node) => {\n  if (!node) {\n    return undefined;\n  }\n  const type = getReactContainerType(node);\n  if (type !== undefined) {\n    return type;\n  } else {\n    return getReactRootNodeType(node.parentNode);\n  }\n};\n\nexport const isUsingLegacyReactDomRender = (node) => {\n  return getReactRootNodeType(node) === \"root\";\n};\n\n\nexport const liteShouldComponentUpdate = (self, config) => (nextProps, nextState) => {\n  const prevProps = self.props;\n  const prevState = self.state;\n\n  let should = nextProps != prevProps || nextState != prevState;\n  if (should) {\n    if (prevState == nextState && prevProps != nextProps) {\n      let chs = [];\n      for (let k in nextProps) {\n        let changed = (nextProps[k] != prevProps[k]);\n        if (changed) {\n          if (config[k] == \"ignore\")\n            changed = false;\n          else if (config[k] == \"shallow_deep\")\n            changed = !shallowEqual(nextProps[k], prevProps[k], true);\n          else if (config[k] == \"shallow\")\n            changed = !shallowEqual(nextProps[k], prevProps[k]);\n          else if (typeof config[k] == \"function\")\n            changed = config[k](nextProps[k], prevProps[k], nextState);\n        }\n        if (changed)\n          chs.push(k);\n      }\n      if (!chs.length)\n        should = false;\n    }\n  }\n  return should;\n};\n\nexport const pureShouldComponentUpdate = (self) => function(nextProps, nextState) {\n  return (\n    !shallowEqual(self.props, nextProps)\n    || !shallowEqual(self.state, nextState)\n  );\n};\n\nconst canUseOldComponentWillReceiveProps = () => {\n  const v = React.version.split(\".\").map(parseInt.bind(null, 10));\n  return v[0] == 16 && v[1] < 3 || v[0] < 16;\n};\n\nexport const useOnPropsChanged = (obj) => {\n  // 1. `shouldComponentUpdate` should be called after `componentWillReceiveProps`\n  // 2. `shouldComponentUpdate` should not be used for PureComponent\n\n  // Because `useOnPropsChanged` can only be applied to `Component` not `PureComponent`, make it pure now\n  if (!obj.shouldComponentUpdate) {\n    obj.shouldComponentUpdate = pureShouldComponentUpdate(obj);\n  }\n\n  if (canUseOldComponentWillReceiveProps()) {\n    // Use old method\n    obj.componentWillReceiveProps = (nextProps) => {\n      obj.onPropsChanged(nextProps);\n    };\n  } else {\n    // Simulate `componentWillReceiveProps` with `shouldComponentUpdate`\n    const origShouldComponentUpdate = obj.shouldComponentUpdate;\n    const newShouldComponentUpdate = function(nextProps, nextState) {\n      const shouldNotify = !shallowEqual(obj.props, nextProps);\n      if (shouldNotify) {\n        obj.onPropsChanged(nextProps);\n      }\n      const shouldUpdate = origShouldComponentUpdate.call(obj, nextProps, nextState);\n      return shouldUpdate;\n    };\n    obj.shouldComponentUpdate = newShouldComponentUpdate.bind(obj);\n  }\n};\n\nexport const bindActionCreators = (actionCreators, config, dispatch) =>\n  mapValues(actionCreators, (actionCreator) =>\n    (...args) => dispatch(actionCreator(config, ...args))\n  );\n","import React, { Component } from \"react\";\nimport merge from \"lodash/merge\";\nimport {connect} from \"react-redux\";\nimport context from \"../stores/context\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../actions\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {useOnPropsChanged, liteShouldComponentUpdate, bindActionCreators} from \"../utils/reactUtils\";\n\n\nclass Query extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    onChange: PropTypes.func,\n    onInit: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    tree: PropTypes.any, //instanceOf(Immutable.Map)\n    //dispatch: PropTypes.func.isRequired,\n    //__isInternalValueChange\n    //__lastAction\n    //getMemoizedTree: PropTypes.func.isRequired,\n    //getBasicConfig: PropTypes.func.isRequired,\n    //sanitizeTree\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this._updateActions(props);\n\n    // For preventive validation (tree and config consistency)\n    // When config has changed from QueryContainer, \n    //  but new dispatched validated tree value is not in redux store yet (tree prop is old)\n    this.validatedTree = props.getMemoizedTree(props.config, props.tree, undefined, props.sanitizeTree);\n    this.oldValidatedTree = this.validatedTree;\n\n    const basicConfig = props.getBasicConfig(props.config);\n    props.onInit && props.onInit(this.validatedTree, basicConfig, undefined, this.actions);\n  }\n\n  _updateActions (props) {\n    const {config, dispatch} = props;\n    this.actions = bindActionCreators({...actions.tree, ...actions.group, ...actions.rule}, config, dispatch);\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    tree: (nextValue) => {\n      if (nextValue === this.oldValidatedTree && this.oldValidatedTree === this.validatedTree) {\n        // Got value dispatched from QueryContainer\n        // Ignore, because we've just rendered it\n        return false;\n      }\n      return true;\n    }\n  });\n\n  onPropsChanged(nextProps) {\n    const {onChange} = nextProps;\n    const oldConfig = this.props.config;\n    const newTree = nextProps.tree;\n    const oldTree = this.props.tree;\n    const newConfig = nextProps.config;\n\n    this.oldValidatedTree = this.validatedTree;\n    this.validatedTree = newTree;\n    if (oldConfig !== newConfig) {\n      this._updateActions(nextProps);\n      this.validatedTree = nextProps.getMemoizedTree(newConfig, newTree, oldConfig);\n    }\n\n    const validatedTreeChanged = !immutableEqual(this.validatedTree, this.oldValidatedTree);\n    if (validatedTreeChanged) {\n      const newBasicConfig = nextProps.getBasicConfig(newConfig);\n      onChange && onChange(this.validatedTree, newBasicConfig, nextProps.__lastAction, this.actions);\n    }\n  }\n\n  render() {\n    const {config, renderBuilder, dispatch, __isInternalValueChange} = this.props;\n    const builderProps = {\n      tree: this.validatedTree,\n      actions: this.actions,\n      config: config,\n      dispatch: dispatch,\n      __isInternalValueChange\n    };\n\n    return renderBuilder(builderProps);\n  }\n}\n\n\nconst ConnectedQuery = connect(\n  (state) => {\n    return {\n      tree: state.tree,\n      __isInternalValueChange: state.__isInternalValueChange,\n      __lastAction: state.__lastAction,\n    };\n  },\n  null,\n  null,\n  {\n    context\n  }\n)(Query);\nConnectedQuery.displayName = \"ConnectedQuery\";\n\n\nexport default ConnectedQuery;\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport treeStoreReducer from \"../stores/tree\";\nimport context from \"../stores/context\";\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport * as actions from \"../actions\";\nimport {createConfigMemo} from \"../utils/configUtils\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {createValidationMemo} from \"../utils/validation\";\nimport {liteShouldComponentUpdate, useOnPropsChanged} from \"../utils/reactUtils\";\nimport ConnectedQuery from \"./Query\";\nconst {defaultRoot} = Utils.DefaultUtils;\n\n\nexport default class QueryContainer extends Component {\n  static propTypes = {\n    //config\n    conjunctions: PropTypes.object.isRequired,\n    fields: PropTypes.object.isRequired,\n    types: PropTypes.object.isRequired,\n    operators: PropTypes.object.isRequired,\n    widgets: PropTypes.object.isRequired,\n    settings: PropTypes.object.isRequired,\n    ctx: PropTypes.object.isRequired,\n\n    onChange: PropTypes.func,\n    onInit: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    value: PropTypes.any, //instanceOf(Immutable.Map)\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    useOnPropsChanged(this);\n\n    const { getExtended, getBasic } = createConfigMemo();\n    this.getMemoizedConfig = getExtended;\n    this.getBasicConfig = getBasic;\n    this.getMemoizedTree = createValidationMemo();\n    \n    const config = this.getMemoizedConfig(props);\n    const {shouldCreateEmptyGroup} = config.settings;\n    const canAddDefaultRule = !shouldCreateEmptyGroup; // if prop `value` is not provided, can add default/empty rule?\n    const emptyTree = defaultRoot(config, canAddDefaultRule);\n    const sanitizeTree = !!props.value;\n    const tree = props.value || emptyTree;\n    const validatedTree = this.getMemoizedTree(config, tree, undefined, sanitizeTree);\n\n    const reducer = treeStoreReducer(config, validatedTree, this.getMemoizedTree, this.setLastTree, this.getConfig);\n    const store = createStore(reducer);\n\n    this.config = config;\n    this.state = {\n      store\n    };\n    this.QueryWrapper = (pr) => config.settings.renderProvider(pr, config.ctx);\n  }\n\n  setLastTree = (lastTree) => {\n    if (this.prevTree) {\n      this.prevprevTree = this.prevTree;\n    }\n    this.prevTree = lastTree;\n  };\n\n  getConfig = () => {\n    return this.config;\n  };\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    value: (nextValue, prevValue, state) => { return false; }\n  });\n\n  onPropsChanged(nextProps) {\n    // compare configs\n    const prevProps = this.props;\n    const oldConfig = this.config;\n    const nextConfig = this.getMemoizedConfig(nextProps);\n    const isConfigChanged = oldConfig !== nextConfig;\n\n    // compare trees\n    const storeValue = this.state.store.getState().tree;\n    const isTreeChanged = !immutableEqual(nextProps.value, this.props.value) && !immutableEqual(nextProps.value, storeValue);\n    const currentTree = isTreeChanged ? (nextProps.value || defaultRoot(nextProps)) : storeValue;\n    const isTreeTrulyChanged = isTreeChanged && !immutableEqual(nextProps.value, this.prevTree) && !immutableEqual(nextProps.value, this.prevprevTree);\n    this.sanitizeTree = isTreeTrulyChanged || isConfigChanged;\n\n    if (isConfigChanged) {\n      if (prevProps.settings.renderProvider !== nextProps.settings.renderProvider) {\n        this.QueryWrapper = (props) => nextConfig.settings.renderProvider(props, nextConfig.ctx);\n      }\n      this.config = nextConfig;\n    }\n    \n    if (isTreeChanged || isConfigChanged) {\n      const validatedTree = this.getMemoizedTree(nextConfig, currentTree, oldConfig, this.sanitizeTree);\n      //return Promise.resolve().then(() => {\n      this.state.store.dispatch(\n        actions.tree.setTree(nextConfig, validatedTree)\n      );\n      //});\n    }\n  }\n\n  render() {\n    // `get_children` is deprecated!\n    const {renderBuilder, get_children, onChange, onInit} = this.props;\n    const {store} = this.state;\n    const config = this.config;\n    const QueryWrapper = this.QueryWrapper;\n\n    return (\n      <QueryWrapper config={config}>\n        <Provider store={store} context={context}>\n          <ConnectedQuery\n            config={config}\n            getMemoizedTree={this.getMemoizedTree}\n            getBasicConfig={this.getBasicConfig}\n            sanitizeTree={this.sanitizeTree}\n            onChange={onChange}\n            onInit={onInit}\n            renderBuilder={renderBuilder || get_children}\n          />\n        </Provider>\n      </QueryWrapper>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate} from \"../../utils/reactUtils\";\nimport {connect} from \"react-redux\";\nimport classNames from \"classnames\";\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nconst createRuleContainer = (Rule) => \n  class RuleContainer extends Component {\n    static propTypes = {\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      config: PropTypes.object.isRequired,\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      operator: PropTypes.string,\n      field: PropTypes.any,\n      fieldSrc: PropTypes.string,\n      fieldType: PropTypes.string,\n      actions: PropTypes.object.isRequired, //{removeRule: Function, setField, setFieldSrc, setOperator, setOperatorOption, setValue, setValueSrc, ...}\n      onDragStart: PropTypes.func,\n      value: PropTypes.any, //depends on widget\n      valueSrc: PropTypes.any,\n      asyncListValues: PropTypes.array,\n      valueError: PropTypes.any,\n      fieldError: PropTypes.string,\n      operatorOptions: PropTypes.object,\n      reordableNodesCnt: PropTypes.number,\n      parentField: PropTypes.string, //from RuleGroup\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      \n      this.dummyFn.isDummyFn = true;\n    }\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeRule(this.props.path);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    setField = (field, asyncListValues, _meta) => {\n      this.props.actions.setField(this.props.path, field, asyncListValues, _meta);\n    };\n\n    setFieldSrc = (srcKey) => {\n      this.props.actions.setFieldSrc(this.props.path, srcKey);\n    };\n\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    setOperatorOption = (name, value) => {\n      this.props.actions.setOperatorOption(this.props.path, name, value);\n    };\n\n    setValue = (delta, value, type, asyncListValues, _meta) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, _meta);\n    };\n\n    setValueSrc = (delta, srcKey, _meta) => {\n      this.props.actions.setValueSrc(this.props.path, delta, srcKey, _meta);\n    };\n\n    // can be used for both LHS and LHS\n    setFuncValue = (delta, parentFuncs, argKey, value, type, asyncListValues, _meta) => {\n      this.props.actions.setFuncValue(this.props.path, delta, parentFuncs, argKey, value, type, asyncListValues, _meta);\n    };\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    render() {\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const fieldConfig = getFieldConfig(this.props.config, this.props.field);\n      const fieldType = this.props.fieldType || fieldConfig?.type || null;\n      const {showErrorMessage} = this.props.config.settings;\n      const _isGroup = fieldConfig && fieldConfig.type == \"!struct\";\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n\n      const {valueError, fieldError} = this.props;\n      const oneError = [fieldError, ...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n      const hasError = oneError != null && showErrorMessage;\n\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"rule-container\", hasError ? \"rule-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Rule\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              setField={this.dummyFn}\n              setFieldSrc={this.dummyFn}\n              setFuncValue={this.dummyFn}\n              setOperator={this.dummyFn}\n              setOperatorOption={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              setValue={this.dummyFn}\n              setValueSrc={this.dummyFn}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueType={this.props.valueType || null}\n              valueError={this.props.valueError || null}\n              fieldError={this.props.fieldError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Rule\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setFieldSrc={isInDraggingTempo ? this.dummyFn : this.setFieldSrc}\n              setFuncValue={isInDraggingTempo ? this.dummyFn : this.setFuncValue}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setOperatorOption={isInDraggingTempo ? this.dummyFn : this.setOperatorOption}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              setValueSrc={isInDraggingTempo ? this.dummyFn : this.setValueSrc}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueType={this.props.valueType || null}\n              valueError={this.props.valueError || null}\n              fieldError={this.props.fieldError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Rule) => {\n  const ConnectedRuleContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createRuleContainer(Rule));\n  ConnectedRuleContainer.displayName = \"ConnectedRuleContainer\";\n\n  return ConnectedRuleContainer;\n};\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport {connect} from \"react-redux\";\nimport {logger} from \"../../utils/stuff\";\nimport context from \"../../stores/context\";\nimport * as constants from \"../../stores/constants\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../../actions\";\nimport {pureShouldComponentUpdate, useOnPropsChanged, isUsingLegacyReactDomRender} from \"../../utils/reactUtils\";\nconst {clone} = Utils;\nconst {getFlatTree} = Utils.TreeUtils;\n\nlet _isReorderingTree = false;\n\nconst createSortableContainer = (Builder, CanMoveFn = null) => \n  class SortableContainer extends Component {\n    static propTypes = {\n      tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n      actions: PropTypes.object.isRequired, // {moveItem: Function, ..}\n      //... see Builder\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.onPropsChanged(props);\n    }\n\n    onPropsChanged(nextProps) {\n      this.tree = getFlatTree(nextProps.tree);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (changed) {\n              //don't render <Builder> on dragging - appropriate redux-connected components will do it\n              if(k != \"dragging\" && k != \"mousePos\")\n                chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    componentDidUpdate(_prevProps, _prevState) {\n      let dragging = this.props.dragging;\n      let startDragging = this.props.dragStart;\n      _isReorderingTree = false;\n      if (startDragging && startDragging.id) {\n        dragging.itemInfo = this.tree.items[dragging.id];\n        if (dragging.itemInfo) {\n          if (dragging.itemInfo.index != startDragging.itemInfo.index || dragging.itemInfo.parent != startDragging.itemInfo.parent) {\n            const treeEl = startDragging.treeEl;\n            const treeElContainer = startDragging.treeElContainer;\n            const plhEl = this._getPlaceholderNodeEl(treeEl, true);\n            if (plhEl) {\n              const plX = plhEl.getBoundingClientRect().left + window.scrollX;\n              const plY = plhEl.getBoundingClientRect().top + window.scrollY;\n              const oldPlX = startDragging.plX;\n              const oldPlY = startDragging.plY;\n              const scrollTop = treeElContainer.scrollTop;\n              startDragging.plX = plX;\n              startDragging.plY = plY;\n              startDragging.itemInfo = clone(dragging.itemInfo);\n              startDragging.y = plhEl.offsetTop;\n              startDragging.x = plhEl.offsetLeft;\n              startDragging.clientY += (plY - oldPlY);\n              startDragging.clientX += (plX - oldPlX);\n              if (treeElContainer != document.body)\n                startDragging.scrollTop = scrollTop;\n\n              this.onDrag(this.props.mousePos, false);\n            }\n          }\n        }\n      }\n    }\n\n    _getNodeElById (treeEl, indexId, ignoreCache = false) {\n      if (indexId == null)\n        return null;\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[indexId];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      el = treeEl.querySelector('.group-or-rule-container[data-id=\"'+indexId+'\"]');\n      this._cacheEls[indexId] = el;\n      return el;\n    }\n\n    _getDraggableNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"draggable\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-draggable\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"draggable\"] = el;\n      return el;\n    }\n\n    _getPlaceholderNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"placeholder\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-placeholder\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"placeholder\"] = el;\n      return el;\n    }\n\n    _isScrollable(node) {\n      const overflowY = window.getComputedStyle(node)[\"overflow-y\"];\n      return (overflowY === \"scroll\" || overflowY === \"auto\") && (node.scrollHeight > node.offsetHeight);\n    }\n\n    _getScrollParent(node) {\n      if (node == null)\n        return null;\n    \n      if (node === document.body || this._isScrollable(node)) {\n        return node;\n      } else {\n        return this._getScrollParent(node.parentNode);\n      }\n    }\n\n    _getEventTarget = (e, dragStart) => {\n      return e && e.__mocked_window || document.body || window;\n    };\n\n    onDragStart = (id, dom, e) => {\n      let treeEl = dom.closest(\".query-builder\");\n      if (this._isUsingLegacyReactDomRender === undefined) {\n        this._isUsingLegacyReactDomRender = isUsingLegacyReactDomRender(treeEl);\n      }\n      document.body.classList.add(\"qb-dragging\");\n      treeEl.classList.add(\"qb-dragging\");\n      let treeElContainer = treeEl.closest(\".query-builder-container\") || treeEl;\n      treeElContainer = this._getScrollParent(treeElContainer) || document.body;\n      const scrollTop = treeElContainer.scrollTop;\n      \n      const _dragEl = this._getDraggableNodeEl(treeEl);\n      const _plhEl = this._getPlaceholderNodeEl(treeEl);\n\n      const tmpAllGroups = treeEl.querySelectorAll(\".group--children\");\n      const anyGroup = tmpAllGroups.length ? tmpAllGroups[0] : null;\n      let groupPadding;\n      if (anyGroup) {\n        groupPadding = window.getComputedStyle(anyGroup, null).getPropertyValue(\"padding-left\");\n        groupPadding = parseInt(groupPadding);\n      }\n\n      const dragging = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        w: dom.offsetWidth,\n        h: dom.offsetHeight,\n        itemInfo: this.tree.items[id],\n        paddingLeft: groupPadding,\n      };\n      const dragStart = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        scrollTop: scrollTop,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        itemInfo: clone(this.tree.items[id]),\n        treeEl: treeEl,\n        treeElContainer: treeElContainer,\n      };\n      const mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n\n      const target = this._getEventTarget(e, dragStart);\n      this.eventTarget = target;\n      target.addEventListener(\"mousemove\", this.onDrag);\n      target.addEventListener(\"mouseup\", this.onDragEnd);\n\n      this.props.setDragStart(dragStart, dragging, mousePos);\n    };\n\n\n    onDrag = (e, doHandleDrag = true) => {\n      let dragging = Object.assign({}, this.props.dragging);\n      let startDragging = this.props.dragStart;\n      const paddingLeft = dragging.paddingLeft; //this.props.paddingLeft;\n      const treeElContainer = startDragging.treeElContainer;\n      const scrollTop = treeElContainer.scrollTop;\n      dragging.itemInfo = this.tree.items[dragging.id];\n      if (!dragging.itemInfo) {\n        return;\n      }\n\n      let mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n      const startMousePos = {\n        clientX: startDragging.clientX,\n        clientY: startDragging.clientY,\n      };\n\n      if (e.__mock_dom) {\n        const treeEl = startDragging.treeEl;\n        const dragEl = this._getDraggableNodeEl(treeEl);\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        e.__mock_dom({treeEl, dragEl, plhEl});\n      }\n\n      //first init plX/plY\n      if (!startDragging.plX) {\n        const treeEl = startDragging.treeEl;\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        if (plhEl) {\n          startDragging.plX = plhEl.getBoundingClientRect().left + window.scrollX;\n          startDragging.plY = plhEl.getBoundingClientRect().top + window.scrollY;\n        }\n      }\n\n      const startX = startDragging.x;\n      const startY = startDragging.y;\n      const startClientX = startDragging.clientX;\n      const startClientY = startDragging.clientY;\n      const startScrollTop = startDragging.scrollTop;\n      const pos = {\n        x: startX + (e.clientX - startClientX),\n        y: startY + (e.clientY - startClientY) + (scrollTop - startScrollTop)\n      };\n      dragging.x = pos.x;\n      dragging.y = pos.y;\n      dragging.paddingLeft = paddingLeft;\n      dragging.mousePos = mousePos;\n      dragging.startMousePos = startMousePos;\n\n\n      this.props.setDragProgress(mousePos, dragging);\n\n      const moved = doHandleDrag ? this.handleDrag(dragging, e, CanMoveFn) : false;\n\n      if (!moved) {\n        if (e.preventDefault)\n          e.preventDefault();\n      }\n    };\n\n    onDragEnd = () => {\n      let treeEl = this.props.dragStart.treeEl;\n\n      this.props.setDragEnd();\n\n      treeEl.classList.remove(\"qb-dragging\");\n      document.body.classList.remove(\"qb-dragging\");\n      this._cacheEls = {};\n\n      const target = this.eventTarget || this._getEventTarget();\n      target.removeEventListener(\"mousemove\", this.onDrag);\n      target.removeEventListener(\"mouseup\", this.onDragEnd);\n    };\n    \n\n    handleDrag (dragInfo, e, canMoveFn) {\n      const canMoveBeforeAfterGroup = true;\n      const itemInfo = dragInfo.itemInfo;\n      const paddingLeft = dragInfo.paddingLeft;\n\n      let moveInfo = null;\n      const treeEl = this.props.dragStart.treeEl;\n      const dragId = dragInfo.id;\n      const dragEl = this._getDraggableNodeEl(treeEl);\n      const plhEl = this._getPlaceholderNodeEl(treeEl);\n      let dragRect, plhRect, hovRect, treeRect;\n      if (dragEl && plhEl) {\n        dragRect = dragEl.getBoundingClientRect();\n        plhRect = plhEl.getBoundingClientRect();\n        if (!plhRect.width) {\n          return;\n        }\n        let dragDirs = {hrz: 0, vrt: 0};\n        if (dragRect.top < plhRect.top)\n          dragDirs.vrt = -1; //up\n        else if (dragRect.bottom > plhRect.bottom)\n          dragDirs.vrt = +1; //down\n        if (dragRect.left > plhRect.left)\n          dragDirs.hrz = +1; //right\n        else if (dragRect.left < plhRect.left)\n          dragDirs.hrz = -1; //left\n\n        treeRect = treeEl.getBoundingClientRect();\n        const trgCoord = {\n          x: treeRect.left + (treeRect.right - treeRect.left) / 2,\n          y: dragDirs.vrt >= 0 ? dragRect.bottom : dragRect.top,\n        };\n        let hovCNodeEl;\n        if (e.__mocked_hov_container) {\n          hovCNodeEl = e.__mocked_hov_container;\n        } else {\n          const hovNodeEl = document.elementFromPoint(trgCoord.x, trgCoord.y-1);\n          hovCNodeEl = hovNodeEl ? hovNodeEl.closest(\".group-or-rule-container\") : null;\n          if (!hovCNodeEl && hovNodeEl && hovNodeEl.classList.contains(\"query-builder-container\")) {\n            // fix 2022-01-24 - get root .group-or-rule-container\n            const rootGroupContainer = hovNodeEl?.firstChild?.firstChild;\n            if (rootGroupContainer && rootGroupContainer.classList.contains(\"group-or-rule-container\")) {\n              hovCNodeEl = rootGroupContainer;\n            }\n          }\n        }\n        if (!hovCNodeEl) {\n          logger.log(\"out of tree bounds!\");\n        } else {\n          const isGroup = hovCNodeEl.classList.contains(\"group-container\");\n          const hovNodeId = hovCNodeEl.getAttribute(\"data-id\");\n          const hovEl = hovCNodeEl;\n          let doAppend = false;\n          let doPrepend = false;\n          if (hovEl) {\n            hovRect = hovEl.getBoundingClientRect();\n            const hovHeight = hovRect.bottom - hovRect.top;\n            const hovII = this.tree.items[hovNodeId];\n            if (!hovII) {\n              throw new Error(\"There is an issue with rendering. If you use Next.js, please check getServerSideProps() method.\");\n            }\n            let trgRect = null,\n              trgEl = null,\n              trgII = null,\n              altII = null; //for canMoveBeforeAfterGroup\n\n            if (dragDirs.vrt == 0) {\n              trgII = itemInfo;\n              trgEl = plhEl;\n              if (trgEl)\n                trgRect = trgEl.getBoundingClientRect();\n            } else {\n              if (isGroup) {\n                if (dragDirs.vrt > 0) { //down\n                  //take group header (for prepend only)\n                  const hovInnerEl = hovCNodeEl.getElementsByClassName(\"group--header\");\n                  const hovEl2 = hovInnerEl.length ? hovInnerEl[0] : null;\n                  if (hovEl2) {\n                    const hovRect2 = hovEl2.getBoundingClientRect();\n                    const hovHeight2 = hovRect2.bottom - hovRect2.top;\n                    const isOverHover = ((dragRect.bottom - hovRect2.top) > hovHeight2*3/4);\n                    if (isOverHover && hovII.top > dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect2;\n                      trgEl = hovEl2;\n                      doPrepend = true;\n                    }\n                  }\n                } else if (dragDirs.vrt < 0) { //up\n                  if (hovII.lev >= itemInfo.lev) {\n                    //take whole group\n                    const isClimbToHover = ((hovRect.bottom - dragRect.top) >= 2);\n                    if (isClimbToHover && hovII.top < dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                      doAppend = true;\n                    }\n                  }\n                }\n                if (!doPrepend && !doAppend || canMoveBeforeAfterGroup) {\n                  //take whole group and check if we can move before/after group\n                  const isOverHover = (dragDirs.vrt < 0 //up\n                    ? ((hovRect.bottom - dragRect.top) > (hovHeight-5))\n                    : ((dragRect.bottom - hovRect.top) > (hovHeight-5)));\n                  if (isOverHover) {\n                    if (!doPrepend && !doAppend) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                    }\n                    if (canMoveBeforeAfterGroup) {\n                      altII = hovII;\n                    }\n                  }\n                }\n              } else {\n                //check if we can move before/after group\n                const isOverHover = (dragDirs.vrt < 0 //up\n                  ? ((hovRect.bottom - dragRect.top) > hovHeight/2)\n                  : ((dragRect.bottom - hovRect.top) > hovHeight/2));\n                if (isOverHover) {\n                  trgII = hovII;\n                  trgRect = hovRect;\n                  trgEl = hovEl;\n                }\n              }\n            }\n\n            const isSamePos = (trgII && trgII.id == dragId);\n            if (trgRect) {\n              const dragLeftOffset = dragRect.left - treeRect.left;\n              const trgLeftOffset = trgRect.left - treeRect.left;\n              const _trgLev = trgLeftOffset / paddingLeft;\n              const dragLev = Math.max(0, Math.round(dragLeftOffset / paddingLeft));\n\n              //find all possible moves\n              let availMoves = [];\n              let altMoves = []; //alternatively can move after/before group, if can't move into it\n              if (isSamePos) {\n                //do nothing\n              } else {\n                if (isGroup) {\n                  if (doAppend) {\n                    availMoves.push([constants.PLACEMENT_APPEND, trgII, trgII.lev+1]);\n                  } else if (doPrepend) {\n                    availMoves.push([constants.PLACEMENT_PREPEND, trgII, trgII.lev+1]);\n                  }\n                  //alt\n                  if (canMoveBeforeAfterGroup && altII) {\n                    // fix 2022-01-24: do prepend/append instead of before/after for root\n                    const isToRoot = altII.lev == 0;\n                    // fix 2022-01-25: fix prepend/append instead of before/after for case_group\n                    const isToCase = altII.type == \"case_group\" && itemInfo.type != \"case_group\";\n                    let prevCaseId = altII.prev && this.tree.items[altII.prev].caseId;\n                    let nextCaseId = altII.next && this.tree.items[altII.next].caseId;\n                    if (itemInfo.caseId == prevCaseId)\n                      prevCaseId = null;\n                    if (itemInfo.caseId == nextCaseId)\n                      nextCaseId = null;\n                    const prevCase = prevCaseId && this.tree.items[prevCaseId];\n                    const nextCase = nextCaseId && this.tree.items[nextCaseId];\n\n                    if (dragDirs.vrt > 0) { //down\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_APPEND, altII, altII.lev+1]);\n                      } else if (isToCase && nextCase) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, nextCase, nextCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_AFTER, altII, altII.lev]);\n                      }\n                    } else if (dragDirs.vrt < 0) { //up\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, altII, altII.lev+1]);\n                      } else if (isToCase && prevCase) {\n                        altMoves.push([constants.PLACEMENT_APPEND, prevCase, prevCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_BEFORE, altII, altII.lev]);\n                      }\n                    }\n                  }\n                }\n                if (!doAppend && !doPrepend) {\n                  if (dragDirs.vrt < 0) { //up\n                    availMoves.push([constants.PLACEMENT_BEFORE, trgII, trgII.lev]);\n                  } else if (dragDirs.vrt > 0) { //down\n                    availMoves.push([constants.PLACEMENT_AFTER, trgII, trgII.lev]);\n                  }\n                }\n              }\n              \n              //add case\n              const addCaseII = am => {\n                const toII = am[1];\n                const fromCaseII = itemInfo.caseId ? this.tree.items[itemInfo.caseId] : null;\n                const toCaseII = toII.caseId ? this.tree.items[toII.caseId] : null;\n                return [...am, fromCaseII, toCaseII];\n              };\n              availMoves = availMoves.map(addCaseII);\n              altMoves = altMoves.map(addCaseII);\n\n              //sanitize\n              availMoves = availMoves.filter(am => {\n                const placement = am[0];\n                const trg = am[1];\n                if ((placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) && trg.parent == null)\n                  return false;\n                if (trg.collapsed && (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND))\n                  return false;\n\n                let isInside = (trg.id == itemInfo.id);\n                if (!isInside) {\n                  let tmp = trg;\n                  while (tmp.parent) {\n                    tmp = this.tree.items[tmp.parent];\n                    if (tmp.id == itemInfo.id) {\n                      isInside = true;\n                      break;\n                    }\n                  }\n                }\n                return !isInside;\n              }).map(am => {\n                const placement = am[0],\n                  toII = am[1],\n                  _lev = am[2],\n                  _fromCaseII = am[3],\n                  _toCaseII = am[4];\n                let toParentII = null;\n                if (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND)\n                  toParentII = toII;\n                else\n                  toParentII = this.tree.items[toII.parent];\n                if (toParentII && toParentII.parent == null)\n                  toParentII = null;\n                am[5] = toParentII;\n                return am;\n              });\n\n              let bestMode = null;\n              let filteredMoves = availMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              if (canMoveBeforeAfterGroup && filteredMoves.length == 0 && altMoves.length > 0) {\n                filteredMoves = altMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              }\n              const levs = filteredMoves.map(am => am[2]);\n              const curLev = itemInfo.lev;\n              const allLevs = levs.concat(curLev);\n              let closestDragLev = null;\n              if (allLevs.indexOf(dragLev) != -1)\n                closestDragLev = dragLev;\n              else if (dragLev > Math.max(...allLevs))\n                closestDragLev = Math.max(...allLevs);\n              else if (dragLev < Math.min(...allLevs))\n                closestDragLev = Math.min(...allLevs);\n              bestMode = filteredMoves.find(am => am[2] == closestDragLev);\n              if (!isSamePos && !bestMode && filteredMoves.length)\n                bestMode = filteredMoves[0];\n              moveInfo = bestMode;\n            }\n          }\n        }\n      }\n\n      if (moveInfo) {\n        this.move(itemInfo, moveInfo[1], moveInfo[0], moveInfo[3]);\n\n        // logger.log(\"DRAG-N-DROP\", JSON.stringify({\n        //   dragRect,\n        //   plhRect,\n        //   treeRect,\n        //   hovRect,\n        //   startMousePos: dragInfo.startMousePos,\n        //   mousePos: dragInfo.mousePos,\n        // }));\n        return true;\n      }\n\n      return false;\n    }\n\n    canMove (fromII, toII, placement, fromCaseII, toCaseII, toParentII, canMoveFn) {\n      if (!fromII || !toII)\n        return false;\n      if (fromII.id === toII.id)\n        return false;\n\n      const { canRegroup, canRegroupCases, maxNesting, maxNumberOfRules, canLeaveEmptyCase } = this.props.config.settings;\n      const newLev = toParentII ? toParentII.lev + 1 : toII.lev;\n      const newDepthLev = newLev + (fromII.depth || 0);\n      const isBeforeAfter = placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER;\n      const isPend = placement == constants.PLACEMENT_PREPEND || placement == constants.PLACEMENT_APPEND;\n      const isLev1 = isBeforeAfter && toII.lev == 1 || isPend && toII.lev == 0;\n      const isParentChange = fromII.parent != toII.parent;\n      const isStructChange = isPend || isParentChange;\n      // can't move `case_group` anywhere but before/after anoter `case_group`\n      const isForbiddenStructChange = fromII.type == \"case_group\" && !isLev1\n        // can't restruct `rule_group`\n        || fromII.parentType == \"rule_group\" || toII.type == \"rule_group\" || toII.parentType == \"rule_group\" \n        // only `case_group` can be placed under `switch_group`\n        || fromII.type != \"case_group\" && toII.type == \"case_group\" && isBeforeAfter\n        || fromII.type != \"case_group\" && toII.type == \"switch_group\"\n        // can't move rule/group to another case\n        || !canRegroupCases && fromII.caseId != toII.caseId;\n      const isLockedChange = toII.isLocked || fromII.isLocked || toParentII && toParentII.isLocked;\n      \n      if (maxNesting && newDepthLev > maxNesting)\n        return false;\n      \n      if (isStructChange && (!canRegroup || isForbiddenStructChange || isLockedChange))\n        return false;\n      \n      if (fromII.type != \"case_group\" && fromII.caseId != toII.caseId) {\n        const isLastFromCase = fromCaseII ? fromCaseII._height == 2 : false;\n        const newRulesInTargetCase = toCaseII ? toCaseII.atomicRulesCountInCase + 1 : 0;\n        if (maxNumberOfRules && newRulesInTargetCase > maxNumberOfRules)\n          return false;\n        if (isLastFromCase && !canLeaveEmptyCase)\n          return false;\n      }\n\n      if (fromII.type == \"case_group\" && (\n        fromII.isDefaultCase || toII.isDefaultCase\n        || toII.type == \"switch_group\" && placement == constants.PLACEMENT_APPEND\n      )) {\n        // leave default case alone\n        return false;\n      }\n\n      let res = true;\n      if (canMoveFn) {\n        res = canMoveFn(fromII.node.toJS(), toII.node.toJS(), placement, toParentII ? toParentII.node.toJS() : null);\n      }\n      return res;\n    }\n\n    move (fromII, toII, placement, toParentII) {\n      if (!this._isUsingLegacyReactDomRender) {\n        _isReorderingTree = true;\n      }\n      //logger.log(\"move\", fromII, toII, placement, toParentII);\n      this.props.actions.moveItem(fromII.path, toII.path, placement);\n    }\n\n    render() {\n      return <Builder\n        {...this.props}\n        onDragStart={this.onDragStart}\n      />;\n    }\n  };\n\n\nexport default (Builder, CanMoveFn = null) => {\n  const ConnectedSortableContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n        dragStart: state.dragStart,\n        mousePos: state.mousePos,\n      };\n    }, {\n      setDragStart: actions.drag.setDragStart,\n      setDragProgress: actions.drag.setDragProgress,\n      setDragEnd: actions.drag.setDragEnd,\n    },\n    null,\n    {\n      context\n    }\n  )(createSortableContainer(Builder, CanMoveFn));\n  ConnectedSortableContainer.displayName = \"ConnectedSortableContainer\";\n\n  return ConnectedSortableContainer;\n};\n\nexport { _isReorderingTree };\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { _isReorderingTree } from \"./SortableContainer\";\nimport classNames from \"classnames\";\n\n\nexport default (className) => (GroupOrRule) =>\n  class Draggable extends PureComponent {\n    static propTypes = {\n      isDraggingTempo: PropTypes.bool,\n      isDraggingMe: PropTypes.bool,\n      onDragStart: PropTypes.func,\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.wrapper = React.createRef();\n    }\n\n    handleDraggerMouseDown = (e) => {\n      var nodeId = this.props.id;\n      var dom = this.wrapper.current;\n        \n      if (this.props.onDragStart) {\n        this.props.onDragStart(nodeId, dom, e);\n      }\n    };\n\n    render () {\n      const {\n        isDraggingTempo,\n        isDraggingMe,\n        dragging,\n        ...otherProps\n      } = this.props;\n      const {\n        isTrueLocked,\n      } = otherProps;\n\n      let styles = {};\n      if (isDraggingMe && isDraggingTempo) {\n        if (_isReorderingTree) {\n          // don't apply old styles for dragging tempo during reorder\n        } else {\n          styles = {\n            top: dragging.y,\n            left: dragging.x,\n            width: dragging.w\n          };\n        }\n      }\n\n      const cn = classNames(className, \"group-or-rule\",\n        isDraggingMe && isDraggingTempo ? \"qb-draggable\" : null,\n        isDraggingMe && !isDraggingTempo ? \"qb-placeholder\" : null,\n        isTrueLocked ? \"locked\" : null\n      );\n\n      return (\n        <div\n          className={cn}\n          style={styles}\n          ref={this.wrapper}\n          data-id={this.props.id}\n        >\n          <GroupOrRule\n            handleDraggerMouseDown={this.handleDraggerMouseDown}\n            isDraggingMe={isDraggingMe}\n            isDraggingTempo={isDraggingTempo}\n            {...otherProps}\n          />\n        </div>\n      );\n    }\n\n  };\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport keys from \"lodash/keys\";\nimport pickBy from \"lodash/pickBy\";\nimport mapValues from \"lodash/mapValues\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFieldConfig, getOperatorConfig} = Utils.ConfigUtils;\n\n\nexport default class Operator extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.any,\n    selectedFieldType: PropTypes.string,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    readonly: PropTypes.bool,\n    //actions\n    setOperator: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"selectedOperator\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({config, selectedField, selectedFieldType, selectedOperator}) {\n    const fieldConfig = getFieldConfig(config, selectedField);\n    let operators = [...(fieldConfig?.operators || config.types[selectedFieldType]?.operators || [])];\n    if (!selectedField && !operators.includes(selectedOperator)) {\n      // eg. `prox` field was selected, then `fieldSrc` changed to `func`\n      // But `text` type excludes `proximity` operator in config, so add manually\n      operators.push(selectedOperator);\n    }\n    \n    const operatorsOptions \n      = mapValues(\n        pickBy(\n          config.operators, \n          (item, key) => operators?.indexOf(key) !== -1\n        ), \n        (_opts, op) => getOperatorConfig(config, op, selectedField)\n      );\n      \n    const items = this.buildOptions(config, operatorsOptions, operators);\n\n    const selectedOpts = operatorsOptions[selectedOperator] || {};\n    const placeholder = this.props.config.settings.operatorPlaceholder;\n    const selectedKey = selectedOperator;\n    const selectedKeys = selectedKey ? [selectedKey] : null;\n    const selectedPath = selectedKeys;\n    const selectedLabel = selectedOpts.label;\n    \n    return {\n      placeholder, items,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, fieldConfig\n    };\n  }\n\n  buildOptions(config, fields, ops) {\n    if (!fields || !ops)\n      return null;\n\n    return keys(fields).sort((a, b) => (ops.indexOf(a) - ops.indexOf(b))).map(fieldKey => {\n      const field = fields[fieldKey];\n      const label = field.label;\n      return {\n        key: fieldKey,\n        path: fieldKey,\n        label,\n      };\n    });\n  }\n\n  render() {\n    const {config, customProps, setOperator, readonly, id, groupId} = this.props;\n    const {renderOperator} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: setOperator,\n      ...this.meta\n    };\n    if (!renderProps.items)\n      return null;\n    return renderOperator(renderProps, config.ctx);\n  }\n\n\n}\n","import React from \"react\";\n\nconst Col = ({children, ...props}) => (<div {...props}>{children}</div>);\n\nconst dummyFn = () => {};\n\nconst DragIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"gray\" width=\"18px\" height=\"18px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"/>\n  </svg>\n);\n\nconst WithConfirmFn = (Cmp) => (\n  props => {\n    const {useConfirm} = props.config.settings;\n    const confirmFn = useConfirm ? useConfirm.call(props.config.ctx, props.config.ctx) : null;\n    return <Cmp {...props} confirmFn={confirmFn} />;\n  }\n);\n\nexport {\n  Col, dummyFn, DragIcon, WithConfirmFn\n};\n","import React, { PureComponent } from \"react\";\nimport Operator from \"./Operator\";\nimport {Col} from \"../utils\";\n\n\nexport default class OperatorWrapper extends PureComponent {\n  render() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, selectedOperator, setOperator, \n      selectedFieldParts, showOperator, showOperatorLabel, selectedFieldWidgetConfig, readonly, id, groupId\n    } = this.props;\n    const operator = showOperator\n            && <Col key={\"operators-for-\"+(selectedFieldParts || []).join(\"_\")} className=\"rule--operator\">\n              { config.settings.showLabels\n                    && <label className=\"rule--label\">{config.settings.operatorLabel}</label>\n              }\n              <Operator\n                key=\"operator\"\n                config={config}\n                selectedField={selectedField}\n                selectedFieldSrc={selectedFieldSrc}\n                selectedFieldType={selectedFieldType}\n                selectedOperator={selectedOperator}\n                setOperator={setOperator}\n                readonly={readonly}\n                id={id}\n                groupId={groupId}\n              />\n            </Col>;\n    const hiddenOperator = showOperatorLabel\n            && <Col key={\"operators-for-\"+(selectedFieldParts || []).join(\"_\")} className=\"rule--operator\">\n              <div className=\"rule--operator-wrapper\">\n                {config.settings.showLabels\n                  ? <label className=\"rule--label\">&nbsp;</label>\n                  : null}\n                <div className=\"rule--operator-text-wrapper\">\n                  <span className=\"rule--operator-text\">{selectedFieldWidgetConfig.operatorInlineLabel}</span>\n                </div>\n              </div>\n            </Col>;\n    return [\n      operator,\n      hiddenOperator\n    ];\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {getFieldPathLabels} = Utils.RuleUtils;\nconst {getFieldConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\n\n\nexport default class Field extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    parentField: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //actions\n    setField: PropTypes.func.isRequired,\n    setFieldSrc: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"config\", \"parentField\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({selectedField, selectedFieldType, config, parentField}) {\n    let selectedKey = selectedField;\n    const {maxLabelsLength, fieldSeparatorDisplay, fieldPlaceholder, fieldSeparator} = config.settings;\n    const isFieldSelected = !!selectedField;\n    const placeholder = !isFieldSelected ? truncateString(fieldPlaceholder, maxLabelsLength) : null;\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPathParts(selectedKey, config);\n    const selectedPath = getFieldPathParts(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2;\n\n    const parentFieldPath = getFieldParts(parentField, config);\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig && parentFieldConfig.subfields : config.fields;\n    const lookingForFieldType = !isFieldSelected && selectedFieldType;\n    const items = this.buildOptions(parentFieldPath, config, sourceFields, lookingForFieldType, parentFieldPath);\n\n    // Field source has been chnaged, no new field selected, but op & value remains\n    const errorText = lookingForFieldType ? \"Please select field\" : null;\n\n    if (selectedKey && typeof selectedKey === \"object\") {\n      // can happen due to incorrect rule state: field is Map{func, args} but fieldSrc is not \"func\"\n      selectedKey = undefined;\n    }\n\n    return {\n      placeholder, items, parentField,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n      errorText,\n    };\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = getFieldParts(fieldKey, config);\n    let label = fieldOpts?.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  buildOptions(parentFieldPath, config, fields, fieldType = undefined, path = null, optGroup = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    const countFieldsMatchesType = (fields) => {\n      return Object.keys(fields || {}).reduce((acc, fieldKey) => {\n        const field = fields[fieldKey];\n        if (field.type === \"!struct\") {\n          return acc + countFieldsMatchesType(field.subfields);\n        } else {\n          return acc + (field.type === fieldType ? 1 : 0);\n        }\n      }, 0);\n    };\n\n    return keys(fields).map(fieldKey => {\n      const fullFieldPath = [...(path ?? []), fieldKey];\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fullFieldPath, config);\n      const partsLabels = getFieldPathLabels(fullFieldPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath?.length)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      const disabled = field.disabled;\n\n      if (field.hideForSelect)\n        return undefined;\n\n      if (field.type == \"!struct\") {\n        const items = this.buildOptions(parentFieldPath, config, field.subfields, fieldType, fullFieldPath, {\n          label,\n          tooltip,\n        });\n        const hasItemsMatchesType = countFieldsMatchesType(field.subfields) > 0;\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items,\n          matchesType: hasItemsMatchesType,\n        };\n      } else {\n        const matchesType = fieldType !== undefined ? field.type === fieldType : undefined;\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n          matchesType,\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  setField = (field, asyncListValues, _meta = {}) => {\n    const {id} = this.props;\n    if (!_meta.widgetId) {\n      const widgetId = [\n        id,\n        \"L\",\n        -1,\n      ].join(\":\");\n      _meta.widgetId = widgetId;\n    }\n    this.props.setField(field, asyncListValues, _meta);\n  };\n\n  render() {\n    const {config, customProps, setFieldSrc, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: this.setField,\n      setFieldSrc,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst { clone } = Utils;\nconst {getFieldConfig, getFuncConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\nconst {getFuncPathLabels, getWidgetForFieldOp} = Utils.RuleUtils;\nconst {shallowEqual} = Utils.OtherUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class FuncSelect extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldType: PropTypes.string,\n    fieldSrc: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n    isLHS: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n      \n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"fieldType\", \"fieldSrc\", \"operator\", \"isFuncArg\", \"isLHS\", \"parentFuncs\"];\n    const keysForMeta = [\"config\", \"field\", \"fieldType\", \"fieldSrc\", \"value\", \"isLHS\"];\n    const needUpdateItems = !this.items || keysForItems.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      nextProps[k] !== prevProps[k]\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps, this.meta);\n    }\n  }\n\n  getItems({config, field, fieldType, isLHS, operator, parentFuncs, fieldDefinition, isFuncArg}, {lookingForFieldType}) {\n    const {canUseFuncForField} = config.settings;\n    const filteredFuncs = this.filterFuncs(\n      config, config.funcs, field, fieldType, isLHS, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition\n    );\n    const items = this.buildOptions(config, filteredFuncs, lookingForFieldType);\n    return items;\n  }\n\n  getMeta({config, _field, fieldType, value, isLHS, isFuncArg}) {\n    const {funcPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedFuncKey = value;\n    const isFuncSelected = !!value;\n\n    // const leftFieldConfig = getFieldConfig(config, field);\n    // const leftFieldWidgetField = leftFieldConfig?.widgets?.field;\n    // const leftFieldWidgetFieldProps = leftFieldWidgetField && leftFieldWidgetField.widgetProps || {};\n    const placeholder = !isFuncSelected ? funcPlaceholder : null;\n\n    const currFunc = isFuncSelected ? getFuncConfig(config, selectedFuncKey) : null;\n    const selectedOpts = currFunc || {};\n\n    const selectedKeys = getFieldPathParts(selectedFuncKey, config);\n    const selectedPath = getFieldPathParts(selectedFuncKey, config, true);\n    const selectedLabel = this.getFuncLabel(currFunc, selectedFuncKey, config);\n    const partsLabels = getFuncPathLabels(selectedFuncKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel)\n      selectedFullLabel = null;\n\n    const isRootFuncAtLHS = isLHS && !isFuncArg;\n    const lookingForFieldType = isRootFuncAtLHS && !isFuncSelected && fieldType;\n    // Field source has been chnaged, no new func selected, but op & value remains\n    const errorText = lookingForFieldType ? \"Please select function\" : null;\n  \n    return {\n      placeholder,\n      selectedKey: selectedFuncKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedFullLabel,\n      errorText,\n      lookingForFieldType,\n    };\n  }\n\n  filterFuncs(config, funcs, leftFieldFullkey, fieldType, isLHS, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition) {\n    funcs = clone(funcs);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    let expectedType;\n    let targetDefinition = leftFieldConfig;\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = widget && config.widgets[widget];\n    if (isFuncArg) {\n      targetDefinition = fieldDefinition;\n      expectedType = fieldDefinition?.type;\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else if (leftFieldConfig) {\n      expectedType = leftFieldConfig.type;\n    } else if (!isLHS) {\n      // no field at LHS, but can use type from \"memory effect\"\n      expectedType = fieldType;\n    }\n\n    function _filter(list, path) {\n      for (let funcKey in list) {\n        let subfields = list[funcKey].subfields;\n        let subpath = (path ? path : []).concat(funcKey);\n        let funcFullkey = subpath.join(fieldSeparator);\n        let funcConfig = getFuncConfig(config, funcFullkey);\n        if (funcConfig.type == \"!struct\") {\n          if(_filter(subfields, subpath) == 0)\n            delete list[funcKey];\n        } else {\n          let canUse = !expectedType || funcConfig.returnType == expectedType;\n          if (targetDefinition?.funcs)\n            canUse = canUse && targetDefinition.funcs.includes(funcFullkey);\n          if (canUseFuncForField)\n            canUse = canUse && canUseFuncForField(leftFieldFullkey, leftFieldConfig, funcFullkey, funcConfig, operator);\n          // don't use func in func (can be configurable, but usually users don't need this)\n          if (!funcConfig.allowSelfNesting && parentFuncs && parentFuncs.map(([func, _arg]) => func).includes(funcFullkey))\n            canUse = false;\n          if (!canUse)\n            delete list[funcKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(funcs, []);\n\n    return funcs;\n  }\n\n  buildOptions(config, funcs, fieldType = undefined, path = null, optGroup = null) {\n    if (!funcs)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    const countFieldsMatchesType = (fields) => {\n      return Object.keys(fields || {}).reduce((acc, fieldKey) => {\n        const field = fields[fieldKey];\n        if (field.type === \"!struct\") {\n          return acc + countFieldsMatchesType(field.subfields);\n        } else {\n          return acc + (field.type === fieldType ? 1 : 0);\n        }\n      }, 0);\n    };\n\n    return keys(funcs).map(funcKey => {\n      const fullFuncPath = [...(path ?? []), funcKey];\n      const func = funcs[funcKey];\n      const label = this.getFuncLabel(func, fullFuncPath, config);\n      const partsLabels = getFuncPathLabels(fullFuncPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label)\n        fullLabel = null;\n      const tooltip = func.tooltip;\n\n      if (func.type == \"!struct\") {\n        const items = this.buildOptions(config, func.subfields, fieldType, fullFuncPath, {\n          label,\n          tooltip,\n        });\n        const hasItemsMatchesType = countFieldsMatchesType(func.subfields) > 0;\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          items,\n          matchesType: hasItemsMatchesType,\n        };\n      } else {\n        const matchesType = fieldType !== undefined ? func.returnType === fieldType : undefined;\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n          matchesType,\n        };\n      }\n    });\n  }\n\n  getFuncLabel(funcOpts, funcKey, config) {\n    if (!funcKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let funcParts = getFieldParts(funcKey, config);\n    let label = funcOpts?.label || last(funcParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderFunc} = config.settings;\n    const renderProps = {\n      config,\n      customProps,\n      readonly,\n      setField: setValue,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderFunc(renderProps, config.ctx);\n  }\n\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { getTitleInListValues } = Utils.ListUtils;\nconst { _widgetDefKeysToOmit } = Utils.ConfigUtils;\nconst { _fixImmutableValue } = Utils.TreeUtils;\n\nexport default ({\n  delta, isFuncArg, valueSrc,\n  value: immValue, valueError: immValueError, fieldError, asyncListValues,\n  isSpecialRange, fieldDefinition,\n  widget, widgetDefinition, widgetValueLabel, valueLabels, textSeparators, setValueHandler, setFuncValue,\n  config, field, fieldSrc, fieldType, isLHS, operator, readonly, parentField, parentFuncs, id, groupId, widgetId,\n}) => {\n  const {factory: widgetFactory, ...fieldWidgetProps} = widgetDefinition;\n  const isConst = isFuncArg && fieldDefinition.valueSources && fieldDefinition.valueSources.length == 1 && fieldDefinition.valueSources[0] == \"const\";\n  const defaultValue = fieldDefinition.defaultValue;\n\n  if (!widgetFactory) {\n    return \"?\";\n  }\n  \n  // Widget value (if it's not a func with args) should NOT be Immutable\n  // Eg. for multiselect value should be a JS Array, not Immutable List\n  const fixedImmValue = immValue ? immValue.map(v => _fixImmutableValue(v)) : undefined;\n  let value = isSpecialRange \n    ? [fixedImmValue?.get(0), fixedImmValue?.get(1)] \n    : (fixedImmValue ? fixedImmValue.get(delta) : undefined);\n  const valueError = immValueError?.get && (isSpecialRange \n    ? [immValueError.get(0), immValueError.get(1), immValueError.get(2)]\n    : immValueError.get(delta)\n  ) || null;\n  const errorMessage = isLHS ? fieldError : valueError;\n  if (isSpecialRange && value[0] === undefined && value[1] === undefined)\n    value = undefined;\n  const {fieldSettings} = fieldDefinition || {};\n\n  const widgetProps = omit({\n    ...fieldWidgetProps, \n    ...fieldSettings,\n    config: config,\n    field: field,\n    fieldSrc: fieldSrc,\n    fieldType: fieldType,\n    isLHS: isLHS,\n    parentField: parentField,\n    parentFuncs: parentFuncs,\n    fieldDefinition: fieldDefinition,\n    operator: operator,\n    delta: delta,\n    isSpecialRange: isSpecialRange,\n    isFuncArg: isFuncArg,\n    value: value,\n    valueError,\n    fieldError,\n    errorMessage,\n    label: widgetValueLabel.label,\n    placeholder: widgetValueLabel.placeholder,\n    placeholders: valueLabels ? valueLabels.placeholder : null,\n    textSeparators: textSeparators,\n    setValue: setValueHandler,\n    setFuncValue,\n    readonly: readonly,\n    asyncListValues: asyncListValues,\n    id, groupId, widgetId,\n  }, [\n    ..._widgetDefKeysToOmit,\n    \"toJS\"\n  ]);\n\n  if (widget == \"field\") {\n    //\n  }\n\n  if (isConst && defaultValue) {\n    const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n    if (typeof defaultValue == \"boolean\") {\n      return defaultValue ? (widgetProps.labelYes || \"YES\") : (widgetProps.labelNo || \"NO\");\n    } else if (listValues) {\n      if (Array.isArray(defaultValue))\n        return defaultValue.map(v => getTitleInListValues(listValues, v) || v).join(\", \");\n      else\n        return (getTitleInListValues(listValues, defaultValue) || defaultValue);  \n    }\n    return \"\"+defaultValue;\n  }\n    \n  return widgetFactory(widgetProps, config.ctx);\n};\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\nimport {getOpCardinality} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport pick from \"lodash/pick\";\nimport WidgetFactory from \"./WidgetFactory\";\nimport classNames from \"classnames\";\nimport {Col} from \"../utils\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\nconst {getValueSourcesForFieldOp, getWidgetForFieldOp, getValueLabel} = Utils.RuleUtils;\nconst { createListFromArray } = Utils.DefaultUtils;\nconst {shallowEqual} = Utils.OtherUtils;\n\nconst funcArgDummyOpDef = {cardinality: 1};\n\nexport default class Widget extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //instanceOf(Immutable.List)\n    valueSrc: PropTypes.any, //instanceOf(Immutable.List)\n    valueError: PropTypes.any, //instanceOf(Immutable.List)\n    fieldError: PropTypes.string,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    operator: PropTypes.string,\n    readonly: PropTypes.bool,\n    asyncListValues: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    //actions\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    setFuncValue: PropTypes.func,\n    // for isFuncArg\n    isFuncArg: PropTypes.bool,\n    fieldFunc: PropTypes.string,\n    fieldArg: PropTypes.string,\n    leftField: PropTypes.any,\n    // for RuleGroupExt\n    isForRuleGroup: PropTypes.bool,\n    parentField: PropTypes.string,\n    // for func in func\n    parentFuncs: PropTypes.array,\n    isLHS: PropTypes.bool,\n    // for case_value\n    isCaseValue: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\n      \"config\", \"id\", \"parentFuncs\",\n      \"field\", \"fieldSrc\", \"fieldType\", \"fieldFunc\", \"fieldArg\", \"leftField\", \"operator\", \"valueSrc\", \"asyncListValues\",\n      \"isLHS\", \"isFuncArg\", \"isForRuleGroup\", \"isCaseValue\",\n    ];\n    const needUpdateMeta = !this.meta \n          || keysForMeta\n            .map(k => (\n              k === \"parentFuncs\"\n                ? !shallowEqual(nextProps[k], prevProps[k], true)\n                //tip: for isFuncArg we need to wrap value in Imm list\n                : k === \"isFuncArg\"\n                  ? nextProps[k] !== prevProps[k] || nextProps[\"isFuncArg\"] && nextProps[\"value\"] !== prevProps[\"value\"]\n                  : nextProps[k] !== prevProps[k]\n            ))\n            .filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  _setValue = (\n    isSpecialRange, delta, widgetType, widgetId, // bound!\n    value, asyncListValues, _meta = {}\n  ) => {\n    if (!_meta.widgetId) {\n      _meta.widgetId = widgetId;\n    }\n    if (isSpecialRange && Array.isArray(value)) {\n      const oldRange = [this.props.value.get(0), this.props.value.get(1)];\n      if (oldRange[0] != value[0])\n        this.props.setValue(0, value[0], widgetType, asyncListValues, _meta);\n      if (oldRange[1] != value[1])\n        this.props.setValue(1, value[1], widgetType, asyncListValues, _meta);\n    } else {\n      this.props.setValue(delta, value, widgetType, asyncListValues, _meta);\n    }\n  };\n\n  _setValueSrc = (\n    delta, widgetId, // bound!\n    srcKey\n  ) => {\n    const _meta = {\n      widgetId,\n    };\n    this.props.setValueSrc(delta, srcKey, _meta);\n  };\n\n  getMeta({\n    config, field: simpleField, fieldSrc, fieldType, fieldFunc, fieldArg, operator, valueSrc: valueSrcs, value: values,\n    isForRuleGroup, isCaseValue, isFuncArg, leftField, asyncListValues, parentFuncs, isLHS, id,\n  }) {\n    const field = isFuncArg ? {func: fieldFunc, arg: fieldArg} : simpleField;\n    const isOkWithoutField = !simpleField && fieldType;\n    let iValueSrcs = valueSrcs;\n    let iValues = values;\n    if (isFuncArg || isForRuleGroup || isCaseValue) {\n      iValueSrcs = createListFromArray([valueSrcs]);\n      iValues = createListFromArray([values]);\n    }\n\n    let fieldDefinition = getFieldConfig(config, field);\n    if (!fieldDefinition && isOkWithoutField) {\n      fieldDefinition = config.types[fieldType];\n    }\n    let defaultWidget = getWidgetForFieldOp(config, field, operator);\n    if (!defaultWidget && isOkWithoutField) {\n      defaultWidget = config.types[fieldType]?.mainWidget;\n    }\n    const operatorDefinition = isFuncArg\n      ? funcArgDummyOpDef\n      : getOperatorConfig(config, operator, field);\n    if ((fieldDefinition == null || operatorDefinition == null) && !isCaseValue) {\n      return null;\n    }\n    const isSpecialRange = operatorDefinition?.isSpecialRange;\n    const isSpecialRangeForSrcField = isSpecialRange && (iValueSrcs?.get(0) == \"field\" || iValueSrcs?.get(1) == \"field\");\n    const isTrueSpecialRange = isSpecialRange && !isSpecialRangeForSrcField;\n    const cardinality = isTrueSpecialRange ? 1 : getOpCardinality(operatorDefinition);\n    if (cardinality === 0) {\n      return null;\n    }\n\n    let valueSources = getValueSourcesForFieldOp(config, field, operator, fieldDefinition);\n    if (!field) {\n      valueSources = Object.keys(config.settings.valueSourcesInfo);\n    }\n    const widgets = range(0, cardinality).map(delta => {\n      const valueSrc = iValueSrcs?.get(delta) || null;\n      let widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      let widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      if (isSpecialRangeForSrcField) {\n        widget = widgetDefinition.singleWidget;\n        widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      }\n      if (!widgetDefinition && isOkWithoutField) {\n        widget = [\"func\", \"field\"].includes(valueSrc) ? valueSrc : defaultWidget;\n        widgetDefinition = config.widgets[widget];\n      }\n      const widgetType = widgetDefinition?.type;\n      const valueLabel = getValueLabel(config, field, operator, delta, valueSrc, isTrueSpecialRange);\n      const widgetValueLabel = getValueLabel(config, field, operator, delta, null, isTrueSpecialRange);\n      const sepText = operatorDefinition?.textSeparators ? operatorDefinition?.textSeparators[delta] : null;\n\n      let valueLabels = null;\n      let textSeparators = null;\n      if (isSpecialRange) {\n        valueLabels = [\n          getValueLabel(config, field, operator, 0),\n          getValueLabel(config, field, operator, 1)\n        ];\n        valueLabels = {\n          placeholder: [ valueLabels[0].placeholder, valueLabels[1].placeholder ],\n          label: [ valueLabels[0].label, valueLabels[1].label ],\n        };\n        textSeparators = operatorDefinition?.textSeparators;\n      }\n\n      const widgetId = [\n        id,\n        isLHS ? \"L\" : \"R\",\n        isLHS ? -1 : (delta || 0),\n        (parentFuncs || []).map(([f, a]) => `${f}(${a})`).join(\"/\"),\n      ].join(\":\");\n      const vsId = widgetId + \":\" + \"VS\";\n\n      const setValueSrcHandler = this._setValueSrc.bind(this, delta, vsId);\n      const setValueHandler = this._setValue.bind(this, isSpecialRange, delta, widgetType, widgetId);\n\n      return {\n        valueSrc,\n        valueLabel,\n        widget,\n        sepText,\n        widgetDefinition,\n        widgetValueLabel,\n        valueLabels,\n        textSeparators,\n        setValueSrcHandler,\n        setValueHandler,\n        widgetId,\n      };\n    });\n      \n    return {\n      defaultWidget,\n      fieldDefinition,\n      operatorDefinition,\n      isSpecialRange: isTrueSpecialRange,\n      cardinality,\n      valueSources,\n      widgets,\n      iValues, //correct for isFuncArg\n      aField: field, //correct for isFuncArg\n      asyncListValues,\n    };\n  }\n\n  renderWidget = (delta, meta, props) => {\n    const {\n      config, isFuncArg, leftField, operator, value: values, valueError, fieldError,\n      readonly, parentField, parentFuncs, id, groupId, fieldSrc, fieldType, isLHS, setFuncValue,\n    } = props;\n    const {settings} = config;\n    const { widgets, iValues, aField, valueSources } = meta;\n    const value = isFuncArg ? iValues : values;\n    const field = isFuncArg ? leftField : aField;\n    const { valueSrc, valueLabel, widgetId } = widgets[delta];\n    const hasValueSources = valueSources.length > 1 && !readonly;\n    \n    const widgetLabel = settings.showLabels\n      ? <label className=\"rule--label\">{valueLabel.label}</label>\n      : null;\n    return (\n      <div key={\"widget-\"+field+\"-\"+delta} className={classNames(\n        valueSrc == \"func\" ? \"widget--func\" : \"widget--widget\",\n        hasValueSources ? \"widget--has-valuerscs\" : \"widget--has-no-valuerscs\"\n      )}>\n        {valueSrc == \"func\" ? null : widgetLabel}\n        <WidgetFactory\n          id={id} // id of rule\n          groupId={groupId}\n          widgetId={widgetId}\n          valueSrc={valueSrc}\n          delta={delta}\n          value={value}\n          valueError={valueError}\n          fieldError={fieldError}\n          isFuncArg={isFuncArg}\n          isLHS={isLHS}\n          {...pick(meta, [\"isSpecialRange\", \"fieldDefinition\", \"asyncListValues\"])}\n          {...pick(widgets[delta], [\n            \"widget\", \"widgetDefinition\", \"widgetValueLabel\", \"valueLabels\", \"textSeparators\", \"setValueHandler\",\n          ])}\n          setFuncValue={setFuncValue}\n          config={config}\n          field={field}\n          fieldSrc={fieldSrc}\n          fieldType={fieldType}\n          parentField={parentField}\n          parentFuncs={parentFuncs}\n          operator={operator}\n          readonly={readonly}\n        />\n      </div>\n    );\n  };\n\n  renderValueSources = (delta, meta, props) => {\n    const {config, isFuncArg, leftField, operator, readonly} = props;\n    const {settings} = config;\n    const { valueSources, widgets, aField } = meta;\n    const field = isFuncArg ? leftField : aField;\n    const {valueSrc, setValueSrcHandler} = widgets[delta];\n    const {valueSourcesInfo, renderValueSources} = settings;\n    const valueSourcesOptions = valueSources.map(srcKey => [srcKey, {\n      label: valueSourcesInfo[srcKey].label\n    }]);\n    const ValueSources = (pr) => renderValueSources(pr, config.ctx);\n\n    const sourceLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return valueSources.length > 1 && !readonly\n      && <div key={\"valuesrc-\"+field+\"-\"+delta} className=\"widget--valuesrc\">\n        {sourceLabel}\n        <ValueSources\n          key={\"valuesrc-\"+delta}\n          delta={delta}\n          valueSources={valueSourcesOptions}\n          valueSrc={valueSrc}\n          config={config}\n          field={field}\n          operator={operator}\n          setValueSrc={setValueSrcHandler}\n          readonly={readonly}\n          title={settings.valueSourcesPopupTitle}\n        />\n      </div>;\n  };\n\n  renderSep = (delta, meta, props) => {\n    const {config} = props;\n    const {widgets} = meta;\n    const {settings} = config;\n    const {sepText} = widgets[delta];\n\n    const sepLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return sepText\n      && <div key={\"widget-separators-\"+delta} className={classNames(\n        \"widget--sep\",\n        delta == 0 && \"widget--sep-first\"\n      )} >\n        {sepLabel}\n        <span>{sepText}</span>\n      </div>;\n  };\n\n  renderWidgetDelta = (delta) => {\n    const sep = this.renderSep(delta, this.meta, this.props);\n    const sources = this.renderValueSources(delta, this.meta, this.props);\n    const widgetCmp = this.renderWidget(delta, this.meta, this.props);\n\n    return [\n      sep,\n      sources,\n      widgetCmp,\n    ];\n  };\n\n  render() {\n    if (!this.meta) return null;\n    const { defaultWidget, cardinality } = this.meta;\n    if (!defaultWidget) return null;\n    const name = defaultWidget;\n\n    return (\n      <Col\n        className={`rule--widget rule--widget--${name.toUpperCase()}`}\n        key={\"widget-col-\"+name}\n      >\n        {range(0, cardinality).map(this.renderWidgetDelta)}\n      </Col>\n    );\n  }\n\n}\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport FuncSelect from \"./FuncSelect\";\nimport Widget from \"./Widget\";\nimport {Col} from \"../utils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFuncConfig} = Utils.ConfigUtils;\nconst {setFunc, setArgValue, setArgValueSrc} = Utils.FuncUtils;\nconst {shallowEqual} = Utils.OtherUtils;\n\n\nexport default class FuncWidget extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    fieldError: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.object, //instanceOf(Immutable.Map) //with keys 'func' and `args`\n    setValue: PropTypes.func.isRequired,\n    setFuncValue: PropTypes.func,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n    isLHS: PropTypes.bool,\n    valueError: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"field\", \"operator\", \"value\", \"fieldSrc\", \"fieldType\", \"isLHS\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({config, field, operator, value}) {\n    const funcKey = value?.get?.(\"func\") ?? null;\n    const funcDefinition = funcKey ? getFuncConfig(config, funcKey) : null;\n\n    return {\n      funcDefinition, funcKey\n    };\n  }\n\n  setFunc = (funcKey, _meta = {}) => {\n    const { isLHS, delta, parentFuncs, id } = this.props;\n    if (!_meta.widgetId) {\n      const widgetId = [\n        id,\n        isLHS ? \"L\" : \"R\",\n        isLHS ? -1 : (delta || 0),\n        (parentFuncs || []).map(([f, a]) => `${f}(${a})`).join(\"/\"),\n        \"F\",\n      ].join(\":\");\n      _meta.widgetId = widgetId;\n    }\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (delta || 0), parentFuncs, null, funcKey, \"!func\", undefined, _meta\n    );\n\n    // old bubbling\n    // this.props.setValue(\n    //   setFunc(this.props.value, funcKey, this.props.config),\n    //   undefined,\n    //   _meta,\n    // );\n  };\n\n  setArgValue = (argKey, argVal, widgetType, asyncListValues, _meta) => {\n    const {config, delta, isLHS, parentFuncs} = this.props;\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (delta || 0), parentFuncs, argKey, argVal, widgetType, asyncListValues, _meta\n    );\n\n    // old bubbling\n    // const {funcDefinition} = this.meta;\n    // const {args} = funcDefinition;\n    // const argDefinition = args[argKey];\n    // this.props.setValue(\n    //   setArgValue(this.props.value, argKey, argVal, argDefinition, config),\n    //   asyncListValues,\n    //   _meta,\n    // );\n  };\n\n  setArgValueSrc = (argKey, argValSrc, _meta) => {\n    const {config, delta, isLHS, parentFuncs} = this.props;\n\n    this.props.setFuncValue(\n      isLHS ? -1 : (delta || 0), parentFuncs, argKey, argValSrc, \"!valueSrc\", undefined, _meta\n    );\n\n    // old bubbling\n    // const {funcDefinition} = this.meta;\n    // const {args} = funcDefinition;\n    // const argDefinition = args[argKey];\n    // this.props.setValue(\n    //   setArgValueSrc(this.props.value, argKey, argValSrc, argDefinition, config),\n    //   undefined,\n    //   _meta,\n    // );\n  };\n\n  renderFuncSelect = () => {\n    const {config, field, fieldType, fieldSrc, isLHS, operator, customProps, value, readonly, parentFuncs, id, groupId, isFuncArg, fieldDefinition} = this.props;\n    const funcKey = value?.get?.(\"func\") ?? null;\n    const selectProps = {\n      value: funcKey,\n      setValue: this.setFunc,\n      config, field, fieldType, fieldSrc, isLHS, operator, customProps, readonly, parentFuncs, \n      isFuncArg, fieldDefinition,\n      id, groupId,\n    };\n    const {showLabels, funcLabel} = config.settings;\n    const widgetLabel = showLabels\n      ? <label className=\"rule--label\">{funcLabel}</label>\n      : null;\n\n    return (\n      <Col key=\"func\" className=\"rule--func\">\n        {widgetLabel}\n        <FuncSelect {...selectProps} />\n      </Col>\n    );\n  };\n\n  renderArgLabel = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix, label} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label\">\n        {label || argKey}\n      </Col>\n    );\n  };\n\n  renderArgLabelSep = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label-sep\">\n        {\":\"}\n      </Col>\n    );\n  };\n\n  renderArgVal = (funcKey, argKey, argDefinition) => {\n    const {\n      config, field, fieldType, fieldSrc, isLHS, operator, value, readonly, parentFuncs, id, groupId,\n      fieldError, valueError, setFuncValue,\n    } = this.props;\n    const arg = value ? value.getIn([\"args\", argKey]) : null;\n    const argVal = arg ? arg.get(\"value\") : undefined;\n    const defaultValueSource = argDefinition.valueSources.length == 1 ? argDefinition.valueSources[0] : undefined;\n    const argValSrc = arg ? (arg.get(\"valueSrc\") || defaultValueSource || \"value\") : defaultValueSource;\n\n    const widgetProps = {\n      config, \n      fieldFunc: funcKey,\n      fieldArg: argKey,\n      leftField: field,\n      fieldType, // type of leftField\n      fieldSrc, // src of leftField\n      fieldError, // error in LHS\n      valueError, // error in RHS\n      isLHS,\n      operator: null,\n      value: argVal,\n      valueSrc: argValSrc,\n      setValue: this.setArgValue,\n      setValueSrc: this.setArgValueSrc,\n      setFuncValue,\n      funcKey,\n      argKey,\n      argDefinition,\n      readonly,\n      parentFuncs,\n      id,\n      groupId,\n    };\n    //tip: value & valueSrc will be converted to Immutable.List at <Widget>\n\n    return (\n      <Col className=\"rule--func--arg-value\">\n        <ArgWidget {...widgetProps} />\n      </Col>\n    );\n  };\n\n  renderArgSep = (argKey, argDefinition, argIndex, {renderSeps}) => {\n    if (!argIndex) return null;\n    return (\n      <Col className=\"rule--func--arg-sep\">\n        {renderSeps ? renderSeps[argIndex - 1] : \", \"}\n      </Col>\n    );\n  };\n\n  renderBracketBefore = ({renderBrackets}) => {\n    return (\n      <Col key=\"before_args\" className=\"rule--func--bracket-before\">\n        {renderBrackets ? renderBrackets[0] : \"(\"}\n      </Col>\n    );\n  };\n\n  renderBracketAfter = ({renderBrackets}) => {\n    return (\n      <Col key=\"after_args\" className=\"rule--func--bracket-after\">\n        {renderBrackets ? renderBrackets[1] : \")\"}\n      </Col>\n    );\n  };\n\n  renderFuncArgs = () => {\n    const {funcDefinition, funcKey} = this.meta;\n    if (!funcKey) return null;\n    const {args} = funcDefinition || {};\n    if (!args) return null;\n\n    return (\n      <>\n        {this.renderBracketBefore(funcDefinition)}\n        <Col key={`args-${funcKey}`} className={`rule--func--args rule--func--${funcKey}--args`}>\n          {Object.keys(args).map((argKey, argIndex) => (\n            <Col key={`arg-${argKey}-${argIndex}`} className={`rule--func--arg rule--func--${funcKey}--arg--${argKey}`}>\n              {this.renderArgSep(argKey, args[argKey], argIndex, funcDefinition)}\n              {this.renderArgLabel(argKey, args[argKey])}\n              {this.renderArgLabelSep(argKey, args[argKey])}\n              {this.renderArgVal(funcKey, argKey, args[argKey])}\n            </Col>\n          ))}\n        </Col>\n        {this.renderBracketAfter(funcDefinition)}\n      </>\n    );\n  };\n\n  render() {\n    const { parentFuncs } = this.props;\n    const funcPath = parentFuncs ? parentFuncs.map(([f, a]) => `${f}_${a}`).join(\"-\") : \"root\";\n    const funcLevel = parentFuncs?.length || 0;\n    return (\n      <Col className={`rule--func--wrapper rule--func--wrapper--under-${funcPath} rule--func--wrapper--lev-${funcLevel}`}>\n        {this.renderFuncSelect()}\n        {this.renderFuncArgs()}\n      </Col>\n    );\n  }\n}\n\n\nclass ArgWidget extends Component {\n  static propTypes = {\n    funcKey: PropTypes.string.isRequired,\n    argKey: PropTypes.string.isRequired,\n    setValue: PropTypes.func.isRequired,\n    setValueSrc: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    isLHS: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"parentFuncs\", \"funcKey\", \"argKey\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k =>\n      (k === \"parentFuncs\" ? !shallowEqual(nextProps[k], prevProps[k], true) : nextProps[k] !== prevProps[k])\n    ).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({parentFuncs, funcKey, argKey}) {\n    const newParentFuncs = [...(parentFuncs || []), [funcKey, argKey]];\n\n    return {\n      parentFuncs: newParentFuncs\n    };\n  }\n\n  setValue = (_delta, value, widgetType, asyncListValues, _meta) => {\n    const {setValue, argKey} = this.props;\n    setValue(argKey, value, widgetType, asyncListValues, _meta);\n  };\n\n  setValueSrc = (_delta, valueSrc, _meta) => {\n    const {setValueSrc, argKey} = this.props;\n    setValueSrc(argKey, valueSrc, _meta);\n  };\n\n  render() {\n    const {parentFuncs} = this.meta;\n    return (\n      <Widget\n        {...this.props}\n        setValue={this.setValue}\n        setValueSrc={this.setValueSrc}\n        isFuncArg={true}\n        parentFuncs={parentFuncs}\n      />\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport Field from \"./Field\";\nimport {Col} from \"../utils\";\nimport FuncWidget from \"./FuncWidget\";\n\n\nexport default class FieldWrapper extends PureComponent {\n  render() {\n    const {classname, canSelectFieldSource} = this.props;\n    const fieldSources = canSelectFieldSource && this.renderFieldSources();\n    const field = this.renderField();\n    if (!canSelectFieldSource) {\n      return field;\n    } else {\n      return (\n        <Col className={\"rule--field-wrapper\"}>\n          {fieldSources}\n          {field}\n        </Col>\n      );\n    }\n  }\n\n  renderField = () => {\n    const {\n      config, classname, selectedField, selectedFieldSrc, selectedFieldType, \n      setField, setFuncValue, parentField, readonly, id, groupId,\n      fieldError, valueError,\n    } = this.props;\n    const supportedFieldSrcs = [\"func\", \"field\"];\n    if (!supportedFieldSrcs.includes(selectedFieldSrc)) {\n      return \"?\";\n    }\n    const field = selectedFieldSrc === \"func\" ? (\n      <FuncWidget\n        isLHS={true}\n        config={config}\n        value={selectedField}\n        fieldSrc={selectedFieldSrc}\n        fieldType={selectedFieldType}\n        fieldError={fieldError}\n        valueError={valueError}\n        parentField={parentField}\n        setValue={setField}\n        setFuncValue={setFuncValue}\n        readonly={readonly}\n        id={id}\n        groupId={groupId}\n        key={\"field-func-\" + id}\n      />\n    ) : (\n      <Field\n        config={config}\n        selectedField={selectedField}\n        selectedFieldSrc={selectedFieldSrc}\n        selectedFieldType={selectedFieldType}\n        parentField={parentField}\n        setField={setField}\n        customProps={config.settings.customFieldSelectProps}\n        readonly={readonly}\n        id={id}\n        groupId={groupId}\n        key={\"field-\" + id}\n      />\n    );\n    const fieldLabel = selectedFieldSrc === \"func\" ? config.settings.funcLabel : config.settings.fieldLabel;\n    const label = config.settings.showLabels && selectedFieldSrc !== \"func\" && <label className=\"rule--label\">{fieldLabel}</label>;\n    return (\n      <div key={selectedFieldSrc} className={classname}>\n        {label}\n        {field}\n      </div>\n    );\n  };\n\n  renderFieldSources = () => {\n    const { config, readonly, selectedFieldSrc, setFieldSrc, id } = this.props;\n    const { settings } = config;\n    const {\n      fieldSources,\n      valueSourcesInfo,\n      renderValueSources,\n    } = settings;\n    const fieldSourcesOptions = fieldSources.map((srcKey) => [\n      srcKey,\n      {\n        label: valueSourcesInfo[srcKey].label,\n      },\n    ]);\n    const ValueSources = (pr) => renderValueSources(pr, config.ctx);\n\n    const sourceLabel = settings.showLabels ? (\n      <label className=\"rule--label\">&nbsp;</label>\n    ) : null;\n\n    return (\n      fieldSources.length > 1 && !readonly && (\n        <div key={\"fieldsrc\"} className={\"rule--fieldsrc\"}>\n          {sourceLabel}\n          <ValueSources\n            key={\"fieldsrc-\" + id}\n            valueSources={fieldSourcesOptions}\n            valueSrc={selectedFieldSrc}\n            config={config}\n            setValueSrc={setFieldSrc}\n            readonly={readonly}\n            title={settings.fieldSourcesPopupTitle}\n          />\n        </div>\n      )\n    );\n  };\n}\n","import React, { PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nconst {getOperatorConfig} = Utils.ConfigUtils;\n\nexport default class OperatorOptions extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    operatorOptions: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string.isRequired,\n    readonly: PropTypes.bool,\n    //actions\n    setOperatorOption: PropTypes.func.isRequired,\n  };\n\n  render() {\n    if (!this.props.selectedOperator)\n      return null;\n    const operatorDefinitions = getOperatorConfig(this.props.config, this.props.selectedOperator, this.props.selectedField);\n    if (typeof operatorDefinitions.options === \"undefined\") {\n      return null;\n    }\n\n    const { factory: optionsFactory, ...basicOptionsProps } = operatorDefinitions.options;\n    const optionsProps = Object.assign({}, basicOptionsProps, {\n      config: this.props.config,\n      field: this.props.selectedField,\n      fieldSrc: this.props.selectedFieldSrc,\n      operator: this.props.selectedOperator,\n      options: this.props.operatorOptions,\n      setOption: this.props.setOperatorOption,\n      readonly: this.props.readonly,\n    });\n    const optionsCmp = optionsFactory(optionsProps, this.props.config.ctx);\n    const name = this.props.selectedOperator;\n\n    return (\n      <div className={`rule--operator rule--operator--${name.toUpperCase()}`}>\n        {optionsCmp}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport RuleContainer from \"../containers/RuleContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport Widget from \"../rule/Widget\";\nimport OperatorOptions from \"../rule/OperatorOptions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldParts} = Utils.ConfigUtils;\nconst {isEmptyRuleProperties} = Utils.RuleUtils;\n\n\nclass Rule extends Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    operatorOptions: PropTypes.object,\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //depends on widget\n    valueSrc: PropTypes.any,\n    valueType: PropTypes.any,\n    asyncListValues: PropTypes.array,\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    parentField: PropTypes.string, //from RuleGroup\n    valueError: PropTypes.any,\n    fieldError: PropTypes.string,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //path: PropTypes.instanceOf(Immutable.List),\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    setOperator: PropTypes.func,\n    setOperatorOption: PropTypes.func,\n    setLock: PropTypes.func,\n    removeSelf: PropTypes.func,\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    reordableNodesCnt: PropTypes.number,\n    totalRulesCnt: PropTypes.number,\n    parentReordableNodesCnt: PropTypes.number,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"selectedOperator\", \"config\", \"reordableNodesCnt\", \"isLocked\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({selectedField, selectedFieldType, selectedOperator, config, reordableNodesCnt, isLocked}) {\n    const {keepInputOnChangeFieldSrc} = config.settings;\n    const selectedFieldParts = getFieldParts(selectedField, config);\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    const isSelectedGroup = selectedFieldConfig && selectedFieldConfig.type == \"!struct\";\n    const isOkWithoutField = keepInputOnChangeFieldSrc && selectedFieldType;\n    const isFieldSelected = !!selectedField || isOkWithoutField;\n    const isFieldAndOpSelected = isFieldSelected && selectedOperator;\n    const selectedOperatorConfig = getOperatorConfig(config, selectedOperator, selectedField);\n    const selectedOperatorHasOptions = selectedOperatorConfig && selectedOperatorConfig.options != null;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator, null, null) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n\n    const showDragIcon = config.settings.canReorder && reordableNodesCnt > 1 && !isLocked;\n    const showOperator = isFieldSelected && !hideOperator;\n    const showOperatorLabel = isFieldSelected && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showWidget = isFieldAndOpSelected && !isSelectedGroup;\n    const showOperatorOptions = isFieldAndOpSelected && selectedOperatorHasOptions;\n\n    return {\n      selectedFieldParts, selectedFieldWidgetConfig,\n      showDragIcon, showOperator, showOperatorLabel, showWidget, showOperatorOptions\n    };\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeRuleConfirmOptions: confirmOptions} = config.settings;\n    const doRemove = () => {\n      this.props.removeSelf();\n    };\n    if (confirmOptions && !this.isEmptyCurrentRule()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      doRemove();\n    }\n  }\n\n  _buildWidgetProps({\n    selectedField, selectedFieldSrc, selectedFieldType,\n    selectedOperator, operatorOptions,\n    value, valueType, valueSrc, asyncListValues, valueError, fieldError,\n    parentField,\n  }) {\n    return {\n      field: selectedField,\n      fieldSrc: selectedFieldSrc,\n      fieldType: selectedFieldType,\n      operator: selectedOperator,\n      operatorOptions,\n      value,\n      valueType,\n      valueSrc,\n      asyncListValues,\n      valueError,\n      fieldError,\n      parentField,\n    };\n  }\n\n  isEmptyCurrentRule() {\n    const {config} = this.props;\n    const ruleData = this._buildWidgetProps(this.props);\n    return isEmptyRuleProperties(ruleData, config);\n  }\n\n  renderField() {\n    const {\n      config, isLocked, parentField, groupId, id,\n      selectedFieldSrc, selectedField, selectedFieldType, setField, setFuncValue, setFieldSrc, fieldError,\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    // tip: don't allow function inside !group (yet)\n\n    return <FieldWrapper\n      key=\"field\"\n      classname={classNames(\n        selectedFieldSrc == \"func\" ? \"rule--field--func\" : \"rule--field\",\n      )}\n      config={config}\n      canSelectFieldSource={!parentField}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      fieldError={fieldError}\n      setField={!immutableFieldsMode ? setField : dummyFn}\n      setFuncValue={!immutableFieldsMode ? setFuncValue : dummyFn}\n      setFieldSrc={!immutableFieldsMode ? setFieldSrc : dummyFn}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator () {\n    const {config, isLocked} = this.props;\n    const {\n      selectedFieldParts, selectedFieldWidgetConfig, showOperator, showOperatorLabel\n    } = this.meta;\n    const { immutableOpsMode } = config.settings;\n    \n    return <OperatorWrapper\n      key=\"operator\"\n      config={config}\n      selectedField={this.props.selectedField}\n      selectedFieldSrc={this.props.selectedFieldSrc}\n      selectedFieldType={this.props.selectedFieldType}\n      selectedOperator={this.props.selectedOperator}\n      setOperator={!immutableOpsMode ? this.props.setOperator : dummyFn}\n      selectedFieldParts={selectedFieldParts}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableOpsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  renderWidget() {\n    const {config, isLocked} = this.props;\n    const { showWidget } = this.meta;\n    const { immutableValuesMode } = config.settings;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      {...this._buildWidgetProps(this.props)}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      setValueSrc={!immutableValuesMode ? this.props.setValueSrc : dummyFn}\n      setFuncValue={!immutableValuesMode ? this.props.setFuncValue : dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderOperatorOptions() {\n    const {config} = this.props;\n    const { showOperatorOptions } = this.meta;\n    const { immutableOpsMode, immutableValuesMode } = config.settings;\n    if (!showOperatorOptions) return null;\n\n    const opOpts = <OperatorOptions\n      key=\"operatorOptions\"\n      selectedField={this.props.selectedField}\n      selectedOperator={this.props.selectedOperator}\n      operatorOptions={this.props.operatorOptions}\n      setOperatorOption={!immutableOpsMode ? this.props.setOperatorOption : dummyFn}\n      config={config}\n      readonly={immutableValuesMode}\n    />;\n\n    return (\n      <Col key={\"op-options-for-\"+this.props.selectedOperator} className=\"rule--operator-options\">\n        {opOpts}\n      </Col>\n    );\n  }\n\n  renderBeforeWidget() {\n    const {config} = this.props;\n    const { renderBeforeWidget } = config.settings;\n    return renderBeforeWidget \n        && <Col key={\"before-widget-for-\" +this.props.selectedOperator} className=\"rule--before-widget\">\n          {typeof renderBeforeWidget === \"function\" ? renderBeforeWidget(this.props, config.ctx) : renderBeforeWidget}\n        </Col>;\n  }\n\n  renderAfterWidget() {\n    const {config} = this.props;\n    const { renderAfterWidget } = config.settings;\n    return renderAfterWidget \n        && <Col key={\"after-widget-for-\" +this.props.selectedOperator} className=\"rule--after-widget\">\n          {typeof renderAfterWidget === \"function\" ? renderAfterWidget(this.props, config.ctx) : renderAfterWidget}\n        </Col>;\n  }\n\n  renderError() {\n    const {config, valueError, fieldError} = this.props;\n    const { renderRuleError, showErrorMessage } = config.settings;\n    const oneError = [fieldError, ...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n        && <div className=\"rule--error\">\n          {renderRuleError ? renderRuleError({error: oneError}, config.ctx) : oneError}\n        </div>;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const { config } = this.props;\n    const { showDragIcon } = this.meta;\n    const { renderIcon } = config.settings;\n    const Icon = (pr) => renderIcon?.(pr, config.ctx);\n    const icon = <Icon\n      type=\"drag\"\n    />;\n    return showDragIcon && (<div \n      key=\"rule-drag-icon\"\n      onMouseDown={handleDraggerMouseDown}\n      className={\"qb-drag-handler rule--drag-handler\"}\n    >{icon}</div>);\n  }\n\n  renderDel() {\n    const {config, isLocked} = this.props;\n    const {\n      deleteLabel, \n      immutableGroupsMode, \n      renderButton,\n      renderIcon,\n      canDeleteLocked\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n\n    return !immutableGroupsMode && (!isLocked || isLocked && canDeleteLocked) && (\n      <Btn \n        type=\"delRule\" onClick={this.removeSelf} label={deleteLabel} config={config} renderIcon={Icon}\n      />\n    );\n  }\n\n  renderLock() {\n    const {config, isLocked, isTrueLocked, id} = this.props;\n    const {\n      lockLabel, lockedLabel, showLock,\n      renderSwitch\n    } = config.settings;\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n      \n    return showLock && !(isLocked && !isTrueLocked) && (\n      <Switch \n        type=\"lock\" id={id} value={isLocked} setValue={this.setLock} label={lockLabel} checkedLabel={lockedLabel} hideLabel={true} config={config}\n      />\n    );\n  }\n\n  render () {\n    const { showOperatorOptions, selectedFieldWidgetConfig } = this.meta;\n    const { valueSrc, value, config } = this.props;\n    const canShrinkValue = valueSrc?.first() == \"value\" && !showOperatorOptions && value.size == 1 && selectedFieldWidgetConfig.fullWidth;\n    const { renderButtonGroup } = config.settings;\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const parts = [\n      this.renderField(),\n      this.renderOperator(),\n      this.renderBeforeWidget(),\n      this.renderWidget(),\n      this.renderAfterWidget(),\n      this.renderOperatorOptions(),\n    ];\n    const body = <div key=\"rule-body\" className={classNames(\"rule--body\", canShrinkValue && \"can--shrink--value\")}>{parts}</div>;\n\n    const error = this.renderError();\n    const drag = this.renderDrag();\n    const lock = this.renderLock();\n    const del = this.renderDel();\n      \n    return (\n      <>\n        {drag}\n        <div className=\"rule--body--wrapper\">\n          {body}{error}\n        </div>\n        <div className=\"rule--header\">\n          <BtnGrp config={config}>\n            {lock}\n            {del}\n          </BtnGrp>\n        </div>\n      </>\n    );\n  }\n\n}\n\n\nexport default RuleContainer(Draggable(\"rule\")(WithConfirmFn(Rule)));\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport mapValues from \"lodash/mapValues\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate, useOnPropsChanged} from \"../../utils/reactUtils\";\nimport classNames from \"classnames\";\nimport {connect} from \"react-redux\";\nconst {defaultGroupConjunction} = Utils.DefaultUtils;\n\n\nconst createGroupContainer = (Group, itemType) => \n  class GroupContainer extends Component {\n    static propTypes = {\n      config: PropTypes.object.isRequired,\n      actions: PropTypes.object.isRequired, //{setConjunction: Function, removeGroup, addGroup, addRule, ...}\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      not: PropTypes.bool,\n      conjunction: PropTypes.string,\n      children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n      onDragStart: PropTypes.func,\n      reordableNodesCnt: PropTypes.number,\n      field: PropTypes.any, // for RuleGroup\n      fieldSrc: PropTypes.string, // for RuleGroup\n      fieldType: PropTypes.string, // for RuleGroup\n      parentField: PropTypes.string, //from RuleGroup\n      valueError: PropTypes.any, // for RuleGroup\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.selectedConjunction = this._selectedConjunction(props);\n      this.conjunctionOptions = this._getConjunctionOptions(props);\n      this.dummyFn.isDummyFn = true;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    onPropsChanged(nextProps) {\n      const {config, id, conjunction} = nextProps;\n      const oldConfig = this.props.config;\n      const oldConjunction = this.props.conjunction;\n      if (oldConfig != config || oldConjunction != conjunction) {\n        this.selectedConjunction = this._selectedConjunction(nextProps);\n        this.conjunctionOptions = this._getConjunctionOptions(nextProps);\n      }\n    }\n\n    _getConjunctionOptions (props) {\n      return mapValues(props.config.conjunctions, (item, index) => ({\n        id: `conjunction-${props.id}-${index}`,\n        name: `conjunction[${props.id}]`,\n        key: index,\n        label: item.label,\n        checked: index === this._selectedConjunction(props),\n      }));\n    }\n\n    _selectedConjunction = (props) => {\n      props = props || this.props;\n      return props.conjunction || defaultGroupConjunction(props.config, props.field);\n    };\n\n    setConjunction = (conj = null) => {\n      this.props.actions.setConjunction(this.props.path, conj);\n    };\n\n    setNot = (not = null) => {\n      this.props.actions.setNot(this.props.path, not);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeGroup(this.props.path);\n    };\n\n    addGroup = () => {\n      this.props.actions.addGroup(this.props.path);\n    };\n\n    addCaseGroup = () => {\n      this.props.actions.addCaseGroup(this.props.path);\n    };\n\n    addDefaultCaseGroup = () => {\n      this.props.actions.addDefaultCaseGroup(this.props.path);\n    };\n\n    addRule = () => {\n      const parentRuleGroupPath = itemType == \"rule_group\" ? this.props.field : null;\n      this.props.actions.addRule(this.props.path, undefined, undefined, undefined, parentRuleGroupPath);\n    };\n\n    // for RuleGroup\n    setField = (field, asyncListValues, _meta) => {\n      this.props.actions.setField(this.props.path, field, asyncListValues, _meta);\n    };\n\n    // for RuleGroupExt\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    setValue = (delta, value, type, asyncListValues, _meta) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, _meta);\n    };\n\n    // can be used for both LHS and LHS\n    setFuncValue = (delta, parentFuncs, argKey, value, type, asyncListValues, _meta) => {\n      this.props.actions.setFuncValue(this.props.path, delta, parentFuncs, argKey, value, type, asyncListValues, _meta);\n    };\n\n    render() {\n      const {showErrorMessage} = this.props.config.settings;\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const currentNesting = this.props.path.size;\n      const maxNesting = this.props.config.settings.maxNesting;\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n      const fieldType = this.props.fieldType || null;\n\n      const {valueError} = this.props;\n      const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n      const hasError = oneError != null && showErrorMessage;\n\n      // Don't allow nesting further than the maximum configured depth and don't\n      // allow removal of the root group.\n      const allowFurtherNesting = typeof maxNesting === \"undefined\" || currentNesting < maxNesting;\n      const isRoot = currentNesting == 1;\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"group-container\", hasError ? \"group-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Group\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              isRoot={isRoot}\n              allowFurtherNesting={allowFurtherNesting}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={this.dummyFn}\n              setNot={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              addGroup={this.dummyFn}\n              addCaseGroup={this.dummyFn}\n              addDefaultCaseGroup={this.dummyFn}\n              addRule={this.dummyFn}\n              setField={this.dummyFn}\n              setFuncValue={this.dummyFn}\n              setOperator={this.dummyFn}\n              setValue={this.dummyFn}\n              value={this.props.value || null}\n              valueError={this.props.valueError || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Group\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              isRoot={isRoot}\n              allowFurtherNesting={allowFurtherNesting}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={isInDraggingTempo ? this.dummyFn : this.setConjunction}\n              setNot={isInDraggingTempo ? this.dummyFn : this.setNot}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              addGroup={isInDraggingTempo ? this.dummyFn : this.addGroup}\n              addCaseGroup={isInDraggingTempo ? this.dummyFn : this.addCaseGroup}\n              addDefaultCaseGroup={isInDraggingTempo ? this.dummyFn : this.addDefaultCaseGroup}\n              addRule={isInDraggingTempo ? this.dummyFn : this.addRule}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setFuncValue={isInDraggingTempo ? this.dummyFn : this.setFuncValue}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              value={this.props.value || null}\n              valueError={this.props.valueError || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Group, itemType) => {\n  const ConnectedGroupContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createGroupContainer(Group, itemType));\n  ConnectedGroupContainer.displayName = \"ConnectedGroupContainer\";\n\n  return ConnectedGroupContainer;\n};\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class GroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, addGroup, removeSelf, setLock, isLocked, isTrueLocked, id,\n      canAddGroup, canAddRule, canDeleteGroup\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, addGroupLabel, delGroupLabel, groupActionsPosition, \n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn\n      type=\"addRule\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n    const addGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addGroup\" onClick={addGroup} label={addGroupLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn\n      type=\"delGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {addGroupBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport startsWith from \"lodash/startsWith\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport classNames from \"classnames\";\nimport { Item } from \"./Item\";\nimport {GroupActions} from \"./GroupActions\";\nimport {WithConfirmFn, dummyFn} from \"../utils\";\nconst {isEmptyGroupChildren} = Utils.RuleUtils;\n\nconst defaultPosition = \"topRight\";\n\n\nexport class BasicGroup extends Component {\n  static propTypes = {\n    reordableNodesCnt: PropTypes.number,\n    conjunctionOptions: PropTypes.object.isRequired,\n    allowFurtherNesting: PropTypes.bool.isRequired,\n    isRoot: PropTypes.bool.isRequired,\n    not: PropTypes.bool,\n    selectedConjunction: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    path: PropTypes.any, //instanceOf(Immutable.List)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    onDragStart: PropTypes.func,\n    addRule: PropTypes.func.isRequired,\n    addGroup: PropTypes.func.isRequired,\n    removeSelf: PropTypes.func.isRequired,\n    setConjunction: PropTypes.func.isRequired,\n    setNot: PropTypes.func.isRequired,\n    setLock: PropTypes.func.isRequired,\n    actions: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n    this.renderItem = this.renderItem.bind(this);\n  }\n\n  isGroupTopPosition() {\n    return startsWith(this.props.config.settings.groupActionsPosition || defaultPosition, \"top\");\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeGroupConfirmOptions: confirmOptions} = config.settings;\n    const doRemove = () => {\n      this.props.removeSelf();\n    };\n    if (confirmOptions && !this.isEmptyCurrentGroup()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      doRemove();\n    }\n  }\n\n  isEmptyCurrentGroup() {\n    const {children1, config} = this.props;\n    return isEmptyGroupChildren(children1, config);\n  }\n\n  render() {\n    return <>\n      {this.renderHeaderWrapper()}\n      {this.renderChildrenWrapper()}\n      {this.renderFooterWrapper()}\n    </>;\n  }\n\n  showNot() {\n    const {config} = this.props;\n    return config.settings.showNot;\n  }\n\n  // show conjs for 2+ children?\n  showConjs() {\n    const {conjunctionOptions, children1, config} = this.props;\n    const conjunctionCount = Object.keys(conjunctionOptions).length;\n    return conjunctionCount > 1 || this.showNot();\n  }\n\n  isNoChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.size == 0 : true;\n  }\n\n\n  isOneChild() {\n    const {children1} = this.props;\n    return children1 ? children1.size < 2 : true;\n  }\n\n  renderChildrenWrapper() {\n    const {children1} = this.props;\n\n    return children1 && (\n      <div key=\"group-children\" className={classNames(\n        \"group--children\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        this.childrenClassName()\n      )}>{this.renderChildren()}</div>\n    );\n  }\n\n  childrenClassName = () => \"\";\n\n  renderHeaderWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n      )}>\n        {this.renderHeader()}\n        {isGroupTopPosition && this.renderBeforeActions()}\n        {isGroupTopPosition && this.renderActions()}\n        {isGroupTopPosition && this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderFooterWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return !isGroupTopPosition && (\n      <div key=\"group-footer\" className='group--footer'>\n        {this.renderBeforeActions()}\n        {this.renderActions()}\n        {this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderBeforeActions = () => {\n    const BeforeActions = this.props.config.settings.renderBeforeActions;\n    if (BeforeActions == undefined)\n      return null;\n\n    return typeof BeforeActions === \"function\" ? BeforeActions(this.props, this.props.config.ctx) : BeforeActions;\n  };\n\n  renderAfterActions = () => {\n    const AfterActions = this.props.config.settings.renderAfterActions;\n    if (AfterActions == undefined)\n      return null;\n\n    return typeof AfterActions === \"function\" ? AfterActions(this.props, this.props.config.ctx) : AfterActions;\n  };\n\n  renderActions() {\n    const {config, addRule, addGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <GroupActions\n      config={config}\n      addRule={addRule}\n      addGroup={addGroup}\n      canAddGroup={this.canAddGroup()}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  canAddGroup() {\n    return this.props.allowFurtherNesting;\n  }\n  canAddRule() {\n    const maxNumberOfRules = this.props.config.settings.maxNumberOfRules;\n    const totalRulesCnt = this.props.totalRulesCnt;\n    if (maxNumberOfRules) {\n      return totalRulesCnt < maxNumberOfRules;\n    }\n    return true;\n  }\n  canDeleteGroup() {\n    return !this.props.isRoot;\n  }\n\n  renderChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.valueSeq().map(this.renderItem).toArray() : null;\n  }\n\n  renderItem(item) {\n    if (!item) {\n      return undefined;\n    }\n    const props = this.props;\n    const {config, actions, onDragStart, isLocked} = props;\n    const isRuleGroup = item.get(\"type\") == \"group\" && item.getIn([\"properties\", \"field\"]) != null;\n    const type = isRuleGroup ? \"rule_group\" : item.get(\"type\");\n    \n    return (\n      <Item\n        {...this.extraPropsForItem(item)}\n        key={item.get(\"id\")}\n        id={item.get(\"id\")}\n        groupId={props.id}\n        //path={props.path.push(item.get('id'))}\n        path={item.get(\"path\")}\n        type={type}\n        properties={item.get(\"properties\")}\n        config={config}\n        actions={actions}\n        children1={item.get(\"children1\")}\n        reordableNodesCnt={this.reordableNodesCntForItem(item)}\n        totalRulesCnt={this.totalRulesCntForItem(item)}\n        parentReordableNodesCnt={this.reordableNodesCnt()}\n        onDragStart={onDragStart}\n        isDraggingTempo={this.props.isDraggingTempo}\n        isParentLocked={isLocked}\n      />\n    );\n  }\n\n  extraPropsForItem(_item) {\n    return {};\n  }\n\n  reordableNodesCnt() {\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    return this.props.totalRulesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    return this.reordableNodesCnt();\n  }\n\n  showDragIcon() {\n    const { config, isRoot, isLocked } = this.props;\n    const reordableNodesCnt = this.reordableNodesCnt();\n    return config.settings.canReorder && !isRoot && reordableNodesCnt > 1 && !isLocked;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const { config } = this.props;\n    const { renderIcon } = config.settings;\n    const Icon = (pr) => renderIcon?.(pr, config.ctx);\n    const icon = <Icon\n      type=\"drag\"\n    />;\n    return this.showDragIcon() && (<div \n      key=\"group-drag-icon\"\n      onMouseDown={handleDraggerMouseDown}\n      className={\"qb-drag-handler group--drag-handler\"}\n    >{icon}</div>);\n  }\n\n  conjunctionOptions() {\n    const { conjunctionOptions } = this.props;\n    return conjunctionOptions;\n  }\n\n  renderConjs() {\n    const {\n      config, children1, id,\n      selectedConjunction, setConjunction, not, setNot, isLocked\n    } = this.props;\n\n    const {immutableGroupsMode, renderConjs, showNot: _showNot, notLabel} = config.settings;\n    const conjunctionOptions = this.conjunctionOptions();\n    if (!this.showConjs())\n      return null;\n    if (!children1 || !children1.size)\n      return null;\n\n    const renderProps = {\n      disabled: this.isOneChild(),\n      readonly: immutableGroupsMode || isLocked,\n      selectedConjunction: selectedConjunction,\n      setConjunction: immutableGroupsMode ? dummyFn : setConjunction,\n      conjunctionOptions: conjunctionOptions,\n      config: config,\n      not: not || false,\n      id: id,\n      setNot: immutableGroupsMode ? dummyFn : setNot,\n      notLabel: notLabel,\n      showNot: this.showNot(),\n      isLocked: isLocked\n    };\n    return renderConjs(renderProps, config.ctx);\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n}\n\nexport default GroupContainer(Draggable(\"group\")(WithConfirmFn(BasicGroup)), \"group\");\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, delGroupLabel,\n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} hideLabel={true} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addRuleGroup\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={\"group--actions\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupActions} from \"./RuleGroupActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {WithConfirmFn} from \"../utils\";\n\n\nclass RuleGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  childrenClassName = () => \"rule_group--children\";\n  \n  renderHeaderWrapper = () => null;\n  renderFooterWrapper = () => null;\n  renderConjs = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => false;\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1?.size || 0;\n  }\n\n  renderChildrenWrapper() {\n    return (\n      <>\n        {this.renderDrag()}\n        {this.renderField()}\n        {this.renderActions()}\n        {super.renderChildrenWrapper()}\n      </>\n    );\n  }\n\n  renderField() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, setField, setFuncValue, setFieldSrc, \n      parentField, id, groupId, isLocked\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    \n    return <FieldWrapper\n      key=\"field\"\n      classname={\"group--field\"}\n      config={config}\n      canSelectFieldSource={false}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={setField}\n      setFuncValue={setFuncValue}\n      setFieldSrc={setFieldSrc}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  extraPropsForItem(_item) {\n    return {\n      parentField: this.props.selectedField\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group\")(WithConfirmFn(RuleGroup)), \"rule_group\");\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupExtActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addSubRuleLabel, delGroupLabel,\n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addRuleGroupExt\" onClick={addRule} label={addSubRuleLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={\"group--actions group--actions--tr\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupExtActions} from \"./RuleGroupExtActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\nconst {isEmptyRuleGroupExtPropertiesAndChildren} = Utils.RuleUtils;\n\n\nclass RuleGroupExt extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    value: PropTypes.any,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    setOperator: PropTypes.func,\n    setValue: PropTypes.func,\n    valueError: PropTypes.any,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  childrenClassName = () => \"rule_group_ext--children\";\n  \n  renderFooterWrapper = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => true;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderGroupField()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderGroupField() {\n    return (\n      <div className={\"group--field--count--rule\"}>\n        {this.renderField()}\n        {this.renderOperator()}\n        {this.renderWidget()}\n        {this.renderError()}\n      </div>\n    );\n  }\n\n  renderError() {\n    const {config, valueError} = this.props;\n    const { renderRuleError, showErrorMessage } = config.settings;\n    const oneError = [...(valueError?.toArray() || [])].filter(e => !!e).shift() || null;\n    return showErrorMessage && oneError \n        && <div className=\"rule_group--error\">\n          {renderRuleError ? renderRuleError({error: oneError}, config.ctx) : oneError}\n        </div>;\n  }\n\n  showNot() {\n    const {config, selectedField, selectedOperator} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField) || {};\n    return selectedFieldConfig.showNot != undefined ? selectedFieldConfig.showNot : config.settings.showNot;\n  }\n\n  conjunctionOptions() {\n    const {config, selectedField, selectedOperator} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField) || {};\n    let conjunctionOptions = super.conjunctionOptions();\n    if (selectedFieldConfig.conjunctions) {\n      let filtered = {};\n      for (let k of selectedFieldConfig.conjunctions) {\n        const options = conjunctionOptions[k];\n        if (options) {\n          filtered[k] = options;\n        }\n      }\n      conjunctionOptions = filtered;\n    }\n    return conjunctionOptions;\n  }\n\n  renderField() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, setField, setFieldSrc, setFuncValue,\n      parentField, id, groupId, isLocked\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    \n    return <FieldWrapper\n      key=\"field\"\n      classname={\"rule--field\"}\n      config={config}\n      canSelectFieldSource={false}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={setField}\n      setFuncValue={setFuncValue}\n      setFieldSrc={setFieldSrc}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator() {\n    const {config, selectedField, selectedFieldSrc, selectedOperator, setField, setOperator, isLocked} = this.props;\n    const { immutableFieldsMode } = config.settings;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n    const showOperatorLabel = selectedField && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showOperator = selectedField && !hideOperator;\n\n    return <OperatorWrapper\n      key=\"operator\"\n      classname={\"group--operator\"}\n      config={config}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedOperator={selectedOperator}\n      setOperator={setOperator}\n      selectedFieldPartsLabels={[\"group\"]}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableFieldsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    const {children1, config} = this.props;\n    const ruleData = this._buildWidgetProps(this.props);\n    return isEmptyRuleGroupExtPropertiesAndChildren(ruleData, children1, config);\n  }\n\n  _buildWidgetProps({\n    selectedField, selectedFieldSrc, selectedFieldType,\n    selectedOperator, operatorOptions,\n    value, valueType, valueSrc, asyncListValues, valueError, fieldError,\n    parentField,\n  }) {\n    return {\n      field: selectedField,\n      fieldSrc: selectedFieldSrc,\n      fieldType: selectedFieldType,\n      operator: selectedOperator,\n      operatorOptions,\n      value,\n      valueType, // new Immutable.List([\"number\"])\n      valueSrc: [\"value\"], //new Immutable.List([\"value\"]), // should be fixed in isEmptyRuleGroupExtPropertiesAndChildren\n      //asyncListValues,\n      valueError,\n      fieldError: null,\n      parentField,\n    };\n  }\n\n  renderWidget() {\n    const {config, selectedField, selectedOperator, isLocked} = this.props;\n    const { immutableValuesMode } = config.settings;\n    const isFieldAndOpSelected = selectedField && selectedOperator;\n    const showWidget = isFieldAndOpSelected;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      isForRuleGroup={true}\n      {...this._buildWidgetProps(this.props)}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      setValueSrc={dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupExtActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1?.size || 0;\n  }\n\n  extraPropsForItem(_item) {\n    return {\n      parentField: this.props.selectedField\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group_ext\")(WithConfirmFn(RuleGroupExt)), \"rule_group\");\n\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class SwitchGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addCaseGroup, addDefaultCaseGroup, setLock, isLocked, isTrueLocked, id, canAddGroup, canAddDefault\n    } = this.props;\n    const {\n      immutableGroupsMode, addCaseLabel, addDefaultCaseLabel, groupActionsPosition, \n      renderButton, renderIcon, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock,\n    } = config.settings;\n    const Icon = (pr) => renderIcon(pr, config.ctx);\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addCaseGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addCaseGroup\" onClick={addCaseGroup} label={addCaseLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    const addDefaultCaseGroupBtn = !immutableGroupsMode && canAddDefault && !isLocked && <Btn\n      type=\"addDefaultCaseGroup\" onClick={addDefaultCaseGroup} label={addDefaultCaseLabel} readonly={isLocked} config={config} renderIcon={Icon}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addCaseGroupBtn}\n          {addDefaultCaseGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {SwitchGroupActions} from \"./SwitchGroupActions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getTotalReordableNodesCountInTree, getTotalRulesCountInTree} = Utils.TreeUtils;\n\n\nclass SwitchGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  childrenClassName = () => \"switch_group--children\";\n  \n  renderFooterWrapper = () => null;\n  hasDefaultCase = () => {\n    return this.props.children1?.size && this.props.children1.filter(c => c.get(\"children1\") == null).size > 0;\n  };\n  canAddGroup() {\n    const { maxNumberOfCases } = this.props.config.settings;\n    const totalCasesCnt = this.props.children1?.size || 0;\n    if (maxNumberOfCases) {\n      return totalCasesCnt < maxNumberOfCases;\n    }\n    return true;\n  }\n  canAddRule() {\n    return false;\n  }\n\n  reordableNodesCnt() {\n    // result will be passed to each case's `parentReordableNodesCnt` prop\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n    return casesToReorder;\n  }\n\n  totalRulesCntForItem(item) {\n    return getTotalRulesCountInTree(item);\n  }\n\n  reordableNodesCntForItem(item) {\n    if (this.props.isLocked)\n      return 0;\n    const { canLeaveEmptyCase, canRegroupCases } = this.props.config.settings;\n\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n\n    const nodesInCase = getTotalReordableNodesCountInTree(item);\n    let cnt = nodesInCase;\n    if (cnt == 1 && canRegroupCases && canLeaveEmptyCase && casesToReorder > 1)\n      cnt = 111;\n    return cnt;\n  }\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        //this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderConjs() {\n    const { config } = this.props;\n    const { renderSwitchPrefix } = config.settings;\n    return renderSwitchPrefix || null;\n  }\n\n  showNot() {\n    return false;\n  }\n\n\n  renderActions() {\n    const {config, addCaseGroup, addDefaultCaseGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <SwitchGroupActions\n      config={config}\n      addCaseGroup={addCaseGroup}\n      addDefaultCaseGroup={addDefaultCaseGroup}\n      canAddDefault={!this.hasDefaultCase()}\n      canAddGroup={this.canAddGroup()}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n}\n\n\nexport default GroupContainer(Draggable(\"group switch_group\")(WithConfirmFn(SwitchGroup)), \"switch_group\");\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {GroupActions} from \"./GroupActions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\n\n\nclass CaseGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    parentReordableNodesCnt: PropTypes.number,\n    value: PropTypes.any,\n    setValue: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  isDefaultCase() {\n    return this.props.children1 == undefined;\n  }\n\n  reordableNodesCnt() {\n    // `parentReordableNodesCnt` is number of cases to reorder\n    return this.props.parentReordableNodesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    // `reordableNodesCnt` is number of nodes is current case\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    // `totalRulesCnt` is number of nodes is current case\n    return this.props.totalRulesCnt;\n  }\n\n  showDragIcon() {\n    // default impl of `showDragIcon()` uses `this.reordableNodesCnt()`\n    if (this.isDefaultCase())\n      return false;\n    return super.showDragIcon();\n  }\n\n  childrenClassName = () => \"case_group--children\";\n  \n  renderFooterWrapper = () => null;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeaderLeft()}\n        {this.renderHeaderCenter()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderChildrenWrapper() {\n    if (this.isDefaultCase())\n      return null;\n    // body has 2 columns: condition & value\n    return (\n      <div className={\"case_group--body\"}>\n        {this.renderCondition()}\n        {this.renderValue()}\n      </div>\n    );\n  }\n\n  renderHeaderLeft() {\n    if (this.isDefaultCase()) {\n      const { defaultCaseLabel } = this.props.config.settings;\n      return defaultCaseLabel || \"\";\n    }\n    // default impl:\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderCondition() {\n    if (this.isDefaultCase())\n      return null;\n    return super.renderChildrenWrapper();\n  }\n\n  renderHeaderCenter() {\n    if (this.isDefaultCase())\n      return this.renderValue();\n    else\n      return null;\n  }\n\n  canAddGroup() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddGroup();\n  }\n\n  canAddRule() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddRule();\n  }\n\n  renderValue() {\n    const { config, isLocked, value, setValue, id } = this.props;\n    const { immutableValuesMode } = config.settings;\n\n    const widget = <Widget\n      key=\"values\"\n      isCaseValue={true}\n      field={\"!case_value\"}\n      operator={null}\n      value={value}\n      valueSrc={\"value\"}\n      valueError={null}\n      fieldError={null}\n      config={config}\n      setValue={!immutableValuesMode ? setValue : dummyFn}\n      setValueSrc={dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={id}\n      groupId={null}\n    />;\n\n    return (\n      <Col className=\"case_group--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addGroup, addRule, isLocked, isTrueLocked, id} = this.props;\n    return <GroupActions\n      config={config}\n      addGroup={addGroup}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canAddGroup={this.canAddGroup()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    // used to confirm self-deletion\n    const { value } = this.props;\n    const oneValue = value && value.size ? value.get(0) : null;\n    const hasValue = oneValue != null && (Array.isArray(oneValue) ? oneValue.length > 0 : true);\n    return super.isEmptyCurrentGroup() && !hasValue;\n  }\n\n}\n\nexport default GroupContainer(Draggable(\"group case_group\")(WithConfirmFn(CaseGroup)), \"case_group\");\n\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Rule from \"./Rule\";\nimport Group from \"./Group\";\nimport RuleGroup from \"./RuleGroup\";\nimport RuleGroupExt from \"./RuleGroupExt\";\nimport SwitchGroup from \"./SwitchGroup\";\nimport CaseGroup from \"./CaseGroup\";\n\nconst types = [\n  \"rule\",\n  \"group\",\n  \"rule_group\",\n  \"switch_group\",\n  \"case_group\"\n];\n\nconst getProperties = (props) => {\n  const properties = props.properties?.toObject() || {};\n  const result = {...properties};\n  if (props.isParentLocked) {\n    result.isLocked = true;\n  }\n  if (properties.isLocked) {\n    result.isTrueLocked = true;\n  }\n  return result;\n};\n\nconst typeMap = {\n  rule: (props) => (\n    <Rule\n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      config={props.config}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  group: (props) => (\n    <Group \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  rule_group: (props) => (\n    <RuleGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  rule_group_ext: (props) => (\n    <RuleGroupExt \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  switch_group: (props) => (\n    <SwitchGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  case_group: (props) => (\n    <CaseGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n};\n\n\nclass Item extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    type: PropTypes.oneOf(types).isRequired,\n    path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n    properties: PropTypes.any, //instanceOf(Immutable.Map)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    actions: PropTypes.object.isRequired,\n    reordableNodesCnt: PropTypes.number,\n    onDragStart: PropTypes.func,\n    parentField: PropTypes.string, //from RuleGroup\n    isDraggingTempo: PropTypes.bool,\n    isParentLocked: PropTypes.bool,\n  };\n\n  render() {\n    const { type, ...props } = this.props;\n    const mode = props.properties?.get(\"mode\");\n    const postfix = mode == \"array\" ? \"_ext\" : \"\";    \n    const renderItem = props.config.settings.renderItem;\n    let Cmp = typeMap[type + postfix];\n    if (renderItem) {\n      return renderItem({...props, type, itemComponent: Cmp}, props.config.ctx);\n    }\n    if (!Cmp) return null;\n    return Cmp(props);\n  }\n}\n\nexport { Item };\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Item } from \"./item/Item\";\nimport SortableContainer from \"./containers/SortableContainer\";\nimport {pureShouldComponentUpdate} from \"../utils/reactUtils\";\nconst { getTotalReordableNodesCountInTree, getTotalRulesCountInTree } = Utils.TreeUtils;\nconst { createListFromArray, emptyProperties } = Utils.DefaultUtils;\n\nclass Builder extends Component {\n  static propTypes = {\n    tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    config: PropTypes.object.isRequired,\n    actions: PropTypes.object.isRequired,\n    onDragStart: PropTypes.func,\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const prevProps = this.props;\n    let should = this.pureShouldComponentUpdate(nextProps, nextState);\n    if (should) {\n      let chs = [];\n      for (let k in nextProps) {\n        let changed = (nextProps[k] !== prevProps[k]);\n        if (changed && k != \"__isInternalValueChange\") {\n          chs.push(k);\n        }\n      }\n      if (!chs.length)\n        should = false;\n      //optimize render\n      if (chs.length == 1 && chs[0] == \"tree\" && nextProps.__isInternalValueChange)\n        should = false;\n    }\n    return should;\n  }\n\n  constructor(props) {\n    super(props);\n    this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n\n    this._updPath(props);\n  }\n\n  _updPath (props) {\n    const id = props.tree.get(\"id\");\n    this.path = createListFromArray([id]);\n  }\n\n  render() {\n    const {\n      tree, config, actions, onDragStart,\n    } = this.props;\n    const rootType = tree.get(\"type\");\n    const isTernary = rootType == \"switch_group\";\n    const reordableNodesCnt = isTernary ? null : getTotalReordableNodesCountInTree(tree);\n    const totalRulesCnt = isTernary ? null : getTotalRulesCountInTree(tree);\n    const id = tree.get(\"id\");\n    return (\n      <Item \n        key={id}\n        id={id}\n        path={this.path}\n        type={rootType}\n        properties={tree.get(\"properties\") || emptyProperties()}\n        config={config}\n        actions={actions}\n        children1={tree.get(\"children1\") || emptyProperties()}\n        reordableNodesCnt={reordableNodesCnt}\n        totalRulesCnt={totalRulesCnt}\n        parentReordableNodesCnt={0}\n        onDragStart={onDragStart}\n      />\n    );\n  }\n}\n\nexport default SortableContainer(Builder);\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {clone} = Utils;\nconst {getFieldConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\nconst {getFieldPathLabels, getWidgetForFieldOp} = Utils.RuleUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class ValueField extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    value: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    parentField: PropTypes.string,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"fieldSrc\", \"fieldType\", \"operator\", \"isFuncArg\", \"parentField\"];\n    const keysForMeta = [\"config\", \"field\", \"fieldSrc\", \"fieldType\", \"operator\", \"value\", \"placeholder\", \"isFuncArg\", \"parentField\"];\n    const needUpdateItems = !this.items || keysForItems.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps);\n    }\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getItems({config, field, fieldType, operator, parentField, isFuncArg, fieldDefinition}) {\n    const {canCompareFieldWithField} = config.settings;\n    const fieldSeparator = config.settings.fieldSeparator;\n    const parentFieldPath = getFieldParts(parentField, config);\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig?.subfields : config.fields;\n\n    const filteredFields = this.filterFields(config, sourceFields, field, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition, fieldType);\n    const items = this.buildOptions(parentFieldPath, config, filteredFields, parentFieldPath);\n    return items;\n  }\n\n  getMeta({config, field, fieldType, operator, value, placeholder: customPlaceholder, isFuncArg, parentField}) {\n    const {fieldPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedKey = value;\n    const isFieldSelected = !!value;\n\n    const leftFieldConfig = field ? getFieldConfig(config, field) : {};\n    const leftFieldWidgetField = leftFieldConfig?.widgets?.field;\n    const leftFieldWidgetFieldProps = leftFieldWidgetField?.widgetProps || {};\n    const placeholder = isFieldSelected ? null \n      : (isFuncArg && customPlaceholder || leftFieldWidgetFieldProps.valuePlaceholder || fieldPlaceholder);\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPathParts(selectedKey, config);\n    const selectedPath = getFieldPathParts(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2;\n\n    return {\n      placeholder,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n    };\n  }\n\n  filterFields(config, fields, leftFieldFullkey, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition, fieldType) {\n    fields = clone(fields);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = config.widgets[widget];\n    let expectedType;\n    if (isFuncArg) {\n      expectedType = fieldDefinition?.type;\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else if (leftFieldConfig) {\n      expectedType = leftFieldConfig.type;\n    } else {\n      // no field at LHS, but can use type from \"memory effect\"\n      expectedType = fieldType;\n    }\n    \n    function _filter(list, path) {\n      for (let rightFieldKey in list) {\n        let subfields = list[rightFieldKey].subfields;\n        let subpath = (path ? path : []).concat(rightFieldKey);\n        let rightFieldFullkey = subpath.join(fieldSeparator);\n        let rightFieldConfig = getFieldConfig(config, rightFieldFullkey);\n        if (!rightFieldConfig) {\n          delete list[rightFieldKey];\n        } else if (rightFieldConfig.type == \"!struct\" || rightFieldConfig.type == \"!group\") {\n          if (_filter(subfields, subpath) == 0)\n            delete list[rightFieldKey];\n        } else {\n          // tip: LHS field can be used as arg in RHS function\n          let canUse = (!expectedType || rightFieldConfig.type == expectedType)\n            && (isFuncArg ? true : rightFieldFullkey != leftFieldFullkey);\n          let fn = canCompareFieldWithField || config.settings.canCompareFieldWithField;\n          if (fn)\n            canUse = canUse && fn(leftFieldFullkey, leftFieldConfig, rightFieldFullkey, rightFieldConfig, operator);\n          if (!canUse)\n            delete list[rightFieldKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(fields, parentFieldPath || []);\n\n    return fields;\n  }\n\n  buildOptions(parentFieldPath, config, fields, path = null, optGroup = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    return keys(fields).map(fieldKey => {\n      const fullFieldPath = [...(path ?? []), fieldKey];\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fullFieldPath, config);\n      const partsLabels = getFieldPathLabels(fullFieldPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n\n      if (field.hideForCompare)\n        return undefined;\n\n      if (field.type == \"!struct\" || field.type == \"!group\") {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items: this.buildOptions(parentFieldPath, config, field.subfields, fullFieldPath, {\n            label,\n            tooltip,\n          })\n        };\n      } else {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroup?.label,\n          group: optGroup,\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = getFieldParts(fieldKey, config);\n    let label = fieldOpts?.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      isValueField: true,\n      config,\n      customProps,\n      setField: setValue,\n      readonly,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, labelYes, labelNo, readonly, widgetId, customProps = {}} = props;\n  const customRadioYesProps = customProps.radioYes || {};\n  const customRadioNoProps = customProps.radioNo || {};\n\n  const onCheckboxChange = e => setValue(e.target.checked);\n  const onRadioChange = e => setValue(e.target.value == \"true\");\n\n  // return <>\n  //     <input key={widgetId}  type=\"checkbox\" id={widgetId} checked={!!value} disabled={readonly} onChange={onCheckboxChange} />\n  //     <label style={{display: \"inline\"}} key={id+\"label\"}  htmlFor={widgetId}>{value ? labelYes : labelNo}</label>\n  // </>;\n\n  return <>\n    <input type=\"radio\" value={true} checked={!!value} disabled={readonly} onChange={onRadioChange} { ...customRadioYesProps }/> {labelYes}\n    <input type=\"radio\" value={false} checked={!value} disabled={readonly} onChange={onRadioChange} { ...customRadioNoProps } /> {labelNo}\n  </>;\n\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <input\n      type=\"text\" \n      value={textValue} \n      placeholder={placeholder} \n      disabled={readonly} \n      onChange={onChange}\n      maxLength={maxLength}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, maxRows, fullWidth, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <textarea\n      value={textValue} \n      placeholder={placeholder}\n      disabled={readonly}\n      onChange={onChange}\n      maxLength={maxLength}\n      style={{\n        width: fullWidth ? \"100%\" : undefined\n      }}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"date\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"time\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    else\n      value = moment(new Date(value)).format(valueFormat);\n    setValue(value);\n  };\n\n  let dtValue = value;\n  if (!value)\n    dtValue = \"\";\n  else\n    dtValue = moment(value).format(\"YYYY-MM-DDTHH:mm\");\n  \n  return (\n    <input type=\"datetime-local\"  value={dtValue}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const getMultiSelectValues = (multiselect) => {\n    let values = [];\n    const options = multiselect.options;\n    for (let i = 0 ; i < options.length ; i++) {\n      const opt = options[i];\n      if (opt.selected) {\n        values.push(opt.value);\n      }\n    }\n    if (!values.length)\n      values = undefined; //not allow []\n    return values;\n  };\n\n  const onChange = e => setValue(getMultiSelectValues(e.target));\n  \n  return (\n    <select multiple\n      onChange={onChange}\n      value={value}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n    >\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const onChange = e => setValue(e.target.value);\n  \n  const hasValue = value != null;\n  return (\n    <select\n      onChange={onChange}\n      value={hasValue ? value : \"\"}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\"])}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <input type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps = {}, } = props;\n  const customInputProps = customProps.input || {};\n  const customSliderProps = customProps.slider || customProps;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <div style={{display: \"inline-flex\"}}>\n      <input key={\"number\"} type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customInputProps} />\n      <input key={\"range\"} type=\"range\"  value={numberValue} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customSliderProps} />\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({items, setField, selectedKey, readonly, errorText}) => {\n  const renderOptions = (fields) => (\n    fields.map(field => {\n      const {items, path, label, disabled, matchesType} = field;\n      if (items) {\n        return <optgroup disabled={disabled} key={path} label={label}>{renderOptions(items)}</optgroup>;\n      } else {\n        const style = matchesType ? { fontWeight: \"bold\" } : {};\n        return <option disabled={disabled} key={path} value={path} style={style}>{label}</option>;\n      }\n    })\n  );\n\n  const onChange = e => setField(e.target.value);\n  \n  const hasValue = selectedKey != null;\n  return (\n    <select \n      onChange={onChange}\n      value={hasValue ? selectedKey : \"\"}\n      disabled={readonly}\n      style={{ color: errorText ? \"red\" : null }}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions(items)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel}) => {\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(key => {\n      const {id, name, label, checked} = conjunctionOptions[key];\n      const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n      if ((readonly || disabled) && !checked)\n        return null;\n      return [\n        <input key={id+postfix} type=\"radio\" id={id+postfix} name={name+postfix} checked={checked} disabled={readonly || disabled} value={key} onChange={onChange} />\n        ,\n        <label key={id+postfix+\"label\"} htmlFor={id+postfix}>{label}</label>\n      ];\n    });\n  \n  const renderNot = () => {\n    const postfix = \"not\";\n    return [\n      <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={not} disabled={readonly} onChange={onNotChange} />\n      ,\n      <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{notLabel || \"NOT\"}</label>\n    ];\n  };\n\n  const onChange = e => setConjunction(e.target.value);\n\n  const onNotChange = e => setNot(e.target.checked);\n\n  return [\n    showNot && renderNot(),\n    showConj && renderOptions()\n  ];\n  \n};\n","import React from \"react\";\n\nconst typeToLabel = {\n  \"addRuleGroup\": \"+\",\n  \"addRuleGroupExt\": \"+\",\n  \"delGroup\": \"x\",\n  \"delRuleGroup\": \"x\",\n  \"delRule\": \"x\",\n};\n\nexport default ({type, label, onClick, readonly}) => {\n  const btnLabel = label || typeToLabel[type];\n  return <button onClick={onClick} type=\"button\" disabled={readonly}>{btnLabel}</button>;\n};\n","import React from \"react\";\nimport { DragIcon } from \"../../../utils\";\n\nexport default ({type}) => {\n  const typeToIcon = {\n  };\n  let icon = typeToIcon[type] || null;\n  if (!icon && type === \"drag\") {\n    icon = <DragIcon />;\n  }\n\n  return icon;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\n\nexport default ({config, valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => (\n      <option key={srcKey} value={srcKey}>{info.label}</option>\n    ))\n  );\n\n  const onChange = e => setValueSrc(e.target.value);\n  \n  return (\n    <select \n      onChange={onChange}\n      value={valueSrc || \"\"}\n      disabled={readonly}\n    >\n      {renderOptions(valueSources)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({value, setValue, label, id, config, type}) => {\n  const onChange = e => setValue(e.target.checked);\n  const postfix = type;\n  return [\n    <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={!!value} onChange={onChange} />\n    ,\n    <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{label}</label>\n  ];\n};\n","export default ({onOk, okText, cancelText, title}) => {\n  if (confirm(title)) {\n    onOk();\n  }\n};\n","import React from \"react\";\n\n// value widgets\nexport {default as VanillaBooleanWidget} from \"./value/VanillaBoolean\";\nexport {default as VanillaTextWidget} from \"./value/VanillaText\";\nexport {default as VanillaTextAreaWidget} from \"./value/VanillaTextArea\";\nexport {default as VanillaDateWidget} from \"./value/VanillaDate\";\nexport {default as VanillaTimeWidget} from \"./value/VanillaTime\";\nexport {default as VanillaDateTimeWidget} from \"./value/VanillaDateTime\";\nexport {default as VanillaMultiSelectWidget} from \"./value/VanillaMultiSelect\";\nexport {default as VanillaSelectWidget} from \"./value/VanillaSelect\";\nexport {default as VanillaNumberWidget} from \"./value/VanillaNumber\";\nexport {default as VanillaSliderWidget} from \"./value/VanillaSlider\";\n\n// field select widget\nexport {default as VanillaFieldSelect} from \"./core/VanillaFieldSelect\";\n\n// core components\nexport {default as VanillaConjs} from \"./core/VanillaConjs\";\nexport {default as VanillaButton} from \"./core/VanillaButton\";\nexport {default as VanillaIcon} from \"./core/VanillaIcon\";\nexport {default as VanillaButtonGroup} from \"./core/VanillaButtonGroup\";\nexport {default as VanillaValueSources} from \"./core/VanillaValueSources\";\nexport {default as VanillaSwitch} from \"./core/VanillaSwitch\";\nexport {default as vanillaConfirm} from \"./core/vanillaConfirm\";\n\nexport const VanillaProvider = ({config, children}) => children;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\n\nexport default class Proximity extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    setOption: PropTypes.func.isRequired,\n    options: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    minProximity: PropTypes.number,\n    maxProximity: PropTypes.number,\n    optionPlaceholder: PropTypes.string,\n    optionTextBefore: PropTypes.string,\n    optionLabel: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //children\n  };\n\n  static defaultProps = {\n    customProps: {},\n    minProximity: 2,\n    maxProximity: 10,\n    optionPlaceholder: \"Select words between\",\n    optionLabel: \"Words between\",\n    optionTextBefore: null,\n  };\n\n  handleChange = (value) => {\n    this.props.setOption(\"proximity\", parseInt(value));\n  };\n\n  render() {\n    const {\n      defaults, options, config, optionLabel, optionPlaceholder, customProps, \n      minProximity, maxProximity, optionTextBefore, readonly\n    } = this.props;\n    const {settings, widgets, ctx} = config;\n    const defaultProximity = defaults ? defaults.proximity : undefined;\n    const {showLabels} = settings;\n    const selectedProximity = options.get(\"proximity\", defaultProximity);\n    const proxValues = range(minProximity, maxProximity + 1).map((item) => ({title: item, value: item}));\n    const factory = widgets.select.factory;\n    const Select = (props) => factory(props, ctx);\n\n    return (\n      <div className=\"operator--PROXIMITY\">\n        <div className=\"operator--options\">\n          { showLabels\n            && <label className=\"rule--label\">{optionLabel}</label>\n          }\n          { !showLabels && optionTextBefore\n            && <div className=\"operator--options--sep\">\n              <span>{optionTextBefore}</span>\n            </div>\n          }\n          <Select\n            config={config}\n            value={selectedProximity}\n            listValues={proxValues}\n            setValue={this.handleChange}\n            readonly={readonly}\n            placeholder={optionPlaceholder}\n            {...customProps}\n          />\n        </div>\n        <div className=\"operator--widgets\">{this.props.children}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport * as Widgets from \"../components/widgets\";\nimport * as CustomOperators from \"../components/operators\";\nimport { CoreConfig, Utils } from \"@react-awesome-query-builder/core\";\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  ...CoreConfig.conjunctions,\n};\n\n//----------------------------  operators\n\nconst operators = {\n  ...CoreConfig.operators,\n  proximity: {\n    ...CoreConfig.operators.proximity,\n    options: {\n      ...CoreConfig.operators.proximity.options,\n      factory: (props, {RCE, O: {ProximityOperator}}) => RCE(ProximityOperator, props),\n    },\n  },\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    ...CoreConfig.widgets.text,\n    factory: (props, {RCE, W: {VanillaTextWidget}}) => RCE(VanillaTextWidget, props),\n  },\n  textarea: {\n    ...CoreConfig.widgets.textarea,\n    factory: (props, {RCE, W: {VanillaTextAreaWidget}}) => RCE(VanillaTextAreaWidget, props),\n  },\n  number: {\n    ...CoreConfig.widgets.number,\n    factory: (props, {RCE, W: {VanillaNumberWidget}}) => RCE(VanillaNumberWidget, props),\n  },\n  slider: {\n    ...CoreConfig.widgets.slider,\n    factory: (props, {RCE, W: {VanillaSliderWidget}}) => RCE(VanillaSliderWidget, props),\n  },\n  select: {\n    ...CoreConfig.widgets.select,\n    factory: (props, {RCE, W: {VanillaSelectWidget}}) => RCE(VanillaSelectWidget, props),\n  },\n  multiselect: {\n    ...CoreConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {VanillaMultiSelectWidget}}) => RCE(VanillaMultiSelectWidget, props),\n  },\n  date: {\n    ...CoreConfig.widgets.date,\n    factory: (props, {RCE, W: {VanillaDateWidget}}) => RCE(VanillaDateWidget, props),\n  },\n  time: {\n    ...CoreConfig.widgets.time,\n    factory: (props, {RCE, W: {VanillaTimeWidget}}) => RCE(VanillaTimeWidget, props),\n  },\n  datetime: {\n    ...CoreConfig.widgets.datetime,\n    factory: (props, {RCE, W: {VanillaDateTimeWidget}}) => RCE(VanillaDateTimeWidget, props),\n  },\n  boolean: {\n    ...CoreConfig.widgets.boolean,\n    factory: (props, {RCE, W: {VanillaBooleanWidget}}) => RCE(VanillaBooleanWidget, props),\n  },\n  field: {\n    ...CoreConfig.widgets.field,\n    factory: (props, {RCE, W: {ValueFieldWidget}}) => RCE(ValueFieldWidget, props),\n    customProps: {\n      showSearch: true\n    }\n  },\n  func: {\n    ...CoreConfig.widgets.func,\n    factory: (props, {RCE, W: {FuncWidget}}) => RCE(FuncWidget, props),\n    customProps: {\n      //showSearch: true\n    }\n  },\n  case_value: {\n    ...CoreConfig.widgets.case_value,\n    // simple text value\n    factory: (props, {RCE, W: {VanillaTextWidget}}) =>  RCE(VanillaTextWidget, props),\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  ...CoreConfig.types,\n  select: {\n    ...CoreConfig.types.select,\n    widgets: {\n      ...CoreConfig.types.select.widgets,\n      select: {\n        ...CoreConfig.types.select.widgets.select,\n        widgetProps: {\n          customProps: {\n            showSearch: true\n          }\n        },\n      }\n    }\n  }\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...CoreConfig.settings,\n\n  renderField: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderOperator: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderFunc: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderConjs: (props, {RCE, W: {VanillaConjs}}) => RCE(VanillaConjs, props),\n  renderSwitch: (props, {RCE, W: {VanillaSwitch}}) => RCE(VanillaSwitch, props),\n  renderButton: (props, {RCE, W: {VanillaButton}}) => RCE(VanillaButton, props),\n  renderIcon: (props, {RCE, W: {VanillaIcon}}) => RCE(VanillaIcon, props),\n  renderButtonGroup: (props, {RCE, W: {VanillaButtonGroup}}) => RCE(VanillaButtonGroup, props),\n  renderProvider: (props, {RCE, W: {VanillaProvider}}) => RCE(VanillaProvider, props),\n  renderValueSources: (props, {RCE, W: {VanillaValueSources}}) => RCE(VanillaValueSources, props),\n  renderFieldSources: (props, {RCE, W: {VanillaValueSources}}) => RCE(VanillaValueSources, props),\n  renderConfirm: (props, {W: {vanillaConfirm}}) => vanillaConfirm(props),\n  renderSwitchPrefix: \"Conditions\",\n\n  customFieldSelectProps: {\n    showSearch: true\n  },\n\n  defaultSliderWidth: \"200px\",\n  defaultSelectWidth: \"200px\",\n  defaultSearchWidth: \"100px\",\n  defaultMaxRows: 5,\n  renderSize: \"small\",\n  maxLabelsLength: 100,\n\n  showLock: false,\n  showNot: true,\n  forceShowConj: false,\n  groupActionsPosition: \"topRight\", // oneOf [topLeft, topCenter, topRight, bottomLeft, bottomCenter, bottomRight]\n  \n};\n\n//----------------------------\n\nconst ctx = {\n  ...CoreConfig.ctx,\n  W: {\n    ...Widgets\n  },\n  O: {\n    ...CustomOperators\n  },\n  RCE: (C, P) => React.createElement(C, P),\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\nconfig = Utils.ConfigMixins.removeMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport debounce from \"lodash/debounce\";\nconst { mergeListValues, listValueToOption, optionToListValue, optionsToListValues, fixListValuesGroupOrder } = Utils.Autocomplete;\nconst { mapListValues, listValuesToArray, getListValue, makeCustomListValue, searchListValue, getItemInListValues } = Utils.ListUtils;\n\nfunction sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\nconst useListValuesAutocomplete = ({\n  asyncFetch, useLoadMore, useAsyncSearch, forceAsyncSearch,\n  asyncListValues: selectedAsyncListValues,\n  listValues: staticListValues, allowCustomValues,\n  value: selectedValue, setValue, placeholder, \n  config\n}, {\n  debounceTimeout,\n  multiple,\n  uif,\n  isFieldAutocomplete,\n}) => {\n  const knownSpecialValues = [\"LOAD_MORE\", \"LOADING_MORE\"];\n  const loadMoreTitle = \"Load more...\";\n  const loadingMoreTitle = \"Loading more...\";\n  const aPlaceholder = forceAsyncSearch ? \"Type to search\" : placeholder;\n\n  // state\n  const [open, setOpen] = React.useState(false);\n  const [asyncFetchMeta, setAsyncFetchMeta] = React.useState(undefined);\n  const [loadingCnt, setLoadingCnt] = React.useState(0);\n  const [isLoadingMore, setIsLoadingMore] = React.useState(false);\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [asyncListValues, setAsyncListValues] = React.useState(undefined);\n\n  // ref\n  const asyncFectchCnt = React.useRef(0);\n  const componentIsMounted = React.useRef(0);\n  const isSelectedLoadMore = React.useRef(false);\n\n  // compute\n  const nSelectedAsyncListValues = React.useMemo(() => (\n    listValuesToArray(selectedAsyncListValues)\n  ), [\n    selectedAsyncListValues,\n  ]);\n  const listValues = React.useMemo(() => (\n    asyncFetch\n      ? (selectedAsyncListValues ? mergeListValues(asyncListValues, nSelectedAsyncListValues, true) : asyncListValues)\n      : listValuesToArray(staticListValues)\n  ), [\n    asyncFetch,\n    selectedAsyncListValues,\n    asyncListValues,\n    staticListValues,\n  ]);\n  // todo: useMemo for calcing listValuesToDisplay ?\n  let listValuesToDisplay = asyncFetch\n    ? asyncListValues\n    : listValuesToArray(staticListValues);\n  if (allowCustomValues && inputValue && !searchListValue(inputValue, asyncListValues)) {\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, [makeCustomListValue(inputValue)], true);\n  }\n  if (asyncFetch && !asyncListValues && selectedAsyncListValues && !inputValue && !open && uif === \"antd\") {\n    // for initial loading, to resolve \"a\" -> \"A\"\n    listValuesToDisplay = listValues;\n  }\n  if (asyncFetch && !allowCustomValues && selectedAsyncListValues && uif === \"mui\") {\n    // to prevent warning, when select A, search E -> A is missing in options\n    //  MUI: The value provided to Autocomplete is invalid.\n    //  None of the options match with `\"a\"`.\n    //  You can use the `isOptionEqualToValue` prop to customize the equality test.\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, nSelectedAsyncListValues, true, true);\n  }\n  //const isDirtyInitialListValues = asyncListValues == undefined && selectedAsyncListValues && selectedAsyncListValues.length && typeof selectedAsyncListValues[0] != \"object\";\n  const isLoading = loadingCnt > 0;\n  const canInitialLoad = open && asyncFetch\n    && asyncListValues === undefined\n    && (forceAsyncSearch ? inputValue : true);\n  const isInitialLoading = canInitialLoad && isLoading;\n  const canLoadMore = !isInitialLoading && listValues && listValues.length > 0\n    && asyncFetchMeta && asyncFetchMeta.hasMore && (asyncFetchMeta.filter || \"\") === inputValue;\n  const canShowLoadMore = !isLoading && canLoadMore;\n  const options = mapListValues(listValuesToDisplay, listValueToOption);\n  const hasValue = selectedValue != null;\n  const selectedListValue = !multiple && hasValue ? getListValue(selectedValue, listValues) : null;\n  // const selectedListValues = multiple && hasValue ? selectedValue.map(v => getItemInListValues(listValues, v)) : [];\n\n  // fetch\n  const fetchListValues = async (filter = null, isLoadMore = false) => {\n    // clear obsolete meta\n    if (!isLoadMore && asyncFetchMeta) {\n      setAsyncFetchMeta(undefined);\n    }\n\n    const offset = isLoadMore && asyncListValues ? asyncListValues.length : 0;\n    const meta = isLoadMore && asyncFetchMeta || !useLoadMore && { pageSize: 0 };\n\n    const newAsyncFetchCnt = ++asyncFectchCnt.current;\n    const res = await asyncFetch.call(config?.ctx, filter, offset, meta);\n    const isFetchCancelled = asyncFectchCnt.current != newAsyncFetchCnt;\n    if (isFetchCancelled || !componentIsMounted.current) {\n      return null;\n    }\n\n    const { values, hasMore, meta: newMeta } = res?.values\n      ? res\n      : { values: res } // fallback, if response contains just array, not object\n    ;\n    const nValues = listValuesToArray(values);\n    let assumeHasMore;\n    let newValues;\n    if (isLoadMore) {\n      newValues = mergeListValues(asyncListValues, nValues, false);\n      assumeHasMore = newValues.length > asyncListValues.length;\n    } else {\n      newValues = nValues;\n      if (useLoadMore) {\n        assumeHasMore = newValues.length > 0;\n      }\n    }\n\n    // save new meta\n    const realNewMeta = hasMore != null || newMeta != null || assumeHasMore != null ? {\n      ...(assumeHasMore != null ? { hasMore: assumeHasMore } : {}),\n      ...(hasMore != null ? { hasMore } : {}),\n      ...(newMeta != null ? newMeta : {}),\n      filter\n    } : undefined;\n    if (realNewMeta) {\n      setAsyncFetchMeta(realNewMeta);\n    }\n\n    return newValues;\n  };\n\n  const loadListValues = async (filter = null, isLoadMore = false) => {\n    setLoadingCnt(x => (x + 1));\n    setIsLoadingMore(isLoadMore);\n    const list = await fetchListValues(filter, isLoadMore);\n    if (!componentIsMounted.current) {\n      return;\n    }\n    if (list != null) {\n      // tip: null can be used for reject (eg, if user don't want to filter by input)\n      setAsyncListValues(list);\n    }\n    setLoadingCnt(x => (x - 1));\n    setIsLoadingMore(false);\n  };\n  const loadListValuesDebounced = React.useCallback(debounce(loadListValues, debounceTimeout), []);\n\n  React.useEffect(() => {\n    componentIsMounted.current++;\n    // Initial loading\n    if (canInitialLoad && loadingCnt == 0 && asyncFectchCnt.current == 0) {\n      (async () => {\n        await loadListValues();\n      })();\n    }\n    // Unmount\n    return () => {\n      componentIsMounted.current--;\n    };\n  }, [canInitialLoad]);\n\n  // Event handlers\n  const onOpen = () => {\n    setOpen(true);\n  };\n\n  const onClose = async (_e) => {\n    const isLoadMoreClick = isSelectedLoadMore.current;\n    if (isLoadMoreClick) {\n      isSelectedLoadMore.current = false;\n      if (multiple) {\n        // required for MUI\n        setOpen(false);\n      }\n    } else {\n      setOpen(false);\n    }\n\n    if (uif === \"mui\" && !isLoadMoreClick) {\n      // parity with Antd\n      const resetValue = \"\";\n      await onInputChange(null, resetValue, \"my-reset\");\n    }\n  };\n\n  const onDropdownVisibleChange = (open) => {\n    if (open) {\n      onOpen();\n    } else {\n      onClose();\n    }\n  };\n\n  const isSpecialValue = (option) => {\n    const specialValue = option?.specialValue || option?.value;\n    return knownSpecialValues.includes(specialValue);\n  };\n\n  const onChange = async (e, val, option) => {\n    // todo: don't rely on 3rd param. check MUI 6\n    const isClearingAll = multiple && uif === \"mui\" && option === \"clear\";\n    // if user removes all chars in search, don't clear selected value\n    const isClearingInput = !multiple && uif === \"mui\" && option === \"clear\" && e?.type === \"change\";\n    const isClearingSingle = !multiple && uif === \"mui\" && option === \"clear\" && e?.type !== \"change\";\n    if (uif === \"mui\") {\n      option = val;\n      if (multiple) {\n        val = option.map(o => (o?.value ?? o));\n      } else {\n        val = option?.value ?? option;\n      }\n    }\n    const specialValue = multiple && Array.isArray(option) && option.map(opt => opt?.specialValue).find(v => !!v)\n      || option?.specialValue;\n    if (multiple && val && !Array.isArray(val)) {\n      val = [...(selectedValue || []), val];\n      option = null;\n    }\n    // if there are tags AND input and select is opened, clear input first\n    const shouldIgnore = isClearingAll && val.length === 0 && inputValue && open\n      || isClearingInput;\n    if (shouldIgnore) {\n      return;\n    }\n    const isAddingCustomOptionFromSearch \n      = multiple\n      && val.length && val.length > (selectedValue || []).length\n      && val[val.length-1] == inputValue\n      && !getListValue(inputValue, asyncListValues);\n\n    if (specialValue == \"LOAD_MORE\") {\n      setInputValue(inputValue);\n      isSelectedLoadMore.current = true;\n      await loadListValues(inputValue, true);\n    } else if (specialValue == \"LOADING_MORE\") {\n      isSelectedLoadMore.current = true;\n    } else {\n      if (multiple) {\n        const [newSelectedValues, newSelectedListValues] = optionsToListValues(val, listValues, allowCustomValues);\n        setValue(newSelectedValues, asyncFetch ? newSelectedListValues : undefined);\n        \n        if (isAddingCustomOptionFromSearch) {\n          await sleep(0);\n          await onInputChange(null, \"\", \"my-reset\");\n        }\n      } else {\n        const [v, lvs] = optionToListValue(val, listValues, allowCustomValues);\n        setValue(v, asyncFetch ? lvs : undefined);\n        if (isClearingSingle && isFieldAutocomplete) {\n          // Fix issue when dropdown stays visible after clicking \"X\"\n          await sleep(0);\n          setOpen(false);\n        }\n      }\n    }\n  };\n\n  const onInputChange = async (e, newInputValue, eventType) => {\n    // eventType=reset used by MUI on:\n    // - (single) initial set, select option - e = null, newInputValue = selected  (+1 call before with e != null)\n    // - (single/multi, -ACV) blur - e != null, newInputValue = ''\n    // - (multiple v5, -ACV) blur - e = null, newInputValue = '' # unwanted\n    // - (multiple) select option - e != null, newInputValue = ''\n    // - (multiple v4) delete tag while searching - e = null, newInputValue = ''  # unwanted\n    // - (multiple v4) select option while searching - e = null, newInputValue = ''  # unwanted\n\n    const shouldIgnore = uif === \"mui\" && eventType === \"reset\"\n    // && (\n    //   e != null\n    //   // for MUI 4 if search \"A\" and select any option -> should NOT reset search\n    //   // for MUI 5 if search \"A\" and close -> let's hold search but hide, as it's done in antd\n    //   || e === null && inputValue && multiple\n    // )\n    ;\n    const val = newInputValue;\n    if (val === loadMoreTitle || val === loadingMoreTitle || shouldIgnore) {\n      return;\n    }\n\n    if (newInputValue != inputValue) {\n      setInputValue(val);\n\n      const canSearchAsync = useAsyncSearch && (forceAsyncSearch ? !!val : true);\n      if (canSearchAsync) {\n        await loadListValuesDebounced(val);\n      } else if (useAsyncSearch && forceAsyncSearch) {\n        setAsyncListValues([]);\n      }\n    }\n  };\n\n  // Options\n  const extendOptions = (options) => {\n    const filtered = [...options];\n    if (useLoadMore) {\n      if (canShowLoadMore) {\n        filtered.push({\n          specialValue: \"LOAD_MORE\",\n          title: loadMoreTitle,\n        });\n      } else if (isLoadingMore) {\n        filtered.push({\n          specialValue: \"LOADING_MORE\",\n          title: loadingMoreTitle,\n          disabled: true\n        });\n      }\n    }\n    return filtered;\n  };\n\n  const getOptionSelected = (option, valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const selectedValue = valueOrOption.value != undefined ? valueOrOption.value : valueOrOption;\n    return option.value === selectedValue;\n  };\n\n  const getOptionDisabled = (valueOrOption) => {\n    return valueOrOption && valueOrOption.disabled;\n  };\n\n  const getOptionIsCustom = (valueOrOption) => {\n    if (valueOrOption?.isCustom)\n      return true;\n    const val = valueOrOption?.value ?? valueOrOption;\n    const lv = getListValue(val, listValues);\n    return lv?.isCustom || false;\n  };\n\n  const getOptionLabel = (valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const option = valueOrOption.value != undefined ? valueOrOption\n      : listValueToOption(getListValue(valueOrOption, listValues));\n    if (!option && valueOrOption.specialValue) {\n      // special last 'Load more...' item\n      return valueOrOption.title;\n    }\n    if (!option && allowCustomValues) {\n      // there is just string value, it's not item from list\n      return valueOrOption;\n    }\n    if (!option) {\n      // weird\n      return valueOrOption;\n    }\n    return option.title || option.label || option.value; // fallback to value\n  };\n\n  const fixedOptions = uif === \"mui\" ? fixListValuesGroupOrder(options) : options;\n\n  return {\n    options: fixedOptions,\n    listValues,\n    hasValue,\n    selectedListValue,\n\n    open,\n    onOpen,\n    onClose,\n    onDropdownVisibleChange,\n    onChange,\n    \n    inputValue,\n    onInputChange,\n    canShowLoadMore,\n    isInitialLoading,\n    isLoading,\n    isLoadingMore,\n    isSpecialValue,\n\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    aPlaceholder,\n  };\n};\n\nexport default useListValuesAutocomplete;\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport * as ReactUtils from \"./reactUtils\";\nimport { DragIcon } from \"../components/utils\";\nexport default { ...Utils, ReactUtils, DragIcon };\n","var map = {\n\t\"./es-us\": 1748,\n\t\"./es-us.js\": 1748,\n\t\"./ru\": 60582,\n\t\"./ru.js\": 60582\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 61507;"],"names":["moment","Utils","xdpVersion","xdpPackage","_xdpPackage$version","split","mapListValues","ListUtils","useListValuesAutocomplete","Hooks","emptyArray","props","allowCustomValues","multiple","disableClearable","selectedValue","value","customProps","readonly","config","filterOptionsConfig","errorText","tooltipText","isFieldAutocomplete","defaultFilterOptionsConfig","stringify","useCallback","option","settings","listKeysForSearch","map","k","join","filterOptionsFn","createFilterOptions","_useListValuesAutocom","debounceTimeout","uif","open","onOpen","onClose","onChange","onInputChange","inputValue","options","isInitialLoading","isLoading","aPlaceholder","extendOptions","getOptionDisabled","getOptionSelected","getOptionIsCustom","getOptionLabel","selectedListValue","_config$settings","defaultSelectWidth","_ref","defaultSearchWidth","width","rest","_objectWithoutProperties","_excluded","customInputProps","input","omit","customAutocompleteProps","fullWidth","minWidth","style","undefined","placeholder","theme","useTheme","GroupHeader","_ref2","groupMaybeJson","group","label","JSON","parse","_","groupLabel","tooltip","React","Tooltip","title","placement","position","top","padding","color","palette","primary","main","backgroundColor","background","GroupItems","_ref3","children","res","Autocomplete","_extends","disableCloseOnSelect","freeSolo","loading","disabled","readOnly","groupBy","groupTitle","renderInput","params","_selectedListValue$ti","shouldRenderSelected","selectedTitle","TextField","variant","inputProps","_objectSpread","InputProps","endAdornment","CircularProgress","size","error","renderGroup","key","renderTags","getTagProps","index","Chip","renderOption","renderTitle","isHidden","isGrouped","isSelected","includes","className","finalTitle","titleSpan","specialValue","itemContent","ListItemIcon","Check","ListItemText","inset","MenuItem","selected","filterOptions","filtered","isOptionEqualToValue","FormControl","mapFieldItemToOptionKeys","path","altLabel","grouplabel","itemsToListValues","items","level","arguments","length","item","matchesType","prefix","repeat","_value2","_altLabel","flat","Infinity","fieldAdapter","selectedKey","setField","isValueField","selectedLabel","selectedAltLabel","selectedOpts","selectedFullLabel","listValues","fieldItemKeysForSearch","setValue","_asyncValues","DragIcon","typeToIcon","DeleteIcon","AddIcon","DragHandle","typeToColor","hideLabelsFor","MuiTextWidget","maxLength","errorMessage","showErrorMessage","optimizeRenderWithInternals","_useState","useState","_useState2","_slicedToArray","internalValue","setInternalValue","useEffect","textValue","e","val","target","__isInternal","MuiTextAreaWidget","maxRows","defaultMaxRows","multiline","MuiDateWidget","dateFormat","valueFormat","pickerProps","format","slotProps","textField","toolbar","toolbarPlaceholder","inputFormat","aValue","DatePicker","desktopModeMediaQuery","isValid","formatSingleValue","MuiDateTimeWidget","use12Hours","timeFormat","dateTimeFormat","DateTimePicker","ampm","MuiTimeWidget","hasSeconds","indexOf","timeValue","TimePicker","views","MuiSelectWidget","hasValue","Select","autoWidth","displayEmpty","renderValue","filter","v","shift","getListValueTitle","MuiNumberWidget","min","max","step","numberValue","type","Number","MuiSliderWidget","marks","defaultSliderWidth","handleSliderChange","_e","newValue","customSliderProps","slider","sliderValue","muiMarks","useMemo","Object","keys","_typeof","InputCmp","onBlur","SliderCmp","Slider","valueLabelDisplay","stylesSliderWrapper","marginLeft","paddingLeft","marginBottom","display","alignItems","flexWrap","MuiRangeWidget","placeholders","textSeparators","handleInputBlur","_toConsumableArray","_sliderValue","valueFrom","valueTo","FromInputCmp","ToInputCmp","newValues","stylesInputWrapper","MuiBooleanWidget","labelYes","labelNo","Typography","component","Grid","container","spacing","Switch","checked","MuiMultiSelectWidget","selectedValues","selectedTitles","Checkbox","MuiAutocompleteWidget","MuiFieldSelect","setOpen","findLabel","fields","field","Array","isArray","some","pop","renderOptions","fieldKey","finalLabel","ListSubheader","disableSticky","MuiFieldAutocomplete","MuiAutocomplete","MuiIcon","icon","Icon","MuiButton","onClick","renderIcon","IconButton","Button","startIcon","MuiButtonGroup","MuiConjs","id","not","setNot","conjunctionOptions","setConjunction","showNot","notLabel","conjsCount","lessThenTwo","showConj","forceShowConj","ButtonGroup","disableElevation","bind","_conjunctionOptions$k","name","postfix","isDummyFn","MuiSwitch","checkedLabel","hideLabel","renderSize","showLabel","LockIcon","LockOpenIcon","FormControlLabel","control","MuiValueSources","valueSources","valueSrc","setValueSrc","_React$useState","_React$useState2","anchorEl","setAnchorEl","handleClose","Boolean","event","currentTarget","handleOpen","ExpandMoreSharpIcon","Menu","sx","p","FormLabel","pt","pb","srcKey","info","handleChange","MuiConfirm","onOk","okText","cancelText","confirmFn","description","confirmationText","cancellationText","then","MuiUseConfirm","useConfirm","MuiProvider","settingsTheme","settingsLocale","locale","momentLocale","themeConfig","mui","createTheme","locProviderProps","adapterLocale","base","withProviders","LocalizationProvider","dateAdapter","AdapterMoment","ConfirmProvider","ThemeProvider","BasicConfig","renderField","_props$customProps","RCE","_ref$W","W","showSearch","renderOperator","renderFunc","renderConjs","_ref4","renderSwitch","_ref5","renderButton","_ref6","_ref7","renderButtonGroup","_ref8","renderValueSources","_ref9","renderFieldSources","_ref10","renderProvider","_ref11","renderConfirm","_ref12","_ref13","widgets","text","factory","_ref14","textarea","_ref15","number","_ref16","multiselect","_ref17","_ref17$W","asyncFetch","select","_ref18","_ref18$W","_ref19","boolean","_ref20","date","_ref21","time","_ref22","datetime","_ref23","rangeslider","_ref24","types","ctx","MuiWidgets","ConfigMixins","addMixins","query_builder_seed","timePart","Date","getTime","toString","substr","replace","c","r","Math","floor","random","isObject","widgetDefKeysToOmit","opDefKeysToOmit","getOpCardinality","opDef","_opDef$cardinality","cardinality","deepEqual","v1","v2","Map","isMap","equals","shallowEqual","a","b","deep","arrA","arrB","len","i","shallowEqualArrays","objA","objB","aKeys","bKeys","shallowEqualObjects","isImmutable","toJS","toImmutableList","Immutable","applyToJS","escapeRegExp","string","mergeCustomizerNoArrays","objValue","srcValue","_key","_object","_source","_stack","cleanJSX","jsx","el","_i","isDirtyJSX","_cleaned$props","cleaned","isJSX","isJsonLogic","logic","sleep","delay","Promise","resolve","setTimeout","mergeArraysSmart","arr1","arr2","op","orig","next","slice","after","reverse","find","before","x","reduce","acc","newOp","rel","relOp","ind","splice","deepFreeze","obj","forEach","prop","freeze","isJsonCompatible","tpl","bag","concat","getLogger","devMode","console","log","warn","debug","getFirstDefined","ret","arr","logger","toListValue","makeCustomListValue","lv","isCustom","listValuesToArray","listValuesObj","listValuesArr","push","getItemInListValues","getTitleInListValues","it","getValueInListValues","mapFn","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","f","searchListValue","search","getListValue","expandTreePath","_len","suffix","interpose","withMutations","list","skip","apply","expandTreeSubpath","_len2","_key2","getItemByPath","tree","_defineProperty","get","_res","removeIsLockedInTree","newTree","_processNode","isParentLocked","itemPath","isLocked","getIn","deleteIn","child","_childId","fixPathsInTree","lev","nodeId","currPath","currId","itemId","uuid","setIn","constructor","childId","fixEmptyGroupsInTree","allChildrenGone","curr","getFlatTree","cases","visibleHeight","globalLeafCount","globalGroupCount","globalCountByType","_flatizeTree","insideCollapsed","insideLocked","insideRuleGroup","caseId","childNo","isRoot","collapsed","childrenIds","_child","valueSeq","toArray","isRuleGroup","isRule","isGroup","isCaseGroup","isAtomicRule","hasChildren","parentId","currentCaseId","caseNo","itemsBefore","globalNoByType","indexPath","globalLeafNo","globalGroupNo","node","parent","parentType","isLeaf","isDefaultCase","atomicRulesCountInCase","_top","leaf","height","depth","maxChildDepth","sumHeight","childCount","childItem","_height","bottom","assign","prevId","nextId","prev","getTotalReordableNodesCountInTree","cnt","children1","getTotalRulesCountInTree","getLightTree","deleteExcess","children1AsArray","properties","operatorOptions","values","getSwitchValues","vals","caseValue","isEmptyTree","_fixImmutableValue","_v$toJS","vJs","call","func","toOrderedMap","getTree","immutableTree","light","loadTree","serTree","isImmutableTree","isTree","jsToImmutable","startsWith","Error","fromJS","outValue","isFuncArg","isRuleValue","_outValue$get","_outValue$get$get","_outValue$get2","isIndexed","toList","createMeta","parentMeta","errors","loadFromJsonLogic","logicTree","_loadFromJsonLogic","returnErrors","meta","allowUnknownFields","extendedConfig","extendConfig","conv","buildConv","jsTree","convertFromLogic","wrapInDefaultConj","immTree","operators","opKey","opConfig","jsonLogic","opk","_jsonLogicIsRevArgs","jsonLogic2","conjunctions","conjKey","jsonLogicConj","toLowerCase","funcs","iterateFuncs","_step$value","funcPath","funcConfig","fk","jsonLogicIsMethod","_config$settings$json","varKeys","groupVarKey","altVarKey","expectedType","fieldConfig","widget","parentField","beforeErrorsCnt","lockedOp","isEmptyOp","isRev","convertFieldRhs","convertFuncRhs","convertValRhs","convertConj","convertOp","afterErrorsCnt","_fieldConfig$fieldSet","defaultValue","widgetConfig","mainWidget","fieldType","h","m","dateVal","setMilliseconds","setHours","setMinutes","setSeconds","toISOString","asyncListValues","fieldSettings","valueType","_meta$settings","normalizeField","getFieldConfig","argsArr","funcKey","opts","_vals","_toArray","returnType","funcKeys","getFuncConfig","_step2","_iterator2","_step2$value","fc","jsonLogicImport","parsed","argKeys","args","argsObj","argVal","argKey","argConfig","_argVal","isOptional","fieldSeparator","complexFields","_v$properties","_v$properties2","fieldSrc","_f$includes","complexFieldsGroupAncestors","fromEntries","from","Set","parts","ancs","fp","conjunction","groupToId","entries","_v$properties3","groupAncestors","groupField","ch","parentFieldParts","getFieldParts","groupPath","gf","gfc","groupId","mode","rule","defaultConjunction","_parseRule","arity","isRevArgs","_vals$1$in$","_meta$settings2","isGroup0","groupOperators","opKeys","jlField","jlArgs","_vals2","_vals3","lhs","having","_parse","convertFieldLhs","convertFuncLhs","_v","_v2","init","_v3","_v4","parsedGroup","convertLhs","_vals$1$op2$","op2","isEmptyVar","parseRes","submeta","parseRule","conj","havingVals","havingNot","reversedOp","getWidgetForFieldOp","convertedArgs","parentFieldConfig","defaultGroupConjunction","wrapInDefaultConjRuleGroup","operator","asyncListValuesArr","SqlString","SqlStringOrig","trim","charAt","substring","escapeLike","any_start","any_end","escape","sqlEmptyValue","fieldDef","mongoEmptyValue","spelFixList","spelEscape","numberToFloat","arrayToArray","isFinite","isNaN","isInteger","javaType","jt","escapedVals","numberJavaTypes","spelInlineList","spelEscapeString","spelFormatConcat","part","spelImportConcat","isVariable","stringifyForDisplay","compareToSign","TypesWithCompareTo","spelFormat","_spelFormat","formatItem","formatGroup","formatRule","formatSwitch","formatCase","_formatItemValue","formatItemValue","_formatItemValue2","formattedValue","currentChild","filteredCases","left","right","_filteredCases$_i","cond","List","conjunctionDefinition","isRuleGroupArray","isSpelArray","groupOperator","realGroupOperator","checkOp","isGroupOpRev","realGroupOperatorDefinition","getOperatorConfig","_formatItemValue3","_formatItemValue4","omitBrackets","spelFormatConj","formattedField","formatField","getSize","fullSize","filteredSize","formatExpression","fn","spelFormatOp","operatorDefinition","spelOp","isSign","isCompareTo","sop","compareRes","buildFnToFormatOp","spelFormatReverse","revOpDef","canFormatOp","canFormatRevOp","realOp","_formatItemValue5","_formatItemValue6","formatLhs","formatFunc","expectedValueType","iValueSrc","iValueType","iValue","valueSrcs","valueTypes","fvalue","currentValue","cValue","completeValue","fieldWidgetDef","getFieldWidgetConfig","fv","formatValue","hasUndefinedValues","first","operatorDef","spelFormatValue","pick","valFieldDefinition","fieldDefinition","fieldParts","fieldPartsConfigs","getFieldPartsConfigs","formatFieldFn","formatSpelField","fieldName","formatFieldName","fieldPartsMeta","cnf","parentCnf","isSpelMap","isSpelItemMap","isSpelVariable","_currentValue$get","_currentValue$get2","formattedArgs","gaps","missingArgKeys","_argValue","_argConfig$spelEscape","defaultValueSrc","argValue","argValueSrc","argAsyncListValues","doEscape","spelEscapeForFormat","formattedArgVal","formattedDefaultVal","defaultWidget","defaultFieldWidgetDef","finalFormattedVal","_argValue2","missedArgKey","spelFormatFunc","spelFunc","found","_formattedArgs$argKey","optionalArgs","RegExp","SpelPrimitiveTypes","null","SpelPrimitiveClasses","String","loadFromSpel","_loadFromSpel","spelStr","compiledExpression","convertedObj","SpelExpressionEvaluator","compile","_compiledExpression","postprocessCompiled","convertToTree","expr","parentExpr","getType","getChildren","selection","lastChild","isSize","methodName","isLength","sourceParts","source","convertPath","isThis","itype","_lastChild","_lastChild2","getRaw","getValue","flatizeTernary","functionName","qid","cls","_val","isVar","_processTernaryChildren","tern","_tern","if_val","else_val","_loop","spelOps","spelConj","_loop2","fks","funcSignMain","_k","funcSignsOptional","optionalArgKeys","_step3","_iterator3","valueFuncs","w","widgetDef","spelImportFuncs","fs","argsOrder","matchAll","opFuncs","spel","parentSpel","canParseAsArg","_groupFilter","groupFieldValue","_groupField","groupFilter","caseI","buildCase","convertArg","sw","buildSimpleSwitch","isUnary","isBetweenNormal","isBetweenRev","_spel$children$0$chil","_spel$children$1$chil","to","compareArgs","convertChildren","_newChildren","newChildren","_fieldObj$groupFieldV","_convertedArgs","fieldObj","opArg","_vals$","_vals$2","ws","needWrapReverse","buildRuleGroup","buildRule","expectingField","isError","_meta$errors","_meta$errors$push","_spel$children","at","_values$","buildCaseValueConcat","maybe","convertFunc","_buildFuncSignatures","brns","currBrn","o","_currBrn$params","_buildFuncSignatures2","_buildFuncSignatures3","s1","params1","newBrn","objs","unshift","_step4","_iterator4","_brn$objs","brn","_params","_buildFuncSignatures4","_buildFuncSignatures5","_fsigns$","convertFuncArg","fsigns","buildFuncSignatures","firstSign","maybeValue","convertFuncToValue","maybeOp","convertFuncToOp","_step5","_iterator5","_loop3","_step5$value","_step6","_iterator6","_step6$value","spelImport","funcArgs","errs","foundSign","foundWidget","candidates","fj","_step7","_iterator7","_step8","_step7$value","_iterator8","_loop4","_step8$value","_candidates","_candidates$_i","spelImportValue","_spelImportValue$call","_spelImportValue$call2","_step9","_iterator9","_step10","_step9$value","_iterator10","_ret","_loop5","_argsArr$filter$find","_step10$value","parseInt","_field3","groupOpRule","_map","_map2","leftSource","rightSource","_map3","_map4","leftVal","rightVal","valProperties","buildCaseValProperties","_processConcatChildren","convertedChild","convVal","importCaseValue","_importCaseValue","_importCaseValue2","normVal","getDefaultField","canGetFirst","parentRuleGroupPath","defaultField","getDefaultSubField","getFirstField","parentRuleGroupConfig","getDefaultFieldSrc","_config$settings$fiel","fieldSources","getDefaultOperator","defaultOperator","fieldOperators","fieldDefaultOperator","getFirstOperator","_origDefaultOperator","defaultOperatorOptions","operatorConfig","defaults","defaultRuleProperties","_item$properties","_item$properties2","_item$properties3","canUseDefaultFieldAndOp","current","set","_getNewValueForFieldO","getNewValueForFieldOp","newValueSrc","newValueType","newValueError","newFieldError","conjs","defaultGroupProperties","defaultItemProperties","_item$properties4","defaultRule","defaultRoot","canAddDefaultRule","createListFromArray","ids","emptyProperties","queryString","isForDisplay","isDebugMode","_config$operators$gro","_config$operators$gro2","groupOperatorCardinality","canHaveEmptyChildren","conjStr","formatConj","aggrArgs","formatAggr","formatReverse","returnArgs","_meta$settings3","revOperatorDef","formatOp","fop","labelForFormat","_values$first","_values$get","valFrom","valTo","_operator","_fvalue$get","_fvalue","_fn","_meta$settings4","jsType","cutParentField","_meta$settings5","_config$settings2","fieldSeparatorDisplay","fieldPartsLabels","getFieldPathLabels","fieldFullLabel","fieldLabel2","label2","useTableName","funcValue","_funcValue$get","_funcValue$get2","_args$keySeq","_meta$settings6","funcParts","funcLastKey","funcName","formattedArgsWithNames","keySeq","argName","argsStr","EMPTY_GROUP","EMPTY_RULE_GROUP","EMPTY_QUERY","EMPTY_CASE","NO_CONFIG_FOR_FIELD","NO_CONFIG_FOR_OPERATOR","NO_CONFIG_FOR_FUNCTION","INVALID_VALUE","INVALID_FUNC_ARG_VALUE","UNSUPPORTED_FIELD_TYPE","UNSUPPORTED_OPERATOR_FOR_FIELD","INVALID_VALUE_SRC","INCOMPLETE_RULE","INCOMPLETE_LHS","INCOMPLETE_RHS","BAD_MULTISELECT_VALUES","BAD_SELECT_VALUE","INCORRECT_VALUE_TYPE","INCORRECT_VALUE_JS_TYPE","VALUE_LENGTH_CONSTRAINT_FAIL","VALUE_MIN_CONSTRAINT_FAIL","VALUE_MAX_CONSTRAINT_FAIL","NO_CONFIG_FOR_FIELD_VALUE","CANT_COMPARE_FIELD_WITH_ITSELF","CANT_COMPARE_FIELD_WITH_FIELD","INCORRECT_FIELD_TYPE","UNSUPPORTED_FUNCTION_FOR_FIELD","REQUIRED_FUNCTION_ARG","INCORRECT_FUNCTION_RETURN_TYPE","INVALID_RANGE","ITEM_POSITION","ITEM_POSITION_ROOT","ITEM_POSITION_WITH_INDEX_PATH","ITEM_POSITION_IN_CASE","translations","_translations","constants","NSV","NSVP","i18n","i18next","fallbackLng","addResources","validationTranslations","translateValidation","str","t","typeOf","isValidTree","getTreeBadFields","badFields","_field$get","_field$get2","valueError","fieldError","fieldStr","checkTree","removeEmptyGroups","removeEmptyGroupsOnLoad","removeIncompleteRules","removeIncompleteRulesOnLoad","removeEmptyRules","removeEmptyRulesOnLoad","forceFix","_validateTree2","_validateTree","fixedTree","allErrors","isSanitized","validateTree","finalOptions","sanitizeTree","_validateTree4","fixedErrors","nonFixedErrors","validateAndFixTree","_oldTree","newConfig","oldConfig","_validateTree5","flatItems","oldFlatItems","_ref$translateErrors","translateErrors","_ref$includeStringifi","includeStringifiedItems","_ref$stringifyFixedIt","stringifyFixedItems","_ref$stringifyItemsUs","stringifyItemsUserFriendly","_ref$includeItemsPosi","includeItemsPositions","validateItem","sanitized","_meta$errors$id","errorItem","itemStr","flatItem","isDeleted","itemPosition","trKey","trArgs","_itemPosition$indexPa","_arr","itemPositionStr","_i2","_allErrors","itemErrors","fixedItemErrors","fixed","nonFixedItemErrors","_addError","_setErrorsAsFixed","_properties$get","_config$operators$ope","_config$operators$ope2","_children","_children2","_children3","oldChildren","isGroupExt","isCase","childrenAreRequired","validateRule","nonEmptyChildren","canDrop","validateGroup","canFix","serializeRule","_field","_field$toJS","oldSerialized","side","getFieldSrc","availOps","getOperatorsForField","validationErrors","fixedField","newSerialized","hasBeenSanitized","compl","whatRulePropertiesAreCompleted","toObject","isCompleted","score","shoudlRemoveRule","incError","_newSerialized$valueS","_newSerialized$valueS2","_oldSerialized$valueS","_newSerialized$value","validateValue","leftField","isEndValue","canDropArgs","fixedValue","_allErrors2","_allErrors3","_allErrors4","_allErrors5","_validateFieldValue","validateFieldValue","_validateFieldValue2","_validateFuncValue","validateFuncValue","_validateFuncValue2","_validateNormalValue","validateNormalValue","_validateNormalValue2","fixedAllErrors","fieldWidgetDefinition","rightFieldDefinition","_validResult$error","newError","validResult","fixedFrom","fixedTo","lastError","wConfig","wType","treeValues","isAsyncListValues","canSkipTypeCheck","valueTypeof","realListValues","_validateValueInList","removeInvalidMultiSelectValuesOnLoad","isList","_values$reduce","goodVals","badVals","vv","_values$reduce2","goodValues","badValues","needFix","count","validateValueInList","_validateValueInList2","_valueSrc","canCompareFieldWithField","_isFuncArg","leftFieldStr","leftFieldConfig","rightFieldStr","rightFieldConfig","expected","rightField","_value$get","_funcConfig$label","_argDef$label","argDef","_validateValue","_validateValue2","fixedArgVal","argErrors","willFix","canDropOrReset","setFuncDefaultArg","_argErrors$find","firstError","ignore","argValidationError","canReset","validateRange","rangeError","operatorCardinality","valueSrcsArr","valuesArr","areValueSrcsPureValues","vs","validateValues","jsValues","jsVal","_currentField$get","_newField","_newField$get","newField","newOperator","changedProp","keepInputOnChangeFieldSrc","convertableWidgets","clearValueOnChangeField","clearValueOnChangeOp","currentField","currentFieldType","currentFieldSrc","currentOperator","currentValueSrc","currentValueType","currentOperatorConfig","newOperatorConfig","currentOperatorCardinality","currentFieldConfig","newFieldConfig","isOkWithoutField","currentType","newType","currentListValuesType","listValuesType","newListValuesType","currentFieldSimpleValue","hasFieldChanged","canReuseValue","selectTypes","_validateValue3","_validateValue4","fieldErrors","willFixAllErrors","willRevert","showError","currentWidget","newWidget","currentValueWidget","newValueWidget","firstValueSrc","firstWidgetConfig","getValueSourcesForFieldOp","valueSourcesInfo","defaultValueType","canExtendValueToRange","valueFixes","valueSrcFixes","valueTypeFixes","valueErrors","_i3","vType","vSrc","isValidSrc","_validateValue5","_validateValue6","allErrorsHandled","willDrop","delta","_newFieldConfig$field","dv","_valueSrcFixes$_i","_valueTypeFixes$_i","vt","_ignore","_valueSrcFixes$i","_valueTypeFixes$i","rangeErrorObj","rangeValidationError","badValue","completeFuncValue","complValue","tmpHasOptional","filteredValueSources","filterValueSourcesForField","argDefaultValueSrc","completeArgValue","getDefaultArgValue","setFunc","canFixArgs","oldFuncKey","oldArgs","newFuncSignature","getFuncSignature","oldFuncSignature","keepArgsKeys","getCompatibleArgsOnFuncChange","setFuncDefaultArgs","setArgValue","setArgValueSrc","argValSrc","_argConfig","_config","s2","argVals","arg2","arg1","_argValidErrors$filte","argValidErrors","getOperatorsForType","_config$types$fieldTy","_fieldOps$","fieldOps","calculateValueType","calculatedValueType","getFuncPathLabels","fieldsKey","subfieldsKey","parentParts","_curr","getFieldRawConfig","last","parentFieldDef","isFieldDescendantOfField","getValueLabel","isSpecialRange","arg","showLabels","fieldWidgetConfig","mergedOpConfig","valueLabels","valueLabel","valuePlaceholder","_getWidgetsAndSrcsForFieldOp","widgetValueSrc","canAdd","_fieldConfig$valueSou","_opConfig$valueSource","canAddValueSrc","widgetWeight","wg","preferWidgets","sort","w1","w2","getWidgetsForFieldOp","_fieldDefinition$type","__fieldsCntByType","minCnt","__funcsCntByType","tableName","fieldPartsCopy","parentFieldName","isEmptyItem","isEmptyRuleGroupExt","isEmptyGroup","isEmptyRule","isEmptyRuleGroupExtPropertiesAndChildren","filledParts","isEmptyRuleProperties","isEmptyGroupChildren","_config$operators$ope3","_config$operators$ope4","_value$filter","liteCheck","isCompletedValue","deepCheck","applyJsonLogic","data","JL","customJsonLogicOperations","CALL","JSX","mergeObjects","obj1","obj2","strlen","regexTest","pattern","flags","match","now","date_add","dim","add","toDate","toUpperCase","applyJsonLogicWithPath","message","callContextFn","_this","addRequiredJsonLogicOperations","configKeys","compileMetaFieldSettings","isArr","compileMetaWidget","sqlFormatValue","mongoFormatValue","elasticSearchFormatValue","compileMetaOperator","mongoFormatOp","sqlFormatOp","elasticSearchQueryType","compileMetaWidgetForType","widgetProps","opProps","compileMeta","mainWidgetProps","sqlFormatConj","renderBrackets","renderSeps","sqlFormatFunc","mongoFormatFunc","invokeWith","sqlFormatReverse","normalizeListValues","renderSwitchPrefix","renderItem","renderBeforeWidget","renderAfterWidget","renderBeforeActions","renderAfterActions","renderRuleError","compressConfig","baseConfig","__fieldNames","zipConfig","_clean","BasicFuncs","prototype","hasOwnProperty","_base","_configKeys","rootKey","clone","decompressConfig","useConfigCompress","unzipConfig","_mergeDeep","mixin","_resolveAndMergeDeep","resolved","_configKeys2","merge","compileConfig","__compliled","_compileConfigParts","defineProperty","enumerable","writable","subconfig","logs","newPath","targetObj","newVal","renderReactElement","compileJsonLogicReact","_newVal4","compileJsonLogic","def","subfields","jl","re","this","argNames","_ctx$components","_props","Cmp","components","O","canReorder","canRegroup","canDeleteLocked","canLeaveEmptyGroup","shouldCreateEmptyGroup","canShortMongoQuery","setOpOnChangeField","fieldLabel","operatorLabel","funcLabel","fieldPlaceholder","funcPlaceholder","operatorPlaceholder","lockLabel","lockedLabel","deleteLabel","addGroupLabel","addCaseLabel","addDefaultCaseLabel","defaultCaseLabel","addRuleLabel","addSubRuleLabel","delGroupLabel","fieldSourcesPopupTitle","valueSourcesPopupTitle","removeRuleConfirmOptions","removeGroupConfirmOptions","configId","canCompile","__configId","mergeWith","defaultSettings","typesConfig","extendTypeConfig","extendTypesConfig","extendFieldsConfig","extendFuncArgsConfig","typeConfig","typeWidgetConfig","typeWidgetOperators","excludeOperators","extendFieldConfig","funcDef","tmpIsOptional","isFunc","excludeOperatorsForField","_keysToPutInFieldSett","excludeOperatorsForType","shouldIncludeOperators","addOperators","_computeFieldName","_reduce","computedPath","computed","inGroup","fullPath","fConfig","computeFieldName","_marked2","_regeneratorRuntime","iterateFields","_widgetDefKeysToOmit","_context","delegateYield","_iterateFields","stop","_marked","_context2","_callee","_context3","t0","t1","targetFields","_config$__fieldNames$","_config$__fieldNames$2","findStr","getFuncArgConfig","_config$settings3","getFieldPath","parentPath","_config$settings4","_config$settings5","_field$split","getFieldPathParts","onlyKeys","_field$get3","_field$get4","widgetOpProps","fieldWidgetOpProps","fieldWidgetProps","valueFieldSettings","parentPathArr","firstField","keysPath","_firstField","queryBuilderFormat","usedFields","rules","condition","_valueType","secondField","ruleQuery","jsonLogicFormat","ff","tmp","pdef","groupOperatorDefinition","resultQuery","formatLogic","var","revOperatorDefinition","oldUsedFields","formattedArgsArr","varName","jsonLogicVar","_operatorDefinition$_","formatteOp","isReverseArgs","rangeOps","eqOps","opOpts","mongodbFormat","_mongodbFormat","parents","_not","_canWrapExpr","_formatFieldName","_value","sep","hasParentRuleGroup","realParentPath","groupFieldName","reversedConj","mongoConj","totalQuery","filterQuery","as","_f","useExpr","_formatFunc","_formatFunc2","_formatValue","_formatValue2","fvUseExpr","wrapExpr","_formatRightField","formatRightField","_formatRightField2","_formatFunc3","_formatFunc4","mongoFunc","mongoArgsAsObject","argsCnt","lastArg","_formatValue3","_formatValue4","_formatValue5","_formatValue6","sqlFormat","_sqlFormat","sqlOp","sqlFunc","buildEsRule","syntax","queryType","parameters","determineField","script","elasticSearchScript","ES_7_SYNTAX","geoPointString","coordsNumberArray","top_left","lat","lon","bottom_right","buildEsGeoPoint","gte","lte","dateTime","lt","gt","buildEsRangeParameters","buildEsWildcardParameters","buildRegexpParameters","buildParameters","bool","must_not","ES_6_SYNTAX","elasticSearchFormat","_properties$get2","_properties$get3","recursiveFxn","childrenArray","occurrence","combinator","determineOccurrence","result","resultFlat","buildEsGroup","simulateAsyncFetch","all","cPageSize","_asyncToGenerator","offset","pageSize","currentOffset","newOffset","hasMore","ceil","abrupt","_x","_x2","_x3","mergeListValues","toStart","hideNewValues","old","newFiltered","av","optionToListValue","_val$value","customItem","listValue","optionsToListValues","newSelectedListValues","_val$value2","newSelectedValues","_o$value","listValueToOption","fixListValuesGroupOrder","groupTitles","findLastIndex","findIndex","lv1","_lv1$groupTitle","_lv$groupTitle","nv","NOW","jsonLogicCustomOps","RELATIVE_DATETIME","method","_spel$methodName","matchRes","abs","plus","minus","day","week","month","year","LOWER","UPPER","LINEAR_REGRESSION","coef","bias","_a$children","utils","mongoFormatOp1","mop","mc","_op","$field","mv","mongoFormatOp2","mops","equal","opStr","_this$utils","not_equal","isNotOp","_this$utils2","less","_this$utils3","_len3","_key3","less_or_equal","_this$utils4","_len4","_key4","greater","_this$utils5","_len5","_key5","greater_or_equal","_this$utils6","_len6","_key6","like","_this$utils7","_len7","_key7","not_like","_this$utils8","_this2","_len8","_key8","starts_with","_this$utils9","_this3","_len9","_key9","ends_with","_this$utils10","_this4","_len10","_key10","between","_this$utils11","_len11","_key11","not_between","_this$utils12","_len12","_key12","is_empty","empty","_this$utils13","_this5","_len13","_key13","is_not_empty","_this$utils14","_this6","_len14","_key14","is_null","_this$utils15","_len15","_key15","is_not_null","_this$utils16","_len16","_key16","select_equals","_this$utils17","_len17","_key17","select_not_equals","_this$utils18","_len18","_key18","select_any_in","_this$utils19","_len19","_key19","select_not_any_in","_this$utils20","_len20","_key20","multiselect_contains","_this$utils21","_len21","_key21","multiselect_not_contains","multiselect_equals","_this7","_this$utils22","_len22","_key22","multiselect_not_equals","_this8","_this$utils23","_len23","_key23","proximity","val1","val2","prox","aVal1","aVal2","optionLabel","optionTextBefore","optionPlaceholder","minProximity","maxProximity","_this$utils24","_len24","_key24","_this$utils25","_len25","_key25","none","_this$utils26","_len26","_key26","wgtDef","isFloat","valLabel","_this9","valsLabels","_this10","isCallable","_args$fmt","_args$fmt$includes","_args$fmt2","_args$fmt2$toLowerCas","fmt","ISO_8601","_args$fmt3","_args$fmt3$toLowerCas","_args$fmt4","_args$fmt5","_args$fmt5$includes","rightFieldDef","case_value","partsExt","_this11","q","whereStr","aggrField","aggrFieldDef","_addMixins","mixins","doAdd","mixinFuncs","mixinWidgetRangeslider","treeselect","mixinWidgetTreeselect","treemultiselect","mixinWidgetTreemultiselect","rangeable__date","mixinRangeableWidget","mixName","mixinFunc","addMixin","singleWidget","treeData","_this12","_this13","removeMixins","AND","sqlConj","spelConjs","OR","ADD_GROUP","ADD_CASE_GROUP","REMOVE_GROUP","SET_CONJUNCTION","SET_NOT","ADD_RULE","REMOVE_RULE","SET_FIELD","SET_FIELD_SRC","SET_OPERATOR","SET_VALUE","SET_VALUE_SRC","SET_FUNC_VALUE","SET_OPERATOR_OPTION","SET_LOCK","SET_TREE","MOVE_ITEM","PLACEMENT_AFTER","PLACEMENT_BEFORE","PLACEMENT_APPEND","PLACEMENT_PREPEND","SET_DRAG_PROGRESS","SET_DRAG_START","SET_DRAG_END","addNewGroup","state","generatedId","groupUuid","canAddNewRule","origState","addItem","_addChildren1","_it$id","id1","it1","currentNumber","maxNumber","maxNumberOfCases","maxNumberOfRules","maxNesting","isTernary","targetItem","caseGroup","take","childrenPath","targetChildren","targetChildrenSize","isLastDefaultCase","newChildrenWithLast","mergeIn","removeItem","_currentProperties$ge","_currentProperties$ge2","_newFieldConfig$opera","isInternalValueChange","_meta","currentProperties","wasRuleGroup","currentFieldError","currentOperatorOptions","currentValueErrorStr","isRuleGroupExt","isChangeToAnotherType","lastOp","forceKeepOp","strategy","groupProperties","initialEmptyWhere","updateIn","_newValueError$join","_getNewValueForFieldO2","newValueErrorStr","newCorrectField","willFixField","didErrorChanged","newOperatorOptions","validationError","initEmptyValueLists","lastValue","lastRangeError","emptyDrag","dragging","y","mousePos","dragStart","setTree","addRule","ruleType","removeRule","addDefaultCaseGroup","addCaseGroup","addGroup","removeGroup","moveItem","fromPath","toPath","setLock","lock","setFieldSrc","setOperator","setFuncValue","parentFuncs","setOperatorOption","BasicUtils","Export","Import","initialConfig","getMemoizedTree","setLastTree","getLastConfig","emptyState","_getLastConfig","action","actionMeta","_affectedField","actionTypesToIgnore","mapValues","affectedField","getField","getActionMeta","validatedTree","parentOperator","parentOperatorConfig","hasGroupCountRule","isParentRuleGroup","isEmptyParentGroup","canLeaveEmpty","_setField","__isInternalValueChange","currentRule","currentFielType","_getNewValueForFieldO3","_setValue","_setFuncValue","isLHS","funcsPath","targetFV","funcK","argK","argDefinition","newV","_funcsPath$pop","_funcsPath$pop2","parentFV","_getNewValueForFieldO4","sourcePath","sourceChildren","targetPath","isSameParent","isSourceInsideTarget","isTargetInsideSource","sourceSubpathFromTarget","targetSubpathFromSource","newTargetChildren","newSourceChildren","_oldChildren","checkEmptyGroups","__lastAction","setDragProgress","setDragStart","setDragEnd","TreeActions","_Utils$ConfigUtils","ConfigUtils","createConfigMemo","configStore","getExtended","findConfig","_ret2","savedConfig","_ret3","findExtended","extendAndStore","findOrExtend","pickConfig","getBasic","basicConfig","extConfig","truncateString","useWordBoundary","subString","lastIndexOf","immutableEqual","Validation","getReactRootNodeType","_reactRootContainer","getOwnPropertyNames","parentNode","isUsingLegacyReactDomRender","liteShouldComponentUpdate","self","nextProps","nextState","prevProps","prevState","should","chs","changed","pureShouldComponentUpdate","useOnPropsChanged","shouldComponentUpdate","componentWillReceiveProps","onPropsChanged","origShouldComponentUpdate","bindActionCreators","actionCreators","dispatch","actionCreator","Query","_Component","_classCallCheck","_callSuper","nextValue","oldValidatedTree","_updateActions","getBasicConfig","onInit","actions","_inherits","_createClass","newBasicConfig","_this$props","renderBuilder","Component","propTypes","PropTypes","isRequired","ConnectedQuery","connect","context","displayName","DefaultUtils","QueryContainer","lastTree","prevTree","prevprevTree","getConfig","prevValue","_createConfigMemo","getMemoizedConfig","originalTree","createValidationMemo","emptyTree","reducer","treeStoreReducer","store","createStore","QueryWrapper","pr","nextConfig","isConfigChanged","storeValue","getState","isTreeChanged","currentTree","isTreeTrulyChanged","get_children","Provider","TreeUtils","_isReorderingTree","GroupOrRule","_Draggable","_PureComponent","Draggable","handleDraggerMouseDown","dom","wrapper","onDragStart","isDraggingTempo","isDraggingMe","otherProps","isTrueLocked","styles","cn","classNames","ref","PureComponent","Operator","getMeta","_config$types$selecte","selectedField","selectedFieldType","selectedOperator","operatorsOptions","pickBy","_opts","buildOptions","selectedKeys","selectedPath","ops","renderProps","selectedFieldSrc","Col","dummyFn","xmlns","viewBox","fill","d","WithConfirmFn","OperatorWrapper","selectedFieldParts","showOperator","showOperatorLabel","selectedFieldWidgetConfig","operatorInlineLabel","RuleUtils","Field","widgetId","maxLabelsLength","isFieldSelected","currField","getFieldLabel","partsLabels","parentFieldPath","sourceFields","lookingForFieldType","fieldOpts","optGroup","countFieldsMatchesType","fullFieldPath","fullLabel","hideForSelect","hasItemsMatchesType","_Utils$RuleUtils","OtherUtils","FuncSelect","needUpdateItems","getItems","canUseFuncForField","filteredFuncs","filterFuncs","selectedFuncKey","isFuncSelected","currFunc","getFuncLabel","leftFieldFullkey","targetDefinition","_filter","subpath","funcFullkey","_targetDefinition","canUse","allowSelfNesting","fullFuncPath","funcOpts","immValue","immValueError","widgetDefinition","widgetValueLabel","setValueHandler","widgetFactory","isConst","fixedImmValue","funcArgDummyOpDef","Widget","widgetType","oldRange","_setValueSrc","renderWidget","iValues","aField","_widgets$delta","hasValueSources","widgetLabel","WidgetFactory","_widgets$delta2","setValueSrcHandler","valueSourcesOptions","ValueSources","sourceLabel","renderSep","sepText","sepLabel","renderWidgetDelta","_iValueSrcs","_iValueSrcs2","simpleField","fieldFunc","fieldArg","isForRuleGroup","isCaseValue","iValueSrcs","isSpecialRangeForSrcField","isTrueSpecialRange","range","_iValueSrcs3","_widgetDefinition","vsId","_this$meta","_Utils$FuncUtils","FuncUtils","FuncWidget","_this$props2","_this$props3","renderFuncSelect","_value$get2","_this$props4","selectProps","renderArgLabel","showPrefix","renderArgLabelSep","renderArgVal","_this$props5","defaultValueSource","ArgWidget","renderArgSep","argIndex","renderBracketBefore","renderBracketAfter","renderFuncArgs","funcDefinition","_value$get3","_value$get4","funcLevel","_Component2","_delta","_this2$props","_this2$props2","FieldWrapper","classname","customFieldSelectProps","fieldSourcesOptions","canSelectFieldSource","OperatorOptions","operatorDefinitions","_operatorDefinitions$","optionsFactory","basicOptionsProps","optionsCmp","setOption","Rule","removeSelf","reordableNodesCnt","selectedFieldConfig","isSelectedGroup","isFieldAndOpSelected","selectedOperatorConfig","selectedOperatorHasOptions","hideOperator","showDragIcon","showWidget","showOperatorOptions","confirmOptions","doRemove","isEmptyCurrentRule","onCancel","ruleData","_buildWidgetProps","immutableFieldsMode","immutableOpsMode","immutableValuesMode","oneError","onMouseDown","_this$props6","immutableGroupsMode","Btn","_this$props7","showLock","_this$meta2","_this$props8","canShrinkValue","BtnGrp","renderOperatorOptions","body","renderError","drag","renderDrag","renderLock","del","renderDel","totalRulesCnt","parentReordableNodesCnt","ConnectedRuleContainer","_RuleContainer","RuleContainer","isInDraggingTempo","hasError","createRuleContainer","Group","itemType","ConnectedGroupContainer","_GroupContainer","GroupContainer","_selectedConjunction","selectedConjunction","_getConjunctionOptions","oldConjunction","currentNesting","allowFurtherNesting","createGroupContainer","groupActionsPositionList","topLeft","topCenter","topRight","bottomLeft","bottomCenter","bottomRight","GroupActions","canAddGroup","canAddRule","canDeleteGroup","groupActionsPosition","setLockSwitch","addRuleBtn","addGroupBtn","delGroupBtn","BasicGroup","childrenClassName","BeforeActions","AfterActions","isEmptyCurrentGroup","renderHeaderWrapper","renderChildrenWrapper","renderFooterWrapper","showConjs","isOneChild","renderChildren","isGroupTopPosition","isNoChildren","renderHeader","renderActions","Item","extraPropsForItem","reordableNodesCntForItem","totalRulesCntForItem","_item","RuleGroupActions","RuleGroup","_BasicGroup","_get","_getPrototypeOf","RuleGroupExtActions","RuleGroupExt","renderGroupField","selectedFieldPartsLabels","SwitchGroupActions","canAddDefault","addCaseGroupBtn","addDefaultCaseGroupBtn","_Utils$TreeUtils","SwitchGroup","hasDefaultCase","_this$props$children","_this$props$children2","totalCasesCnt","_this$props$children3","casesToReorder","_this$props$children4","_this$props$config$se","canLeaveEmptyCase","canRegroupCases","CaseGroup","renderHeaderLeft","renderHeaderCenter","renderCondition","oneValue","getProperties","_props$properties","typeMap","rule_group","rule_group_ext","switch_group","case_group","_props$properties2","itemComponent","_Utils$DefaultUtils","Builder","_updPath","rootType","CanMoveFn","ConnectedSortableContainer","_SortableContainer","SortableContainer","_getEventTarget","__mocked_window","document","window","treeEl","closest","_isUsingLegacyReactDomRender","classList","groupPadding","treeElContainer","scrollTop","_getScrollParent","tmpAllGroups","_getDraggableNodeEl","_getPlaceholderNodeEl","querySelectorAll","anyGroup","getComputedStyle","getPropertyValue","offsetLeft","offsetTop","offsetWidth","offsetHeight","itemInfo","clientX","clientY","eventTarget","addEventListener","onDrag","onDragEnd","doHandleDrag","startDragging","startMousePos","__mock_dom","dragEl","plhEl","plX","getBoundingClientRect","scrollX","plY","scrollY","startX","startY","startClientX","startClientY","startScrollTop","pos","handleDrag","preventDefault","remove","_cacheEls","removeEventListener","_prevProps","_prevState","oldPlX","oldPlY","indexId","ignoreCache","contains","querySelector","els","getElementsByClassName","overflowY","scrollHeight","_isScrollable","dragInfo","canMoveFn","dragRect","plhRect","hovRect","treeRect","moveInfo","dragId","dragDirs","hrz","vrt","hovCNodeEl","trgCoord","__mocked_hov_container","hovNodeEl","elementFromPoint","_hovNodeEl$firstChild","rootGroupContainer","firstChild","hovNodeId","getAttribute","hovEl","doAppend","doPrepend","hovHeight","hovII","trgRect","trgEl","trgII","altII","hovInnerEl","hovEl2","hovRect2","hovHeight2","isSamePos","dragLeftOffset","dragLev","round","availMoves","altMoves","isToRoot","isToCase","prevCaseId","nextCaseId","prevCase","nextCase","addCaseII","am","toII","fromCaseII","toCaseII","bestMode","filteredMoves","trg","isInside","toParentII","canMove","levs","curLev","allLevs","closestDragLev","move","fromII","newDepthLev","isBeforeAfter","isPend","isLev1","isParentChange","isStructChange","isForbiddenStructChange","isLockedChange","isLastFromCase","newRulesInTargetCase","createSortableContainer","ValueField","needUpdateMeta","filteredFields","filterFields","_leftFieldConfig$widg","customPlaceholder","leftFieldWidgetField","leftFieldWidgetFieldProps","rightFieldKey","rightFieldFullkey","hideForCompare","customRadioYesProps","radioYes","customRadioNoProps","radioNo","onRadioChange","dtValue","opt","getMultiSelectValues","fontWeight","htmlFor","typeToLabel","btnLabel","confirm","VanillaProvider","Proximity","defaultProximity","selectedProximity","proxValues","defaultProps","CoreConfig","ProximityOperator","VanillaTextWidget","VanillaTextAreaWidget","VanillaNumberWidget","VanillaSliderWidget","VanillaSelectWidget","VanillaMultiSelectWidget","VanillaDateWidget","VanillaTimeWidget","VanillaDateTimeWidget","VanillaBooleanWidget","ValueFieldWidget","VanillaFieldSelect","VanillaConjs","VanillaSwitch","VanillaButton","VanillaIcon","VanillaButtonGroup","VanillaValueSources","_ref25","_ref26","vanillaConfirm","Widgets","CustomOperators","C","P","_Utils$Autocomplete","_Utils$ListUtils","useLoadMore","useAsyncSearch","forceAsyncSearch","selectedAsyncListValues","staticListValues","knownSpecialValues","loadMoreTitle","loadingMoreTitle","_React$useState3","_React$useState4","asyncFetchMeta","setAsyncFetchMeta","_React$useState5","_React$useState6","loadingCnt","setLoadingCnt","_React$useState7","_React$useState8","isLoadingMore","setIsLoadingMore","_React$useState9","_React$useState10","setInputValue","_React$useState11","_React$useState12","setAsyncListValues","asyncFectchCnt","componentIsMounted","isSelectedLoadMore","nSelectedAsyncListValues","listValuesToDisplay","canInitialLoad","canLoadMore","canShowLoadMore","fetchListValues","isLoadMore","newAsyncFetchCnt","newMeta","nValues","assumeHasMore","realNewMeta","_args","sent","loadListValues","_callee2","_args2","loadListValuesDebounced","debounce","_callee3","_callee4","isLoadMoreClick","_context4","_callee5","_option2","isClearingAll","isClearingInput","isClearingSingle","_option$value","_option","isAddingCustomOptionFromSearch","_optionsToListValues","_optionsToListValues2","_optionToListValue","_optionToListValue2","lvs","_context5","_x4","_callee6","newInputValue","eventType","shouldIgnore","_context6","_x5","_x6","_x7","onDropdownVisibleChange","isSpecialValue","valueOrOption","_valueOrOption$value","ReactUtils","webpackContext","req","webpackContextResolve","__webpack_require__","code","module","exports"],"sourceRoot":""}