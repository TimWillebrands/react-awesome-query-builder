{"version":3,"file":"728.bundle.js","mappings":"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","sources":["webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialSelect.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialFieldAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialValueSources.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/index.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialText.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialTextArea.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialDate.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialDateTime.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialTime.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialNumber.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialSlider.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialRange.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/value/MaterialBoolean.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialButton.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialConjs.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialSwitch.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/widgets/core/MaterialConfirm.jsx","webpack://@react-awesome-query-builder/examples/../material/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../core/modules/utils/uuid.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/default.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/listValues.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/treeUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/export.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/spel.js","webpack://@react-awesome-query-builder/examples/../core/modules/import/spel.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/defaultUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/validation.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/funcUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/ruleUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configSerialize.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/configUtils.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryBuilder.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/jsonLogic.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/mongoDb.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/sql.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/queryString.js","webpack://@react-awesome-query-builder/examples/../core/modules/export/elasticSearch.js","webpack://@react-awesome-query-builder/examples/../core/modules/utils/autocomplete.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/funcs.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/ctx.js","webpack://@react-awesome-query-builder/examples/../core/modules/config/index.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../core/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/tree.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/group.js","webpack://@react-awesome-query-builder/examples/../core/modules/actions/rule.js","webpack://@react-awesome-query-builder/examples/../core/modules/index.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/tree.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/context.js","webpack://@react-awesome-query-builder/examples/../ui/modules/stores/constants.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/drag.js","webpack://@react-awesome-query-builder/examples/../ui/modules/actions/index.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/configUtils.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/stuff.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/validation.js","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/reactUtils.js","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Query.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/QueryContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/RuleContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/SortableContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/Draggable.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Operator.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/utils.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Field.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/WidgetFactory.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/Widget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FuncWidget.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/FieldWrapper.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/OperatorOptions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Rule.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/containers/GroupContainer.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/GroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Group.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExtActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/RuleGroupExt.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroupActions.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/SwitchGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/CaseGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/item/Item.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/Builder.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/rule/ValueField.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaBoolean.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaText.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTextArea.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDate.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaDateTime.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaMultiSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaNumber.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/value/VanillaSlider.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaFieldSelect.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaConjs.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButton.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaButtonGroup.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaValueSources.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/VanillaSwitch.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/core/vanillaConfirm.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/widgets/vanilla/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/components/operators/Proximity.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/config/index.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/hooks/useListValuesAutocomplete.jsx","webpack://@react-awesome-query-builder/examples/../ui/modules/utils/index.js","webpack://@react-awesome-query-builder/examples/../../node_modules/.pnpm/moment@2.29.4/node_modules/moment/locale/ sync [/\\\\](es-us(\\.js)"],"sourcesContent":["import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = () =>\n    mapListValues(listValues, ({title, value}) => {\n      return <MenuItem key={value} value={value}>{title}</MenuItem>;\n    });\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  const renderValue = (selectedValue) => {\n    if (!readonly && selectedValue == null)\n      return placeholder;\n    return getListValueTitle(selectedValue);\n  };\n\n  const getListValueTitle = (selectedValue) => \n    mapListValues(listValues, ({title, value}) => \n      (value === selectedValue ? title : null)\n    )\n      .filter(v => v !== null)\n      .shift();\n  \n  const hasValue = value != null;\n\n  return (\n    <FormControl>\n      <Select\n        autoWidth\n        displayEmpty\n        label={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : \"\"}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        {...omit(customProps, [\"showSearch\", \"input\"])}\n      >\n        {renderOptions()}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport omit from \"lodash/omit\";\nimport { Utils } from \"@react-awesome-query-builder/ui\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, placeholder, customProps}) => {\n  const renderOptions = (selectedValues) => \n    mapListValues(listValues, ({title, value}) => {\n      return (\n        <MenuItem key={value} value={value}>\n          <Checkbox checked={selectedValues.indexOf(value) > -1} />\n          <ListItemText primary={title} />\n        </MenuItem>\n      );\n    });\n\n  const renderValue = (selectedValues) => {\n    if (!readonly && !selectedValues.length)\n      return placeholder;\n    const selectedTitles = mapListValues(listValues, ({title, value}) => (\n      selectedValues.indexOf(value) > -1 ? title : null\n    )).filter(v => v !== null);\n    return selectedTitles.join(\", \");\n  };\n\n  const hasValue = value != null && value.length > 0;\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValue(e.target.value);\n  };\n\n  return (\n    <FormControl>\n      <Select multiple\n        autoWidth\n        displayEmpty\n        label={!readonly ? placeholder : \"\"}\n        onChange={onChange}\n        value={hasValue ? value : []}\n        disabled={readonly}\n        readOnly={readonly}\n        renderValue={renderValue}\n        {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n      >\n        {renderOptions(hasValue ? value : [])}\n      </Select>\n    </FormControl>\n  );\n};\n","import React, {useCallback} from \"react\";\nimport omit from \"lodash/omit\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Autocomplete, { createFilterOptions } from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\nimport { Hooks, Utils } from \"@react-awesome-query-builder/ui\";\nconst { useListValuesAutocomplete } = Hooks;\n\nconst nonCheckedIcon = <CheckBoxOutlineBlankIcon fontSize=\"small\" style={{ marginRight: 10, marginTop: 4 }} />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" style={{ marginRight: 10, marginTop: 4 }} />;\nconst emptyArray = [];\n\n\nexport default (props) => {\n  const {\n    allowCustomValues, multiple, disableClearable,\n    value: selectedValue, customProps, readonly, config, filterOptionsConfig, errorText\n  } = props;\n  const stringifyOption = useCallback((option) => {\n    const keysForFilter = config.settings.listKeysForSearch;\n    const valueForFilter = keysForFilter\n      .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n      .join(\"\\0\");\n    return valueForFilter;\n  }, [config]);\n  const defaultFilterOptionsConfig = {\n    stringify: stringifyOption\n  };\n  const filterOptionsFn = createFilterOptions(filterOptionsConfig || defaultFilterOptionsConfig);\n\n  // hook\n  const {\n    open,\n    onOpen,\n    onClose,\n    onChange,\n    onInputChange,\n    inputValue,\n    options,\n    isInitialLoading,\n    isLoading,\n    aPlaceholder,\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    selectedListValue,\n  } = useListValuesAutocomplete(props, {\n    debounceTimeout: 100,\n    multiple,\n    uif: \"mui\"\n  });\n\n  // setings\n  const {defaultSelectWidth, defaultSearchWidth} = config.settings;\n  const {width, ...rest} = customProps || {};\n  let customInputProps = rest.input || {};\n  const inputWidth = customInputProps.width || defaultSearchWidth;\n  customInputProps = omit(customInputProps, [\"width\"]);\n  const customAutocompleteProps = omit(rest, [\"showSearch\", \"showCheckboxes\"]);\n\n  const fullWidth = true;\n  const minWidth = width || defaultSelectWidth;\n  const style = {\n    width: (multiple ? undefined : minWidth),\n    minWidth: minWidth\n  };\n  const placeholder = !readonly ? aPlaceholder : \"\";\n  const hasValue = selectedValue != null;\n  // should be simple value to prevent re-render!s\n  const value = hasValue ? selectedValue : (multiple ? emptyArray : null);\n\n  const filterOptions = (options, params) => {\n    const filtered = filterOptionsFn(options, params);\n    const extended = extendOptions(filtered);\n    return extended;\n  };\n\n  const groupBy = (option) => option?.groupTitle;\n\n  // styles\n  const useStyles = makeStyles((theme) => ({\n    // fix too small width\n    input: {\n      minWidth: inputWidth + \" !important\",\n    }\n  }));\n\n  const useStylesChip = makeStyles((theme) => ({\n    // fix height\n    root: {\n      height: \"auto\"\n    },\n    label: {\n      marginTop: \"3px\",\n      marginBottom: \"3px\",\n    }\n  }));\n\n  const classesChip = useStylesChip();\n  const classes = useStyles();\n\n  // render\n  const renderInput = (params) => {\n    // parity with Antd\n    const shouldRenderSelected = !multiple && !open;\n    const selectedTitle = selectedListValue?.title ?? \"\";\n    const shouldHide = multiple && !open;\n    const value = shouldRenderSelected ? selectedTitle : (shouldHide ? \"\" : inputValue ?? \"\");\n    return (\n      <TextField \n        {...params}\n        inputProps={{\n          ...params.inputProps,\n          value,\n        }}\n        InputProps={{\n          ...params.InputProps,\n          readOnly: readonly,\n          endAdornment: (\n            <React.Fragment>\n              {isLoading ? <CircularProgress color=\"inherit\" size={20} /> : null}\n              {params.InputProps.endAdornment}\n            </React.Fragment>\n          ),\n        }}\n        disabled={readonly}\n        placeholder={placeholder}\n        error={!!errorText}\n        //onChange={onInputChange}\n        {...customInputProps}\n      />\n    );\n  };\n\n  const renderTags = (value, getTagProps) => value.map((option, index) => {\n    const className = getOptionIsCustom(option) ? \"customSelectOption\" : undefined;\n    const titleSpan = (\n      <span className={className}>\n        {getOptionLabel(option)}\n      </span>\n    );\n    return <Chip\n      key={option.value}\n      classes={classesChip}\n      label={titleSpan}\n      size={\"small\"}\n      //variant={getOptionIsCustom(option) ? \"outlined\" : undefined}\n      {...getTagProps({ index })}\n    />;\n  });\n\n  const renderOption = (option, { selected }) => {\n    const { title, renderTitle, value, specialValue, isHidden } = option;\n    const isSelected = selected;\n    //const isSelected = multiple ? (selectedValue || []).includes(value) : selectedValue == value;\n    const className = getOptionIsCustom(option) ? \"customSelectOption\" : undefined;\n    const titleSpan = (\n      <span className={className}>\n        {renderTitle || title}\n      </span>\n    );\n    if (isHidden)\n      return null;\n    if (multiple) {\n      if (specialValue)\n        return (\n          <Box>\n            {renderTitle || title}\n          </Box>\n        );\n      else\n        return (\n          <Box>\n            {selected ? checkedIcon : nonCheckedIcon}\n            {titleSpan}\n          </Box>\n        );\n    } else {\n      if (specialValue)\n        return <React.Fragment>{renderTitle || title}</React.Fragment>;\n      else\n        return <React.Fragment>{titleSpan}</React.Fragment>;\n    }\n  };\n\n  return (\n    <FormControl fullWidth={fullWidth}>\n      <Autocomplete\n        disableClearable={disableClearable}\n        disableCloseOnSelect={multiple}\n        fullWidth={fullWidth}\n        multiple={multiple}\n        style={style}\n        classes={classes}\n        freeSolo={allowCustomValues}\n        loading={isInitialLoading}\n        open={open}\n        onOpen={onOpen}\n        onClose={onClose}\n        inputValue={inputValue}\n        onInputChange={onInputChange}\n        label={placeholder}\n        onChange={onChange}\n        value={value}\n        getOptionSelected={getOptionSelected}\n        disabled={readonly}\n        readOnly={readonly}\n        options={options}\n        groupBy={groupBy}\n        getOptionLabel={getOptionLabel}\n        getOptionDisabled={getOptionDisabled}\n        renderInput={renderInput}\n        renderTags={renderTags}\n        renderOption={renderOption}\n        filterOptions={filterOptions}\n        {...customAutocompleteProps}\n      ></Autocomplete>\n    </FormControl>\n  );\n};\n","import React, {useCallback} from \"react\";\nimport MaterialAutocomplete from \"../value/MaterialAutocomplete\";\n\n// see type FieldItemSearchableKeys\nconst mapFieldItemToOptionKeys = {\n  key: \"_value2\",\n  path: \"value\",\n  label: \"title\",\n  altLabel: \"_altLabel\",\n  tooltip: \"tooltip\",\n  grouplabel: \"groupTitle\",\n};\n\nconst itemsToListValues = (items, level = 0) => (\n  items.map(item => {\n    const {items, path, key, label, altLabel, disabled, grouplabel, matchesType, tooltip} = item;\n    const prefix = \"\\u00A0\\u00A0\".repeat(level);\n    if (items) {\n      return itemsToListValues(items, level+1);\n    } else {\n      return {\n        title: label,\n        renderTitle: matchesType ? <b>{prefix+label}</b> : prefix+label,\n        value: path,\n        disabled,\n        groupTitle: level > 0 ? prefix+grouplabel : null,\n        tooltip: tooltip,\n        _value2: key,\n        _altLabel: altLabel,\n      };\n    }\n  }).flat(Infinity)\n);\n\nconst fieldAdapter = ({items, selectedKey, setField, isValueField, ...rest}, config) => {\n  const listValues = itemsToListValues(items);\n  const value = selectedKey;\n  const setValue = (value, _asyncValues) => {\n    if (!value && !isValueField) return undefined;\n    return setField(value);\n  };\n\n  const filterOptionsConfig = {\n    stringify: useCallback((option) => {\n      const keysForFilter = config.settings.fieldItemKeysForSearch\n        .map(k => mapFieldItemToOptionKeys[k]);\n      const valueForFilter = keysForFilter\n        .map(k => (typeof option[k] == \"string\" ? option[k] : \"\"))\n        .join(\"\\0\");\n      return valueForFilter;\n    }, [config])\n  };\n\n  return {\n    ...rest,\n    listValues,\n    setValue,\n    filterOptionsConfig,\n    allowCustomValues: false,\n    multiple: false,\n    disableClearable: !isValueField,\n    value,\n  };\n};\n\nexport default (props) => {\n  return <MaterialAutocomplete  {...fieldAdapter(props, props.config)} />;\n};\n","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ExpandMoreSharpIcon from \"@material-ui/icons/ExpandMoreSharp\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(1),\n  },\n}));\n\nexport default ({ valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const classes = useStyles();\n\n\n  const handleOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const toggleOpenClose = (event) => {\n    anchorEl ? handleClose() : handleOpen(event);\n  };\n\n  const handleChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setValueSrc(e.target.value);\n    handleClose();\n  };\n\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => (\n      <FormControlLabel \n        key={srcKey} \n        value={srcKey} \n        checked={valueSrc == srcKey || !valueSrc && srcKey == \"value\"} \n        control={<Radio />} \n        label={info.label}\n      />\n    ))\n  );\n\n  const open = Boolean(anchorEl);\n\n  return (\n    <div>\n      <IconButton size=\"small\" onClick={toggleOpenClose}>\n        <ExpandMoreSharpIcon />\n      </IconButton>\n    \n      <Popover    \n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n        onClose={handleClose}\n        classes={{\n          paper: classes.paper,\n        }}\n        disablePortal\n      >\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">{title}</FormLabel>\n          <RadioGroup value={valueSrc || \"value\"} onChange={handleChange}>\n            {renderOptions(valueSources)}\n          </RadioGroup>\n        </FormControl>\n      </Popover>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { ThemeProvider, createTheme } from \"@material-ui/core/styles\";\nimport { ConfirmProvider, useConfirm } from \"material-ui-confirm\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\n\n\n// value widgets\nimport MaterialTextWidget from \"./value/MaterialText\";\nimport MaterialTextAreaWidget from \"./value/MaterialTextArea\";\nimport MaterialDateWidget from \"./value/MaterialDate\";\nimport MaterialDateTimeWidget from \"./value/MaterialDateTime\";\nimport MaterialTimeWidget from \"./value/MaterialTime\";\nimport MaterialSelectWidget from \"./value/MaterialSelect\";\nimport MaterialNumberWidget from \"./value/MaterialNumber\";\nimport MaterialSliderWidget from \"./value/MaterialSlider\";\nimport MaterialRangeWidget from \"./value/MaterialRange\";\nimport MaterialBooleanWidget from \"./value/MaterialBoolean\";\nimport MaterialMultiSelectWidget from \"./value/MaterialMultiSelect\";\nimport MaterialAutocompleteWidget from \"./value/MaterialAutocomplete\";\n\n// field select widgets\nimport MaterialFieldSelect from \"./core/MaterialFieldSelect\";\nimport MaterialFieldAutocomplete from \"./core/MaterialFieldAutocomplete\";\n\n// core components\nimport MaterialButton from \"./core/MaterialButton\";\nimport MaterialButtonGroup from \"./core/MaterialButtonGroup\";\nimport MaterialConjs from \"./core/MaterialConjs\";\nimport MaterialSwitch from \"./core/MaterialSwitch\";\nimport MaterialValueSources from \"./core/MaterialValueSources\";\nimport MaterialConfirm from \"./core/MaterialConfirm\";\n\n// provider\nconst MaterialProvider = ({config, children}) => {\n  const settingsTheme = config.settings.theme || {};\n  const settingsLocale = config.settings.locale || {};\n  const themeConfig = settingsTheme.material;\n  const locale = settingsLocale.material;\n  const useTheme = themeConfig || locale;\n  const theme = useTheme ? createTheme(themeConfig, locale) : null;\n\n  const base = (<div className=\"mui\">{children}</div>);\n  const withProviders = (\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      <ConfirmProvider>\n        {base}\n      </ConfirmProvider>\n    </MuiPickersUtilsProvider>\n  );\n  const withTheme = theme ? (\n    <ThemeProvider theme={theme}>\n      {withProviders}\n    </ThemeProvider>\n  ) : withProviders;\n\n  return withTheme;\n};\n\n\nexport default {\n  MaterialTextWidget,\n  MaterialTextAreaWidget,\n  MaterialDateWidget,\n  MaterialDateTimeWidget,\n  MaterialTimeWidget,\n  MaterialSelectWidget,\n  MaterialNumberWidget,\n  MaterialSliderWidget,\n  MaterialRangeWidget,\n  MaterialBooleanWidget,\n  MaterialMultiSelectWidget,\n  MaterialAutocompleteWidget,\n\n  MaterialFieldSelect,\n  MaterialFieldAutocomplete,\n\n  MaterialButton,\n  MaterialButtonGroup,\n  MaterialConjs,\n  MaterialSwitch,\n  MaterialValueSources,\n  MaterialConfirm,\n  MaterialUseConfirm: useConfirm,\n\n  MaterialProvider,\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength} = props;\n\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n\n  const textValue = value || \"\";\n\n  return (\n    <FormControl>\n      <TextField \n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, customProps, maxLength, maxRows, fullWidth} = props;\n  const {defaultMaxRows} = config.settings;\n\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  \n  const textValue = value || \"\";\n\n  return (\n    <FormControl fullWidth={fullWidth}>\n      <TextField \n        fullWidth={fullWidth}\n        maxRows={maxRows || defaultMaxRows}\n        multiline={true}\n        value={textValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          maxLength: maxLength,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport { KeyboardDatePicker, DatePicker } from \"@material-ui/pickers\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, readonly, customProps, dateFormat, valueFormat, placeholder} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const useKeyboard = window?.matchMedia\n    ? window.matchMedia?.(\"(pointer:fine), (pointer:none)\").matches\n    : props.useKeyboard;\n  const Picker = useKeyboard ? KeyboardDatePicker : DatePicker;\n\n  return (\n    <FormControl>\n      <Picker\n        readOnly={readonly}\n        disabled={readonly}\n        placeholder={!readonly ? placeholder : \"\"}\n        format={dateFormat}\n        value={value || null}\n        onChange={handleChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};","import React from \"react\";\nimport { DateTimePicker, KeyboardDateTimePicker } from \"@material-ui/pickers\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, dateFormat, timeFormat, valueFormat, customProps} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const useKeyboard = window?.matchMedia\n    ? window.matchMedia?.(\"(pointer:fine), (pointer:none)\").matches\n    : props.useKeyboard;\n  const Picker = useKeyboard ? KeyboardDateTimePicker : DateTimePicker;\n  const dateTimeFormat = dateFormat + \" \" + timeFormat;\n  \n  return (\n    <FormControl>\n      <Picker\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        placeholder={!readonly ? placeholder : \"\"}\n        format={dateTimeFormat}\n        value={value || null}\n        onChange={handleChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport { TimePicker, KeyboardTimePicker } from \"@material-ui/pickers\";\nimport moment from \"moment\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, use12Hours, readonly, placeholder, timeFormat, valueFormat, customProps} = props;\n\n  const formatSingleValue = (value) => {\n    return value && value.isValid() ? value.format(valueFormat) : undefined;\n  };\n\n  const handleChange = (value) => {\n    setValue(formatSingleValue(value));\n  };\n\n  const useKeyboard = window?.matchMedia\n    ? window.matchMedia?.(\"(pointer:fine), (pointer:none)\").matches\n    : props.useKeyboard;\n  const Picker = useKeyboard ? KeyboardTimePicker : TimePicker;\n  const hasSeconds = timeFormat.indexOf(\":ss\") != -1;\n  const timeValue = value ? moment(value, timeFormat) : null;\n\n  return (\n    <FormControl>\n      <Picker\n        readOnly={readonly}\n        disabled={readonly}\n        ampm={!!use12Hours}\n        placeholder={!readonly ? placeholder : \"\"}\n        format={timeFormat}\n        value={timeValue || null}\n        onChange={handleChange}\n        views={hasSeconds ? [\"hours\", \"minutes\", \"seconds\"] : [\"hours\", \"minutes\"]}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps} = props;\n  \n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n\n  const numberValue = value == undefined ? \"\" : value;\n  \n  return (\n    <FormControl>\n      <TextField \n        type=\"number\"\n        value={numberValue}\n        placeholder={!readonly ? placeholder : \"\"}\n        InputProps={{\n          readOnly: readonly,\n        }}\n        inputProps={{\n          min: min,\n          max: max,\n          step: step,\n        }}\n        disabled={readonly}\n        onChange={onChange}\n        {...customProps}\n      />\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {config, placeholder, customProps, value, setValue, min, max, step, marks, readonly} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  const handleSliderChange = (_e, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleInputChange = (e) => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n\n  const handleInputBlur = () => {\n    // TIP: Fix if typed value out of range in input\n    if (value < min) {\n      setValue(min);\n    } else if (value > max) {\n      setValue(max);\n    }\n  };\n\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n  \n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0\n  const inputValue = typeof value === \"number\" ? value : \"\";\n  const sliderValue = typeof value === \"number\" ? value : null;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = marks ? Object.keys(marks).map(v => ({value: v, label: marks[v]})) : false;\n\n\n  const InputCmp = (\n    <TextField \n      type=\"number\"\n      value={inputValue}\n      placeholder={placeholder}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChange}\n      onBlur={handleInputBlur}\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    alignItems: \"center\",\n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {InputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default (props) => {\n  const {config, placeholders, customProps, value, setValue, min, max, step, marks, readonly, textSeparators} = props;\n  const {defaultSliderWidth} = config.settings;\n\n  useEffect(() => {\n    const [valueFrom, valueTo] = props.value || [undefined, undefined];\n    if (props.value && (valueFrom == undefined || valueTo == undefined)) {\n      // happens if we changed op from '==' to 'between'\n      // (I know, timeout is dirty hack..)\n      setTimeout(() => {\n        const oneValue = valueFrom || valueTo;\n        const value = [oneValue, oneValue];\n        setValue(value);\n      }, 1);\n    }\n  }, []);\n\n  const handleSliderChange = (_e, newValues) => {\n    setValue(newValues);\n  };\n\n  const handleInputChangeFrom = (e) => {\n    // TIP: need to use props.value instead of value\n    let valueFrom = e.target.value;\n    if (valueFrom === \"\" || valueFrom == null)\n      valueFrom = undefined;\n    else\n      valueFrom = Number(valueFrom);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[0] = valueFrom;\n    setValue(value);\n  };\n\n  const handleInputChangeTo = (e) => {\n    let valueTo = e.target.value;\n    if (valueTo === \"\" || valueTo == null)\n      valueTo = undefined;\n    else\n      valueTo = Number(valueTo);\n    let value = props.value ? [...props.value] : [undefined, undefined];\n    value[1] = valueTo;\n    setValue(value);\n  };\n\n  const handleInputBlur = () => {\n    // TIP: Fix if typed value out of range in inputs\n    if (!value) return;\n    if (value[0] < min) {\n      setValue([min, value[1]]);\n    } else if (value[1] > max) {\n      setValue([value[0], max]);\n    }\n  };\n\n  const {width, ...rest} =  customProps || {};\n  const customInputProps = rest.input || {};\n  const customSliderProps = rest.slider || rest;\n\n  // marks example: { 0: \"0%\", 100: React.createElement('strong', null, \"100%\") }\n  const muiMarks = marks ? Object.keys(marks).map(v => ({value: v, label: marks[v]})) : false;\n\n  // TIP: Can't pass undefined to MUI, cause it means uncontrolled component use.\n  //      For empty value input needs \"\", slider needs null or 0, but null will cause problems with range mode\n  let sliderValue = value ? [...value] : [undefined, undefined];\n  let [valueFrom, valueTo] = sliderValue;\n  if (valueFrom == undefined) {\n    valueFrom = \"\";\n    sliderValue[0] = 0;\n  }\n  if (valueTo == undefined) {\n    valueTo = \"\";\n    sliderValue[1] = 0;\n  }\n  \n\n  const FromInputCmp = (\n    <TextField \n      type=\"number\"\n      value={valueFrom}\n      placeholder={placeholders[0]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeFrom}\n      onBlur={handleInputBlur}\n      {...customInputProps}\n    />\n  );\n\n  const ToInputCmp = (\n    <TextField \n      type=\"number\"\n      value={valueTo}\n      placeholder={placeholders[1]}\n      InputProps={{\n        readOnly: readonly,\n      }}\n      inputProps={{\n        min: min,\n        max: max,\n        step: step,\n      }}\n      disabled={readonly}\n      onChange={handleInputChangeTo}\n      onBlur={handleInputBlur}\n      {...customInputProps}\n    />\n  );\n\n  const SliderCmp = (\n    <Slider \n      value={sliderValue}\n      onChange={handleSliderChange}\n      disabled={readonly}\n      min={min}\n      max={max}\n      step={step}\n      marks={muiMarks}\n      valueLabelDisplay=\"auto\"\n      {...customSliderProps}\n    />\n  );\n\n  const stylesWrapper = {\n    display: \"inline-flex\", \n    flexWrap: \"wrap\"\n  };\n\n  const stylesInputWrapper = {\n    marginLeft: \"5px\",\n  };\n\n  const stylesSliderWrapper = {\n    marginLeft: \"5px\", \n    paddingLeft: \"12px\", \n    marginBottom: muiMarks && \"-16px\", \n    width: width || defaultSliderWidth,\n  };\n\n  return (\n    <FormControl>\n      <div style={stylesWrapper}>\n        <div style={stylesInputWrapper}>\n          {FromInputCmp}\n        </div>\n        <div className={\"widget--sep\"}>\n          <span>{ textSeparators[1] }</span>\n        </div>\n        <div style={stylesInputWrapper}>\n          {ToInputCmp}\n        </div>\n        <div style={stylesSliderWrapper}>\n          {SliderCmp}\n        </div>\n      </div>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default (props) => {\n  const { customProps, value, setValue, labelYes, labelNo, readonly } = props;\n\n  const onChange = () => {\n    setValue(!value);\n  };\n  \n  return (\n    <FormControl>\n      <Typography component=\"div\">\n        <Grid component=\"label\" container alignItems=\"center\" spacing={0}>\n          <Grid item component=\"span\">{labelNo}</Grid>\n          <Grid item component=\"span\">\n            <Switch\n              checked={!!value}\n              onChange={onChange}\n              disabled={readonly}\n              {...customProps}\n            />\n          </Grid>\n          <Grid item component=\"span\">{labelYes}</Grid>\n        </Grid>\n      </Typography>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nexport default ({items, setField, selectedKey, readonly, placeholder, errorText}) => {\n  const renderOptions = (fields, level = 0) => (\n    fields.map(field => {\n      const {items, path, label, disabled, matchesType} = field;\n      const prefix = \"\\u00A0\\u00A0\".repeat(level);\n      if (items) {\n        return [\n          <ListSubheader disabled={disabled} key={path} disableSticky={true}>\n            {prefix && <span>{prefix}</span>}\n            {label}\n          </ListSubheader>,\n          renderOptions(items, level+1),\n        ];\n      } else {\n        return <MenuItem disabled={disabled} key={path} value={path}>\n          {prefix && <span>{prefix}</span>}\n          {matchesType ? <b>{label}</b> : label}\n        </MenuItem>;\n      }\n    })\n  );\n\n  const onChange = e => {\n    if (e.target.value === undefined)\n      return;\n    setField(e.target.value);\n  };\n\n  const renderValue = (selectedValue) => {\n    if (!readonly && !selectedValue)\n      return placeholder;\n    const findLabel = (fields) => {\n      return fields.map(field => {\n        if(!field.items) return field.path === selectedValue ? field.label : null;\n        return findLabel(field.items);\n      });\n    };\n    return findLabel(items).filter((v) => {\n      if (Array.isArray(v)) {\n        return v.some((value) => value !== null);\n      } else {\n        return v !== null;\n      }\n    }).pop();\n  };\n  \n  const hasValue = selectedKey != null;\n  return (\n    <FormControl>\n      <Select\n        error={!!errorText}\n        autoWidth\n        displayEmpty\n        label={placeholder}\n        onChange={onChange}\n        value={hasValue ? selectedKey : \"\"}\n        disabled={readonly}\n        renderValue={renderValue}\n      >\n        {renderOptions(items)}\n      </Select>\n    </FormControl>\n  );\n};\n","import React from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nexport default ({type, label, onClick, readonly, config}) => {\n  const hideLabelsFor = {\n    \"addRuleGroup\": true,\n    \"addRuleGroupExt\": true,\n  };\n  const typeToIcon = {\n    \"delGroup\": <DeleteIcon />,\n    \"delRuleGroup\": <DeleteIcon />,\n    \"delRule\": <DeleteIcon />,\n    \"addRuleGroup\": <AddIcon />,\n    \"addRuleGroupExt\": <AddIcon />,\n    \"addRule\": <AddIcon />,\n    \"addGroup\": <AddIcon />,\n  };\n  const typeToColor = {\n    \"addRule\": \"default\",\n    \"addGroup\": \"primary\",\n    \"delGroup\": \"secondary\",\n    \"delRuleGroup\": \"secondary\",\n    \"delRule\": \"secondary\",\n  };\n  if (!label || hideLabelsFor[type])\n    return <IconButton size=\"small\" disabled={readonly} onClick={onClick} color={typeToColor[type]}>{typeToIcon[type]}</IconButton>;\n  else\n    return <Button size=\"small\" disabled={readonly} onClick={onClick} color={typeToColor[type]} startIcon={typeToIcon[type]}>{label}</Button>;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default ({id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel}) => {\n  //TIP: disabled=true if only 1 rule; readonly=true if immutable mode\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(key => {\n      const {id, name, label, checked} = conjunctionOptions[key];\n      const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n      if ((readonly || disabled) && !checked)\n        return null;\n      return (\n        <Button \n          key={id+postfix} \n          id={id+postfix} \n          color={checked ? \"primary\" : \"default\"} \n          value={key} \n          onClick={onClick.bind(null, key)} \n          disabled={readonly || disabled}\n        >\n          {label}\n        </Button>\n      );\n    });\n  \n  const renderNot = () => {\n    if (readonly && !not)\n      return null;\n    return (\n      <Button \n        key={id}\n        id={id + \"__not\"}\n        color={not ? \"secondary\" : \"default\"} \n        onClick={onNotClick.bind(null, !not)} \n        disabled={readonly}\n      >\n        {notLabel || \"NOT\"}\n      </Button>\n    );\n  };\n\n  const onClick = value => setConjunction(value);\n  const onNotClick = checked => setNot(checked);\n\n  return (\n    <FormControl>\n      <ButtonGroup \n        disableElevation \n        variant=\"contained\" \n        size=\"small\" \n        disabled={readonly}\n      >\n        {showNot && renderNot()}\n        {showConj && renderOptions()}\n      </ButtonGroup>\n    </FormControl>\n  );\n  \n};\n","import React from \"react\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport LockIcon from \"@material-ui/icons/Lock\";\n\nexport default ({value, setValue, label, checkedLabel, hideLabel, id, config, type}) => {\n  const {renderSize} = config.settings;\n  const onChange = e => setValue(e.target.checked);\n  const onClick = () => setValue(!value);\n  const postfix = type;\n  const showLabel = value ? (checkedLabel || label) : label;\n  const icon = value ? <LockIcon /> : <LockOpenIcon />;\n\n  if (type == \"lock\") {\n    if (hideLabel) {\n      return <IconButton\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n      >{icon}</IconButton>;\n    } else {\n      return <Button\n        key={id+postfix}\n        onClick={onClick}\n        size={\"small\"}\n        startIcon={icon}\n      >{showLabel}</Button>;\n    }\n  }\n\n  return <FormControlLabel \n    control={<Switch\n      checked={!!value}\n      size={\"small\"}\n      onChange={onChange}\n    />} \n    label={showLabel} \n  />;\n};\n","export default ({onOk, okText, cancelText, title, confirmFn}) => {\n  confirmFn({ \n    description: title || \"Are you sure?\",\n    title: null,\n    confirmationText: okText || \"Ok\",\n    cancellationText: cancelText || \"Cancel\",\n  })\n    .then(onOk)\n    .catch(() => {});\n};\n","import React from \"react\";\nimport MaterialWidgets from \"../widgets\";\nimport { BasicConfig, Utils } from \"@react-awesome-query-builder/ui\";\n\n\nconst settings = {\n  ...BasicConfig.settings,\n\n  renderField: (props, {RCE, W: {MaterialFieldAutocomplete, MaterialFieldSelect}}) => props?.customProps?.showSearch \n    ? RCE(MaterialFieldAutocomplete, props)\n    : RCE(MaterialFieldSelect, props),\n  renderOperator: (props, {RCE, W: {MaterialFieldSelect}}) => RCE(MaterialFieldSelect, props),\n\n  renderFunc: (props, {RCE, W: {MaterialFieldSelect}}) => RCE(MaterialFieldSelect, props),\n  renderConjs: (props, {RCE, W: {MaterialConjs}}) => RCE(MaterialConjs, props),\n  renderSwitch: (props, {RCE, W: {MaterialSwitch}}) => RCE(MaterialSwitch, props),\n  renderButton: (props, {RCE, W: {MaterialButton}}) => RCE(MaterialButton, props),\n  renderButtonGroup: (props, {RCE, W: {MaterialButtonGroup}}) => RCE(MaterialButtonGroup, props),\n  renderValueSources: (props, {RCE, W: {MaterialValueSources}}) => RCE(MaterialValueSources, props),\n  renderFieldSources: (props, {RCE, W: {MaterialValueSources}}) => RCE(MaterialValueSources, props),\n  renderProvider: (props, {RCE, W: {MaterialProvider}}) => RCE(MaterialProvider, props),\n  renderConfirm: (props, {W: {MaterialConfirm}}) => MaterialConfirm(props),\n  useConfirm: ({W: {MaterialUseConfirm}}) => MaterialUseConfirm(),\n};\n\n\nconst widgets = {\n  ...BasicConfig.widgets,\n  text: {\n    ...BasicConfig.widgets.text,\n    factory: (props, {RCE, W: {MaterialTextWidget}}) => RCE(MaterialTextWidget, props),\n  },\n  textarea: {\n    ...BasicConfig.widgets.textarea,\n    factory: (props, {RCE, W: {MaterialTextAreaWidget}}) => RCE(MaterialTextAreaWidget, props),\n  },\n  number: {\n    ...BasicConfig.widgets.number,\n    factory: (props, {RCE, W: {MaterialNumberWidget}}) => RCE(MaterialNumberWidget, props),\n  },\n  multiselect: {\n    ...BasicConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {MaterialAutocompleteWidget, MaterialMultiSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch) \n        ? RCE(MaterialAutocompleteWidget, {...props, multiple: true}) \n        : RCE(MaterialMultiSelectWidget, props);\n    },\n  },\n  select: {\n    ...BasicConfig.widgets.select,\n    factory: (props, {RCE, W: {MaterialAutocompleteWidget, MaterialSelectWidget}}) => {\n      return (props.asyncFetch || props.showSearch) \n        ? RCE(MaterialAutocompleteWidget, props) \n        : RCE(MaterialSelectWidget, props);\n    },\n  },\n  slider: {\n    ...BasicConfig.widgets.slider,\n    factory: (props, {RCE, W: {MaterialSliderWidget}}) => RCE(MaterialSliderWidget, props),\n  },\n  boolean: {\n    ...BasicConfig.widgets.boolean,\n    factory: (props, {RCE, W: {MaterialBooleanWidget}}) => RCE(MaterialBooleanWidget, props),\n  },\n  date: {\n    ...BasicConfig.widgets.date,\n    factory: (props, {RCE, W: {MaterialDateWidget}}) => RCE(MaterialDateWidget, props),\n  },\n  time: {\n    ...BasicConfig.widgets.time,\n    factory: (props, {RCE, W: {MaterialTimeWidget}}) => RCE(MaterialTimeWidget, props),\n  },\n  datetime: {\n    ...BasicConfig.widgets.datetime,\n    factory: (props, {RCE, W: {MaterialDateTimeWidget}}) => RCE(MaterialDateTimeWidget, props),\n  },\n\n  rangeslider: {\n    ...BasicConfig.widgets.rangeslider,\n    factory: (props, {RCE, W: {MaterialRangeWidget}}) => RCE(MaterialRangeWidget, props),\n  },\n};\n\n\nconst types = {\n  ...BasicConfig.types,\n};\n\nconst ctx = {\n  ...BasicConfig.ctx,\n  W: {\n    ...BasicConfig.ctx.W,\n    ...MaterialWidgets,\n  },\n};\n\nlet config = {\n  ...BasicConfig,\n  ctx,\n  types,\n  widgets,\n  settings,\n};\nconfig = Utils.ConfigMixins.addMixins(config, [\n  \"rangeslider\",\n]);\n\nexport default config;","// Had to make uuid use a constant seed so it would generate same sequence across runs. This was needed\n// so server side rendering and client side rendering yield same results (e.g. the uuid is used when rendering\n// the concunctions with their name and id)\nvar query_builder_seed = 0;\nexport default () => {\n  // Generate a random GUID http://stackoverflow.com/a/2117523.\n  const timePart = (new Date().getTime().toString(16)+\"FF\").substr(0,11);\n  const s = \"ssssssss-xxxx-4xxx-yxxx-x\".replace(/[xys]/g, (c) => {\n    const r = c === \"s\" ? Math.floor(Math.random() * 16) : (query_builder_seed++) & 0xf;\n    const v = c === \"x\" ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n  return s + timePart;\n};\n","import Immutable, { Map } from \"immutable\";\nimport omit from \"lodash/omit\";\nimport {default as uuid} from \"./uuid\";\n\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport {uuid};\n\nexport const widgetDefKeysToOmit = [\n  \"formatValue\", \"mongoFormatValue\", \"sqlFormatValue\", \"jsonLogic\", \"elasticSearchFormatValue\", \"spelFormatValue\", \"spelImportFuncs\", \"spelImportValue\"\n];\n\nexport const opDefKeysToOmit = [\n  \"formatOp\", \"mongoFormatOp\", \"sqlFormatOp\", \"jsonLogic\", \"spelFormatOp\"\n];\n\n// RegExp.quote = function (str) {\n//     return str.replace(/([.?*+^$[\\]\\\\(){}|-])/g, \"\\\\$1\");\n// };\n\nexport const defaultValue = (value, _default) => {\n  return (typeof value === \"undefined\") ? _default : value;\n};\n\n// const immutableEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else {\n//     return v1.equals(v2);\n//   }\n// };\n\nexport const deepEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else if (Map.isMap(v1)) {\n    return v1.equals(v2);\n  } else {\n    return JSON.stringify(v1) == JSON.stringify(v2);\n  }\n};\n\n// //Do sets have same values?\n// const eqSet = function (as, bs) {\n//   if (as.size !== bs.size) return false;\n//   for (var a of as) if (!bs.has(a)) return false;\n//   return true;\n// };\n\n\n// //Do arrays have same values?\n// const eqArrSet = function (arr1, arr2) {\n//   return eqSet(new Set(arr1), new Set(arr2));\n// };\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (Map.isMap(a))\n    return a.equals(b);\n  else if (typeof a == \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport const isImmutable = (v) => {\n  return typeof v === \"object\" && v !== null && typeof v.toJS === \"function\";\n};\n\nexport function toImmutableList(v) {\n  return (isImmutable(v) ? v : new Immutable.List(v));\n}\n\nexport function applyToJS(v) {\n  return (isImmutable(v) ? v.toJS() : v);\n}\n\nexport const escapeRegExp = (string) => {\n  return string.replace(/[.*+?^${}()|[\\]\\\\/]/g, \"\\\\$&\"); // $& means the whole matched string\n};\n\nexport const cleanJSX = (jsx) => {\n  const jsxKeys = [\"$$typeof\", \"_owner\", \"_store\", \"ref\", \"key\"];\n\n  const getName = (val) => {\n    if (typeof val === \"string\") {\n      return val;\n    } else if (typeof val === \"function\") {\n      return val.name;\n    }\n    return val;\n  };\n\n  if (jsx instanceof Array) {\n    return jsx.map((el, _i) => cleanJSX(el));\n  } else if (typeof jsx === \"object\" && jsx !== null) {\n    if (isDirtyJSX(jsx)) {\n      const cleaned = omit(jsx, jsxKeys);\n      if (cleaned.type) {\n        cleaned.type = getName(cleaned.type);\n      }\n      if (cleaned?.props?.children) {\n        cleaned.props.children = cleanJSX(cleaned.props.children);\n      }\n      return cleaned;\n    }\n  }\n  return jsx;\n};\n\nexport const isDirtyJSX = (jsx) => {\n  return typeof jsx === \"object\"\n    && jsx !== null\n    && !Array.isArray(jsx)\n    && Object.keys(jsx).includes(\"type\")\n    && Object.keys(jsx).includes(\"props\") // even if {}\n    && Object.keys(jsx).includes(\"key\") // even if null\n    && Object.keys(jsx).includes(\"ref\") // even if null\n    && Object.keys(jsx).includes(\"$$typeof\"); // Symbol(react.element)\n};\n\nexport const isJSX = (jsx) => (\n  typeof jsx === \"object\"\n  && jsx !== null\n  && !Array.isArray(jsx)\n  && typeof jsx[\"type\"] === \"string\"\n  && Object.keys(jsx).includes(\"props\")\n);\n\nexport const isJsonLogic = (logic) => {\n  let isJL = typeof logic === \"object\" // An object\n    && logic !== null // but not null\n    && !Array.isArray(logic) // and not an array\n    && Object.keys(logic).length === 1; // with exactly one key\n  if (isJL) {\n    // additional checks ?\n  }\n  return isJL;\n};\n\nexport function sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\n\n// [1, 4, 9] + [1, 5, 9] => [1, 4, 5, 9]\n// Used for merging arrays of operators for different widgets of 1 type\nexport function mergeArraysSmart(arr1, arr2) {\n  if (!arr1) arr1 = [];\n  if (!arr2) arr2 = [];\n  return arr2\n    .map(op => [op, arr1.indexOf(op)])\n    .map(([op, ind], i, orig) => {\n      if (ind == -1) {\n        const next = orig.slice(i+1);\n        const prev = orig.slice(0, i);\n        const after = prev.reverse().find(([_cop, ci]) => ci != -1);\n        const before = next.find(([_cop, ci]) => ci != -1);\n        if (before)\n          return [op, \"before\", before[0]];\n        else if (after)\n          return [op, \"after\", after[0]];\n        else\n          return [op, \"append\", null];\n      } else {\n      // already exists\n        return null;\n      }\n    })\n    .filter(x => x !== null)\n    .reduce((acc, [newOp, rel, relOp]) => {\n      const ind = acc.indexOf(relOp);\n      if (acc.indexOf(newOp) == -1) {\n        if (ind > -1) {\n        // insert after or before\n          acc.splice( ind + (rel == \"after\" ? 1 : 0), 0, newOp );\n        } else {\n        // insert to end or start\n          acc.splice( (rel == \"append\" ? Infinity : 0), 0, newOp );\n        }\n      }\n      return acc;\n    }, arr1.slice());\n}\n\nexport const deepFreeze = obj => {\n  if (typeof obj === \"object\" && obj !== null) {\n    Object.keys(obj).forEach(prop => {\n      deepFreeze(obj[prop]);\n    });\n    Object.freeze(obj);\n  }\n};\n\nexport const isJsonCompatible = (tpl, obj, bag = {}, path = []) => {\n  if (isObject(tpl)) {\n    if (tpl.var) {\n      bag[tpl.var] = obj;\n      return true;\n    }\n    if (!isObject(obj))\n      return false;\n    for (const k in tpl) {\n      const tv = tpl[k];\n      const ov = obj[k];\n      if (!isJsonCompatible(tv, ov, bag, [...path, k]))\n        return false;\n    }\n    return true;\n  } else if (Array.isArray(tpl)) {\n    if (!Array.isArray(obj))\n      return false;\n    for (let i = 0 ; i < tpl.length ; i++) {\n      const tv = tpl[i];\n      const ov = obj[i];\n      if (!isJsonCompatible(tv, ov, bag, [...path, i]))\n        return false;\n    }\n    return true;\n  } else {\n    return tpl === obj;\n  }\n};\n\nconst isDev = () => (typeof process !== \"undefined\" && process.env && process.env.NODE_ENV == \"development\");\n\nexport const getLogger = (devMode = false) => {\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\nexport const getFirstDefined = (arr = []) => {\n  let ret;\n  for (let i = 0 ; i < arr.length ; i++) {\n    const v = arr[i];\n    if (v !== undefined) {\n      ret = v;\n      break;\n    }\n  }\n  return ret;\n};\n\nexport const logger = getLogger();\n\n","\n\nexport const settings = {\n  formatField: (field, parts, label2, fieldDefinition, config, isForDisplay) => {\n    if (isForDisplay)\n      return label2;\n    else\n      return field;\n  },\n\n\n  fieldSources: [\"field\"],\n  keepInputOnChangeFieldSrc: true,\n  fieldItemKeysForSearch: [\"label\", \"path\", \"altLabel\", \"grouplabel\"],\n  listKeysForSearch: [\"title\", \"value\"],\n  valueSourcesInfo: {\n    value: {},\n  },\n  fieldSeparator: \".\",\n  fieldSeparatorDisplay: \".\",\n  canReorder: true,\n  canRegroup: true,\n  canDeleteLocked: false,\n  canLeaveEmptyGroup: true,\n  shouldCreateEmptyGroup: false,\n  canShortMongoQuery: true,\n  removeEmptyGroupsOnLoad: true,\n  removeIncompleteRulesOnLoad: true,\n  removeInvalidMultiSelectValuesOnLoad: true,\n  setOpOnChangeField: [\"keep\", \"default\"], // 'default' (default if present), 'keep' (keep prev from last field), 'first', 'none'\n  groupOperators: [\"some\", \"all\", \"none\"],\n\n  defaultGroupConjunction: \"AND\",\n\n  // localization\n  locale: {\n    moment: \"en\",\n  },\n  valueLabel: \"Value\",\n  valuePlaceholder: \"Value\",\n  fieldLabel: \"Field\",\n  operatorLabel: \"Operator\",\n  funcLabel: \"Function\",\n  fieldPlaceholder: \"Select field\",\n  funcPlaceholder: \"Select function\",\n  operatorPlaceholder: \"Select operator\",\n  lockLabel: \"Lock\",\n  lockedLabel: \"Locked\",\n  deleteLabel: null,\n  addGroupLabel: \"Add group\",\n  addCaseLabel: \"Add condition\",\n  addDefaultCaseLabel: \"Add default condition\",\n  defaultCaseLabel: \"Default:\",\n  addRuleLabel: \"Add rule\",\n  addSubRuleLabel: \"Add sub rule\",\n  delGroupLabel: \"\",\n  notLabel: \"Not\",\n  fieldSourcesPopupTitle: \"Select source\",\n  valueSourcesPopupTitle: \"Select value source\",\n  removeRuleConfirmOptions: null,\n  removeGroupConfirmOptions: null,\n\n};\n","\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const toListValue = (v, title) => {\n  if (v == null || v == \"\") {\n    return undefined;\n  } else if (isObject(v)) {\n    return v;\n  } else {\n    return {\n      value: v,\n      title: (title !== undefined ? title : \"\"+v)\n    };\n  }\n};\n\nexport const makeCustomListValue = (v) => {\n  const lv = toListValue(v);\n  if (isObject(lv)) {\n    return {\n      ...toListValue(v),\n      isCustom: true,\n    };\n  } else { // only if undefined\n    return lv;\n  }\n};\n\n// convert {<value>: <title>, ..} or [value, ..] to normal [{value, title}, ..]\nexport const listValuesToArray = (listValuesObj) => {\n  if (Array.isArray(listValuesObj))\n    return listValuesObj.map(v => toListValue(v));\n  if (!isObject(listValuesObj))\n    return listValuesObj;\n  \n  let listValuesArr = [];\n  for (let v in listValuesObj) {\n    const title = listValuesObj[v];\n    listValuesArr.push(toListValue(v, title));\n  }\n  return listValuesArr;\n};\n\n// listValues can be {<value>: <title>, ..} or [{value, title}, ..] or [value, ..]\n// todo: same as getListValue() (but args are switched)\nexport const getItemInListValues = (listValues, value) => {\n  if (Array.isArray(listValues)) {\n    const values = listValues.map(v => toListValue(v));\n    return values.find(v => (\"\"+v.value === \"\"+value));\n  } else {\n    return listValues[value] !== undefined ? toListValue(value, listValues[value]) : undefined;\n  }\n};\n\nexport const getTitleInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.title : value;\n};\n\nexport const getValueInListValues = (listValues, value) => {\n  if (listValues == undefined)\n    return value;\n  const it = getItemInListValues(listValues, value);\n  return it !== undefined ? it.value : value;\n};\n\nexport const mapListValues = (listValues, mapFn) => {\n  let ret = [];\n  if (Array.isArray(listValues)) {\n    for (let v of listValues) {\n      const lv = mapFn(toListValue(v));\n      if (lv != null)\n        ret.push(lv);\n    }\n  } else {\n    for (let value in listValues) {\n      const lv = mapFn(toListValue(value, listValues[value]));\n      if (lv != null)\n        ret.push(lv);\n    }\n  }\n  return ret;\n};\n\nexport const searchListValue = (search, listValues) => \n  mapListValues(listValues, (lv) => (\n    `${lv.value}`.indexOf(search) != -1 || lv.title.indexOf(search) != -1\n      ? lv : null\n  ))\n    .filter(v => v !== null)\n    .shift();\n\nexport const getListValue = (selectedValue, listValues) => \n  mapListValues(listValues, \n    (lv) => (\"\"+lv.value === \"\"+selectedValue ? lv : null)\n  )\n    .filter(v => v !== null)\n    .shift();\n","import Immutable  from \"immutable\";\nimport {toImmutableList, isImmutable, applyToJS as immutableToJs} from \"./stuff\";\nimport {jsToImmutable} from \"../import/tree\";\n\nexport {toImmutableList, jsToImmutable, immutableToJs, isImmutable};\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreePath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.skip(1);\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.List} path\n * @param {...string} suffix\n * @return {Immutable.List}\n */\nexport const expandTreeSubpath = (path, ...suffix) =>\n  path.interpose(\"children1\").withMutations((list) => {\n    list.push.apply(list, suffix);\n    return list;\n  });\n\n\n/**\n * @param {Immutable.Map} tree\n * @param {Immutable.List} path\n * @return {Immutable.Map}\n */\nexport const getItemByPath = (tree, path) => {\n  let children = new Immutable.OrderedMap({ [tree.get(\"id\")] : tree });\n  let res = tree;\n  path.forEach((id) => {\n    res = children.get(id);\n    children = res.get(\"children1\");\n  });\n  return res;\n};\n\n\n/**\n * Remove `path` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\n// export const removePathsInTree = (tree) => {\n//   let newTree = tree;\n\n//   function _processNode (item, path) {\n//     const itemPath = path.push(item.get(\"id\"));\n//     if (item.get(\"path\")) {\n//       newTree = newTree.removeIn(expandTreePath(itemPath, \"path\"));\n//     }\n\n//     const children = item.get(\"children1\");\n//     if (children) {\n//       children.map((child, _childId) => {\n//         _processNode(child, itemPath);\n//       });\n//     }\n//   }\n\n//   _processNode(tree, new Immutable.List());\n\n//   return newTree;\n// };\n\n\n/**\n * Remove `isLocked` in items that inherit parent's `isLocked`\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const removeIsLockedInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, isParentLocked = false) {\n    const itemPath = path.push(item.get(\"id\"));\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    if (isParentLocked && isLocked) {\n      newTree = newTree.deleteIn(expandTreePath(itemPath, \"properties\", \"isLocked\"));\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, itemPath, isLocked || isParentLocked);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List());\n\n  return newTree;\n};\n\n\n/**\n * Set correct `path` and `id` in every item\n * @param {Immutable.Map} tree\n * @return {Immutable.Map} tree\n */\nexport const fixPathsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return;\n    const currPath = item.get(\"path\");\n    const currId = item.get(\"id\");\n    const itemId = currId || nodeId;\n    const itemPath = path.push(itemId);\n    if (!currPath || !currPath.equals(itemPath)) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"path\"), itemPath);\n    }\n    if (!currId) {\n      newTree = newTree.setIn(expandTreePath(itemPath, \"id\"), itemId);\n    }\n\n    const children = item.get(\"children1\");\n    if (children) {\n      if (children.constructor.name == \"Map\") {\n        // protect: should be OrderedMap, not Map (issue #501)\n        newTree = newTree.setIn(\n          expandTreePath(itemPath, \"children1\"), \n          new Immutable.OrderedMap(children)\n        );\n      }\n      children.map((child, childId) => {\n        _processNode(child, itemPath, lev + 1, childId);\n      });\n    }\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\nexport const fixEmptyGroupsInTree = (tree) => {\n  let newTree = tree;\n\n  function _processNode (item, path, lev, nodeId) {\n    if (!item) return false;\n    const itemId = item.get(\"id\") || nodeId;\n    const itemPath = path.push(itemId);\n\n    const children = item.get(\"children1\");\n    if (children) {\n      const allChildrenGone = children.map((child, childId) => {\n        return _processNode(child, itemPath, lev + 1, childId);\n      }).reduce((curr, v) => (curr && v), true);\n      if ((children.size == 0 || allChildrenGone) && lev > 0) {\n        newTree = newTree.deleteIn(expandTreePath(itemPath));\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _processNode(tree, new Immutable.List(), 0);\n\n\n  return newTree;\n};\n\n/**\n * @param {Immutable.Map} tree\n * @return {Object} {flat, items}\n */\nexport const getFlatTree = (tree) => {\n  let flat = [];\n  let items = {};\n  let realHeight = 0;\n\n  function _flatizeTree (item, path, insideCollapsed, insideLocked, insideRuleGroup, lev, info, parentType, caseId) {\n    const type = item.get(\"type\");\n    const collapsed = item.get(\"collapsed\");\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const isLocked = item.getIn([\"properties\", \"isLocked\"]);\n    const childrenIds = children ? children.map((_child, childId) => childId) : null;\n    const isRuleGroup = type == \"rule_group\";\n    // tip: count rule_group as 1 rule\n    const isLeaf = !insideRuleGroup && (!children || isRuleGroup);\n\n    const itemsBefore = flat.length;\n    const top = realHeight;\n    flat.push(id);\n    if (!insideCollapsed)\n      realHeight += 1;\n    info.height = (info.height || 0) + 1;\n\n    items[id] = {\n      type: type,\n      parent: path.length ? path[path.length-1] : null,\n      parentType: parentType,\n      caseId: type == \"case_group\" ? id : caseId,\n      isDefaultCase: type == \"case_group\" && !children,\n      path: path.concat(id),\n      lev: lev,\n      leaf: !children,\n      index: itemsBefore,\n      id: id,\n      children: childrenIds,\n      leafsCount: 0,\n      _top: itemsBefore,\n      //_height: (itemsAfter - itemsBefore),\n      top: (insideCollapsed ? null : top),\n      //height: height,\n      //bottom: (insideCollapsed ? null : top) + height,\n      collapsed: collapsed,\n      node: item,\n      isLocked: isLocked || insideLocked,\n    };\n\n    if (children) {\n      let subinfo = {};\n      children.map((child, _childId) => {\n        _flatizeTree(\n          child, path.concat(id), \n          insideCollapsed || collapsed, insideLocked || isLocked, insideRuleGroup || isRuleGroup,\n          lev + 1, subinfo, type, type == \"case_group\" ? id : caseId\n        );\n      });\n      if (!collapsed) {\n        info.height = (info.height || 0) + (subinfo.height || 0);\n      }\n    }\n    \n    if (caseId && isLeaf) {\n      items[caseId].leafsCount++;\n    }\n\n    const itemsAfter = flat.length;\n    const _bottom = realHeight;\n    const height = info.height;\n        \n    Object.assign(items[id], {\n      _height: (itemsAfter - itemsBefore),\n      height: height,\n      bottom: (insideCollapsed ? null : top) + height,\n    });\n  }\n\n  _flatizeTree(tree, [], false, false, false, 0, {}, null, null);\n\n  for (let i = 0 ; i < flat.length ; i++) {\n    const prevId = i > 0 ? flat[i-1] : null;\n    const nextId = i < (flat.length-1) ? flat[i+1] : null;\n    let item = items[flat[i]];\n    item.prev = prevId;\n    item.next = nextId;\n  }\n\n  return {flat, items};\n};\n\n\n/**\n * Returns count of reorderable(!) nodes\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalReordableNodesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    const isRuleGroup = type == \"rule_group\";\n    cnt++;\n    //tip: rules in rule-group can be reordered only inside\n    if (children && !isRuleGroup) {\n      children.map((child, _childId) => {\n        _processNode(child, path.concat(id), lev + 1);\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt - 1; // -1 for root\n};\n\n/**\n * Returns count of rules (leafs, i.e. don't count groups)\n * @param {Immutable.Map} tree\n * @return {Integer}\n */\nexport const getTotalRulesCountInTree = (tree) => {\n  if (!tree)\n    return -1;\n  let cnt = 0;\n\n  function _processNode (item, path, lev) {\n    let id, children, type;\n    if (typeof item.get === \"function\") {\n      id = item.get(\"id\");\n      children = item.get(\"children1\");\n      type = item.get(\"type\");\n    } else {\n      id = item.id;\n      children = item.children1;\n      type = item.type;\n    }\n    \n    if (type == \"rule\" || type == \"rule_group\") {\n      // tip: count rule_group as 1 rule\n      cnt++;\n    } else if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, path.concat(id), lev + 1);\n      });\n    }\n  }\n\n  _processNode(tree, [], 0);\n    \n  return cnt;\n};\n\nexport const getTreeBadFields = (tree) => {\n  let badFields = [];\n\n  function _processNode (item, path, lev) {\n    const id = item.get(\"id\");\n    const children = item.get(\"children1\");\n    const valueError = item.getIn([\"properties\", \"valueError\"]);\n    const field = item.getIn([\"properties\", \"field\"]);\n    if (valueError && valueError.size > 0 && valueError.filter(v => v != null).size > 0) {\n      badFields.push(field);\n    }\n    if (children) {\n      children.map((child, _childId) => {\n        _processNode(child, path.concat(id), lev + 1);\n      });\n    }\n  }\n\n  if (tree)\n    _processNode(tree, [], 0);\n    \n  return Array.from(new Set(badFields));\n};\n\n\n// Remove fields that can be calced: \"id\", \"path\"\n// Remove empty fields: \"operatorOptions\"\nexport const getLightTree = (tree, children1AsArray = false) => {\n  let newTree = tree;\n\n  function _processNode (item, itemId) {\n    if (item.path)\n      delete item.path;\n    if (!children1AsArray && itemId)\n      delete item.id;\n    let properties = item.properties;\n    if (properties) {\n      if (properties.operatorOptions == null)\n        delete properties.operatorOptions;\n    }\n\n    const children = item.children1;\n    if (children) {\n      for (let id in children) {\n        _processNode(children[id], id);\n      }\n      if (children1AsArray) {\n        item.children1 = Object.values(children);\n      }\n    }\n  }\n\n  _processNode(tree, null);\n\n  return newTree;\n};\n\nexport const getSwitchValues = (tree) => {\n  let vals = [];\n  const children = tree.get(\"children1\");\n  if (children) {\n    children.map((child) => {\n      const value = child.getIn([\"properties\", \"value\"]);\n      let caseValue;\n      if (value && value.size == 1) {\n        caseValue = value.get(0);\n        if (Array.isArray(caseValue) && caseValue.length == 0) {\n          caseValue = null;\n        }\n      } else {\n        caseValue = null;\n      }\n      vals = [...vals, caseValue];\n    });\n  }\n\n  return vals;\n};\n\nexport const isEmptyTree = (tree) => (!tree.get(\"children1\") || tree.get(\"children1\").size == 0);\n\nexport const hasChildren = (tree, path) => tree.getIn(expandTreePath(path, \"children1\")).size > 0;\n","import Immutable, { fromJS, Map } from \"immutable\";\nimport {validateTree} from \"../utils/validation\";\nimport {extendConfig} from \"../utils/configUtils\";\nimport {getTreeBadFields, getLightTree} from \"../utils/treeUtils\";\nimport {isJsonLogic} from \"../utils/stuff\";\n\nexport const getTree = (immutableTree, light = true, children1AsArray = true) => {\n  if (!immutableTree) return undefined;\n  let tree = immutableTree;\n  tree = tree.toJS();\n  if (light)\n    tree = getLightTree(tree, children1AsArray);\n  return tree;\n};\n\nexport const loadTree = (serTree) => {\n  if (isImmutableTree(serTree)) {\n    return serTree;\n  } else if (isTree(serTree)) {\n    return jsToImmutable(serTree);\n  } else if (typeof serTree == \"string\" && serTree.startsWith('[\"~#iM\"')) {\n    //tip: old versions of RAQB were saving tree with `transit.toJSON()`\n    // https://github.com/ukrbublik/react-awesome-query-builder/issues/69\n    throw \"You are trying to load query in obsolete serialization format (Immutable string) which is not supported in versions starting from 2.1.17\";\n  } else if (typeof serTree == \"string\") {\n    return jsToImmutable(JSON.parse(serTree));\n  } else throw \"Can't load tree!\";\n};\n\nexport const checkTree = (tree, config) => {\n  if (!tree) return undefined;\n  const extendedConfig = extendConfig(config, undefined, true);\n  return validateTree(tree, null, extendedConfig, extendedConfig);\n};\n\nexport const isValidTree = (tree) => {\n  return getTreeBadFields(tree).length == 0;\n};\n\nexport const isImmutableTree = (tree) => {\n  return Map.isMap(tree);\n};\n\nexport const isTree = (tree) => {\n  return typeof tree == \"object\" && (tree.type == \"group\" || tree.type == \"switch_group\");\n};\n\nexport {isJsonLogic};\n\nexport function jsToImmutable(tree) {\n  const imm = fromJS(tree, function (key, value) {\n    let outValue;\n    if (key == \"properties\") {\n      outValue = value.toOrderedMap();\n\n      // `value` should be undefined instead of null\n      // JSON doesn't support undefined and replaces undefined -> null\n      // So fix: null -> undefined\n      for (let i = 0 ; i < 2 ; i++) {\n        if (outValue.get(\"value\")?.get(i) === null) {\n          outValue = outValue.setIn([\"value\", i], undefined);\n        }\n      }\n    } else if (key == \"value\" && Immutable.Iterable.isIndexed(value)) {\n      outValue = value.map(v => {\n        const vJs = v?.toJS?.();\n        if (vJs?.func) {\n          return v.toOrderedMap();\n        } else if(v?.toJS) {\n          // for values of multiselect use Array instead of List\n          return vJs;\n        } else {\n          return v;\n        }\n      }).toList();\n    } else if (key == \"asyncListValues\") {\n      // keep in JS format\n      outValue = value.toJS();\n    } else if (key == \"children1\" && Immutable.Iterable.isIndexed(value)) {\n      outValue = new Immutable.OrderedMap(value.map(child => [child.get(\"id\"), child]));\n    } else {\n      outValue = Immutable.Iterable.isIndexed(value) ? value.toList() : value.toOrderedMap();\n    }\n    return outValue;\n  });\n  return imm;\n}\n\n","import uuid from \"../utils/uuid\";\nimport {defaultValue, isJsonLogic, shallowEqual, logger} from \"../utils/stuff\";\nimport {getFieldConfig, extendConfig, normalizeField, getFuncConfig, iterateFuncs, getFieldParts} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {loadTree} from \"./tree\";\nimport {defaultConjunction, defaultGroupConjunction} from \"../utils/defaultUtils\";\n\nimport moment from \"moment\";\n\n// http://jsonlogic.com/\n\n// helpers\nconst arrayUniq = (arr) => Array.from(new Set(arr));\nconst arrayToObject = (arr) => arr.reduce((acc, [f, fc]) => ({ ...acc, [f]: fc }), {});\n\nconst createMeta = () => {\n  return {\n    errors: []\n  };\n};\n\nexport const loadFromJsonLogic = (logicTree, config) => {\n  return _loadFromJsonLogic(logicTree, config, false);\n};\n\nexport const _loadFromJsonLogic = (logicTree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = createMeta();\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  let jsTree = logicTree ? convertFromLogic(logicTree, conv, extendedConfig, \"rule\", meta) : undefined;\n  if (jsTree && jsTree.type != \"group\") {\n    jsTree = wrapInDefaultConj(jsTree, extendedConfig);\n  }\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from JsonLogic:\", meta.errors);\n    return immTree;\n  }\n};\n\n\nconst buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (typeof opConfig.jsonLogic == \"string\") {\n      // example: \"</2\", \"#in/1\"\n      const opk = (opConfig._jsonLogicIsRevArgs ? \"#\" : \"\") + opConfig.jsonLogic + \"/\" + defaultValue(opConfig.cardinality, 1);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else if(typeof opConfig.jsonLogic2 == \"string\") {\n      // example: all-in/1\"\n      const opk = opConfig.jsonLogic2 + \"/\" + defaultValue(opConfig.cardinality, 1);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.jsonLogicConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (const [funcPath, funcConfig] of iterateFuncs(config)) {\n    let fk;\n    if (funcConfig.jsonLogicIsMethod) {\n      fk = \"#\" + funcConfig.jsonLogic;\n    } else if (typeof funcConfig.jsonLogic == \"string\") {\n      fk = funcConfig.jsonLogic;\n    }\n    if (fk) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcPath);\n    }\n  }\n\n  const {groupVarKey, altVarKey} = config.settings.jsonLogic;\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    varKeys: [\"var\", groupVarKey, altVarKey],\n  };\n};\n\nconst convertFromLogic = (logic, conv, config, expectedType, meta, not = false, fieldConfig, widget, parentField = null, _isLockedLogic = false) => {\n  let op, vals;\n  if (isJsonLogic(logic)) {\n    op = Object.keys(logic)[0];\n    vals = logic[op];\n    if (!Array.isArray(vals))\n      vals = [ vals ];\n  }\n  \n  let ret;\n  const beforeErrorsCnt = meta.errors.length;\n\n  const {lockedOp} = config.settings.jsonLogic;\n  const isEmptyOp = op == \"!\" && (vals.length == 1 && vals[0] && isJsonLogic(vals[0]) && conv.varKeys.includes(Object.keys(vals[0])[0]));\n  const isRev = op == \"!\" && !isEmptyOp;\n  const isLocked = lockedOp && op == lockedOp;\n  if (isLocked) {\n    ret = convertFromLogic(vals[0], conv, config, expectedType, meta, not, fieldConfig, widget, parentField, true);\n  } else if (isRev) {\n    // reverse with not\n    ret = convertFromLogic(vals[0], conv, config, expectedType, meta, !not, fieldConfig, widget, parentField);\n  } else if(expectedType == \"val\") {\n    // not is not used here\n    ret = convertFieldRhs(op, vals, conv, config, not, meta, parentField) \n      || convertFuncRhs(op, vals, conv, config, not, fieldConfig, meta, parentField) \n      || convertValRhs(logic, fieldConfig, widget, config, meta);\n  } else if(expectedType == \"rule\") {\n    ret = convertConj(op, vals, conv, config, not, meta, parentField, false) \n    || convertOp(op, vals, conv, config, not, meta, parentField);\n  }\n\n  const afterErrorsCnt = meta.errors.length;\n  if (op != \"!\" && ret === undefined && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Can't parse logic ${JSON.stringify(logic)}`);\n  }\n\n  if (isLocked) {\n    ret.properties.isLocked = true;\n  }\n\n  return ret;\n};\n\n\nconst convertValRhs = (val, fieldConfig, widget, config, meta) => {\n  if (val === undefined)\n    val = fieldConfig?.defaultValue;\n  if (val === undefined) return undefined;\n  const widgetConfig = config.widgets[widget || fieldConfig?.mainWidget];\n  const fieldType = fieldConfig?.type;\n\n  if (!widgetConfig) {\n    meta.errors.push(`No widget for type ${fieldType}`);\n    return undefined;\n  }\n\n  if (isJsonLogic(val)) {\n    meta.errors.push(`Unexpected logic in value: ${JSON.stringify(val)}`);\n    return undefined;\n  }\n\n  // number of seconds -> time string\n  if (fieldType == \"time\" && typeof val == \"number\") {\n    const [h, m, s] = [Math.floor(val / 60 / 60) % 24, Math.floor(val / 60) % 60, val % 60];\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      const dateVal = new Date(val);\n      dateVal.setMilliseconds(0);\n      dateVal.setHours(h);\n      dateVal.setMinutes(m);\n      dateVal.setSeconds(s);\n      val = moment(dateVal).format(valueFormat);\n    } else {\n      val = `${h}:${m}:${s}`;\n    }\n  }\n\n  // \"2020-01-08T22:00:00.000Z\" -> Date object\n  if ([\"date\", \"datetime\"].includes(fieldType) && val && !(val instanceof Date)) {\n    try {\n      const dateVal = new Date(val);\n      if (dateVal instanceof Date && dateVal.toISOString() === val) {\n        val = dateVal;\n      }\n    } catch(e) {\n      meta.errors.push(`Can't convert value ${val} as Date`);\n      val = undefined;\n    }\n  }\n\n  // Date object -> formatted string\n  if (val instanceof Date && fieldConfig) {\n    const valueFormat = widgetConfig.valueFormat;\n    if (valueFormat) {\n      val = moment(val).format(valueFormat);\n    }\n  }\n\n  let asyncListValues;\n  if (val && fieldConfig?.fieldSettings?.asyncFetch) {\n    const vals = Array.isArray(val) ? val : [val];\n    asyncListValues = vals;\n  }\n\n  return {\n    valueSrc: \"value\",\n    value: val,\n    valueType: widgetConfig.type,\n    asyncListValues\n  };\n};\n\nconst convertFieldRhs = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (conv.varKeys.includes(op) && typeof vals[0] == \"string\") {\n    const field = normalizeField(config, vals[0], parentField);\n    const fieldConfig = getFieldConfig(config, field);\n    if (!fieldConfig) {\n      meta.errors.push(`No config for field ${field}`);\n      return undefined;\n    }\n\n    return {\n      valueSrc: \"field\",\n      value: field,\n      valueType: fieldConfig.type,\n    };\n  }\n\n  return undefined;\n};\n\nconst convertLhs = (isGroup0, jlField, args, conv, config, not = null, fieldConfig = null, meta, parentField = null) => {\n  let k = Object.keys(jlField)[0];\n  let v = Object.values(jlField)[0];\n\n  const _parse = (k, v) => {\n    return convertFieldLhs(k, v, conv, config, not, meta, parentField)\n    || convertFuncLhs(k, v, conv, config, not, fieldConfig, meta, parentField);\n  };\n\n  const beforeErrorsCnt = meta.errors.length;\n  let field, fieldSrc, having, isGroup;\n  const parsed = _parse(k, v);\n  if (parsed) {\n    field = parsed.field;\n    fieldSrc = parsed.fieldSrc;\n  }\n  if (isGroup0) {\n    isGroup = true;\n    having = args[0];\n    args = [];\n  }\n  // reduce/filter for group ext\n  if (k == \"reduce\" && Array.isArray(v) && v.length == 3) {\n    let [filter, acc, init] = v;\n    if (isJsonLogic(filter) && init == 0\n      && isJsonLogic(acc)\n      && Array.isArray(acc[\"+\"]) && acc[\"+\"][0] == 1\n      && isJsonLogic(acc[\"+\"][1]) && acc[\"+\"][1][\"var\"] == \"accumulator\"\n    ) {\n      k = Object.keys(filter)[0];\n      v = Object.values(filter)[0];\n      if (k == \"filter\") {\n        let [group, filter] = v;\n        if (isJsonLogic(group)) {\n          k = Object.keys(group)[0];\n          v = Object.values(group)[0];\n          const parsedGroup = _parse(k, v);\n          if (parsedGroup) {\n            field = parsedGroup.field;\n            fieldSrc = parsedGroup.fieldSrc;\n            having = filter;\n            isGroup = true;\n          }\n        }\n      } else {\n        const parsedGroup = _parse(k, v);\n        if (parsedGroup) {\n          field = parsedGroup.field;\n          fieldSrc = parsedGroup.fieldSrc;\n          isGroup = true;\n        }\n      }\n    }\n  }\n  const afterErrorsCnt = meta.errors.length;\n\n  if (!field && afterErrorsCnt == beforeErrorsCnt) {\n    meta.errors.push(`Unknown LHS ${JSON.stringify(jlField)}`);\n  }\n  if (!field) return;\n\n  return {\n    field, fieldSrc, having, isGroup, args\n  };\n};\n\nconst convertFieldLhs = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (!Array.isArray(vals))\n    vals = [ vals ];\n  const parsed = convertFieldRhs(op, vals, conv, config, not, meta, parentField);\n  if (parsed) {\n    return {\n      fieldSrc: \"field\",\n      field: parsed.value,\n    };\n  }\n  return undefined;\n};\n\nconst convertFuncLhs = (op, vals, conv, config, not, fieldConfig = null, meta, parentField = null) => {\n  const parsed = convertFuncRhs(op, vals, conv, config, not, fieldConfig, meta, parentField);\n  if (parsed) {\n    return {\n      fieldSrc: \"func\",\n      field: parsed.value,\n    };\n  }\n  return undefined;\n};\n\nconst convertFuncRhs = (op, vals, conv, config, not, fieldConfig = null, meta, parentField = null) => {\n  if (!op) return undefined;\n  let func, argsArr, funcKey;\n  const jsonLogicIsMethod = (op == \"method\");\n  if (jsonLogicIsMethod) {\n    let obj, opts;\n    [obj, func, ...opts] = vals;\n    argsArr = [obj, ...opts];\n  } else {\n    func = op;\n    argsArr = vals;\n  }\n\n  const fk = (jsonLogicIsMethod ? \"#\" : \"\") + func;\n  const returnType = fieldConfig?.type || fieldConfig?.returnType;\n  const funcKeys = (conv.funcs[fk] || []).filter(k => \n    (fieldConfig ? getFuncConfig(config, k).returnType == returnType : true)\n  );\n  if (funcKeys.length) {\n    funcKey = funcKeys[0];\n  } else {\n    const v = {[op]: vals};\n\n    for (const [f, fc] of iterateFuncs(config)) {\n      if (fc.jsonLogicImport && (returnType ? fc.returnType == returnType : true)) {\n        let parsed;\n        try {\n          parsed = fc.jsonLogicImport(v);\n        } catch(_e) {\n          // given expression `v` can't be parsed into function\n        }\n        if (parsed) {\n          funcKey = f;\n          argsArr = parsed;\n        }\n      }\n    }\n  }\n  if (!funcKey)\n    return undefined;\n\n  if (funcKey) {\n    const funcConfig = getFuncConfig(config, funcKey);\n    const argKeys = Object.keys(funcConfig.args || {});\n    let argsObj = argsArr.reduce((acc, val, ind) => {\n      const argKey = argKeys[ind];\n      const argConfig = funcConfig.args[argKey];\n      let argVal;\n      if (argConfig) {\n        argVal = convertFromLogic(val, conv, config, \"val\", meta, false, argConfig, null, parentField);\n      }\n      return argVal !== undefined ? {...acc, [argKey]: argVal} : acc;\n    }, {});\n\n    for (let argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      let argVal = argsObj[argKey];\n      if (argVal === undefined) {\n        argVal = argConfig?.defaultValue;\n        if (argVal !== undefined) {\n          argVal = {\n            value: argVal,\n            valueSrc: argVal?.func ? \"func\" : \"value\",\n            valueType: argConfig.type,\n          };\n        }\n        if (argVal === undefined) {\n          if (argConfig?.isOptional) {\n            //ignore\n          } else {\n            meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n            return undefined;\n          }\n        } else {\n          argsObj[argKey] = argVal;\n        }\n      }\n    }\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: argsObj\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  return undefined;\n};\n\n\nconst convertConj = (op, vals, conv, config, not, meta, parentField = null, isRuleGroup = false) => {\n  const conjKey = conv.conjunctions[op];\n  const {fieldSeparator} = config.settings;\n  // const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  // const isParentGroup = parentFieldConfig?.type == \"!group\";\n  if (conjKey) {\n    let type = \"group\";\n    const children = vals\n      .map(v => convertFromLogic(v, conv, config, \"rule\", meta, false, null, null, parentField))\n      .filter(r => r !== undefined)\n      .reduce((acc, r) => ({...acc, [r.id] : r}), {});\n    const complexFields = Object.values(children)\n      .map(v => v?.properties?.fieldSrc == \"field\" && v?.properties?.field)\n      .filter(f => f?.includes?.(fieldSeparator));\n    const complexFieldsGroupAncestors = Object.fromEntries(\n      arrayUniq(complexFields).map(f => {\n        const parts = f.split(fieldSeparator);\n        const ancs = Object.fromEntries(\n          parts.slice(0, -1)\n            .map((f, i, parts) => [...parts.slice(0, i), f])\n            .map(fp => [fp.join(fieldSeparator), getFieldConfig(config, fp)])\n            .filter(([_f, fc]) => fc.type == \"!group\")\n        );\n        return [f, Object.keys(ancs)];\n      })\n    );\n    // const childrenInRuleGroup = Object.values(children)\n    //   .map(v => v?.properties?.fieldSrc == \"field\" && v?.properties?.field)\n    //   .map(f => complexFieldsGroupAncestors[f])\n    //   .filter(ancs => ancs && ancs.length);\n    // const usedRuleGroups = arrayUniq(Object.values(complexFieldsGroupAncestors).flat());\n    // const usedTopRuleGroups = topLevelFieldsFilter(usedRuleGroups);\n    \n    let properties = {\n      conjunction: conjKey,\n      not: not\n    };\n    const id = uuid();\n\n    let children1 = {};\n    let groupToId = {};\n    Object.entries(children).map(([k, v]) => {\n      if (v.type == \"group\" || v.type == \"rule_group\") {\n        // put as-is\n        children1[k] = v;\n      } else {\n        const field = v?.properties?.field;\n        const groupAncestors = complexFieldsGroupAncestors[field] || [];\n        const groupField = groupAncestors[groupAncestors.length - 1];\n        if (!groupField) {\n          // not in rule_group (can be simple field or in struct) - put as-is\n          children1[k] = v;\n        } else {\n          // wrap field in rule_group (with creating hierarchy if need)\n          let ch = children1;\n          let parentFieldParts = getFieldParts(parentField, config);\n          const groupPath = getFieldParts(groupField, config);\n          const isInParent = shallowEqual(parentFieldParts, groupPath.slice(0, parentFieldParts.length));\n          if (!isInParent)\n            parentFieldParts = []; // should not be\n          const traverseGroupFields = groupField\n            .split(fieldSeparator)\n            .slice(parentFieldParts.length)\n            .map((f, i, parts) => [...parentFieldParts, ...parts.slice(0, i), f].join(fieldSeparator))\n            .map((f) => ({f, fc: getFieldConfig(config, f) || {}}))\n            .filter(({fc}) => (fc.type != \"!struct\"));\n          traverseGroupFields.map(({f: gf, fc: gfc}, i) => {\n            let groupId = groupToId[gf];\n            if (!groupId) {\n              groupId = uuid();\n              groupToId[gf] = groupId;\n              ch[groupId] = {\n                type: \"rule_group\",\n                id: groupId,\n                children1: {},\n                properties: {\n                  conjunction: conjKey,\n                  not: false,\n                  field: gf,\n                  fieldSrc: \"field\",\n                  mode: gfc.mode,\n                }\n              };\n            }\n            ch = ch[groupId].children1;\n          });\n          ch[k] = v;\n        }\n      }\n    });\n\n    // tip: for isRuleGroup=true correct type and properties will be set out of this func\n\n    return {\n      type: type,\n      id: id,\n      children1: children1,\n      properties: properties\n    };\n  }\n\n  return undefined;\n};\n\n\nconst topLevelFieldsFilter = (fields) => {\n  let arr = [...fields].sort((a, b) => (a.length - b.length));\n  for (let i = 0 ; i < arr.length ; i++) {\n    for (let j = i + 1 ; j < arr.length ; j++) {\n      if (arr[j].indexOf(arr[i]) == 0) {\n        // arr[j] is inside arr[i] (eg. \"a.b\" inside \"a\")\n        arr.splice(j, 1);\n        j--;\n      }\n    }\n  }\n  return arr;\n};\n\nconst wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj) => {\n  if (!rule) return undefined;\n  return {\n    type: \"rule_group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n      not: false,\n      field: parentField,\n    }\n  };\n};\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not\n    }\n  };\n};\n\nconst parseRule = (op, arity, vals, parentField, conv, config, meta) => {\n  const submeta = createMeta();\n  let res = _parseRule(op, arity, vals, parentField, conv, config, false, submeta);\n  if (!res) {\n    // try reverse\n    res = _parseRule(op, arity, vals, parentField, conv, config, true, createMeta());\n  }\n  if (!res) {\n    meta.errors.push(submeta.errors.join(\"; \") || `Unknown op ${op}/${arity}`);\n    return undefined;\n  }\n  \n  return res;\n};\n\nconst _parseRule = (op, arity, vals, parentField, conv, config, isRevArgs, meta) => {\n  // config.settings.groupOperators are used for group count (cardinality = 0 is exception)\n  // but don't confuse with \"all-in\" or \"some-in\" for multiselect\n  const isAllOrSomeInForMultiselect = (op == \"all\" || op == \"some\") && isJsonLogic(vals[1]) && Object.keys(vals[1])[0] == \"in\";\n  const isGroup0 = !isAllOrSomeInForMultiselect && config.settings.groupOperators.includes(op);\n  const eqOps = [\"==\", \"!=\"];\n  let cardinality = isGroup0 ? 0 : arity - 1;\n  if (isGroup0)\n    cardinality = 0;\n  else if (eqOps.includes(op) && cardinality == 1 && vals[1] === null) {\n    arity = 1;\n    cardinality = 0;\n    vals = [vals[0]];\n  }\n\n  const opk = op + \"/\" + cardinality;\n  let opKeys = conv.operators[(isRevArgs ? \"#\" : \"\") + opk];\n  if (!opKeys)\n    return;\n  \n  let jlField, jlArgs = [];\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  if (rangeOps.includes(op) && arity == 3) {\n    jlField = vals[1];\n    jlArgs = [ vals[0], vals[2] ];\n  } else if (isRevArgs) {\n    jlField = vals[1];\n    jlArgs = [ vals[0] ];\n  } else {\n    [jlField, ...jlArgs] = vals;\n  }\n\n  if (!isJsonLogic(jlField)) {\n    meta.errors.push(`Incorrect operands for ${op}: ${JSON.stringify(vals)}`);\n    return;\n  }\n\n  const lhs = convertLhs(isGroup0, jlField, jlArgs, conv, config, null, null, meta, parentField);\n  if (!lhs) return;\n  const {\n    field, fieldSrc, having, isGroup, args\n  } = lhs;\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig) {\n    meta.errors.push(`No config for LHS ${field}`);\n    return;\n  }\n\n  let opKey = opKeys[0];\n  if (opKeys.length > 1 && fieldConfig && fieldConfig.operators) {\n    // eg. for \"equal\" and \"select_equals\"\n    opKeys = opKeys\n      .filter(k => fieldConfig.operators.includes(k));\n    if (opKeys.length == 0) {\n      meta.errors.push(`No corresponding ops for LHS ${field}`);\n      return;\n    }\n    opKey = opKeys[0];\n  }\n  \n  return {\n    field, fieldSrc, fieldConfig, opKey, args, having\n  };\n};\n\nconst convertOp = (op, vals, conv, config, not, meta, parentField = null) => {\n  if (!op) return undefined;\n\n  const arity = vals.length;\n  if ((op == \"all\" || op == \"some\") && isJsonLogic(vals[1])) {\n    // special case for \"all-in\" and \"some-in\"\n    const op2 = Object.keys(vals[1])[0];\n    if (op2 == \"in\") {\n      vals = [\n        vals[0],\n        vals[1][op2][1]\n      ];\n      op = op + \"-\" + op2; // \"all-in\" and \"some-in\"\n    }\n  }\n\n  const parseRes = parseRule(op, arity, vals, parentField, conv, config, meta);\n  if (!parseRes) return undefined;\n  let {field, fieldSrc, fieldConfig, opKey, args, having} = parseRes;\n  let opConfig = config.operators[opKey];\n\n  // Group component in array mode can show NOT checkbox, so do nothing in this case\n  // Otherwise try to revert\n  const showNot = fieldConfig.showNot !== undefined ? fieldConfig.showNot : config.settings.showNot; \n  let canRev = true;\n  // if (fieldConfig.type == \"!group\" && fieldConfig.mode == \"array\" && showNot)\n  //   canRev = false;\n\n  let conj;\n  let havingVals;\n  let havingNot = false;\n  if (fieldConfig.type == \"!group\" && having) {\n    conj = Object.keys(having)[0];\n    havingVals = having[conj];\n    if (!Array.isArray(havingVals))\n      havingVals = [ havingVals ];\n\n    // Preprocess \"!\": Try to reverse op in single rule in having\n    // Eg. use `not_equal` instead of `not` `equal`\n    const isEmptyOp = conj == \"!\" && (havingVals.length == 1 && havingVals[0] && isJsonLogic(havingVals[0]) && conv.varKeys.includes(Object.keys(havingVals[0])[0]));\n    if (conj == \"!\" && !isEmptyOp) {\n      havingNot = true;\n      having = having[\"!\"];\n      conj = Object.keys(having)[0];\n      havingVals = having[conj];\n      if (!Array.isArray(havingVals))\n        havingVals = [ havingVals ];\n    }\n  }\n\n  // Use reversed op\n  if (not && canRev && opConfig.reversedOp) {\n    not = false;\n    opKey = opConfig.reversedOp;\n    opConfig = config.operators[opKey];\n  }\n\n  const widget = getWidgetForFieldOp(config, field, opKey, null);\n\n  const convertedArgs = args\n    .map(v => convertFromLogic(v, conv, config, \"val\", meta, false, fieldConfig, widget, parentField));\n  if (convertedArgs.filter(v => v === undefined).length) {\n    //meta.errors.push(`Undefined arg for field ${field} and op ${opKey}`);\n    return undefined;\n  }\n\n  let res;\n\n  let fieldType = fieldConfig.type;\n  if (fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n\n  if (fieldConfig.type == \"!group\" && having) {\n    if (conv.conjunctions[conj] !== undefined) {\n      // group\n      res = convertConj(conj, havingVals, conv, config, havingNot, meta, field, true);\n      havingNot = false;\n    } else {\n      // need to be wrapped in `rule_group`\n      const rule = convertOp(conj, havingVals, conv, config, havingNot, meta, field);\n      havingNot = false;\n      res = wrapInDefaultConjRuleGroup(rule, field, fieldConfig, config, conv.conjunctions[\"and\"]);\n    }\n    if (!res)\n      return undefined;\n    \n    res.type = \"rule_group\";\n    Object.assign(res.properties, {\n      field: field,\n      mode: fieldConfig.mode,\n      operator: opKey,\n    });\n    if (fieldConfig.mode == \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n    if (not) {\n      res = wrapInDefaultConj(res, config, not);\n    }\n  } else if (fieldConfig.type == \"!group\" && !having) {\n    res = {\n      type: \"rule_group\",\n      id: uuid(),\n      children1: {},\n      properties: {\n        conjunction: defaultGroupConjunction(config, fieldConfig),\n        not: not,\n        mode: fieldConfig.mode,\n        field: field,\n        operator: opKey,\n      }\n    };\n    if (fieldConfig.mode == \"array\") {\n      Object.assign(res.properties, {\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n      });\n    }\n  } else {\n    const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n    const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n    res = {\n      type: \"rule\",\n      id: uuid(),\n      properties: {\n        field: field,\n        fieldSrc: fieldSrc,\n        operator: opKey,\n        value: convertedArgs.map(v => v.value),\n        valueSrc: convertedArgs.map(v => v.valueSrc),\n        valueType: convertedArgs.map(v => v.valueType),\n        ...(asyncListValues ? {asyncListValues} : {}),\n      }\n    };\n    if (not) {\n      //meta.errors.push(`No rev op for ${opKey}`);\n      res = wrapInDefaultConj(res, config, not);\n    }\n  }\n\n  return res;\n};\n\n","import SqlStringOrig from \"sqlstring\";\n\nexport const SqlString = SqlStringOrig;\n\nSqlString.trim = (val) => {\n  if (val.charAt(0) == \"'\")\n    return val.substring(1, val.length-1);\n  else\n    return val;\n};\n\nSqlString.escapeLike = (val, any_start = true, any_end = true) => {\n  // normal escape\n  let res = SqlString.escape(val);\n  // unwrap ''\n  res = SqlString.trim(res);\n  // escape % and _\n  res = res.replace(/[%_]/g, \"\\\\$&\");\n  // wrap with % for LIKE\n  res = (any_start ? \"%\" : \"\") + res + (any_end ? \"%\" : \"\");\n  // wrap ''\n  res = \"'\" + res + \"'\";\n  return res;\n};\n\nexport const sqlEmptyValue = (fieldDef) => {\n  let v = \"''\";\n  const type = fieldDef?.type;\n  if (type == \"date\") {\n    //todo: support other SQL dialects?  0001-01-01 for oracle, 1970-01-01 for timestamp\n    v = \"'0000-00-00'\";\n  } else if (type == \"datetime\") {\n    v = \"'0000-00-00 00:00'\";\n  } else if (type == \"time\") {\n    v = \"'00:00'\";\n  } else if (type == \"number\") {\n    v = \"0\";\n  }\n  return v;\n};\n\nexport const mongoEmptyValue = (fieldDef) => {\n  let v = \"\";\n  const type = fieldDef?.type;\n  if (type == \"number\") {\n    v = 0;\n  }\n  return v;\n};\n\n\nconst spelEscapeString = (val) => {\n  // Strings are delimited by single quotes. To put a single quote itself in a string, use two single quote characters. \n  return \"'\" + val.replace(/'/g, \"''\") + \"'\";\n};\n\nconst spelInlineList = (vals, toArray = false) => {\n  // find java type of values\n  let javaType;\n  let jt;\n  const numberJavaTypes = [\"int\", \"float\"];\n  vals.map(v => {\n    if (v !== undefined && v !== null) {\n      if (typeof v === \"string\") {\n        jt = \"String\";\n      } else if (typeof v === \"number\") {\n        jt = Number.isInteger(v) ? \"int\" : \"float\";\n      } else throw new Error(`spelEscape: Can't use value ${v} in array`);\n\n      if (!javaType) {\n        javaType = jt;\n      } else if (javaType != jt) {\n        if (numberJavaTypes.includes(javaType) && numberJavaTypes.includes(jt)) {\n          // found int and float in collecton - use float\n          javaType = \"float\";\n        } else throw new Error(`spelEscape: Can't use different types in array: found ${javaType} and ${jt}`);\n      }\n    }\n  });\n  if (!javaType) {\n    javaType = \"String\"; //default if empty array\n  }\n\n  // for floats we should add 'f' to all items\n  let escapedVals;\n  if (javaType == \"float\") {\n    escapedVals = vals.map(v => spelEscape(v, true));\n  } else {\n    escapedVals = vals.map(v => spelEscape(v));\n  }\n\n  // build inline list or array\n  let res;\n  if (toArray) {\n    res = `new ${javaType}[]{${escapedVals.join(\", \")}}`;\n  } else {\n    res = `{${escapedVals.join(\", \")}}`;\n  }\n  \n  return res;\n};\n\nexport const spelFixList = (val) => {\n  // `{1,2}.contains(1)` NOT works\n  // `{1,2}.?[true].contains(1)` works\n  return `${val}.?[true]`;\n};\n\nexport const spelEscape = (val, numberToFloat = false, arrayToArray = false) => {\n  // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-ref-literal\n  if (val === undefined || val === null) {\n    return \"null\";\n  }\n  switch (typeof val) {\n  case \"boolean\":\n    return (val) ? \"true\" : \"false\";\n  case \"number\":\n    if (!Number.isFinite(val) || isNaN(val))\n      return undefined;\n    return val + (!Number.isInteger(val) || numberToFloat ? \"f\" : \"\");\n  case \"object\":\n    if (Array.isArray(val)) {\n      return spelInlineList(val, arrayToArray);\n    } else {\n      // see `spelFormatValue` for Date, LocalTime\n      throw new Error(\"spelEscape: Object is not supported\");\n    }\n  default: return spelEscapeString(val);\n  }\n};\n\nexport const spelFormatConcat = (parts) => {\n  if (parts && Array.isArray(parts) && parts.length) {\n    return parts\n      .map(part => {\n        if (part.type == \"const\") {\n          return spelEscape(part.value);\n        } else if (part.type == \"property\") {\n          return \"\"+part.value;\n        } else if (part.type == \"variable\") {\n          return \"#\"+part.value;\n        } return undefined;\n      })\n      .filter(r => r != undefined)\n      .join(\" + \");\n  } else {\n    return \"null\";\n  }\n};\n\n// `val` is {value, valueType, valueSrc}\n// If `valueType` == \"case_value\", `value` is array of such items (to be considered as concatenation)\nexport const spelImportConcat = (val) => {\n  if (val == undefined)\n    return [undefined, []];\n  let errors = [];\n  const parts = val.valueType == \"case_value\" ? val.value : [val];\n  const res = parts.map(child => {\n    if (child.valueSrc == \"value\") {\n      if (child.value === null) {\n        return undefined;\n      } else {\n        return {\n          type: \"const\", \n          value: child.value\n        };\n      }\n    } else if (child.valueSrc == \"field\") {\n      return {\n        type: (child.isVariable ? \"variable\" : \"property\"), \n        value: child.value\n      };\n    } else {\n      errors.push(`Unsupported valueSrc ${child.valueSrc} in concatenation`);\n    }\n  }).filter(v => v != undefined);\n  return [res, errors];\n};\n\nexport const stringifyForDisplay = (v) => (v == null ? \"NULL\" : v.toString());\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, extendConfig, getFieldParts\n} from \"../utils/configUtils\";\nimport {\n  getWidgetForFieldOp, formatFieldName, getFieldPartsConfigs, completeValue\n} from \"../utils/ruleUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {defaultValue, logger, widgetDefKeysToOmit, opDefKeysToOmit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport {spelEscape} from \"../utils/export\";\n\n// https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions\n\nexport const compareToSign = \"${0}.compareTo(${1})\";\nconst TypesWithCompareTo = {\n  datetime: true,\n  time: true,\n  date: true,\n};\n\nexport const spelFormat = (tree, config) => {\n  return _spelFormat(tree, config, false);\n};\n\nexport const _spelFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta, null);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SpEL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, parentField);\n  } else if (type == \"switch_group\") {\n    return formatSwitch(item, config, meta, parentField);\n  } else if (type == \"case_group\") {\n    return formatCase(item, config, meta, parentField);\n  }\n\n  return undefined;\n};\n\nconst formatCase = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  if (type != \"case_group\") {\n    meta.errors.push(`Unexpected child of type ${type} inside switch`);\n    return undefined;\n  }\n  const properties = item.get(\"properties\") || new Map();\n  \n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, null, parentField, \"!case_value\"\n  );\n\n  const cond = formatGroup(item, config, meta, parentField);\n  return [cond, formattedValue];\n};\n\nconst formatSwitch = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  if (!children) return undefined;\n  const cases = children\n    .map((currentChild) => formatCase(currentChild, config, meta, null))\n    .filter((currentChild) => typeof currentChild !== \"undefined\")\n    .toArray();\n  \n  if (!cases.length) return undefined;\n\n  if (cases.length == 1 && !cases[0][0]) {\n    // only 1 case without condition\n    return cases[0][1];\n  }\n\n  let filteredCases = [];\n  for (let i = 0 ; i < cases.length ; i++) {\n    if (i != (cases.length - 1) && !cases[i][0]) {\n      meta.errors.push(`No condition for case ${i}`);\n    } else {\n      filteredCases.push(cases[i]);\n      if (i == (cases.length - 1) && cases[i][0]) {\n        // no default - add null as default\n        filteredCases.push([undefined, null]);\n      }\n    }\n  }\n\n  let left = \"\", right = \"\";\n  for (let i = 0 ; i < filteredCases.length ; i++) {\n    let [cond, value] = filteredCases[i];\n    if (value == undefined)\n      value = \"null\";\n    if (cond == undefined)\n      cond = \"true\";\n    if (i != (filteredCases.length - 1)) {\n      left += `(${cond} ? ${value} : `;\n      right += \")\";\n    } else {\n      left += `${value}`;\n    }\n  }\n  return left + right;\n};\n\nconst formatGroup = (item, config, meta, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const not = properties.get(\"not\");\n\n  const isRuleGroup = type === \"rule_group\";\n  const isRuleGroupArray = isRuleGroup && mode != \"struct\";\n  const groupField = isRuleGroupArray ? field : parentField;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const isSpelArray = groupFieldDef.isSpelArray;\n  \n  // check op for reverse\n  let groupOperator = properties.get(\"operator\");\n  if (!groupOperator && (!mode || mode == \"some\")) {\n    groupOperator = \"some\";\n  }\n  const realGroupOperator = checkOp(config, groupOperator, field);\n  const isGroupOpRev = realGroupOperator != groupOperator;\n  const realGroupOperatorDefinition = groupOperator && getOperatorConfig(config, realGroupOperator, field) || null;\n  const isGroup0 = isRuleGroup && (!realGroupOperator || realGroupOperatorDefinition.cardinality == 0);\n  \n  // build value for aggregation op\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realGroupOperator, parentField, null\n  );\n  \n  // build filter in aggregation\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n\n  if (isRuleGroupArray && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size)\n      return undefined;\n  }\n\n  const omitBrackets = isRuleGroup;\n  const filter = list.size ? conjunctionDefinition.spelFormatConj(list, conjunction, not, omitBrackets) : null;\n\n  // build result\n  let ret;\n  if (isRuleGroupArray) {\n    const formattedField = formatField(meta, config, field, parentField);\n    const getSize = isSpelArray ? \".length\" : \".size()\";\n    const fullSize = `${formattedField}${getSize}`;\n    // https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions-collection-selection\n    const filteredSize = filter ? `${formattedField}.?[${filter}]${getSize}` : fullSize;\n    const groupValue = isGroup0 ? fullSize : formattedValue;\n    // format expression\n    ret = formatExpression(\n      meta, config, properties, filteredSize, groupValue, realGroupOperator, valueSrc, valueType, isGroupOpRev\n    );\n  } else {\n    ret = filter;\n  }\n  \n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, valueType) => {\n  const spelOp = operatorDefinition.spelOp;\n  if (!spelOp) return undefined;\n  const isSign = spelOp.includes(\"${0}\");\n  const isCompareTo = TypesWithCompareTo[valueType];\n  let sop = spelOp;\n  let fn;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  if (isCompareTo) {\n    // date1.compareTo(date2) >= 0\n    //   instead of\n    // date1 >= date2\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const compareRes = compareToSign.replace(/\\${(\\w+)}/g, (_, k) => (k == 0 ? field : (cardinality > 1 ? values[k-1] : values)));\n      return `${compareRes} ${sop} 0`;\n    };\n  } else if (isSign) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return spelOp.replace(/\\${(\\w+)}/g, (_, k) => (k == 0 ? field : (cardinality > 1 ? values[k-1] : values)));\n    };\n  } else if (cardinality == 0) {\n    // should not be\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sop} ${values}`;\n    };\n  }\n  return fn;\n};\n\nconst formatExpression = (meta, config, properties, formattedField, formattedValue, operator, valueSrc, valueType, isRev = false) => {\n  const field = properties.get(\"field\");\n  const opDef = getOperatorConfig(config, operator, field) || {};\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorOptions = properties.get(\"operatorOptions\");\n\n  //find fn to format expr\n  const fn = opDef.spelFormatOp || buildFnToFormatOp(operator, opDef, valueType);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n\n  //rev\n  if (isRev) {\n    ret = config.settings.spelFormatReverse(ret);\n  }\n\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrc}`);\n  }\n\n  return ret;\n};\n\nconst checkOp = (config, operator, field) => {\n  if (!operator) return undefined;\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n\n  let isRev = false;\n  const canFormatOp = opDef.spelOp || opDef.spelFormatOp;\n  const canFormatRevOp = revOpDef.spelOp || revOpDef.spelFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n  return operator;\n};\n\nconst formatRule = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  if (field == null || operator == null)\n    return undefined;\n\n  // check op for reverse\n  const realOp = checkOp(config, operator, field);\n  if (!realOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  const isRev = realOp != operator;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, realOp, parentField, null\n  );\n  if (formattedValue === undefined)\n    return undefined;\n      \n  //format field\n  const formattedField = formatLhs(meta, config, field, fieldSrc, parentField);\n  if (formattedField === undefined)\n    return undefined;\n  \n  // format expression\n  let res = formatExpression(\n    meta, config, properties, formattedField, formattedValue, realOp, valueSrc, valueType, isRev\n  );\n  return res;\n};\n\nconst formatLhs = (meta, config, field, fieldSrc, parentField = null) => {\n  if (fieldSrc === \"func\")\n    return formatFunc(meta, config, field, parentField);\n  else\n    return formatField(meta, config, field, parentField);\n};\n\nconst formatItemValue = (config, properties, meta, operator, parentField, expectedValueType = null) => {\n  let field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  if (expectedValueType == \"!case_value\" || iValueType && iValueType.get(0) == \"case_value\") {\n    field = \"!case_value\";\n  }\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  \n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n  \n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n      const fv = formatValue(\n        meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDefinition, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (!( fvalue.size < cardinality || hasUndefinedValues )) {\n      formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n    }\n  }\n  \n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else {\n    if (typeof fieldWidgetDef.spelFormatValue === \"function\") {\n      const fn = fieldWidgetDef.spelFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = spelEscape(currentValue);\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field, parentField = null) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsConfigs = getFieldPartsConfigs(field, config, parentField);\n  const formatFieldFn = config.settings.formatSpelField;\n  const fieldName = formatFieldName(field, config, meta, parentField);\n  const fieldPartsMeta = fieldPartsConfigs.map(([key, cnf, parentCnf]) => {\n    let parent;\n    if (parentCnf) {\n      if (parentCnf.type == \"!struct\" || parentCnf.type == \"!group\" && parentCnf.mode == \"struct\")\n        parent = cnf.isSpelMap ? \"map\" : \"class\";\n      else if (parentCnf.type == \"!group\")\n        parent = cnf.isSpelItemMap ? \"[map]\" : \"[class]\";\n      else\n        parent = \"class\";\n    }\n    const isSpelVariable = cnf?.isSpelVariable;\n    return {\n      key,\n      parent,\n      isSpelVariable\n    };\n  });\n  const formattedField = formatFieldFn.call(config.ctx, fieldName, parentField, fieldParts, fieldPartsMeta, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const doEscape = argConfig.spelEscapeForFormat ?? true;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = omit(getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc), [\"factory\"]);\n\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, null, null, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = omit( getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc), [\"factory\"] );\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, null, null, parentField, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = doEscape ? finalFormattedVal : (argValue ?? defaultValue);\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // uncomplete\n  }\n  \n  let ret;\n  if (typeof funcConfig.spelFormatFunc === \"function\") {\n    const fn = funcConfig.spelFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.spelFunc) {\n    // fill arg values\n    ret = funcConfig.spelFunc\n      .replace(/\\${(\\w+)}/g, (found, argKey) => {\n        return formattedArgs[argKey] ?? found;\n      });\n    // remove optional args (from end only)\n    const optionalArgs = Object.keys(funcConfig.args || {})\n      .reverse()\n      .filter(argKey => !!funcConfig.args[argKey].isOptional);\n    for (const argKey of optionalArgs) {\n      if (formattedArgs[argKey] != undefined)\n        break;\n      ret = ret.replace(new RegExp(\"(, )?\" + \"\\\\${\" + argKey + \"}\", \"g\"), \"\");\n    }\n    // missing required arg vals\n    ret = ret.replace(/\\${(\\w+)}/g, \"null\");\n  } else {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n  }\n  return ret;\n};\n","import { SpelExpressionEvaluator } from \"spel2js\";\nimport uuid from \"../utils/uuid\";\nimport {getFieldConfig, getFuncConfig, extendConfig, normalizeField, iterateFuncs} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {loadTree} from \"./tree\";\nimport {defaultConjunction, defaultGroupConjunction} from \"../utils/defaultUtils\";\nimport {logger, isJsonCompatible} from \"../utils/stuff\";\nimport moment from \"moment\";\nimport {compareToSign} from \"../export/spel\";\n\n// https://docs.spring.io/spring-framework/docs/3.2.x/spring-framework-reference/html/expressions.html#expressions\n\n// spel type => raqb type\nconst SpelPrimitiveTypes = {\n  number: \"number\",\n  string: \"text\",\n  boolean: \"boolean\",\n  null: \"null\" // should not be\n};\n// spel class => raqb type\nconst SpelPrimitiveClasses = {\n  String: \"text\",\n};\nconst ListValueType = \"multiselect\";\nconst isFuncableProperty = (p) => [\"length\"].includes(p);\n\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const loadFromSpel = (logicTree, config) => {\n  return _loadFromSpel(logicTree, config, true);\n};\n\nexport const _loadFromSpel = (spelStr, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n  const extendedConfig = extendConfig(config, undefined, false);\n  const conv = buildConv(extendedConfig);\n  \n  let compiledExpression;\n  let convertedObj;\n  let jsTree = undefined;\n  try {\n    const compileRes = SpelExpressionEvaluator.compile(spelStr);\n    compiledExpression = compileRes._compiledExpression;\n  } catch (e) {\n    meta.errors.push(e);\n  }\n  \n  if (compiledExpression) {\n    //logger.debug(\"compiledExpression:\", compiledExpression);\n    convertedObj = postprocessCompiled(compiledExpression, meta);\n    logger.debug(\"convertedObj:\", convertedObj, meta);\n\n    jsTree = convertToTree(convertedObj, conv, extendedConfig, meta);\n    if (jsTree && jsTree.type != \"group\" && jsTree.type != \"switch_group\") {\n      jsTree = wrapInDefaultConj(jsTree, extendedConfig, convertedObj[\"not\"]);\n    }\n    logger.debug(\"jsTree:\", jsTree);\n  }\n\n  const immTree = jsTree ? loadTree(jsTree) : undefined;\n\n  if (returnErrors) {\n    return [immTree, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while importing from SpEL:\", meta.errors);\n    return immTree;\n  }\n};\n\nconst postprocessCompiled = (expr, meta, parentExpr = null) => {\n  const type = expr.getType();\n  let children = expr.getChildren().map(child => postprocessCompiled(child, meta, expr));\n\n  // flatize OR/AND\n  if (type == \"op-or\" || type == \"op-and\") {\n    children = children.reduce((acc, child) => {\n      const canFlatize = child.type == type && !child.not;\n      const flat = canFlatize ? child.children : [child];\n      return [...acc, ...flat];\n    }, []);\n  }\n\n  // unwrap NOT\n  if (type == \"op-not\") {\n    if (children.length != 1) {\n      meta.errors.push(`Operator NOT should have 1 child, but got ${children.length}}`);\n    }\n    return {\n      ...children[0],\n      not: !(children[0].not || false)\n    };\n  }\n\n  if (type == \"compound\") {\n    // remove `.?[true]`\n    children = children.filter(child => {\n      const isListFix = child.type == \"selection\" && child.children.length == 1 && child.children[0].type == \"boolean\" && child.children[0].val == true;\n      return !isListFix;\n    });\n    // aggregation\n    // eg. `results.?[product == 'abc'].length`\n    const selection = children.find(child => \n      child.type == \"selection\"\n    );\n    if (selection && selection.children.length != 1) {\n      meta.errors.push(`Selection should have 1 child, but got ${selection.children.length}`);\n    }\n    const filter = selection ? selection.children[0] : null;\n    let lastChild = children[children.length - 1];\n    const isSize = lastChild.type == \"method\" && lastChild.val.methodName == \"size\" \n      || lastChild.type == \"!func\" && lastChild.methodName == \"size\";\n    const isLength = lastChild.type == \"property\" && lastChild.val == \"length\";\n    const sourceParts = children.filter(child => \n      child !== selection && child !== lastChild\n    );\n    const source = {\n      type: \"compound\",\n      children: sourceParts\n    };\n    const isAggr = (isSize || isLength) && convertPath(sourceParts) != null;\n    if (isAggr) {\n      return {\n        type: \"!aggr\",\n        filter,\n        source\n      };\n    }\n    // remove `#this`, `#root`\n    children = children.filter(child => {\n      const isThis = child.type == \"variable\" && child.val == \"this\";\n      const isRoot = child.type == \"variable\" && child.val == \"root\";\n      return !(isThis || isRoot);\n    });\n    // indexer\n    children = children.map(child => {\n      if (child.type == \"indexer\" && child.children.length == 1) {\n        return {\n          type: \"indexer\", \n          val: child.children[0].val,\n          itype: child.children[0].type\n        };\n      } else {\n        return child;\n      }\n    });\n    // method\n    // if (lastChild.type == \"method\") {\n    //   // seems like obsolete code!\n    //   debugger\n    //   const obj = children.filter(child => \n    //     child !== lastChild\n    //   );\n    //   return {\n    //     type: \"!func\",\n    //     obj,\n    //     methodName: lastChild.val.methodName,\n    //     args: lastChild.val.args\n    //   };\n    // }\n    // !func\n    if (lastChild.type == \"!func\") {\n      const ret = {};\n      let curr = ret;\n      do {\n        Object.assign(curr, lastChild);\n        children = children.filter(child => child !== lastChild);\n        lastChild = children[children.length - 1];\n        if (lastChild?.type == \"!func\") {\n          curr.obj = {};\n          curr = curr.obj;\n        } else {\n          if (children.length > 1) {\n            curr.obj = {\n              type: \"compound\",\n              children\n            };\n          } else {\n            curr.obj = lastChild;\n          }\n        }\n      } while(lastChild?.type == \"!func\");\n      return ret;\n    }\n  }\n\n  // getRaw || getValue\n  let val;\n  try {\n    if (expr.getRaw) { // use my fork\n      val = expr.getRaw();\n    } else if (expr.getValue.length == 0) { // getValue not requires context arg -> can use\n      val = expr.getValue();\n    }\n  } catch(e) {\n    logger.error(\"[spel2js] Error in getValue()\", e);\n  }\n\n  // ternary\n  if (type == \"ternary\") {\n    val = flatizeTernary(children);\n  }\n\n  // convert method/function args\n  if (typeof val === \"object\" && val !== null) {\n    if (val.methodName || val.functionName) {\n      val.args = val.args.map(child => postprocessCompiled(child, meta, expr));\n    }\n  }\n  // convert list\n  if (type == \"list\") {\n    val = val.map(item => postprocessCompiled(item, meta, expr));\n\n    // fix whole expression wrapped in `{}`\n    if (!parentExpr && val.length == 1) {\n      return val[0];\n    }\n  }\n  // convert constructor\n  if (type == \"constructorref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in constructorref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!new\",\n      cls,\n      args\n    };\n  }\n  // convert type\n  if (type == \"typeref\") {\n    const qid = children.find(child => child.type == \"qualifiedidentifier\");\n    const cls = qid?.val;\n    if (!cls) {\n      meta.errors.push(`Can't find qualifiedidentifier in typeref children: ${JSON.stringify(children)}`);\n      return undefined;\n    }\n    const _args = children.filter(child => child.type != \"qualifiedidentifier\");\n    return {\n      type: \"!type\",\n      cls\n    };\n  }\n  // convert function/method\n  if (type == \"function\" || type == \"method\") {\n    // `foo()` is method, `#foo()` is function\n    // let's use common property `methodName` and just add `isVar` for function\n    const {functionName, methodName, args} = val;\n    return {\n      type: \"!func\",\n      methodName: functionName || methodName,\n      isVar: type == \"function\",\n      args\n    };\n  }\n\n  return {\n    type,\n    children,\n    val,\n  };\n};\n\nconst flatizeTernary = (children) => {\n  let flat = [];\n  function _processTernaryChildren(tern) {\n    let [cond, if_val, else_val] = tern;\n    flat.push([cond, if_val]);\n    if (else_val?.type == \"ternary\") {\n      _processTernaryChildren(else_val.children);\n    } else {\n      flat.push([undefined, else_val]);\n    }\n  }\n  _processTernaryChildren(children);\n  return flat;\n};\n\nconst buildConv = (config) => {\n  let operators = {};\n  for (let opKey in config.operators) {\n    const opConfig = config.operators[opKey];\n    if (opConfig.spelOps) {\n      // examples: \"==\", \"eq\", \".contains\", \"matches\" (can be used for starts_with, ends_with)\n      opConfig.spelOps.forEach(spelOp => {\n        const opk = spelOp; // + \"/\" + defaultValue(opConfig.cardinality, 1);\n        if (!operators[opk])\n          operators[opk] = [];\n        operators[opk].push(opKey);\n      });\n    } else if (opConfig.spelOp) {\n      const opk = opConfig.spelOp; // + \"/\" + defaultValue(opConfig.cardinality, 1);\n      if (!operators[opk])\n        operators[opk] = [];\n      operators[opk].push(opKey);\n    } else {\n      logger.log(`[spel] No spelOp for operator ${opKey}`);\n    }\n  }\n\n  let conjunctions = {};\n  for (let conjKey in config.conjunctions) {\n    const conjunctionDefinition = config.conjunctions[conjKey];\n    const ck = conjunctionDefinition.spelConj || conjKey.toLowerCase();\n    conjunctions[ck] = conjKey;\n  }\n\n  let funcs = {};\n  for (const [funcPath, funcConfig] of iterateFuncs(config)) {\n    let fks = [];\n    const {spelFunc} = funcConfig;\n    if (typeof spelFunc === \"string\") {\n      const optionalArgs = Object.keys(funcConfig.args || {})\n        .reverse()\n        .filter(argKey => !!funcConfig.args[argKey].isOptional || funcConfig.args[argKey].defaultValue != undefined);\n      const funcSignMain = spelFunc\n        .replace(/\\${(\\w+)}/g, (_, _k) => \"?\");\n      const funcSignsOptional = optionalArgs\n        .reduce((acc, argKey) => (\n          [\n            ...acc,\n            [\n              argKey,\n              ...(acc[acc.length-1] || []),\n            ]\n          ]\n        ), [])\n        .map(optionalArgKeys => (\n          spelFunc\n            .replace(/(?:, )?\\${(\\w+)}/g, (found, a) => (\n              optionalArgKeys.includes(a) ? \"\" : found\n            ))\n            .replace(/\\${(\\w+)}/g, (_, _k) => \"?\")\n        ));\n      fks = [\n        funcSignMain,\n        ...funcSignsOptional,\n      ];\n    }\n    for (const fk of fks) {\n      if (!funcs[fk])\n        funcs[fk] = [];\n      funcs[fk].push(funcPath);\n    }\n  }\n\n  let valueFuncs = {};\n  for (let w in config.widgets) {\n    const widgetDef = config.widgets[w];\n    const {spelImportFuncs, type} = widgetDef;\n    if (spelImportFuncs) {\n      for (const fk of spelImportFuncs) {\n        if (typeof fk === \"string\") {\n          const fs = fk.replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n          const argsOrder = [...fk.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n          if (!valueFuncs[fs])\n            valueFuncs[fs] = [];\n          valueFuncs[fs].push({\n            w,\n            argsOrder\n          });\n        }\n      }\n    }\n  }\n\n  let opFuncs = {};\n  for (let op in config.operators) {\n    const opDef = config.operators[op];\n    const {spelOp} = opDef;\n    if (spelOp?.includes(\"${0}\")) {\n      const fs = spelOp.replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n      const argsOrder = [...spelOp.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n      if (!opFuncs[fs])\n        opFuncs[fs] = [];\n      opFuncs[fs].push({\n        op,\n        argsOrder\n      });\n    }\n  }\n  // Special .compareTo()\n  const compareToSS = compareToSign.replace(/\\${(\\w+)}/g, (_, k) => \"?\");\n  opFuncs[compareToSS] = [{\n    op: \"!compare\",\n    argsOrder: [\"0\", \"1\"]\n  }];\n\n  return {\n    operators,\n    conjunctions,\n    funcs,\n    valueFuncs,\n    opFuncs,\n  };\n};\n\nconst convertToTree = (spel, conv, config, meta, parentSpel = null) => {\n  if (!spel) return undefined;\n\n  let res, canParseAsArg = true;\n  if (spel.type.indexOf(\"op-\") === 0 || spel.type === \"matches\") {\n    res = convertOp(spel, conv, config, meta, parentSpel);\n  } else if (spel.type == \"!aggr\") {\n    const groupFieldValue = convertToTree(spel.source, conv, config, meta, {\n      ...spel, \n      _groupField: parentSpel?._groupField\n    });\n    let groupFilter = convertToTree(spel.filter, conv, config, meta, {\n      ...spel, \n      _groupField: groupFieldValue?.value\n    });\n    if (groupFilter?.type == \"rule\") {\n      groupFilter = wrapInDefaultConj(groupFilter, config, spel.filter.not);\n    }\n    res = {\n      groupFilter,\n      groupFieldValue\n    };\n    if (!parentSpel) {\n      // !aggr can't be in root, it should be compared with something\n      res = undefined;\n      meta.errors.push(\"Unexpected !aggr in root\");\n      canParseAsArg = false;\n    }\n  } else if (spel.type == \"ternary\") {\n    const children1 = {};\n    spel.val.forEach(v => {\n      const [cond, val] = v;\n      const caseI = buildCase(cond, val, conv, config, meta, spel);\n      if (caseI) {\n        children1[caseI.id] = caseI;\n      }\n    });\n    res = {\n      type: \"switch_group\",\n      id: uuid(),\n      children1,\n      properties: {}\n    };\n  }\n\n  if (!res && canParseAsArg) {\n    res = convertArg(spel, conv, config, meta, parentSpel);\n  }\n\n  if (res && !res.type && !parentSpel) {\n    // res is not a rule, it's value at root\n    // try to parse whole `\"1\"` as ternary\n    const sw = buildSimpleSwitch(spel, conv, config, meta);\n    if (sw) {\n      res = sw;\n    } else {\n      res = undefined;\n      meta.errors.push(`Can't convert rule of type ${spel.type}, it looks like var/literal`);\n    }\n  }\n  \n  return res;\n};\n\nconst convertOp = (spel, conv, config, meta, parentSpel = null) => {\n  let res;\n\n  let op = spel.type.startsWith(\"op-\") ? spel.type.slice(\"op-\".length) : spel.type;\n\n  // unary\n  const isUnary = (op == \"minus\" || op == \"plus\") && spel.children.length == 1;\n  if (isUnary) {\n    spel.isUnary = true;\n    return convertOp(spel.children[0], conv, config, meta, spel);\n  }\n\n  // between\n  let isBetweenNormal = (op == \"and\" && spel.children.length == 2 && spel.children[0].type == \"op-ge\" && spel.children[1].type == \"op-le\");\n  let isBetweenRev = (op == \"or\" && spel.children.length == 2 && spel.children[0].type == \"op-lt\" && spel.children[1].type == \"op-gt\");\n  let isBetween = isBetweenNormal || isBetweenRev;\n  if (isBetween) {\n    const [left, from] = spel.children[0].children;\n    const [right, to] = spel.children[1].children;\n    const isSameSource = compareArgs(left, right,  spel, conv, config, meta, parentSpel);\n    if (isSameSource) {\n      const _fromValue = from.val;\n      const _toValue = to.val;\n      const oneSpel = {\n        type: \"op-between\",\n        children: [\n          left,\n          from,\n          to\n        ]\n      };\n      return convertOp(oneSpel, conv, config, meta, parentSpel);\n    }\n  }\n\n  // find op\n  let opKeys = conv.operators[op];\n  if (op == \"eq\" && spel.children[1].type == \"null\") {\n    opKeys = [\"is_null\"];\n  } else if (op == \"ne\" && spel.children[1].type == \"null\") {\n    opKeys = [\"is_not_null\"];\n  } else if (op == \"le\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n    opKeys = [\"is_empty\"];\n  } else if (op == \"gt\" && spel.children[1].type == \"string\" && spel.children[1].val == \"\") {\n    opKeys = [\"is_not_empty\"];\n  } else if (op == \"between\") {\n    opKeys = [\"between\"];\n  }\n\n  // convert children\n  const convertChildren = () => {\n    let newChildren = spel.children.map(child => \n      convertToTree(child, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      })\n    );\n    if (newChildren.length >= 2 && newChildren?.[0]?.type == \"!compare\") {\n      newChildren = newChildren[0].children;\n    }\n    return newChildren;\n  };\n\n  if (op == \"and\" || op == \"or\") {\n    const children1 = {};\n    const vals = convertChildren();\n    vals.forEach(v => {\n      if (v) {\n        const id = uuid();\n        v.id = id;\n        if (v.type != undefined) {\n          children1[id] = v;\n        } else {\n          meta.errors.push(`Bad item in AND/OR: ${JSON.stringify(v)}`);\n        }\n      }\n    });\n    res = {\n      type: \"group\",\n      id: uuid(),\n      children1,\n      properties: {\n        conjunction: conv.conjunctions[op],\n        not: spel.not\n      }\n    };\n  } else if (opKeys) {\n    const vals = convertChildren();\n    const fieldObj = vals[0];\n    let convertedArgs = vals.slice(1);\n    const groupField = fieldObj?.groupFieldValue?.value;\n    const opArg = convertedArgs?.[0];\n    \n    let opKey = opKeys[0];\n    if (opKeys.length > 1) {\n      const valueType = vals[0]?.valueType || vals[1]?.valueType;\n      //todo: it's naive, use valueType\n      const field = fieldObj?.value;\n      const widgets = opKeys.map(op => ({op, widget: getWidgetForFieldOp(config, field, op)}));\n      logger.warn(`[spel] Spel operator ${op} can be mapped to ${opKeys}.`,\n        \"widgets:\", widgets, \"vals:\", vals, \"valueType=\", valueType);\n      \n      if (op == \"eq\" || op == \"ne\") {\n        const ws = widgets.find(({ op, widget }) => (widget && widget != \"field\"));\n        if (ws) {\n          opKey = ws.op;\n        }\n      }\n    }\n\n    // some/all/none\n    if (fieldObj?.groupFieldValue) {\n      if (opArg && opArg.groupFieldValue && opArg.groupFieldValue.valueSrc == \"field\" && opArg.groupFieldValue.value == groupField) {\n        // group.?[...].size() == group.size()\n        opKey = \"all\";\n        convertedArgs = [];\n      } else if (opKey == \"equal\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n        opKey = \"none\";\n        convertedArgs = [];\n      } else if (opKey == \"greater\" && opArg.valueSrc == \"value\" && opArg.valueType == \"number\" && opArg.value == 0) {\n        opKey = \"some\";\n        convertedArgs = [];\n      }\n    }\n\n    let canRev = true;\n    let needWrapReverse = false;\n    if (spel.not && canRev) {\n      const opConfig = config.operators[opKey];\n      if (opConfig.reversedOp) {\n        opKey = opConfig.reversedOp;\n        spel.not = false;\n      } else {\n        needWrapReverse = true;\n      }\n    }\n    \n    if (!fieldObj) {\n      // LHS can't be parsed\n    } else if (fieldObj.groupFieldValue) {\n      // 1. group\n      if (fieldObj.groupFieldValue.valueSrc != \"field\") {\n        meta.errors.push(`Expected group field ${JSON.stringify(fieldObj)}`);\n      }\n\n      res = buildRuleGroup(fieldObj, opKey, convertedArgs, config, meta);\n    } else {\n      // 2. not group\n      if (fieldObj.valueSrc != \"field\" && fieldObj.valueSrc != \"func\") {\n        meta.errors.push(`Expected field/func at LHS, but got ${JSON.stringify(fieldObj)}`);\n      }\n      const field = fieldObj.value;\n      res = buildRule(config, meta, field, opKey, convertedArgs);\n    }\n\n    if (needWrapReverse) {\n      if (res.type !== \"group\") {\n        res = wrapInDefaultConj(res, config, spel.not);\n      } else {\n        res.properties.not = !res.properties.not;\n      }\n    }\n  } else {\n    if (!parentSpel) {\n      // try to parse whole `\"str\" + prop + #var` as ternary\n      res = buildSimpleSwitch(spel, conv, config, meta);\n    }\n    // if (!res) {\n    //   meta.errors.push(`Can't convert op ${op}`);\n    // }\n  }\n  return res;\n};\n\nconst convertPath = (parts, meta = {}, expectingField = false) => {\n  let isError = false;\n  const res = parts.map(c => {\n    if (c.type == \"variable\" || c.type == \"property\" || c.type == \"indexer\" && c.itype == \"string\") {\n      return c.val;\n    } else {\n      isError = true;\n      expectingField && meta?.errors?.push?.(`Unexpected item in field path compound: ${JSON.stringify(c)}`);\n    }\n  });\n  return !isError ? res : undefined;\n};\n\nconst convertArg = (spel, conv, config, meta, parentSpel) => {\n  if (spel == undefined)\n    return undefined;\n  const {fieldSeparator} = config.settings;\n\n  if (spel.type == \"variable\" || spel.type == \"property\") {\n    // normal field\n    const field = normalizeField(config, spel.val, parentSpel?._groupField);\n    const fieldConfig = getFieldConfig(config, field);\n    const isVariable = spel.type == \"variable\";\n    return {\n      valueSrc: \"field\",\n      valueType: fieldConfig?.type,\n      isVariable,\n      value: field,\n    };\n  } else if (spel.type == \"compound\") {\n    // complex field\n    const parts = convertPath(spel.children, meta);\n    if (parts) {\n      const field = normalizeField(config, parts.join(fieldSeparator), parentSpel?._groupField);\n      const fieldConfig = getFieldConfig(config, field);\n      const isVariable = spel.children?.[0]?.type == \"variable\";\n      return {\n        valueSrc: \"field\",\n        valueType: fieldConfig?.type,\n        isVariable,\n        value: field,\n      };\n    } else {\n      // it's not complex field\n    }\n  } else if (SpelPrimitiveTypes[spel.type]) {\n    let value = spel.val;\n    const valueType = SpelPrimitiveTypes[spel.type];\n    if (parentSpel?.isUnary) {\n      value = -value;\n    }\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type == \"!new\" && SpelPrimitiveClasses[spel.cls.at(-1)]) {\n    const args = spel.args.map(v => convertArg(v, conv, config, meta, spel));\n    const value = args?.[0];\n    const valueType = SpelPrimitiveClasses[spel.cls.at(-1)];\n    return {\n      ...value,\n      valueType,\n    };\n  } else if (spel.type == \"list\") {\n    const values = spel.val.map(v => convertArg(v, conv, config, meta, spel));\n    const _itemType = values.length ? values[0]?.valueType : null;\n    const value = values.map(v => v?.value);\n    const valueType = ListValueType;\n    return {\n      valueSrc: \"value\",\n      valueType,\n      value,\n    };\n  } else if (spel.type == \"op-plus\" && parentSpel?.type == \"ternary\") {\n    return buildCaseValueConcat(spel, conv, config, meta);\n  }\n\n  let maybe = convertFunc(spel, conv, config, meta, parentSpel);\n  if (maybe !== undefined) {\n    return maybe;\n  }\n\n  meta.errors.push(`Can't convert arg of type ${spel.type}`);\n  return undefined;\n};\n\nconst buildFuncSignatures = (spel) => {\n  // branches\n  const brns = [\n    {s: \"\", params: [], objs: []}\n  ];\n  _buildFuncSignatures(spel, brns);\n  return brns.map(({s, params}) => ({s, params})).reverse().filter(({s}) => s !== \"\" && s !== \"?\");\n};\n\n// a.toLower().toUpper()\n// ->\n// ?.toLower().toUpper()\n// ?.toUpper()\nconst _buildFuncSignatures = (spel, brns) => {\n  let params = [], s = \"\";\n  const { type, methodName, val, obj, args, isVar, cls, children } = spel;\n  const lastChild = children?.[children.length-1];\n  let currBrn = brns[brns.length-1];\n  if (type === \"!func\") {\n    // T(DateTimeFormat).forPattern(?).parseDateTime(?)  --  ok\n    // T(LocalDateTime).parse(?, T(DateTimeFormatter).ofPattern(?))  --  will not work\n    let o = obj;\n    while (o) {\n      const [s1, params1] = _buildFuncSignatures({...o, obj: null}, [{}]);\n      if (s1 !== \"?\") {\n        // start new branch\n        const newBrn = {\n          s: currBrn.s,\n          params: [...currBrn.params],\n          objs: [...currBrn.objs]\n        };\n        // finish old branch\n        currBrn.objs.unshift(\"?\");\n        currBrn.params.unshift(o);\n        // switch\n        brns.push(newBrn);\n        currBrn = brns[brns.length-1];\n      }\n      // step\n      currBrn.objs.unshift(s1);\n      currBrn.params.unshift(...params1);\n      o = o.type === \"!func\" ? o.obj : null;\n    }\n    for (const brn of brns) {\n      params = [\n        ...(brn?.params || []),\n        ...(args || []),\n      ];\n      s = \"\";\n      if (brn?.objs?.length)\n        s += brn.objs.join(\".\") + \".\";\n      s += (isVar ? \"#\" : \"\") + methodName;\n      s += \"(\" + (args || []).map(_ => \"?\").join(\", \") + \")\";\n      brn.s = s;\n      brn.params = params;\n    }\n  } else if (type === \"!new\") {\n    // new java.text.SimpleDateFormat('HH:mm:ss').parse('...')\n    params = args || [];\n    s = `new ${cls.join(\".\")}(${params.map(_ => \"?\").join(\", \")})`;\n  } else if (type === \"!type\") {\n    // T(java.time.LocalTime).parse('...')\n    s = `T(${cls.join(\".\")})`;\n  } else if (type === \"compound\" && lastChild.type === \"property\" && isFuncableProperty(lastChild.val)) {\n    // {1,2}.length  --  ok\n    // 'Hello World'.bytes.length  --  will not work\n    s = children.map((c) => {\n      if (c === lastChild)\n        return c.val;\n      const [s1, params1] = _buildFuncSignatures({...c, obj: null}, [{}]);\n      params.push(...params1);\n      return s1;\n    }).join(\".\");\n  } else {\n    params = [spel];\n    s = \"?\";\n  }\n\n  if (currBrn) {\n    currBrn.s = s;\n    currBrn.params = params;\n  }\n\n  return [s, params];\n};\n\nconst convertFunc = (spel, conv, config, meta, parentSpel) => {\n  // Build signatures\n  const convertFuncArg = v => convertArg(v, conv, config, meta, {\n    ...spel,\n    _groupField: parentSpel?._groupField\n  });\n  const fsigns = buildFuncSignatures(spel);\n  const firstSign = fsigns?.[0]?.s;\n  if (fsigns.length)\n    logger.debug(\"Signatures for \", spel, \":\", firstSign, fsigns);\n  \n  // 1. Try to parse as value\n  let maybeValue = convertFuncToValue(spel, conv, config, meta, parentSpel, fsigns, convertFuncArg);\n  if (maybeValue !== undefined)\n    return maybeValue;\n  \n  // 2. Try to parse as op\n  let maybeOp = convertFuncToOp(spel, conv, config, meta, parentSpel, fsigns, convertFuncArg);\n  if (maybeOp !== undefined)\n    return maybeOp;\n  \n  // 3. Try to parse as func\n  let funcKey, funcConfig, argsObj;\n  // try func signature matching\n  for (const {s, params} of fsigns) {\n    const funcKeys = conv.funcs[s];\n    if (funcKeys) {\n      // todo: here we can check arg types, if we have function overloading\n      funcKey = funcKeys[0];\n      funcConfig = getFuncConfig(config, funcKey);\n      const {spelFunc} = funcConfig;\n      const argsArr = params.map(convertFuncArg);\n      const argsOrder = [...spelFunc.matchAll(/\\${(\\w+)}/g)].map(([_, k]) => k);\n      argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      break;\n    }\n  }\n  // try `spelImport`\n  if (!funcKey) {\n    for (const [f, fc] of iterateFuncs(config)) {\n      if (fc.spelImport) {\n        let parsed;\n        try {\n          parsed = fc.spelImport(spel);\n        } catch(_e) {\n          // can't be parsed\n        }\n        if (parsed) {\n          funcKey = f;\n          funcConfig = getFuncConfig(config, funcKey);\n          argsObj = {};\n          for (let argKey in parsed) {\n            argsObj[argKey] = convertFuncArg(parsed[argKey]);\n          }\n        }\n      }\n    }\n  }\n\n  // convert\n  if (funcKey) {\n    const funcArgs = {};\n    for (let argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      let argVal = argsObj[argKey];\n      if (argVal === undefined) {\n        argVal = argConfig?.defaultValue;\n        if (argVal === undefined) {\n          if (argConfig?.isOptional) {\n            //ignore\n          } else {\n            meta.errors.push(`No value for arg ${argKey} of func ${funcKey}`);\n            return undefined;\n          }\n        } else {\n          argVal = {\n            value: argVal,\n            valueSrc: argVal?.func ? \"func\" : \"value\",\n            valueType: argConfig.type,\n          };\n        }\n      }\n      if (argVal)\n        funcArgs[argKey] = argVal;\n    }\n\n    return {\n      valueSrc: \"func\",\n      value: {\n        func: funcKey,\n        args: funcArgs\n      },\n      valueType: funcConfig.returnType,\n    };\n  }\n\n  const {methodName} = spel;\n  if (methodName)\n    meta.errors.push(`Signature ${firstSign} - failed to convert`);\n  \n  return undefined;\n};\n\nconst convertFuncToValue = (spel, conv, config, meta, parentSpel, fsigns, convertFuncArg) => {\n  let errs, foundSign, foundWidget;\n  const candidates = [];\n\n  for (let w in config.widgets) {\n    const widgetDef = config.widgets[w];\n    const {spelImportFuncs} = widgetDef;\n    if (spelImportFuncs) {\n      for (let i = 0 ; i < spelImportFuncs.length ; i++) {\n        const fj = spelImportFuncs[i];\n        if (isObject(fj)) {\n          const bag = {};\n          if (isJsonCompatible(fj, spel, bag)) {\n            for (const k in bag) {\n              bag[k] = convertFuncArg(bag[k]);\n            }\n            candidates.push({\n              s: `widgets.${w}.spelImportFuncs[${i}]`,\n              w,\n              argsObj: bag,\n            });\n          }\n        }\n      }\n    }\n  }\n\n  for (const {s, params} of fsigns) {\n    const found = conv.valueFuncs[s] || [];\n    for (const {w, argsOrder} of found) {\n      const argsArr = params.map(convertFuncArg);\n      const argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      candidates.push({\n        s,\n        w,\n        argsObj,\n      });\n    }\n  }\n\n  for (const {s, w, argsObj} of candidates) {\n    const widgetDef = config.widgets[w];\n    const {spelImportValue, type} = widgetDef;\n    foundWidget = w;\n    foundSign = s;\n    errs = [];\n    for (const k in argsObj) {\n      if (![\"value\"].includes(argsObj[k].valueSrc)) {\n        errs.push(`${k} has unsupported value src ${argsObj[k].valueSrc}`);\n      }\n    }\n    let value = argsObj.v.value;\n    if (spelImportValue && !errs.length) {\n      [value, errs] = spelImportValue.call(config.ctx, argsObj.v, widgetDef, argsObj);\n      if (errs && !Array.isArray(errs))\n        errs = [errs];\n    }\n    if (!errs.length) {\n      return {\n        valueSrc: \"value\",\n        valueType: type,\n        value,\n      };\n    }\n  }\n\n  if (foundWidget && errs.length) {\n    meta.errors.push(`Signature ${foundSign} - looks like convertable to ${foundWidget}, but: ${errs.join(\"; \")}`);\n  }\n\n  return undefined;\n};\n\nconst convertFuncToOp = (spel, conv, config, meta, parentSpel, fsigns, convertFuncArg) => {\n  let errs, opKey, foundSign;\n  for (const {s, params} of fsigns) {\n    const found = conv.opFuncs[s] || [];\n    for (const {op, argsOrder} of found) {\n      const argsArr = params.map(convertFuncArg);\n      opKey = op;\n      if (op === \"!compare\") {\n        if (\n          parentSpel.type.startsWith(\"op-\")\n          && parentSpel.children.length == 2\n          && parentSpel.children[1].type == \"number\"\n          && parentSpel.children[1].val === 0\n        ) {\n          return {\n            type: \"!compare\",\n            children: argsArr,\n          };\n        } else {\n          errs.push(\"Result of compareTo() should be compared to 0\");\n        }\n      }\n      foundSign = s;\n      errs = [];\n      const opDef = config.operators[opKey];\n      const {spelOp, valueTypes} = opDef;\n      const argsObj = Object.fromEntries(\n        argsOrder.map((argKey, i) => [argKey, argsArr[i]])\n      );\n      const field = argsObj[\"0\"];\n      const convertedArgs = Object.keys(argsObj).filter(k => parseInt(k) > 0).map(k => argsObj[k]);\n      \n      const valueType = argsArr.filter(a => !!a).find(({valueSrc}) => valueSrc === \"value\")?.valueType;\n      if (valueTypes && valueType && !valueTypes.includes(valueType)) {\n        errs.push(`Op supports types ${valueTypes}, but got ${valueType}`);\n      }\n      if (!errs.length) {\n        return buildRule(config, meta, field, opKey, convertedArgs, spel);\n      }\n    }\n  }\n\n  if (opKey && errs.length) {\n    meta.errors.push(`Signature ${foundSign} - looks like convertable to ${opKey}, but: ${errs.join(\"; \")}`);\n  }\n\n  return undefined;\n};\n\nconst buildRule = (config, meta, field, opKey, convertedArgs, spel) => {\n  if (convertedArgs.filter(v => v === undefined).length) {\n    return undefined;\n  }\n  let fieldSrc = field?.func ? \"func\" : \"field\";\n  if (isObject(field) && field.valueSrc) {\n    // if comed from convertFuncToOp()\n    fieldSrc = field.valueSrc;\n    field = field.value;\n  }\n  const fieldConfig = getFieldConfig(config, field);\n  if (!fieldConfig) {\n    meta.errors.push(`No config for field ${field}`);\n    return undefined;\n  }\n\n  let canRev = true;\n  let needWrapReverse = false;\n  if (spel?.not && canRev) {\n    const opConfig = config.operators[opKey];\n    if (opConfig.reversedOp) {\n      opKey = opConfig.reversedOp;\n      spel.not = false;\n    } else {\n      needWrapReverse = true;\n    }\n  }\n\n  const widget = getWidgetForFieldOp(config, field, opKey);\n  const widgetConfig = config.widgets[widget || fieldConfig.mainWidget];\n  const asyncListValuesArr = convertedArgs.map(v => v.asyncListValues).filter(v => v != undefined);\n  const asyncListValues = asyncListValuesArr.length ? asyncListValuesArr[0] : undefined;\n\n  let res = {\n    type: \"rule\",\n    id: uuid(),\n    properties: {\n      field,\n      fieldSrc,\n      operator: opKey,\n      value: convertedArgs.map(v => v.value),\n      valueSrc: convertedArgs.map(v => v.valueSrc),\n      valueType: convertedArgs.map(v => {\n        if (v.valueSrc == \"value\") {\n          return widgetConfig?.type || fieldConfig?.type || v.valueType;\n        }\n        return v.valueType;\n      }),\n      ...(asyncListValues ? {asyncListValues} : {}),\n    }\n  };\n\n  if (needWrapReverse) {\n    res = wrapInDefaultConj(res, config, spel?.not);\n    if (spel?.not) {\n      spel.not = false;\n    }\n  }\n\n  return res;\n};\n\nconst buildRuleGroup = ({groupFilter, groupFieldValue}, opKey, convertedArgs, config, meta) => {\n  if (groupFieldValue.valueSrc != \"field\")\n    throw `Bad groupFieldValue: ${JSON.stringify(groupFieldValue)}`;\n  const groupField = groupFieldValue.value;\n  let groupOpRule = buildRule(config, meta, groupField, opKey, convertedArgs);\n  if (!groupOpRule)\n    return undefined;\n  const fieldConfig = getFieldConfig(config, groupField);\n  const mode = fieldConfig?.mode;\n  let res = {\n    ...(groupFilter || {}),\n    type: \"rule_group\",\n    properties: {\n      ...groupOpRule.properties,\n      ...(groupFilter?.properties || {}),\n      mode\n    }\n  };\n  if (!res.id)\n    res.id = uuid();\n  return res;\n};\n\n\nconst compareArgs = (left, right,  spel, conv, config, meta, parentSpel = null) => {\n  if (left.type == right.type) {\n    if (left.type == \"!aggr\") {\n      const [leftSource, rightSource] = [left.source, right.source].map(v => convertArg(v, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      }));\n      //todo: check same filter\n      return leftSource.value == rightSource.value;\n    } else {\n      const [leftVal, rightVal] = [left, right].map(v => convertArg(v, conv, config, meta, {\n        ...spel,\n        _groupField: parentSpel?._groupField\n      }));\n      return leftVal.value == rightVal.value;\n    }\n  }\n  return false;\n};\n\nconst buildSimpleSwitch = (val, conv, config, meta) => {\n  let children1 = {};\n  const cond = null;\n  const caseI = buildCase(cond, val, conv, config, meta);\n  if (caseI) {\n    children1[caseI.id] = caseI;\n  }\n  let res = {\n    type: \"switch_group\",\n    id: uuid(),\n    children1,\n    properties: {}\n  };\n  return res;\n};\n\nconst buildCase = (cond, val, conv, config, meta, spel = null) => {\n  const valProperties = buildCaseValProperties(config, meta, conv, val, spel);\n\n  let caseI;\n  if (cond) {\n    caseI = convertToTree(cond, conv, config, meta, spel);\n    if (caseI && caseI.type) {\n      if (caseI.type != \"group\") {\n        caseI = wrapInDefaultConj(caseI, config);\n      }\n      caseI.type = \"case_group\";\n    } else {\n      meta.errors.push(`Unexpected case: ${JSON.stringify(caseI)}`);\n      caseI = undefined;\n    }\n  } else {\n    caseI = {\n      id: uuid(),\n      type: \"case_group\",\n      properties: {}\n    };\n  }\n\n  if (caseI) {\n    caseI.properties = {\n      ...caseI.properties,\n      ...valProperties\n    };\n  }\n\n  return caseI;\n};\n\nconst buildCaseValueConcat = (spel, conv, config, meta) => {\n  let flat = [];\n  function _processConcatChildren(children) {\n    children.map(child => {\n      if (child.type == \"op-plus\") {\n        _processConcatChildren(child.children);\n      } else {\n        const convertedChild = convertArg(child, conv, config, meta, spel);\n        if (convertedChild) {\n          flat.push(convertedChild);\n        } else {\n          meta.errors.push(`Can't convert ${child.type} in concatenation`);\n        }\n      }\n    });\n  }\n  _processConcatChildren(spel.children);\n  return {\n    valueSrc: \"value\",\n    valueType: \"case_value\",\n    value: flat,\n  };\n};\n\nconst buildCaseValProperties = (config, meta, conv, val, spel = null) => {\n  let valProperties = {};\n  let convVal;\n  if (val?.type == \"op-plus\") {\n    convVal = buildCaseValueConcat(val, conv, config, meta);\n  } else {\n    convVal = convertArg(val, conv, config, meta, spel);\n  }\n  const widgetDef = config.widgets[\"case_value\"];\n  const importCaseValue = widgetDef?.spelImportValue;\n  if (importCaseValue) {\n    const [normVal, normErrors] = importCaseValue(convVal);\n    normErrors.map(e => meta.errors.push(e));\n    if (normVal) {\n      valProperties = {\n        value: [normVal],\n        valueSrc: [\"value\"],\n        valueType: [\"case_value\"]\n      };\n    }\n  } else {\n    meta.errors.push(\"No fucntion to import case value\");\n  }\n  return valProperties;\n};\n\nconst wrapInDefaultConjRuleGroup = (rule, parentField, parentFieldConfig, config, conj) => {\n  if (!rule) return undefined;\n  return {\n    type: \"rule_group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: conj || defaultGroupConjunction(config, parentFieldConfig),\n      not: false,\n      field: parentField,\n    }\n  };\n};\n\nconst wrapInDefaultConj = (rule, config, not = false) => {\n  return {\n    type: \"group\",\n    id: uuid(),\n    children1: { [rule.id]: rule },\n    properties: {\n      conjunction: defaultConjunction(config),\n      not: not || false\n    }\n  };\n};\n","import Immutable from \"immutable\";\nimport uuid from \"./uuid\";\nimport {getFieldConfig, getOperatorConfig, getFieldParts} from \"./configUtils\";\nimport {getNewValueForFieldOp, getFirstField, getFirstOperator} from \"../utils/ruleUtils\";\nimport { isImmutable } from \"./stuff\";\nimport { jsToImmutable } from \"../import\";\n\n\nexport const getDefaultField = (config, canGetFirst = true, parentRuleGroupPath = null) => {\n  const {defaultField} = config.settings;\n  let f = (!parentRuleGroupPath ? defaultField : getDefaultSubField(config, parentRuleGroupPath))\n    || canGetFirst && getFirstField(config, parentRuleGroupPath)\n    || null;\n  // if default LHS is func, convert to Immutable\n  if (f != null && typeof f !== \"string\" && !isImmutable(f)) {\n    f = jsToImmutable(f);\n  }\n  return f;\n};\n\nexport const getDefaultSubField = (config, parentRuleGroupPath = null) => {\n  if (!parentRuleGroupPath)\n    return null;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const parentRuleGroupConfig = getFieldConfig(config, parentRuleGroupPath);\n  let f = parentRuleGroupConfig?.defaultField;\n  if (f) {\n    f = [...getFieldParts(parentRuleGroupPath), f].join(fieldSeparator);\n  }\n  return f;\n};\n\nexport const getDefaultFieldSrc = (config, canGetFirst = true) => {\n  return canGetFirst && config.settings.fieldSources?.[0] || \"field\";\n};\n\nexport const getDefaultOperator = (config, field, canGetFirst = true) => {\n  let {defaultOperator} = config.settings;\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOperators = fieldConfig?.operators || [];\n  if (defaultOperator && !fieldOperators.includes(defaultOperator))\n    defaultOperator = null;\n  let fieldDefaultOperator = fieldConfig?.defaultOperator;\n  if (fieldDefaultOperator && !fieldOperators.includes(fieldDefaultOperator))\n    fieldDefaultOperator = null;\n  if (!fieldDefaultOperator && canGetFirst)\n    fieldDefaultOperator = getFirstOperator(config, field);\n  const fieldHasExplicitDefOp = fieldConfig?._origDefaultOperator;\n  const op = fieldHasExplicitDefOp && fieldDefaultOperator || defaultOperator || fieldDefaultOperator;\n  return op;\n};\n\n//used for complex operators like proximity\nexport const defaultOperatorOptions = (config, operator, field) => {\n  let operatorConfig = operator ? getOperatorConfig(config, operator, field) : null;\n  if (!operatorConfig)\n    return null; //new Immutable.Map();\n  return operatorConfig.options ? new Immutable.Map(\n    operatorConfig.options\n    && operatorConfig.options.defaults || {}\n  ) : null;\n};\n\nexport const defaultRuleProperties = (config, parentRuleGroupPath = null, item = null, canUseDefaultFieldAndOp = true, canGetFirst = false) => {\n  let field = null, operator = null, fieldSrc = null;\n  const {showErrorMessage} = config.settings;\n  if (item) {\n    fieldSrc = item?.properties?.fieldSrc;\n    field = item?.properties?.field;\n    operator = item?.properties?.operator;\n  } else if (canUseDefaultFieldAndOp) {\n    field = getDefaultField(config, canGetFirst, parentRuleGroupPath);\n    if (field) {\n      fieldSrc = isImmutable(field) ? \"func\" : \"field\";\n    } else {\n      fieldSrc = getDefaultFieldSrc(config);\n    }\n    operator = getDefaultOperator(config, field, true);\n  } else {\n    fieldSrc = getDefaultFieldSrc(config);\n  }\n  let current = new Immutable.Map({\n    fieldSrc: fieldSrc,\n    field: field,\n    operator: operator,\n    value: new Immutable.List(),\n    valueSrc: new Immutable.List(),\n    //used for complex operators like proximity\n    operatorOptions: defaultOperatorOptions(config, operator, field),\n  });\n  if (showErrorMessage) {\n    current = current.set(\"valueError\", new Immutable.List());\n  }\n  \n  if (field && operator) {\n    let {newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, current, field, operator, \"operator\", false\n    );\n    current = current\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n  }\n  return current; \n};\n\n\nexport const defaultGroupConjunction = (config, fieldConfig = null) => {\n  fieldConfig = getFieldConfig(config, fieldConfig); // if `fieldConfig` is field name, not config\n  const conjs = fieldConfig && fieldConfig.conjunctions || Object.keys(config.conjunctions);\n  if (conjs.length == 1)\n    return conjs[0];\n  return config.settings.defaultGroupConjunction || config.settings.defaultConjunction || conjs[0];\n};\n\nexport const defaultConjunction = (config) =>\n  config.settings.defaultConjunction || Object.keys(config.conjunctions)[0];\n\nexport const defaultGroupProperties = (config, fieldConfig = null) => new Immutable.Map({\n  conjunction: defaultGroupConjunction(config, fieldConfig),\n  not: false\n});\n\nexport const defaultItemProperties = (config, item) => {\n  return item && item.type == \"group\" \n    ? defaultGroupProperties(config, item?.properties?.field) \n    : defaultRuleProperties(config, null, item);\n};\n\nexport const defaultRule = (id, config) => ({\n  [id]: new Immutable.Map({\n    type: \"rule\",\n    id: id,\n    properties: defaultRuleProperties(config)\n  })\n});\n\nexport const defaultRoot = (config) => {\n  return new Immutable.Map({\n    type: \"group\",\n    id: uuid(),\n    children1: new Immutable.OrderedMap({ ...defaultRule(uuid(), config) }),\n    properties: defaultGroupProperties(config)\n  });\n};\n\nexport const createListFromArray = (ids) => {\n  return new Immutable.List(ids);\n};\n\nexport const emptyProperies = () => new Immutable.Map();\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldSrc,\n} from \"./configUtils\";\nimport {getOperatorsForField, getWidgetForFieldOp, getNewValueForFieldOp, isCompletedValue, isEmptyRuleProperties} from \"../utils/ruleUtils\";\nimport {defaultValue, deepEqual, logger} from \"../utils/stuff\";\nimport {getItemInListValues} from \"../utils/listValues\";\nimport {defaultOperatorOptions} from \"../utils/defaultUtils\";\nimport {fixPathsInTree} from \"../utils/treeUtils\";\nimport omit from \"lodash/omit\";\nimport { List } from \"immutable\";\n\n\nconst typeOf = (v) => {\n  if (typeof v == \"object\" && v !== null && Array.isArray(v))\n    return \"array\";\n  else\n    return (typeof v);\n};\n\nconst isTypeOf = (v, type) => {\n  if (typeOf(v) == type)\n    return true;\n  if (type == \"number\" && !isNaN(v))\n    return true; //can be casted\n  return false;\n};\n\nexport const validateAndFixTree = (newTree, _oldTree, newConfig, oldConfig, removeEmptyGroups, removeIncompleteRules) => {\n  let tree = validateTree(newTree, _oldTree, newConfig, oldConfig, removeEmptyGroups, removeIncompleteRules);\n  tree = fixPathsInTree(tree);\n  return tree;\n};\n\nexport const validateTree = (tree, _oldTree, config, oldConfig, removeEmptyGroups, removeIncompleteRules) => {\n  if (removeEmptyGroups === undefined) {\n    removeEmptyGroups = config.settings.removeEmptyGroupsOnLoad;\n  }\n  if (removeIncompleteRules === undefined) {\n    removeIncompleteRules = config.settings.removeIncompleteRulesOnLoad;\n  }\n  const c = {\n    config, oldConfig, removeEmptyGroups, removeIncompleteRules\n  };\n  return validateItem(tree, [], null, {}, c);\n};\n\nfunction validateItem (item, path, itemId, meta, c) {\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\" || type == \"case_group\" || type == \"switch_group\") && children && children.size) {\n    return validateGroup(item, path, itemId, meta, c);\n  } else if (type === \"rule\") {\n    return validateRule(item, path, itemId, meta, c);\n  } else {\n    return item;\n  }\n}\n\nfunction validateGroup (item, path, itemId, meta, c) {\n  const {removeEmptyGroups} = c;\n  let id = item.get(\"id\");\n  let children = item.get(\"children1\");\n  const oldChildren = children;\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  //validate children\n  let submeta = {};\n  children = children\n    .map( (currentChild, childId) => validateItem(currentChild, path.concat(id), childId, submeta, c) );\n  if (removeEmptyGroups)\n    children = children.filter((currentChild) => (currentChild != undefined));\n  let sanitized = submeta.sanitized || (oldChildren.size != children.size);\n  if (!children.size && removeEmptyGroups && path.length) {\n    sanitized = true;\n    item = undefined;\n  }\n\n  if (sanitized)\n    meta.sanitized = true;\n  if (sanitized && item)\n    item = item.set(\"children1\", children);\n  return item;\n}\n\n\nfunction validateRule (item, path, itemId, meta, c) {\n  const {removeIncompleteRules, config, oldConfig} = c;\n  const {showErrorMessage} = config.settings;\n  let id = item.get(\"id\");\n  let properties = item.get(\"properties\");\n  let field = properties.get(\"field\") || null;\n  let fieldSrc = properties.get(\"fieldSrc\") || null;\n  let operator = properties.get(\"operator\") || null;\n  let operatorOptions = properties.get(\"operatorOptions\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let value = properties.get(\"value\");\n  let valueError = properties.get(\"valueError\");\n  const oldSerialized = {\n    field: field?.toJS?.() || field,\n    fieldSrc,\n    operator,\n    operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n    valueSrc: valueSrc ? valueSrc.toJS() : null,\n    value: value ? value.toJS() : null,\n    valueError: valueError ? valueError.toJS() : null,\n  };\n  let _wasValid = field && operator && value && !value.includes(undefined);\n\n  if (!id && itemId) {\n    id = itemId;\n    item = item.set(\"id\", id);\n    meta.sanitized = true;\n  }\n\n  //validate field\n  const fieldDefinition = field ? getFieldConfig(config, field) : null;\n  if (field && !fieldDefinition) {\n    logger.warn(`No config for field ${field}`);\n    field = null;\n  }\n  if (field == null) {\n    properties = [\"operator\", \"operatorOptions\", \"valueSrc\", \"value\", \"valueError\"].reduce((map, key) => map.delete(key), properties);\n    operator = null;\n  }\n  if (!fieldSrc) {\n    fieldSrc = getFieldSrc(field);\n    properties = properties.set(\"fieldSrc\", fieldSrc);\n  }\n\n  //validate operator\n  // Backward compatibility: obsolete operator range_between\n  if (operator == \"range_between\" || operator == \"range_not_between\") {\n    operator = operator == \"range_between\" ? \"between\" : \"not_between\";\n    console.info(`Fixed operator ${properties.get(\"operator\")} to ${operator}`);\n    properties = properties.set(\"operator\", operator);\n  }\n  const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n  if (operator && !operatorDefinition) {\n    console.warn(`No config for operator ${operator}`);\n    operator = null;\n  }\n  const availOps = field ? getOperatorsForField(config, field) : [];\n  if (field) {\n    if (!availOps?.length) {\n      console.warn(`Type of field ${field} is not supported`);\n      operator = null;\n    } else if (operator && availOps.indexOf(operator) == -1) {\n      if (operator == \"is_empty\" || operator == \"is_not_empty\") {\n        // Backward compatibility: is_empty #494\n        operator = operator == \"is_empty\" ? \"is_null\" : \"is_not_null\";\n        console.info(`Fixed operator ${properties.get(\"operator\")} to ${operator} for ${field}`);\n        properties = properties.set(\"operator\", operator);\n      } else {\n        console.warn(`Operator ${operator} is not supported for field ${field}`);\n        operator = null;\n      }\n    }\n  }\n  if (operator == null) {\n    // do not unset operator ?\n    properties = properties.delete(\"operatorOptions\");\n    properties = properties.delete(\"valueSrc\");\n    properties = properties.delete(\"value\");\n    properties = properties.delete(\"valueError\");\n  }\n\n  //validate operator options\n  operatorOptions = properties.get(\"operatorOptions\");\n  let _operatorCardinality = operator ? defaultValue(operatorDefinition.cardinality, 1) : null;\n  if (!operator || operatorOptions && !operatorDefinition.options) {\n    operatorOptions = null;\n    properties = properties.delete(\"operatorOptions\");\n  } else if (operator && !operatorOptions && operatorDefinition.options) {\n    operatorOptions = defaultOperatorOptions(config, operator, field);\n    properties = properties.set(\"operatorOptions\", operatorOptions);\n  }\n\n  //validate values\n  valueSrc = properties.get(\"valueSrc\");\n  value = properties.get(\"value\");\n  const canFix = !showErrorMessage;\n  const isEndValue = true;\n  let {newValue, newValueSrc, newValueError} = getNewValueForFieldOp(config, oldConfig, properties, field, operator, null, canFix, isEndValue);\n  value = newValue;\n  valueSrc = newValueSrc;\n  valueError = newValueError;\n  properties = properties.set(\"value\", value);\n  properties = properties.set(\"valueSrc\", valueSrc);\n  if (showErrorMessage) {\n    properties = properties.set(\"valueError\", valueError);\n  } else {\n    properties = properties.delete(\"valueError\");\n  }\n\n  const newSerialized = {\n    field: field?.toJS?.() || field,\n    fieldSrc,\n    operator,\n    operatorOptions: operatorOptions ? operatorOptions.toJS() : {},\n    valueSrc: valueSrc ? valueSrc.toJS() : null,\n    value: value ? value.toJS() : null,\n    valueError: valueError ? valueError.toJS() : null,\n  };\n  const sanitized = !deepEqual(oldSerialized, newSerialized);\n  //const isCompleted = !!operator && !isEmptyRuleProperties(properties.toObject(), config, false);\n  const isValueCompleted = value \n    && value.filter((v, delta) => !isCompletedValue(v, valueSrc.get(delta), config)).size == 0;\n  const isFieldCompleted = isCompletedValue(field, fieldSrc, config);\n  const isCompleted = isFieldCompleted && operator && isValueCompleted;\n  if (sanitized)\n    meta.sanitized = true;\n  if (!isCompleted && removeIncompleteRules) {\n    let reason = \"Uncomplete rule\";\n    if (!isFieldCompleted) {\n      reason = \"Uncomplete LHS\";\n    } else {\n      reason = \"Uncomplete RHS\";\n      if (newSerialized.valueSrc?.[0] && newSerialized.valueSrc?.[0] != oldSerialized.valueSrc?.[0]) {\n        // eg. operator `starts_with` supports only valueSrc \"value\"\n        reason = `Bad value src ${newSerialized.valueSrc}`;\n      }\n    }\n    console.warn(\"[RAQB validate]\", \"Removing rule: \", oldSerialized, `Reason: ${reason}`);\n    item = undefined;\n  }\n  else if (sanitized)\n    item = item.set(\"properties\", properties);\n\n  return item;\n}\n\n\n/**\n * \n * @param {bool} canFix true is useful for func values to remove bad args\n * @param {bool} isEndValue false if value is in process of editing by user\n * @param {bool} isRawValue false is used only internally from validateFuncValue\n * @return {array} [validError, fixedValue] - if validError === null and canFix == true, fixedValue can differ from value if was fixed\n */\nexport const validateValue = (config, leftField, field, operator, value, valueType, valueSrc, asyncListValues, canFix = false, isEndValue = false, isRawValue = true) => {\n  let validError = null;\n  let fixedValue = value;\n\n  if (value != null) {\n    if (valueSrc == \"field\") {\n      [validError, fixedValue] = validateFieldValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, isEndValue, canFix);\n    } else if (valueSrc == \"func\") {\n      [validError, fixedValue] = validateFuncValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, isEndValue, canFix);\n    } else if (valueSrc == \"value\" || !valueSrc) {\n      [validError, fixedValue] = validateNormalValue(leftField, field, value, valueSrc, valueType, asyncListValues, config, operator, isEndValue, canFix);\n    }\n\n    if (!validError) {\n      const fieldConfig = getFieldConfig(config, field);\n      const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const operatorDefinition = operator ? getOperatorConfig(config, operator, field) : null;\n      const fieldWidgetDefinition = omit(getFieldWidgetConfig(config, field, operator, w, valueSrc), [\"factory\"]);\n      const rightFieldDefinition = (valueSrc == \"field\" ? getFieldConfig(config, value) : null);\n      const fieldSettings = fieldWidgetDefinition; // widget definition merged with fieldSettings\n\n      const fn = fieldWidgetDefinition.validateValue;\n      if (typeof fn == \"function\") {\n        const args = [\n          fixedValue, \n          fieldSettings,\n          operator,\n          operatorDefinition\n        ];\n        if (valueSrc == \"field\")\n          args.push(rightFieldDefinition);\n        const validResult = fn.call(config.ctx, ...args);\n        if (typeof validResult == \"boolean\") {\n          if (validResult == false)\n            validError = \"Invalid value\";\n        } else {\n          validError = validResult;\n        }\n      }\n    }\n  }\n\n  if (isRawValue && validError) {\n    console.warn(\"[RAQB validate]\", `Field ${field}: ${validError}`);\n  }\n  \n  return [validError, fixedValue];\n};\n\nconst validateValueInList = (value, listValues, canFix, isEndValue, removeInvalidMultiSelectValuesOnLoad) => {\n  const values = List.isList(value) ? value.toJS() : (value instanceof Array ? [...value] : undefined);\n  if (values) {\n    const [goodValues, badValues] = values.reduce(([goodVals, badVals], val) => {\n      const vv = getItemInListValues(listValues, val);\n      if (vv == undefined) {\n        return [goodVals, [...badVals, val]];\n      } else {\n        return [[...goodVals, vv.value], badVals];\n      }\n    }, [[], []]);\n    const plural = badValues.length > 1;\n    const err = badValues.length ? `${plural ? \"Values\" : \"Value\"} ${badValues.join(\", \")} ${plural ? \"are\" : \"is\"} not in list of values` : null;\n    // always remove bad values at tree validation as user can't unselect them (except AntDesign widget)\n    if (removeInvalidMultiSelectValuesOnLoad !== undefined) {\n      canFix = removeInvalidMultiSelectValuesOnLoad;\n    } else {\n      canFix = canFix || isEndValue;\n    }\n    return [err, canFix ? goodValues : value];\n  } else {\n    const vv = getItemInListValues(listValues, value);\n    if (vv == undefined) {\n      return [`Value ${value} is not in list of values`, value];\n    } else {\n      value = vv.value;\n    }\n    return [null, value];\n  }\n};\n\n/**\n* \n*/\nconst validateNormalValue = (leftField, field, value, valueSrc, valueType, asyncListValues, config, operator = null, isEndValue = false, canFix = false) => {\n  if (field) {\n    const fieldConfig = getFieldConfig(config, field);\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const wConfig = config.widgets[w];\n    const wType = wConfig?.type;\n    const jsType = wConfig?.jsType;\n    const fieldSettings = fieldConfig.fieldSettings;\n    const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n    const isAsyncListValues = !!fieldSettings?.asyncFetch;\n    // todo: for select/multiselect value can be string or number\n    const canSkipCheck = listValues || isAsyncListValues; \n\n    if (valueType && wType && valueType != wType)\n      return [`Value should have type ${wType}, but got value of type ${valueType}`, value];\n    if (jsType && !isTypeOf(value, jsType) && !canSkipCheck) {\n      return [`Value should have JS type ${jsType}, but got value of type ${typeof value}`, value];\n    }\n\n    if (fieldSettings) {\n      const realListValues = asyncListValues || listValues;\n      if (realListValues && !fieldSettings.allowCustomValues) {\n        return validateValueInList(value, realListValues, canFix, isEndValue, config.settings.removeInvalidMultiSelectValuesOnLoad);\n      }\n      if (fieldSettings.min != null && value < fieldSettings.min) {\n        return [`Value ${value} < min ${fieldSettings.min}`, canFix ? fieldSettings.min : value];\n      }\n      if (fieldSettings.max != null && value > fieldSettings.max) {\n        return [`Value ${value} > max ${fieldSettings.max}`, canFix ? fieldSettings.max : value];\n      }\n    }\n  }\n\n  return [null, value];\n};\n\n\n/**\n* \n*/\nconst validateFieldValue = (leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null, isEndValue = false, canFix = false) => {\n  const {fieldSeparator} = config.settings;\n  const isFuncArg = typeof field == \"object\" && field?._isFuncArg;\n  const leftFieldStr = Array.isArray(leftField) ? leftField.join(fieldSeparator) : leftField;\n  const rightFieldStr = Array.isArray(value) ? value.join(fieldSeparator) : value;\n  const rightFieldDefinition = getFieldConfig(config, value);\n  if (!rightFieldDefinition)\n    return [`Unknown field ${value}`, value];\n  if (rightFieldStr == leftFieldStr && !isFuncArg)\n    return [`Can't compare field ${leftField} with itself`, value];\n  if (valueType && valueType != rightFieldDefinition.type)\n    return [`Field ${value} is of type ${rightFieldDefinition.type}, but expected ${valueType}`, value];\n  return [null, value];\n};\n\n/**\n* \n*/\nconst validateFuncValue = (leftField, field, value, _valueSrc, valueType, asyncListValues, config, operator = null, isEndValue = false, canFix = false) => {\n  let fixedValue = value;\n\n  if (value) {\n    const funcKey = value.get(\"func\");\n    if (funcKey) {\n      const funcConfig = getFuncConfig(config, funcKey);\n      if (funcConfig) {\n        if (valueType && funcConfig.returnType != valueType)\n          return [`Function ${funcKey} should return value of type ${funcConfig.returnType}, but got ${valueType}`, value];\n        for (const argKey in funcConfig.args) {\n          const argConfig = funcConfig.args[argKey];\n          const args = fixedValue.get(\"args\");\n          const argVal = args ? args.get(argKey) : undefined;\n          const argDef = getFieldConfig(config, argConfig);\n          const argValue = argVal ? argVal.get(\"value\") : undefined;\n          const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n          if (argValue !== undefined) {\n            const [argValidError, fixedArgVal] = validateValue(\n              config, leftField, argDef, operator, argValue, argConfig.type, argValueSrc, asyncListValues, canFix, isEndValue, false\n            );\n            if (argValidError !== null) {\n              if (canFix) {\n                fixedValue = fixedValue.deleteIn([\"args\", argKey]);\n                if (argConfig.defaultValue !== undefined) {\n                  fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], argConfig.defaultValue);\n                  fixedValue = fixedValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n                }\n              } else {\n                return [`Invalid value of arg ${argKey} for func ${funcKey}: ${argValidError}`, value];\n              }\n            } else if (fixedArgVal !== argValue) {\n              fixedValue = fixedValue.setIn([\"args\", argKey, \"value\"], fixedArgVal);\n            }\n          } else if (isEndValue && argConfig.defaultValue === undefined && !canFix && !argConfig.isOptional) {\n            return [`Value of arg ${argKey} for func ${funcKey} is required`, value];\n          }\n        }\n      } else return [`Unknown function ${funcKey}`, value];\n    } // else it's not function value\n  } // empty value\n\n  return [null, fixedValue];\n};\n","\nimport {getFieldConfig, getFuncConfig, getFuncSignature} from \"../utils/configUtils\";\nimport {filterValueSourcesForField, completeValue, selectTypes} from \"../utils/ruleUtils\";\nimport {validateValue} from \"../utils/validation\";\nimport Immutable from \"immutable\";\n\n// helpers\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\n\n/**\n * @param {Immutable.Map} value\n * @param {object} config\n * @return {Immutable.Map | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeFuncValue = (value, config) => {\n  if (!value)\n    return undefined;\n  const funcKey = value.get(\"func\");\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return undefined;\n  let complValue = value;\n  let tmpHasOptional = false;\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const {valueSources, isOptional, defaultValue} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    const args = complValue.get(\"args\");\n    const argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = (argVal ? argVal.get(\"valueSrc\") : undefined) || argDefaultValueSrc;\n    if (argValue !== undefined) {\n      const completeArgValue = completeValue(argValue, argValueSrc, config);\n      if (completeArgValue === undefined) {\n        return undefined;\n      } else if (completeArgValue !== argValue) {\n        complValue = complValue.setIn([\"args\", argKey, \"value\"], completeArgValue);\n      }\n      if (tmpHasOptional) {\n        // has gap\n        return undefined;\n      }\n    } else if (defaultValue !== undefined && !isObject(defaultValue)) {\n      complValue = complValue.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n      complValue = complValue.setIn([\"args\", argKey, \"valueSrc\"], \"value\");\n    } else if (isOptional) {\n      // optional\n      tmpHasOptional = true;\n    } else {\n      // missing value\n      return undefined;\n    }\n  }\n  return complValue;\n};\n\n\n/**\n * @param {Immutable.Map} value \n * @return {array} - [usedFields, badFields]\n */\n// const getUsedFieldsInFuncValue = (value, config) => {\n//   let usedFields = [];\n//   let badFields = [];\n\n//   const _traverse = (value) => {\n//     const args = value && value.get(\"args\");\n//     if (!args) return;\n//     for (const arg of args.values()) {\n//       if (arg.get(\"valueSrc\") == \"field\") {\n//         const rightField = arg.get(\"value\");\n//         if (rightField) {\n//           const rightFieldDefinition = config ? getFieldConfig(config, rightField) : undefined;\n//           if (config && !rightFieldDefinition)\n//             badFields.push(rightField);\n//           else\n//             usedFields.push(rightField);\n//         }\n//       } else if (arg.get(\"valueSrc\") == \"func\") {\n//         _traverse(arg.get(\"value\"));\n//       }\n//     }\n//   };\n\n//   _traverse(value);\n\n//   return [usedFields, badFields];\n// };\n\n\n/**\n * Used @ FuncWidget\n * @param {Immutable.Map} value \n * @param {string} funcKey \n * @param {object} config \n */\nexport const setFunc = (value, funcKey, config) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  value = value || new Immutable.Map();\n  if (Array.isArray(funcKey)) {\n    // fix for cascader\n    funcKey = funcKey.join(fieldSeparator);\n  }\n  const oldFuncKey = value.get(\"func\");\n  const oldArgs = value.get(\"args\");\n  value = value.set(\"func\", funcKey);\n\n  const funcConfig = funcKey && getFuncConfig(config, funcKey);\n  const newFuncSignature = funcKey && getFuncSignature(config, funcKey);\n  const oldFuncSignature = oldFuncKey && getFuncSignature(config, oldFuncKey);\n  const keepArgsKeys = getCompatibleArgsOnFuncChange(oldFuncSignature, newFuncSignature, oldArgs, config);\n  if (keepArgsKeys.length) {\n    const argsKeys = Object.keys(newFuncSignature.args);\n    const deleteArgsKeys = argsKeys.filter(k => !keepArgsKeys.includes(k));\n    value = deleteArgsKeys.reduce((value, k) => value.deleteIn([\"args\", k]), value);\n  } else {\n    value = value.set(\"args\", new Immutable.Map());\n  }\n\n  // defaults\n  if (funcConfig) {\n    for (const argKey in funcConfig.args) {\n      const argConfig = funcConfig.args[argKey];\n      const {valueSources, defaultValue} = argConfig;\n      const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n      const firstValueSrc = filteredValueSources.length ? filteredValueSources[0] : undefined;\n      const defaultValueSrc = defaultValue ? (isObject(defaultValue) && !!defaultValue.func ? \"func\" : \"value\") : undefined;\n      const argDefaultValueSrc = defaultValueSrc || firstValueSrc;\n      const hasValue = value.getIn([\"args\", argKey]);\n      if (!hasValue) {\n        if (defaultValue !== undefined) {\n          value = value.setIn([\"args\", argKey, \"value\"], getDefaultArgValue(argConfig));\n        }\n        if (argDefaultValueSrc) {\n          value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n        }\n      }\n    }\n  }\n\n  return value;\n};\n\nconst getDefaultArgValue = ({defaultValue: value}) => {\n  if (isObject(value) && !Immutable.Map.isMap(value) && value.func) {\n    return Immutable.fromJS(value, function (k, v) {\n      return Immutable.Iterable.isIndexed(v) ? v.toList() : v.toOrderedMap();\n    });\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {*} argVal \n* @param {object} argConfig \n*/\nexport const setArgValue = (value, argKey, argVal, argConfig, config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey, \"value\"], argVal);\n\n    // set default arg value source\n    const valueSrc = value.getIn([\"args\", argKey, \"valueSrc\"]);\n    const {valueSources} = argConfig;\n    const filteredValueSources = filterValueSourcesForField(config, valueSources, argConfig);\n    let argDefaultValueSrc = filteredValueSources.length == 1 ? filteredValueSources[0] : undefined;\n    if (!argDefaultValueSrc && filteredValueSources.includes(\"value\")) {\n      argDefaultValueSrc = \"value\";\n    }\n    if (!valueSrc && argDefaultValueSrc) {\n      value = value.setIn([\"args\", argKey, \"valueSrc\"], argDefaultValueSrc);\n    }\n  }\n  return value;\n};\n\n/**\n* Used @ FuncWidget\n* @param {Immutable.Map} value \n* @param {string} argKey \n* @param {string} argValSrc \n* @param {object} argConfig \n*/\nexport const setArgValueSrc = (value, argKey, argValSrc, _argConfig, _config) => {\n  if (value && value.get(\"func\")) {\n    value = value.setIn([\"args\", argKey], new Immutable.Map({valueSrc: argValSrc}));\n  }\n  return value;\n};\n\n// see getFuncSignature in configUtils\nexport const getCompatibleArgsOnFuncChange = (s1, s2, argVals, config) => {\n  if (s1?.returnType != s2?.returnType)\n    return [];\n  const checkIndexes = false;\n  const keys = Object.keys(s2.args);\n  const compatibleKeys = keys.filter((k, i) => {\n    const arg2 = s2.args[k];\n    const arg1 = s1.args[k];\n    const oldInd = Object.keys(s1.args).indexOf(k);\n    if (!arg1 && (arg2.defaultValue !== undefined || arg2.isOptional)) {\n      return true;\n    }\n    if (checkIndexes && i !== oldInd) {\n      return false;\n    }\n    if (arg1?.type != arg2.type)\n      return false;\n    if (selectTypes.includes(arg2.type)) {\n      if (!arg1.listValuesType || arg1.listValuesType !== arg2.listValuesType)\n        return false;\n    }\n    if (argVals) {\n      const argVal = argVals.get(k);\n      const argValue = argVal?.get(\"value\");\n      const argValueSrc = argVal?.get(\"valueSrc\");\n      if (arg2.valueSources && !arg2.valueSources.includes(argValueSrc))\n        return false;\n      const leftField = null, operator = null, argDef = arg2, asyncListValues = null, canFix = false, isEndValue = true;\n      const [argValidError, _fixedArgVal] = validateValue(\n        config, leftField, argDef, operator, argValue, argDef.type, argValueSrc, asyncListValues, canFix, isEndValue, false\n      );\n      if (argValidError)\n        return false;\n    }\n\n    return true;\n  });\n  return compatibleKeys;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldRawConfig, getFuncConfig, getFieldParts,\n  isFieldDescendantOfField\n} from \"./configUtils\";\nimport {defaultValue, getFirstDefined} from \"../utils/stuff\";\nimport Immutable from \"immutable\";\nimport {validateValue} from \"../utils/validation\";\nimport last from \"lodash/last\";\nimport {completeFuncValue} from \"./funcUtils\";\n\nexport const selectTypes = [\n  \"select\",\n  \"multiselect\",\n  \"treeselect\",\n  \"treemultiselect\",\n];\n\n/**\n * @param {object} config\n * @param {object} oldConfig\n * @param {Immutable.Map} current\n * @param {string} newField\n * @param {string} newOperator\n * @param {string} changedProp\n * @return {object} - {canReuseValue, newValue, newValueSrc, newValueType, newValueError}\n */\nexport const getNewValueForFieldOp = function (config, oldConfig = null, current, newField, newOperator, changedProp = null, canFix = true, isEndValue = false) {\n  if (!oldConfig)\n    oldConfig = config;\n  const {keepInputOnChangeFieldSrc} = config.settings;\n  const currentField = current.get(\"field\");\n  const currentFieldType = current.get(\"fieldType\");\n  //const currentFieldSrc = current.get(\"fieldSrc\");\n  const currentOperator = current.get(\"operator\");\n  const currentValue = current.get(\"value\");\n  const currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n  const currentValueType = current.get(\"valueType\", new Immutable.List());\n  const currentAsyncListValues = current.get(\"asyncListValues\");\n\n  //const isValidatingTree = (changedProp === null);\n  const {convertableWidgets, clearValueOnChangeField, clearValueOnChangeOp, showErrorMessage} = config.settings;\n\n  //const currentOperatorConfig = getOperatorConfig(oldConfig, currentOperator);\n  const newOperatorConfig = getOperatorConfig(config, newOperator, newField);\n  //const currentOperatorCardinality = currentOperator ? defaultValue(currentOperatorConfig.cardinality, 1) : null;\n  const operatorCardinality = newOperator ? defaultValue(newOperatorConfig.cardinality, 1) : null;\n  const currentFieldConfig = getFieldConfig(oldConfig, currentField);\n  const newFieldConfig = getFieldConfig(config, newField);\n  const isOkWithoutField = !currentField && currentFieldType && keepInputOnChangeFieldSrc;\n  const currentType = currentFieldConfig?.type || currentFieldType;\n  const newType = newFieldConfig?.type || !newField && isOkWithoutField && currentType;\n\n  let canReuseValue = (currentField || isOkWithoutField) && currentOperator && newOperator && currentValue != undefined;\n  canReuseValue = canReuseValue\n    && (!changedProp \n      || changedProp == \"field\" && !clearValueOnChangeField \n      || changedProp == \"operator\" && !clearValueOnChangeOp);\n  canReuseValue = canReuseValue\n    && (currentType && newType && currentType == newType);\n  if (canReuseValue && selectTypes.includes(newType) && changedProp == \"field\") {\n    const newListValuesType = newFieldConfig?.listValuesType;\n    const currentListValuesType = currentFieldConfig?.listValuesType;\n    if (newListValuesType && newListValuesType === currentListValuesType) {\n      // ok\n    } else {\n      // different fields of select types has different listValues\n      canReuseValue = false;\n    }\n  }\n\n  // compare old & new widgets\n  for (let i = 0 ; i < operatorCardinality ; i++) {\n    const vs = currentValueSrc.get(i) || null;\n    const currentWidget = getWidgetForFieldOp(oldConfig, currentField, currentOperator, vs);\n    const newWidget = getWidgetForFieldOp(config, newField, newOperator, vs);\n    // need to also check value widgets if we changed operator and current value source was 'field'\n    // cause for select type op '=' requires single value and op 'in' requires array value\n    const currentValueWidget = vs == \"value\" ? currentWidget : getWidgetForFieldOp(oldConfig, currentField, currentOperator, \"value\");\n    const newValueWidget = vs == \"value\" ? newWidget : getWidgetForFieldOp(config, newField, newOperator, \"value\");\n\n    const canReuseWidget = newValueWidget == currentValueWidget\n      || (convertableWidgets[currentValueWidget] || []).includes(newValueWidget)\n      || !currentValueWidget && isOkWithoutField;\n    if (!canReuseWidget) {\n      canReuseValue = false;\n    }\n  }\n\n  if (currentOperator != newOperator && [currentOperator, newOperator].includes(\"proximity\"))\n    canReuseValue = false;\n\n  const firstWidgetConfig = getFieldWidgetConfig(config, newField, newOperator, null, currentValueSrc.first());\n  let valueSources = getValueSourcesForFieldOp(config, newField, newOperator, null);\n  if (!newField && isOkWithoutField) {\n    valueSources = Object.keys(config.settings.valueSourcesInfo);\n  }\n\n  let valueFixes = {};\n  let valueErrors = Array.from({length: operatorCardinality}, () => null);\n  if (canReuseValue) {\n    for (let i = 0 ; i < operatorCardinality ; i++) {\n      const v = currentValue.get(i);\n      const vType = currentValueType.get(i) || null;\n      const vSrc = currentValueSrc.get(i) || null;\n      let isValidSrc = (valueSources.find(v => v == vSrc) != null);\n      if (!isValidSrc && i > 0 && vSrc == null)\n        isValidSrc = true; // make exception for range widgets (when changing op from '==' to 'between')\n      const asyncListValues = currentAsyncListValues;\n      const [validateError, fixedValue] = validateValue(\n        config, newField, newField, newOperator, v, vType, vSrc, asyncListValues, canFix, isEndValue, true\n      );\n      const isValid = !validateError;\n      // Allow bad value with error message\n      // But not on field change - in that case just drop bad value that can't be reused\n      // ? Maybe we should also drop bad value on op change?\n      // For bad multiselect value we have both error message + fixed value.\n      //  If we show error message, it will gone on next tree validation\n      const fixValue = fixedValue !== v;\n      const dropValue = !isValidSrc || !isValid && (changedProp == \"field\" || !showErrorMessage && !fixValue);\n      const showValueError = !!validateError && showErrorMessage && !dropValue && !fixValue;\n      if (showValueError) {\n        valueErrors[i] = validateError;\n      }\n      if (fixValue) {\n        valueFixes[i] = fixedValue;\n      }\n      if (dropValue) {\n        canReuseValue = false;\n        break;\n      }\n    }\n  }\n\n  // reuse value OR get defaultValue for cardinality 1 (it means default range values is not supported yet, todo)\n  let newValue = null, newValueSrc = null, newValueType = null, newValueError = null;\n  newValue = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n    let v = undefined;\n    if (canReuseValue) {\n      if (i < currentValue.size) {\n        v = currentValue.get(i);\n        if (valueFixes[i] !== undefined) {\n          v = valueFixes[i];\n        }\n      }\n    } else if (operatorCardinality == 1) {\n      v = getFirstDefined([\n        newFieldConfig?.defaultValue,\n        newFieldConfig?.fieldSettings?.defaultValue,\n        firstWidgetConfig?.defaultValue\n      ]);\n    }\n    return v;\n  }));\n\n  newValueSrc = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n    let vs = null;\n    if (canReuseValue) {\n      if (i < currentValueSrc.size)\n        vs = currentValueSrc.get(i);\n    } else if (valueSources.length == 1) {\n      vs = valueSources[0];\n    } else if (valueSources.length > 1) {\n      vs = valueSources[0];\n    }\n    return vs;\n  }));\n\n  if (showErrorMessage) {\n    if (newOperatorConfig && newOperatorConfig.validateValues && newValueSrc.toJS().filter(vs => vs == \"value\" || vs == null).length == operatorCardinality) {\n      // last element in `valueError` list is for range validation error\n      const jsValues = firstWidgetConfig && firstWidgetConfig.toJS \n        ? newValue.toJS().map(v => firstWidgetConfig.toJS.call(config.ctx, v, firstWidgetConfig)) \n        : newValue.toJS();\n      const rangeValidateError = newOperatorConfig.validateValues(jsValues);\n      if (showErrorMessage) {\n        valueErrors.push(rangeValidateError);\n      }\n    }\n    newValueError = new Immutable.List(valueErrors);\n  }\n\n  newValueType = new Immutable.List(Array.from({length: operatorCardinality}, (_ignore, i) => {\n    let vt = null;\n    if (canReuseValue) {\n      if (i < currentValueType.size)\n        vt = currentValueType.get(i);\n    } else if (operatorCardinality == 1 && firstWidgetConfig && firstWidgetConfig.type !== undefined) {\n      vt = firstWidgetConfig.type;\n    } else if (operatorCardinality == 1 && newFieldConfig && newFieldConfig.type !== undefined) {\n      vt = newFieldConfig.type == \"!group\" ? \"number\" : newFieldConfig.type;\n    }\n    return vt;\n  }));\n\n  return {canReuseValue, newValue, newValueSrc, newValueType, newValueError, operatorCardinality};\n};\n\nexport const getFirstField = (config, parentRuleGroupPath = null) => {\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parentPathArr = getFieldParts(parentRuleGroupPath, config);\n  const parentField = parentRuleGroupPath ? getFieldRawConfig(config, parentRuleGroupPath) : config;\n\n  let firstField = parentField, key = null, keysPath = [];\n  do {\n    const subfields = firstField === config ? config.fields : firstField?.subfields;\n    if (!subfields || !Object.keys(subfields).length) {\n      firstField = key = null;\n      break;\n    }\n    key = Object.keys(subfields)[0];\n    keysPath.push(key);\n    firstField = subfields[key];\n  } while (firstField.type == \"!struct\" || firstField.type == \"!group\");\n  return (parentPathArr || []).concat(keysPath).join(fieldSeparator);\n};\n\nexport const getOperatorsForType = (config, fieldType) => {\n  return config.types[fieldType]?.operators || null;\n};\n\nexport const getOperatorsForField = (config, field) => {\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldOps = fieldConfig ? fieldConfig.operators : [];\n  return fieldOps;\n};\n\nexport const getFirstOperator = (config, field) => {\n  const fieldOps = getOperatorsForField(config, field);\n  return fieldOps?.[0] ?? null;\n};\n\nexport const getFuncPathLabels = (field, config, parentField = null) => {\n  return getFieldPathLabels(field, config, parentField, \"funcs\", \"subfields\");\n};\n\nexport const getFieldPathLabels = (field, config, parentField = null, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  const parentParts = getFieldParts(parentField, config);\n  const res = parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => [...parentParts, ...parts].join(fieldSeparator))\n    .map(part => {\n      const cnf = getFieldRawConfig(config, part, fieldsKey, subfieldsKey);\n      return cnf && cnf.label || last(part.split(fieldSeparator));\n    })\n    .filter(label => label != null);\n  return res;\n};\n\nexport const getFieldPartsConfigs = (field, config, parentField = null) => {\n  if (!field)\n    return null;\n  const parentFieldDef = parentField && getFieldRawConfig(config, parentField) || null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  const isDescendant = isFieldDescendantOfField(field, parentField, config);\n  const parentParts = !isDescendant ? [] : getFieldParts(parentField, config);\n  return parts\n    .slice(parentParts.length)\n    .map((_curr, ind, arr) => arr.slice(0, ind+1))\n    .map((parts) => ({\n      part: [...parentParts, ...parts].join(fieldSeparator),\n      key: parts[parts.length - 1]\n    }))\n    .map(({part, key}) => {\n      const cnf = getFieldRawConfig(config, part);\n      return {key, cnf};\n    })\n    .map(({key, cnf}, ind, arr) => {\n      const parentCnf = ind > 0 ? arr[ind - 1].cnf : parentFieldDef;\n      return [key, cnf, parentCnf];\n    });\n};\n\nexport const getValueLabel = (config, field, operator, delta, valueSrc = null, isSpecialRange = false) => {\n  const isFuncArg = field && typeof field == \"object\" && !!field.func && !!field.arg;\n  const {showLabels} = config.settings;\n  const fieldConfig = getFieldConfig(config, field);\n  const fieldWidgetConfig = getFieldWidgetConfig(config, field, operator, null, valueSrc) || {};\n  const mergedOpConfig = getOperatorConfig(config, operator, field) || {};\n    \n  const cardinality = isSpecialRange ? 1 : mergedOpConfig.cardinality;\n  let ret = null;\n  if (cardinality > 1) {\n    const valueLabels = fieldWidgetConfig.valueLabels || mergedOpConfig.valueLabels;\n    if (valueLabels)\n      ret = valueLabels[delta];\n    if (ret && typeof ret != \"object\") {\n      ret = {label: ret, placeholder: ret};\n    }\n    if (!ret) {\n      ret = {\n        label: config.settings.valueLabel + \" \" + (delta+1),\n        placeholder: config.settings.valuePlaceholder + \" \" + (delta+1),\n      };\n    }\n  } else {\n    let label = fieldWidgetConfig.valueLabel;\n    let placeholder = fieldWidgetConfig.valuePlaceholder;\n    if (isFuncArg) {\n      if (!label)\n        label = fieldConfig.label || field.arg;\n      if (!placeholder && !showLabels)\n        placeholder = fieldConfig.label || field.arg;\n    }\n\n    ret = {\n      label: label || config.settings.valueLabel, \n      placeholder: placeholder || config.settings.valuePlaceholder,\n    };\n  }\n  return ret;\n};\n\nfunction _getWidgetsAndSrcsForFieldOp (config, field, operator = null, valueSrc = null) {\n  let widgets = [];\n  let valueSrcs = [];\n  if (!field)\n    return {widgets, valueSrcs};\n  const isFuncArg = typeof field == \"object\" && (!!field.func && !!field.arg || field._isFuncArg);\n  const fieldConfig = getFieldConfig(config, field);\n  const opConfig = operator ? config.operators[operator] : null;\n  \n  if (fieldConfig?.widgets) {\n    for (const widget in fieldConfig.widgets) {\n      const widgetConfig = fieldConfig.widgets[widget];\n      if (!config.widgets[widget]) {\n        continue;\n      }\n      const widgetValueSrc = config.widgets[widget].valueSrc || \"value\";\n      let canAdd = true;\n      if (widget == \"field\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"field\"], fieldConfig).length > 0;\n      }\n      if (widget == \"func\") {\n        canAdd = canAdd && filterValueSourcesForField(config, [\"func\"], fieldConfig).length > 0;\n      }\n      // If can't check operators, don't add\n      // Func args don't have operators\n      if (valueSrc == \"value\" && !widgetConfig.operators && !isFuncArg && field != \"!case_value\")\n        canAdd = false;\n      if (widgetConfig.operators && operator)\n        canAdd = canAdd && widgetConfig.operators.indexOf(operator) != -1;\n      if (valueSrc && valueSrc != widgetValueSrc && valueSrc != \"const\")\n        canAdd = false;\n      if (opConfig && opConfig.cardinality == 0 && (widgetValueSrc != \"value\"))\n        canAdd = false;\n      if (canAdd) {\n        widgets.push(widget);\n        let canAddValueSrc = fieldConfig.valueSources?.indexOf(widgetValueSrc) != -1;\n        if (opConfig?.valueSources?.indexOf(widgetValueSrc) == -1)\n          canAddValueSrc = false;\n        if (canAddValueSrc && !valueSrcs.find(v => v == widgetValueSrc))\n          valueSrcs.push(widgetValueSrc);\n      }\n    }\n  }\n\n  const widgetWeight = (w) => {\n    let wg = 0;\n    if (fieldConfig.preferWidgets) {\n      if (fieldConfig.preferWidgets.includes(w))\n        wg += (10 - fieldConfig.preferWidgets.indexOf(w));\n    } else if (w == fieldConfig.mainWidget) {\n      wg += 100;\n    }\n    if (w == \"field\") {\n      wg -= 1;\n    }\n    if (w == \"func\") {\n      wg -= 2;\n    }\n    return wg;\n  };\n\n  widgets.sort((w1, w2) => (widgetWeight(w2) - widgetWeight(w1)));\n    \n  return {widgets, valueSrcs};\n}\n\nexport const getWidgetsForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  return widgets;\n};\n\nexport const filterValueSourcesForField = (config, valueSrcs, fieldDefinition) => {\n  if (!fieldDefinition)\n    return valueSrcs;\n  const fieldType = fieldDefinition.type ?? fieldDefinition.returnType;\n  if (!valueSrcs)\n    valueSrcs = Object.keys(config.settings.valueSourcesInfo);\n  return valueSrcs.filter(vs => {\n    let canAdd = true;\n    if (vs == \"field\") {\n      if (config.__fieldsCntByType) {\n        // tip: LHS field can be used as arg in RHS function\n        const minCnt = fieldDefinition._isFuncArg ? 0 : 1;\n        canAdd = canAdd && config.__fieldsCntByType[fieldType] > minCnt;\n      }\n    }\n    if (vs == \"func\") {\n      if (config.__funcsCntByType)\n        canAdd = canAdd && !!config.__funcsCntByType[fieldType];\n      if (fieldDefinition.funcs)\n        canAdd = canAdd && fieldDefinition.funcs.length > 0;\n    }\n    return canAdd;\n  });\n};\n\nexport const getValueSourcesForFieldOp = (config, field, operator, fieldDefinition = null) => {\n  const {valueSrcs} = _getWidgetsAndSrcsForFieldOp(config, field, operator, null);\n  const filteredValueSrcs = filterValueSourcesForField(config, valueSrcs, fieldDefinition);\n  return filteredValueSrcs;\n};\n\nexport const getWidgetForFieldOp = (config, field, operator, valueSrc = null) => {\n  const {widgets} = _getWidgetsAndSrcsForFieldOp(config, field, operator, valueSrc);\n  let widget = null;\n  if (widgets.length)\n    widget = widgets[0];\n  return widget;\n};\n\n// can use alias (fieldName)\n// even if `parentField` is provided, `field` is still a full path\nexport const formatFieldName = (field, config, meta, parentField = null, options = {}) => {\n  if (!field) return;\n  const fieldDef = getFieldConfig(config, field) || {};\n  const {fieldSeparator} = config.settings;\n  const fieldParts = getFieldParts(field, config);\n  let fieldName = Array.isArray(field) ? field.join(fieldSeparator) : field;\n  if (options?.useTableName && fieldDef.tableName) { // legacy\n    const fieldPartsCopy = [...fieldParts];\n    fieldPartsCopy[0] = fieldDef.tableName;\n    fieldName = fieldPartsCopy.join(fieldSeparator);\n  }\n  if (fieldDef.fieldName) {\n    fieldName = fieldDef.fieldName;\n  }\n  if (parentField) {\n    const parentFieldDef = getFieldConfig(config, parentField) || {};\n    let parentFieldName = parentField;\n    if (fieldName.indexOf(parentFieldName + fieldSeparator) == 0) {\n      fieldName = fieldName.slice((parentFieldName + fieldSeparator).length);\n      // fieldName = \"#this.\" + fieldName; // ? for spel\n    } else {\n      if (fieldDef.fieldName) {\n        // ignore\n      } else {\n        meta.errors.push(`Can't cut group ${parentFieldName} from field ${fieldName}`);\n      }\n    }\n  }\n  return fieldName;\n};\n\n\nexport const isEmptyItem = (item, config, liteCheck = false) => {\n  const type = item.get(\"type\");\n  const mode = item.getIn([\"properties\", \"mode\"]);\n  if (type == \"rule_group\" && mode == \"array\") {\n    return isEmptyRuleGroupExt(item, config, liteCheck);\n  } else if (type == \"group\" || type == \"rule_group\") {\n    return isEmptyGroup(item, config, liteCheck);\n  } else {\n    return isEmptyRule(item, config, liteCheck);\n  }\n};\n\nconst isEmptyRuleGroupExt = (item, config, liteCheck = false) => {\n  const children = item.get(\"children1\");\n  const properties = item.get(\"properties\");\n  return isEmptyRuleGroupExtPropertiesAndChildren(properties.toObject(), children, config, liteCheck);\n};\n\nexport const isEmptyRuleGroupExtPropertiesAndChildren = (properties, children, config, liteCheck = false) => {\n  const operator = properties.operator;\n  const cardinality = config.operators[operator]?.cardinality ?? 1;\n  const filledParts = [\n    !isEmptyRuleProperties(properties, config, false),\n    cardinality > 0 ? true : !isEmptyGroupChildren(children, config, liteCheck),\n  ];\n  const filledCnt = filledParts.filter(f => !!f).length;\n  const isFilled = filledCnt == 2;\n  return !isFilled;\n};\n\nconst isEmptyGroup = (group, config, liteCheck = false) => {\n  const children = group.get(\"children1\");\n  return isEmptyGroupChildren(children, config, liteCheck);\n};\n\nexport const isEmptyGroupChildren = (children, config, liteCheck = false) => {\n  return !children || children.size == 0\n    || children.size > 0 && children.filter(ch => !isEmptyItem(ch, config, liteCheck)).size == 0;\n};\n\nexport const isEmptyRuleProperties = ({\n  field, fieldSrc, fieldType,\n  operator,\n  value, valueSrc, valueType,\n}, config, liteCheck = false) => {\n  const cardinality = config.operators[operator]?.cardinality ?? 1;\n  const filledParts = [\n    liteCheck ? (field !== null || fieldType != null) : isCompletedValue(field, fieldSrc, config, liteCheck),\n    !!operator,\n    value.filter((val, delta) => \n      isCompletedValue(val, valueSrc?.get?.(delta) || valueSrc?.[delta], config, liteCheck)\n    ).size >= cardinality\n  ];\n  const filledCnt = filledParts.filter(f => !!f).length;\n  const isFilled = filledCnt == 3;\n  return !isFilled;\n};\n\nconst isEmptyRule = (rule, config, liteCheck = false) => {\n  const properties = rule.get(\"properties\");\n  return isEmptyRuleProperties(properties.toObject(), config, liteCheck);\n};\n\nexport const isCompletedValue = (value, valueSrc, config, liteCheck = false) => {\n  if (!liteCheck && valueSrc == \"func\" && value) {\n    const funcKey = value.get(\"func\");\n    const funcConfig = getFuncConfig(config, funcKey);\n    if (funcConfig) {\n      const args = value.get(\"args\");\n      for (const argKey in funcConfig.args) {\n        const argConfig = funcConfig.args[argKey];\n        const argVal = args ? args.get(argKey) : undefined;\n        // const argDef = getFieldConfig(config, argConfig);\n        const argValue = argVal ? argVal.get(\"value\") : undefined;\n        const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n        if (argValue == undefined && argConfig?.defaultValue === undefined && !argConfig?.isOptional) {\n          // arg is not completed\n          return false;\n        }\n        if (argValue != undefined) {\n          if (!isCompletedValue(argValue, argValueSrc, config, liteCheck)) {\n            // arg is complex and is not completed\n            return false;\n          }\n        }\n      }\n      // all args are completed\n      return true;\n    }\n  }\n  return value != undefined;\n};\n\n/**\n * @param {*} value\n * @param {string} valueSrc - 'value' | 'field' | 'func'\n * @param {object} config\n * @return {* | undefined} - undefined if func value is not complete (missing required arg vals); can return completed value != value\n */\nexport const completeValue = (value, valueSrc, config) => {\n  if (valueSrc == \"func\")\n    return completeFuncValue(value, config);\n  else\n    return value;\n};\n","import JL from \"json-logic-js\";\nimport moment from \"moment\";\n\nexport function applyJsonLogic(logic, data) {\n  return JL.apply(logic, data);\n}\n\nfunction addJsonLogicOperation(name, op) {\n  return JL.add_operation(name, op);\n}\n\nexport const customJsonLogicOperations = {\n  CALL: (fn, ctx, ...args) => (fn.call(ctx, ...args)),\n  JSX: (type, props) => ({type, props}),\n  mergeObjects: (obj1, obj2) => ({...obj1, ...obj2}),\n  fromEntries: (entries) => Object.fromEntries(entries),\n  strlen: (str) => (str?.length || 0),\n  regexTest: (str, pattern, flags) => str?.match(new RegExp(pattern, flags)) != null,\n  now: () => new Date(),\n  date_add: (date, val, dim) => { return moment(date).add(val, dim).toDate(); },\n  toLowerCase: (str) => str.toLowerCase(),\n  toUpperCase: (str) => str.toUpperCase(),\n};\n\nexport function addRequiredJsonLogicOperations() {\n  for (let k in customJsonLogicOperations) {\n    addJsonLogicOperation(k, customJsonLogicOperations[k]);\n  }\n}\n","import merge from \"lodash/merge\";\nimport pick from \"lodash/pick\";\nimport {isJsonLogic, isJSX, isDirtyJSX, cleanJSX, shallowEqual} from \"./stuff\";\nimport clone from \"clone\";\nimport JL from \"json-logic-js\";\nimport { addRequiredJsonLogicOperations, applyJsonLogic } from \"./jsonLogic\";\nimport { BasicFuncs } from \"..\";\nimport { getFieldRawConfig } from \"./configUtils\";\n\n// Add new operations for JsonLogic\naddRequiredJsonLogicOperations();\n\nexport { isJSX, isDirtyJSX, cleanJSX, applyJsonLogic };\n\nfunction applyJsonLogicWithPath(logic, data, path) {\n  let ret;\n  try {\n    ret = JL.apply(logic, data);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\nfunction callContextFn(_this, fn, args, path) {\n  let ret;\n  try {\n    ret = fn.call(_this, ...args);\n  } catch (e) {\n    e.message = `${path.join(\".\")} :: ${e.message}`;\n    throw e;\n  }\n  return ret;\n}\n\nexport const configKeys = [\"conjunctions\", \"fields\", \"types\", \"operators\", \"widgets\", \"settings\", \"funcs\", \"ctx\"];\n\n// type: \n//  x - iterate (with nesting `subfields`)\n//  \"r\" - RenderedReactElement\n//    Will be compiled with renderReactElement() into React element rendered with `React.createElement` (`ctx.RCE`)\n//  \"rf\" - JsonLogicFunction/string to render React\n//    JL data is { props, ctx }\n//    Should return {type, props} or string, where type or string - React component\n//    Can use { JSX: [\"SomeComponent\", {var: \"props\"}] } or just return \"SomeComponent\"\n//    Returned component will be searched in ctx.components/ctx.W/ctx.O, see getReactComponentFromCtx()\n//    Will be compiled with compileJsonLogicReact() into function with args (props, ctx) that will return renderReactElement()\n//  \"f\" - JsonLogicFunction/string\n//    JL data is { args, ctx } plus named args defined in `args` inside `compileMeta`\n//    Can use { CALL: [ {var: \"ctx.someFunc\"}, null, {var: \"args[0]\" }] } \n//    If string is passed, it's a path to function in ctx (with dot notation)\n//    Will be compiled with compileJsonLogic() into function with any args and `this` should be `ctx`\n\nconst compileMetaFieldSettings = {\n  asyncFetch: { type: \"f\", args: [\"search\", \"offset\"] },\n  labelYes: { type: \"r\" },\n  labelNo: { type: \"r\" },\n  marks: { type: \"r\", isArr: true },\n  validateValue: { type: \"f\", args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"] },\n};\n\nconst compileMetaWidget = {\n  ...compileMetaFieldSettings,\n  factory: { type: \"rf\" },\n  formatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"isForDisplay\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  sqlFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  spelFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\", \"rightFieldDef\"] },\n  spelImportValue: { type: \"f\", args: [\"val\", \"wgtDef\", \"args\"] },\n  mongoFormatValue: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  elasticSearchFormatValue: { type: \"f\", args: [\"queryType\", \"val\", \"op\", \"field\", \"config\"] },\n  jsonLogic: { type: \"f\", args: [\"val\", \"fieldDef\", \"wgtDef\", \"op\", \"opDef\"] },\n  validateValue: { type: \"f\", args: [\"val\", \"fieldSettings\", \"op\", \"opDef\", \"rightFieldDef\"] }, // obsolete\n  toJS: { type: \"f\", args: [\"val\"] },\n};\n\nconst compileMetaOperator = {\n  options: { // proximity\n    factory: { type: \"rf\" },\n  },\n  formatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"isForDisplay\", \"fieldDef\"] },\n  mongoFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"useExpr\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  sqlFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  spelFormatOp: { type: \"f\", args: [\"field\", \"op\", \"vals\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"field\", \"op\", \"vals\", \"opDef\", \"operatorOptions\", \"fieldDef\"] },\n  elasticSearchQueryType: { type: \"f\", ignore: \"string\", args: [\"valueType\"] },\n  textSeparators: { type: \"r\", isArr: true },\n};\n\nconst compileMetaConjunction = {\n  formatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"isForDisplay\"] },\n  sqlFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\"] },\n  spelFormatConj: { type: \"f\", args: [\"children\", \"conj\", \"not\", \"omitBrackets\"] },\n};\n\nconst compileMetaWidgetForType = {\n  widgetProps: compileMetaWidget,\n  opProps: compileMetaOperator\n};\n\nconst compileMetaFunc = {\n  renderBrackets: { type: \"r\", isArr: true },\n  renderSeps: { type: \"r\", isArr: true },\n\n  jsonLogic: { type: \"f\", ignore: \"string\", args: [\"formattedArgs\"] },\n  jsonLogicImport: { type: \"f\", args: [\"val\"] },\n  spelImport: { type: \"f\", args: [\"spel\"] },\n  formatFunc: { type: \"f\", args: [\"formattedArgs\", \"isForDisplay\"] },\n  sqlFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n  mongoFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n  spelFormatFunc: { type: \"f\", args: [\"formattedArgs\"] },\n};\n\nconst compileMetaSettings = {\n  locale: {\n    mui: { type: \"f\", args: [], invokeWith: [], ignore: \"jl\" },\n  },\n\n  canCompareFieldWithField: { type: \"f\", args: [\"leftField\", \"leftFieldConfig\", \"rightField\", \"rightFieldConfig\", \"op\"] },\n  formatReverse: { type: \"f\", args: [\"q\", \"op\", \"reversedOp\", \"operatorDefinition\", \"revOperatorDefinition\", \"isForDisplay\"] },\n  sqlFormatReverse: { type: \"f\", args: [\"q\"] },\n  spelFormatReverse: { type: \"f\", args: [\"q\"] },\n  formatField: { type: \"f\", args: [\"field\", \"parts\", \"label2\", \"fieldDefinition\", \"config\", \"isForDisplay\"] },\n  formatSpelField: { type: \"f\", args: [\"field\", \"parentField\", \"parts\", \"partsExt\", \"fieldDefinition\", \"config\"] },\n  formatAggr: { type: \"f\", args: [\"whereStr\", \"aggrField\", \"operator\", \"value\", \"valueSrc\", \"valueType\", \"opDef\", \"operatorOptions\", \"isForDisplay\", \"aggrFieldDef\"] },\n  \n  normalizeListValues: { type: \"f\", args: [\"listValues\", \"type\", \"fieldSettings\"] },\n\n  renderConfirm: { type: \"f\", args: [\"props\"] },\n  useConfirm: { type: \"f\", args: [] },\n\n  renderField: { type: \"rf\" },\n  renderOperator: { type: \"rf\" },\n  renderFunc: { type: \"rf\" },\n  renderConjs: { type: \"rf\" },\n  renderButton: { type: \"rf\" },\n  renderButtonGroup: { type: \"rf\" },\n  renderValueSources: { type: \"rf\" },\n  renderFieldSources: { type: \"rf\" },\n  renderProvider: { type: \"rf\" },\n  renderSwitch: { type: \"rf\" },\n  renderSwitchPrefix: { type: \"r\" },\n\n  renderItem: { type: \"rf\" },\n  renderBeforeWidget: { type: \"rf\" },\n  renderAfterWidget: { type: \"rf\" },\n  renderBeforeActions: { type: \"rf\" },\n  renderAfterActions: { type: \"rf\" },\n  renderRuleError: { type: \"rf\" },\n};\n\nconst compileMeta = {\n  fields: {\n    x: {\n      fieldSettings: compileMetaFieldSettings,\n      widgets: {\n        x: compileMetaWidgetForType\n      },\n      mainWidgetProps: compileMetaWidget\n    },\n  },\n  widgets: {\n    x: compileMetaWidget\n  },\n  conjunctions: {\n    x: compileMetaConjunction\n  },\n  operators: {\n    x: compileMetaOperator\n  },\n  types: {\n    x: {\n      widgets: {\n        x: compileMetaWidgetForType\n      }\n    }\n  },\n  funcs: {\n    x: compileMetaFunc\n  },\n  settings: compileMetaSettings,\n};\n\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\n/////////////\n\nexport const compressConfig = (config, baseConfig) => {\n  if (config.__fieldNames) {\n    throw new Error(\"Don't apply `compressConfig()` to extended config\");\n  }\n  let zipConfig = pick(config, configKeys);\n  delete zipConfig.ctx;\n\n  const _clean = (target, base, path, meta) => {\n    if (isObject(target)) {\n      if (isDirtyJSX(target)) {\n        target = cleanJSX(target);\n      }\n      if (path[0] === \"funcs\" && !base) {\n        const funcKey = path[path.length - 1];\n        // todo: if there will be change in `BasicFuncs` when funcs can be nested, need to chnage code to find `base`\n        base = getFieldRawConfig({\n          funcs: meta.BasicFuncs\n        }, funcKey, \"funcs\", \"subfields\") || undefined;\n        if (base) {\n          target[\"$$key\"] = funcKey;\n        }\n      }\n      if (base !== undefined && isObject(base)) {\n        for (let k in base) {\n          if (Object.prototype.hasOwnProperty.call(base, k)) {\n            if (!Object.keys(target).includes(k) || target[k] === undefined && base[k] !== undefined) {\n              // deleted in target\n              target[k] = \"$$deleted\";\n            } else {\n              target[k] = _clean(target[k], base[k], [...path, k], meta);\n              if (target[k] === undefined) {\n                delete target[k];\n              }\n            }\n          }\n        }\n      }\n      for (let k in target) {\n        if (Object.prototype.hasOwnProperty.call(target, k)) {\n          if (!base || !Object.keys(base).includes(k)) {\n            // new in target\n            target[k] = _clean(target[k], base?.[k], [...path, k], meta);\n          }\n          if (target[k] === undefined) {\n            delete target[k];\n          }\n        }\n      }\n      if (Object.keys(target).length === 0) {\n        target = undefined;\n      }\n    } else if (Array.isArray(target)) {\n      // don't deep compare arrays, but allow clean JSX inside array\n      target.forEach((val, ind) => {\n        target[ind] = _clean(target[ind], undefined, [...path, ind], meta);\n      });\n    }\n\n    if (base !== undefined && shallowEqual(target, base, true)) {\n      return undefined;\n    }\n\n    if (typeof target === \"function\") {\n      throw new Error(`compressConfig: function at ${path.join(\".\")} should be converted to JsonLogic`);\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // ignore\n    } else if (rootKey === \"fields\") {\n      // just copy\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], {}, [rootKey]);\n    } else if (rootKey === \"funcs\") {\n      // leave only diff for every used func\n      zipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      for (let k in zipConfig[rootKey]) {\n        _clean(zipConfig[rootKey][k], null, [rootKey, k], {\n          BasicFuncs\n        });\n      }\n    } else {\n      // leave only diff\n      zipConfig[rootKey] = clone(zipConfig[rootKey]);\n      _clean(zipConfig[rootKey], baseConfig[rootKey], [rootKey]);\n    }\n  }\n\n  return zipConfig;\n};\n\n\nexport const decompressConfig = (zipConfig, baseConfig, ctx) => {\n  if (!zipConfig.settings.useConfigCompress) {\n    throw new Error(\"Please enable `useConfigCompress` in config settings to use decompressConfig()\");\n  }\n  let unzipConfig = {};\n\n  const _mergeDeep = (target, mixin, path) => {\n    if (isObject(mixin)) {\n      if (!isObject(target)) {\n        target = {};\n      }\n      for (let k in mixin) {\n        if (Object.prototype.hasOwnProperty.call(mixin, k)) {\n          if (mixin[k] === \"$$deleted\") {\n            delete target[k];\n          } else {\n            target[k] = _mergeDeep(target[k], mixin[k], [...path, k]);\n          }\n        }\n      }\n    } else if (Array.isArray(mixin)) {\n      // don't merge arrays, just replace\n      target = clone(mixin);\n    } else {\n      target = mixin;\n    }\n\n    return target;\n  };\n\n  const _resolveAndMergeDeep = (target, path, meta) => {\n    // try to resolve by $$key and merge\n    let resolved = false;\n    if (isObject(target) && Object.prototype.hasOwnProperty.call(target, \"$$key\") && target[\"$$key\"]) {\n      const func = getFieldRawConfig({\n        funcs: meta.BasicFuncs\n      }, target[\"$$key\"], \"funcs\", \"subfields\");\n      if (func) {\n        // deep merge func <- zip\n        delete target[\"$$key\"];\n        target = _mergeDeep(clone(func), target, path);\n        resolved = true;\n      } else {\n        throw new Error(`decompressConfig: basic function not found by key ${target[\"$$key\"]} at ${path.join(\".\")}`);\n      }\n    }\n\n    if (!resolved) {\n      if (isObject(target)) {\n        // loop through object to find refs ($$key)\n        for (let k in target) {\n          if (Object.prototype.hasOwnProperty.call(target, k)) {\n            target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n          }\n        }\n      } else if (Array.isArray(target)) {\n        // also loop through array to find refs ($$key)\n        for (const k of target) {\n          target[k] = _resolveAndMergeDeep(target[k], [...path, k], meta);\n        }\n      }\n    }\n\n    return target;\n  };\n\n  for (const rootKey of configKeys) {\n    if (rootKey === \"ctx\") {\n      // simple deep merge\n      unzipConfig[rootKey] = merge({}, baseConfig.ctx || {}, ctx || {});\n    } else if (rootKey === \"funcs\") {\n      // use $$key to pick funcs from BasicFuncs\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n      _resolveAndMergeDeep(unzipConfig[rootKey], [rootKey], {\n        BasicFuncs\n      });\n    } else if (rootKey === \"fields\") {\n      // just copy\n      unzipConfig[rootKey] = clone(zipConfig[rootKey] || {});\n    } else {\n      // deep merge base <- zip\n      unzipConfig[rootKey] = clone(baseConfig[rootKey] || {});\n      _mergeDeep(unzipConfig[rootKey], zipConfig[rootKey] || {}, [rootKey]);\n    }\n  }\n\n  return unzipConfig;\n};\n\n/////////////\n\nexport const compileConfig = (config) => {\n  if (config.__compliled) {\n    return config;\n  }\n\n  config = clone(config);\n\n  const opts = {\n    ctx: config.ctx,\n  };\n\n  const logs = [];\n  _compileConfigParts(config, config, opts, compileMeta, logs);\n  //console.log(logs.join(\"\\n\"));\n\n  Object.defineProperty(config, \"__compliled\", {\n    enumerable: false,\n    writable: false,\n    value: true\n  });\n\n  return config;\n};\n\nfunction _compileConfigParts(config, subconfig, opts, meta, logs, path = []) {\n  if (!subconfig) return;\n  const isRoot = !path.length;\n  for (const k in meta) {\n    const submeta = meta[k];\n    let newPath = k === \"x\" ? path : [...path, k];\n    // if (isRoot) {\n    //   //logs.push(`Cloned ${newPath.join(\".\")}`);\n    //   config[k] = clone(config[k]);\n    // }\n    if (submeta.type === \"r\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      if (submeta.isArr) {\n        for (const ind in val) {\n          const newVal = renderReactElement(val[ind], opts, [...newPath, ind]);\n          if (newVal !== val[ind]) {\n            logs.push(`Compiled ${newPath.join(\".\")}[${ind}]`);\n            val[ind] = newVal;\n          }\n        }\n      } else {\n        const newVal = renderReactElement(val, opts, newPath, undefined);\n        if (newVal !== val) {\n          logs.push(`Compiled R ${newPath.join(\".\")}`);\n          targetObj[k] = newVal;\n        }\n      }\n    } else if (submeta.type === \"rf\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      const newVal = compileJsonLogicReact(val, opts, newPath, submeta.ignore);\n      if (newVal !== val) {\n        logs.push(`Compiled JL-RF ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (submeta.type === \"f\") {\n      const targetObj = subconfig;\n      const val = targetObj[k];\n      let newVal = compileJsonLogic(val, opts, newPath, submeta.args, submeta.ignore);\n      if (submeta.invokeWith && newVal && typeof newVal === \"function\") {\n        newVal = newVal.call(null, ...submeta.invokeWith);\n      }\n      if (newVal !== val) {\n        logs.push(`Compiled JL-F ${newPath.join(\".\")}`);\n        targetObj[k] = newVal;\n      }\n    } else if (k === \"x\") {\n      for (const field in subconfig) {\n        newPath = [...path, field];\n        const def = subconfig[field];\n        _compileConfigParts(config, def, opts, submeta, logs, newPath);\n        if (def.subfields) {\n          // tip: need to pass `meta`, not `submeta`\n          _compileConfigParts(config, def.subfields, opts, meta, logs, newPath);\n        }\n      }\n    } else {\n      const def = subconfig[k];\n      _compileConfigParts(config, def, opts, submeta, logs, newPath);\n    }\n  }\n}\n\nfunction compileJsonLogicReact(jl, opts, path, ignore = undefined) {\n  if (isJsonLogic(jl)) {\n    return function(props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = {\n        props, ctx,\n      };\n      let re = applyJsonLogicWithPath(jl, data, path);\n      if (typeof re === \"string\") {\n        re = {\n          type: re,\n          props\n        };\n      }\n      \n      const ret = renderReactElement(re, {ctx}, path);\n      return ret;\n    };\n  } else if (typeof jl === \"string\") {\n    return function(props, ctx) {\n      ctx = ctx || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, [props, ctx], path);\n      } else {\n        const re = {\n          type: jl,\n          props\n        };\n        const ret = renderReactElement(re, {ctx}, path);\n        return ret;\n      }\n    };\n  }\n  return jl;\n}\n\nfunction compileJsonLogic(jl, opts, path, argNames, ignore = undefined) {\n  if (isJsonLogic(jl) && ignore !== \"jl\") {\n    return function(...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const data = (argNames || []).reduce((acc, k, i) => ({...acc, [k]: args[i]}), {\n        args, ctx\n      });\n      const ret = applyJsonLogicWithPath(jl, data, path);\n      return ret;\n    }.bind(opts?.ctx);\n  } else if (typeof jl === \"string\" && ignore !== \"string\") {\n    return function(...args) {\n      const ctx = this || opts?.ctx; // can use context compile-time if not passed at runtime\n      const fn = jl.split(\".\").reduce((o, k) => o?.[k], ctx);\n      if (fn) {\n        return callContextFn(this, fn, args, path);\n      } else {\n        throw new Error(`${path.join(\".\")} :: Function ${jl} is not found in ctx`);\n      }\n    }.bind(opts?.ctx);\n  }\n  return jl;\n}\n\n\n\nfunction getReactComponentFromCtx(name, ctx) {\n  return ctx?.components?.[name] || ctx.W[name] || ctx.O[name];\n}\n\nfunction renderReactElement(jsx, opts, path, key = undefined) {\n  if (isJSX(jsx)) {\n    let { type, props } = jsx;\n    if (typeof type !== \"string\") {\n      throw new Error(`renderReactElement for ${path.join(\".\")}: type should be string`);\n    }\n    const Cmp = getReactComponentFromCtx(type, opts.ctx) || type.toLowerCase();\n    let children;\n    if (key !== undefined) {\n      props = { ...props, key };\n    }\n    if (props?.children) {\n      children = renderReactElement(props.children, opts, path);\n      props = { ...props, children };\n    }\n    const res = opts.ctx.RCE(Cmp, props);\n    return res;\n  } else if (jsx instanceof Array) {\n    return jsx.map((el, i) => renderReactElement(el, opts, path, \"\"+i));\n  }\n  return jsx;\n}\n","import merge from \"lodash/merge\";\nimport pick from \"lodash/pick\";\nimport uuid from \"../utils/uuid\";\nimport mergeWith from \"lodash/mergeWith\";\nimport {settings as defaultSettings} from \"../config/default\";\nimport moment from \"moment\";\nimport {mergeArraysSmart, logger, widgetDefKeysToOmit, deepFreeze} from \"./stuff\";\nimport {getWidgetForFieldOp} from \"./ruleUtils\";\nimport clone from \"clone\";\n\nimport { compileConfig } from \"./configSerialize\";\nexport * from \"./configSerialize\";\n\n/////////////\n\nexport const extendConfig = (config, configId, canCompile = true) => {\n  //operators, defaultOperator - merge\n  //widgetProps (including valueLabel, valuePlaceholder, hideOperator, operatorInlineLabel) - concrete by widget\n\n  if (config.__configId) {\n    return config;\n  }\n\n  // Clone (and compile if need)\n  if (canCompile && config.settings.useConfigCompress) {\n    if (config.__compliled) {\n      // already compiled\n      config = clone(config);\n    } else {\n      // will be cloned and compiled\n      config = compileConfig(config);\n    }\n  } else {\n    config = clone(config);\n  }\n\n  config.settings = mergeWith({}, defaultSettings, config.settings, mergeCustomizerNoArrays);\n\n  config.__fieldsCntByType = {};\n  config.__funcsCntByType = {};\n  config.__fieldNames = {};\n\n  _extendTypesConfig(config.types, config);\n  _extendFieldsConfig(config.fields, config);\n  _extendFuncArgsConfig(config.funcs, config);\n\n  const momentLocale = config.settings.locale.moment;\n  if (momentLocale) {\n    moment.locale(momentLocale);\n  }\n\n  Object.defineProperty(config, \"__configId\", {\n    enumerable: false,\n    writable: false,\n    value: configId || uuid()\n  });\n\n  deepFreeze(config);\n\n  return config;\n};\n\nfunction _extendTypesConfig(typesConfig, config) {\n  for (let type in typesConfig) {\n    let typeConfig = typesConfig[type];\n    _extendTypeConfig(type, typeConfig, config);\n  }\n}\n\nfunction _extendTypeConfig(type, typeConfig, config) {\n  let operators = null, defaultOperator = null;\n  typeConfig.mainWidget = typeConfig.mainWidget || Object.keys(typeConfig.widgets).filter(w => w != \"field\" && w != \"func\")[0];\n  for (let widget in typeConfig.widgets) {\n    let typeWidgetConfig = typeConfig.widgets[widget];\n    if (typeWidgetConfig.operators) {\n      let typeWidgetOperators = typeWidgetConfig.operators;\n      if (typeConfig.excludeOperators) {\n        typeWidgetOperators = typeWidgetOperators.filter(op => !typeConfig.excludeOperators.includes(op));\n      }\n      operators = mergeArraysSmart(operators, typeWidgetOperators);\n    }\n    if (typeWidgetConfig.defaultOperator)\n      defaultOperator = typeWidgetConfig.defaultOperator;\n    if (widget == typeConfig.mainWidget) {\n      typeWidgetConfig = merge({}, {widgetProps: typeConfig.mainWidgetProps || {}}, typeWidgetConfig);\n    }\n    typeConfig.widgets[widget] = typeWidgetConfig;\n  }\n  if (!typeConfig.valueSources)\n    typeConfig.valueSources = Object.keys(config.settings.valueSourcesInfo);\n  for (let valueSrc of typeConfig.valueSources) {\n    if (valueSrc != \"value\" && !typeConfig.widgets[valueSrc]) {\n      typeConfig.widgets[valueSrc] = {\n      };\n    }\n  }\n  if (!typeConfig.operators && operators)\n    typeConfig.operators = Array.from(new Set(operators)); //unique\n  if (!typeConfig.defaultOperator && defaultOperator)\n    typeConfig.defaultOperator = defaultOperator;\n}\n\nfunction _extendFieldsConfig(subconfig, config, path = []) {\n  for (let field in subconfig) {\n    _extendFieldConfig(subconfig[field], config, [...path, field]);\n    if (subconfig[field].subfields) {\n      _extendFieldsConfig(subconfig[field].subfields, config, [...path, field]);\n    }\n  }\n}\n\nfunction _extendFuncArgsConfig(subconfig, config, path = []) {\n  if (!subconfig) return;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  for (let funcKey in subconfig) {\n    const funcPath = [...path, funcKey].join(fieldSeparator);\n    const funcDef = subconfig[funcKey];\n    if (funcDef.returnType) {\n      if (!config.__funcsCntByType[funcDef.returnType])\n        config.__funcsCntByType[funcDef.returnType] = 0;\n      config.__funcsCntByType[funcDef.returnType]++;\n    }\n    for (let argKey in funcDef.args) {\n      _extendFieldConfig(funcDef.args[argKey], config, null, true);\n    }\n\n    // isOptional can be only in the end\n    if (funcDef.args) {\n      const argKeys = Object.keys(funcDef.args);\n      let tmpIsOptional = true;\n      for (const argKey of argKeys.reverse()) {\n        const argDef = funcDef.args[argKey];\n        if (!tmpIsOptional && argDef.isOptional) {\n          logger.info(`Arg ${argKey} for func ${funcPath} can't be optional`);\n          delete argDef.isOptional;\n        }\n        if (!argDef.isOptional)\n          tmpIsOptional = false;\n      }\n    }\n\n    if (funcDef.subfields) {\n      _extendFuncArgsConfig(funcDef.subfields, config, [...path, funcKey]);\n    }\n  }\n}\n\nfunction _extendFieldConfig(fieldConfig, config, path = null, isFuncArg = false) {\n  let operators = null, defaultOperator = null;\n  const typeConfig = config.types[fieldConfig.type];\n  const excludeOperatorsForField = fieldConfig.excludeOperators || [];\n  if (fieldConfig.type != \"!struct\" && fieldConfig.type != \"!group\") {\n    const keysToPutInFieldSettings = [\"listValues\", \"treeValues\", \"allowCustomValues\", \"validateValue\"];\n    if (!fieldConfig.fieldSettings)\n      fieldConfig.fieldSettings = {};\n    for (const k of keysToPutInFieldSettings) {\n      if (fieldConfig[k]) {\n        fieldConfig.fieldSettings[k] = fieldConfig[k];\n        delete fieldConfig[k];\n      }\n    }\n\n    // normalize listValues\n    if (fieldConfig.fieldSettings.listValues) {\n      if (config.settings.normalizeListValues) {\n        fieldConfig.fieldSettings.listValues = config.settings.normalizeListValues.call(\n          config.ctx,\n          fieldConfig.fieldSettings.listValues, fieldConfig.type, fieldConfig.fieldSettings\n        );\n      }\n    }\n    // same for treeValues\n    if (fieldConfig.fieldSettings.treeValues) {\n      if (config.settings.normalizeListValues) {\n        fieldConfig.fieldSettings.treeValues = config.settings.normalizeListValues.call(\n          config.ctx,\n          fieldConfig.fieldSettings.treeValues, fieldConfig.type, fieldConfig.fieldSettings\n        );\n      }\n    }\n\n    if (!typeConfig) {\n      //console.warn(`No type config for ${fieldConfig.type}`);\n      fieldConfig.disabled = true;\n      return;\n    }\n    if (!isFuncArg) {\n      if (!config.__fieldsCntByType[fieldConfig.type])\n        config.__fieldsCntByType[fieldConfig.type] = 0;\n      config.__fieldsCntByType[fieldConfig.type]++;\n    }\n\n    if (!fieldConfig.widgets)\n      fieldConfig.widgets = {};\n    if (isFuncArg)\n      fieldConfig._isFuncArg = true;\n    fieldConfig.mainWidget = fieldConfig.mainWidget || typeConfig.mainWidget;\n    fieldConfig.valueSources = fieldConfig.valueSources || typeConfig.valueSources;\n    const excludeOperatorsForType = typeConfig.excludeOperators || [];\n    for (let widget in typeConfig.widgets) {\n      let fieldWidgetConfig = fieldConfig.widgets[widget] || {};\n      const typeWidgetConfig = typeConfig.widgets[widget] || {};\n      if (!isFuncArg) {\n        //todo: why I've excluded isFuncArg ?\n        const excludeOperators = [...excludeOperatorsForField, ...excludeOperatorsForType];\n        const shouldIncludeOperators = fieldConfig.preferWidgets\n          && (widget == \"field\" || fieldConfig.preferWidgets.includes(widget))\n          || excludeOperators.length > 0;\n        if (fieldWidgetConfig.operators) {\n          const addOperators = fieldWidgetConfig.operators.filter(o => !excludeOperators.includes(o));\n          operators = [...(operators || []), ...addOperators];\n        } else if (shouldIncludeOperators && typeWidgetConfig.operators) {\n          const addOperators = typeWidgetConfig.operators.filter(o => !excludeOperators.includes(o));\n          operators = [...(operators || []), ...addOperators];\n        }\n        if (fieldWidgetConfig.defaultOperator)\n          defaultOperator = fieldWidgetConfig.defaultOperator;\n      }\n\n      if (widget == fieldConfig.mainWidget) {\n        fieldWidgetConfig = merge({}, {widgetProps: fieldConfig.mainWidgetProps || {}}, fieldWidgetConfig);\n      }\n      fieldConfig.widgets[widget] = fieldWidgetConfig;\n    }\n    if (!isFuncArg) {\n      if (!fieldConfig.operators && operators)\n        fieldConfig.operators = Array.from(new Set(operators));\n      fieldConfig._origDefaultOperator = fieldConfig.defaultOperator;\n      if (!fieldConfig.defaultOperator && defaultOperator)\n        fieldConfig.defaultOperator = defaultOperator;\n    }\n  }\n\n  const { fieldName, inGroup } = computeFieldName(config, path);\n  if (fieldName) {\n    fieldConfig.fieldName = fieldName;\n    if (!config.__fieldNames[fieldName])\n      config.__fieldNames[fieldName] = [];\n    config.__fieldNames[fieldName].push({fullPath: path, inGroup});\n  }\n}\n\n/////////////\n\nconst mergeCustomizerNoArrays = (objValue, srcValue, _key, _object, _source, _stack) => {\n  if (Array.isArray(objValue)) {\n    return srcValue;\n  }\n};\n\nexport function* iterateFuncs(config) {\n  yield* _iterateFields(config, config.funcs || {}, []);\n}\n\nexport function* iterateFields(config) {\n  yield* _iterateFields(config, config.fields || {}, []);\n}\n\nfunction* _iterateFields(config, subfields, path, subfieldsKey = \"subfields\") {\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  for (const fieldKey in subfields) {\n    const fieldConfig = subfields[fieldKey];\n    if (fieldConfig[subfieldsKey]) {\n      yield* _iterateFields(config, fieldConfig[subfieldsKey], [...path, fieldKey], subfieldsKey);\n    } else {\n      yield [\n        [...path, fieldKey].join(fieldSeparator),\n        fieldConfig\n      ];\n    }\n  }\n}\n\nexport const getFieldRawConfig = (config, field, fieldsKey = \"fields\", subfieldsKey = \"subfields\") => {\n  if (!field)\n    return null;\n  if (field == \"!case_value\") {\n    return {\n      type: \"case_value\",\n      mainWidget: \"case_value\",\n      widgets: {\n        \"case_value\": config.widgets[\"case_value\"]\n      }\n    };\n  }\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const parts = getFieldParts(field, config);\n  const targetFields = config[fieldsKey];\n  if (!targetFields)\n    return null;\n\n  let fields = targetFields;\n  let fieldConfig = null;\n  let path = [];\n  for (let i = 0 ; i < parts.length ; i++) {\n    const part = parts[i];\n    path.push(part);\n    const pathKey = path.join(fieldSeparator);\n    fieldConfig = fields[pathKey];\n    if (i < parts.length-1) {\n      if (fieldConfig && fieldConfig[subfieldsKey]) {\n        fields = fieldConfig[subfieldsKey];\n        path = [];\n      } else {\n        fieldConfig = null;\n      }\n    }\n  }\n\n  return fieldConfig;\n};\n\nconst computeFieldName = (config, path) => {\n  if (!path)\n    return {};\n  const fieldSeparator = config.settings.fieldSeparator;\n  const {computedPath, computed, inGroup} = [...path].reduce(({computedPath, computed, inGroup}, f, i, arr) => {\n    const fullPath = [...arr.slice(0, i), f];\n    const fConfig = getFieldRawConfig(config, fullPath);\n    if (fConfig?.type === \"!group\" && i < arr.length-1) {\n      // don't include group in final field name\n      inGroup = fullPath.join(fieldSeparator);\n      computedPath = [];\n    } else if (fConfig?.fieldName) {\n      // tip: fieldName overrides path !\n      computed = true;\n      computedPath = [fConfig.fieldName];\n    } else {\n      computedPath = [...computedPath, f];\n    }\n    return {computedPath, computed, inGroup};\n  }, {computedPath: [], computed: false, inGroup: undefined});\n  return computed ? {\n    fieldName: computedPath.join(fieldSeparator),\n    inGroup,\n  } : {};\n};\n\n// if `field` is alias (fieldName), convert to original full path\nexport const normalizeField = (config, field, parentField = null) => {\n  // tip: if parentField is present, field is not full path\n  const fieldSeparator = config.settings.fieldSeparator;\n  const path = [\n    parentField,\n    ...field.split(fieldSeparator)\n  ].filter(f => f != null);\n  const findStr = field;\n  const normalizedPath = config.__fieldNames[findStr]?.find?.(({inGroup}) => {\n    if (inGroup)\n      return parentField?.startsWith(inGroup);\n    return true;\n  })?.fullPath;\n  return (normalizedPath || path).join(fieldSeparator);\n};\n\nexport const getFuncSignature = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null;\n  const {\n    returnType,\n    args,\n  } = funcConfig;\n  const argsSignature = Object.fromEntries(Object.entries(args || {}).map(([k, v]) => {\n    const argSignature = pick(v, [\n      \"type\",\n      \"valueSources\",\n      \"defaultValue\",\n      \"fieldSettings\",\n      // \"asyncListValues\", // not supported\n      \"isOptional\",\n    ]);\n    return [k, argSignature];\n  }));\n  const signature = {\n    returnType,\n    args: argsSignature,\n  };\n  return signature;\n};\n\nexport const getFuncConfig = (config, func) => {\n  if (!func)\n    return null;\n  const funcConfig = getFieldRawConfig(config, func, \"funcs\", \"subfields\");\n  if (!funcConfig)\n    return null; //throw new Error(\"Can't find func \" + func + \", please check your config\");\n  const typeConfig = config.types[funcConfig.returnType] || {};\n  return { ...typeConfig, ...funcConfig, type: funcConfig.returnType || funcConfig.type};\n};\n\nexport const getFuncArgConfig = (config, funcKey, argKey) => {\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig)\n    return null; //throw new Error(`Can't find func ${funcKey}, please check your config`);\n  const argConfig = funcConfig.args && funcConfig.args[argKey] || null;\n  if (!argConfig)\n    return null; //throw new Error(`Can't find arg ${argKey} for func ${funcKey}, please check your config`);\n\n  //merge, but don't merge operators (rewrite instead)\n  const typeConfig = config.types[argConfig.type] || {};\n  let ret = mergeWith({}, typeConfig, argConfig || {}, mergeCustomizerNoArrays);\n\n  return ret;\n};\n\nexport const isFieldDescendantOfField = (field, parentField, config = null) => {\n  if (!parentField) return false;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  const path = getFieldPath(field, config);\n  const parentPath = getFieldPath(parentField, config);\n  return path.startsWith(parentPath + fieldSeparator);\n};\n\nexport const getFieldPath = (field, config = null) => {\n  if (typeof field === \"string\")\n    return field;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  return getFieldParts(field, config).join(fieldSeparator);\n};\n\nexport const getFieldParts = (field, config = null) => {\n  if (!field)\n    return [];\n  if (Array.isArray(field))\n    return field;\n  const fieldSeparator = config?.settings?.fieldSeparator || \".\";\n  if (field?.func) {\n    return Array.isArray(field.func) ? field.func : field.func.split(fieldSeparator);\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    return field?.get?.(\"func\").split(fieldSeparator);\n  }\n  return field?.split?.(fieldSeparator) || [];\n};\n\nexport const getFieldPathParts = (field, config, onlyKeys = false) => {\n  if (!field)\n    return null;\n  const fieldSeparator = config.settings.fieldSeparator;\n  const parts = getFieldParts(field, config);\n  if (onlyKeys)\n    return parts;\n  else\n    return parts\n      .map((_curr, ind, arr) => arr.slice(0, ind+1))\n      .map((parts) => parts.join(fieldSeparator));\n};\n\nexport const getFieldSrc = (field) => {\n  if (!field)\n    return null;\n  if (typeof field == \"object\") {\n    if (!field.func && !!field.type) {\n      // it's already a config\n      return \"field\";\n    }\n    if (field.func) {\n      if (field.func && field.arg) {\n        // it's func arg\n        return null;\n      } else {\n        // it's field func\n        return \"func\";\n      }\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return null;\n    } else {\n      // it's field func\n      return \"func\";\n    }\n  }\n  return \"field\";\n};\n\nexport const getFieldConfig = (config, field) => {\n  if (!field)\n    return null;\n  if (typeof field == \"object\") {\n    if (!field.func && !!field.type) {\n      // it's already a config\n      // if (!field.defaultOperator) {\n      //   // if not complete config..\n      //   // merge, but don't merge operators (rewrite instead)\n      //   const typeConfig = config.types[field.type] || {};\n      //   return mergeWith({}, typeConfig, field, mergeCustomizerNoArrays);\n      // }\n      return field;\n    }\n    if (field.func) {\n      if (field.func && field.arg) {\n        // it's func arg\n        return getFuncArgConfig(config, field.func, field.arg);\n      } else {\n        // it's field func\n        return getFuncConfig(config, field.func);\n      }\n    }\n  }\n  if (field?.get?.(\"func\")) { // immutable\n    if (field?.get(\"arg\")) {\n      // it's func arg\n      return getFuncArgConfig(config, field.get(\"func\"), field.get(\"arg\"));\n    } else {\n      // it's field func\n      return getFuncConfig(config, field.get(\"func\"));\n    }\n  }\n\n  const fieldConfig = getFieldRawConfig(config, field);\n  if (!fieldConfig)\n    return null; //throw new Error(\"Can't find field \" + field + \", please check your config\");\n\n  //merge, but don't merge operators (rewrite instead)\n  const typeConfig = config.types[fieldConfig.type] || {};\n  let ret = mergeWith({}, typeConfig, fieldConfig || {}, mergeCustomizerNoArrays);\n\n  return ret;\n};\n\nexport const getOperatorConfig = (config, operator, field = null) => {\n  if (!operator)\n    return null;\n  const opConfig = config.operators[operator];\n  if (field) {\n    const fieldConfig = getFieldConfig(config, field);\n    const widget = getWidgetForFieldOp(config, field, operator, null);\n    const widgetConfig = config.widgets[widget] || {};\n    const fieldWidgetConfig = (fieldConfig && fieldConfig.widgets ? fieldConfig.widgets[widget] : {}) || {};\n    const widgetOpProps = (widgetConfig.opProps || {})[operator];\n    const fieldWidgetOpProps = (fieldWidgetConfig.opProps || {})[operator];\n    const mergedOpConfig = merge({}, opConfig, widgetOpProps, fieldWidgetOpProps);\n    return mergedOpConfig;\n  } else {\n    return opConfig;\n  }\n};\n\nexport const getFieldWidgetConfig = (config, field, operator, widget = null, valueSrc = null) => {\n  if (!field)\n    return null;\n  if (!(operator || widget) && valueSrc != \"const\" && field != \"!case_value\")\n    return null;\n  const fieldConfig = getFieldConfig(config, field);\n  if (!widget)\n    widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n  const widgetConfig = config.widgets[widget] || {};\n  const fieldWidgetConfig = (fieldConfig && fieldConfig.widgets ? fieldConfig.widgets[widget] : {}) || {};\n  const fieldWidgetProps = (fieldWidgetConfig.widgetProps || {});\n  const valueFieldSettings = (valueSrc == \"value\" || !valueSrc) && fieldConfig && fieldConfig.fieldSettings || {}; // useful to take 'validateValue'\n  const mergedConfig = merge({}, widgetConfig, fieldWidgetProps, valueFieldSettings);\n  return mergedConfig;\n};\n\nexport const _widgetDefKeysToOmit = widgetDefKeysToOmit;\n","import {defaultValue} from \"../utils/stuff\";\nimport {getFieldConfig, getOperatorConfig} from \"../utils/configUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {formatFieldName} from \"../utils/ruleUtils\";\nimport {Map} from \"immutable\";\n\n/*\n Build tree to http://querybuilder.js.org/ like format\n\n Example:\n {\n    \"condition\": \"AND\",\n    \"rules\": [\n        {\n            \"id\": \"price\",\n            \"field\": \"price\",\n            \"type\": \"double\",\n            \"input\": \"text\",\n            \"operator\": \"less\",\n            \"value\": \"10.25\"\n        },\n        {\n            \"condition\": \"OR\",\n            \"rules\": [\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"2\"\n                },\n                {\n                    \"id\": \"category\",\n                    \"field\": \"category\",\n                    \"type\": \"integer\",\n                    \"input\": \"select\",\n                    \"operator\": \"equal\",\n                    \"value\": \"1\"\n                }\n            ]\n        }\n    ]\n }\n */\n\n\nexport const queryBuilderFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: []\n  };\n  const res = formatItem(item, config, meta);\n  if (!res)\n    return undefined;\n  return {\n    ...res, \n    ...meta\n  };\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") && children && children.size) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\");\n  const id = item.get(\"id\");\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const not = properties.get(\"not\");\n\n  const resultQuery = {\n    id,\n    rules: list.toList(),\n    condition: conjunction.toUpperCase(),\n    not,\n  };\n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const id = item.get(\"id\");\n\n  const operator = properties.get(\"operator\");\n  const options = properties.get(\"operatorOptions\");\n  let field = properties.get(\"field\");\n  let value = properties.get(\"value\");\n  let valueSrc = properties.get(\"valueSrc\");\n  let valueType = properties.get(\"valueType\");\n  const hasUndefinedValues = value.filter(v => v === undefined).size > 0;\n\n  if (field == null || operator == null || hasUndefinedValues)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const fieldType = fieldDefinition.type || \"undefined\";\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const typeConfig = config.types[fieldDefinition.type] || {};\n  const fieldName = formatFieldName(field, config, meta);\n\n  if (value.size < cardinality)\n    return undefined;\n\n  if (meta.usedFields.indexOf(field) == -1)\n    meta.usedFields.push(field);\n  value = value.toArray();\n  valueSrc = valueSrc.toArray();\n  valueType = valueType?.toArray() || [];\n  let values = [];\n  for (let i = 0 ; i < value.length ; i++) {\n    const val = {\n      type: valueType[i],\n      value: value[i],\n    };\n    values.push(val);\n    if (valueSrc[i] == \"field\") {\n      const secondField = value[i];\n      if (meta.usedFields.indexOf(secondField) == -1)\n        meta.usedFields.push(secondField);\n    }\n  }\n  let operatorOptions = options ? options.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n      \n  let ruleQuery = {\n    id,\n    fieldName,\n    type: fieldType,\n    input: typeConfig.mainWidget,\n    operator,\n  };\n  if (operatorOptions)\n    ruleQuery.operatorOptions = operatorOptions;\n  ruleQuery.values = values;\n  return ruleQuery;\n};\n","import {defaultValue, widgetDefKeysToOmit, opDefKeysToOmit} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, extendConfig, getFieldParts\n} from \"../utils/configUtils\";\nimport {getWidgetForFieldOp, formatFieldName, completeValue} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\n\n// http://jsonlogic.com/\n\n\nexport const jsonLogicFormat = (item, config) => {\n  //meta is mutable\n  let meta = {\n    usedFields: [],\n    errors: []\n  };\n  \n  const extendedConfig = extendConfig(config, undefined, false);\n  const logic = formatItem(item, extendedConfig, meta, true);\n  \n  // build empty data\n  const {errors, usedFields} = meta;\n  const {fieldSeparator} = extendedConfig.settings;\n  let data = {};\n  for (let ff of usedFields) {\n    //const fieldSrc = typeof ff === \"string\" ? \"field\" : \"func\";\n    const parts = getFieldParts(ff, config);\n    const def = getFieldConfig(extendedConfig, ff) || {};\n    let tmp = data;\n    for (let i = 0 ; i < parts.length ; i++) {\n      const p = parts[i];\n      const pdef = getFieldConfig(extendedConfig, parts.slice(0, i + 1)) || {};\n      if (i != parts.length - 1) {\n        if (pdef.type == \"!group\" && pdef.mode != \"struct\") {\n          if (!tmp[p])\n            tmp[p] = [{}];\n          tmp = tmp[p][0];\n        } else {\n          if (!tmp[p])\n            tmp[p] = {};\n          tmp = tmp[p];\n        }\n      } else {\n        if (!tmp[p])\n          tmp[p] = null; // can use def.type for sample values\n      }\n    }\n  }\n    \n  return {\n    errors,\n    logic,\n    data,\n  };\n};\n\n\nconst formatItem = (item, config, meta, isRoot, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const isLocked = properties.get(\"isLocked\");\n  const {lockedOp} = config.settings.jsonLogic;\n  let ret;\n  if (type === \"group\" || type === \"rule_group\") {\n    ret = formatGroup(item, config, meta, isRoot, parentField);\n  } else if (type === \"rule\") {\n    ret = formatRule(item, config, meta, parentField);\n  }\n  if (isLocked && ret && lockedOp) {\n    ret = { [lockedOp] : ret };\n  }\n  return ret;\n};\n\n\nconst formatGroup = (item, config, meta, isRoot, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n  const field = properties.get(\"field\");\n  \n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n  const conj = conjunctionDefinition.jsonLogicConj || conjunction.toLowerCase();\n  const not = properties.get(\"not\");\n  if (conj != \"and\" && conj != \"or\") {\n    meta.errors.push(`Conjunction ${conj} is not supported`);\n    return undefined;\n  }\n\n  const isRuleGroup = (type === \"rule_group\" && !isRoot);\n  const groupField = isRuleGroup && mode != \"struct\" ? field : parentField;\n  const groupOperator = properties.get(\"operator\");\n  const groupOperatorDefinition = groupOperator && getOperatorConfig(config, groupOperator, field) || null;\n  const formattedValue = formatItemValue(config, properties, meta, groupOperator, parentField);\n  const isGroup0 = isRuleGroup && (!groupOperator || groupOperatorDefinition.cardinality == 0);\n\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, false, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  \n  if (isRuleGroup && mode != \"struct\" && !isGroup0) {\n    // \"count\" rule can have no \"having\" children, but should have number value\n    if (formattedValue == undefined)\n      return undefined;\n  } else {\n    if (!list.size)\n      return undefined;\n  }\n\n  let resultQuery = {};\n  if (list.size == 1 && !isRoot)\n    resultQuery = list.first();\n  else\n    resultQuery[conj] = list.toList().toJS();\n  \n  // revert\n  if (not) {\n    resultQuery = { \"!\": resultQuery };\n  }\n\n  // rule_group (issue #246)\n  if (isRuleGroup && mode != \"struct\") {\n    const formattedField = formatField(meta, config, field, parentField);\n    if (isGroup0) {\n      // config.settings.groupOperators\n      const op = groupOperator || \"some\";\n      resultQuery = {\n        [op]: [\n          formattedField,\n          resultQuery\n        ]\n      };\n    } else {\n      // there is rule for count\n      const filter = !list.size \n        ? formattedField\n        : {\n          \"filter\": [\n            formattedField,\n            resultQuery\n          ]\n        };\n      const count = {\n        \"reduce\": [\n          filter,\n          { \"+\": [1, { var: \"accumulator\" }] },\n          0\n        ]\n      };\n      resultQuery = formatLogic(config, properties, count, formattedValue, groupOperator);\n    }\n  }\n  \n  return resultQuery;\n};\n\n\nconst formatRule = (item, config, meta, parentField = null) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  operatorOptions = operatorOptions ? operatorOptions.toJS() : null;\n  if (operatorOptions && !Object.keys(operatorOptions).length)\n    operatorOptions = null;\n\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDefinition.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field) || {};\n\n  // check op\n  let isRev = false;\n  if (!operatorDefinition.jsonLogic && !revOperatorDefinition.jsonLogic) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!operatorDefinition.jsonLogic && revOperatorDefinition.jsonLogic) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n  }\n\n  const formattedValue = formatItemValue(config, properties, meta, operator, parentField);\n  if (formattedValue === undefined)\n    return undefined;\n\n  const formattedField\n    = fieldSrc === \"func\"\n      ? formatFunc(meta, config, field, parentField)\n      : formatField(meta, config, field, parentField);\n  if (formattedField === undefined)\n    return undefined;\n\n  return formatLogic(config, properties, formattedField, formattedValue, operator, operatorOptions, fieldDefinition, isRev);\n};\n\n\nconst formatItemValue = (config, properties, meta, operator, parentField) => {\n  const field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (iValue == undefined)\n    return undefined;\n  \n  let valueSrcs = [];\n  let valueTypes = [];\n  let oldUsedFields = meta.usedFields;\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDef = omit( getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"] );\n    const fv = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDefinition, operator, operatorDefinition, parentField, asyncListValues\n    );\n    if (fv !== undefined) {\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (fvalue.size < cardinality || hasUndefinedValues) {\n    meta.usedFields = oldUsedFields; // restore\n    return undefined;\n  }\n  return cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, parentField = null, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue, parentField);\n  } else if (typeof fieldWidgetDef.jsonLogic === \"function\") {\n    const fn = fieldWidgetDef.jsonLogic;\n    const args = [\n      currentValue,\n      {\n        ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n        asyncListValues\n      },\n      //useful options: valueFormat for date/time\n      omit(fieldWidgetDef, widgetDefKeysToOmit),\n    ];\n    if (operator) {\n      args.push(operator);\n      args.push(operatorDef);\n    }\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    ret = currentValue;\n  }\n  return ret;\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentField = null) => {\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  if (!funcConfig?.jsonLogic) {\n    meta.errors.push(`Func ${funcKey} is not supported`);\n    return undefined;\n  }\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = omit( getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc), [\"factory\"] );\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, null, null, parentField\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = omit( getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc), [\"factory\"] );\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, null, null, parentField\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // uncomplete\n  }\n\n  const formattedArgsArr = Object.values(formattedArgs);\n  let ret;\n  if (typeof funcConfig.jsonLogic === \"function\") {\n    const fn = funcConfig.jsonLogic;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const funcName = funcConfig.jsonLogic || funcLastKey;\n    const isMethod = !!funcConfig.jsonLogicIsMethod;\n    if (isMethod) {\n      const [obj, ...params] = formattedArgsArr;\n      if (params.length) {\n        ret = { \"method\": [ obj, funcName, params ] };\n      } else {\n        ret = { \"method\": [ obj, funcName ] };\n      }\n    } else {\n      ret = { [funcName]: formattedArgsArr };\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (meta, config, field, parentField = null) => {\n  const {fieldSeparator, jsonLogic} = config.settings;\n\n  let ret;\n  if (field) {\n    if (Array.isArray(field))\n      field = field.join(fieldSeparator);\n    const fieldDef = getFieldConfig(config, field) || {};\n    const fieldName = formatFieldName(field, config, meta, parentField);\n\n    let varName = fieldDef.jsonLogicVar || (fieldDef.type == \"!group\" ? jsonLogic.groupVarKey : \"var\");\n    ret = { [varName] : fieldName };\n    if (meta.usedFields.indexOf(field) == -1)\n      meta.usedFields.push(field);\n  }\n  return ret;\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition, formattedField, formattedValue) => {\n  let formatteOp = operator;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  const isReverseArgs = defaultValue(operatorDefinition._jsonLogicIsRevArgs, false);\n  if (typeof operatorDefinition.jsonLogic == \"string\")\n    formatteOp = operatorDefinition.jsonLogic;\n  const rangeOps = [\"<\", \"<=\", \">\", \">=\"];\n  const eqOps = [\"==\", \"!=\"];\n  const fn = (field, op, val, opDef, opOpts) => {\n    if (cardinality == 0 && eqOps.includes(formatteOp))\n      return { [formatteOp]: [formattedField, null] };\n    else if (cardinality == 0)\n      return { [formatteOp]: formattedField };\n    else if (cardinality == 1 && isReverseArgs)\n      return { [formatteOp]: [formattedValue, formattedField] };\n    else if (cardinality == 1)\n      return { [formatteOp]: [formattedField, formattedValue] };\n    else if (cardinality == 2 && rangeOps.includes(formatteOp))\n      return { [formatteOp]: [formattedValue[0], formattedField, formattedValue[1]] };\n    else\n      return { [formatteOp]: [formattedField, ...formattedValue] };\n  };\n  return fn;\n};\n\nconst formatLogic = (config, properties, formattedField, formattedValue, operator, operatorOptions = null, fieldDefinition = null, isRev = false) => {\n  const field = properties.get(\"field\");\n  //const fieldSrc = properties.get(\"fieldSrc\");\n  const operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let fn = typeof operatorDefinition.jsonLogic == \"function\" \n    ? operatorDefinition.jsonLogic \n    : buildFnToFormatOp(operator, operatorDefinition, formattedField, formattedValue);\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    omit(operatorDefinition, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n  ];\n  let ruleQuery = fn.call(config.ctx, ...args);\n\n  if (isRev) {\n    ruleQuery = { \"!\": ruleQuery };\n  }\n\n  return ruleQuery;\n};\n","import {defaultValue, widgetDefKeysToOmit, opDefKeysToOmit} from \"../utils/stuff\";\nimport {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, extendConfig,\n} from \"../utils/configUtils\";\nimport {getFieldPathLabels, getWidgetForFieldOp, formatFieldName, completeValue} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {List, Map} from \"immutable\";\n\n\n// helpers\nconst isObject = (v) => (typeof v == \"object\" && v !== null && !Array.isArray(v));\n\nexport const mongodbFormat = (tree, config) => {\n  return _mongodbFormat(tree, config, false);\n};\n\nexport const _mongodbFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem([], tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to MongoDb:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  if (!item) return undefined;\n\n  const type = item.get(\"type\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(parents, item, config, meta, _not, _canWrapExpr, _formatFieldName, _value);\n  } else if (type === \"rule\") {\n    return formatRule(parents, item, config, meta, _not, _canWrapExpr, _formatFieldName, _value);\n  }\n  return undefined;\n};\n\n\nconst formatGroup = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\") || new List();\n  const {canShortMongoQuery} = config.settings;\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  const groupField = type === \"rule_group\" ? properties.get(\"field\") : null;\n  const groupFieldName = formatFieldName(groupField, config, meta, realParentPath);\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode; //properties.get(\"mode\");\n  const canHaveEmptyChildren = groupField && mode == \"array\";\n\n  const not = _not ? !(properties.get(\"not\")) : (properties.get(\"not\"));\n  const list = children\n    .map((currentChild) => formatItem(\n      [...parents, item], currentChild, config, meta, not, mode != \"array\", mode == \"array\" ? (f => `$$el.${f}`) : undefined)\n    )\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  let conjunctionDefinition = config.conjunctions[conjunction];\n  const reversedConj = conjunctionDefinition.reversedConj;\n  if (not && reversedConj) {\n    conjunction = reversedConj;\n    conjunctionDefinition = config.conjunctions[conjunction];\n  }\n  const mongoConj = conjunctionDefinition.mongoConj;\n\n  let resultQuery;\n  if (list.size == 1) {\n    resultQuery = list.first();\n  } else if (list.size > 1) {\n    const rules = list.toList().toJS();\n    const canShort = canShortMongoQuery && (mongoConj == \"$and\");\n    if (canShort) {\n      resultQuery = rules.reduce((acc, rule) => {\n        if (!acc) return undefined;\n        for (let k in rule) {\n          if (k[0] == \"$\") {\n            acc = undefined;\n            break;\n          }\n          if (acc[k] == undefined) {\n            acc[k] = rule[k];\n          } else {\n            // https://github.com/ukrbublik/react-awesome-query-builder/issues/182\n            let prev = acc[k], next = rule[k];\n            if (!isObject(prev)) {\n              prev = {\"$eq\": prev};\n            }\n            if (!isObject(next)) {\n              next = {\"$eq\": next};\n            }\n            const prevOp = Object.keys(prev)[0], nextOp = Object.keys(next)[0];\n            if (prevOp == nextOp) {\n              acc = undefined;\n              break;\n            }\n            acc[k] = Object.assign({}, prev, next);\n          }\n        }\n        return acc;\n      }, {});\n    }\n    if (!resultQuery) // can't be shorten\n      resultQuery = { [mongoConj] : rules };\n  }\n\n  if (groupField) {\n    if (mode == \"array\") {\n      const totalQuery = {\n        \"$size\": {\n          \"$ifNull\": [\n            \"$\" + groupFieldName,\n            []\n          ]\n        }\n      };\n      const filterQuery = resultQuery ? {\n        \"$size\": {\n          \"$ifNull\": [\n            {\n              \"$filter\": {\n                input: \"$\" + groupFieldName,\n                as: \"el\",\n                cond: resultQuery\n              }\n            },\n            []\n          ]\n        }\n      } : totalQuery;\n      resultQuery = formatItem(\n        parents, item.set(\"type\", \"rule\"), config, meta, false, false, (_f => filterQuery), totalQuery\n      );\n      resultQuery = { \"$expr\": resultQuery };\n    } else {\n      resultQuery = { [groupFieldName]: {\"$elemMatch\": resultQuery} };\n    }\n  }\n  return resultQuery;\n};\n\n\nconst formatRule = (parents, item, config, meta, _not = false, _canWrapExpr = true, _formatFieldName = undefined, _value = undefined) => {\n  const properties = item.get(\"properties\") || new Map();\n\n  const hasParentRuleGroup = parents.filter(it => it.get(\"type\") == \"rule_group\").length > 0;\n  const parentPath = parents\n    .filter(it => it.get(\"type\") == \"rule_group\")\n    .map(it => it.get(\"properties\").get(\"field\"))\n    .slice(-1).pop();\n  const realParentPath = hasParentRuleGroup && parentPath;\n\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  const iValue = properties.get(\"value\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  if (field == null || operator == null || iValue === undefined)\n    return undefined;\n\n  const fieldDef = getFieldConfig(config, field) || {};\n  let operatorDefinition = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDefinition.reversedOp;\n  let revOperatorDefinition = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n\n  let not = _not;\n  if (not && reversedOp) {\n    [operator, reversedOp] = [reversedOp, operator];\n    [operatorDefinition, revOperatorDefinition] = [revOperatorDefinition, operatorDefinition];\n    not = false;\n  }\n\n  let formattedField;\n  let useExpr = false;\n  if (fieldSrc == \"func\") {\n    [formattedField, useExpr] = formatFunc(meta, config, field, realParentPath);\n  } else {\n    formattedField = formatFieldName(field, config, meta, realParentPath);\n    if (_formatFieldName) {\n      useExpr = true;\n      formattedField = _formatFieldName(formattedField);\n    }\n  }\n  if (formattedField == undefined)\n    return undefined;\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n    const [fv, fvUseExpr] = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, realParentPath,  operator, operatorDefinition, asyncListValues\n    );\n    if (fv !== undefined) {\n      useExpr = useExpr || fvUseExpr;\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const wrapExpr = useExpr && _canWrapExpr;\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (fvalue.size < cardinality || hasUndefinedValues)\n    return undefined;\n  const formattedValue = cardinality > 1 ? fvalue.toArray() : (cardinality == 1 ? fvalue.first() : null);\n\n  //build rule\n  const fn = operatorDefinition.mongoFormatOp;\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  const args = [\n    formattedField,\n    operator,\n    _value !== undefined && formattedValue == null ? _value : formattedValue,\n    useExpr,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(operatorDefinition, opDefKeysToOmit),\n    operatorOptions,\n    fieldDef,\n  ];\n  let ruleQuery = fn.call(config.ctx, ...args);\n  if (wrapExpr) {\n    ruleQuery = { \"$expr\": ruleQuery };\n  }\n  if (not) {\n    ruleQuery = { \"$not\": ruleQuery };\n  }\n  return ruleQuery;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, parentPath, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return [undefined, false];\n\n  let ret;\n  let useExpr = false;\n\n  if (valueSrc == \"field\") {\n    [ret, useExpr] = formatRightField(meta, config, currentValue, parentPath);\n  } else if (valueSrc == \"func\") {\n    [ret, useExpr] = formatFunc(meta, config, currentValue, parentPath);\n  } else {\n    if (typeof fieldWidgetDef.mongoFormatValue === \"function\") {\n      const fn = fieldWidgetDef.mongoFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = currentValue;\n    }\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatRightField = (meta, config, rightField, parentPath) => {\n  const {fieldSeparator} = config.settings;\n  let ret;\n  const useExpr = true;\n\n  if (rightField) {\n    const rightFieldDefinition = getFieldConfig(config, rightField) || {};\n    const fieldParts = getFieldParts(rightField, config);\n    const fieldPartsLabels = getFieldPathLabels(rightField, config);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n    const formatFieldFn = config.settings.formatField;\n    const rightFieldName = formatFieldName(rightField, config, meta, parentPath);\n    const formattedField = formatFieldFn(rightFieldName, fieldParts, fieldFullLabel, rightFieldDefinition, config, false);\n    ret = \"$\" + formattedField;\n  }\n\n  return [ret, useExpr];\n};\n\n\nconst formatFunc = (meta, config, currentValue, parentPath) => {\n  const useExpr = true;\n  let ret;\n\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return [undefined, false];\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = funcConfig.mongoFunc || funcLastKey;\n  const mongoArgsAsObject = funcConfig.mongoArgsAsObject;\n\n  let formattedArgs = {};\n  let argsCnt = 0;\n  let lastArg = undefined;\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    argsCnt++;\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const operator = null;\n    const widget = getWidgetForFieldOp(config, argConfig, operator, argValueSrc);\n    const fieldWidgetDef = omit(getFieldWidgetConfig(config, argConfig, operator, widget, argValueSrc), [\"factory\"]);\n    const [formattedArgVal, _argUseExpr] = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return [undefined, false];\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      const defaultWidget = getWidgetForFieldOp(config, argConfig, operator, defaultValueSrc);\n      const defaultFieldWidgetDef = omit( getFieldWidgetConfig(config, argConfig, operator, defaultWidget, defaultValueSrc), [\"factory\"] );\n      let _;\n      ([formattedDefaultVal, _] = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, defaultFieldWidgetDef, fieldDef, parentPath, null, null, argAsyncListValues\n      ));\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return [undefined, false];\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of gaps) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n      lastArg = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return [undefined, false]; // uncomplete\n  }\n\n  if (typeof funcConfig.mongoFormatFunc === \"function\") {\n    const fn = funcConfig.mongoFormatFunc;\n    const args = [\n      formattedArgs,\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else if (funcConfig.mongoFormatFunc === null) {\n    meta.errors.push(`Functon ${funcName} is not supported`);\n    return [undefined, false];\n  } else {\n    if (mongoArgsAsObject)\n      ret = { [funcName]: formattedArgs };\n    else if (argsCnt == 1 && lastArg !== undefined)\n      ret = { [funcName]: lastArg };\n    else\n      ret = { [funcName]: Object.values(formattedArgs) };\n  }\n\n  return [ret, useExpr];\n};\n\n\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, extendConfig,\n} from \"../utils/configUtils\";\nimport {\n  getFieldPathLabels, getWidgetForFieldOp, formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {defaultValue, widgetDefKeysToOmit, opDefKeysToOmit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\nimport {SqlString} from \"../utils/export\";\n\nexport const sqlFormat = (tree, config) => {\n  return _sqlFormat(tree, config, false);\n};\n\nexport const _sqlFormat = (tree, config, returnErrors = true) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(tree, extendedConfig, meta);\n\n  if (returnErrors) {\n    return [res, meta.errors];\n  } else {\n    if (meta.errors.length)\n      console.warn(\"Errors while exporting to SQL:\", meta.errors);\n    return res;\n  }\n};\n\n\nconst formatItem = (item, config, meta) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\")) {\n    return formatGroup(item, config, meta);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  const groupField = isRuleGroup ? properties.get(\"field\") : null;\n  const groupFieldDef = getFieldConfig(config, groupField) || {};\n  const mode = groupFieldDef.mode;\n  if (mode == \"array\") {\n    meta.errors.push(`Aggregation is not supported for ${groupField}`);\n  }\n\n  const not = properties.get(\"not\");\n  const canHaveEmptyChildren = false; //isRuleGroup && mode == \"array\";\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  return conjunctionDefinition.sqlFormatConj(list, conjunction, not);\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const sqlOp = operatorDefinition.sqlOp || operator;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, value, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      return `${field} ${sqlOp} ${value}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values.first();\n      const valTo = values.get(1);\n      return `${field} ${sqlOp} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  const operatorOptions = properties.get(\"operatorOptions\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n  if (field == null || operator == null)\n    return undefined;\n\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  let opDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = opDef.reversedOp;\n  let revOpDef = getOperatorConfig(config, reversedOp, field) || {};\n  const cardinality = defaultValue(opDef.cardinality, 1);\n\n  // check op\n  let isRev = false;\n  const canFormatOp = opDef.sqlOp || opDef.sqlFormatOp;\n  const canFormatRevOp = revOpDef.sqlOp || revOpDef.sqlFormatOp;\n  if (!canFormatOp && !canFormatRevOp) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n  if (!canFormatOp && canFormatRevOp) {\n    isRev = true;\n    [operator, reversedOp] = [reversedOp, operator];\n    [opDef, revOpDef] = [revOpDef, opDef];\n  }\n\n  //format value\n  let valueSrcs = [];\n  let valueTypes = [];\n  const fvalue = iValue.map((currentValue, ind) => {\n    const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n    const valueType = iValueType ? iValueType.get(ind) : null;\n    const cValue = completeValue(currentValue, valueSrc, config);\n    const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDefinition = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n    let fv = formatValue(\n      meta, config, cValue, valueSrc, valueType, fieldWidgetDefinition, fieldDefinition, operator, opDef, asyncListValues\n    );\n    if (fv !== undefined) {\n      valueSrcs.push(valueSrc);\n      valueTypes.push(valueType);\n    }\n    return fv;\n  });\n  const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n  if (hasUndefinedValues || fvalue.size < cardinality)\n    return undefined;\n  const formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n\n  //find fn to format expr\n  const fn = opDef.sqlFormatOp || buildFnToFormatOp(operator, opDef);\n  if (!fn) {\n    meta.errors.push(`Operator ${operator} is not supported`);\n    return undefined;\n  }\n      \n  //format field\n  const formattedField = fieldSrc == \"func\"\n    ? formatFunc(meta, config, field)\n    : formatField(meta, config, field);\n  if (formattedField == undefined)\n    return undefined;\n\n  //format expr\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n    omit(opDef, opDefKeysToOmit),\n    operatorOptions,\n    fieldDefinition,\n  ];\n\n  let ret;\n  ret = fn.call(config.ctx, ...args);\n  if (isRev) {\n    ret = config.settings.sqlFormatReverse(ret);\n  }\n  if (ret === undefined) {\n    meta.errors.push(`Operator ${operator} is not supported for value source ${valueSrcs.join(\", \")}`);\n    return undefined;\n  }\n  return ret;\n};\n\n\nconst formatValue = (meta, config, currentValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, asyncListValues) => {\n  if (currentValue === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(meta, config, currentValue);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(meta, config, currentValue);\n  } else {\n    if (typeof fieldWidgetDef.sqlFormatValue === \"function\") {\n      const fn = fieldWidgetDef.sqlFormatValue;\n      const args = [\n        currentValue,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(operatorDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, currentValue) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      if (Array.isArray(currentValue)) {\n        ret = currentValue.map(v => SqlString.escape(v));\n      } else {\n        ret = SqlString.escape(currentValue);\n      }\n    }\n  }\n  return ret;\n};\n\nconst formatField = (meta, config, field) => {\n  if (!field) return;\n  const {fieldSeparator} = config.settings;\n  const fieldDefinition = getFieldConfig(config, field) || {};\n  const fieldParts = getFieldParts(field, config);\n  const fieldPartsLabels = getFieldPathLabels(field, config);\n  const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparator) : null;\n  const formatFieldFn = config.settings.formatField;\n  const fieldName = formatFieldName(field, config, meta, null, {useTableName: true});\n  const formattedField = formatFieldFn(fieldName, fieldParts, fieldFullLabel, fieldDefinition, config);\n  return formattedField;\n};\n\n\nconst formatFunc = (meta, config, currentValue) => {\n  const funcKey = currentValue.get(\"func\");\n  const args = currentValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = funcConfig.sqlFunc || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      meta, config, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      formattedDefaultVal = formatValue(\n        meta, config, defaultValue, defaultValueSrc, argConfig.type, fieldDef, argConfig, null, null, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const missedArgKey of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push(argKey);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // uncomplete\n  }\n\n  let ret;\n  if (typeof funcConfig.sqlFormatFunc === \"function\") {\n    const fn = funcConfig.sqlFormatFunc;\n    const args = [\n      formattedArgs\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(formattedArgs)\n      .map(([k, v]) => v)\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {\n  getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFuncConfig, getFieldParts, extendConfig,\n} from \"../utils/configUtils\";\nimport {\n  getFieldPathLabels, getWidgetForFieldOp, formatFieldName, completeValue\n} from \"../utils/ruleUtils\";\nimport omit from \"lodash/omit\";\nimport pick from \"lodash/pick\";\nimport {defaultValue, widgetDefKeysToOmit, opDefKeysToOmit} from \"../utils/stuff\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\nimport {List, Map} from \"immutable\";\n\n\nexport const queryString = (item, config, isForDisplay = false) => {\n  //meta is mutable\n  let meta = {\n    errors: []\n  };\n\n  const extendedConfig = extendConfig(config, undefined, false);\n  const res = formatItem(item, extendedConfig, meta, isForDisplay, null);\n\n  if (meta.errors.length)\n    console.warn(\"Errors while exporting to string:\", meta.errors);\n  return res;\n};\n\n\nconst formatItem = (item, config, meta, isForDisplay = false, parentField = null) => {\n  if (!item) return undefined;\n  const type = item.get(\"type\");\n  const children = item.get(\"children1\");\n\n  if ((type === \"group\" || type === \"rule_group\") ) {\n    return formatGroup(item, config, meta, isForDisplay, parentField);\n  } else if (type === \"rule\") {\n    return formatRule(item, config, meta, isForDisplay, parentField);\n  }\n\n  return undefined;\n};\n\n\nconst formatGroup = (item, config, meta, isForDisplay = false, parentField = null) => {\n  const type = item.get(\"type\");\n  const properties = item.get(\"properties\") || new Map();\n  const mode = properties.get(\"mode\");\n  const children = item.get(\"children1\") || new List();\n\n  const isRuleGroup = (type === \"rule_group\");\n  // TIP: don't cut group for mode == 'struct' and don't do aggr format (maybe later)\n  const groupField = isRuleGroup && mode == \"array\" ? properties.get(\"field\") : null;\n  const canHaveEmptyChildren = isRuleGroup && mode == \"array\";\n  const not = properties.get(\"not\");\n  const list = children\n    .map((currentChild) => formatItem(currentChild, config, meta, isForDisplay, groupField))\n    .filter((currentChild) => typeof currentChild !== \"undefined\");\n  if (!canHaveEmptyChildren && !list.size)\n    return undefined;\n\n  let conjunction = properties.get(\"conjunction\");\n  if (!conjunction)\n    conjunction = defaultConjunction(config);\n  const conjunctionDefinition = config.conjunctions[conjunction];\n\n  const conjStr = list.size ? conjunctionDefinition.formatConj(list, conjunction, not, isForDisplay) : null;\n  \n  let ret;\n  if (groupField) {\n    const aggrArgs = formatRule(item, config, meta, isForDisplay, parentField, true);\n    if (aggrArgs) {\n      const isRev = aggrArgs.pop();\n      const args = [\n        conjStr,\n        ...aggrArgs\n      ];\n      ret = config.settings.formatAggr(...args);\n      if (isRev) {\n        ret = config.settings.formatReverse(ret, null, null, null, null, isForDisplay);\n      }\n    }\n  } else {\n    ret = conjStr;\n  }\n\n  return ret;\n};\n\n\nconst formatItemValue = (config, properties, meta, _operator, isForDisplay, parentField) => {\n  const field = properties.get(\"field\");\n  const iValueSrc = properties.get(\"valueSrc\");\n  const iValueType = properties.get(\"valueType\");\n  const fieldDef = getFieldConfig(config, field) || {};\n  const operator = _operator || properties.get(\"operator\");\n  const operatorDef = getOperatorConfig(config, operator, field) || {};\n  const cardinality = defaultValue(operatorDef.cardinality, 1);\n  const iValue = properties.get(\"value\");\n  const asyncListValues = properties.get(\"asyncListValues\");\n\n  let valueSrcs = [];\n  let valueTypes = [];\n  let formattedValue;\n\n  if (iValue != undefined) {\n    const fvalue = iValue.map((currentValue, ind) => {\n      const valueSrc = iValueSrc ? iValueSrc.get(ind) : null;\n      const valueType = iValueType ? iValueType.get(ind) : null;\n      const cValue = completeValue(currentValue, valueSrc, config);\n      const widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      const fieldWidgetDef = omit(getFieldWidgetConfig(config, field, operator, widget, valueSrc), [\"factory\"]);\n      let fv = formatValue(\n        config, meta, cValue, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, operatorDef, isForDisplay, parentField, asyncListValues\n      );\n      if (fv !== undefined) {\n        valueSrcs.push(valueSrc);\n        valueTypes.push(valueType);\n      }\n      return fv;\n    });\n    const hasUndefinedValues = fvalue.filter(v => v === undefined).size > 0;\n    if (!( hasUndefinedValues || fvalue.size < cardinality )) {\n      formattedValue = (cardinality == 1 ? fvalue.first() : fvalue);\n    }\n  }\n\n  return [\n    formattedValue, \n    (valueSrcs.length > 1 ? valueSrcs : valueSrcs[0]),\n    (valueTypes.length > 1 ? valueTypes : valueTypes[0]),\n  ];\n};\n\nconst buildFnToFormatOp = (operator, operatorDefinition) => {\n  const fop = operatorDefinition.labelForFormat || operator;\n  const cardinality = defaultValue(operatorDefinition.cardinality, 1);\n  let fn;\n  if (cardinality == 0) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} ${fop}`;\n    };\n  } else if (cardinality == 1) {\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} ${fop} ${values}`;\n    };\n  } else if (cardinality == 2) {\n    // between\n    fn = (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const valFrom = values.first();\n      const valTo = values.get(1);\n      return `${field} ${fop} ${valFrom} AND ${valTo}`;\n    };\n  }\n  return fn;\n};\n\nconst formatRule = (item, config, meta, isForDisplay = false, parentField = null, returnArgs = false) => {\n  const properties = item.get(\"properties\") || new Map();\n  const field = properties.get(\"field\");\n  const fieldSrc = properties.get(\"fieldSrc\");\n  let operator = properties.get(\"operator\");\n  let operatorOptions = properties.get(\"operatorOptions\");\n  if (field == null || operator == null)\n    return undefined;\n  \n  const fieldDef = getFieldConfig(config, field) || {};\n  let operatorDef = getOperatorConfig(config, operator, field) || {};\n  let reversedOp = operatorDef.reversedOp;\n  let revOperatorDef = getOperatorConfig(config, reversedOp, field) || {};\n  \n  //check op\n  let isRev = false;\n  let fn = operatorDef.formatOp;\n  if (!fn && reversedOp) {\n    fn = revOperatorDef.formatOp;\n    if (fn) {\n      isRev = true;\n      [operator, reversedOp] = [reversedOp, operator];\n      [operatorDef, revOperatorDef] = [revOperatorDef, operatorDef];\n    }\n  }\n\n  //find fn to format expr\n  if (!fn)\n    fn = buildFnToFormatOp(operator, operatorDef);\n  if (!fn)\n    return undefined;\n\n  //format field\n  const formattedField = fieldSrc === \"func\"\n    ? formatFunc(config, meta, field, isForDisplay, parentField)\n    : formatField(config, meta, field, isForDisplay, parentField);\n  if (formattedField == undefined)\n    return undefined;\n\n  //format value\n  const [formattedValue, valueSrc, valueType] = formatItemValue(\n    config, properties, meta, operator, isForDisplay, parentField\n  );\n  if (formattedValue === undefined)\n    return undefined;\n\n  const args = [\n    formattedField,\n    operator,\n    formattedValue,\n    valueSrc,\n    valueType,\n    omit(operatorDef, opDefKeysToOmit),\n    operatorOptions,\n    isForDisplay,\n    fieldDef,\n    isRev,\n  ];\n\n  if (returnArgs) {\n    return args;\n  } else {\n    //format expr\n    let ret = fn.call(config.ctx, ...args);\n\n    //rev\n    if (isRev) {\n      ret = config.settings.formatReverse(ret, operator, reversedOp, operatorDef, revOperatorDef, isForDisplay);\n    }\n\n    return ret;\n  }\n};\n\n\nconst formatValue = (config, meta, value, valueSrc, valueType, fieldWidgetDef, fieldDef, operator, opDef, isForDisplay, parentField = null, asyncListValues) => {\n  if (value === undefined)\n    return undefined;\n  let ret;\n  if (valueSrc == \"field\") {\n    ret = formatField(config, meta, value, isForDisplay, parentField);\n  } else if (valueSrc == \"func\") {\n    ret = formatFunc(config, meta, value, isForDisplay, parentField);\n  } else {\n    if (typeof fieldWidgetDef.formatValue === \"function\") {\n      const fn = fieldWidgetDef.formatValue;\n      const args = [\n        value,\n        {\n          ...pick(fieldDef, [\"fieldSettings\", \"listValues\"]),\n          asyncListValues\n        },\n        //useful options: valueFormat for date/time\n        omit(fieldWidgetDef, widgetDefKeysToOmit),\n        isForDisplay\n      ];\n      if (operator) {\n        args.push(operator);\n        args.push(opDef);\n      }\n      if (valueSrc == \"field\") {\n        const valFieldDefinition = getFieldConfig(config, value) || {}; \n        args.push(valFieldDefinition);\n      }\n      ret = fn.call(config.ctx, ...args);\n    } else {\n      ret = value;\n    }\n  }\n  return ret;\n};\n\n\nconst formatField = (config, meta, field, isForDisplay, parentField = null, cutParentField = true) => {\n  const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n  let ret = null;\n  if (field) {\n    const fieldDefinition = getFieldConfig(config, field) || {};\n    const fieldParts = getFieldParts(field, config);\n    const fieldPartsLabels = getFieldPathLabels(field, config, cutParentField ? parentField : null);\n    const fieldFullLabel = fieldPartsLabels ? fieldPartsLabels.join(fieldSeparatorDisplay) : null;\n    const fieldLabel2 = fieldDefinition.label2 || fieldFullLabel;\n    const formatFieldFn = config.settings.formatField;\n    const fieldName = formatFieldName(field, config, meta, cutParentField ? parentField : null, {useTableName: true});\n    ret = formatFieldFn(fieldName, fieldParts, fieldLabel2, fieldDefinition, config, isForDisplay);\n  }\n  return ret;\n};\n\n\nconst formatFunc = (config, meta, funcValue, isForDisplay, parentField = null) => {\n  const funcKey = funcValue.get(\"func\");\n  const args = funcValue.get(\"args\");\n  const funcConfig = getFuncConfig(config, funcKey);\n  if (!funcConfig) {\n    meta.errors.push(`Func ${funcKey} is not defined in config`);\n    return undefined;\n  }\n  const funcParts = getFieldParts(funcKey, config);\n  const funcLastKey = funcParts[funcParts.length-1];\n  const funcName = isForDisplay && funcConfig.label || funcLastKey;\n\n  let formattedArgs = {};\n  let gaps = [];\n  let missingArgKeys = [];\n  let formattedArgsWithNames = {};\n  for (const argKey in funcConfig.args) {\n    const argConfig = funcConfig.args[argKey];\n    const fieldDef = getFieldConfig(config, argConfig);\n    const {defaultValue, isOptional} = argConfig;\n    const defaultValueSrc = defaultValue?.func ? \"func\" : \"value\";\n    const argName = isForDisplay && argConfig.label || argKey;\n    const argVal = args ? args.get(argKey) : undefined;\n    const argValue = argVal ? argVal.get(\"value\") : undefined;\n    const argValueSrc = argVal ? argVal.get(\"valueSrc\") : undefined;\n    const argAsyncListValues = argVal ? argVal.get(\"asyncListValues\") : undefined;\n    const formattedArgVal = formatValue(\n      config, meta, argValue, argValueSrc, argConfig.type, fieldDef, argConfig, null, null, isForDisplay, parentField, argAsyncListValues\n    );\n    if (argValue != undefined && formattedArgVal === undefined) {\n      if (argValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n        meta.errors.push(`Can't format value of arg ${argKey} for func ${funcKey}`);\n      return undefined;\n    }\n\n    let formattedDefaultVal;\n    if (formattedArgVal === undefined && !isOptional && defaultValue != undefined) {\n      formattedDefaultVal = formatValue(\n        config, meta, defaultValue, defaultValueSrc, argConfig.type, fieldDef, argConfig, null, null, isForDisplay, parentField, argAsyncListValues\n      );\n      if (formattedDefaultVal === undefined) {\n        if (defaultValueSrc != \"func\") // don't triger error if args value is another uncomplete function\n          meta.errors.push(`Can't format default value of arg ${argKey} for func ${funcKey}`);\n        return undefined;\n      }\n    }\n\n    const finalFormattedVal = formattedArgVal ?? formattedDefaultVal;\n    if (finalFormattedVal !== undefined) {\n      if (gaps.length) {\n        for (const [missedArgKey, missedArgName] of argKey) {\n          formattedArgs[missedArgKey] = undefined;\n          //formattedArgsWithNames[missedArgName] = undefined;\n        }\n        gaps = [];\n      }\n      formattedArgs[argKey] = finalFormattedVal;\n      formattedArgsWithNames[argName] = finalFormattedVal;\n    } else {\n      if (!isOptional)\n        missingArgKeys.push(argKey);\n      gaps.push([argKey, argName]);\n    }\n  }\n  if (missingArgKeys.length) {\n    //meta.errors.push(`Missing vals for args ${missingArgKeys.join(\", \")} for func ${funcKey}`);\n    return undefined; // uncomplete\n  }\n\n  let ret = null;\n  if (typeof funcConfig.formatFunc === \"function\") {\n    const fn = funcConfig.formatFunc;\n    const args = [\n      formattedArgs,\n      isForDisplay\n    ];\n    ret = fn.call(config.ctx, ...args);\n  } else {\n    const argsStr = Object.entries(isForDisplay ? formattedArgsWithNames : formattedArgs)\n      .map(([k, v]) => (isForDisplay ? `${k}: ${v}` : `${v}`))\n      .join(\", \");\n    ret = `${funcName}(${argsStr})`;\n  }\n  return ret;\n};\n","import {getWidgetForFieldOp} from \"../utils/ruleUtils\";\nimport {defaultConjunction} from \"../utils/defaultUtils\";\n\n\n/**\n * Converts a string representation of top_left and bottom_right cords to\n * a ES geo_point required for query\n *\n * @param {string} geoPointString - comma separated string of lat/lon coods\n * @returns {{top_left: {lon: number, lat: number}, bottom_right: {lon: number, lat: number}}} - ES geoPoint formatted object\n * @private\n */\nfunction buildEsGeoPoint(geoPointString) {\n  if (geoPointString == null) {\n    return null;\n  }\n\n  const coordsNumberArray = geoPointString.split(\",\").map(Number);\n  return {\n    top_left: {\n      lat: coordsNumberArray[0],\n      lon: coordsNumberArray[1]\n    },\n    bottom_right: {\n      lat: coordsNumberArray[2],\n      lon: coordsNumberArray[3]\n    }\n  };\n}\n\n/**\n * Converts a dateTime string from the query builder to a ES range formatted object\n *\n * @param {string} dateTime - dateTime formatted string\n * @param {string} operator - query builder operator type, see constants.js and query builder docs\n * @returns {{lt: string}|{lte: string}|{gte: string}|{gte: string, lte: string}|undefined} - ES range query parameter\n *\n * @private\n */\nfunction buildEsRangeParameters(value, operator) {\n  // -- if value is greater than 1 then we assume this is a between operator : BUG this is wrong, a selectable list can have multiple values\n  if (value.length > 1) {\n    return {\n      gte: \"\".concat(value[0]),\n      lte: \"\".concat(value[1])\n    };\n  } // -- if value is only one we assume this is a date time query for a specific day\n\n  const dateTime = value[0]; //TODO: Rethink about this part, what if someone adds a new type of opperator\n\n  //todo: move this logic into config\n  switch (operator) {\n  case \"on_date\": //todo: not used\n  case \"not_on_date\":\n  case \"equal\":\n  case \"select_equals\":\n  case \"not_equal\":\n    return {\n      gte: \"\".concat(dateTime, \"||/d\"),\n      lte: \"\".concat(dateTime, \"||+1d\")\n    };\n\n  case \"less_or_equal\":\n    return {\n      lte: \"\".concat(dateTime)\n    };\n\n  case \"greater_or_equal\":\n    return {\n      gte: \"\".concat(dateTime)\n    };\n\n  case \"less\":\n    return {\n      lt: \"\".concat(dateTime)\n    };\n\n  case \"greater\":\n    return {\n      gt: \"\".concat(dateTime)\n    };\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Builds the DSL parameters for a Wildcard query\n *\n * @param {string} value - The match value\n * @returns {{value: string}} - The value = value parameter surrounded with * on each end\n * @private\n */\nfunction buildEsWildcardParameters(value) {\n  return {\n    value: \"*\" + value + \"*\"\n  };\n}\n\n/**\n * Takes the match type string from awesome query builder like 'greater_or_equal' and\n * returns the ES occurrence required for bool queries\n *\n * @param {string} combinator - query group type or rule condition\n * @param {bool} not\n * @returns {string} - ES occurrence type. See constants.js\n * @private\n */\nfunction determineOccurrence(combinator, not) {\n  //todo: move into config, like mongoConj\n  switch (combinator) {\n  case \"AND\":\n    return not ? \"must_not\" : \"must\";\n    // -- AND\n\n  case \"OR\":\n    return not ? \"should_not\" : \"should\";\n    // -- OR\n\n  case \"NOT\":\n    return not ? \"must\" : \"must_not\";\n    // -- NOT AND\n\n  default:\n    return undefined;\n  }\n}\n\n/**\n * Determines what field to query off of given the operator type\n *\n * @param {string} fieldDataType - The type of data\n * @param {string} fullFieldName - A '.' separated string containing the property lineage (including self)\n * @param {string} queryType - The query type\n * @returns {string|*} - will be either the fullFieldName or fullFieldName.keyword\n * @private\n */\n//todo: not used\n// function determineQueryField(fieldDataType, fullFieldName, queryType) {\n//   if (fieldDataType === \"boolean\") {\n//     return fullFieldName;\n//   }\n\n//   switch (queryType) {\n//   case \"term\":\n//   case \"wildcard\":\n//     return \"\".concat(fullFieldName, \".keyword\");\n\n//   case \"geo_bounding_box\":\n//   case \"range\":\n//   case \"match\":\n//     return fullFieldName;\n\n//   default:\n//     console.error(\"Can't determine query field for query type \".concat(queryType));\n//     return null;\n//   }\n// }\n\nfunction buildRegexpParameters(value) {\n  return {\n    value: value\n  };\n}\n\nfunction determineField(fieldName, config) {\n  //todo: ElasticSearchTextField - not used\n  //return config.fields[fieldName].ElasticSearchTextField || fieldName;\n  return fieldName;\n}\n\nfunction buildParameters(queryType, value, operator, fieldName, config, syntax) {\n  const textField = determineField(fieldName, config);\n  switch (queryType) {\n  case \"filter\":\n    //todo: elasticSearchScript - not used\n    return {\n      script: config.operators[operator].elasticSearchScript(fieldName, value)\n    };\n\n  case \"exists\":\n    return { field: fieldName };\n\n  case \"match\":\n    return { [textField]: value[0] };\n\n  case \"term\":\n    return syntax === ES_7_SYNTAX\n      ? { [fieldName]: {\n        value: value[0]\n      }} : { [fieldName]: value[0] };\n\n  //todo: not used\n  // need to add geo type into RAQB or remove this code\n  case \"geo_bounding_box\":\n    return { [fieldName]: buildEsGeoPoint(value[0]) };\n\n  case \"range\":\n    return { [fieldName]: buildEsRangeParameters(value, operator) };\n\n  case \"wildcard\":\n    return { [fieldName]: buildEsWildcardParameters(value[0]) };\n\n  case \"regexp\":\n    return { [fieldName]: buildRegexpParameters(value[0]) };\n\n  default:\n    return undefined;\n  }\n}\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {string} fieldName - The name of the field you are building a rule for\n * @param {string} fieldDataType - The type of data this field holds\n * @param {string} value - The value of this rule\n * @param {string} operator - The condition on how the value is matched\n * @param {string} syntax - The version of ElasticSearch syntax to generate\n * @returns {object} - The ES rule\n * @private\n */\nfunction buildEsRule(fieldName, value, operator, config, valueSrc, syntax) {\n  if (!fieldName || !operator || value == undefined)\n    return undefined; // rule is not fully entered\n  let op = operator;\n  let opConfig = config.operators[op];\n  if (!opConfig)\n    return undefined; // unknown operator\n  let { elasticSearchQueryType } = opConfig;\n\n  // not\n  let not = false;\n  if (!elasticSearchQueryType && opConfig.reversedOp) {\n    not = true;\n    op = opConfig.reversedOp;\n    opConfig = config.operators[op];\n    ({ elasticSearchQueryType } = opConfig);\n  }\n  \n  // handle if value 0 has multiple values like a select in a array\n  const widget = getWidgetForFieldOp(config, fieldName, op, valueSrc);\n  const widgetConfig = config.widgets[widget];\n  if (!widgetConfig)\n    return undefined; // unknown widget\n  const { elasticSearchFormatValue } = widgetConfig;\n\n  /** In most cases the queryType will be static however in some casese (like between) the query type will change\n   * based on the data type. i.e. a between time will be different than between number, date, letters etc... */\n  let queryType;\n  if (typeof elasticSearchQueryType === \"function\") {\n    queryType = elasticSearchQueryType(widget);\n  } else {\n    queryType = elasticSearchQueryType;\n  }\n\n  if (!queryType) {\n    // Not supported\n    return undefined;\n  }\n\n  /** If a widget has a rule on how to format that data then use that otherwise use default way of determineing search parameters\n   * */\n  let parameters;\n  if (typeof elasticSearchFormatValue === \"function\") {\n    parameters = elasticSearchFormatValue(queryType, value, op, fieldName, config);\n  } else {\n    parameters = buildParameters(queryType, value, op, fieldName, config, syntax);\n  }\n\n  if (not) {\n    return {\n      bool: {\n        must_not: {\n          [queryType]: {...parameters}\n        }\n      }\n    };\n  } else {\n    return {\n      [queryType]: {...parameters}\n    };\n  }\n}\n\n/**\n * Handles the building of the group portion of the DSL\n *\n * @param {object} children - The contents of the group\n * @param {string} conjunction - The way the contents of the group are joined together i.e. AND OR\n * @param {bool} not\n * @param {Function} recursiveFxn - The recursive fxn to build the contents of the groups children\n * @private\n * @returns {object} - The ES group\n */\nfunction buildEsGroup(children, conjunction, not, recursiveFxn, config, syntax) {\n  if (!children || !children.size)\n    return undefined;\n  const childrenArray = children.valueSeq().toArray();\n  const occurrence = determineOccurrence(conjunction, not);\n  const result = childrenArray.map((c) => recursiveFxn(c, config, syntax)).filter(v => v !== undefined);\n  if (!result.length)\n    return undefined;\n  const resultFlat = result.flat(Infinity);\n  return {\n    bool: {\n      [occurrence]: resultFlat\n    }\n  };\n}\n\nexport const ES_7_SYNTAX = \"ES_7_SYNTAX\";\nexport const ES_6_SYNTAX = \"ES_6_SYNTAX\";\n\nexport function elasticSearchFormat(tree, config, syntax = ES_6_SYNTAX) {\n  // -- format the es dsl here\n  if (!tree) return undefined;\n  const type = tree.get(\"type\");\n  const properties = tree.get(\"properties\") || new Map();\n\n  if (type === \"rule\" && properties.get(\"field\")) {\n    // -- field is null when a new blank rule is added\n    const operator = properties.get(\"operator\");\n    const field = properties.get(\"field\");\n    const fieldSrc = properties.get(\"fieldSrc\");\n    const value = properties.get(\"value\").toJS();\n    const _valueType = properties.get(\"valueType\")?.get(0);\n    const valueSrc = properties.get(\"valueSrc\")?.get(0);\n\n    if (valueSrc === \"func\" || fieldSrc == \"func\") {\n      // -- elastic search doesn't support functions (that is post processing)\n      return;\n    }\n\n    if (value && Array.isArray(value[0])) {\n      //TODO : Handle case where the value has multiple values such as in the case of a list\n      return value[0].map((val) =>\n        buildEsRule(field, [val], operator, config, valueSrc, syntax)\n      );\n    } else {\n      return buildEsRule(field, value, operator, config, valueSrc, syntax);\n    }\n  }\n\n  if (type === \"group\" || type === \"rule_group\") {\n    const not = properties.get(\"not\");\n    let conjunction = properties.get(\"conjunction\");\n    if (!conjunction)\n      conjunction = defaultConjunction(config);\n    const children = tree.get(\"children1\");\n    return buildEsGroup(children, conjunction, not, elasticSearchFormat, config, syntax);\n  }\n}\n","import {sleep} from \"./stuff\";\nimport {listValuesToArray, getListValue, makeCustomListValue} from \"./listValues\";\n\n// simple polyfill for Next\nconst findLastIndex = (arr, fn) => {\n  if (arr.findLastIndex) {\n    return arr.findLastIndex(fn);\n  } else {\n    const ind = [...arr].reverse().findIndex(fn);\n    return ind == -1 ? -1 : (arr.length-1 - ind);\n  }\n};\n\nexport const simulateAsyncFetch = (all, cPageSize = 0, delay = 1000) => async (search, offset, meta) => {\n  const pageSize = meta?.pageSize != undefined ? meta.pageSize : cPageSize;\n  const filtered = listValuesToArray(all)\n    .filter(({title, value}) => search == null ? true : (\n      title.toUpperCase().indexOf(search.toUpperCase()) != -1\n      || `${value}`.toUpperCase().indexOf(search.toUpperCase()) != -1\n    ));\n  const pages = pageSize ? Math.ceil(filtered.length / pageSize) : 0;\n  const currentOffset = offset || 0;\n  const currentPage = pageSize ? Math.ceil(currentOffset / pageSize) : null;\n  const values = pageSize ? filtered.slice(currentOffset, currentOffset + pageSize) : filtered;\n  const newOffset = pageSize ? currentOffset + values.length : null;\n  const hasMore = pageSize ? (newOffset < filtered.length) : false;\n  if (delay) {\n    // console.debug(\"simulateAsyncFetch\", {\n    //   search, offset, values, hasMore, filtered\n    // });\n    await sleep(delay);\n  }\n  return {\n    values,\n    hasMore\n  };\n};\n\nexport const mergeListValues = (values, newValues, toStart = false, hideNewValues = false) => {\n  if (!newValues)\n    return values;\n  const old = values || [];\n  const newFiltered = newValues\n    .filter(v => old.find(av => \"\"+av.value == \"\"+v.value) == undefined)\n    .map(v => (hideNewValues ? {...v, isHidden: true} : v));\n  const merged = toStart ? [...newFiltered, ...old] : [...old, ...newFiltered];\n  return merged;\n};\n\nexport const optionToListValue = (val, listValues, allowCustomValues) => {\n  const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n  const item = getListValue(v, listValues);\n  const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n  const listValue = item || customItem;\n  const lvs = listValue ? [listValue] : undefined; //not allow []\n  return [v, lvs];\n};\n\nexport const optionsToListValues = (vals, listValues, allowCustomValues) => {\n  const newSelectedListValues = vals.map((val, _i) => {\n    const v = val == null || val == \"\" ? undefined : (val?.value ?? val);\n    const item = getListValue(v, listValues);\n    const customItem = allowCustomValues && !item ? makeCustomListValue(v) : undefined;\n    const listValue = item || customItem;\n    return listValue;\n  }).filter(o => o != undefined);\n  let newSelectedValues = newSelectedListValues\n    .map(o => (o?.value ?? o));\n  if (!newSelectedValues.length)\n    newSelectedValues = undefined; //not allow []\n  return [newSelectedValues, newSelectedListValues];\n};\n\nexport const listValueToOption = (lv) => {\n  if (lv == null) return null;\n  const {\n    title, value, disabled, groupTitle, grouplabel, renderTitle, children, label, isCustom, isHidden,\n    ...rest\n  } = lv;\n  let option = {\n    value,\n    title: title || label || children, // fix issue #930 for AntD\n  };\n  if (disabled)\n    option.disabled = disabled;\n  if (isCustom)\n    option.isCustom = isCustom;\n  if (isHidden)\n    option.isHidden = isHidden;\n  // group\n  if (groupTitle || grouplabel)\n    option.groupTitle = groupTitle || grouplabel;\n  // used only for MUI field autocomplete (if matchesType, render as bold)\n  if (renderTitle)\n    option.renderTitle = renderTitle;\n  option = {\n    ...option,\n    ...rest,\n  };\n  return option;\n};\n\nexport const fixListValuesGroupOrder = (listValues) => {\n  let newValues = [];\n  let groupTitles = [];\n  for (let lv of listValues) {\n    const i = findLastIndex(newValues, lv1 => {\n      return (lv1.groupTitle ?? \"\") == (lv.groupTitle ?? \"\");\n    });\n    if (lv.groupTitle != undefined && !groupTitles.includes(lv.groupTitle)) {\n      groupTitles.push(lv.groupTitle);\n      if (groupTitles.length === 1) {\n        // fix empty groupTitles\n        newValues = newValues.map(nv => ({...nv, groupTitle: \"\"}));\n      }\n    }\n    if (lv.groupTitle == undefined && groupTitles.length) {\n      // fix empty groupTitle\n      lv = {...lv, groupTitle: \"\"};\n    }\n    if (i != -1) {\n      newValues.splice(i+1, 0, lv);\n    } else {\n      newValues.push(lv);\n    }\n  }\n  return newValues;\n};\n\n\nexport { getListValue };\n","//import { customJsonLogicOperations } from \"../utils/jsonLogic\";\n\n// Tip: search for `customJsonLogicOperations` in codebase to see custom JL funcs we use in `jsonLogicCustomOps`\n\nconst NOW = {\n  label: \"Now\",\n  returnType: \"datetime\",\n  jsonLogic: \"now\",\n  jsonLogicCustomOps: {\n    now: {},\n  },\n  //spelFunc: \"new java.util.Date()\",\n  spelFunc: \"T(java.time.LocalDateTime).now()\",\n  sqlFormatFunc: () => \"NOW()\",\n  mongoFormatFunc: () => new Date(),\n  formatFunc: () => \"NOW\",\n};\n\nconst RELATIVE_DATETIME = {\n  label: \"Relative\",\n  returnType: \"datetime\",\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\"\", \"\", \"\"],\n  spelFormatFunc: ({date, op, val, dim}) => {\n    const dimPlural = dim.charAt(0).toUpperCase() + dim.slice(1) + \"s\";\n    const method = op + dimPlural;\n    return `${date}.${method}(${val})`;\n  },\n  spelImport: (spel) => {\n    let date, op, val, dim;\n    const matchRes = spel.methodName?.match(/^(minus|plus)(\\w+)s$/);\n    if (matchRes) {\n      dim = matchRes[2].toLowerCase();\n      op = matchRes[1];\n      if ([\"minus\", \"plus\"].includes(op)) {\n        if ([\"day\", \"week\", \"month\", \"year\"].includes(dim)) {\n          op = {type: \"string\", val: op};\n          dim = {type: \"string\", val: dim};\n          val = spel.args[0];\n          date = spel.obj;\n          return {date, op, val, dim};\n        }\n      }\n    }\n  },\n  jsonLogic: ({date, op, val, dim}) => ({\n    \"date_add\": [\n      date,\n      val * (op == \"minus\" ? -1 : +1),\n      dim\n    ]\n  }),\n  jsonLogicImport: (v) => {\n    const date = v[\"date_add\"][0];\n    const val = Math.abs(v[\"date_add\"][1]);\n    const op = v[\"date_add\"][1] >= 0 ? \"plus\" : \"minus\";\n    const dim = v[\"date_add\"][2];\n    return [date, op, val, dim];\n  },\n  jsonLogicCustomOps: {\n    date_add: {},\n  },\n  // MySQL\n  //todo: other SQL dialects?\n  sqlFormatFunc: ({date, op, val, dim}) => `DATE_ADD(${date}, INTERVAL ${parseInt(val) * (op == \"minus\" ? -1 : +1)} ${dim.replace(/^'|'$/g, \"\")})`,\n  mongoFormatFunc: null, //todo: support?\n  formatFunc: ({date, op, val, dim}) => (!val ? date : `${date} ${op == \"minus\" ? \"-\" : \"+\"} ${val} ${dim}`),\n  args: {\n    date: {\n      label: \"Date\",\n      type: \"datetime\",\n      defaultValue: {func: \"NOW\", args: []},\n      valueSources: [\"func\", \"field\", \"value\"],\n      spelEscapeForFormat: true,\n    },\n    op: {\n      label: \"Op\",\n      type: \"select\",\n      defaultValue: \"plus\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          plus: \"+\",\n          minus: \"-\",\n        },\n      },\n      spelEscapeForFormat: false,\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      fieldSettings: {\n        min: 0,\n      },\n      defaultValue: 0,\n      valueSources: [\"value\"],\n      spelEscapeForFormat: false,\n    },\n    dim: {\n      label: \"Dimension\",\n      type: \"select\",\n      defaultValue: \"day\",\n      valueSources: [\"value\"],\n      mainWidgetProps: {\n        customProps: {\n          showSearch: false\n        }\n      },\n      fieldSettings: {\n        listValues: {\n          day: \"day\",\n          week: \"week\",\n          month: \"month\",\n          year: \"year\",\n        },\n      },\n      spelEscapeForFormat: false,\n    },\n  }\n};\n\nconst LOWER = {\n  label: \"Lowercase\",\n  mongoFunc: \"$toLower\",\n  jsonLogic: \"toLowerCase\",\n  spelFunc: \"${str}.toLowerCase()\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toLowerCase: {}\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\", \"func\"],\n    },\n  }\n};\n\nconst UPPER = {\n  label: \"Uppercase\",\n  mongoFunc: \"$toUpper\",\n  jsonLogic: \"toUpperCase\",\n  spelFunc: \"${str}.toUpperCase()\",\n  //jsonLogicIsMethod: true, // Removed in JsonLogic 2.x due to Prototype Pollution\n  jsonLogicCustomOps: {\n    toUpperCase: {},\n  },\n  returnType: \"text\",\n  args: {\n    str: {\n      label: \"String\",\n      type: \"text\",\n      valueSources: [\"value\", \"field\", \"func\"],\n    },\n  }\n};\n\nconst LINEAR_REGRESSION = {\n  label: \"Linear regression\",\n  returnType: \"number\",\n  formatFunc: ({coef, bias, val}, _) => `(${coef} * ${val} + ${bias})`,\n  sqlFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelFormatFunc: ({coef, bias, val}) => `(${coef} * ${val} + ${bias})`,\n  spelImport: (spel) => {\n    let coef, val, bias, a;\n    if (spel.type === \"op-plus\") {\n      [a, bias] = spel.children;\n      if (a.type === \"op-multiply\") {\n        [coef, val] = a.children;\n        return {coef, val, bias};\n      }\n    }\n  },\n  mongoFormatFunc: ({coef, bias, val}) => ({\"$sum\": [{\"$multiply\": [coef, val]}, bias]}),\n  jsonLogic: ({coef, bias, val}) => ({ \"+\": [ {\"*\": [coef, val]}, bias ] }),\n  jsonLogicImport: (v) => {\n    const coef = v[\"+\"][0][\"*\"][0];\n    const val = v[\"+\"][0][\"*\"][1];\n    const bias = v[\"+\"][1];\n    return [coef, val, bias];\n  },\n  renderBrackets: [\"\", \"\"],\n  renderSeps: [\" * \", \" + \"],\n  args: {\n    coef: {\n      label: \"Coef\",\n      type: \"number\",\n      defaultValue: 1,\n      valueSources: [\"value\"],\n    },\n    val: {\n      label: \"Value\",\n      type: \"number\",\n      valueSources: [\"value\", \"field\"],\n    },\n    bias: {\n      label: \"Bias\",\n      type: \"number\",\n      defaultValue: 0,\n      valueSources: [\"value\"],\n    }\n  }\n};\n\nexport {\n  LOWER,\n  UPPER,\n  NOW,\n  RELATIVE_DATETIME,\n  LINEAR_REGRESSION,\n};\n","import moment from \"moment\";\nimport {\n  SqlString, sqlEmptyValue, mongoEmptyValue, spelEscape, spelFixList,\n  stringifyForDisplay\n} from \"../utils/export\";\nimport {escapeRegExp} from \"../utils/stuff\";\nimport {getTitleInListValues} from \"../utils/listValues\";\n\n// helpers for mongo format\nexport const mongoFormatOp1 = (mop, mc, not,  field, _op, value, useExpr, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  const mv = mc(value, fieldDef);\n  if (mv === undefined)\n    return undefined;\n  if (not) {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: { \"$ne\": mv } }; // short form\n    return !useExpr\n      ? { [field]: { \"$not\": { [mop]: mv } } } \n      : { \"$not\": { [mop]: [$field, mv] } };\n  } else {\n    if (!useExpr && (!mop || mop == \"$eq\"))\n      return { [field]: mv }; // short form\n    return !useExpr\n      ? { [field]: { [mop]: mv } } \n      : { [mop]: [$field, mv] };\n  }\n};\n\nexport const mongoFormatOp2 = (mops, not,  field, _op, values, useExpr, valueSrcs, valueTypes, opDef, operatorOptions, fieldDef) => {\n  const $field = typeof field == \"string\" && !field.startsWith(\"$\") ? \"$\"+field : field;\n  if (not) {\n    return !useExpr\n      ? { [field]: { \"$not\": { [mops[0]]: values[0], [mops[1]]: values[1] } } } \n      : {\"$not\":\n                {\"$and\": [\n                  { [mops[0]]: [ $field, values[0] ] },\n                  { [mops[1]]: [ $field, values[1] ] },\n                ]}\n      };\n  } else {\n    return !useExpr\n      ? { [field]: { [mops[0]]: values[0], [mops[1]]: values[1] } } \n      : {\"$and\": [\n        { [mops[0]]: [ $field, values[0] ] },\n        { [mops[1]]: [ $field, values[1] ] },\n      ]};\n  }\n};\n\nconst ctx = {\n  utils: {\n    SqlString,\n    moment,\n    mongoFormatOp1,\n    mongoFormatOp2,\n    mongoEmptyValue,\n    escapeRegExp,\n    sqlEmptyValue,\n    stringifyForDisplay,\n    getTitleInListValues,\n    spelEscape,\n    spelFixList,\n  },\n};\n\nexport default ctx;\n","import {settings as defaultSettings} from \"./default\";\nimport ctx from \"./ctx\";\n\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  AND: {\n    label: \"And\",\n    mongoConj: \"$and\",\n    jsonLogicConj: \"and\",\n    sqlConj: \"AND\",\n    spelConj: \"and\",\n    spelConjs: [\"and\", \"&&\"],\n    reversedConj: \"OR\",\n    formatConj: (children, conj, not, isForDisplay) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"AND\" : \"&&\") + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: (children, conj, not) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"AND\" + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    spelFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"&&\" + \" \") + (omitBrackets ? \"\" : \")\")\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n  },\n  OR: {\n    label: \"Or\",\n    mongoConj: \"$or\",\n    jsonLogicConj: \"or\",\n    sqlConj: \"OR\",\n    spelConj: \"or\",\n    spelConjs: [\"or\", \"||\"],\n    reversedConj: \"AND\",\n    formatConj: (children, conj, not, isForDisplay) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + (isForDisplay ? \"OR\" : \"||\") + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    sqlFormatConj: (children, conj, not) => {\n      return children.size > 1\n        ? (not ? \"NOT \" : \"\") + \"(\" + children.join(\" \" + \"OR\" + \" \") + \")\"\n        : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n    spelFormatConj: (children, conj, not, omitBrackets) => {\n      if (not) omitBrackets = false;\n      return children.size > 1\n        ? (not ? \"!\" : \"\") + (omitBrackets ? \"\" : \"(\") + children.join(\" \" + \"||\" + \" \") + (omitBrackets ? \"\" : \")\")\n        : (not ? \"!(\" : \"\") + children.first() + (not ? \")\" : \"\");\n    },\n  },\n};\n\n//----------------------------  operators\n\n\n\nconst operators = {\n  equal: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    reversedOp: \"not_equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      const opStr = isForDisplay ? \"=\" : opDef.label;\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `NOT ${field}` : `${field}`;\n      else\n        return `${field} ${opStr} ${value}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  not_equal: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    reversedOp: \"equal\",\n    formatOp: (field, op, value, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay, fieldDef) => {\n      if (valueTypes == \"boolean\" && isForDisplay)\n        return value == \"No\" ? `${field}` : `NOT ${field}`;\n      else\n        return `${field} ${opDef.label} ${value}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    jsonLogic: \"!=\",\n  },\n  less: {\n    label: \"<\",\n    labelForFormat: \"<\",\n    sqlOp: \"<\",\n    spelOp: \"<\",\n    spelOps: [\"<\", \"lt\"],\n    reversedOp: \"greater_or_equal\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$lt\", v => v, false, ...args); },\n    jsonLogic: \"<\",\n    elasticSearchQueryType: \"range\",\n  },\n  less_or_equal: {\n    label: \"<=\",\n    labelForFormat: \"<=\",\n    sqlOp: \"<=\",\n    spelOp: \"<=\",\n    spelOps: [\"<=\", \"le\"],\n    reversedOp: \"greater\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$lte\", v => v, false, ...args); },\n    jsonLogic: \"<=\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater: {\n    label: \">\",\n    labelForFormat: \">\",\n    sqlOp: \">\",\n    spelOp: \">\",\n    spelOps: [\">\", \"gt\"],\n    reversedOp: \"less_or_equal\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gt\", v => v, false, ...args); },\n    jsonLogic: \">\",\n    elasticSearchQueryType: \"range\",\n  },\n  greater_or_equal: {\n    label: \">=\",\n    labelForFormat: \">=\",\n    sqlOp: \">=\",\n    spelOp: \">=\",\n    spelOps: [\">=\", \"ge\"],\n    reversedOp: \"less\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gte\", v => v, false, ...args); },\n    jsonLogic: \">=\",\n    elasticSearchQueryType: \"range\",\n  },\n  like: {\n    label: \"Contains\",\n    labelForFormat: \"Contains\",\n    reversedOp: \"not_like\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.contains(${1})\",\n    valueTypes: [\"text\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined), false, ...args); },\n    //jsonLogic: (field, op, val) => ({ \"in\": [val, field] }),\n    jsonLogic: \"in\",\n    _jsonLogicIsRevArgs: true,\n    valueSources: [\"value\"],\n    elasticSearchQueryType: \"regexp\",\n  },\n  not_like: {\n    isNotOp: true,\n    label: \"Not contains\",\n    reversedOp: \"like\",\n    labelForFormat: \"Not Contains\",\n    sqlOp: \"NOT LIKE\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) : undefined), true, ...args); },\n    valueSources: [\"value\"],\n  },\n  starts_with: {\n    label: \"Starts with\",\n    labelForFormat: \"Starts with\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.startsWith(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? \"^\" + this.utils.escapeRegExp(v) : undefined), false, ...args); },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  ends_with: {\n    label: \"Ends with\",\n    labelForFormat: \"Ends with\",\n    sqlOp: \"LIKE\",\n    spelOp: \"${0}.endsWith(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$regex\", v => (typeof v == \"string\" ? this.utils.escapeRegExp(v) + \"$\" : undefined), false, ...args); },\n    jsonLogic: undefined, // not supported\n    valueSources: [\"value\"],\n  },\n  between: {\n    label: \"Between\",\n    labelForFormat: \"BETWEEN\",\n    sqlOp: \"BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], false, ...args); },\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"not_between\",\n    jsonLogic: \"<=\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1] ? null : \"Invalid range\";\n      }\n      return null;\n    },\n    elasticSearchQueryType: function elasticSearchQueryType(type) {\n      return type === \"time\" ? \"filter\" : \"range\";\n    },\n  },\n  not_between: {\n    isNotOp: true,\n    label: \"Not between\",\n    labelForFormat: \"NOT BETWEEN\",\n    sqlOp: \"NOT BETWEEN\",\n    cardinality: 2,\n    formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\n      let valFrom = values.first();\n      let valTo = values.get(1);\n      if (isForDisplay)\n        return `${field} NOT BETWEEN ${valFrom} AND ${valTo}`;\n      else\n        return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      const valFrom = values[0];\n      const valTo = values[1];\n      return `(${field} < ${valFrom} || ${field} > ${valTo})`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp2([\"$gte\", \"$lte\"], true, ...args); },\n    valueLabels: [\n      \"Value from\",\n      \"Value to\"\n    ],\n    textSeparators: [\n      null,\n      \"and\"\n    ],\n    reversedOp: \"between\",\n    validateValues: (values) => {\n      if (values[0] != undefined && values[1] != undefined) {\n        return values[0] <= values[1] ? null : \"Invalid range\";\n      }\n      return null;\n    },\n  },\n  is_empty: {\n    label: \"Is empty\",\n    labelForFormat: \"IS EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_not_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS EMPTY` : `!${field}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) = ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is empty or null\n      return `${field} <= ''`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null], false, ...args); },\n    jsonLogic: \"!\",\n  },\n  is_not_empty: {\n    isNotOp: true,\n    label: \"Is not empty\",\n    labelForFormat: \"IS NOT EMPTY\",\n    cardinality: 0,\n    reversedOp: \"is_empty\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT EMPTY` : `!!${field}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      const empty = this.utils.sqlEmptyValue(fieldDef);\n      return `COALESCE(${field}, ${empty}) <> ${empty}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      //tip: is not empty and not null\n      return `${field} > ''`;\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$nin\", (v, fieldDef) => [this.utils.mongoEmptyValue(fieldDef), null], false, ...args); },\n    jsonLogic: \"!!\",\n    elasticSearchQueryType: \"exists\",\n  },\n  is_null: {\n    label: \"Is null\",\n    labelForFormat: \"IS NULL\",\n    sqlOp: \"IS NULL\",\n    cardinality: 0,\n    reversedOp: \"is_not_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NULL` : `!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} == null`;\n    },\n    // check if value is null OR not exists\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => null, false, ...args); },\n    jsonLogic: \"==\",\n  },\n  is_not_null: {\n    label: \"Is not null\",\n    labelForFormat: \"IS NOT NULL\",\n    sqlOp: \"IS NOT NULL\",\n    cardinality: 0,\n    reversedOp: \"is_null\",\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return isForDisplay ? `${field} IS NOT NULL` : `!!${field}`;\n    },\n    spelFormatOp: (field, op, values, valueSrc, valueTypes, opDef, operatorOptions, fieldDef) => {\n      return `${field} != null`;\n    },\n    // check if value exists and is not null\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => null, false, ...args); },\n    jsonLogic: \"!=\",\n    elasticSearchQueryType: \"exists\",\n  },\n  select_equals: {\n    label: \"==\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      return `${field} ${opStr} ${value}`;\n    },\n    spelOp: \"==\",\n    spelOps: [\"==\", \"eq\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    reversedOp: \"select_not_equals\",\n    jsonLogic: \"==\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_equals: {\n    isNotOp: true,\n    label: \"!=\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\", // enum/set\n    formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      return `${field} != ${value}`;\n    },\n    spelOp: \"!=\",\n    spelOps: [\"!=\", \"ne\"],\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    reversedOp: \"select_equals\",\n    jsonLogic: \"!=\",\n  },\n  select_any_in: {\n    label: \"Any in\",\n    labelForFormat: \"IN\",\n    sqlOp: \"IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} IN (${values.join(\", \")})`;\n      else\n        return `${field} IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    valueTypes: [\"multiselect\"],\n    spelOp: \"${1}.contains(${0})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", v => v, false, ...args); },\n    reversedOp: \"select_not_any_in\",\n    jsonLogic: \"in\",\n    elasticSearchQueryType: \"term\",\n  },\n  select_not_any_in: {\n    isNotOp: true,\n    label: \"Not in\",\n    labelForFormat: \"NOT IN\",\n    sqlOp: \"NOT IN\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT IN (${values.join(\", \")})`;\n      else\n        return `${field} NOT IN (${values})`;\n    },\n    sqlFormatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) => {\n      if (valueSrc == \"value\") {\n        return `${field} NOT IN (${values.join(\", \")})`;\n      } else return undefined; // not supported\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$nin\", v => v, false, ...args); },\n    reversedOp: \"select_any_in\",\n  },\n  // it's not \"contains all\", but \"contains any\" operator\n  multiselect_contains: {\n    label: \"Contains\",\n    labelForFormat: \"CONTAINS\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_not_contains\",\n    jsonLogic2: \"some-in\",\n    jsonLogic: (field, op, vals) => ({\n      \"some\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    //spelOp: \"${0}.containsAll(${1})\",\n    spelOp: \"T(CollectionUtils).containsAny(${0}, ${1})\",\n    elasticSearchQueryType: \"term\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$in\", v => v, false, ...args); },\n  },\n  multiselect_not_contains: {\n    isNotOp: true,\n    label: \"Not contains\",\n    labelForFormat: \"NOT CONTAINS\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} NOT CONTAINS [${values.join(\", \")}]`;\n      else\n        return `${field} NOT CONTAINS ${values}`;\n    },\n    reversedOp: \"multiselect_contains\"\n  },\n  multiselect_equals: {\n    label: \"Equals\",\n    labelForFormat: \"==\",\n    sqlOp: \"=\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const opStr = isForDisplay ? \"=\" : \"==\";\n      if (valueSrc == \"value\")\n        return `${field} ${opStr} [${values.join(\", \")}]`;\n      else\n        return `${field} ${opStr} ${values}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} = '${values.map(v => this.utils.SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    spelOp: \"${0}.equals(${1})\",\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n    reversedOp: \"multiselect_not_equals\",\n    jsonLogic2: \"all-in\",\n    jsonLogic: (field, op, vals) => ({\n      // it's not \"equals\", but \"includes\" operator - just for example\n      \"all\": [ field, {\"in\": [{\"var\": \"\"}, vals]} ]\n    }),\n    elasticSearchQueryType: \"term\",\n  },\n  multiselect_not_equals: {\n    isNotOp: true,\n    label: \"Not equals\",\n    labelForFormat: \"!=\",\n    sqlOp: \"<>\",\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      if (valueSrc == \"value\")\n        return `${field} != [${values.join(\", \")}]`;\n      else\n        return `${field} != ${values}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      if (valueSrc == \"value\")\n      // set\n        return `${field} != '${values.map(v => this.utils.SqlString.trim(v)).join(\",\")}'`;\n      else\n        return undefined; //not supported\n    },\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$ne\", v => v, false, ...args); },\n    reversedOp: \"multiselect_equals\",\n  },\n  proximity: {\n    label: \"Proximity search\",\n    cardinality: 2,\n    valueLabels: [\n      { label: \"Word 1\", placeholder: \"Enter first word\" },\n      { label: \"Word 2\", placeholder: \"Enter second word\" },\n    ],\n    textSeparators: [\n      //'Word 1',\n      //'Word 2'\n    ],\n    formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const prox = operatorOptions.get(\"proximity\");\n      return `${field} ${val1} NEAR/${prox} ${val2}`;\n    },\n    sqlFormatOp: function (field, op, values, valueSrc, valueType, opDef, operatorOptions, fieldDef) {\n      // https://learn.microsoft.com/en-us/sql/relational-databases/search/search-for-words-close-to-another-word-with-near?view=sql-server-ver16#example-1\n      const val1 = values.first();\n      const val2 = values.get(1);\n      const aVal1 = this.utils.SqlString.trim(val1);\n      const aVal2 = this.utils.SqlString.trim(val2);\n      const prox = operatorOptions.get(\"proximity\");\n      return `CONTAINS(${field}, 'NEAR((${aVal1}, ${aVal2}), ${prox})')`;\n    },\n    mongoFormatOp: undefined, // not supported\n    jsonLogic: undefined, // not supported\n    options: {\n      optionLabel: \"Near\", // label on top of \"near\" selectbox (for config.settings.showLabels==true)\n      optionTextBefore: \"Near\", // label before \"near\" selectbox (for config.settings.showLabels==false)\n      optionPlaceholder: \"Select words between\", // placeholder for \"near\" selectbox\n      minProximity: 2,\n      maxProximity: 10,\n      defaults: {\n        proximity: 2\n      },\n    },\n  },\n  some: {\n    label: \"Some\",\n    labelForFormat: \"SOME\",\n    cardinality: 0,\n    jsonLogic: \"some\",\n    spelFormatOp: (filteredSize) => `${filteredSize} > 0`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$gt\", v => 0, false, ...args); },\n  },\n  all: {\n    label: \"All\",\n    labelForFormat: \"ALL\",\n    cardinality: 0,\n    jsonLogic: \"all\",\n    spelFormatOp: (filteredSize, op, fullSize) => `${filteredSize} == ${fullSize}`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => v, false, ...args); },\n  },\n  none: {\n    label: \"None\",\n    labelForFormat: \"NONE\",\n    cardinality: 0,\n    jsonLogic: \"none\",\n    spelFormatOp: (filteredSize) => `${filteredSize} == 0`,\n    mongoFormatOp: function(...args) { return this.utils.mongoFormatOp1(\"$eq\", v => 0, false, ...args); },\n  }\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"String\",\n    valuePlaceholder: \"Enter string\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  textarea: {\n    type: \"text\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Text\",\n    valuePlaceholder: \"Enter text\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      if (opDef.sqlOp == \"LIKE\" || opDef.sqlOp == \"NOT LIKE\") {\n        return this.utils.SqlString.escapeLike(val, op != \"starts_with\", op != \"ends_with\");\n      } else {\n        return this.utils.SqlString.escape(val);\n      }\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n    fullWidth: true,\n  },\n  number: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number\",\n    valueLabels: [\n      { label: \"Number from\", placeholder: \"Enter number from\" },\n      { label: \"Number to\", placeholder: \"Enter number to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef) {\n      const isFloat = wgtDef.step && !Number.isInteger(wgtDef.step);\n      return this.utils.spelEscape(val, isFloat);\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  slider: {\n    type: \"number\",\n    jsType: \"number\",\n    valueSrc: \"value\",\n    valueLabel: \"Number\",\n    valuePlaceholder: \"Enter number or move slider\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  select: {\n    type: \"select\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    valueLabel: \"Value\",\n    valuePlaceholder: \"Select value\",\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      let valLabel = this.utils.getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, val);\n      return isForDisplay ? this.utils.stringifyForDisplay(valLabel) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  multiselect: {\n    type: \"multiselect\",\n    jsType: \"array\",\n    valueSrc: \"value\",\n    valueLabel: \"Values\",\n    valuePlaceholder: \"Select values\",\n    formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n      let valsLabels = vals.map(v => this.utils.getTitleInListValues(fieldDef.fieldSettings.listValues || fieldDef.asyncListValues, v));\n      return isForDisplay ? valsLabels.map(this.utils.stringifyForDisplay) : vals.map(JSON.stringify);\n    },\n    sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n      return vals.map(v => this.utils.SqlString.escape(v));\n    },\n    spelFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n      const isCallable = opDef.spelOp && opDef.spelOp.startsWith(\"${1}\");\n      let res = this.utils.spelEscape(vals); // inline list\n      if (isCallable) {\n        // `{1,2}.contains(1)` NOT works\n        // `{1,2}.?[true].contains(1)` works\n        res = this.utils.spelFixList(res);\n      }\n      return res;\n    },\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  date: {\n    type: \"date\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD\",\n    valueLabel: \"Date\",\n    valuePlaceholder: \"Enter date\",\n    valueLabels: [\n      { label: \"Date from\", placeholder: \"Enter date from\" },\n      { label: \"Date to\", placeholder: \"Enter date to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"YYYY-MM-DD\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD\");\n      const fmt = \"yyyy-MM-dd\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDate).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    spelImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDate\"],\n        },\n        methodName: \"parse\",\n        args: [\n          {var: \"v\"},\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [\n              {var: \"fmt\"}\n            ]\n          },\n        ],\n      }\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (args?.fmt?.value?.includes?.(\" \") || args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\"))\n        return [undefined, `Invalid date format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      return this.utils.moment(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  time: {\n    type: \"time\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    valueFormat: \"HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Time\",\n    valuePlaceholder: \"Enter time\",\n    valueLabels: [\n      { label: \"Time from\", placeholder: \"Enter time from\" },\n      { label: \"Time to\", placeholder: \"Enter time to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.format(\"HH:mm:ss\"));\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const fmt = \"HH:mm:ss\";\n      const v = dateVal.format(\"HH:mm:ss\");\n      return `T(java.time.LocalTime).parse('${v}')`;\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n    },\n    spelImportFuncs: [\n      \"T(java.time.LocalTime).parse(${v})\",\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\"\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (args?.fmt && (!args.fmt?.value?.toLowerCase?.().includes(\"hh:mm\") || args.fmt?.value?.includes(\" \")))\n        return [undefined, `Invalid time format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, \"HH:mm:ss\");\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    toJS: function (val, fieldSettings) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\") : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      // return seconds of day\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.get(\"hour\") * 60 * 60 + dateVal.get(\"minute\") * 60 + dateVal.get(\"second\");\n    },\n    elasticSearchFormatValue: function elasticSearchFormatValue(queryType, value, operator, fieldName) {\n      return {\n        script: {\n          script: {\n            source: \"doc[\".concat(fieldName, \"][0].getHour() >== params.min && doc[\").concat(fieldName, \"][0].getHour() <== params.max\"),\n            params: {\n              min: value[0],\n              max: value[1]\n            }\n          }\n        }\n      };\n    },\n  },\n  datetime: {\n    type: \"datetime\",\n    jsType: \"string\",\n    valueSrc: \"value\",\n    timeFormat: \"HH:mm\",\n    dateFormat: \"DD.MM.YYYY\",\n    valueFormat: \"YYYY-MM-DD HH:mm:ss\",\n    use12Hours: false,\n    valueLabel: \"Datetime\",\n    valuePlaceholder: \"Enter datetime\",\n    valueLabels: [\n      { label: \"Datetime from\", placeholder: \"Enter datetime from\" },\n      { label: \"Datetime to\", placeholder: \"Enter datetime to\" },\n    ],\n    formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return isForDisplay ? dateVal.format(wgtDef.dateFormat + \" \" + wgtDef.timeFormat) : JSON.stringify(val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return this.utils.SqlString.escape(dateVal.toDate());\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      const v = dateVal.format(\"YYYY-MM-DD HH:mm:ss\");\n      const fmt = \"yyyy-MM-dd HH:mm:ss\";\n      //return `new java.text.SimpleDateFormat('${fmt}').parse('${v}')`;\n      return `T(java.time.LocalDateTime).parse('${v}', T(java.time.format.DateTimeFormatter).ofPattern('${fmt}'))`;\n    },\n    spelImportFuncs: [\n      //\"new java.text.SimpleDateFormat(${fmt}).parse(${v})\",\n      {\n        obj: {\n          cls: [\"java\", \"time\", \"LocalDateTime\"],\n        },\n        methodName: \"parse\",\n        args: [\n          {var: \"v\"},\n          {\n            obj: {\n              cls: [\"java\", \"time\", \"format\", \"DateTimeFormatter\"],\n            },\n            methodName: \"ofPattern\",\n            args: [\n              {var: \"fmt\"}\n            ]\n          },\n        ],\n      }\n    ],\n    spelImportValue: function (val, wgtDef, args) {\n      if (!wgtDef)\n        return [undefined, \"No widget def to get value format\"];\n      if (!args?.fmt?.value?.includes?.(\" \"))\n        return [undefined, `Invalid datetime format ${JSON.stringify(args.fmt)}`];\n      const dateVal = this.utils.moment(val.value, this.utils.moment.ISO_8601);\n      if (dateVal.isValid()) {\n        return [dateVal.format(wgtDef?.valueFormat), []];\n      } else {\n        return [undefined, \"Invalid date\"];\n      }\n    },\n    jsonLogic: function (val, fieldDef, wgtDef) {\n      return this.utils.moment(val, wgtDef.valueFormat).toDate();\n    },\n    toJS: function (val, fieldSettings) {\n      const dateVal = this.utils.moment(val, fieldSettings.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    },\n    mongoFormatValue: function (val, fieldDef, wgtDef) {\n      const dateVal = this.utils.moment(val, wgtDef.valueFormat);\n      return dateVal.isValid() ? dateVal.toDate() : undefined;\n    }\n  },\n  boolean: {\n    type: \"boolean\",\n    jsType: \"boolean\",\n    valueSrc: \"value\",\n    labelYes: \"Yes\",\n    labelNo: \"No\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\n      return isForDisplay ? (val ? \"Yes\" : \"No\") : JSON.stringify(!!val);\n    },\n    sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.SqlString.escape(val);\n    },\n    spelFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n      return this.utils.spelEscape(val);\n    },\n    defaultValue: false,\n    toJS: (val, fieldSettings) => (val),\n    mongoFormatValue: (val, fieldDef, wgtDef) => (val),\n  },\n  field: {\n    valueSrc: \"field\",\n    formatValue: (val, fieldDef, wgtDef, isForDisplay, op, opDef, rightFieldDef) => {\n      return isForDisplay ? (rightFieldDef.label || val) : val;\n    },\n    sqlFormatValue: (val, fieldDef, wgtDef, op, opDef, rightFieldDef) => {\n      return val;\n    },\n    spelFormatValue: (val, fieldDef, wgtDef, op, opDef) => {\n      return val;\n    },\n    valueLabel: \"Field to compare\",\n    valuePlaceholder: \"Select field to compare\",\n  },\n  func: {\n    valueSrc: \"func\",\n    valueLabel: \"Function\",\n    valuePlaceholder: \"Select function\",\n  },\n  case_value: {\n    valueSrc: \"value\",\n    type: \"case_value\",\n    spelFormatValue: function (val) {\n      return this.utils.spelEscape(val === \"\" ? null : val);\n    },\n    spelImportValue: (val) => {\n      return [val.value, []];\n    }\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  text: {\n    defaultOperator: \"equal\",\n    mainWidget: \"text\",\n    widgets: {\n      text: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"proximity\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      textarea: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"like\",\n          \"not_like\",\n          \"starts_with\",\n          \"ends_with\",\n          \"is_empty\",\n          \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {},\n        opProps: {},\n      },\n      field: {\n        operators: [\n          //unary ops (like `is_empty`) will be excluded anyway, see getWidgetsForFieldOp()\n          \"equal\",\n          \"not_equal\",\n          \"proximity\", //can exclude if you want\n        ],\n      }\n    },\n  },\n  number: {\n    defaultOperator: \"equal\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      slider: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ],\n      },\n    },\n  },\n  date: {\n    defaultOperator: \"equal\",\n    widgets: {\n      date: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\"\n        ]\n      }\n    },\n  },\n  time: {\n    defaultOperator: \"equal\",\n    widgets: {\n      time: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  datetime: {\n    defaultOperator: \"equal\",\n    widgets: {\n      datetime: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      }\n    },\n  },\n  select: {\n    mainWidget: \"select\",\n    defaultOperator: \"select_equals\",\n    widgets: {\n      select: {\n        operators: [\n          \"select_equals\",\n          \"select_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n      multiselect: {\n        operators: [\n          \"select_any_in\",\n          \"select_not_any_in\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n      },\n    },\n  },\n  multiselect: {\n    defaultOperator: \"multiselect_equals\",\n    widgets: {\n      multiselect: {\n        operators: [\n          \"multiselect_contains\",\n          \"multiselect_not_contains\",\n          \"multiselect_equals\",\n          \"multiselect_not_equals\",\n          // \"is_empty\",\n          // \"is_not_empty\",\n          \"is_null\",\n          \"is_not_null\",\n        ]\n      }\n    },\n  },\n  boolean: {\n    defaultOperator: \"equal\",\n    widgets: {\n      boolean: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n          \"is_null\",\n          \"is_not_null\",\n        ],\n        widgetProps: {\n          //you can enable this if you don't use fields as value sources\n          // hideOperator: true,\n          // operatorInlineLabel: \"is\",\n        }\n      },\n      field: {\n        operators: [\n          \"equal\",\n          \"not_equal\",\n        ],\n      }\n    },\n  },\n  \"!group\": {\n    defaultOperator: \"some\",\n    mainWidget: \"number\",\n    widgets: {\n      number: {\n        widgetProps: {\n          min: 0\n        },\n        operators: [\n          // w/o operand\n          \"some\",\n          \"all\",\n          \"none\",\n\n          // w/ operand - count\n          \"equal\",\n          \"not_equal\",\n          \"less\",\n          \"less_or_equal\",\n          \"greater\",\n          \"greater_or_equal\",\n          \"between\",\n          \"not_between\",\n        ],\n        opProps: {\n          equal: {\n            label: \"Count ==\"\n          },\n          not_equal: {\n            label: \"Count !=\"\n          },\n          less: {\n            label: \"Count <\"\n          },\n          less_or_equal: {\n            label: \"Count <=\"\n          },\n          greater: {\n            label: \"Count >\"\n          },\n          greater_or_equal: {\n            label: \"Count >=\"\n          },\n          between: {\n            label: \"Count between\"\n          },\n          not_between: {\n            label: \"Count not between\"\n          }\n        }\n      }\n    }\n  },\n  \"case_value\": {\n    mainWidget: \"case_value\",\n    widgets: {\n      case_value: {}\n    }\n  },\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...defaultSettings,\n\n  convertableWidgets: {\n    \"number\": [\"slider\", \"rangeslider\"],\n    \"slider\": [\"number\", \"rangeslider\"],\n    \"rangeslider\": [\"number\", \"slider\"],\n    \"text\": [\"textarea\"],\n    \"textarea\": [\"text\"]\n  },\n\n  formatSpelField: function (field, parentField, parts, partsExt, fieldDefinition, config) {\n    let fieldName = partsExt.map(({key, parent}, ind) => {\n      if (ind == 0) {\n        if (parent == \"[map]\")\n          return `#this[${this.utils.spelEscape(key)}]`;\n        else if (parent == \"[class]\")\n          return key;\n        else\n          return key;\n      } else {\n        if (parent == \"map\" || parent == \"[map]\")\n          return `[${this.utils.spelEscape(key)}]`;\n        else if (parent == \"class\" || parent == \"[class]\")\n          return `.${key}`;\n        else\n          return `.${key}`;\n      }\n    }).join(\"\");\n    if (fieldDefinition.fieldName) {\n      fieldName = field;\n    }\n    if (fieldDefinition.isSpelVariable) {\n      fieldName = \"#\" + fieldName;\n    }\n    return fieldName;\n  },\n  sqlFormatReverse: (q) => {\n    if (q == undefined) return undefined;\n    return \"NOT(\" + q + \")\";\n  },\n  spelFormatReverse: (q) => {\n    if (q == undefined) return undefined;\n    return \"!(\" + q + \")\";\n  },\n  formatReverse: (q, operator, reversedOp, operatorDefinition, revOperatorDefinition, isForDisplay) => {\n    if (q == undefined) return undefined;\n    if (isForDisplay)\n      return \"NOT (\" + q + \")\";\n    else\n      return \"!(\" + q + \")\";\n  },\n  formatAggr: (whereStr, aggrField, operator, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay, aggrFieldDef) => {\n    const {labelForFormat, cardinality} = opDef;\n    if (cardinality == 0) {\n      const cond = whereStr ? ` HAVE ${whereStr}` : \"\";\n      return `${labelForFormat} OF ${aggrField}${cond}`;\n    } else if (cardinality == undefined || cardinality == 1) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${value}`;\n    } else if (cardinality == 2) {\n      const cond = whereStr ? ` WHERE ${whereStr}` : \"\";\n      let valFrom = value.first();\n      let valTo = value.get(1);\n      return `COUNT OF ${aggrField}${cond} ${labelForFormat} ${valFrom} AND ${valTo}`;\n    }\n  },\n  jsonLogic: {\n    groupVarKey: \"var\",\n    altVarKey: \"var\",\n    lockedOp: \"locked\"\n  },\n  \n  canCompareFieldWithField: (leftField, leftFieldConfig, rightField, rightFieldConfig) => {\n    //for type == 'select'/'multiselect' you can check listValues\n    return true;\n  },\n\n  // enable compare fields\n  valueSourcesInfo: {\n    value: {\n      label: \"Value\"\n    },\n    field: {\n      label: \"Field\",\n      widget: \"field\",\n    },\n    func: {\n      label: \"Function\",\n      widget: \"func\",\n    }\n  },\n\n};\n\n//----------------------------\n\nconst _addMixins = (config, mixins, doAdd = true) => {\n  const mixinFuncs = {\n    rangeslider: mixinWidgetRangeslider,\n    treeselect: mixinWidgetTreeselect,\n    treemultiselect: mixinWidgetTreemultiselect,\n    rangeable__date: mixinRangeableWidget(\"date\", \"date\"),\n  };\n  for (const mixName of mixins) {\n    const mixinFunc = mixinFuncs[mixName];\n    if (mixinFunc) {\n      config = mixinFunc(config, doAdd);\n    } else {\n      throw new Error(`Can't ${doAdd ? \"add\": \"remove\"} mixin ${mixName}`);\n    }\n  }\n  return config;\n};\n\nconst addMixins = (config, mixins) => {\n  return _addMixins(config, mixins, true);\n};\nconst removeMixins = (config, mixins) => {\n  return _addMixins(config, mixins, false);\n};\n\nconst mixinRangeableWidget = (type, widget) => (config, addMixin = true) => {\n  let { types } = config;\n\n  types = {\n    ...types,\n    [type]: {\n      ...types[type],\n      widgets: {\n        ...types[type].widgets,\n      }\n    }\n  };\n\n  if (addMixin) {\n    types[type].widgets[widget] = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n          textSeparators: [null, null],\n        },\n        not_between: {\n          isSpecialRange: true,\n          textSeparators: [null, null],\n        }\n      },\n      ...types[type].widgets[widget],\n    };\n  } else {\n    delete types[type].widgets[widget];\n  }\n\n  return {\n    ...config,\n    types,\n  };\n};\n\nconst mixinWidgetRangeslider = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.rangeslider = {\n      type: \"number\",\n      jsType: \"number\",\n      valueSrc: \"value\",\n      valueLabel: \"Range\",\n      valuePlaceholder: \"Select range\",\n      valueLabels: [\n        { label: \"Number from\", placeholder: \"Enter number from\" },\n        { label: \"Number to\", placeholder: \"Enter number to\" },\n      ],\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        return isForDisplay ? this.utils.stringifyForDisplay(val) : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      singleWidget: \"slider\",\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.rangeslider,\n    };\n  } else {\n    delete widgets.rangeslider;\n  }\n\n  types = {\n    ...types,\n    number: {\n      ...types.number,\n      widgets: {\n        ...types.number.widgets,\n      }\n    }\n  };\n\n  if (addMixin) {\n    types.number.widgets.rangeslider = {\n      opProps: {\n        between: {\n          isSpecialRange: true,\n        },\n        not_between: {\n          isSpecialRange: true,\n        }\n      },\n      operators: [\n        \"between\",\n        \"not_between\",\n        // \"is_empty\",\n        // \"is_not_empty\",\n        \"is_null\",\n        \"is_not_null\",\n      ],\n      ...types.number.widgets.rangeslider,\n    };\n  } else {\n    delete types.number.widgets.rangeslider;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreeselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treeselect = {\n      type: \"treeselect\",\n      jsType: \"string\",\n      valueSrc: \"value\",\n      valueLabel: \"Value\",\n      valuePlaceholder: \"Select value\",\n      formatValue: function (val, fieldDef, wgtDef, isForDisplay) {\n        const treeData = fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues;\n        let valLabel = this.utils.getTitleInListValues(treeData, val);\n        return isForDisplay ? this.utils.stringifyForDisplay(valLabel) : JSON.stringify(val);\n      },\n      sqlFormatValue: function (val, fieldDef, wgtDef, op, opDef) {\n        return this.utils.SqlString.escape(val);\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.treeselect,\n    };\n  } else {\n    delete widgets.treeselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treeselect = {\n      mainWidget: \"treeselect\",\n      defaultOperator: \"select_equals\",\n      widgets: {\n        treeselect: {\n          operators: [\n            \"select_equals\",\n            \"select_not_equals\"\n          ],\n        },\n        treemultiselect: {\n          operators: [\n            \"select_any_in\",\n            \"select_not_any_in\"\n          ],\n        },\n      },\n      ...types.treeselect,\n    };\n  } else {\n    delete types.treeselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nconst mixinWidgetTreemultiselect = (config, addMixin = true) => {\n  let { widgets, types } = config;\n\n  widgets = {\n    ...widgets,\n  };\n\n  if (addMixin) {\n    widgets.treemultiselect = {\n      type: \"treemultiselect\",\n      jsType: \"array\",\n      valueSrc: \"value\",\n      valueLabel: \"Values\",\n      valuePlaceholder: \"Select values\",\n      formatValue: function (vals, fieldDef, wgtDef, isForDisplay) {\n        const treeData = fieldDef.fieldSettings.treeValues || fieldDef.fieldSettings.listValues || fieldDef.asyncListValues;\n        let valsLabels = vals.map(v => this.utils.getTitleInListValues(treeData, v));\n        return isForDisplay ? valsLabels.map(this.utils.stringifyForDisplay) : vals.map(JSON.stringify);\n      },\n      sqlFormatValue: function (vals, fieldDef, wgtDef, op, opDef) {\n        return vals.map(v => this.utils.SqlString.escape(v));\n      },\n      spelFormatValue: function (val) { return this.utils.spelEscape(val); },\n      toJS: (val, fieldSettings) => (val),\n      ...widgets.treemultiselect,\n    };\n  } else {\n    delete widgets.treemultiselect;\n  }\n\n  types = {\n    ...types,\n  };\n\n  if (addMixin) {\n    types.treemultiselect = {\n      defaultOperator: \"multiselect_equals\",\n      widgets: {\n        treemultiselect: {\n          operators: [\n            \"multiselect_equals\",\n            \"multiselect_not_equals\",\n          ],\n        }\n      },\n      ...types.treemultiselect,\n    };\n  } else {\n    delete types.treemultiselect;\n  }\n\n  return {\n    ...config,\n    widgets,\n    types,\n  };\n};\n\nexport const ConfigMixins = {\n  addMixins,\n  removeMixins,\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\n// Mixin advanced widgets just to allow using it on server-side eg. for export routines\nconfig = addMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_FIELD_SRC = \"SET_FIELD_SRC\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import Immutable from \"immutable\";\nimport {\n  expandTreePath, expandTreeSubpath, getItemByPath, fixPathsInTree, \n  getTotalRulesCountInTree, fixEmptyGroupsInTree, isEmptyTree, hasChildren, removeIsLockedInTree\n} from \"../utils/treeUtils\";\nimport {\n  defaultRuleProperties, defaultGroupProperties, getDefaultOperator, \n  defaultOperatorOptions, defaultRoot, defaultItemProperties\n} from \"../utils/defaultUtils\";\nimport * as constants from \"./constants\";\nimport uuid from \"../utils/uuid\";\nimport {\n  getFuncConfig, getFieldConfig, getFieldWidgetConfig, getOperatorConfig\n} from \"../utils/configUtils\";\nimport {\n  getOperatorsForField, getOperatorsForType, getFirstOperator, getWidgetForFieldOp,\n  getNewValueForFieldOp, isEmptyItem, selectTypes\n} from \"../utils/ruleUtils\";\nimport {deepEqual, defaultValue, applyToJS} from \"../utils/stuff\";\nimport {validateValue} from \"../utils/validation\";\nimport omit from \"lodash/omit\";\nimport mapValues from \"lodash/mapValues\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst addNewGroup = (state, path, type, groupUuid, properties, config, children = null, meta = {}) => {\n  const {shouldCreateEmptyGroup} = config.settings;\n  const groupPath = path.push(groupUuid);\n  const canAddNewRule = !shouldCreateEmptyGroup;\n  const isDefaultCase = !!meta?.isDefaultCase;\n\n  const origState = state;\n  state = addItem(state, path, type, groupUuid, defaultGroupProperties(config).merge(properties || {}), config, children);\n  if (state !== origState) {\n    if (!children && !isDefaultCase) {\n      state = state.setIn(expandTreePath(groupPath, \"children1\"), new Immutable.OrderedMap());\n\n      // Add one empty rule into new group\n      if (canAddNewRule) {\n        state = addItem(state, groupPath, \"rule\", uuid(), defaultRuleProperties(config), config);\n      }\n    }\n\n    state = fixPathsInTree(state);\n  }\n  \n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nconst removeGroup = (state, path, config) => {\n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.slice(0, -1);\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  if (isEmptyParentGroup && !canLeaveEmptyGroup) {\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n    \n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty(!) rule to root\n      const canUseDefaultFieldAndOp = false;\n      const canGetFirst = false;\n      state = addItem(\n        state, new Immutable.List(), \"rule\", uuid(), \n        defaultRuleProperties(config, undefined, undefined, canUseDefaultFieldAndOp, canGetFirst), \n        config\n      );\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nconst removeRule = (state, path, config) => {\n  state = removeItem(state, path);\n\n  const {canLeaveEmptyGroup} = config.settings;\n  const parentPath = path.pop();\n  const parent = state.getIn(expandTreePath(parentPath));\n\n  const parentField = parent.getIn([\"properties\", \"field\"]);\n  const parentOperator = parent.getIn([\"properties\", \"operator\"]);\n  const parentValue = parent.getIn([\"properties\", \"value\", 0]);\n  const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n  const parentOperatorConfig = parentOperator ? getOperatorConfig(config, parentOperator, parentField) : null;\n  const hasGroupCountRule = parentField && parentOperator && parentOperatorConfig.cardinality != 0; // && parentValue != undefined;\n  \n  const isParentRuleGroup = parent.get(\"type\") == \"rule_group\";\n  const isEmptyParentGroup = !hasChildren(state, parentPath);\n  const canLeaveEmpty = isParentRuleGroup \n    ? hasGroupCountRule && parentFieldConfig.initialEmptyWhere\n    : canLeaveEmptyGroup;\n  \n  if (isEmptyParentGroup && !canLeaveEmpty) {\n    if (isParentRuleGroup) {\n      // deleted last rule from rule_group, so delete whole rule_group\n      state = state.deleteIn(expandTreePath(parentPath));\n    }\n\n    // check ancestors for emptiness (and delete 'em if empty)\n    state = fixEmptyGroupsInTree(state);\n\n    if (isEmptyTree(state) && !canLeaveEmptyGroup) {\n      // if whole query is empty, add one empty(!) rule to root\n      const canUseDefaultFieldAndOp = false;\n      const canGetFirst = false;\n      state = addItem(\n        state, new Immutable.List(), \"rule\", uuid(), \n        defaultRuleProperties(config, undefined, undefined, canUseDefaultFieldAndOp, canGetFirst), \n        config\n      );\n    }\n  }\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} not\n */\nconst setNot = (state, path, not) =>\n  state.setIn(expandTreePath(path, \"properties\", \"not\"), not);\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nconst setLock = (state, path, lock) =>\n  removeIsLockedInTree(state.setIn(expandTreePath(path, \"properties\", \"isLocked\"), lock));\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nconst setConjunction = (state, path, conjunction) =>\n  state.setIn(expandTreePath(path, \"properties\", \"conjunction\"), conjunction);\n\n// convert children deeply from JS to Immutable\nconst _addChildren1 = (config, item, children) => {\n  if (children && Array.isArray(children)) {\n    item.children1 = new Immutable.OrderedMap(\n      children.reduce((map, it) => {\n        const id1 = uuid();\n        const it1 = {\n          ...it,\n          properties: defaultItemProperties(config, it).merge(it.properties || {}),\n          id: id1\n        };\n        _addChildren1(config, it1, it1.children1);\n        //todo: guarantee order\n        return {\n          ...map,\n          [id1]: new Immutable.Map(it1)\n        };\n      }, {})\n    );\n  }\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} type\n * @param {string} id\n * @param {Immutable.OrderedMap} properties\n * @param {object} config\n */\nconst addItem = (state, path, type, id, properties, config, children = null) => {\n  if (type == \"switch_group\")\n    throw new Error(\"Can't add switch_group programmatically\");\n  const { maxNumberOfCases, maxNumberOfRules, maxNesting } = config.settings;\n  const rootType = state.get(\"type\");\n  const isTernary = rootType == \"switch_group\";\n  const targetItem = state.getIn(expandTreePath(path));\n  const caseGroup = isTernary ? state.getIn(expandTreePath(path.take(2))) : null;\n  const childrenPath = expandTreePath(path, \"children1\");\n  const targetChildren = state.getIn(childrenPath);\n  const hasChildren = !!targetChildren && targetChildren.size;\n  const targetChildrenSize = hasChildren ? targetChildren.size : null;\n  let currentNumber, maxNumber;\n  if (type == \"case_group\") {\n    currentNumber = targetChildrenSize;\n    maxNumber = maxNumberOfCases;\n  } else if (type == \"group\") {\n    currentNumber = path.size;\n    maxNumber = maxNesting;\n  } else if (targetItem?.get(\"type\") == \"rule_group\") {\n    // don't restrict\n  } else {\n    currentNumber = isTernary ? getTotalRulesCountInTree(caseGroup) : getTotalRulesCountInTree(state);\n    maxNumber = maxNumberOfRules;\n  }\n  const canAdd = maxNumber && currentNumber ? (currentNumber < maxNumber) : true;\n  \n  const item = {type, id, properties};\n  _addChildren1(config, item, children);\n\n  const isLastDefaultCase = type == \"case_group\" && hasChildren && targetChildren.last().get(\"children1\") == null;\n\n  if (canAdd) {\n    const newChildren = new Immutable.OrderedMap({\n      [id]: new Immutable.Map(item)\n    });\n    if (!hasChildren) {\n      state = state.setIn(childrenPath, newChildren);\n    } else if (isLastDefaultCase) {\n      const last = targetChildren.last();\n      const newChildrenWithLast = new Immutable.OrderedMap({\n        [id]: new Immutable.Map(item),\n        [last.get(\"id\")]: last\n      });\n      state = state.deleteIn(expandTreePath(childrenPath, \"children1\", last.get(\"id\")));\n      state = state.mergeIn(childrenPath, newChildrenWithLast);\n    } else {\n      state = state.mergeIn(childrenPath, newChildren);\n    }\n    state = fixPathsInTree(state);\n  }\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n */\nconst removeItem = (state, path) => {\n  state = state.deleteIn(expandTreePath(path));\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} fromPath\n * @param {Immutable.List} toPath\n * @param {string} placement, see constants PLACEMENT_*: PLACEMENT_AFTER, PLACEMENT_BEFORE, PLACEMENT_APPEND, PLACEMENT_PREPEND\n * @param {object} config\n */\nconst moveItem = (state, fromPath, toPath, placement, config) => {\n  const from = getItemByPath(state, fromPath);\n  const sourcePath = fromPath.pop();\n  const source = fromPath.size > 1 ? getItemByPath(state, sourcePath) : null;\n  const sourceChildren = source ? source.get(\"children1\") : null;\n\n  const to = getItemByPath(state, toPath);\n  const targetPath = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) ? toPath : toPath.pop();\n  const target = (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND) \n    ? to\n    : toPath.size > 1 ? getItemByPath(state, targetPath) : null;\n  const targetChildren = target ? target.get(\"children1\") : null;\n\n  if (!source || !target || !from)\n    return state;\n\n  const isSameParent = (source.get(\"id\") == target.get(\"id\"));\n  const isSourceInsideTarget = targetPath.size < sourcePath.size \n        && deepEqual(targetPath.toArray(), sourcePath.toArray().slice(0, targetPath.size));\n  const isTargetInsideSource = targetPath.size > sourcePath.size \n        && deepEqual(sourcePath.toArray(), targetPath.toArray().slice(0, sourcePath.size));\n  let sourceSubpathFromTarget = null;\n  let targetSubpathFromSource = null;\n  if (isSourceInsideTarget) {\n    sourceSubpathFromTarget = Immutable.List(sourcePath.toArray().slice(targetPath.size));\n  } else if (isTargetInsideSource) {\n    targetSubpathFromSource = Immutable.List(targetPath.toArray().slice(sourcePath.size));\n  }\n\n  let newTargetChildren = targetChildren, newSourceChildren = sourceChildren;\n  if (!isTargetInsideSource)\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  if (isSameParent) {\n    newTargetChildren = newSourceChildren;\n  } else if (isSourceInsideTarget) {\n    newTargetChildren = newTargetChildren.updateIn(expandTreeSubpath(sourceSubpathFromTarget, \"children1\"), (_oldChildren) => newSourceChildren);\n  }\n\n  if (placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) {\n    newTargetChildren = Immutable.OrderedMap().withMutations(r => {\n      for (let [itemId, item] of newTargetChildren.entries()) {\n        if (itemId == to.get(\"id\") && placement == constants.PLACEMENT_BEFORE) {\n          r.set(from.get(\"id\"), from);\n        }\n                \n        r.set(itemId, item);\n\n        if (itemId == to.get(\"id\") && placement == constants.PLACEMENT_AFTER) {\n          r.set(from.get(\"id\"), from);\n        }\n      }\n    });\n  } else if (placement == constants.PLACEMENT_APPEND) {\n    newTargetChildren = newTargetChildren.merge({[from.get(\"id\")]: from});\n  } else if (placement == constants.PLACEMENT_PREPEND) {\n    newTargetChildren = Immutable.OrderedMap({[from.get(\"id\")]: from}).merge(newTargetChildren);\n  }\n\n  if (isTargetInsideSource) {\n    newSourceChildren = newSourceChildren.updateIn(expandTreeSubpath(targetSubpathFromSource, \"children1\"), (_oldChildren) => newTargetChildren);\n    newSourceChildren = newSourceChildren.delete(from.get(\"id\"));\n  }\n\n  if (!isSameParent && !isSourceInsideTarget)\n    state = state.updateIn(expandTreePath(sourcePath, \"children1\"), (_oldChildren) => newSourceChildren);\n  if (!isTargetInsideSource)\n    state = state.updateIn(expandTreePath(targetPath, \"children1\"), (_oldChildren) => newTargetChildren);\n\n  state = fixPathsInTree(state);\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nconst setFieldSrc = (state, path, srcKey, config) => {\n  const {keepInputOnChangeFieldSrc} = config.settings;\n\n  // get fieldType for \"memory effect\"\n  const currentRule = state.getIn(expandTreePath(path));\n  const currentType = currentRule.get(\"type\");\n  const currentProperties = currentRule.get(\"properties\");\n  const currentField = currentProperties.get(\"field\");\n  //const currentFieldSrc = currentProperties.get(\"fieldSrc\");\n  const currentFielType = currentProperties.get(\"fieldType\");\n  const currentFieldConfig = getFieldConfig(config, currentField);\n  let fieldType = currentFieldConfig?.type || currentFielType;\n  if (!fieldType || fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n  const canReuseValue = !selectTypes.includes(fieldType);\n  const keepInput = keepInputOnChangeFieldSrc && !isEmptyItem(currentRule, config, true) && canReuseValue;\n\n  if (!keepInput) {\n    // clear ALL properties\n    state = state.setIn(\n      expandTreePath(path, \"properties\"),\n      defaultRuleProperties(config, null, null, false)\n    );\n  } else {\n    // clear non-relevant properties\n    state = state.setIn(expandTreePath(path, \"properties\", \"field\"), null);\n    // set fieldType for \"memory effect\"\n    state = state.setIn(expandTreePath(path, \"properties\", \"fieldType\"), fieldType);\n  }\n\n  // set fieldSrc\n  state = state.setIn(expandTreePath(path, \"properties\", \"fieldSrc\"), srcKey);\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} field\n */\nconst setField = (state, path, newField, config, asyncListValues, __isInternal) => {\n  let isInternalValueChange;\n  if (!newField)\n    return {tree: removeItem(state, path), isInternalValueChange};\n\n  const {fieldSeparator, setOpOnChangeField, showErrorMessage, keepInputOnChangeFieldSrc} = config.settings;\n  if (Array.isArray(newField))\n    newField = newField.join(fieldSeparator);\n\n  const currentType = state.getIn(expandTreePath(path, \"type\"));\n  const currentProperties = state.getIn(expandTreePath(path, \"properties\"));\n  const wasRuleGroup = currentType == \"rule_group\";\n  const currentFieldSrc = currentProperties.get(\"fieldSrc\");\n  const newFieldConfig = getFieldConfig(config, newField);\n  if (!newFieldConfig) {\n    console.warn(`No config for LHS ${newField}`);\n    return {tree: state, isInternalValueChange};\n  }\n  let fieldType = newFieldConfig.type;\n  if (fieldType === \"!group\" || fieldType === \"!struct\") {\n    fieldType = null;\n  }\n  \n  const currentOperator = currentProperties.get(\"operator\");\n  const currentOperatorOptions = currentProperties.get(\"operatorOptions\");\n  const currentField = currentProperties.get(\"field\");\n  const currentValue = currentProperties.get(\"value\");\n  const _currentValueSrc = currentProperties.get(\"valueSrc\", new Immutable.List());\n  const _currentValueType = currentProperties.get(\"valueType\", new Immutable.List());\n\n  const isRuleGroup = newFieldConfig.type == \"!group\";\n  const isRuleGroupExt = isRuleGroup && newFieldConfig.mode == \"array\";\n  const isChangeToAnotherType = wasRuleGroup != isRuleGroup;\n  const wasOkWithoutField = !currentField && currentFieldSrc && currentOperator;\n\n  // If the newly selected field supports the same operator the rule currently\n  // uses, keep it selected.\n  const lastOp = newFieldConfig && newFieldConfig.operators?.indexOf(currentOperator) !== -1 ? currentOperator : null;\n  let newOperator = null;\n  const availOps = currentFieldSrc === \"func\" \n    ? getOperatorsForType(config, fieldType)\n    : getOperatorsForField(config, newField);\n  if (availOps && availOps.length == 1)\n    newOperator = availOps[0];\n  else if (availOps && availOps.length > 1) {\n    for (let strategy of setOpOnChangeField || []) {\n      if (strategy == \"keep\" && !isChangeToAnotherType)\n        newOperator = lastOp;\n      else if (strategy == \"default\")\n        newOperator = getDefaultOperator(config, newField, false);\n      else if (strategy == \"first\")\n        newOperator = getFirstOperator(config, newField);\n      if (newOperator) //found op for strategy\n        break;\n    }\n  }\n\n  if (!isRuleGroup && !newFieldConfig.operators) {\n    console.warn(`Type ${newFieldConfig.type} is not supported`);\n    return {tree: state, isInternalValueChange};\n  }\n\n  if (wasRuleGroup && !isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule\");\n    state = state.deleteIn(expandTreePath(path, \"children1\"));\n    state = state.setIn(expandTreePath(path, \"properties\"), new Immutable.OrderedMap());\n  }\n\n  if (isRuleGroup) {\n    state = state.setIn(expandTreePath(path, \"type\"), \"rule_group\");\n    const {canReuseValue, newValue, newValueSrc, newValueType, operatorCardinality} = getNewValueForFieldOp(\n      config, config, currentProperties, newField, newOperator, \"field\", true\n    );\n    let groupProperties = defaultGroupProperties(config, newFieldConfig).merge({\n      field: newField,\n      fieldSrc: \"field\",\n      mode: newFieldConfig.mode,\n    });\n    if (isRuleGroupExt) {\n      groupProperties = groupProperties.merge({\n        operator: newOperator,\n        value: newValue,\n        valueSrc: newValueSrc,\n        valueType: newValueType,\n      });\n    }\n    state = state.setIn(expandTreePath(path, \"children1\"), new Immutable.OrderedMap());\n    state = state.setIn(expandTreePath(path, \"properties\"), groupProperties);\n    if (newFieldConfig.initialEmptyWhere && operatorCardinality == 1) { // just `COUNT(grp) > 1` without `HAVING ..`\n      // no childeren\n    } else {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, newField), config);\n    }\n    state = fixPathsInTree(state);\n  } else {\n    state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n      const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n        config, config, current, newField, newOperator, \"field\", true\n      );\n      if (showErrorMessage) {\n        current = current\n          .set(\"valueError\", newValueError);\n      }\n      const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, newField);\n      isInternalValueChange = __isInternal; //todo: filter edge cases?\n      return current\n        .set(\"field\", newField)\n        .delete(\"fieldType\") // remove \"memory effect\"\n        .set(\"fieldSrc\", currentFieldSrc)\n        .set(\"operator\", newOperator)\n        .set(\"operatorOptions\", newOperatorOptions)\n        .set(\"value\", newValue)\n        .set(\"valueSrc\", newValueSrc)\n        .set(\"valueType\", newValueType)\n        .delete(\"asyncListValues\");\n    }));\n  }\n\n  return {tree: state, isInternalValueChange};\n\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} operator\n */\nconst setOperator = (state, path, newOperator, config) => {\n  const {showErrorMessage} = config.settings;\n\n  const properties = state.getIn(expandTreePath(path, \"properties\"));\n  const children = state.getIn(expandTreePath(path, \"children1\"));\n  const currentField = properties.get(\"field\");\n  const currentFieldSrc = properties.get(\"fieldSrc\");\n  const fieldConfig = getFieldConfig(config, currentField);\n  const isRuleGroup = fieldConfig?.type == \"!group\";\n  const operatorConfig = getOperatorConfig(config, newOperator, currentField);\n  const operatorCardinality = operatorConfig ? defaultValue(operatorConfig.cardinality, 1) : null;\n\n  state = state.updateIn(expandTreePath(path, \"properties\"), (map) => map.withMutations((current) => {\n    const currentField = current.get(\"field\");\n    const currentOperatorOptions = current.get(\"operatorOptions\");\n    const _currentValue = current.get(\"value\", new Immutable.List());\n    const _currentValueSrc = current.get(\"valueSrc\", new Immutable.List());\n    const _currentOperator = current.get(\"operator\");\n\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, current, currentField, newOperator, \"operator\", true\n    );\n    if (showErrorMessage) {\n      current = current\n        .set(\"valueError\", newValueError);\n    }\n    const newOperatorOptions = canReuseValue ? currentOperatorOptions : defaultOperatorOptions(config, newOperator, currentField);\n\n    if (!canReuseValue) {\n      current = current\n        .delete(\"asyncListValues\");\n    }\n\n    return current\n      .set(\"operator\", newOperator)\n      .set(\"operatorOptions\", newOperatorOptions)\n      .set(\"value\", newValue)\n      .set(\"valueSrc\", newValueSrc)\n      .set(\"valueType\", newValueType);\n  }));\n\n  if (isRuleGroup) {\n    if (operatorCardinality == 0 && children.size == 0) {\n      state = addItem(state, path, \"rule\", uuid(), defaultRuleProperties(config, currentField), config);\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n * @param {boolean} __isInternal\n */\nconst setValue = (state, path, delta, value, valueType, config, asyncListValues, __isInternal) => {\n  const {fieldSeparator, showErrorMessage} = config.settings;\n  let isInternalValueChange;\n  const valueSrc = state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\")) || null;\n  if (valueSrc === \"field\" && Array.isArray(value))\n    value = value.join(fieldSeparator);\n\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  //const fieldSrc = state.getIn(expandTreePath(path, \"properties\", \"fieldSrc\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n  const operatorConfig = getOperatorConfig(config, operator, field);\n  const operatorCardinality = operator ? defaultValue(operatorConfig.cardinality, 1) : null;\n\n  const isEndValue = false;\n  const calculatedValueType = valueType || calculateValueType(value, valueSrc, config);\n  const canFix = false;\n  const [validateError, fixedValue] = validateValue(\n    config, field, field, operator, value, calculatedValueType, valueSrc, asyncListValues, canFix, isEndValue, true\n  );\n  const isValid = !validateError;\n  if (fixedValue !== value) {\n    // eg, get exact value from listValues (not string)\n    value = fixedValue;\n  }\n\n  // Additional validation for range values\n  if (showErrorMessage) {\n    const w = getWidgetForFieldOp(config, field, operator, valueSrc);\n    const fieldWidgetDefinition = getFieldWidgetConfig(config, field, operator, w, valueSrc);\n    const valueSrcs = Array.from({length: operatorCardinality}, (_, i) => (state.getIn(expandTreePath(path, \"properties\", \"valueSrc\", i + \"\")) || null));\n        \n    if (operatorConfig && operatorConfig.validateValues && valueSrcs.filter(vs => vs == \"value\" || vs == null).length == operatorCardinality) {\n      const values = Array.from({length: operatorCardinality}, (_, i) => (i == delta ? value : state.getIn(expandTreePath(path, \"properties\", \"value\", i + \"\")) || null));\n      const jsValues = fieldWidgetDefinition && fieldWidgetDefinition.toJS\n        ? values.map(v => fieldWidgetDefinition.toJS.call(config.ctx, v, fieldWidgetDefinition))\n        : values;\n      const rangeValidateError = operatorConfig.validateValues(jsValues);\n\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), rangeValidateError);\n    }\n  }\n  \n  const lastValueArr = state.getIn(expandTreePath(path, \"properties\", \"value\"));\n  if (!lastValueArr) {\n    state = state\n      .setIn(expandTreePath(path, \"properties\", \"value\"), new Immutable.List(new Array(operatorCardinality)))\n      .setIn(expandTreePath(path, \"properties\", \"valueType\"), new Immutable.List(new Array(operatorCardinality)))\n      .setIn(expandTreePath(path, \"properties\", \"valueError\"), new Immutable.List(new Array(operatorCardinality)));\n  }\n\n  const lastValue = state.getIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"));\n  const lastError = state.getIn(expandTreePath(path, \"properties\", \"valueError\", delta));\n  const isLastEmpty = lastValue == undefined;\n  const isLastError = !!lastError;\n  if (isValid || showErrorMessage) {\n    state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n    // set only good value\n    if (typeof value === \"undefined\") {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), undefined);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), null);\n    } else {\n      if (asyncListValues) {\n        state = state.setIn(expandTreePath(path, \"properties\", \"asyncListValues\"), asyncListValues);\n      }\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), value);\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), calculatedValueType);\n      isInternalValueChange = __isInternal && !isLastEmpty && !isLastError;\n    }\n  }\n  if (showErrorMessage) {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), validateError);\n  }\n  if (__isInternal && (isValid && isLastError || !isValid && !isLastError)) {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), validateError);\n    isInternalValueChange = false;\n  }\n  \n  return {tree: state, isInternalValueChange};\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nconst setValueSrc = (state, path, delta, srcKey, config) => {\n  const {showErrorMessage} = config.settings;\n\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  const fieldSrc = state.getIn(expandTreePath(path, \"properties\", \"fieldSrc\")) || null;\n  const operator = state.getIn(expandTreePath(path, \"properties\", \"operator\")) || null;\n\n  state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), undefined);\n  state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), null);\n  state = state.deleteIn(expandTreePath(path, \"properties\", \"asyncListValues\"));\n\n  if (showErrorMessage) {\n    // clear value error\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", delta), null);\n\n    // if current operator is range, clear possible range error\n    const operatorConfig = getOperatorConfig(config, operator, field);\n    const operatorCardinality = operator ? defaultValue(operatorConfig.cardinality, 1) : null;\n    if (operatorConfig.validateValues) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueError\", operatorCardinality), null);\n    }\n  }\n  \n  // set valueSrc\n  if (typeof srcKey === \"undefined\") {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), null);\n  } else {\n    state = state.setIn(expandTreePath(path, \"properties\", \"valueSrc\", delta + \"\"), srcKey);\n  }\n\n  // maybe set default value\n  if (srcKey) {\n    const properties = state.getIn(expandTreePath(path, \"properties\"));\n    // this call should return canReuseValue = false and provide default value\n    const {canReuseValue, newValue, newValueSrc, newValueType, newValueError} = getNewValueForFieldOp(\n      config, config, properties, field, operator, \"valueSrc\", true\n    );\n    if (!canReuseValue && newValueSrc.get(delta) == srcKey) {\n      state = state.setIn(expandTreePath(path, \"properties\", \"value\", delta + \"\"), newValue.get(delta));\n      state = state.setIn(expandTreePath(path, \"properties\", \"valueType\", delta + \"\"), newValueType.get(delta));\n    }\n  }\n\n  return state;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nconst setOperatorOption = (state, path, name, value) => {\n  return state.setIn(expandTreePath(path, \"properties\", \"operatorOptions\", name), value);\n};\n\n/**\n * @param {Immutable.Map} state\n */\nconst checkEmptyGroups = (state, config) => {\n  const {canLeaveEmptyGroup} = config.settings;\n  if (!canLeaveEmptyGroup) {\n    state = fixEmptyGroupsInTree(state);\n  }\n  return state;\n};\n\n\n/**\n * \n */\nconst calculateValueType = (value, valueSrc, config) => {\n  let calculatedValueType = null;\n  if (value) {\n    if (valueSrc === \"field\") {\n      const fieldConfig = getFieldConfig(config, value);\n      if (fieldConfig) {\n        calculatedValueType = fieldConfig.type;\n      }\n    } else if (valueSrc === \"func\") {\n      const funcKey = value.get(\"func\");\n      if (funcKey) {\n        const funcConfig = getFuncConfig(config, funcKey);\n        if (funcConfig) {\n          calculatedValueType = funcConfig.returnType;\n        }\n      }\n    }\n  }\n  return calculatedValueType;\n};\n\nconst getField = (state, path) => {\n  const field = state.getIn(expandTreePath(path, \"properties\", \"field\")) || null;\n  return field;\n};\n\nconst emptyDrag = {\n  dragging: {\n    id: null,\n    x: null,\n    y: null,\n    w: null,\n    h: null\n  },\n  mousePos: {},\n  dragStart: {\n    id: null,\n  },\n};\n\nconst getActionMeta = (action, state) => {\n  if (!action || !action.type)\n    return null;\n  const actionKeysToOmit = [\n    \"config\", \"asyncListValues\", \"__isInternal\"\n  ];\n  const actionTypesToIgnore = [\n    constants.SET_TREE,\n    constants.SET_DRAG_START,\n    constants.SET_DRAG_PROGRESS,\n    constants.SET_DRAG_END,\n  ];\n  let meta = mapValues(omit(action, actionKeysToOmit), applyToJS);\n  let affectedField = action.path && getField(state.tree, action.path) || action.field;\n  if (affectedField) {\n    if (affectedField?.toJS)\n      affectedField = affectedField.toJS();\n    meta.affectedField = affectedField;\n  }\n  if (actionTypesToIgnore.includes(action.type) || action.type.indexOf(\"@@redux\") == 0)\n    meta = null;\n  return meta;\n};\n\n/**\n * @param {Immutable.Map} state\n * @param {object} action\n */\nexport default (config, tree, getMemoizedTree, setLastTree) => {\n  const emptyTree = defaultRoot(config);\n  const initTree = tree || emptyTree;\n  const emptyState = {\n    tree: initTree, \n    ...emptyDrag\n  };\n    \n  return (state = emptyState, action) => {\n    const unset = {__isInternalValueChange: undefined, __lastAction: undefined};\n    let set = {};\n    let actionMeta = getActionMeta(action, state);\n\n    switch (action?.type) {\n    case constants.SET_TREE: {\n      const validatedTree = getMemoizedTree(action.config, action.tree);\n      set.tree = validatedTree;\n      break;\n    }\n\n    case constants.ADD_CASE_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"case_group\", action.id, action.properties, action.config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.ADD_GROUP: {\n      set.tree = addNewGroup(state.tree, action.path, \"group\", action.id, action.properties, action.config,  action.children, action.meta);\n      break;\n    }\n\n    case constants.REMOVE_GROUP: {\n      set.tree = removeGroup(state.tree, action.path, action.config);\n      break;\n    }\n\n    case constants.ADD_RULE: {\n      set.tree = addItem(state.tree, action.path, action.ruleType, action.id, action.properties, action.config, action.children);\n      break;\n    }\n\n    case constants.REMOVE_RULE: {\n      set.tree = removeRule(state.tree, action.path, action.config);\n      break;\n    }\n\n    case constants.SET_CONJUNCTION: {\n      set.tree = setConjunction(state.tree, action.path, action.conjunction);\n      break;\n    }\n\n    case constants.SET_NOT: {\n      set.tree = setNot(state.tree, action.path, action.not);\n      break;\n    }\n\n    case constants.SET_FIELD: {\n      const {tree, isInternalValueChange} = setField(\n        state.tree, action.path, action.field, action.config,\n        action.asyncListValues, action.__isInternal\n      );\n      set.__isInternalValueChange = isInternalValueChange;\n      set.tree = tree;\n      break;\n    }\n\n    case constants.SET_FIELD_SRC: {\n      set.tree = setFieldSrc(state.tree, action.path, action.srcKey, action.config);\n      break;\n    }\n\n    case constants.SET_LOCK: {\n      set.tree = setLock(state.tree, action.path, action.lock);\n      break;\n    }\n\n    case constants.SET_OPERATOR: {\n      set.tree = setOperator(state.tree, action.path, action.operator, action.config);\n      break;\n    }\n\n    case constants.SET_VALUE: {\n      const {tree, isInternalValueChange} = setValue(\n        state.tree, action.path, action.delta, action.value, action.valueType, action.config, action.asyncListValues, action.__isInternal\n      );\n      set.__isInternalValueChange = isInternalValueChange;\n      set.tree = tree;\n      break;\n    }\n\n    case constants.SET_VALUE_SRC: {\n      set.tree = setValueSrc(state.tree, action.path, action.delta, action.srcKey, action.config);\n      break;\n    }\n\n    case constants.SET_OPERATOR_OPTION: {\n      set.tree = setOperatorOption(state.tree, action.path, action.name, action.value);\n      break;\n    }\n\n    case constants.MOVE_ITEM: {\n      set.tree = moveItem(state.tree, action.fromPath, action.toPath, action.placement, action.config);\n      break;\n    }\n\n    case constants.SET_DRAG_START: {\n      set.dragStart = action.dragStart;\n      set.dragging = action.dragging;\n      set.mousePos = action.mousePos;\n      break;\n    }\n\n    case constants.SET_DRAG_PROGRESS: {\n      set.mousePos = action.mousePos;\n      set.dragging = action.dragging;\n      break;\n    }\n\n    case constants.SET_DRAG_END: {\n      set.tree = checkEmptyGroups(state.tree, config);\n      set = { ...set, ...emptyDrag };\n      break;\n    }\n\n    default: {\n      break;\n    }\n    }\n\n    if (actionMeta) {\n      set.__lastAction = actionMeta;\n    }\n\n    if (setLastTree && set.tree && state.tree) {\n      setLastTree(state.tree);\n    }\n    \n    return {...state, ...unset, ...set};\n  };\n\n};\n","import Immutable from \"immutable\";\nimport {toImmutableList} from \"../utils/stuff\";\nimport * as constants from \"../stores/constants\";\nimport { defaultRuleProperties, defaultGroupProperties } from \"../utils/defaultUtils\";\nimport uuid from \"../utils/uuid\";\n\n\n/**\n * @param {object} config\n * @param {Immutable.Map} tree\n */\nexport const setTree = (config, tree) => ({\n  type: constants.SET_TREE,\n  tree: tree,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addRule = (config, path, properties, ruleType = \"rule\", children = null, parentRuleGroupPath = null) => ({\n  type: constants.ADD_RULE,\n  ruleType: ruleType,\n  children: children,\n  path: toImmutableList(path),\n  id: uuid(),\n  properties: defaultRuleProperties(config, parentRuleGroupPath).merge(properties || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeRule = (config, path) => ({\n  type: constants.REMOVE_RULE,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addDefaultCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(properties || {}),\n  config: config,\n  meta: {\n    isDefaultCase: true\n  }\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addCaseGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_CASE_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(properties || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {Immutable.Map} properties\n */\nexport const addGroup = (config, path, properties, children = null) => ({\n  type: constants.ADD_GROUP,\n  path: toImmutableList(path),\n  children: children,\n  id: uuid(),\n  properties: defaultGroupProperties(config).merge(properties || {}),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n */\nexport const removeGroup = (config, path) => ({\n  type: constants.REMOVE_GROUP,\n  path: toImmutableList(path),\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Array} fromPath\n * @param {Array} toPath\n * @param {String} placement, see constants PLACEMENT_*\n */\nexport const moveItem = (config, fromPath, toPath, placement) => ({\n  type: constants.MOVE_ITEM,\n  fromPath: toImmutableList(fromPath),\n  toPath: toImmutableList(toPath),\n  placement: placement,\n  config: config,\n});\n","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} conjunction\n */\nexport const setConjunction = (config, path, conjunction) => ({\n  type: constants.SET_CONJUNCTION,\n  path: toImmutableList(path),\n  conjunction: conjunction\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} not\n */\nexport const setNot = (config, path, not) => ({\n  type: constants.SET_NOT,\n  path: toImmutableList(path),\n  not: not\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {bool} lock\n */\nexport const setLock = (config, path, lock) => ({\n  type: constants.SET_LOCK,\n  path: toImmutableList(path),\n  lock: lock\n});","import * as constants from \"../stores/constants\";\nimport {toImmutableList} from \"../utils/stuff\";\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} field\n */\nexport const setField = (config, path, field, asyncListValues, __isInternal) => ({\n  type: constants.SET_FIELD,\n  path: toImmutableList(path),\n  field: field,\n  config: config,\n  asyncListValues,\n  __isInternal,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {*} srcKey\n */\nexport const setFieldSrc = (config, path, srcKey) => ({\n  type: constants.SET_FIELD_SRC,\n  path: toImmutableList(path),\n  srcKey: srcKey,\n  config: config,\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} operator\n */\nexport const setOperator = (config, path, operator) => ({\n  type: constants.SET_OPERATOR,\n  path: toImmutableList(path),\n  operator: operator,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} value\n * @param {string} valueType\n * @param {*} asyncListValues\n * @param {boolean} __isInternal\n */\nexport const setValue = (config, path, delta, value, valueType, asyncListValues, __isInternal) => ({\n  type: constants.SET_VALUE,\n  path: toImmutableList(path),\n  delta: delta,\n  value: value,\n  valueType: valueType,\n  asyncListValues: asyncListValues,\n  config: config,\n  __isInternal: __isInternal\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {integer} delta\n * @param {*} srcKey\n */\nexport const setValueSrc = (config, path, delta, srcKey) => ({\n  type: constants.SET_VALUE_SRC,\n  path: toImmutableList(path),\n  delta: delta,\n  srcKey: srcKey,\n  config: config\n});\n\n/**\n * @param {object} config\n * @param {Immutable.List} path\n * @param {string} name\n * @param {*} value\n */\nexport const setOperatorOption = (config, path, name, value) => ({\n  type: constants.SET_OPERATOR_OPTION,\n  path: toImmutableList(path),\n  name: name,\n  value: value,\n  config: config\n});\n","import * as Export from \"./export\";\nimport * as Import from \"./import\";\nimport * as BasicUtils from \"./utils\";\nimport * as BasicFuncs from \"./config/funcs\";\nimport CoreConfig, { ConfigMixins } from \"./config\";\nimport TreeStore from \"./stores/tree\";\nimport * as TreeActions from \"./actions\";\n\nconst Utils = {...BasicUtils, ...Export, ...Import, ConfigMixins};\n\nexport {Utils, Export, Import, BasicFuncs, CoreConfig, TreeStore, TreeActions};\n","import { TreeStore } from \"@react-awesome-query-builder/core\";\nexport default TreeStore;\n","import React from \"react\";\n\nexport default React.createContext(); ","export const ADD_GROUP = \"ADD_GROUP\";\nexport const ADD_CASE_GROUP = \"ADD_CASE_GROUP\";\nexport const REMOVE_GROUP = \"REMOVE_GROUP\";\nexport const SET_CONJUNCTION = \"SET_CONJUNCTION\";\nexport const SET_NOT = \"SET_NOT\";\nexport const ADD_RULE = \"ADD_RULE\";\nexport const REMOVE_RULE = \"REMOVE_RULE\";\nexport const SET_FIELD = \"SET_FIELD\";\nexport const SET_FIELD_SRC = \"SET_FIELD_SRC\";\nexport const SET_OPERATOR = \"SET_OPERATOR\";\nexport const SET_VALUE = \"SET_VALUE\";\nexport const SET_VALUE_SRC = \"SET_VALUE_SRC\";\nexport const SET_OPERATOR_OPTION = \"SET_OPERATOR_OPTION\";\nexport const SET_LOCK = \"SET_LOCK\";\n\nexport const SET_TREE = \"SET_TREE\";\n\nexport const MOVE_ITEM = \"MOVE_ITEM\";\n\nexport const PLACEMENT_AFTER = \"after\";\nexport const PLACEMENT_BEFORE = \"before\";\nexport const PLACEMENT_APPEND = \"append\";\nexport const PLACEMENT_PREPEND = \"prepend\";\n\nexport const SET_DRAG_PROGRESS = \"SET_DRAG_PROGRESS\";\nexport const SET_DRAG_START = \"SET_DRAG_START\";\nexport const SET_DRAG_END = \"SET_DRAG_END\";\n","import * as constants from \"../stores/constants\";\n\n\n/**\n * @param {Object} mousePos\n * @param {Object} dragging\n */\nexport const setDragProgress = (mousePos, dragging) => ({\n  type: constants.SET_DRAG_PROGRESS,\n  mousePos: mousePos,\n  dragging: dragging,\n});\n\n/**\n * @param {Object} dragStart\n * @param {Object} dragging\n * @param {Object} mousePos\n */\nexport const setDragStart = (dragStart, dragging, mousePos) => ({\n  type: constants.SET_DRAG_START,\n  dragStart: dragStart,\n  dragging: dragging,\n  mousePos: mousePos,\n});\n\n/**\n *\n */\nexport const setDragEnd = () => ({\n  type: constants.SET_DRAG_END,\n});\n","import { TreeActions } from \"@react-awesome-query-builder/core\";\nimport * as drag from \"./drag\";\nconst { tree, group, rule } = TreeActions;\nexport {\n  tree,\n  group,\n  rule,\n  drag\n};\n","import pick from \"lodash/pick\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { extendConfig, configKeys } = Utils.ConfigUtils;\n\nconst pickConfig = (props) => {\n  return pick(props, configKeys);\n};\n\nexport const createConfigMemo = () => {\n  const configStore = new Map();\n  const maxSize = 2; // current and prev\n  let configId = 0;\n\n  const extendAndStore = (config) => {\n    const extendedConfig = extendConfig(config, ++configId);\n    if ((configStore.size + 1) > maxSize) {\n      configStore.delete(configStore.keys()[0]);\n    }\n    configStore.set(config, extendedConfig);\n    return extendedConfig;\n  };\n\n  const findBasic = (findConfig) => {\n    for (const basicConfig of configStore.keys()) {\n      const extConfig = configStore.get(basicConfig);\n      const found = configKeys.map(k => extConfig[k] === findConfig[k]).filter(v => !v).length === 0;\n      if (found) {\n        return basicConfig;\n      }\n    }\n    return findConfig;\n  };\n\n  const findExtended = (findConfig) => {\n    // strict find:\n    // return configStore.get(findConfig) || configStore.values().find(ec => ec === findConfig);\n\n    for (const savedConfig of configStore.keys()) {\n      const found = configKeys.map(k => savedConfig[k] === findConfig[k]).filter(v => !v).length === 0;\n      if (found) {\n        return configStore.get(savedConfig);\n      }\n    }\n\n    for (const extendedConfig of configStore.values()) {\n      const found = configKeys.map(k => extendedConfig[k] === findConfig[k]).filter(v => !v).length === 0;\n      if (found) {\n        return extendedConfig;\n      }\n    }\n\n    return null;\n  };\n\n  const findOrExtend = (config) => {\n    return findExtended(config) || extendAndStore(config);\n  };\n  \n  return {\n    getExtended: (props) => findOrExtend(pickConfig(props)),\n    getBasic: findBasic\n  };\n};\n","\nexport const defaultValue = (value, _default) => {\n  return (typeof value === \"undefined\") ? _default : value;\n};\n\nexport const truncateString = (str, n, useWordBoundary) => {\n  if (!n || str.length <= n) { return str; }\n  var subString = str.substr(0, n-1);\n  return (useWordBoundary \n    ? subString.substr(0, subString.lastIndexOf(\" \")) \n    : subString) + \"...\";\n};\n\nexport const immutableEqual = function(v1, v2) {\n  if (v1 === v2) {\n    return true;\n  } else {\n    return v1.equals(v2);\n  }\n};\n\n// const deepEqual = function(v1, v2) {\n//   if (v1 === v2) {\n//     return true;\n//   } else if (Map.isMap(v1)) {\n//     return v1.equals(v2);\n//   } else {\n//     return JSON.stringify(v1) == JSON.stringify(v2);\n//   }\n// };\n\n\nexport const shallowEqual = (a, b, deep = false) => {\n  if (a === b) {\n    return true;\n  } else if (Array.isArray(a))\n    return shallowEqualArrays(a, b, deep);\n  else if (a && typeof a.equals === \"function\")\n    return a.equals(b);\n  else if (typeof a === \"object\")\n    return shallowEqualObjects(a, b, deep);\n  else\n    return a === b;\n};\n\nfunction shallowEqualArrays(arrA, arrB, deep = false) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var isEqual = deep ? shallowEqual(arrA[i], arrB[i], deep) : arrA[i] === arrB[i];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualObjects(objA, objB, deep = false) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n    var isEqual = deep ? shallowEqual(objA[key], objB[key], deep) : objA[key] === objB[key];\n    if (!isEqual) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n\nconst isDev = () => (typeof process !== \"undefined\" && process.env && process.env.NODE_ENV == \"development\");\n\nexport const getLogger = (devMode = false) => {\n  const verbose = devMode != undefined ? devMode : isDev(); \n  return verbose ? console : {\n    error: () => {},\n    log: () => {},\n    warn: () => {},\n    debug: () => {},\n    info: () => {},\n  };\n};\n\n\nexport const logger = getLogger();\n\n","import {immutableEqual} from \"../utils/stuff\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { validateAndFixTree } = Utils;\n\nexport const createValidationMemo = () => {\n  let originalTree;\n  let validatedTree;\n  let configId;\n\n  return (config, tree, oldConfig = undefined, sanitizeTree = true) => {\n    if (!tree) {\n      return null;\n    }\n    if (config.__configId === configId && (immutableEqual(tree, originalTree) || immutableEqual(tree, validatedTree))) {\n      return validatedTree;\n    } else {\n      configId = config.__configId;\n      originalTree = tree;\n      if (sanitizeTree === false) {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config, false, false);\n      } else {\n        validatedTree = validateAndFixTree(tree, null, config, oldConfig || config);\n      }\n      return validatedTree;\n    }\n  };\n};\n","import React from \"react\";\nimport mapValues from \"lodash/mapValues\";\nimport {shallowEqual} from \"./stuff\";\n\nconst getReactContainerType = (el) => {\n  if (el._reactRootContainer) {\n    return \"root\";\n  }\n  if (Object.getOwnPropertyNames(el).filter(k => k.startsWith(\"__reactContainer\")).length > 0) {\n    return \"container\";\n  }\n  return undefined;\n};\n\nconst getReactRootNodeType = (node) => {\n  if (!node) {\n    return undefined;\n  }\n  const type = getReactContainerType(node);\n  if (type !== undefined) {\n    return type;\n  } else {\n    return getReactRootNodeType(node.parentNode);\n  }\n};\n\nexport const isUsingLegacyReactDomRender = (node) => {\n  return getReactRootNodeType(node) === \"root\";\n};\n\n\nexport const liteShouldComponentUpdate = (self, config) => (nextProps, nextState) => {\n  const prevProps = self.props;\n  const prevState = self.state;\n\n  let should = nextProps != prevProps || nextState != prevState;\n  if (should) {\n    if (prevState == nextState && prevProps != nextProps) {\n      let chs = [];\n      for (let k in nextProps) {\n        let changed = (nextProps[k] != prevProps[k]);\n        if (changed) {\n          if (config[k] == \"ignore\")\n            changed = false;\n          else if (config[k] == \"shallow_deep\")\n            changed = !shallowEqual(nextProps[k], prevProps[k], true);\n          else if (config[k] == \"shallow\")\n            changed = !shallowEqual(nextProps[k], prevProps[k]);\n          else if (typeof config[k] == \"function\")\n            changed = config[k](nextProps[k], prevProps[k], nextState);\n        }\n        if (changed)\n          chs.push(k);\n      }\n      if (!chs.length)\n        should = false;\n    }\n  }\n  return should;\n};\n\nexport const pureShouldComponentUpdate = (self) => function(nextProps, nextState) {\n  return (\n    !shallowEqual(self.props, nextProps)\n    || !shallowEqual(self.state, nextState)\n  );\n};\n\nconst canUseOldComponentWillReceiveProps = () => {\n  const v = React.version.split(\".\").map(parseInt.bind(null, 10));\n  return v[0] == 16 && v[1] < 3 || v[0] < 16;\n};\n\nexport const useOnPropsChanged = (obj) => {\n  // 1. `shouldComponentUpdate` should be called after `componentWillReceiveProps`\n  // 2. `shouldComponentUpdate` should not be used for PureComponent\n\n  // Because `useOnPropsChanged` can only be applied to `Component` not `PureComponent`, make it pure now\n  if (!obj.shouldComponentUpdate) {\n    obj.shouldComponentUpdate = pureShouldComponentUpdate(obj);\n  }\n\n  if (canUseOldComponentWillReceiveProps()) {\n    // Use old method\n    obj.componentWillReceiveProps = (nextProps) => {\n      obj.onPropsChanged(nextProps);\n    };\n  } else {\n    // Simulate `componentWillReceiveProps` with `shouldComponentUpdate`\n    const origShouldComponentUpdate = obj.shouldComponentUpdate;\n    const newShouldComponentUpdate = function(nextProps, nextState) {\n      const shouldNotify = !shallowEqual(obj.props, nextProps);\n      if (shouldNotify) {\n        obj.onPropsChanged(nextProps);\n      }\n      const shouldUpdate = origShouldComponentUpdate.call(obj, nextProps, nextState);\n      return shouldUpdate;\n    };\n    obj.shouldComponentUpdate = newShouldComponentUpdate.bind(obj);\n  }\n};\n\nexport const bindActionCreators = (actionCreators, config, dispatch) =>\n  mapValues(actionCreators, (actionCreator) =>\n    (...args) => dispatch(actionCreator(config, ...args))\n  );\n","import React, { Component } from \"react\";\nimport merge from \"lodash/merge\";\nimport {connect} from \"react-redux\";\nimport context from \"../stores/context\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../actions\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {useOnPropsChanged, liteShouldComponentUpdate, bindActionCreators} from \"../utils/reactUtils\";\n\n\nclass Query extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    onChange: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    tree: PropTypes.any, //instanceOf(Immutable.Map)\n    //dispatch: PropTypes.func.isRequired,\n    //__isInternalValueChange\n    //__lastAction\n    //getMemoizedTree: PropTypes.func.isRequired,\n    //getBasicConfig: PropTypes.func.isRequired,\n    //sanitizeTree\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this._updateActions(props);\n\n    // For preventive validation (tree and config consistency)\n    // When config has changed from QueryContainer, \n    //  but new dispatched validated tree value is not in redux store yet (tree prop is old)\n    this.validatedTree = props.getMemoizedTree(props.config, props.tree, undefined, props.sanitizeTree);\n    this.oldValidatedTree = this.validatedTree;\n\n    //props.onChange && props.onChange(this.validatedTree, props.config);\n  }\n\n  _updateActions (props) {\n    const {config, dispatch} = props;\n    this.actions = bindActionCreators({...actions.tree, ...actions.group, ...actions.rule}, config, dispatch);\n  }\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    tree: (nextValue) => {\n      if (nextValue === this.oldValidatedTree && this.oldValidatedTree === this.validatedTree) {\n        // Got value dispatched from QueryContainer\n        // Ignore, because we've just rendered it\n        return false;\n      }\n      return true;\n    }\n  });\n\n  onPropsChanged(nextProps) {\n    const {onChange} = nextProps;\n    const oldConfig = this.props.config;\n    const newTree = nextProps.tree;\n    const oldTree = this.props.tree;\n    const newConfig = nextProps.config;\n\n    this.oldValidatedTree = this.validatedTree;\n    this.validatedTree = newTree;\n    if (oldConfig !== newConfig) {\n      this._updateActions(nextProps);\n      this.validatedTree = nextProps.getMemoizedTree(newConfig, newTree, oldConfig);\n    }\n\n    const validatedTreeChanged = !immutableEqual(this.validatedTree, this.oldValidatedTree);\n    if (validatedTreeChanged) {\n      const newBasicConfig = nextProps.getBasicConfig(newConfig);\n      onChange && onChange(this.validatedTree, newBasicConfig, nextProps.__lastAction);\n    }\n  }\n\n  render() {\n    const {config, renderBuilder, dispatch, __isInternalValueChange} = this.props;\n    const builderProps = {\n      tree: this.validatedTree,\n      actions: this.actions,\n      config: config,\n      dispatch: dispatch,\n      __isInternalValueChange\n    };\n\n    return renderBuilder(builderProps);\n  }\n}\n\n\nconst ConnectedQuery = connect(\n  (state) => {\n    return {\n      tree: state.tree,\n      __isInternalValueChange: state.__isInternalValueChange,\n      __lastAction: state.__lastAction,\n    };\n  },\n  null,\n  null,\n  {\n    context\n  }\n)(Query);\nConnectedQuery.displayName = \"ConnectedQuery\";\n\n\nexport default ConnectedQuery;\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport treeStoreReducer from \"../stores/tree\";\nimport context from \"../stores/context\";\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\";\nimport * as actions from \"../actions\";\nimport {createConfigMemo} from \"../utils/configUtils\";\nimport {immutableEqual} from \"../utils/stuff\";\nimport {createValidationMemo} from \"../utils/validation\";\nimport {liteShouldComponentUpdate, useOnPropsChanged} from \"../utils/reactUtils\";\nimport ConnectedQuery from \"./Query\";\nconst {defaultRoot} = Utils.DefaultUtils;\n\n\nexport default class QueryContainer extends Component {\n  static propTypes = {\n    //config\n    conjunctions: PropTypes.object.isRequired,\n    fields: PropTypes.object.isRequired,\n    types: PropTypes.object.isRequired,\n    operators: PropTypes.object.isRequired,\n    widgets: PropTypes.object.isRequired,\n    settings: PropTypes.object.isRequired,\n    ctx: PropTypes.object.isRequired,\n\n    onChange: PropTypes.func,\n    renderBuilder: PropTypes.func,\n    value: PropTypes.any, //instanceOf(Immutable.Map)\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    useOnPropsChanged(this);\n\n    const { getExtended, getBasic } = createConfigMemo();\n    this.getMemoizedConfig = getExtended;\n    this.getBasicConfig = getBasic;\n    this.getMemoizedTree = createValidationMemo();\n    \n    const config = this.getMemoizedConfig(props);\n    const tree = props.value;\n    const validatedTree = this.getMemoizedTree(config, tree);\n\n    const reducer = treeStoreReducer(config, validatedTree, this.getMemoizedTree, this.setLastTree);\n    const store = createStore(reducer);\n\n    this.config = config;\n    this.state = {\n      store\n    };\n    this.QueryWrapper = (pr) => config.settings.renderProvider(pr, config.ctx);\n  }\n\n  setLastTree = (lastTree) => {\n    if (this.prevTree) {\n      this.prevprevTree = this.prevTree;\n    }\n    this.prevTree = lastTree;\n  };\n\n  shouldComponentUpdate = liteShouldComponentUpdate(this, {\n    value: (nextValue, prevValue, state) => { return false; }\n  });\n\n  onPropsChanged(nextProps) {\n    // compare configs\n    const prevProps = this.props;\n    const oldConfig = this.config;\n    const nextConfig = this.getMemoizedConfig(nextProps);\n    const isConfigChanged = oldConfig !== nextConfig;\n\n    // compare trees\n    const storeValue = this.state.store.getState().tree;\n    const isTreeChanged = !immutableEqual(nextProps.value, this.props.value) && !immutableEqual(nextProps.value, storeValue);\n    const currentTree = isTreeChanged ? nextProps.value || defaultRoot(nextProps) : storeValue;\n    const isTreeTrulyChanged = isTreeChanged && !immutableEqual(nextProps.value, this.prevTree) && !immutableEqual(nextProps.value, this.prevprevTree);\n    this.sanitizeTree = isTreeTrulyChanged || isConfigChanged;\n\n    if (isConfigChanged) {\n      if (prevProps.settings.renderProvider !== nextProps.settings.renderProvider) {\n        this.QueryWrapper = (props) => nextConfig.settings.renderProvider(props, nextConfig.ctx);\n      }\n      this.config = nextConfig;\n    }\n    \n    if (isTreeChanged || isConfigChanged) {\n      const validatedTree = this.getMemoizedTree(nextConfig, currentTree, oldConfig, this.sanitizeTree);\n      //return Promise.resolve().then(() => {\n      this.state.store.dispatch(\n        actions.tree.setTree(nextConfig, validatedTree)\n      );\n      //});\n    }\n  }\n\n  render() {\n    // `get_children` is deprecated!\n    const {renderBuilder, get_children, onChange} = this.props;\n    const {store} = this.state;\n    const config = this.config;\n    const QueryWrapper = this.QueryWrapper;\n\n    return (\n      <QueryWrapper config={config}>\n        <Provider store={store} context={context}>\n          <ConnectedQuery\n            config={config}\n            getMemoizedTree={this.getMemoizedTree}\n            getBasicConfig={this.getBasicConfig}\n            sanitizeTree={this.sanitizeTree}\n            onChange={onChange}\n            renderBuilder={renderBuilder || get_children}\n          />\n        </Provider>\n      </QueryWrapper>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate} from \"../../utils/reactUtils\";\nimport {connect} from \"react-redux\";\nimport classNames from \"classnames\";\nconst {getFieldConfig} = Utils.ConfigUtils;\n\n\nconst createRuleContainer = (Rule) => \n  class RuleContainer extends Component {\n    static propTypes = {\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      config: PropTypes.object.isRequired,\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      operator: PropTypes.string,\n      field: PropTypes.any,\n      fieldSrc: PropTypes.string,\n      fieldType: PropTypes.string,\n      actions: PropTypes.object.isRequired, //{removeRule: Function, setField, setFieldSrc, setOperator, setOperatorOption, setValue, setValueSrc, ...}\n      onDragStart: PropTypes.func,\n      value: PropTypes.any, //depends on widget\n      valueSrc: PropTypes.any,\n      asyncListValues: PropTypes.array,\n      valueError: PropTypes.any,\n      operatorOptions: PropTypes.object,\n      reordableNodesCnt: PropTypes.number,\n      parentField: PropTypes.string, //from RuleGroup\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      \n      this.dummyFn.isDummyFn = true;\n    }\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeRule(this.props.path);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    setField = (field, asyncListValues, __isInternal) => {\n      this.props.actions.setField(this.props.path, field, asyncListValues, __isInternal);\n    };\n\n    setFieldSrc = (srcKey) => {\n      this.props.actions.setFieldSrc(this.props.path, srcKey);\n    };\n\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    setOperatorOption = (name, value) => {\n      this.props.actions.setOperatorOption(this.props.path, name, value);\n    };\n\n    setValue = (delta, value, type, asyncListValues, __isInternal) => {\n      this.props.actions.setValue(this.props.path, delta, value, type, asyncListValues, __isInternal);\n    };\n\n    setValueSrc = (delta, srcKey) => {\n      this.props.actions.setValueSrc(this.props.path, delta, srcKey);\n    };\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    render() {\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const fieldConfig = getFieldConfig(this.props.config, this.props.field);\n      const fieldType = this.props.fieldType || fieldConfig?.type || null;\n      const {showErrorMessage} = this.props.config.settings;\n      const _isGroup = fieldConfig && fieldConfig.type == \"!struct\";\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n\n      const valueError = this.props.valueError;\n      const oneValueError = valueError && valueError.toArray().filter(e => !!e).shift() || null;\n      const hasError = oneValueError != null && showErrorMessage;\n\n      return (\n        <div\n          className={classNames(\"group-or-rule-container\", \"rule-container\", hasError ? \"rule-with-error\" : null)}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Rule\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              setField={this.dummyFn}\n              setFieldSrc={this.dummyFn}\n              setOperator={this.dummyFn}\n              setOperatorOption={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              setValue={this.dummyFn}\n              setValueSrc={this.dummyFn}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueType={this.props.valueType || null}\n              valueError={this.props.valueError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Rule\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setFieldSrc={isInDraggingTempo ? this.dummyFn : this.setFieldSrc}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setOperatorOption={isInDraggingTempo ? this.dummyFn : this.setOperatorOption}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              setValueSrc={isInDraggingTempo ? this.dummyFn : this.setValueSrc}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              value={this.props.value || null}\n              valueSrc={this.props.valueSrc || null}\n              valueType={this.props.valueType || null}\n              valueError={this.props.valueError || null}\n              operatorOptions={this.props.operatorOptions}\n              config={this.props.config}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              asyncListValues={this.props.asyncListValues}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Rule) => {\n  const ConnectedRuleContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createRuleContainer(Rule));\n  ConnectedRuleContainer.displayName = \"ConnectedRuleContainer\";\n\n  return ConnectedRuleContainer;\n};\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport {connect} from \"react-redux\";\nimport {logger} from \"../../utils/stuff\";\nimport context from \"../../stores/context\";\nimport * as constants from \"../../stores/constants\";\nimport PropTypes from \"prop-types\";\nimport * as actions from \"../../actions\";\nimport {pureShouldComponentUpdate, useOnPropsChanged, isUsingLegacyReactDomRender} from \"../../utils/reactUtils\";\nconst {clone} = Utils;\nconst {getFlatTree} = Utils.TreeUtils;\n\nlet _isReorderingTree = false;\n\nconst createSortableContainer = (Builder, CanMoveFn = null) => \n  class SortableContainer extends Component {\n    static propTypes = {\n      tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n      actions: PropTypes.object.isRequired, // {moveItem: Function, ..}\n      //... see Builder\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.onPropsChanged(props);\n    }\n\n    onPropsChanged(nextProps) {\n      this.tree = getFlatTree(nextProps.tree);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (changed) {\n              //don't render <Builder> on dragging - appropriate redux-connected components will do it\n              if(k != \"dragging\" && k != \"mousePos\")\n                chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    componentDidUpdate(_prevProps, _prevState) {\n      let dragging = this.props.dragging;\n      let startDragging = this.props.dragStart;\n      _isReorderingTree = false;\n      if (startDragging && startDragging.id) {\n        dragging.itemInfo = this.tree.items[dragging.id];\n        if (dragging.itemInfo) {\n          if (dragging.itemInfo.index != startDragging.itemInfo.index || dragging.itemInfo.parent != startDragging.itemInfo.parent) {\n            const treeEl = startDragging.treeEl;\n            const treeElContainer = startDragging.treeElContainer;\n            const plhEl = this._getPlaceholderNodeEl(treeEl, true);\n            if (plhEl) {\n              const plX = plhEl.getBoundingClientRect().left + window.scrollX;\n              const plY = plhEl.getBoundingClientRect().top + window.scrollY;\n              const oldPlX = startDragging.plX;\n              const oldPlY = startDragging.plY;\n              const scrollTop = treeElContainer.scrollTop;\n              startDragging.plX = plX;\n              startDragging.plY = plY;\n              startDragging.itemInfo = clone(dragging.itemInfo);\n              startDragging.y = plhEl.offsetTop;\n              startDragging.x = plhEl.offsetLeft;\n              startDragging.clientY += (plY - oldPlY);\n              startDragging.clientX += (plX - oldPlX);\n              if (treeElContainer != document.body)\n                startDragging.scrollTop = scrollTop;\n\n              this.onDrag(this.props.mousePos, false);\n            }\n          }\n        }\n      }\n    }\n\n    _getNodeElById (treeEl, indexId, ignoreCache = false) {\n      if (indexId == null)\n        return null;\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[indexId];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      el = treeEl.querySelector('.group-or-rule-container[data-id=\"'+indexId+'\"]');\n      this._cacheEls[indexId] = el;\n      return el;\n    }\n\n    _getDraggableNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"draggable\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-draggable\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"draggable\"] = el;\n      return el;\n    }\n\n    _getPlaceholderNodeEl (treeEl, ignoreCache = false) {\n      if (!this._cacheEls)\n        this._cacheEls = {};\n      let el = this._cacheEls[\"placeholder\"];\n      if (el && document.contains(el) && !ignoreCache)\n        return el;\n      const els = treeEl.getElementsByClassName(\"qb-placeholder\");\n      el = els.length ? els[0] : null;\n      this._cacheEls[\"placeholder\"] = el;\n      return el;\n    }\n\n    _isScrollable(node) {\n      const overflowY = window.getComputedStyle(node)[\"overflow-y\"];\n      return (overflowY === \"scroll\" || overflowY === \"auto\") && (node.scrollHeight > node.offsetHeight);\n    }\n\n    _getScrollParent(node) {\n      if (node == null)\n        return null;\n    \n      if (node === document.body || this._isScrollable(node)) {\n        return node;\n      } else {\n        return this._getScrollParent(node.parentNode);\n      }\n    }\n\n    _getEventTarget = (e, dragStart) => {\n      return e && e.__mocked_window || document.body || window;\n    };\n\n    onDragStart = (id, dom, e) => {\n      let treeEl = dom.closest(\".query-builder\");\n      if (this._isUsingLegacyReactDomRender === undefined) {\n        this._isUsingLegacyReactDomRender = isUsingLegacyReactDomRender(treeEl);\n      }\n      document.body.classList.add(\"qb-dragging\");\n      treeEl.classList.add(\"qb-dragging\");\n      let treeElContainer = treeEl.closest(\".query-builder-container\") || treeEl;\n      treeElContainer = this._getScrollParent(treeElContainer) || document.body;\n      const scrollTop = treeElContainer.scrollTop;\n      \n      const _dragEl = this._getDraggableNodeEl(treeEl);\n      const _plhEl = this._getPlaceholderNodeEl(treeEl);\n\n      const tmpAllGroups = treeEl.querySelectorAll(\".group--children\");\n      const anyGroup = tmpAllGroups.length ? tmpAllGroups[0] : null;\n      let groupPadding;\n      if (anyGroup) {\n        groupPadding = window.getComputedStyle(anyGroup, null).getPropertyValue(\"padding-left\");\n        groupPadding = parseInt(groupPadding);\n      }\n\n      const dragging = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        w: dom.offsetWidth,\n        h: dom.offsetHeight,\n        itemInfo: this.tree.items[id],\n        paddingLeft: groupPadding,\n      };\n      const dragStart = {\n        id: id,\n        x: dom.offsetLeft,\n        y: dom.offsetTop,\n        scrollTop: scrollTop,\n        clientX: e.clientX,\n        clientY: e.clientY,\n        itemInfo: clone(this.tree.items[id]),\n        treeEl: treeEl,\n        treeElContainer: treeElContainer,\n      };\n      const mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n\n      const target = this._getEventTarget(e, dragStart);\n      this.eventTarget = target;\n      target.addEventListener(\"mousemove\", this.onDrag);\n      target.addEventListener(\"mouseup\", this.onDragEnd);\n\n      this.props.setDragStart(dragStart, dragging, mousePos);\n    };\n\n\n    onDrag = (e, doHandleDrag = true) => {\n      let dragging = Object.assign({}, this.props.dragging);\n      let startDragging = this.props.dragStart;\n      const paddingLeft = dragging.paddingLeft; //this.props.paddingLeft;\n      const treeElContainer = startDragging.treeElContainer;\n      const scrollTop = treeElContainer.scrollTop;\n      dragging.itemInfo = this.tree.items[dragging.id];\n      if (!dragging.itemInfo) {\n        return;\n      }\n\n      let mousePos = {\n        clientX: e.clientX,\n        clientY: e.clientY,\n      };\n      const startMousePos = {\n        clientX: startDragging.clientX,\n        clientY: startDragging.clientY,\n      };\n\n      if (e.__mock_dom) {\n        const treeEl = startDragging.treeEl;\n        const dragEl = this._getDraggableNodeEl(treeEl);\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        e.__mock_dom({treeEl, dragEl, plhEl});\n      }\n\n      //first init plX/plY\n      if (!startDragging.plX) {\n        const treeEl = startDragging.treeEl;\n        const plhEl = this._getPlaceholderNodeEl(treeEl);\n        if (plhEl) {\n          startDragging.plX = plhEl.getBoundingClientRect().left + window.scrollX;\n          startDragging.plY = plhEl.getBoundingClientRect().top + window.scrollY;\n        }\n      }\n\n      const startX = startDragging.x;\n      const startY = startDragging.y;\n      const startClientX = startDragging.clientX;\n      const startClientY = startDragging.clientY;\n      const startScrollTop = startDragging.scrollTop;\n      const pos = {\n        x: startX + (e.clientX - startClientX),\n        y: startY + (e.clientY - startClientY) + (scrollTop - startScrollTop)\n      };\n      dragging.x = pos.x;\n      dragging.y = pos.y;\n      dragging.paddingLeft = paddingLeft;\n      dragging.mousePos = mousePos;\n      dragging.startMousePos = startMousePos;\n\n\n      this.props.setDragProgress(mousePos, dragging);\n\n      const moved = doHandleDrag ? this.handleDrag(dragging, e, CanMoveFn) : false;\n\n      if (!moved) {\n        if (e.preventDefault)\n          e.preventDefault();\n      }\n    };\n\n    onDragEnd = () => {\n      let treeEl = this.props.dragStart.treeEl;\n\n      this.props.setDragEnd();\n\n      treeEl.classList.remove(\"qb-dragging\");\n      document.body.classList.remove(\"qb-dragging\");\n      this._cacheEls = {};\n\n      const target = this.eventTarget || this._getEventTarget();\n      target.removeEventListener(\"mousemove\", this.onDrag);\n      target.removeEventListener(\"mouseup\", this.onDragEnd);\n    };\n    \n\n    handleDrag (dragInfo, e, canMoveFn) {\n      const canMoveBeforeAfterGroup = true;\n      const itemInfo = dragInfo.itemInfo;\n      const paddingLeft = dragInfo.paddingLeft;\n\n      let moveInfo = null;\n      const treeEl = this.props.dragStart.treeEl;\n      const dragId = dragInfo.id;\n      const dragEl = this._getDraggableNodeEl(treeEl);\n      const plhEl = this._getPlaceholderNodeEl(treeEl);\n      let dragRect, plhRect, hovRect, treeRect;\n      if (dragEl && plhEl) {\n        dragRect = dragEl.getBoundingClientRect();\n        plhRect = plhEl.getBoundingClientRect();\n        if (!plhRect.width) {\n          return;\n        }\n        let dragDirs = {hrz: 0, vrt: 0};\n        if (dragRect.top < plhRect.top)\n          dragDirs.vrt = -1; //up\n        else if (dragRect.bottom > plhRect.bottom)\n          dragDirs.vrt = +1; //down\n        if (dragRect.left > plhRect.left)\n          dragDirs.hrz = +1; //right\n        else if (dragRect.left < plhRect.left)\n          dragDirs.hrz = -1; //left\n\n        treeRect = treeEl.getBoundingClientRect();\n        const trgCoord = {\n          x: treeRect.left + (treeRect.right - treeRect.left) / 2,\n          y: dragDirs.vrt >= 0 ? dragRect.bottom : dragRect.top,\n        };\n        let hovCNodeEl;\n        if (e.__mocked_hov_container) {\n          hovCNodeEl = e.__mocked_hov_container;\n        } else {\n          const hovNodeEl = document.elementFromPoint(trgCoord.x, trgCoord.y-1);\n          hovCNodeEl = hovNodeEl ? hovNodeEl.closest(\".group-or-rule-container\") : null;\n          if (!hovCNodeEl && hovNodeEl && hovNodeEl.classList.contains(\"query-builder-container\")) {\n            // fix 2022-01-24 - get root .group-or-rule-container\n            const rootGroupContainer = hovNodeEl?.firstChild?.firstChild;\n            if (rootGroupContainer && rootGroupContainer.classList.contains(\"group-or-rule-container\")) {\n              hovCNodeEl = rootGroupContainer;\n            }\n          }\n        }\n        if (!hovCNodeEl) {\n          logger.log(\"out of tree bounds!\");\n        } else {\n          const isGroup = hovCNodeEl.classList.contains(\"group-container\");\n          const hovNodeId = hovCNodeEl.getAttribute(\"data-id\");\n          const hovEl = hovCNodeEl;\n          let doAppend = false;\n          let doPrepend = false;\n          if (hovEl) {\n            hovRect = hovEl.getBoundingClientRect();\n            const hovHeight = hovRect.bottom - hovRect.top;\n            const hovII = this.tree.items[hovNodeId];\n            if (!hovII) {\n              throw new Error(\"There is an issue with rendering. If you use Next.js, please check getServerSideProps() method.\");\n            }\n            let trgRect = null,\n              trgEl = null,\n              trgII = null,\n              altII = null; //for canMoveBeforeAfterGroup\n\n            if (dragDirs.vrt == 0) {\n              trgII = itemInfo;\n              trgEl = plhEl;\n              if (trgEl)\n                trgRect = trgEl.getBoundingClientRect();\n            } else {\n              if (isGroup) {\n                if (dragDirs.vrt > 0) { //down\n                  //take group header (for prepend only)\n                  const hovInnerEl = hovCNodeEl.getElementsByClassName(\"group--header\");\n                  const hovEl2 = hovInnerEl.length ? hovInnerEl[0] : null;\n                  if (hovEl2) {\n                    const hovRect2 = hovEl2.getBoundingClientRect();\n                    const hovHeight2 = hovRect2.bottom - hovRect2.top;\n                    const isOverHover = ((dragRect.bottom - hovRect2.top) > hovHeight2*3/4);\n                    if (isOverHover && hovII.top > dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect2;\n                      trgEl = hovEl2;\n                      doPrepend = true;\n                    }\n                  }\n                } else if (dragDirs.vrt < 0) { //up\n                  if (hovII.lev >= itemInfo.lev) {\n                    //take whole group\n                    const isClimbToHover = ((hovRect.bottom - dragRect.top) >= 2);\n                    if (isClimbToHover && hovII.top < dragInfo.itemInfo.top) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                      doAppend = true;\n                    }\n                  }\n                }\n                if (!doPrepend && !doAppend || canMoveBeforeAfterGroup) {\n                  //take whole group and check if we can move before/after group\n                  const isOverHover = (dragDirs.vrt < 0 //up\n                    ? ((hovRect.bottom - dragRect.top) > (hovHeight-5))\n                    : ((dragRect.bottom - hovRect.top) > (hovHeight-5)));\n                  if (isOverHover) {\n                    if (!doPrepend && !doAppend) {\n                      trgII = hovII;\n                      trgRect = hovRect;\n                      trgEl = hovEl;\n                    }\n                    if (canMoveBeforeAfterGroup) {\n                      altII = hovII;\n                    }\n                  }\n                }\n              } else {\n                //check if we can move before/after group\n                const isOverHover = (dragDirs.vrt < 0 //up\n                  ? ((hovRect.bottom - dragRect.top) > hovHeight/2)\n                  : ((dragRect.bottom - hovRect.top) > hovHeight/2));\n                if (isOverHover) {\n                  trgII = hovII;\n                  trgRect = hovRect;\n                  trgEl = hovEl;\n                }\n              }\n            }\n\n            const isSamePos = (trgII && trgII.id == dragId);\n            if (trgRect) {\n              const dragLeftOffset = dragRect.left - treeRect.left;\n              const trgLeftOffset = trgRect.left - treeRect.left;\n              const _trgLev = trgLeftOffset / paddingLeft;\n              const dragLev = Math.max(0, Math.round(dragLeftOffset / paddingLeft));\n\n              //find all possible moves\n              let availMoves = [];\n              let altMoves = []; //alternatively can move after/before group, if can't move into it\n              if (isSamePos) {\n                //do nothing\n              } else {\n                if (isGroup) {\n                  if (doAppend) {\n                    availMoves.push([constants.PLACEMENT_APPEND, trgII, trgII.lev+1]);\n                  } else if (doPrepend) {\n                    availMoves.push([constants.PLACEMENT_PREPEND, trgII, trgII.lev+1]);\n                  }\n                  //alt\n                  if (canMoveBeforeAfterGroup && altII) {\n                    // fix 2022-01-24: do prepend/append instead of before/after for root\n                    const isToRoot = altII.lev == 0;\n                    // fix 2022-01-25: fix prepend/append instead of before/after for case_group\n                    const isToCase = altII.type == \"case_group\" && itemInfo.type != \"case_group\";\n                    let prevCaseId = altII.prev && this.tree.items[altII.prev].caseId;\n                    let nextCaseId = altII.next && this.tree.items[altII.next].caseId;\n                    if (itemInfo.caseId == prevCaseId)\n                      prevCaseId = null;\n                    if (itemInfo.caseId == nextCaseId)\n                      nextCaseId = null;\n                    const prevCase = prevCaseId && this.tree.items[prevCaseId];\n                    const nextCase = nextCaseId && this.tree.items[nextCaseId];\n\n                    if (dragDirs.vrt > 0) { //down\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_APPEND, altII, altII.lev+1]);\n                      } else if (isToCase && nextCase) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, nextCase, nextCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_AFTER, altII, altII.lev]);\n                      }\n                    } else if (dragDirs.vrt < 0) { //up\n                      if (isToRoot) {\n                        altMoves.push([constants.PLACEMENT_PREPEND, altII, altII.lev+1]);\n                      } else if (isToCase && prevCase) {\n                        altMoves.push([constants.PLACEMENT_APPEND, prevCase, prevCase.lev+1]);\n                      } else {\n                        altMoves.push([constants.PLACEMENT_BEFORE, altII, altII.lev]);\n                      }\n                    }\n                  }\n                }\n                if (!doAppend && !doPrepend) {\n                  if (dragDirs.vrt < 0) { //up\n                    availMoves.push([constants.PLACEMENT_BEFORE, trgII, trgII.lev]);\n                  } else if (dragDirs.vrt > 0) { //down\n                    availMoves.push([constants.PLACEMENT_AFTER, trgII, trgII.lev]);\n                  }\n                }\n              }\n              \n              //add case\n              const addCaseII = am => {\n                const toII = am[1];\n                const fromCaseII = itemInfo.caseId ? this.tree.items[itemInfo.caseId] : null;\n                const toCaseII = toII.caseId ? this.tree.items[toII.caseId] : null;\n                return [...am, fromCaseII, toCaseII];\n              };\n              availMoves = availMoves.map(addCaseII);\n              altMoves = altMoves.map(addCaseII);\n\n              //sanitize\n              availMoves = availMoves.filter(am => {\n                const placement = am[0];\n                const trg = am[1];\n                if ((placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER) && trg.parent == null)\n                  return false;\n                if (trg.collapsed && (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND))\n                  return false;\n\n                let isInside = (trg.id == itemInfo.id);\n                if (!isInside) {\n                  let tmp = trg;\n                  while (tmp.parent) {\n                    tmp = this.tree.items[tmp.parent];\n                    if (tmp.id == itemInfo.id) {\n                      isInside = true;\n                      break;\n                    }\n                  }\n                }\n                return !isInside;\n              }).map(am => {\n                const placement = am[0],\n                  toII = am[1],\n                  _lev = am[2],\n                  _fromCaseII = am[3],\n                  _toCaseII = am[4];\n                let toParentII = null;\n                if (placement == constants.PLACEMENT_APPEND || placement == constants.PLACEMENT_PREPEND)\n                  toParentII = toII;\n                else\n                  toParentII = this.tree.items[toII.parent];\n                if (toParentII && toParentII.parent == null)\n                  toParentII = null;\n                am[5] = toParentII;\n                return am;\n              });\n\n              let bestMode = null;\n              let filteredMoves = availMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              if (canMoveBeforeAfterGroup && filteredMoves.length == 0 && altMoves.length > 0) {\n                filteredMoves = altMoves.filter(am => this.canMove(itemInfo, am[1], am[0], am[3], am[4], am[5], canMoveFn));\n              }\n              const levs = filteredMoves.map(am => am[2]);\n              const curLev = itemInfo.lev;\n              const allLevs = levs.concat(curLev);\n              let closestDragLev = null;\n              if (allLevs.indexOf(dragLev) != -1)\n                closestDragLev = dragLev;\n              else if (dragLev > Math.max(...allLevs))\n                closestDragLev = Math.max(...allLevs);\n              else if (dragLev < Math.min(...allLevs))\n                closestDragLev = Math.min(...allLevs);\n              bestMode = filteredMoves.find(am => am[2] == closestDragLev);\n              if (!isSamePos && !bestMode && filteredMoves.length)\n                bestMode = filteredMoves[0];\n              moveInfo = bestMode;\n            }\n          }\n        }\n      }\n\n      if (moveInfo) {\n        this.move(itemInfo, moveInfo[1], moveInfo[0], moveInfo[3]);\n\n        // logger.log(\"DRAG-N-DROP\", JSON.stringify({\n        //   dragRect,\n        //   plhRect,\n        //   treeRect,\n        //   hovRect,\n        //   startMousePos: dragInfo.startMousePos,\n        //   mousePos: dragInfo.mousePos,\n        // }));\n        return true;\n      }\n\n      return false;\n    }\n\n    canMove (fromII, toII, placement, fromCaseII, toCaseII, toParentII, canMoveFn) {\n      if (!fromII || !toII)\n        return false;\n      if (fromII.id === toII.id)\n        return false;\n\n      const { canRegroup, canRegroupCases, maxNesting, maxNumberOfRules, canLeaveEmptyCase } = this.props.config.settings;\n      const newLev = toParentII ? toParentII.lev + 1 : toII.lev;\n      const isBeforeAfter = placement == constants.PLACEMENT_BEFORE || placement == constants.PLACEMENT_AFTER;\n      const isPend = placement == constants.PLACEMENT_PREPEND || placement == constants.PLACEMENT_APPEND;\n      const isLev1 = isBeforeAfter && toII.lev == 1 || isPend && toII.lev == 0;\n      const isParentChange = fromII.parent != toII.parent;\n      const isStructChange = isPend || isParentChange;\n      // can't move `case_group` anywhere but before/after anoter `case_group`\n      const isForbiddenStructChange = fromII.type == \"case_group\" && !isLev1\n        // can't restruct `rule_group`\n        || fromII.parentType == \"rule_group\" || toII.type == \"rule_group\" || toII.parentType == \"rule_group\" \n        // only `case_group` can be placed under `switch_group`\n        || fromII.type != \"case_group\" && toII.type == \"case_group\" && isBeforeAfter\n        || fromII.type != \"case_group\" && toII.type == \"switch_group\"\n        // can't move rule/group to another case\n        || !canRegroupCases && fromII.caseId != toII.caseId;\n      const isLockedChange = toII.isLocked || fromII.isLocked || toParentII && toParentII.isLocked;\n\n      if (maxNesting && newLev > maxNesting)\n        return false;\n      \n      if (isStructChange && (!canRegroup || isForbiddenStructChange || isLockedChange))\n        return false;\n      \n      if (fromII.type != \"case_group\" && fromII.caseId != toII.caseId) {\n        const isLastFromCase = fromCaseII ? fromCaseII._height == 2 : false;\n        const newRulesInTargetCase = toCaseII ? toCaseII.leafsCount + 1 : 0;\n        if (maxNumberOfRules && newRulesInTargetCase > maxNumberOfRules)\n          return false;\n        if (isLastFromCase && !canLeaveEmptyCase)\n          return false;\n      }\n\n      if (fromII.type == \"case_group\" && (\n        fromII.isDefaultCase || toII.isDefaultCase\n        || toII.type == \"switch_group\" && placement == constants.PLACEMENT_APPEND\n      )) {\n        // leave default case alone\n        return false;\n      }\n\n      let res = true;\n      if (canMoveFn) {\n        res = canMoveFn(fromII.node.toJS(), toII.node.toJS(), placement, toParentII ? toParentII.node.toJS() : null);\n      }\n      return res;\n    }\n\n    move (fromII, toII, placement, toParentII) {\n      if (!this._isUsingLegacyReactDomRender) {\n        _isReorderingTree = true;\n      }\n      //logger.log(\"move\", fromII, toII, placement, toParentII);\n      this.props.actions.moveItem(fromII.path, toII.path, placement);\n    }\n\n    render() {\n      return <Builder\n        {...this.props}\n        onDragStart={this.onDragStart}\n      />;\n    }\n  };\n\n\nexport default (Builder, CanMoveFn = null) => {\n  const ConnectedSortableContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n        dragStart: state.dragStart,\n        mousePos: state.mousePos,\n      };\n    }, {\n      setDragStart: actions.drag.setDragStart,\n      setDragProgress: actions.drag.setDragProgress,\n      setDragEnd: actions.drag.setDragEnd,\n    },\n    null,\n    {\n      context\n    }\n  )(createSortableContainer(Builder, CanMoveFn));\n  ConnectedSortableContainer.displayName = \"ConnectedSortableContainer\";\n\n  return ConnectedSortableContainer;\n};\n\nexport { _isReorderingTree };\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { _isReorderingTree } from \"./SortableContainer\";\nimport classNames from \"classnames\";\n\n\nexport default (className) => (GroupOrRule) =>\n  class Draggable extends PureComponent {\n    static propTypes = {\n      isDraggingTempo: PropTypes.bool,\n      isDraggingMe: PropTypes.bool,\n      onDragStart: PropTypes.func,\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.wrapper = React.createRef();\n    }\n\n    handleDraggerMouseDown = (e) => {\n      var nodeId = this.props.id;\n      var dom = this.wrapper.current;\n        \n      if (this.props.onDragStart) {\n        this.props.onDragStart(nodeId, dom, e);\n      }\n    };\n\n    render () {\n      const {\n        isDraggingTempo,\n        isDraggingMe,\n        dragging,\n        ...otherProps\n      } = this.props;\n      const {\n        isTrueLocked,\n      } = otherProps;\n\n      let styles = {};\n      if (isDraggingMe && isDraggingTempo) {\n        if (_isReorderingTree) {\n          // don't apply old styles for dragging tempo during reorder\n        } else {\n          styles = {\n            top: dragging.y,\n            left: dragging.x,\n            width: dragging.w\n          };\n        }\n      }\n\n      const cn = classNames(className, \"group-or-rule\",\n        isDraggingMe && isDraggingTempo ? \"qb-draggable\" : null,\n        isDraggingMe && !isDraggingTempo ? \"qb-placeholder\" : null,\n        isTrueLocked ? \"locked\" : null\n      );\n\n      return (\n        <div\n          className={cn}\n          style={styles}\n          ref={this.wrapper}\n          data-id={this.props.id}\n        >\n          <GroupOrRule\n            handleDraggerMouseDown={this.handleDraggerMouseDown}\n            isDraggingMe={isDraggingMe}\n            isDraggingTempo={isDraggingTempo}\n            {...otherProps}\n          />\n        </div>\n      );\n    }\n\n  };\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport keys from \"lodash/keys\";\nimport pickBy from \"lodash/pickBy\";\nimport mapValues from \"lodash/mapValues\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFieldConfig, getOperatorConfig} = Utils.ConfigUtils;\n\n\nexport default class Operator extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.any,\n    selectedFieldType: PropTypes.string,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    readonly: PropTypes.bool,\n    //actions\n    setOperator: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"selectedOperator\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({config, selectedField, selectedFieldType, selectedOperator}) {\n    const fieldConfig = getFieldConfig(config, selectedField);\n    let operators = [...(fieldConfig?.operators || config.types[selectedFieldType]?.operators || [])];\n    if (!selectedField && !operators.includes(selectedOperator)) {\n      // eg. `prox` field was selected, then `fieldSrc` changed to `func`\n      // But `text` type excludes `proximity` operator in config, so add manually\n      operators.push(selectedOperator);\n    }\n    \n    const operatorsOptions \n      = mapValues(\n        pickBy(\n          config.operators, \n          (item, key) => operators?.indexOf(key) !== -1\n        ), \n        (_opts, op) => getOperatorConfig(config, op, selectedField)\n      );\n      \n    const items = this.buildOptions(config, operatorsOptions, operators);\n\n    const selectedOpts = operatorsOptions[selectedOperator] || {};\n    const placeholder = this.props.config.settings.operatorPlaceholder;\n    const selectedKey = selectedOperator;\n    const selectedKeys = selectedKey ? [selectedKey] : null;\n    const selectedPath = selectedKeys;\n    const selectedLabel = selectedOpts.label;\n    \n    return {\n      placeholder, items,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, fieldConfig\n    };\n  }\n\n  buildOptions(config, fields, ops) {\n    if (!fields || !ops)\n      return null;\n\n    return keys(fields).sort((a, b) => (ops.indexOf(a) - ops.indexOf(b))).map(fieldKey => {\n      const field = fields[fieldKey];\n      const label = field.label;\n      return {\n        key: fieldKey,\n        path: fieldKey,\n        label,\n      };\n    });\n  }\n\n  render() {\n    const {config, customProps, setOperator, readonly, id, groupId} = this.props;\n    const {renderOperator} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField: setOperator,\n      ...this.meta\n    };\n    if (!renderProps.items)\n      return null;\n    return renderOperator(renderProps, config.ctx);\n  }\n\n\n}\n","import React from \"react\";\n\nconst Col = ({children, ...props}) => (<div {...props}>{children}</div>);\n\nconst dummyFn = () => {};\n\nconst DragIcon = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"gray\" width=\"18px\" height=\"18px\">\n    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"/>\n  </svg>\n);\n\nconst WithConfirmFn = (Cmp) => (\n  props => {\n    const {useConfirm} = props.config.settings;\n    const confirmFn = useConfirm ? useConfirm.call(props.config.ctx, props.config.ctx) : null;\n    return <Cmp {...props} confirmFn={confirmFn} />;\n  }\n);\n\nexport {\n  Col, dummyFn, DragIcon, WithConfirmFn\n};\n","import React, { PureComponent } from \"react\";\nimport Operator from \"./Operator\";\nimport {Col} from \"../utils\";\n\n\nexport default class OperatorWrapper extends PureComponent {\n  render() {\n    const {\n      config, selectedField, selectedFieldSrc, selectedFieldType, selectedOperator, setOperator, \n      selectedFieldParts, showOperator, showOperatorLabel, selectedFieldWidgetConfig, readonly, id, groupId\n    } = this.props;\n    const operator = showOperator\n            && <Col key={\"operators-for-\"+(selectedFieldParts || []).join(\"_\")} className=\"rule--operator\">\n              { config.settings.showLabels\n                    && <label className=\"rule--label\">{config.settings.operatorLabel}</label>\n              }\n              <Operator\n                key=\"operator\"\n                config={config}\n                selectedField={selectedField}\n                selectedFieldSrc={selectedFieldSrc}\n                selectedFieldType={selectedFieldType}\n                selectedOperator={selectedOperator}\n                setOperator={setOperator}\n                readonly={readonly}\n                id={id}\n                groupId={groupId}\n              />\n            </Col>;\n    const hiddenOperator = showOperatorLabel\n            && <Col key={\"operators-for-\"+(selectedFieldParts || []).join(\"_\")} className=\"rule--operator\">\n              <div className=\"rule--operator-wrapper\">\n                {config.settings.showLabels\n                  ? <label className=\"rule--label\">&nbsp;</label>\n                  : null}\n                <div className=\"rule--operator-text-wrapper\">\n                  <span className=\"rule--operator-text\">{selectedFieldWidgetConfig.operatorInlineLabel}</span>\n                </div>\n              </div>\n            </Col>;\n    return [\n      operator,\n      hiddenOperator\n    ];\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {getFieldPathLabels} = Utils.RuleUtils;\nconst {getFieldConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\n\n\nexport default class Field extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    parentField: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //actions\n    setField: PropTypes.func.isRequired,\n    setFieldSrc: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"config\", \"parentField\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({selectedField, selectedFieldType, config, parentField}) {\n    const selectedKey = selectedField;\n    const {maxLabelsLength, fieldSeparatorDisplay, fieldPlaceholder, fieldSeparator} = config.settings;\n    const isFieldSelected = !!selectedField;\n    const placeholder = !isFieldSelected ? truncateString(fieldPlaceholder, maxLabelsLength) : null;\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPathParts(selectedKey, config);\n    const selectedPath = getFieldPathParts(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2;\n\n    const parentFieldPath = getFieldParts(parentField, config);\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig && parentFieldConfig.subfields : config.fields;\n    const lookingForFieldType = !isFieldSelected && selectedFieldType;\n    const items = this.buildOptions(parentFieldPath, config, sourceFields, lookingForFieldType, parentFieldPath);\n\n    // Field source has been chnaged, no new field selected, but op & value remains\n    const errorText = lookingForFieldType ? \"Please select field\" : null;\n\n    return {\n      placeholder, items, parentField,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n      errorText,\n    };\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = getFieldParts(fieldKey, config);\n    let label = fieldOpts?.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  buildOptions(parentFieldPath, config, fields, fieldType = undefined, path = null, optGroupLabel = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    const countFieldsMatchesType = (fields) => {\n      return Object.keys(fields).reduce((acc, fieldKey) => {\n        const field = fields[fieldKey];\n        if (field.type === \"!struct\") {\n          return acc + countFieldsMatchesType(field.subfields);\n        } else {\n          return acc + (field.type === fieldType ? 1 : 0);\n        }\n      }, 0);\n    };\n\n    return keys(fields).map(fieldKey => {\n      const fullFieldPath = [...(path ?? []), fieldKey];\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fullFieldPath, config);\n      const partsLabels = getFieldPathLabels(fullFieldPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath?.length)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n      const disabled = field.disabled;\n            \n      if (field.hideForSelect)\n        return undefined;\n\n      if (field.type == \"!struct\") {\n        const items = this.buildOptions(parentFieldPath, config, field.subfields, fieldType, fullFieldPath, label);\n        const hasItemsMatchesType = countFieldsMatchesType(field.subfields) > 0;\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items,\n          matchesType: hasItemsMatchesType,\n        };\n      } else {\n        const matchesType = fieldType !== undefined ? field.type === fieldType : undefined;\n        return {\n          disabled,\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroupLabel,\n          matchesType,\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  render() {\n    const {config, customProps, setField, setFieldSrc, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      id,\n      groupId,\n      config, \n      customProps, \n      readonly,\n      setField,\n      setFieldSrc,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst { clone } = Utils;\nconst {getFieldConfig, getFuncConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\nconst {getFuncPathLabels, getWidgetForFieldOp} = Utils.RuleUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class FuncSelect extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldType: PropTypes.string,\n    fieldSrc: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n    isLHS: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n      \n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"fieldType\", \"fieldSrc\", \"operator\", \"isFuncArg\", \"isLHS\"];\n    const keysForMeta = [\"config\", \"field\", \"fieldType\", \"fieldSrc\", \"value\", \"isLHS\"];\n    const needUpdateItems = !this.items || keysForItems.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps, this.meta);\n    }\n  }\n\n  getItems({config, field, fieldType, isLHS, operator, parentFuncs, fieldDefinition, isFuncArg}, {lookingForFieldType}) {\n    const {canUseFuncForField} = config.settings;\n    const filteredFuncs = this.filterFuncs(config, config.funcs, field, fieldType, isLHS, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition);\n    const items = this.buildOptions(config, filteredFuncs, lookingForFieldType);\n    return items;\n  }\n\n  getMeta({config, field, fieldType, value, isLHS, isFuncArg}) {\n    const {funcPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedFuncKey = value;\n    const isFuncSelected = !!value;\n\n    const leftFieldConfig = getFieldConfig(config, field);\n    const leftFieldWidgetField = leftFieldConfig?.widgets?.field;\n    const leftFieldWidgetFieldProps = leftFieldWidgetField && leftFieldWidgetField.widgetProps || {};\n    const placeholder = !isFuncSelected ? funcPlaceholder : null;\n\n    const currFunc = isFuncSelected ? getFuncConfig(config, selectedFuncKey) : null;\n    const selectedOpts = currFunc || {};\n\n    const selectedKeys = getFieldPathParts(selectedFuncKey, config);\n    const selectedPath = getFieldPathParts(selectedFuncKey, config, true);\n    const selectedLabel = this.getFuncLabel(currFunc, selectedFuncKey, config);\n    const partsLabels = getFuncPathLabels(selectedFuncKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel)\n      selectedFullLabel = null;\n\n    const isRootFuncAtLHS = isLHS && !isFuncArg;\n    const lookingForFieldType = isRootFuncAtLHS && !isFuncSelected && fieldType;\n    // Field source has been chnaged, no new func selected, but op & value remains\n    const errorText = lookingForFieldType ? \"Please select function\" : null;\n  \n    return {\n      placeholder,\n      selectedKey: selectedFuncKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedFullLabel,\n      errorText,\n      lookingForFieldType,\n    };\n  }\n\n  filterFuncs(config, funcs, leftFieldFullkey, fieldType, isLHS, operator, canUseFuncForField, parentFuncs, isFuncArg, fieldDefinition) {\n    funcs = clone(funcs);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    let expectedType;\n    let targetDefinition = leftFieldConfig;\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = widget && config.widgets[widget];\n    if (isFuncArg) {\n      targetDefinition = fieldDefinition;\n      expectedType = fieldDefinition?.type;\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else if (leftFieldConfig) {\n      expectedType = leftFieldConfig.type;\n    } else if (!isLHS) {\n      // no field at LHS, but can use type from \"memory effect\"\n      expectedType = fieldType;\n    }\n\n    function _filter(list, path) {\n      for (let funcKey in list) {\n        let subfields = list[funcKey].subfields;\n        let subpath = (path ? path : []).concat(funcKey);\n        let funcFullkey = subpath.join(fieldSeparator);\n        let funcConfig = getFuncConfig(config, funcFullkey);\n        if (funcConfig.type == \"!struct\") {\n          if(_filter(subfields, subpath) == 0)\n            delete list[funcKey];\n        } else {\n          let canUse = !expectedType || funcConfig.returnType == expectedType;\n          if (targetDefinition?.funcs)\n            canUse = canUse && targetDefinition.funcs.includes(funcFullkey);\n          if (canUseFuncForField)\n            canUse = canUse && canUseFuncForField(leftFieldFullkey, leftFieldConfig, funcFullkey, funcConfig, operator);\n          // don't use func in func (can be configurable, but usually users don't need this)\n          if (!funcConfig.allowSelfNesting && parentFuncs && parentFuncs.map(([func, _arg]) => func).includes(funcFullkey))\n            canUse = false;\n          if (!canUse)\n            delete list[funcKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(funcs, []);\n\n    return funcs;\n  }\n\n  buildOptions(config, funcs, fieldType = undefined, path = null, optGroupLabel = null) {\n    if (!funcs)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    const countFieldsMatchesType = (fields) => {\n      return Object.keys(fields).reduce((acc, fieldKey) => {\n        const field = fields[fieldKey];\n        if (field.type === \"!struct\") {\n          return acc + countFieldsMatchesType(field.subfields);\n        } else {\n          return acc + (field.type === fieldType ? 1 : 0);\n        }\n      }, 0);\n    };\n\n    return keys(funcs).map(funcKey => {\n      const fullFuncPath = [...(path ?? []), funcKey];\n      const func = funcs[funcKey];\n      const label = this.getFuncLabel(func, fullFuncPath, config);\n      const partsLabels = getFuncPathLabels(fullFuncPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label)\n        fullLabel = null;\n      const tooltip = func.tooltip;\n\n      if (func.type == \"!struct\") {\n        const items = this.buildOptions(config, func.subfields, fieldType, fullFuncPath, label);\n        const hasItemsMatchesType = countFieldsMatchesType(func.subfields) > 0;\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          items,\n          matchesType: hasItemsMatchesType,\n        };\n      } else {\n        const matchesType = fieldType !== undefined ? func.returnType === fieldType : undefined;\n        return {\n          key: funcKey,\n          path: prefix+funcKey,\n          label,\n          fullLabel,\n          tooltip,\n          grouplabel: optGroupLabel,\n          matchesType,\n        };\n      }\n    });\n  }\n\n  getFuncLabel(funcOpts, funcKey, config) {\n    if (!funcKey) return null;\n    let fieldSeparator = config.settings.fieldSeparator;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let funcParts = getFieldParts(funcKey, config);\n    let label = funcOpts?.label || last(funcParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderFunc} = config.settings;\n    const renderProps = {\n      config,\n      customProps,\n      readonly,\n      setField: setValue,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderFunc(renderProps, config.ctx);\n  }\n\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { getTitleInListValues } = Utils.ListUtils;\nconst { _widgetDefKeysToOmit } = Utils.ConfigUtils;\n\nexport default ({\n  delta, isFuncArg, valueSrc,\n  value: immValue, valueError: immValueError, asyncListValues,\n  isSpecialRange, fieldDefinition,\n  widget, widgetDefinition, widgetValueLabel, valueLabels, textSeparators, setValueHandler,\n  config, field, fieldSrc, fieldType, isLHS, operator, readonly, parentField, parentFuncs, id, groupId\n}) => {\n  const {factory: widgetFactory, ...fieldWidgetProps} = widgetDefinition;\n  const isConst = isFuncArg && fieldDefinition.valueSources && fieldDefinition.valueSources.length == 1 && fieldDefinition.valueSources[0] == \"const\";\n  const defaultValue = fieldDefinition.defaultValue;\n\n  if (!widgetFactory) {\n    return \"?\";\n  }\n    \n  let value = isSpecialRange \n    ? [immValue.get(0), immValue.get(1)] \n    : (immValue ? immValue.get(delta) : undefined);\n  const valueError = immValueError && (isSpecialRange \n    ? [immValueError.get(0), immValueError.get(1)]\n    : immValueError.get(delta)\n  ) || null;\n  if (isSpecialRange && value[0] === undefined && value[1] === undefined)\n    value = undefined;\n  const {fieldSettings} = fieldDefinition || {};\n  const widgetProps = omit({\n    ...fieldWidgetProps, \n    ...fieldSettings,\n    config: config,\n    field: field,\n    fieldSrc: fieldSrc,\n    fieldType: fieldType,\n    isLHS: isLHS,\n    parentField: parentField,\n    parentFuncs: parentFuncs,\n    fieldDefinition: fieldDefinition,\n    operator: operator,\n    delta: delta,\n    isSpecialRange: isSpecialRange,\n    isFuncArg: isFuncArg,\n    value: value,\n    valueError: valueError,\n    label: widgetValueLabel.label,\n    placeholder: widgetValueLabel.placeholder,\n    placeholders: valueLabels ? valueLabels.placeholder : null,\n    textSeparators: textSeparators,\n    setValue: setValueHandler,\n    readonly: readonly,\n    asyncListValues: asyncListValues,\n    id, groupId\n  }, [\n    ..._widgetDefKeysToOmit,\n    \"toJS\"\n  ]);\n\n  if (widget == \"field\") {\n    //\n  }\n\n  if (isConst && defaultValue) {\n    const listValues = fieldSettings?.treeValues || fieldSettings?.listValues;\n    if (typeof defaultValue == \"boolean\") {\n      return defaultValue ? (widgetProps.labelYes || \"YES\") : (widgetProps.labelNo || \"NO\");\n    } else if (listValues) {\n      if (Array.isArray(defaultValue))\n        return defaultValue.map(v => getTitleInListValues(listValues, v) || v).join(\", \");\n      else\n        return (getTitleInListValues(listValues, defaultValue) || defaultValue);  \n    }\n    return \"\"+defaultValue;\n  }\n    \n  return widgetFactory(widgetProps, config.ctx);\n};\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\nimport {defaultValue} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport pick from \"lodash/pick\";\nimport WidgetFactory from \"./WidgetFactory\";\nimport classNames from \"classnames\";\nimport {Col} from \"../utils\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\nconst {getValueSourcesForFieldOp, getWidgetForFieldOp, getValueLabel} = Utils.RuleUtils;\nconst { createListFromArray } = Utils.DefaultUtils;\n\nconst funcArgDummyOpDef = {cardinality: 1};\n\nexport default class Widget extends Component {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //instanceOf(Immutable.List)\n    valueSrc: PropTypes.any, //instanceOf(Immutable.List)\n    valueError: PropTypes.any,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    operator: PropTypes.string,\n    readonly: PropTypes.bool,\n    asyncListValues: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    //actions\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    // for isFuncArg\n    isFuncArg: PropTypes.bool,\n    fieldFunc: PropTypes.string,\n    fieldArg: PropTypes.string,\n    leftField: PropTypes.any,\n    // for RuleGroupExt\n    isForRuleGroup: PropTypes.bool,\n    parentField: PropTypes.string,\n    // for func in func\n    parentFuncs: PropTypes.array,\n    isLHS: PropTypes.bool,\n    // for case_value\n    isCaseValue: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\n      \"config\", \"field\", \"fieldSrc\", \"fieldType\", \"fieldFunc\", \"fieldArg\", \"leftField\", \"operator\", \"valueSrc\", \"isFuncArg\", \"asyncListValues\", \"isLHS\"\n    ];\n    const needUpdateMeta = !this.meta \n          || keysForMeta\n            .map(k => (\n              nextProps[k] !== prevProps[k] \n                  //tip: for isFuncArg we need to wrap value in Imm list\n                  || k == \"isFuncArg\" && nextProps[\"isFuncArg\"] && nextProps[\"value\"] !== prevProps[\"value\"])\n            )\n            .filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  _setValue = (isSpecialRange, delta, widgetType, value, asyncListValues, __isInternal) => {\n    if (isSpecialRange && Array.isArray(value)) {\n      const oldRange = [this.props.value.get(0), this.props.value.get(1)];\n      if (oldRange[0] != value[0])\n        this.props.setValue(0, value[0], widgetType, asyncListValues, __isInternal);\n      if (oldRange[1] != value[1])\n        this.props.setValue(1, value[1], widgetType, asyncListValues, __isInternal);\n    } else {\n      this.props.setValue(delta, value, widgetType, asyncListValues, __isInternal);\n    }\n  };\n\n  _onChangeValueSrc = (delta, srcKey) => {\n    this.props.setValueSrc(delta, srcKey);\n  };\n\n  getMeta({\n    config, field: simpleField, fieldSrc, fieldType, fieldFunc, fieldArg, operator, valueSrc: valueSrcs, value: values,\n    isForRuleGroup, isCaseValue, isFuncArg, leftField, asyncListValues\n  }) {\n    const field = isFuncArg ? {func: fieldFunc, arg: fieldArg} : simpleField;\n    const isOkWithoutField = !simpleField && fieldType;\n    let iValueSrcs = valueSrcs;\n    let iValues = values;\n    if (isFuncArg || isForRuleGroup || isCaseValue) {\n      iValueSrcs = createListFromArray([valueSrcs]);\n      iValues = createListFromArray([values]);\n    }\n\n    let fieldDefinition = getFieldConfig(config, field);\n    if (!fieldDefinition && isOkWithoutField) {\n      fieldDefinition = config.types[fieldType];\n    }\n    let defaultWidget = getWidgetForFieldOp(config, field, operator);\n    if (!defaultWidget && isOkWithoutField) {\n      defaultWidget = config.types[fieldType]?.mainWidget;\n    }\n    const operatorDefinition = isFuncArg\n      ? funcArgDummyOpDef\n      : getOperatorConfig(config, operator, field);\n    if ((fieldDefinition == null || operatorDefinition == null) && !isCaseValue) {\n      return null;\n    }\n    const isSpecialRange = operatorDefinition?.isSpecialRange;\n    const isSpecialRangeForSrcField = isSpecialRange && (iValueSrcs.get(0) == \"field\" || iValueSrcs.get(1) == \"field\");\n    const isTrueSpecialRange = isSpecialRange && !isSpecialRangeForSrcField;\n    const cardinality = isTrueSpecialRange ? 1 : defaultValue(operatorDefinition?.cardinality, 1);\n    if (cardinality === 0) {\n      return null;\n    }\n\n    let valueSources = getValueSourcesForFieldOp(config, field, operator, fieldDefinition);\n    if (!field) {\n      valueSources = Object.keys(config.settings.valueSourcesInfo);\n    }\n    const widgets = range(0, cardinality).map(delta => {\n      const valueSrc = iValueSrcs.get(delta) || null;\n      let widget = getWidgetForFieldOp(config, field, operator, valueSrc);\n      let widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      if (isSpecialRangeForSrcField) {\n        widget = widgetDefinition.singleWidget;\n        widgetDefinition = getFieldWidgetConfig(config, field, operator, widget, valueSrc);\n      }\n      if (!widgetDefinition && isOkWithoutField) {\n        widget = [\"func\", \"field\"].includes(valueSrc) ? valueSrc : defaultWidget;\n        widgetDefinition = config.widgets[widget];\n      }\n      const widgetType = widgetDefinition?.type;\n      const valueLabel = getValueLabel(config, field, operator, delta, valueSrc, isTrueSpecialRange);\n      const widgetValueLabel = getValueLabel(config, field, operator, delta, null, isTrueSpecialRange);\n      const sepText = operatorDefinition?.textSeparators ? operatorDefinition?.textSeparators[delta] : null;\n      const setValueSrcHandler = this._onChangeValueSrc.bind(this, delta);\n\n      let valueLabels = null;\n      let textSeparators = null;\n      if (isSpecialRange) {\n        valueLabels = [\n          getValueLabel(config, field, operator, 0),\n          getValueLabel(config, field, operator, 1)\n        ];\n        valueLabels = {\n          placeholder: [ valueLabels[0].placeholder, valueLabels[1].placeholder ],\n          label: [ valueLabels[0].label, valueLabels[1].label ],\n        };\n        textSeparators = operatorDefinition?.textSeparators;\n      }\n\n      const setValueHandler = this._setValue.bind(this, isSpecialRange, delta, widgetType);\n\n      return {\n        valueSrc,\n        valueLabel,\n        widget,\n        sepText,\n        setValueSrcHandler,\n        widgetDefinition,\n        widgetValueLabel,\n        valueLabels,\n        textSeparators,\n        setValueHandler\n      };\n    });\n      \n    return {\n      defaultWidget,\n      fieldDefinition,\n      operatorDefinition,\n      isSpecialRange: isTrueSpecialRange,\n      cardinality,\n      valueSources,\n      widgets,\n      iValues, //correct for isFuncArg\n      aField: field, //correct for isFuncArg\n      asyncListValues,\n    };\n  }\n\n  renderWidget = (delta, meta, props) => {\n    const {config, isFuncArg, leftField, operator, value: values, valueError, readonly, parentField, parentFuncs, id, groupId, fieldSrc, fieldType, isLHS} = props;\n    const {settings} = config;\n    const { widgets, iValues, aField, valueSources } = meta;\n    const value = isFuncArg ? iValues : values;\n    const field = isFuncArg ? leftField : aField;\n    const {valueSrc, valueLabel} = widgets[delta];\n    const hasValueSources = valueSources.length > 1 && !readonly;\n    \n    const widgetLabel = settings.showLabels\n      ? <label className=\"rule--label\">{valueLabel.label}</label>\n      : null;\n    return (\n      <div key={\"widget-\"+field+\"-\"+delta} className={classNames(\n        valueSrc == \"func\" ? \"widget--func\" : \"widget--widget\",\n        hasValueSources ? \"widget--has-valuerscs\" : \"widget--has-no-valuerscs\"\n      )}>\n        {valueSrc == \"func\" ? null : widgetLabel}\n        <WidgetFactory\n          id={id}\n          groupId={groupId}\n          valueSrc={valueSrc}\n          delta={delta}\n          value={value}\n          valueError={valueError}\n          isFuncArg={isFuncArg}\n          isLHS={isLHS}\n          {...pick(meta, [\"isSpecialRange\", \"fieldDefinition\", \"asyncListValues\"])}\n          {...pick(widgets[delta], [\"widget\", \"widgetDefinition\", \"widgetValueLabel\", \"valueLabels\", \"textSeparators\", \"setValueHandler\"])}\n          config={config}\n          field={field}\n          fieldSrc={fieldSrc}\n          fieldType={fieldType}\n          parentField={parentField}\n          parentFuncs={parentFuncs}\n          operator={operator}\n          readonly={readonly}\n        />\n      </div>\n    );\n  };\n\n  renderValueSources = (delta, meta, props) => {\n    const {config, isFuncArg, leftField, operator, readonly} = props;\n    const {settings} = config;\n    const { valueSources, widgets, aField } = meta;\n    const field = isFuncArg ? leftField : aField;\n    const {valueSrc, setValueSrcHandler} = widgets[delta];\n    const {valueSourcesInfo, renderValueSources} = settings;\n    const valueSourcesOptions = valueSources.map(srcKey => [srcKey, {\n      label: valueSourcesInfo[srcKey].label\n    }]);\n    const ValueSources = (pr) => renderValueSources(pr, config.ctx);\n\n    const sourceLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return valueSources.length > 1 && !readonly\n      && <div key={\"valuesrc-\"+field+\"-\"+delta} className=\"widget--valuesrc\">\n        {sourceLabel}\n        <ValueSources\n          key={\"valuesrc-\"+delta}\n          delta={delta}\n          valueSources={valueSourcesOptions}\n          valueSrc={valueSrc}\n          config={config}\n          field={field}\n          operator={operator}\n          setValueSrc={setValueSrcHandler}\n          readonly={readonly}\n          title={settings.valueSourcesPopupTitle}\n        />\n      </div>;\n  };\n\n  renderSep = (delta, meta, props) => {\n    const {config} = props;\n    const {widgets} = meta;\n    const {settings} = config;\n    const {sepText} = widgets[delta];\n\n    const sepLabel = settings.showLabels\n      ? <label className=\"rule--label\">&nbsp;</label>\n      : null;\n\n    return sepText\n      && <div key={\"widget-separators-\"+delta} className={classNames(\n        \"widget--sep\",\n        delta == 0 && \"widget--sep-first\"\n      )} >\n        {sepLabel}\n        <span>{sepText}</span>\n      </div>;\n  };\n\n  renderWidgetDelta = (delta) => {\n    const sep = this.renderSep(delta, this.meta, this.props);\n    const sources = this.renderValueSources(delta, this.meta, this.props);\n    const widgetCmp = this.renderWidget(delta, this.meta, this.props);\n\n    return [\n      sep,\n      sources,\n      widgetCmp,\n    ];\n  };\n\n  render() {\n    if (!this.meta) return null;\n    const { defaultWidget, cardinality } = this.meta;\n    if (!defaultWidget) return null;\n    const name = defaultWidget;\n\n    return (\n      <Col\n        className={`rule--widget rule--widget--${name.toUpperCase()}`}\n        key={\"widget-col-\"+name}\n      >\n        {range(0, cardinality).map(this.renderWidgetDelta)}\n      </Col>\n    );\n  }\n\n}\n","import React, { Component, PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport FuncSelect from \"./FuncSelect\";\nimport Widget from \"./Widget\";\nimport {Col} from \"../utils\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nconst {getFuncConfig} = Utils.ConfigUtils;\nconst {setFunc, setArgValue, setArgValueSrc} = Utils.FuncUtils;\n\n\nexport default class FuncWidget extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    value: PropTypes.object, //instanceOf(Immutable.Map) //with keys 'func' and `args`\n    setValue: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n    isLHS: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"config\", \"field\", \"operator\", \"value\", \"fieldSrc\", \"fieldType\", \"isLHS\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({config, field, operator, value}) {\n    const funcKey = value ? value.get(\"func\") : null;\n    const funcDefinition = funcKey ? getFuncConfig(config, funcKey) : null;\n\n    return {\n      funcDefinition, funcKey\n    };\n  }\n\n  setFunc = (funcKey) => {\n    this.props.setValue( setFunc(this.props.value, funcKey, this.props.config) );\n  };\n\n  setArgValue = (argKey, argVal, asyncListValues, __isInternal) => {\n    const {config} = this.props;\n    const {funcDefinition} = this.meta;\n    const {args} = funcDefinition;\n    const argDefinition = args[argKey];\n\n    this.props.setValue(\n      setArgValue(this.props.value, argKey, argVal, argDefinition, config),\n      asyncListValues,\n      __isInternal\n    );\n  };\n\n  setArgValueSrc = (argKey, argValSrc) => {\n    const {config} = this.props;\n    const {funcDefinition} = this.meta;\n    const {args} = funcDefinition;\n    const argDefinition = args[argKey];\n\n    this.props.setValue(\n      setArgValueSrc(this.props.value, argKey, argValSrc, argDefinition, config),\n    );\n  };\n\n  renderFuncSelect = () => {\n    const {config, field, fieldType, fieldSrc, isLHS, operator, customProps, value, readonly, parentFuncs, id, groupId, isFuncArg, fieldDefinition} = this.props;\n    const funcKey = value ? value.get(\"func\") : null;\n    const selectProps = {\n      value: funcKey,\n      setValue: this.setFunc,\n      config, field, fieldType, fieldSrc, isLHS, operator, customProps, readonly, parentFuncs, \n      isFuncArg, fieldDefinition,\n      id, groupId,\n    };\n    const {showLabels, funcLabel} = config.settings;\n    const widgetLabel = showLabels\n      ? <label className=\"rule--label\">{funcLabel}</label>\n      : null;\n\n    return (\n      <Col key=\"func\" className=\"rule--func\">\n        {widgetLabel}\n        <FuncSelect {...selectProps} />\n      </Col>\n    );\n  };\n\n  renderArgLabel = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix, label} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label\">\n        {label || argKey}\n      </Col>\n    );\n  };\n\n  renderArgLabelSep = (argKey, argDefinition) => {\n    const {valueSources, type, showPrefix} = argDefinition;\n    const {config} = this.props;\n    const isConst = valueSources && valueSources.length == 1 && valueSources[0] == \"const\";\n    const forceShow = !config.settings.showLabels && (type == \"boolean\" || isConst) && showPrefix;\n    if (!forceShow) return null;\n    return (\n      <Col className=\"rule--func--arg-label-sep\">\n        {\":\"}\n      </Col>\n    );\n  };\n\n  renderArgVal = (funcKey, argKey, argDefinition) => {\n    const {config, field, fieldType, fieldSrc, isLHS, operator, value, readonly, parentFuncs, id, groupId} = this.props;\n    const arg = value ? value.getIn([\"args\", argKey]) : null;\n    const argVal = arg ? arg.get(\"value\") : undefined;\n    const defaultValueSource = argDefinition.valueSources.length == 1 ? argDefinition.valueSources[0] : undefined;\n    const argValSrc = arg ? (arg.get(\"valueSrc\") || defaultValueSource || \"value\") : defaultValueSource;\n\n    const widgetProps = {\n      config, \n      fieldFunc: funcKey,\n      fieldArg: argKey,\n      leftField: field,\n      fieldType, // type of leftField\n      fieldSrc, // src of leftField\n      isLHS,\n      operator: null,\n      value: argVal,\n      valueSrc: argValSrc,\n      setValue: this.setArgValue,\n      setValueSrc: this.setArgValueSrc,\n      funcKey,\n      argKey,\n      argDefinition,\n      readonly,\n      parentFuncs,\n      id,\n      groupId,\n    };\n    //tip: value & valueSrc will be converted to Immutable.List at <Widget>\n\n    return (\n      <Col className=\"rule--func--arg-value\">\n        <ArgWidget {...widgetProps} />\n      </Col>\n    );\n  };\n\n  renderArgSep = (argKey, argDefinition, argIndex, {renderSeps}) => {\n    if (!argIndex) return null;\n    return (\n      <Col className=\"rule--func--arg-sep\">\n        {renderSeps ? renderSeps[argIndex - 1] : \", \"}\n      </Col>\n    );\n  };\n\n  renderBracketBefore = ({renderBrackets}) => {\n    return (\n      <Col key=\"before_args\" className=\"rule--func--bracket-before\">\n        {renderBrackets ? renderBrackets[0] : \"(\"}\n      </Col>\n    );\n  };\n\n  renderBracketAfter = ({renderBrackets}) => {\n    return (\n      <Col key=\"after_args\" className=\"rule--func--bracket-after\">\n        {renderBrackets ? renderBrackets[1] : \")\"}\n      </Col>\n    );\n  };\n\n  renderFuncArgs = () => {\n    const {funcDefinition, funcKey} = this.meta;\n    if (!funcKey) return null;\n    const {args} = funcDefinition || {};\n    if (!args) return null;\n\n    return (\n      <>\n        {this.renderBracketBefore(funcDefinition)}\n        <Col key=\"args\" className=\"rule--func--args\">\n          {Object.keys(args).map((argKey, argIndex) => (\n            <Col key={`arg-${argKey}-${argIndex}`} className=\"rule--func--arg\">\n              {this.renderArgSep(argKey, args[argKey], argIndex, funcDefinition)}\n              {this.renderArgLabel(argKey, args[argKey])}\n              {this.renderArgLabelSep(argKey, args[argKey])}\n              {this.renderArgVal(funcKey, argKey, args[argKey])}\n            </Col>\n          ))}\n        </Col>\n        {this.renderBracketAfter(funcDefinition)}\n      </>\n    );\n  };\n\n  render() {\n    return (\n      <Col className=\"rule--func--wrapper\">\n        {this.renderFuncSelect()}\n        {this.renderFuncArgs()}\n      </Col>\n    );\n  }\n}\n\n\nclass ArgWidget extends Component {\n  static propTypes = {\n    funcKey: PropTypes.string.isRequired,\n    argKey: PropTypes.string.isRequired,\n    setValue: PropTypes.func.isRequired,\n    setValueSrc: PropTypes.func.isRequired,\n    readonly: PropTypes.bool,\n    isLHS: PropTypes.bool,\n    parentFuncs: PropTypes.array,\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"parentFuncs\", \"funcKey\", \"argKey\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({parentFuncs, funcKey, argKey}) {\n    const newParentFuncs = [...(parentFuncs || []), [funcKey, argKey]];\n\n    return {\n      parentFuncs: newParentFuncs\n    };\n  }\n\n  setValue = (_delta, value, _widgetType, asyncListValues, __isInternal) => {\n    const {setValue, argKey} = this.props;\n    setValue(argKey, value, asyncListValues, __isInternal);\n  };\n\n  setValueSrc = (_delta, valueSrc, _widgetType) => {\n    const {setValueSrc, argKey} = this.props;\n    setValueSrc(argKey, valueSrc);\n  };\n\n  render() {\n    const {parentFuncs} = this.meta;\n    return (\n      <Widget\n        {...this.props}\n        setValue={this.setValue}\n        setValueSrc={this.setValueSrc}\n        isFuncArg={true}\n        parentFuncs={parentFuncs}\n      />\n    );\n  }\n}\n","import React, { PureComponent } from \"react\";\nimport Field from \"./Field\";\nimport {Col} from \"../utils\";\nimport FuncWidget from \"./FuncWidget\";\n\n\nexport default class FieldWrapper extends PureComponent {\n  render() {\n    const {classname, canSelectFieldSource} = this.props;\n    const fieldSources = canSelectFieldSource && this.renderFieldSources();\n    const field = this.renderField();\n    if (!canSelectFieldSource) {\n      return field;\n    } else {\n      return (\n        <Col className={\"rule--field-wrapper\"}>\n          {fieldSources}\n          {field}\n        </Col>\n      );\n    }\n  }\n\n  renderField = () => {\n    const {config, classname, selectedField, selectedFieldSrc, selectedFieldType, setField, parentField, readonly, id, groupId} = this.props;\n    const supportedFieldSrcs = [\"func\", \"field\"];\n    if (!supportedFieldSrcs.includes(selectedFieldSrc)) {\n      return \"?\";\n    }\n    const field = selectedFieldSrc === \"func\" ? (\n      <FuncWidget\n        isLHS={true}\n        config={config}\n        value={selectedField}\n        fieldSrc={selectedFieldSrc}\n        fieldType={selectedFieldType}\n        parentField={parentField}\n        setValue={setField}\n        readonly={readonly}\n        id={id}\n        groupId={groupId}\n        key={\"field-func-\" + id}\n      />\n    ) : (\n      <Field\n        config={config}\n        selectedField={selectedField}\n        selectedFieldSrc={selectedFieldSrc}\n        selectedFieldType={selectedFieldType}\n        parentField={parentField}\n        setField={setField}\n        customProps={config.settings.customFieldSelectProps}\n        readonly={readonly}\n        id={id}\n        groupId={groupId}\n        key={\"field-\" + id}\n      />\n    );\n    const fieldLabel = selectedFieldSrc === \"func\" ? config.settings.funcLabel : config.settings.fieldLabel;\n    const label = config.settings.showLabels && selectedFieldSrc !== \"func\" && <label className=\"rule--label\">{fieldLabel}</label>;\n    return (\n      <div key={selectedFieldSrc} className={classname}>\n        {label}\n        {field}\n      </div>\n    );\n  };\n\n  renderFieldSources = () => {\n    const { config, readonly, selectedFieldSrc, setFieldSrc, id } = this.props;\n    const { settings } = config;\n    const {\n      fieldSources,\n      valueSourcesInfo,\n      renderValueSources,\n    } = settings;\n    const fieldSourcesOptions = fieldSources.map((srcKey) => [\n      srcKey,\n      {\n        label: valueSourcesInfo[srcKey].label,\n      },\n    ]);\n    const ValueSources = (pr) => renderValueSources(pr, config.ctx);\n\n    const sourceLabel = settings.showLabels ? (\n      <label className=\"rule--label\">&nbsp;</label>\n    ) : null;\n\n    return (\n      fieldSources.length > 1 && !readonly && (\n        <div key={\"fieldsrc\"} className={\"rule--fieldsrc\"}>\n          {sourceLabel}\n          <ValueSources\n            key={\"fieldsrc-\" + id}\n            valueSources={fieldSourcesOptions}\n            valueSrc={selectedFieldSrc}\n            config={config}\n            setValueSrc={setFieldSrc}\n            readonly={readonly}\n            title={settings.fieldSourcesPopupTitle}\n          />\n        </div>\n      )\n    );\n  };\n}\n","import React, { PureComponent } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nconst {getOperatorConfig} = Utils.ConfigUtils;\n\nexport default class OperatorOptions extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    operatorOptions: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string.isRequired,\n    readonly: PropTypes.bool,\n    //actions\n    setOperatorOption: PropTypes.func.isRequired,\n  };\n\n  render() {\n    if (!this.props.selectedOperator)\n      return null;\n    const operatorDefinitions = getOperatorConfig(this.props.config, this.props.selectedOperator, this.props.selectedField);\n    if (typeof operatorDefinitions.options === \"undefined\") {\n      return null;\n    }\n\n    const { factory: optionsFactory, ...basicOptionsProps } = operatorDefinitions.options;\n    const optionsProps = Object.assign({}, basicOptionsProps, {\n      config: this.props.config,\n      field: this.props.selectedField,\n      fieldSrc: this.props.selectedFieldSrc,\n      operator: this.props.selectedOperator,\n      options: this.props.operatorOptions,\n      setOption: this.props.setOperatorOption,\n      readonly: this.props.readonly,\n    });\n    const optionsCmp = optionsFactory(optionsProps, this.props.config.ctx);\n    const name = this.props.selectedOperator;\n\n    return (\n      <div className={`rule--operator rule--operator--${name.toUpperCase()}`}>\n        {optionsCmp}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport RuleContainer from \"../containers/RuleContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport Widget from \"../rule/Widget\";\nimport OperatorOptions from \"../rule/OperatorOptions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, DragIcon, dummyFn, WithConfirmFn} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getOperatorConfig, getFieldWidgetConfig, getFieldParts} = Utils.ConfigUtils;\nconst {isEmptyRuleProperties} = Utils.RuleUtils;\n\n\nclass Rule extends Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedFieldType: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    operatorOptions: PropTypes.object,\n    config: PropTypes.object.isRequired,\n    value: PropTypes.any, //depends on widget\n    valueSrc: PropTypes.any,\n    valueType: PropTypes.any,\n    asyncListValues: PropTypes.array,\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    parentField: PropTypes.string, //from RuleGroup\n    valueError: PropTypes.any,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //path: PropTypes.instanceOf(Immutable.List),\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    setOperator: PropTypes.func,\n    setOperatorOption: PropTypes.func,\n    setLock: PropTypes.func,\n    removeSelf: PropTypes.func,\n    setValue: PropTypes.func,\n    setValueSrc: PropTypes.func,\n    reordableNodesCnt: PropTypes.number,\n    totalRulesCnt: PropTypes.number,\n    parentReordableNodesCnt: PropTypes.number,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForMeta = [\"selectedField\", \"selectedFieldSrc\", \"selectedFieldType\", \"selectedOperator\", \"config\", \"reordableNodesCnt\", \"isLocked\"];\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getMeta({selectedField, selectedFieldType, selectedOperator, config, reordableNodesCnt, isLocked}) {\n    const {keepInputOnChangeFieldSrc} = config.settings;\n    const selectedFieldParts = getFieldParts(selectedField, config);\n    const selectedFieldConfig = getFieldConfig(config, selectedField);\n    const isSelectedGroup = selectedFieldConfig && selectedFieldConfig.type == \"!struct\";\n    const isOkWithoutField = keepInputOnChangeFieldSrc && selectedFieldType;\n    const isFieldSelected = !!selectedField || isOkWithoutField;\n    const isFieldAndOpSelected = isFieldSelected && selectedOperator;\n    const selectedOperatorConfig = getOperatorConfig(config, selectedOperator, selectedField);\n    const selectedOperatorHasOptions = selectedOperatorConfig && selectedOperatorConfig.options != null;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator, null, null) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n\n    const showDragIcon = config.settings.canReorder && reordableNodesCnt > 1 && !isLocked;\n    const showOperator = isFieldSelected && !hideOperator;\n    const showOperatorLabel = isFieldSelected && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showWidget = isFieldAndOpSelected && !isSelectedGroup;\n    const showOperatorOptions = isFieldAndOpSelected && selectedOperatorHasOptions;\n\n    return {\n      selectedFieldParts, selectedFieldWidgetConfig,\n      showDragIcon, showOperator, showOperatorLabel, showWidget, showOperatorOptions\n    };\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeRuleConfirmOptions: confirmOptions} = config.settings;\n    const doRemove = () => {\n      this.props.removeSelf();\n    };\n    if (confirmOptions && !this.isEmptyCurrentRule()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      doRemove();\n    }\n  }\n\n  _buildWidgetProps({\n    selectedField, selectedFieldSrc, selectedFieldType,\n    selectedOperator, operatorOptions,\n    value, valueType, valueSrc, asyncListValues, valueError,\n    parentField,\n  }) {\n    return {\n      field: selectedField,\n      fieldSrc: selectedFieldSrc,\n      fieldType: selectedFieldType,\n      operator: selectedOperator,\n      operatorOptions,\n      value,\n      valueType,\n      valueSrc,\n      asyncListValues,\n      valueError,\n      parentField,\n    };\n  }\n\n  isEmptyCurrentRule() {\n    const {config} = this.props;\n    const ruleData = this._buildWidgetProps(this.props);\n    return isEmptyRuleProperties(ruleData, config);\n  }\n\n  renderField() {\n    const {\n      config, isLocked, parentField, groupId, id,\n      selectedFieldSrc, selectedField, selectedFieldType, setField, setFieldSrc,\n    } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    // tip: don't allow function inside !group (yet)\n\n    return <FieldWrapper\n      key=\"field\"\n      classname={classNames(\n        selectedFieldSrc == \"func\" ? \"rule--field--func\" : \"rule--field\",\n      )}\n      config={config}\n      canSelectFieldSource={!parentField}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={!immutableFieldsMode ? setField : dummyFn}\n      setFieldSrc={!immutableFieldsMode ? setFieldSrc : dummyFn}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator () {\n    const {config, isLocked} = this.props;\n    const {\n      selectedFieldParts, selectedFieldWidgetConfig, showOperator, showOperatorLabel\n    } = this.meta;\n    const { immutableOpsMode } = config.settings;\n    \n    return <OperatorWrapper\n      key=\"operator\"\n      config={config}\n      selectedField={this.props.selectedField}\n      selectedFieldSrc={this.props.selectedFieldSrc}\n      selectedFieldType={this.props.selectedFieldType}\n      selectedOperator={this.props.selectedOperator}\n      setOperator={!immutableOpsMode ? this.props.setOperator : dummyFn}\n      selectedFieldParts={selectedFieldParts}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableOpsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  renderWidget() {\n    const {config, isLocked} = this.props;\n    const { showWidget } = this.meta;\n    const { immutableValuesMode } = config.settings;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      {...this._buildWidgetProps(this.props)}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      setValueSrc={!immutableValuesMode ? this.props.setValueSrc : dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderOperatorOptions() {\n    const {config} = this.props;\n    const { showOperatorOptions } = this.meta;\n    const { immutableOpsMode, immutableValuesMode } = config.settings;\n    if (!showOperatorOptions) return null;\n\n    const opOpts = <OperatorOptions\n      key=\"operatorOptions\"\n      selectedField={this.props.selectedField}\n      selectedOperator={this.props.selectedOperator}\n      operatorOptions={this.props.operatorOptions}\n      setOperatorOption={!immutableOpsMode ? this.props.setOperatorOption : dummyFn}\n      config={config}\n      readonly={immutableValuesMode}\n    />;\n\n    return (\n      <Col key={\"op-options-for-\"+this.props.selectedOperator} className=\"rule--operator-options\">\n        {opOpts}\n      </Col>\n    );\n  }\n\n  renderBeforeWidget() {\n    const {config} = this.props;\n    const { renderBeforeWidget } = config.settings;\n    return renderBeforeWidget \n        && <Col key={\"before-widget-for-\" +this.props.selectedOperator} className=\"rule--before-widget\">\n          {typeof renderBeforeWidget === \"function\" ? renderBeforeWidget(this.props, config.ctx) : renderBeforeWidget}\n        </Col>;\n  }\n\n  renderAfterWidget() {\n    const {config} = this.props;\n    const { renderAfterWidget } = config.settings;\n    return renderAfterWidget \n        && <Col key={\"after-widget-for-\" +this.props.selectedOperator} className=\"rule--after-widget\">\n          {typeof renderAfterWidget === \"function\" ? renderAfterWidget(this.props, config.ctx) : renderAfterWidget}\n        </Col>;\n  }\n\n  renderError() {\n    const {config, valueError} = this.props;\n    const { renderRuleError, showErrorMessage } = config.settings;\n    const oneValueError = valueError && valueError.toArray().filter(e => !!e).shift() || null;\n    return showErrorMessage && oneValueError \n        && <div className=\"rule--error\">\n          {renderRuleError ? renderRuleError({error: oneValueError}, config.ctx) : oneValueError}\n        </div>;\n  }\n\n  renderDrag() {\n    const { showDragIcon } = this.meta;\n\n    return showDragIcon\n        && <span\n          key=\"rule-drag-icon\"\n          className={\"qb-drag-handler rule--drag-handler\"}\n          onMouseDown={this.props.handleDraggerMouseDown}\n        ><DragIcon /> </span>;\n  }\n\n  renderDel() {\n    const {config, isLocked} = this.props;\n    const {\n      deleteLabel, \n      immutableGroupsMode, \n      renderButton,\n      canDeleteLocked\n    } = config.settings;\n    const Btn = (pr) => renderButton(pr, config.ctx);\n\n    return !immutableGroupsMode && (!isLocked || isLocked && canDeleteLocked) && (\n      <Btn \n        type=\"delRule\" onClick={this.removeSelf} label={deleteLabel} config={config}\n      />\n    );\n  }\n\n  renderLock() {\n    const {config, isLocked, isTrueLocked, id} = this.props;\n    const {\n      lockLabel, lockedLabel, showLock,\n      renderSwitch\n    } = config.settings;\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n      \n    return showLock && !(isLocked && !isTrueLocked) && (\n      <Switch \n        type=\"lock\" id={id} value={isLocked} setValue={this.setLock} label={lockLabel} checkedLabel={lockedLabel} hideLabel={true} config={config}\n      />\n    );\n  }\n\n  render () {\n    const { showOperatorOptions, selectedFieldWidgetConfig } = this.meta;\n    const { valueSrc, value, config } = this.props;\n    const canShrinkValue = valueSrc.first() == \"value\" && !showOperatorOptions && value.size == 1 && selectedFieldWidgetConfig.fullWidth;\n    const { renderButtonGroup } = config.settings;\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const parts = [\n      this.renderField(),\n      this.renderOperator(),\n      this.renderBeforeWidget(),\n      this.renderWidget(),\n      this.renderAfterWidget(),\n      this.renderOperatorOptions(),\n    ];\n    const body = <div key=\"rule-body\" className={classNames(\"rule--body\", canShrinkValue && \"can--shrink--value\")}>{parts}</div>;\n\n    const error = this.renderError();\n    const drag = this.renderDrag();\n    const lock = this.renderLock();\n    const del = this.renderDel();\n      \n    return (\n      <>\n        {drag}\n        <div className=\"rule--body--wrapper\">\n          {body}{error}\n        </div>\n        <div className=\"rule--header\">\n          <BtnGrp config={config}>\n            {lock}\n            {del}\n          </BtnGrp>\n        </div>\n      </>\n    );\n  }\n\n}\n\n\nexport default RuleContainer(Draggable(\"rule\")(WithConfirmFn(Rule)));\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport mapValues from \"lodash/mapValues\";\nimport context from \"../../stores/context\";\nimport {pureShouldComponentUpdate, useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {connect} from \"react-redux\";\nconst {defaultGroupConjunction} = Utils.DefaultUtils;\n\n\nconst createGroupContainer = (Group, itemType) => \n  class GroupContainer extends Component {\n    static propTypes = {\n      config: PropTypes.object.isRequired,\n      actions: PropTypes.object.isRequired, //{setConjunction: Function, removeGroup, addGroup, addRule, ...}\n      path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n      id: PropTypes.string.isRequired,\n      groupId: PropTypes.string,\n      not: PropTypes.bool,\n      conjunction: PropTypes.string,\n      children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n      onDragStart: PropTypes.func,\n      reordableNodesCnt: PropTypes.number,\n      field: PropTypes.any, // for RuleGroup\n      fieldSrc: PropTypes.string, // for RuleGroup\n      fieldType: PropTypes.string, // for RuleGroup\n      parentField: PropTypes.string, //from RuleGroup\n      isLocked: PropTypes.bool,\n      isTrueLocked: PropTypes.bool,\n      //connected:\n      dragging: PropTypes.object, //{id, x, y, w, h}\n      isDraggingTempo: PropTypes.bool,\n    };\n\n    constructor(props) {\n      super(props);\n      this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n      useOnPropsChanged(this);\n\n      this.selectedConjunction = this._selectedConjunction(props);\n      this.conjunctionOptions = this._getConjunctionOptions(props);\n      this.dummyFn.isDummyFn = true;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      let prevProps = this.props;\n      let prevState = this.state;\n\n      let should = this.pureShouldComponentUpdate(nextProps, nextState);\n      if (should) {\n        if (prevState == nextState && prevProps != nextProps) {\n          const draggingId = (nextProps.dragging.id || prevProps.dragging.id);\n          const isDraggingMe = draggingId == nextProps.id;\n          let chs = [];\n          for (let k in nextProps) {\n            let changed = (nextProps[k] != prevProps[k]);\n            if (k == \"dragging\" && !isDraggingMe) {\n              changed = false; //dragging another item -> ignore\n            }\n            if (changed) {\n              chs.push(k);\n            }\n          }\n          if (!chs.length)\n            should = false;\n        }\n      }\n      return should;\n    }\n\n    onPropsChanged(nextProps) {\n      const {config, id, conjunction} = nextProps;\n      const oldConfig = this.props.config;\n      const oldConjunction = this.props.conjunction;\n      if (oldConfig != config || oldConjunction != conjunction) {\n        this.selectedConjunction = this._selectedConjunction(nextProps);\n        this.conjunctionOptions = this._getConjunctionOptions(nextProps);\n      }\n    }\n\n    _getConjunctionOptions (props) {\n      return mapValues(props.config.conjunctions, (item, index) => ({\n        id: `conjunction-${props.id}-${index}`,\n        name: `conjunction[${props.id}]`,\n        key: index,\n        label: item.label,\n        checked: index === this._selectedConjunction(props),\n      }));\n    }\n\n    _selectedConjunction = (props) => {\n      props = props || this.props;\n      return props.conjunction || defaultGroupConjunction(props.config, props.field);\n    };\n\n    setConjunction = (conj = null) => {\n      this.props.actions.setConjunction(this.props.path, conj);\n    };\n\n    setNot = (not = null) => {\n      this.props.actions.setNot(this.props.path, not);\n    };\n\n    setLock = (lock = null) => {\n      this.props.actions.setLock(this.props.path, lock);\n    };\n\n    dummyFn = () => {};\n\n    removeSelf = () => {\n      this.props.actions.removeGroup(this.props.path);\n    };\n\n    addGroup = () => {\n      this.props.actions.addGroup(this.props.path);\n    };\n\n    addCaseGroup = () => {\n      this.props.actions.addCaseGroup(this.props.path);\n    };\n\n    addDefaultCaseGroup = () => {\n      this.props.actions.addDefaultCaseGroup(this.props.path);\n    };\n\n    addRule = () => {\n      const parentRuleGroupPath = itemType == \"rule_group\" ? this.props.field : null;\n      this.props.actions.addRule(this.props.path, undefined, undefined, undefined, parentRuleGroupPath);\n    };\n\n    // for RuleGroup\n    setField = (field, asyncListValues, __isInternal) => {\n      this.props.actions.setField(this.props.path, field, asyncListValues, __isInternal);\n    };\n\n    // for RuleGroupExt\n    setOperator = (operator) => {\n      this.props.actions.setOperator(this.props.path, operator);\n    };\n\n    setValue = (delta, value, type) => {\n      this.props.actions.setValue(this.props.path, delta, value, type);\n    };\n\n    render() {\n      const isDraggingMe = this.props.dragging.id == this.props.id;\n      const currentNesting = this.props.path.size;\n      const maxNesting = this.props.config.settings.maxNesting;\n      const isInDraggingTempo = !isDraggingMe && this.props.isDraggingTempo;\n      const fieldType = this.props.fieldType || null;\n\n      // Don't allow nesting further than the maximum configured depth and don't\n      // allow removal of the root group.\n      const allowFurtherNesting = typeof maxNesting === \"undefined\" || currentNesting < maxNesting;\n      const isRoot = currentNesting == 1;\n      return (\n        <div\n          className={\"group-or-rule-container group-container\"}\n          data-id={this.props.id}\n        >\n          {[\n            isDraggingMe ? <Group\n              key={\"dragging\"}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={true}\n              isDraggingTempo={true}\n              dragging={this.props.dragging}\n              isRoot={isRoot}\n              allowFurtherNesting={allowFurtherNesting}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={this.dummyFn}\n              setNot={this.dummyFn}\n              setLock={this.dummyFn}\n              removeSelf={this.dummyFn}\n              addGroup={this.dummyFn}\n              addCaseGroup={this.dummyFn}\n              addDefaultCaseGroup={this.dummyFn}\n              addRule={this.dummyFn}\n              setField={this.dummyFn}\n              setOperator={this.dummyFn}\n              setValue={this.dummyFn}\n              value={this.props.value || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            /> : null\n            ,\n            <Group\n              key={this.props.id}\n              id={this.props.id}\n              groupId={this.props.groupId}\n              isDraggingMe={isDraggingMe}\n              isDraggingTempo={isInDraggingTempo}\n              onDragStart={this.props.onDragStart}\n              isRoot={isRoot}\n              allowFurtherNesting={allowFurtherNesting}\n              conjunctionOptions={this.conjunctionOptions}\n              not={this.props.not}\n              selectedConjunction={this.selectedConjunction}\n              setConjunction={isInDraggingTempo ? this.dummyFn : this.setConjunction}\n              setNot={isInDraggingTempo ? this.dummyFn : this.setNot}\n              setLock={isInDraggingTempo ? this.dummyFn : this.setLock}\n              removeSelf={isInDraggingTempo ? this.dummyFn : this.removeSelf}\n              addGroup={isInDraggingTempo ? this.dummyFn : this.addGroup}\n              addCaseGroup={isInDraggingTempo ? this.dummyFn : this.addCaseGroup}\n              addDefaultCaseGroup={isInDraggingTempo ? this.dummyFn : this.addDefaultCaseGroup}\n              addRule={isInDraggingTempo ? this.dummyFn : this.addRule}\n              setField={isInDraggingTempo ? this.dummyFn : this.setField}\n              setOperator={isInDraggingTempo ? this.dummyFn : this.setOperator}\n              setValue={isInDraggingTempo ? this.dummyFn : this.setValue}\n              value={this.props.value || null}\n              config={this.props.config}\n              children1={this.props.children1}\n              actions={this.props.actions}\n              reordableNodesCnt={this.props.reordableNodesCnt}\n              totalRulesCnt={this.props.totalRulesCnt}\n              selectedField={this.props.field || null}\n              selectedFieldSrc={this.props.fieldSrc || \"field\"}\n              selectedFieldType={fieldType}\n              parentField={this.props.parentField || null}\n              selectedOperator={this.props.operator || null}\n              isLocked={this.props.isLocked}\n              isTrueLocked={this.props.isTrueLocked}\n              parentReordableNodesCnt={this.props.parentReordableNodesCnt}\n            />\n          ]}\n        </div>\n      );\n    }\n\n  };\n\n\nexport default (Group, itemType) => {\n  const ConnectedGroupContainer = connect(\n    (state) => {\n      return {\n        dragging: state.dragging,\n      };\n    },\n    null,\n    null,\n    {\n      context\n    }\n  )(createGroupContainer(Group, itemType));\n  ConnectedGroupContainer.displayName = \"ConnectedGroupContainer\";\n\n  return ConnectedGroupContainer;\n};\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class GroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, addGroup, removeSelf, setLock, isLocked, isTrueLocked, id,\n      canAddGroup, canAddRule, canDeleteGroup\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, addGroupLabel, delGroupLabel, groupActionsPosition, \n      renderButton, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn\n      type=\"addRule\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config}\n    />;\n    const addGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addGroup\" onClick={addGroup} label={addGroupLabel} readonly={isLocked} config={config}\n    />;\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn\n      type=\"delGroup\" onClick={removeSelf} label={delGroupLabel} config={config}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {addGroupBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport startsWith from \"lodash/startsWith\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport classNames from \"classnames\";\nimport { Item } from \"./Item\";\nimport {GroupActions} from \"./GroupActions\";\nimport {WithConfirmFn, DragIcon, dummyFn} from \"../utils\";\nconst {isEmptyGroupChildren} = Utils.RuleUtils;\n\nconst defaultPosition = \"topRight\";\n\n\nexport class BasicGroup extends Component {\n  static propTypes = {\n    reordableNodesCnt: PropTypes.number,\n    conjunctionOptions: PropTypes.object.isRequired,\n    allowFurtherNesting: PropTypes.bool.isRequired,\n    isRoot: PropTypes.bool.isRequired,\n    not: PropTypes.bool,\n    selectedConjunction: PropTypes.string,\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    path: PropTypes.any, //instanceOf(Immutable.List)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    isDraggingMe: PropTypes.bool,\n    isDraggingTempo: PropTypes.bool,\n    isLocked: PropTypes.bool,\n    isTrueLocked: PropTypes.bool,\n    //actions\n    handleDraggerMouseDown: PropTypes.func,\n    onDragStart: PropTypes.func,\n    addRule: PropTypes.func.isRequired,\n    addGroup: PropTypes.func.isRequired,\n    removeSelf: PropTypes.func.isRequired,\n    setConjunction: PropTypes.func.isRequired,\n    setNot: PropTypes.func.isRequired,\n    setLock: PropTypes.func.isRequired,\n    actions: PropTypes.object.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.removeSelf = this.removeSelf.bind(this);\n    this.setLock = this.setLock.bind(this);\n    this.renderItem = this.renderItem.bind(this);\n  }\n\n  isGroupTopPosition() {\n    return startsWith(this.props.config.settings.groupActionsPosition || defaultPosition, \"top\");\n  }\n\n  setLock(lock) {\n    this.props.setLock(lock);\n  }\n\n  removeSelf() {\n    const {confirmFn, config} = this.props;\n    const {renderConfirm, removeGroupConfirmOptions: confirmOptions} = config.settings;\n    const doRemove = () => {\n      this.props.removeSelf();\n    };\n    if (confirmOptions && !this.isEmptyCurrentGroup()) {\n      renderConfirm.call(config.ctx, {...confirmOptions,\n        onOk: doRemove,\n        onCancel: null,\n        confirmFn: confirmFn\n      }, config.ctx);\n    } else {\n      doRemove();\n    }\n  }\n\n  isEmptyCurrentGroup() {\n    const {children1, config} = this.props;\n    return isEmptyGroupChildren(children1, config);\n  }\n\n  render() {\n    return <>\n      {this.renderHeaderWrapper()}\n      {this.renderChildrenWrapper()}\n      {this.renderFooterWrapper()}\n    </>;\n  }\n\n  showNot() {\n    const {config} = this.props;\n    return config.settings.showNot;\n  }\n\n  // show conjs for 2+ children?\n  showConjs() {\n    const {conjunctionOptions, children1, config} = this.props;\n    const conjunctionCount = Object.keys(conjunctionOptions).length;\n    return conjunctionCount > 1 || this.showNot();\n  }\n\n  isNoChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.size == 0 : true;\n  }\n\n\n  isOneChild() {\n    const {children1} = this.props;\n    return children1 ? children1.size < 2 : true;\n  }\n\n  renderChildrenWrapper() {\n    const {children1} = this.props;\n\n    return children1 && (\n      <div key=\"group-children\" className={classNames(\n        \"group--children\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        this.childrenClassName()\n      )}>{this.renderChildren()}</div>\n    );\n  }\n\n  childrenClassName = () => \"\";\n\n  renderHeaderWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\",\n        this.isOneChild() ? \"one--child\" : \"\",\n        !this.showConjs() ? \"hide--conjs\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n      )}>\n        {this.renderHeader()}\n        {isGroupTopPosition && this.renderBeforeActions()}\n        {isGroupTopPosition && this.renderActions()}\n        {isGroupTopPosition && this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderFooterWrapper() {\n    const isGroupTopPosition = this.isGroupTopPosition();\n    return !isGroupTopPosition && (\n      <div key=\"group-footer\" className='group--footer'>\n        {this.renderBeforeActions()}\n        {this.renderActions()}\n        {this.renderAfterActions()}\n      </div>\n    );\n  }\n\n  renderBeforeActions = () => {\n    const BeforeActions = this.props.config.settings.renderBeforeActions;\n    if (BeforeActions == undefined)\n      return null;\n\n    return typeof BeforeActions === \"function\" ? BeforeActions(this.props, this.props.config.ctx) : BeforeActions;\n  };\n\n  renderAfterActions = () => {\n    const AfterActions = this.props.config.settings.renderAfterActions;\n    if (AfterActions == undefined)\n      return null;\n\n    return typeof AfterActions === \"function\" ? AfterActions(this.props, this.props.config.ctx) : AfterActions;\n  };\n\n  renderActions() {\n    const {config, addRule, addGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <GroupActions\n      config={config}\n      addRule={addRule}\n      addGroup={addGroup}\n      canAddGroup={this.canAddGroup()}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  canAddGroup() {\n    return this.props.allowFurtherNesting;\n  }\n  canAddRule() {\n    const maxNumberOfRules = this.props.config.settings.maxNumberOfRules;\n    const totalRulesCnt = this.props.totalRulesCnt;\n    if (maxNumberOfRules) {\n      return totalRulesCnt < maxNumberOfRules;\n    }\n    return true;\n  }\n  canDeleteGroup() {\n    return !this.props.isRoot;\n  }\n\n  renderChildren() {\n    const {children1} = this.props;\n    return children1 ? children1.map(this.renderItem).toList() : null;\n  }\n\n  renderItem(item) {\n    const props = this.props;\n    const {config, actions, onDragStart, isLocked} = props;\n    const isRuleGroup = item.get(\"type\") == \"group\" && item.getIn([\"properties\", \"field\"]) != null;\n    const type = isRuleGroup ? \"rule_group\" : item.get(\"type\");\n    \n    return (\n      <Item\n        {...this.extraPropsForItem(item)}\n        key={item.get(\"id\")}\n        id={item.get(\"id\")}\n        groupId={props.id}\n        //path={props.path.push(item.get('id'))}\n        path={item.get(\"path\")}\n        type={type}\n        properties={item.get(\"properties\")}\n        config={config}\n        actions={actions}\n        children1={item.get(\"children1\")}\n        reordableNodesCnt={this.reordableNodesCntForItem(item)}\n        totalRulesCnt={this.totalRulesCntForItem(item)}\n        parentReordableNodesCnt={this.reordableNodesCnt()}\n        onDragStart={onDragStart}\n        isDraggingTempo={this.props.isDraggingTempo}\n        isParentLocked={isLocked}\n      />\n    );\n  }\n\n  extraPropsForItem(_item) {\n    return {};\n  }\n\n  reordableNodesCnt() {\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    return this.props.totalRulesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    return this.reordableNodesCnt();\n  }\n\n  showDragIcon() {\n    const { config, isRoot, isLocked } = this.props;\n    const reordableNodesCnt = this.reordableNodesCnt();\n    return config.settings.canReorder && !isRoot && reordableNodesCnt > 1 && !isLocked;\n  }\n\n  renderDrag() {\n    const { handleDraggerMouseDown } = this.props;\n    const drag = this.showDragIcon()\n      && <span\n        key=\"group-drag-icon\"\n        className={\"qb-drag-handler group--drag-handler\"}\n        onMouseDown={handleDraggerMouseDown}\n      ><DragIcon /> </span>;\n    return drag;\n  }\n\n  conjunctionOptions() {\n    const { conjunctionOptions } = this.props;\n    return conjunctionOptions;\n  }\n\n  renderConjs() {\n    const {\n      config, children1, id,\n      selectedConjunction, setConjunction, not, setNot, isLocked\n    } = this.props;\n\n    const {immutableGroupsMode, renderConjs, showNot: _showNot, notLabel} = config.settings;\n    const conjunctionOptions = this.conjunctionOptions();\n    if (!this.showConjs())\n      return null;\n    if (!children1 || !children1.size)\n      return null;\n\n    const renderProps = {\n      disabled: this.isOneChild(),\n      readonly: immutableGroupsMode || isLocked,\n      selectedConjunction: selectedConjunction,\n      setConjunction: immutableGroupsMode ? dummyFn : setConjunction,\n      conjunctionOptions: conjunctionOptions,\n      config: config,\n      not: not || false,\n      id: id,\n      setNot: immutableGroupsMode ? dummyFn : setNot,\n      notLabel: notLabel,\n      showNot: this.showNot(),\n      isLocked: isLocked\n    };\n    return renderConjs(renderProps, config.ctx);\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n}\n\nexport default GroupContainer(Draggable(\"group\")(WithConfirmFn(BasicGroup)), \"group\");\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addRuleLabel, delGroupLabel,\n      renderButton, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} hideLabel={true} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addRuleGroup\" onClick={addRule} label={addRuleLabel} readonly={isLocked} config={config}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config}\n    />;\n\n    return (\n      <div className={\"group--actions\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupActions} from \"./RuleGroupActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {WithConfirmFn} from \"../utils\";\n\n\nclass RuleGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  childrenClassName = () => \"rule_group--children\";\n  \n  renderHeaderWrapper = () => null;\n  renderFooterWrapper = () => null;\n  renderConjs = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => false;\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1?.size || 0;\n  }\n\n  renderChildrenWrapper() {\n    return (\n      <>\n        {this.renderDrag()}\n        {this.renderField()}\n        {this.renderActions()}\n        {super.renderChildrenWrapper()}\n      </>\n    );\n  }\n\n  renderField() {\n    const { config, selectedField, selectedFieldSrc, selectedFieldType, setField, setFieldSrc, parentField, id, groupId, isLocked } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    \n    return <FieldWrapper\n      key=\"field\"\n      classname={\"group--field\"}\n      config={config}\n      canSelectFieldSource={false}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={setField}\n      setFieldSrc={setFieldSrc}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  extraPropsForItem(_item) {\n    return {\n      parentField: this.props.selectedField\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group\")(WithConfirmFn(RuleGroup)), \"rule_group\");\n","import React, { PureComponent } from \"react\";\n\nexport class RuleGroupExtActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addRule, canAddRule, canDeleteGroup, removeSelf, \n      setLock, isLocked, isTrueLocked, id,\n    } = this.props;\n    const {\n      immutableGroupsMode, addSubRuleLabel, delGroupLabel,\n      renderButton, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock, canDeleteLocked,\n    } = config.settings;\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addRuleBtn = !immutableGroupsMode && canAddRule && !isLocked && <Btn \n      type=\"addRuleGroupExt\" onClick={addRule} label={addSubRuleLabel} readonly={isLocked} config={config}\n    />;\n\n    const delGroupBtn = !immutableGroupsMode && canDeleteGroup && (!isLocked || isLocked && canDeleteLocked) && <Btn \n      type=\"delRuleGroup\" onClick={removeSelf} label={delGroupLabel} config={config}\n    />;\n\n    return (\n      <div className={\"group--actions group--actions--tr\"}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addRuleBtn}\n          {delGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {RuleGroupExtActions} from \"./RuleGroupExtActions\";\nimport FieldWrapper from \"../rule/FieldWrapper\";\nimport OperatorWrapper from \"../rule/OperatorWrapper\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\nconst {getFieldConfig, getFieldWidgetConfig} = Utils.ConfigUtils;\nconst {isEmptyRuleGroupExtPropertiesAndChildren} = Utils.RuleUtils;\n\n\nclass RuleGroupExt extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    selectedField: PropTypes.any,\n    selectedFieldSrc: PropTypes.string,\n    selectedOperator: PropTypes.string,\n    value: PropTypes.any,\n    parentField: PropTypes.string,\n    setField: PropTypes.func,\n    setFieldSrc: PropTypes.func,\n    setOperator: PropTypes.func,\n    setValue: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  childrenClassName = () => \"rule_group_ext--children\";\n  \n  renderFooterWrapper = () => null;\n  canAddGroup = () => false;\n  canAddRule = () => true;\n  canDeleteGroup = () => true;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderGroupField()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderGroupField() {\n    return (\n      <div className={\"group--field--count--rule\"}>\n        {this.renderField()}\n        {this.renderOperator()}\n        {this.renderWidget()}\n      </div>\n    );\n  }\n\n  showNot() {\n    const {config, selectedField, selectedOperator} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField) || {};\n    return selectedFieldConfig.showNot != undefined ? selectedFieldConfig.showNot : config.settings.showNot;\n  }\n\n  conjunctionOptions() {\n    const {config, selectedField, selectedOperator} = this.props;\n    const selectedFieldConfig = getFieldConfig(config, selectedField) || {};\n    let conjunctionOptions = super.conjunctionOptions();\n    if (selectedFieldConfig.conjunctions) {\n      let filtered = {};\n      for (let k of selectedFieldConfig.conjunctions) {\n        filtered[k] = conjunctionOptions[k];\n      }\n      conjunctionOptions = filtered;\n    }\n    return conjunctionOptions;\n  }\n\n  renderField() {\n    const { config, selectedField, selectedFieldSrc, selectedFieldType, setField, setFieldSrc, parentField, id, groupId, isLocked } = this.props;\n    const { immutableFieldsMode } = config.settings;\n    \n    return <FieldWrapper\n      key=\"field\"\n      classname={\"rule--field\"}\n      config={config}\n      canSelectFieldSource={false}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedFieldType={selectedFieldType}\n      setField={setField}\n      setFieldSrc={setFieldSrc}\n      parentField={parentField}\n      readonly={immutableFieldsMode || isLocked}\n      id={id}\n      groupId={groupId}\n    />;\n  }\n\n  renderOperator() {\n    const {config, selectedField, selectedFieldSrc, selectedOperator, setField, setOperator, isLocked} = this.props;\n    const { immutableFieldsMode } = config.settings;\n    const selectedFieldWidgetConfig = getFieldWidgetConfig(config, selectedField, selectedOperator) || {};\n    const hideOperator = selectedFieldWidgetConfig.hideOperator;\n    const showOperatorLabel = selectedField && hideOperator && selectedFieldWidgetConfig.operatorInlineLabel;\n    const showOperator = selectedField && !hideOperator;\n\n    return <OperatorWrapper\n      key=\"operator\"\n      classname={\"group--operator\"}\n      config={config}\n      selectedField={selectedField}\n      selectedFieldSrc={selectedFieldSrc}\n      selectedOperator={selectedOperator}\n      setOperator={setOperator}\n      selectedFieldPartsLabels={[\"group\"]}\n      showOperator={showOperator}\n      showOperatorLabel={showOperatorLabel}\n      selectedFieldWidgetConfig={selectedFieldWidgetConfig}\n      readonly={immutableFieldsMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    const {children1, config} = this.props;\n    const ruleData = this._buildWidgetProps(this.props);\n    return isEmptyRuleGroupExtPropertiesAndChildren(ruleData, children1, config);\n  }\n\n  _buildWidgetProps({\n    selectedField, selectedFieldSrc, selectedFieldType,\n    selectedOperator, operatorOptions,\n    value, valueType, valueSrc, asyncListValues, valueError,\n    parentField,\n  }) {\n    return {\n      field: selectedField,\n      fieldSrc: selectedFieldSrc,\n      fieldType: selectedFieldType,\n      operator: selectedOperator,\n      operatorOptions,\n      value,\n      valueType, // new Immutable.List([\"number\"])\n      valueSrc: [\"value\"], //new Immutable.List([\"value\"]), // should be fixed in isEmptyRuleGroupExtPropertiesAndChildren\n      //asyncListValues,\n      valueError : null,\n      parentField,\n    };\n  }\n\n  renderWidget() {\n    const {config, selectedField, selectedOperator, isLocked} = this.props;\n    const { immutableValuesMode } = config.settings;\n    const isFieldAndOpSelected = selectedField && selectedOperator;\n    const showWidget = isFieldAndOpSelected;\n    if (!showWidget) return null;\n\n    const widget = <Widget\n      key=\"values\"\n      isForRuleGroup={true}\n      {...this._buildWidgetProps(this.props)}\n      config={config}\n      setValue={!immutableValuesMode ? this.props.setValue : dummyFn}\n      setValueSrc={dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={this.props.id}\n      groupId={this.props.groupId}\n    />;\n\n    return (\n      <Col key={\"widget-for-\"+this.props.selectedOperator} className=\"rule--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addRule, isLocked, isTrueLocked, id} = this.props;\n\n    return <RuleGroupExtActions\n      config={config}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  reordableNodesCntForItem(_item) {\n    if (this.props.isLocked)\n      return 0;\n    const {children1} = this.props;\n    return children1?.size || 0;\n  }\n\n  extraPropsForItem(_item) {\n    return {\n      parentField: this.props.selectedField\n    };\n  }\n}\n\n\nexport default GroupContainer(Draggable(\"group rule_group_ext\")(WithConfirmFn(RuleGroupExt)), \"rule_group\");\n\n","import React, { PureComponent } from \"react\";\n\nconst groupActionsPositionList = {\n  topLeft: \"group--actions--tl\",\n  topCenter: \"group--actions--tc\",\n  topRight: \"group--actions--tr\",\n  bottomLeft: \"group--actions--bl\",\n  bottomCenter: \"group--actions--bc\",\n  bottomRight: \"group--actions--br\"\n};\nconst defaultPosition = \"topRight\";\n\n\nexport class SwitchGroupActions extends PureComponent {\n  render() {\n    const {\n      config, \n      addCaseGroup, addDefaultCaseGroup, setLock, isLocked, isTrueLocked, id, canAddGroup, canAddDefault\n    } = this.props;\n    const {\n      immutableGroupsMode, addCaseLabel, addDefaultCaseLabel, groupActionsPosition, \n      renderButton, renderSwitch, renderButtonGroup,\n      lockLabel, lockedLabel, showLock,\n    } = config.settings;\n    const Btn = (pr) => renderButton(pr, config.ctx);\n    const Switch = (pr) => renderSwitch(pr, config.ctx);\n    const BtnGrp = (pr) => renderButtonGroup(pr, config.ctx);\n    const position = groupActionsPositionList[groupActionsPosition || defaultPosition];\n\n    const setLockSwitch = showLock && !(isLocked && !isTrueLocked) && <Switch \n      type=\"lock\" id={id} value={isLocked} setValue={setLock} label={lockLabel} checkedLabel={lockedLabel} config={config}\n    />;\n\n    const addCaseGroupBtn = !immutableGroupsMode && canAddGroup && !isLocked && <Btn\n      type=\"addCaseGroup\" onClick={addCaseGroup} label={addCaseLabel} readonly={isLocked} config={config}\n    />;\n\n    const addDefaultCaseGroupBtn = !immutableGroupsMode && canAddDefault && !isLocked && <Btn\n      type=\"addDefaultCaseGroup\" onClick={addDefaultCaseGroup} label={addDefaultCaseLabel} readonly={isLocked} config={config}\n    />;\n\n    return (\n      <div className={`group--actions ${position}`}>\n        <BtnGrp config={config}>\n          {setLockSwitch}\n          {addCaseGroupBtn}\n          {addDefaultCaseGroupBtn}\n        </BtnGrp>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {SwitchGroupActions} from \"./SwitchGroupActions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport classNames from \"classnames\";\nconst {getTotalReordableNodesCountInTree, getTotalRulesCountInTree} = Utils.TreeUtils;\n\n\nclass SwitchGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  childrenClassName = () => \"switch_group--children\";\n  \n  renderFooterWrapper = () => null;\n  hasDefaultCase = () => {\n    return this.props.children1?.size && this.props.children1.filter(c => c.get(\"children1\") == null).size > 0;\n  };\n  canAddGroup() {\n    const { maxNumberOfCases } = this.props.config.settings;\n    const totalCasesCnt = this.props.children1?.size || 0;\n    if (maxNumberOfCases) {\n      return totalCasesCnt < maxNumberOfCases;\n    }\n    return true;\n  }\n  canAddRule() {\n    return false;\n  }\n\n  reordableNodesCnt() {\n    // result will be passed to each case's `parentReordableNodesCnt` prop\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n    return casesToReorder;\n  }\n\n  totalRulesCntForItem(item) {\n    return getTotalRulesCountInTree(item);\n  }\n\n  reordableNodesCntForItem(item) {\n    if (this.props.isLocked)\n      return 0;\n    const { canLeaveEmptyCase, canRegroupCases } = this.props.config.settings;\n\n    const totalCasesCnt = this.props.children1?.size || 0;\n    let casesToReorder = totalCasesCnt;\n    if (this.hasDefaultCase()) {\n      casesToReorder--;\n    }\n\n    const nodesInCase = getTotalReordableNodesCountInTree(item);\n    let cnt = nodesInCase;\n    if (cnt == 1 && canRegroupCases && canLeaveEmptyCase && casesToReorder > 1)\n      cnt = 111;\n    return cnt;\n  }\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        //this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeader()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderHeader() {\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderConjs() {\n    const { config } = this.props;\n    const { renderSwitchPrefix } = config.settings;\n    return renderSwitchPrefix || null;\n  }\n\n  showNot() {\n    return false;\n  }\n\n\n  renderActions() {\n    const {config, addCaseGroup, addDefaultCaseGroup, isLocked, isTrueLocked, id} = this.props;\n\n    return <SwitchGroupActions\n      config={config}\n      addCaseGroup={addCaseGroup}\n      addDefaultCaseGroup={addDefaultCaseGroup}\n      canAddDefault={!this.hasDefaultCase()}\n      canAddGroup={this.canAddGroup()}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n}\n\n\nexport default GroupContainer(Draggable(\"group switch_group\")(WithConfirmFn(SwitchGroup)), \"switch_group\");\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GroupContainer from \"../containers/GroupContainer\";\nimport Draggable from \"../containers/Draggable\";\nimport {BasicGroup} from \"./Group\";\nimport {GroupActions} from \"./GroupActions\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport {Col, dummyFn, WithConfirmFn} from \"../utils\";\nimport Widget from \"../rule/Widget\";\nimport classNames from \"classnames\";\n\n\nclass CaseGroup extends BasicGroup {\n  static propTypes = {\n    ...BasicGroup.propTypes,\n    parentReordableNodesCnt: PropTypes.number,\n    value: PropTypes.any,\n    setValue: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n  }\n\n  isDefaultCase() {\n    return this.props.children1 == undefined;\n  }\n\n  reordableNodesCnt() {\n    // `parentReordableNodesCnt` is number of cases to reorder\n    return this.props.parentReordableNodesCnt;\n  }\n\n  reordableNodesCntForItem(_item) {\n    // `reordableNodesCnt` is number of nodes is current case\n    if (this.props.isLocked)\n      return 0;\n    return this.props.reordableNodesCnt;\n  }\n\n  totalRulesCntForItem(_item) {\n    // `totalRulesCnt` is number of nodes is current case\n    return this.props.totalRulesCnt;\n  }\n\n  showDragIcon() {\n    // default impl of `showDragIcon()` uses `this.reordableNodesCnt()`\n    if (this.isDefaultCase())\n      return false;\n    return super.showDragIcon();\n  }\n\n  childrenClassName = () => \"case_group--children\";\n  \n  renderFooterWrapper = () => null;\n\n  renderHeaderWrapper() {\n    return (\n      <div key=\"group-header\" className={classNames(\n        \"group--header\", \n        this.isOneChild() ? \"one--child\" : \"\",\n        this.isOneChild() ? \"hide--line\" : \"\",\n        this.isNoChildren() ? \"no--children\" : \"\",\n        this.showDragIcon() ? \"with--drag\" : \"hide--drag\",\n        this.showConjs() && (!this.isOneChild() || this.showNot()) ? \"with--conjs\" : \"hide--conjs\"\n      )}>\n        {this.renderHeaderLeft()}\n        {this.renderHeaderCenter()}\n        {this.renderActions()}\n      </div>\n    );\n  }\n\n  renderChildrenWrapper() {\n    if (this.isDefaultCase())\n      return null;\n    // body has 2 columns: condition & value\n    return (\n      <div className={\"case_group--body\"}>\n        {this.renderCondition()}\n        {this.renderValue()}\n      </div>\n    );\n  }\n\n  renderHeaderLeft() {\n    if (this.isDefaultCase()) {\n      const { defaultCaseLabel } = this.props.config.settings;\n      return defaultCaseLabel || \"\";\n    }\n    // default impl:\n    return (\n      <div className={\"group--conjunctions\"}>\n        {this.renderConjs()}\n        {this.renderDrag()}\n      </div>\n    );\n  }\n\n  renderCondition() {\n    if (this.isDefaultCase())\n      return null;\n    return super.renderChildrenWrapper();\n  }\n\n  renderHeaderCenter() {\n    if (this.isDefaultCase())\n      return this.renderValue();\n    else\n      return null;\n  }\n\n  canAddGroup() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddGroup();\n  }\n\n  canAddRule() {\n    if (this.isDefaultCase())\n      return false;\n    return super.canAddRule();\n  }\n\n  renderValue() {\n    const { config, isLocked, value, setValue, id } = this.props;\n    const { immutableValuesMode } = config.settings;\n\n    const widget = <Widget\n      key=\"values\"\n      isCaseValue={true}\n      field={\"!case_value\"}\n      operator={null}\n      value={value}\n      valueSrc={\"value\"}\n      valueError={null}\n      config={config}\n      setValue={!immutableValuesMode ? setValue : dummyFn}\n      setValueSrc={dummyFn}\n      readonly={immutableValuesMode || isLocked}\n      id={id}\n      groupId={null}\n    />;\n\n    return (\n      <Col className=\"case_group--value\">\n        {widget}\n      </Col>\n    );\n  }\n\n  renderActions() {\n    const {config, addGroup, addRule, isLocked, isTrueLocked, id} = this.props;\n    return <GroupActions\n      config={config}\n      addGroup={addGroup}\n      addRule={addRule}\n      canAddRule={this.canAddRule()}\n      canAddGroup={this.canAddGroup()}\n      canDeleteGroup={this.canDeleteGroup()}\n      removeSelf={this.removeSelf}\n      setLock={this.setLock}\n      isLocked={isLocked}\n      isTrueLocked={isTrueLocked}\n      id={id}\n    />;\n  }\n\n  isEmptyCurrentGroup() {\n    // used to confirm self-deletion\n    const { value } = this.props;\n    const oneValue = value && value.size ? value.get(0) : null;\n    const hasValue = oneValue != null && (Array.isArray(oneValue) ? oneValue.length > 0 : true);\n    return super.isEmptyCurrentGroup() && !hasValue;\n  }\n\n}\n\nexport default GroupContainer(Draggable(\"group case_group\")(WithConfirmFn(CaseGroup)), \"case_group\");\n\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Rule from \"./Rule\";\nimport Group from \"./Group\";\nimport RuleGroup from \"./RuleGroup\";\nimport RuleGroupExt from \"./RuleGroupExt\";\nimport SwitchGroup from \"./SwitchGroup\";\nimport CaseGroup from \"./CaseGroup\";\n\nconst types = [\n  \"rule\",\n  \"group\",\n  \"rule_group\",\n  \"switch_group\",\n  \"case_group\"\n];\n\nconst getProperties = (props) => {\n  const properties = props.properties?.toObject() || {};\n  const result = {...properties};\n  if (props.isParentLocked) {\n    result.isLocked = true;\n  }\n  if (properties.isLocked) {\n    result.isTrueLocked = true;\n  }\n  return result;\n};\n\nconst typeMap = {\n  rule: (props) => (\n    <Rule\n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      config={props.config}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  group: (props) => (\n    <Group \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  rule_group: (props) => (\n    <RuleGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  rule_group_ext: (props) => (\n    <RuleGroupExt \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={props.parentField}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  switch_group: (props) => (\n    <SwitchGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n  case_group: (props) => (\n    <CaseGroup \n      {...getProperties(props)}\n      id={props.id}\n      groupId={props.groupId}\n      path={props.path}\n      actions={props.actions}\n      config={props.config}\n      reordableNodesCnt={props.reordableNodesCnt}\n      totalRulesCnt={props.totalRulesCnt}\n      onDragStart={props.onDragStart}\n      isDraggingTempo={props.isDraggingTempo}\n      children1={props.children1}\n      parentField={null}\n      parentReordableNodesCnt={props.parentReordableNodesCnt}\n    />\n  ),\n};\n\n\nclass Item extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    id: PropTypes.string.isRequired,\n    groupId: PropTypes.string,\n    type: PropTypes.oneOf(types).isRequired,\n    path: PropTypes.any.isRequired, //instanceOf(Immutable.List)\n    properties: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    children1: PropTypes.any, //instanceOf(Immutable.OrderedMap)\n    actions: PropTypes.object.isRequired,\n    reordableNodesCnt: PropTypes.number,\n    onDragStart: PropTypes.func,\n    parentField: PropTypes.string, //from RuleGroup\n    isDraggingTempo: PropTypes.bool,\n    isParentLocked: PropTypes.bool,\n  };\n\n  render() {\n    const { type, ...props } = this.props;\n    const mode = props.properties?.get(\"mode\");\n    const postfix = mode == \"array\" ? \"_ext\" : \"\";    \n    const renderItem = props.config.settings.renderItem;\n    let Cmp = typeMap[type + postfix];\n    if (renderItem) {\n      return renderItem({...props, type, itemComponent: Cmp}, props.config.ctx);\n    }\n    if (!Cmp) return null;\n    return Cmp(props);\n  }\n}\n\nexport { Item };\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Item } from \"./item/Item\";\nimport SortableContainer from \"./containers/SortableContainer\";\nimport {pureShouldComponentUpdate} from \"../utils/reactUtils\";\nconst { getTotalReordableNodesCountInTree, getTotalRulesCountInTree } = Utils.TreeUtils;\nconst { createListFromArray, emptyProperies } = Utils.DefaultUtils;\n\nclass Builder extends Component {\n  static propTypes = {\n    tree: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    config: PropTypes.object.isRequired,\n    actions: PropTypes.object.isRequired,\n    onDragStart: PropTypes.func,\n  };\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const prevProps = this.props;\n    let should = this.pureShouldComponentUpdate(nextProps, nextState);\n    if (should) {\n      let chs = [];\n      for (let k in nextProps) {\n        let changed = (nextProps[k] !== prevProps[k]);\n        if (changed && k != \"__isInternalValueChange\") {\n          chs.push(k);\n        }\n      }\n      if (!chs.length)\n        should = false;\n      //optimize render\n      if (chs.length == 1 && chs[0] == \"tree\" && nextProps.__isInternalValueChange)\n        should = false;\n    }\n    return should;\n  }\n\n  constructor(props) {\n    super(props);\n    this.pureShouldComponentUpdate = pureShouldComponentUpdate(this);\n\n    this._updPath(props);\n  }\n\n  _updPath (props) {\n    const id = props.tree.get(\"id\");\n    this.path = createListFromArray([id]);\n  }\n\n  render() {\n    const tree = this.props.tree;\n    const rootType = tree.get(\"type\");\n    const isTernary = rootType == \"switch_group\";\n    const reordableNodesCnt = isTernary ? null : getTotalReordableNodesCountInTree(tree);\n    const totalRulesCnt = isTernary ? null : getTotalRulesCountInTree(tree);\n    const id = tree.get(\"id\");\n    return (\n      <Item \n        key={id}\n        id={id}\n        path={this.path}\n        type={rootType}\n        properties={tree.get(\"properties\") || emptyProperies()}\n        config={this.props.config}\n        actions={this.props.actions}\n        children1={tree.get(\"children1\") || emptyProperies()}\n        //tree={tree}\n        reordableNodesCnt={reordableNodesCnt}\n        totalRulesCnt={totalRulesCnt}\n        parentReordableNodesCnt={0}\n        onDragStart={this.props.onDragStart}\n      />\n    );\n  }\n}\n\nexport default SortableContainer(Builder);\n","import React, { Component } from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport PropTypes from \"prop-types\";\nimport {truncateString} from \"../../utils/stuff\";\nimport {useOnPropsChanged} from \"../../utils/reactUtils\";\nimport last from \"lodash/last\";\nimport keys from \"lodash/keys\";\nconst {clone} = Utils;\nconst {getFieldConfig, getFieldParts, getFieldPathParts} = Utils.ConfigUtils;\nconst {getFieldPathLabels, getWidgetForFieldOp} = Utils.RuleUtils;\n\n//tip: this.props.value - right value, this.props.field - left value\n\nexport default class ValueField extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    groupId: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    config: PropTypes.object.isRequired,\n    field: PropTypes.any,\n    fieldSrc: PropTypes.string,\n    fieldType: PropTypes.string,\n    value: PropTypes.string,\n    operator: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    parentField: PropTypes.string,\n    fieldDefinition: PropTypes.object,\n    isFuncArg: PropTypes.bool,\n  };\n\n  constructor(props) {\n    super(props);\n    useOnPropsChanged(this);\n\n    this.onPropsChanged(props);\n  }\n\n  onPropsChanged(nextProps) {\n    const prevProps = this.props;\n    const keysForItems = [\"config\", \"field\", \"fieldSrc\", \"fieldType\", \"operator\", \"isFuncArg\", \"parentField\"];\n    const keysForMeta = [\"config\", \"field\", \"fieldSrc\", \"fieldType\", \"operator\", \"value\", \"placeholder\", \"isFuncArg\", \"parentField\"];\n    const needUpdateItems = !this.items || keysForItems.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n    const needUpdateMeta = !this.meta || keysForMeta.map(k => (nextProps[k] !== prevProps[k])).filter(ch => ch).length > 0;\n\n    if (needUpdateItems) {\n      this.items = this.getItems(nextProps);\n    }\n    if (needUpdateMeta) {\n      this.meta = this.getMeta(nextProps);\n    }\n  }\n\n  getItems({config, field, fieldType, operator, parentField, isFuncArg, fieldDefinition}) {\n    const {canCompareFieldWithField} = config.settings;\n    const fieldSeparator = config.settings.fieldSeparator;\n    const parentFieldPath = getFieldParts(parentField, config);\n    const parentFieldConfig = parentField ? getFieldConfig(config, parentField) : null;\n    const sourceFields = parentField ? parentFieldConfig?.subfields : config.fields;\n\n    const filteredFields = this.filterFields(config, sourceFields, field, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition, fieldType);\n    const items = this.buildOptions(parentFieldPath, config, filteredFields, parentFieldPath);\n    return items;\n  }\n\n  getMeta({config, field, fieldType, operator, value, placeholder: customPlaceholder, isFuncArg, parentField}) {\n    const {fieldPlaceholder, fieldSeparatorDisplay} = config.settings;\n    const selectedKey = value;\n    const isFieldSelected = !!value;\n\n    const leftFieldConfig = field ? getFieldConfig(config, field) : {};\n    const leftFieldWidgetField = leftFieldConfig?.widgets?.field;\n    const leftFieldWidgetFieldProps = leftFieldWidgetField?.widgetProps || {};\n    const placeholder = isFieldSelected ? null \n      : (isFuncArg && customPlaceholder || leftFieldWidgetFieldProps.valuePlaceholder || fieldPlaceholder);\n    const currField = isFieldSelected ? getFieldConfig(config, selectedKey) : null;\n    const selectedOpts = currField || {};\n\n    const selectedKeys = getFieldPathParts(selectedKey, config);\n    const selectedPath = getFieldPathParts(selectedKey, config, true);\n    const selectedLabel = this.getFieldLabel(currField, selectedKey, config);\n    const partsLabels = getFieldPathLabels(selectedKey, config);\n    let selectedFullLabel = partsLabels ? partsLabels.join(fieldSeparatorDisplay) : null;\n    if (selectedFullLabel == selectedLabel || parentField)\n      selectedFullLabel = null;\n    const selectedAltLabel = selectedOpts.label2;\n\n    return {\n      placeholder,\n      selectedKey, selectedKeys, selectedPath, selectedLabel, selectedOpts, selectedAltLabel, selectedFullLabel,\n    };\n  }\n\n  filterFields(config, fields, leftFieldFullkey, parentField, parentFieldPath, operator, canCompareFieldWithField, isFuncArg, fieldDefinition, fieldType) {\n    fields = clone(fields);\n    const fieldSeparator = config.settings.fieldSeparator;\n    const leftFieldConfig = getFieldConfig(config, leftFieldFullkey);\n    const _relyOnWidgetType = false; //TODO: remove this, see issue #758\n    const widget = getWidgetForFieldOp(config, leftFieldFullkey, operator, \"value\");\n    const widgetConfig = config.widgets[widget];\n    let expectedType;\n    if (isFuncArg) {\n      expectedType = fieldDefinition?.type;\n    } else if (_relyOnWidgetType && widgetConfig) {\n      expectedType = widgetConfig.type;\n    } else if (leftFieldConfig) {\n      expectedType = leftFieldConfig.type;\n    } else {\n      // no field at LHS, but can use type from \"memory effect\"\n      expectedType = fieldType;\n    }\n    \n    function _filter(list, path) {\n      for (let rightFieldKey in list) {\n        let subfields = list[rightFieldKey].subfields;\n        let subpath = (path ? path : []).concat(rightFieldKey);\n        let rightFieldFullkey = subpath.join(fieldSeparator);\n        let rightFieldConfig = getFieldConfig(config, rightFieldFullkey);\n        if (!rightFieldConfig) {\n          delete list[rightFieldKey];\n        } else if (rightFieldConfig.type == \"!struct\" || rightFieldConfig.type == \"!group\") {\n          if (_filter(subfields, subpath) == 0)\n            delete list[rightFieldKey];\n        } else {\n          // tip: LHS field can be used as arg in RHS function\n          let canUse = (!expectedType || rightFieldConfig.type == expectedType)\n            && (isFuncArg ? true : rightFieldFullkey != leftFieldFullkey);\n          let fn = canCompareFieldWithField || config.settings.canCompareFieldWithField;\n          if (fn)\n            canUse = canUse && fn(leftFieldFullkey, leftFieldConfig, rightFieldFullkey, rightFieldConfig, operator);\n          if (!canUse)\n            delete list[rightFieldKey];\n        }\n      }\n      return keys(list).length;\n    }\n\n    _filter(fields, parentFieldPath || []);\n\n    return fields;\n  }\n\n  buildOptions(parentFieldPath, config, fields, path = null, optGroupLabel = null) {\n    if (!fields)\n      return null;\n    const {fieldSeparator, fieldSeparatorDisplay} = config.settings;\n    const prefix = path?.length ? path.join(fieldSeparator) + fieldSeparator : \"\";\n\n    return keys(fields).map(fieldKey => {\n      const fullFieldPath = [...(path ?? []), fieldKey];\n      const field = fields[fieldKey];\n      const label = this.getFieldLabel(field, fullFieldPath, config);\n      const partsLabels = getFieldPathLabels(fullFieldPath, config);\n      let fullLabel = partsLabels.join(fieldSeparatorDisplay);\n      if (fullLabel == label || parentFieldPath)\n        fullLabel = null;\n      const altLabel = field.label2;\n      const tooltip = field.tooltip;\n\n      if (field.hideForCompare)\n        return undefined;\n\n      if (field.type == \"!struct\" || field.type == \"!group\") {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          items: this.buildOptions(parentFieldPath, config, field.subfields, fullFieldPath, label)\n        };\n      } else {\n        return {\n          key: fieldKey,\n          path: prefix+fieldKey,\n          label,\n          fullLabel,\n          altLabel,\n          tooltip,\n          grouplabel: optGroupLabel\n        };\n      }\n    }).filter(o => !!o);\n  }\n\n  getFieldLabel(fieldOpts, fieldKey, config) {\n    if (!fieldKey) return null;\n    let maxLabelsLength = config.settings.maxLabelsLength;\n    let fieldParts = getFieldParts(fieldKey, config);\n    let label = fieldOpts?.label || last(fieldParts);\n    label = truncateString(label, maxLabelsLength);\n    return label;\n  }\n\n  render() {\n    const {config, customProps, setValue, readonly, id, groupId} = this.props;\n    const {renderField} = config.settings;\n    const renderProps = {\n      isValueField: true,\n      config,\n      customProps,\n      setField: setValue,\n      readonly,\n      items: this.items,\n      id,\n      groupId,\n      ...this.meta\n    };\n    return renderField(renderProps, config.ctx);\n  }\n\n}\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, labelYes, labelNo, readonly, customProps = {}} = props;\n  const customRadioYesProps = customProps.radioYes || {};\n  const customRadioNoProps = customProps.radioNo || {};\n\n  const onCheckboxChange = e => setValue(e.target.checked);\n  const onRadioChange = e => setValue(e.target.value == \"true\");\n\n  // return <>\n  //     <input key={id}  type=\"checkbox\" id={id} checked={!!value} disabled={readonly} onChange={onCheckboxChange} />\n  //     <label style={{display: \"inline\"}} key={id+\"label\"}  htmlFor={id}>{value ? labelYes : labelNo}</label>\n  // </>;\n\n  return <>\n    <input type=\"radio\" value={true} checked={!!value} disabled={readonly} onChange={onRadioChange} { ...customRadioYesProps }/> {labelYes}\n    <input type=\"radio\" value={false} checked={!value} disabled={readonly} onChange={onRadioChange} { ...customRadioNoProps } /> {labelNo}\n  </>;\n\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <input\n      type=\"text\" \n      value={textValue} \n      placeholder={placeholder} \n      disabled={readonly} \n      onChange={onChange}\n      maxLength={maxLength}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, placeholder, maxLength, maxRows, fullWidth, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\")\n      val = undefined; // don't allow empty value\n    setValue(val);\n  };\n  const textValue = value || \"\";\n  return (\n    <textarea\n      value={textValue} \n      placeholder={placeholder}\n      disabled={readonly}\n      onChange={onChange}\n      maxLength={maxLength}\n      style={{\n        width: fullWidth ? \"100%\" : undefined\n      }}\n      {...customProps}\n    />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"date\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    setValue(value);\n  };\n  \n  return (\n    <input type=\"time\"  value={value || \"\"}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nconst { moment } = Utils;\n\nexport default (props) => {\n  const {value, setValue, config, valueFormat, use12Hours, readonly, customProps, } = props;\n\n  const onChange = e => {\n    let value = e.target.value;\n    if (value == \"\")\n      value = undefined;\n    else\n      value = moment(new Date(value)).format(valueFormat);\n    setValue(value);\n  };\n\n  let dtValue = value;\n  if (!value)\n    dtValue = \"\";\n  else\n    dtValue = moment(value).format(\"YYYY-MM-DDTHH:mm\");\n  \n  return (\n    <input type=\"datetime-local\"  value={dtValue}  disabled={readonly} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const getMultiSelectValues = (multiselect) => {\n    let values = [];\n    const options = multiselect.options;\n    for (let i = 0 ; i < options.length ; i++) {\n      const opt = options[i];\n      if (opt.selected) {\n        values.push(opt.value);\n      }\n    }\n    if (!values.length)\n      values = undefined; //not allow []\n    return values;\n  };\n\n  const onChange = e => setValue(getMultiSelectValues(e.target));\n  \n  return (\n    <select multiple\n      onChange={onChange}\n      value={value}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\", \"showCheckboxes\"])}\n    >\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport omit from \"lodash/omit\";\nconst { mapListValues } = Utils.ListUtils;\n\nexport default ({listValues, value, setValue, allowCustomValues, readonly, customProps,}) => {\n  const renderOptions = () => \n    mapListValues(listValues, ({title, value}) => {\n      return <option key={value} value={value}>{title}</option>;\n    });\n\n  const onChange = e => setValue(e.target.value);\n  \n  const hasValue = value != null;\n  return (\n    <select\n      onChange={onChange}\n      value={hasValue ? value : \"\"}\n      disabled={readonly}\n      {...omit(customProps, [\"showSearch\", \"input\"])}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions()}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps, } = props;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <input type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customProps} />\n  );\n};\n","import React from \"react\";\n\nexport default (props) => {\n  const {value, setValue, config, readonly, min, max, step, placeholder, customProps = {}, } = props;\n  const customInputProps = customProps.input || {};\n  const customSliderProps = customProps.slider || customProps;\n  const onChange = e => {\n    let val = e.target.value;\n    if (val === \"\" || val === null)\n      val = undefined;\n    else\n      val = Number(val);\n    setValue(val);\n  };\n  const numberValue = value == undefined ? \"\" : value;\n  return (\n    <div style={{display: \"inline-flex\"}}>\n      <input key={\"number\"} type=\"number\"  value={numberValue} placeholder={placeholder} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customInputProps} />\n      <input key={\"range\"} type=\"range\"  value={numberValue} disabled={readonly} min={min} max={max} step={step} onChange={onChange} {...customSliderProps} />\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({items, setField, selectedKey, readonly, errorText}) => {\n  const renderOptions = (fields) => (\n    fields.map(field => {\n      const {items, path, label, disabled, matchesType} = field;\n      if (items) {\n        return <optgroup disabled={disabled} key={path} label={label}>{renderOptions(items)}</optgroup>;\n      } else {\n        const style = matchesType ? { fontWeight: \"bold\" } : {};\n        return <option disabled={disabled} key={path} value={path} style={style}>{label}</option>;\n      }\n    })\n  );\n\n  const onChange = e => setField(e.target.value);\n  \n  const hasValue = selectedKey != null;\n  return (\n    <select \n      onChange={onChange}\n      value={hasValue ? selectedKey : \"\"}\n      disabled={readonly}\n      style={{ color: errorText ? \"red\" : null }}\n    >\n      {!hasValue && <option disabled value={\"\"}></option>}\n      {renderOptions(items)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({id, not, setNot, conjunctionOptions, setConjunction, disabled, readonly, config, showNot, notLabel}) => {\n  const conjsCount = Object.keys(conjunctionOptions).length;\n  const lessThenTwo = disabled;\n  const {forceShowConj} = config.settings;\n  const showConj = forceShowConj || conjsCount > 1 && !lessThenTwo;\n\n  const renderOptions = () => \n    Object.keys(conjunctionOptions).map(key => {\n      const {id, name, label, checked} = conjunctionOptions[key];\n      const postfix = setConjunction.isDummyFn ? \"__dummy\" : \"\";\n      if ((readonly || disabled) && !checked)\n        return null;\n      return [\n        <input key={id+postfix} type=\"radio\" id={id+postfix} name={name+postfix} checked={checked} disabled={readonly || disabled} value={key} onChange={onChange} />\n        ,\n        <label key={id+postfix+\"label\"} htmlFor={id+postfix}>{label}</label>\n      ];\n    });\n  \n  const renderNot = () => {\n    const postfix = \"not\";\n    return [\n      <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={not} disabled={readonly} onChange={onNotChange} />\n      ,\n      <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{notLabel || \"NOT\"}</label>\n    ];\n  };\n\n  const onChange = e => setConjunction(e.target.value);\n\n  const onNotChange = e => setNot(e.target.checked);\n\n  return [\n    showNot && renderNot(),\n    showConj && renderOptions()\n  ];\n  \n};\n","import React from \"react\";\n\nexport default ({type, label, onClick, readonly, config}) => {\n  const typeToLabel = {\n    \"addRuleGroup\": \"+\",\n    \"addRuleGroupExt\": \"+\",\n    \"delGroup\": \"x\",\n    \"delRuleGroup\": \"x\",\n    \"delRule\": \"x\",\n  };\n  const btnLabel = label || typeToLabel[type];\n  return <button onClick={onClick} type=\"button\" disabled={readonly}>{btnLabel}</button>;\n};\n","import React from \"react\";\n\nexport default ({children, config}) => {\n  return <>{children}</>;\n};\n","import React from \"react\";\n\nexport default ({config, valueSources, valueSrc, title, setValueSrc, readonly}) => {\n  const renderOptions = (valueSources) => (\n    valueSources.map(([srcKey, info]) => (\n      <option key={srcKey} value={srcKey}>{info.label}</option>\n    ))\n  );\n\n  const onChange = e => setValueSrc(e.target.value);\n  \n  return (\n    <select \n      onChange={onChange}\n      value={valueSrc || \"\"}\n      disabled={readonly}\n    >\n      {renderOptions(valueSources)}\n    </select>\n  );\n};\n","import React from \"react\";\n\nexport default ({value, setValue, label, id, config, type}) => {\n  const onChange = e => setValue(e.target.checked);\n  const postfix = type;\n  return [\n    <input key={id+postfix}  type=\"checkbox\" id={id+postfix} checked={!!value} onChange={onChange} />\n    ,\n    <label key={id+postfix+\"label\"}  htmlFor={id+postfix}>{label}</label>\n  ];\n};\n","export default ({onOk, okText, cancelText, title}) => {\n  if (confirm(title)) {\n    onOk();\n  }\n};\n","import React from \"react\";\n\n// value widgets\nexport {default as VanillaBooleanWidget} from \"./value/VanillaBoolean\";\nexport {default as VanillaTextWidget} from \"./value/VanillaText\";\nexport {default as VanillaTextAreaWidget} from \"./value/VanillaTextArea\";\nexport {default as VanillaDateWidget} from \"./value/VanillaDate\";\nexport {default as VanillaTimeWidget} from \"./value/VanillaTime\";\nexport {default as VanillaDateTimeWidget} from \"./value/VanillaDateTime\";\nexport {default as VanillaMultiSelectWidget} from \"./value/VanillaMultiSelect\";\nexport {default as VanillaSelectWidget} from \"./value/VanillaSelect\";\nexport {default as VanillaNumberWidget} from \"./value/VanillaNumber\";\nexport {default as VanillaSliderWidget} from \"./value/VanillaSlider\";\n\n// field select widget\nexport {default as VanillaFieldSelect} from \"./core/VanillaFieldSelect\";\n\n// core components\nexport {default as VanillaConjs} from \"./core/VanillaConjs\";\nexport {default as VanillaButton} from \"./core/VanillaButton\";\nexport {default as VanillaButtonGroup} from \"./core/VanillaButtonGroup\";\nexport {default as VanillaValueSources} from \"./core/VanillaValueSources\";\nexport {default as VanillaSwitch} from \"./core/VanillaSwitch\";\nexport {default as vanillaConfirm} from \"./core/vanillaConfirm\";\n\nexport const VanillaProvider = ({config, children}) => children;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport range from \"lodash/range\";\n\nexport default class Proximity extends PureComponent {\n  static propTypes = {\n    config: PropTypes.object.isRequired,\n    setOption: PropTypes.func.isRequired,\n    options: PropTypes.any.isRequired, //instanceOf(Immutable.Map)\n    minProximity: PropTypes.number,\n    maxProximity: PropTypes.number,\n    optionPlaceholder: PropTypes.string,\n    optionTextBefore: PropTypes.string,\n    optionLabel: PropTypes.string,\n    customProps: PropTypes.object,\n    readonly: PropTypes.bool,\n    //children\n  };\n\n  static defaultProps = {\n    customProps: {},\n    minProximity: 2,\n    maxProximity: 10,\n    optionPlaceholder: \"Select words between\",\n    optionLabel: \"Words between\",\n    optionTextBefore: null,\n  };\n\n  handleChange = (value) => {\n    this.props.setOption(\"proximity\", parseInt(value));\n  };\n\n  render() {\n    const {\n      defaults, options, config, optionLabel, optionPlaceholder, customProps, \n      minProximity, maxProximity, optionTextBefore, readonly\n    } = this.props;\n    const {settings, widgets, ctx} = config;\n    const defaultProximity = defaults ? defaults.proximity : undefined;\n    const {showLabels} = settings;\n    const selectedProximity = options.get(\"proximity\", defaultProximity);\n    const proxValues = range(minProximity, maxProximity + 1).map((item) => ({title: item, value: item}));\n    const factory = widgets.select.factory;\n    const Select = (props) => factory(props, ctx);\n\n    return (\n      <div className=\"operator--PROXIMITY\">\n        <div className=\"operator--options\">\n          { showLabels\n            && <label className=\"rule--label\">{optionLabel}</label>\n          }\n          { !showLabels && optionTextBefore\n            && <div className=\"operator--options--sep\">\n              <span>{optionTextBefore}</span>\n            </div>\n          }\n          <Select\n            config={config}\n            value={selectedProximity}\n            listValues={proxValues}\n            setValue={this.handleChange}\n            readonly={readonly}\n            placeholder={optionPlaceholder}\n            {...customProps}\n          />\n        </div>\n        <div className=\"operator--widgets\">{this.props.children}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport * as Widgets from \"../components/widgets\";\nimport * as CustomOperators from \"../components/operators\";\nimport { CoreConfig, Utils } from \"@react-awesome-query-builder/core\";\n\n\n//----------------------------  conjunctions\n\nconst conjunctions = {\n  ...CoreConfig.conjunctions,\n};\n\n//----------------------------  operators\n\nconst operators = {\n  ...CoreConfig.operators,\n  proximity: {\n    ...CoreConfig.operators.proximity,\n    options: {\n      ...CoreConfig.operators.proximity.options,\n      factory: (props, {RCE, O: {ProximityOperator}}) => RCE(ProximityOperator, props),\n    },\n  },\n};\n\n\n//----------------------------  widgets\n\nconst widgets = {\n  text: {\n    ...CoreConfig.widgets.text,\n    factory: (props, {RCE, W: {VanillaTextWidget}}) => RCE(VanillaTextWidget, props),\n  },\n  textarea: {\n    ...CoreConfig.widgets.textarea,\n    factory: (props, {RCE, W: {VanillaTextAreaWidget}}) => RCE(VanillaTextAreaWidget, props),\n  },\n  number: {\n    ...CoreConfig.widgets.number,\n    factory: (props, {RCE, W: {VanillaNumberWidget}}) => RCE(VanillaNumberWidget, props),\n  },\n  slider: {\n    ...CoreConfig.widgets.slider,\n    factory: (props, {RCE, W: {VanillaSliderWidget}}) => RCE(VanillaSliderWidget, props),\n  },\n  select: {\n    ...CoreConfig.widgets.select,\n    factory: (props, {RCE, W: {VanillaSelectWidget}}) => RCE(VanillaSelectWidget, props),\n  },\n  multiselect: {\n    ...CoreConfig.widgets.multiselect,\n    factory: (props, {RCE, W: {VanillaMultiSelectWidget}}) => RCE(VanillaMultiSelectWidget, props),\n  },\n  date: {\n    ...CoreConfig.widgets.date,\n    factory: (props, {RCE, W: {VanillaDateWidget}}) => RCE(VanillaDateWidget, props),\n  },\n  time: {\n    ...CoreConfig.widgets.time,\n    factory: (props, {RCE, W: {VanillaTimeWidget}}) => RCE(VanillaTimeWidget, props),\n  },\n  datetime: {\n    ...CoreConfig.widgets.datetime,\n    factory: (props, {RCE, W: {VanillaDateTimeWidget}}) => RCE(VanillaDateTimeWidget, props),\n  },\n  boolean: {\n    ...CoreConfig.widgets.boolean,\n    factory: (props, {RCE, W: {VanillaBooleanWidget}}) => RCE(VanillaBooleanWidget, props),\n  },\n  field: {\n    ...CoreConfig.widgets.field,\n    factory: (props, {RCE, W: {ValueFieldWidget}}) => RCE(ValueFieldWidget, props),\n    customProps: {\n      showSearch: true\n    }\n  },\n  func: {\n    ...CoreConfig.widgets.func,\n    factory: (props, {RCE, W: {FuncWidget}}) => RCE(FuncWidget, props),\n    customProps: {\n      //showSearch: true\n    }\n  },\n  case_value: {\n    ...CoreConfig.widgets.case_value,\n    // simple text value\n    factory: (props, {RCE, W: {VanillaTextWidget}}) =>  RCE(VanillaTextWidget, props),\n  }\n};\n\n//----------------------------  types\n\nconst types = {\n  ...CoreConfig.types,\n  select: {\n    ...CoreConfig.types.select,\n    widgets: {\n      ...CoreConfig.types.select.widgets,\n      select: {\n        ...CoreConfig.types.select.widgets.select,\n        widgetProps: {\n          customProps: {\n            showSearch: true\n          }\n        },\n      }\n    }\n  }\n};\n\n//----------------------------  settings\n\nconst settings = {\n  ...CoreConfig.settings,\n\n  renderField: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderOperator: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderFunc: (props, {RCE, W: {VanillaFieldSelect}}) => RCE(VanillaFieldSelect, props),\n  renderConjs: (props, {RCE, W: {VanillaConjs}}) => RCE(VanillaConjs, props),\n  renderSwitch: (props, {RCE, W: {VanillaSwitch}}) => RCE(VanillaSwitch, props),\n  renderButton: (props, {RCE, W: {VanillaButton}}) => RCE(VanillaButton, props),\n  renderButtonGroup: (props, {RCE, W: {VanillaButtonGroup}}) => RCE(VanillaButtonGroup, props),\n  renderProvider: (props, {RCE, W: {VanillaProvider}}) => RCE(VanillaProvider, props),\n  renderValueSources: (props, {RCE, W: {VanillaValueSources}}) => RCE(VanillaValueSources, props),\n  renderFieldSources: (props, {RCE, W: {VanillaValueSources}}) => RCE(VanillaValueSources, props),\n  renderConfirm: (props, {W: {vanillaConfirm}}) => vanillaConfirm(props),\n  renderSwitchPrefix: \"Conditions\",\n\n  customFieldSelectProps: {\n    showSearch: true\n  },\n\n  defaultSliderWidth: \"200px\",\n  defaultSelectWidth: \"200px\",\n  defaultSearchWidth: \"100px\",\n  defaultMaxRows: 5,\n  renderSize: \"small\",\n  maxLabelsLength: 100,\n\n  showLock: false,\n  showNot: true,\n  forceShowConj: false,\n  groupActionsPosition: \"topRight\", // oneOf [topLeft, topCenter, topRight, bottomLeft, bottomCenter, bottomRight]\n  \n};\n\n//----------------------------\n\nconst ctx = {\n  ...CoreConfig.ctx,\n  W: {\n    ...Widgets\n  },\n  O: {\n    ...CustomOperators\n  },\n  RCE: (C, P) => React.createElement(C, P),\n};\n\n//----------------------------\n\nlet config = {\n  conjunctions,\n  operators,\n  widgets,\n  types,\n  settings,\n  ctx,\n};\nconfig = Utils.ConfigMixins.removeMixins(config, [\n  \"rangeslider\",\n  \"treeselect\",\n  \"treemultiselect\",\n]);\n\nexport default config;\n","import React from \"react\";\nimport { Utils } from \"@react-awesome-query-builder/core\";\nimport debounce from \"lodash/debounce\";\nconst { mergeListValues, listValueToOption, optionToListValue, optionsToListValues, fixListValuesGroupOrder } = Utils.Autocomplete;\nconst { mapListValues, listValuesToArray, getListValue, makeCustomListValue, searchListValue, getItemInListValues } = Utils.ListUtils;\n\nfunction sleep(delay) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\nconst useListValuesAutocomplete = ({\n  asyncFetch, useLoadMore, useAsyncSearch, forceAsyncSearch,\n  asyncListValues: selectedAsyncListValues,\n  listValues: staticListValues, allowCustomValues,\n  value: selectedValue, setValue, placeholder, \n  config\n}, {\n  debounceTimeout,\n  multiple,\n  uif\n}) => {\n  const knownSpecialValues = [\"LOAD_MORE\", \"LOADING_MORE\"];\n  const loadMoreTitle = \"Load more...\";\n  const loadingMoreTitle = \"Loading more...\";\n  const aPlaceholder = forceAsyncSearch ? \"Type to search\" : placeholder;\n\n  // state\n  const [open, setOpen] = React.useState(false);\n  const [asyncFetchMeta, setAsyncFetchMeta] = React.useState(undefined);\n  const [loadingCnt, setLoadingCnt] = React.useState(0);\n  const [isLoadingMore, setIsLoadingMore] = React.useState(false);\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const [asyncListValues, setAsyncListValues] = React.useState(undefined);\n\n  // ref\n  const asyncFectchCnt = React.useRef(0);\n  const componentIsMounted = React.useRef(0);\n  const isSelectedLoadMore = React.useRef(false);\n\n  // compute\n  const nSelectedAsyncListValues = listValuesToArray(selectedAsyncListValues);\n  const listValues = asyncFetch\n    ? (selectedAsyncListValues ? mergeListValues(asyncListValues, nSelectedAsyncListValues, true) : asyncListValues)\n    : staticListValues;\n  let listValuesToDisplay = asyncFetch\n    ? asyncListValues\n    : staticListValues;\n  if (allowCustomValues && inputValue && !searchListValue(inputValue, asyncListValues)) {\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, [makeCustomListValue(inputValue)], true);\n  }\n  if (asyncFetch && !asyncListValues && selectedAsyncListValues && !inputValue && !open && uif === \"antd\") {\n    // for initial loading, to resolve \"a\" -> \"A\"\n    listValuesToDisplay = listValues;\n  }\n  if (asyncFetch && !allowCustomValues && selectedAsyncListValues && uif === \"mui\") {\n    // to prevent warning, when select A, search E -> A is missing in options\n    //  MUI: The value provided to Autocomplete is invalid.\n    //  None of the options match with `\"a\"`.\n    //  You can use the `isOptionEqualToValue` prop to customize the equality test.\n    listValuesToDisplay = mergeListValues(listValuesToDisplay, nSelectedAsyncListValues, true, true);\n  }\n  //const isDirtyInitialListValues = asyncListValues == undefined && selectedAsyncListValues && selectedAsyncListValues.length && typeof selectedAsyncListValues[0] != \"object\";\n  const isLoading = loadingCnt > 0;\n  const canInitialLoad = open && asyncFetch\n    && asyncListValues === undefined\n    && (forceAsyncSearch ? inputValue : true);\n  const isInitialLoading = canInitialLoad && isLoading;\n  const canLoadMore = !isInitialLoading && listValues && listValues.length > 0\n    && asyncFetchMeta && asyncFetchMeta.hasMore && (asyncFetchMeta.filter || \"\") === inputValue;\n  const canShowLoadMore = !isLoading && canLoadMore;\n  const options = mapListValues(listValuesToDisplay, listValueToOption);\n  const hasValue = selectedValue != null;\n  const selectedListValue = !multiple && hasValue ? getListValue(selectedValue, listValues) : null;\n  // const selectedListValues = multiple && hasValue ? selectedValue.map(v => getItemInListValues(listValues, v)) : [];\n\n  // fetch\n  const fetchListValues = async (filter = null, isLoadMore = false) => {\n    // clear obsolete meta\n    if (!isLoadMore && asyncFetchMeta) {\n      setAsyncFetchMeta(undefined);\n    }\n\n    const offset = isLoadMore && asyncListValues ? asyncListValues.length : 0;\n    const meta = isLoadMore && asyncFetchMeta || !useLoadMore && { pageSize: 0 };\n\n    const newAsyncFetchCnt = ++asyncFectchCnt.current;\n    const res = await asyncFetch.call(config?.ctx, filter, offset, meta);\n    const isFetchCancelled = asyncFectchCnt.current != newAsyncFetchCnt;\n    if (isFetchCancelled || !componentIsMounted.current) {\n      return null;\n    }\n\n    const { values, hasMore, meta: newMeta } = res?.values\n      ? res\n      : { values: res } // fallback, if response contains just array, not object\n    ;\n    const nValues = listValuesToArray(values);\n    let assumeHasMore;\n    let newValues;\n    if (isLoadMore) {\n      newValues = mergeListValues(asyncListValues, nValues, false);\n      assumeHasMore = newValues.length > asyncListValues.length;\n    } else {\n      newValues = nValues;\n      if (useLoadMore) {\n        assumeHasMore = newValues.length > 0;\n      }\n    }\n\n    // save new meta\n    const realNewMeta = hasMore != null || newMeta != null || assumeHasMore != null ? {\n      ...(assumeHasMore != null ? { hasMore: assumeHasMore } : {}),\n      ...(hasMore != null ? { hasMore } : {}),\n      ...(newMeta != null ? newMeta : {}),\n      filter\n    } : undefined;\n    if (realNewMeta) {\n      setAsyncFetchMeta(realNewMeta);\n    }\n\n    return newValues;\n  };\n\n  const loadListValues = async (filter = null, isLoadMore = false) => {\n    setLoadingCnt(x => (x + 1));\n    setIsLoadingMore(isLoadMore);\n    const list = await fetchListValues(filter, isLoadMore);\n    if (!componentIsMounted.current) {\n      return;\n    }\n    if (list != null) {\n      // tip: null can be used for reject (eg, if user don't want to filter by input)\n      setAsyncListValues(list);\n    }\n    setLoadingCnt(x => (x - 1));\n    setIsLoadingMore(false);\n  };\n  const loadListValuesDebounced = React.useCallback(debounce(loadListValues, debounceTimeout), []);\n\n  React.useEffect(() => {\n    componentIsMounted.current++;\n    // Initial loading\n    if (canInitialLoad && loadingCnt == 0 && asyncFectchCnt.current == 0) {\n      (async () => {\n        await loadListValues();\n      })();\n    }\n    // Unmount\n    return () => {\n      componentIsMounted.current--;\n    };\n  }, [canInitialLoad]);\n\n  // Event handlers\n  const onOpen = () => {\n    setOpen(true);\n  };\n\n  const onClose = async (_e) => {\n    const isLoadMoreClick = isSelectedLoadMore.current;\n    if (isLoadMoreClick) {\n      isSelectedLoadMore.current = false;\n      if (multiple) {\n        // required for MUI\n        setOpen(false);\n      }\n    } else {\n      setOpen(false);\n    }\n\n    if (uif === \"mui\" && !isLoadMoreClick) {\n      // parity with Antd\n      const resetValue = \"\";\n      await onInputChange(null, resetValue, \"my-reset\");\n    }\n  };\n\n  const onDropdownVisibleChange = (open) => {\n    if (open) {\n      onOpen();\n    } else {\n      onClose();\n    }\n  };\n\n  const isSpecialValue = (option) => {\n    const specialValue = option?.specialValue || option?.value;\n    return knownSpecialValues.includes(specialValue);\n  };\n\n  const onChange = async (e, val, option) => {\n    // todo: don't rely on 3rd param. check MUI 6\n    const isClearingAll = multiple && uif === \"mui\" && option === \"clear\";\n    // if user removes all chars in search, don't clear selected value\n    const isClearingInput = !multiple && uif === \"mui\" && option === \"clear\" && e?.type === \"change\";\n    if (uif === \"mui\") {\n      option = val;\n      if (multiple) {\n        val = option.map(o => (o?.value ?? o));\n      } else {\n        val = option?.value ?? option;\n      }\n    }\n    const specialValue = multiple && Array.isArray(option) && option.map(opt => opt?.specialValue).find(v => !!v)\n      || option?.specialValue;\n    if (multiple && val && !Array.isArray(val)) {\n      val = [...(selectedValue || []), val];\n      option = null;\n    }\n    // if there are tags AND input and select is opened, clear input first\n    const shouldIgnore = isClearingAll && val.length === 0 && inputValue && open\n      || isClearingInput;\n    if (shouldIgnore) {\n      return;\n    }\n    const isAddingCustomOptionFromSearch \n      = multiple\n      && val.length && val.length > (selectedValue || []).length\n      && val[val.length-1] == inputValue\n      && !getListValue(inputValue, asyncListValues);\n\n    if (specialValue == \"LOAD_MORE\") {\n      setInputValue(inputValue);\n      isSelectedLoadMore.current = true;\n      await loadListValues(inputValue, true);\n    } else if (specialValue == \"LOADING_MORE\") {\n      isSelectedLoadMore.current = true;\n    } else {\n      if (multiple) {\n        const [newSelectedValues, newSelectedListValues] = optionsToListValues(val, listValues, allowCustomValues);\n        setValue(newSelectedValues, asyncFetch ? newSelectedListValues : undefined);\n        \n        if (isAddingCustomOptionFromSearch) {\n          await sleep(0);\n          await onInputChange(null, \"\", \"my-reset\");\n        }\n      } else {\n        const [v, lvs] = optionToListValue(val, listValues, allowCustomValues);\n        setValue(v, asyncFetch ? lvs : undefined);\n      }\n    }\n  };\n\n  const onInputChange = async (e, newInputValue, eventType) => {\n    // eventType=reset used by MUI on:\n    // - (single) initial set, select option - e = null, newInputValue = selected  (+1 call before with e != null)\n    // - (single/multi, -ACV) blur - e != null, newInputValue = ''\n    // - (multiple v5, -ACV) blur - e = null, newInputValue = '' # unwanted\n    // - (multiple) select option - e != null, newInputValue = ''\n    // - (multiple v4) delete tag while searching - e = null, newInputValue = ''  # unwanted\n    // - (multiple v4) select option while searching - e = null, newInputValue = ''  # unwanted\n\n    const shouldIgnore = uif === \"mui\" && eventType === \"reset\"\n    // && (\n    //   e != null\n    //   // for MUI 4 if search \"A\" and select any option -> should NOT reset search\n    //   // for MUI 5 if search \"A\" and close -> let's hold search but hide, as it's done in antd\n    //   || e === null && inputValue && multiple\n    // )\n    ;\n    const val = newInputValue;\n    if (val === loadMoreTitle || val === loadingMoreTitle || shouldIgnore) {\n      return;\n    }\n\n    if (newInputValue != inputValue) {\n      setInputValue(val);\n\n      const canSearchAsync = useAsyncSearch && (forceAsyncSearch ? !!val : true);\n      if (canSearchAsync) {\n        await loadListValuesDebounced(val);\n      } else if (useAsyncSearch && forceAsyncSearch) {\n        setAsyncListValues([]);\n      }\n    }\n  };\n\n  // Options\n  const extendOptions = (options) => {\n    const filtered = [...options];\n    if (useLoadMore) {\n      if (canShowLoadMore) {\n        filtered.push({\n          specialValue: \"LOAD_MORE\",\n          title: loadMoreTitle,\n        });\n      } else if (isLoadingMore) {\n        filtered.push({\n          specialValue: \"LOADING_MORE\",\n          title: loadingMoreTitle,\n          disabled: true\n        });\n      }\n    }\n    return filtered;\n  };\n\n  const getOptionSelected = (option, valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const selectedValue = valueOrOption.value != undefined ? valueOrOption.value : valueOrOption;\n    return option.value === selectedValue;\n  };\n\n  const getOptionDisabled = (valueOrOption) => {\n    return valueOrOption && valueOrOption.disabled;\n  };\n\n  const getOptionIsCustom = (valueOrOption) => {\n    if (valueOrOption?.isCustom)\n      return true;\n    const val = valueOrOption?.value ?? valueOrOption;\n    const lv = getListValue(val, listValues);\n    return lv?.isCustom || false;\n  };\n\n  const getOptionLabel = (valueOrOption) => {\n    if (valueOrOption == null)\n      return null;\n    const option = valueOrOption.value != undefined ? valueOrOption\n      : listValueToOption(getListValue(valueOrOption, listValues));\n    if (!option && valueOrOption.specialValue) {\n      // special last 'Load more...' item\n      return valueOrOption.title;\n    }\n    if (!option && allowCustomValues) {\n      // there is just string value, it's not item from list\n      return valueOrOption;\n    }\n    if (!option) {\n      // weird\n      return valueOrOption;\n    }\n    return option.title || option.label;\n  };\n\n  const fixedOptions = uif === \"mui\" ? fixListValuesGroupOrder(options) : options;\n\n  return {\n    options: fixedOptions,\n    listValues,\n    hasValue,\n    selectedListValue,\n\n    open,\n    onOpen,\n    onClose,\n    onDropdownVisibleChange,\n    onChange,\n    \n    inputValue,\n    onInputChange,\n    canShowLoadMore,\n    isInitialLoading,\n    isLoading,\n    isLoadingMore,\n    isSpecialValue,\n\n    extendOptions,\n    getOptionSelected,\n    getOptionDisabled,\n    getOptionIsCustom,\n    getOptionLabel,\n    aPlaceholder,\n  };\n};\n\nexport default useListValuesAutocomplete;\n","import { Utils } from \"@react-awesome-query-builder/core\";\nimport * as ReactUtils from \"./reactUtils\";\nexport default { ...Utils, ReactUtils };\n","var map = {\n\t\"./es-us\": 88218,\n\t\"./es-us.js\": 88218,\n\t\"./ru\": 31313,\n\t\"./ru.js\": 31313\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 40164;"],"names":["mapListValues","Utils","ListUtils","useListValuesAutocomplete","Hooks","nonCheckedIcon","React","CheckBoxOutlineBlankIcon","fontSize","style","marginRight","marginTop","checkedIcon","CheckBoxIcon","emptyArray","props","allowCustomValues","multiple","disableClearable","selectedValue","value","customProps","readonly","config","filterOptionsConfig","errorText","defaultFilterOptionsConfig","stringify","useCallback","option","settings","listKeysForSearch","map","k","join","filterOptionsFn","createFilterOptions","_useListValuesAutocom","debounceTimeout","uif","open","onOpen","onClose","onChange","onInputChange","inputValue","options","isInitialLoading","isLoading","aPlaceholder","extendOptions","getOptionSelected","getOptionDisabled","getOptionIsCustom","getOptionLabel","selectedListValue","_config$settings","defaultSelectWidth","defaultSearchWidth","_ref","width","rest","_objectWithoutProperties","_excluded","customInputProps","input","inputWidth","omit","customAutocompleteProps","minWidth","undefined","placeholder","useStyles","makeStyles","theme","classesChip","root","height","label","marginBottom","useStylesChip","classes","FormControl","fullWidth","Autocomplete","_extends","disableCloseOnSelect","freeSolo","loading","disabled","readOnly","groupBy","groupTitle","renderInput","params","_selectedListValue$ti","shouldRenderSelected","selectedTitle","title","TextField","inputProps","_objectSpread","InputProps","endAdornment","CircularProgress","color","size","error","renderTags","getTagProps","index","className","titleSpan","Chip","key","renderOption","_ref2","selected","renderTitle","specialValue","isHidden","Box","filterOptions","filtered","mapFieldItemToOptionKeys","path","altLabel","tooltip","grouplabel","itemsToListValues","items","level","arguments","length","item","matchesType","prefix","repeat","_value2","_altLabel","flat","Infinity","fieldAdapter","selectedKey","setField","isValueField","listValues","fieldItemKeysForSearch","setValue","_asyncValues","paper","padding","spacing","MaterialTextWidget","maxLength","textValue","e","val","target","MaterialTextAreaWidget","maxRows","defaultMaxRows","multiline","MaterialDateWidget","_window","_window$matchMedia","_window2","dateFormat","valueFormat","Picker","window","matchMedia","call","matches","useKeyboard","KeyboardDatePicker","DatePicker","format","isValid","formatSingleValue","MaterialDateTimeWidget","use12Hours","timeFormat","KeyboardDateTimePicker","DateTimePicker","dateTimeFormat","ampm","MaterialTimeWidget","KeyboardTimePicker","TimePicker","hasSeconds","indexOf","timeValue","moment","views","MaterialSelectWidget","hasValue","Select","autoWidth","displayEmpty","renderValue","_ref3","filter","v","shift","getListValueTitle","MenuItem","MaterialNumberWidget","min","max","step","numberValue","type","Number","MaterialSliderWidget","marks","defaultSliderWidth","customSliderProps","slider","sliderValue","muiMarks","Object","keys","InputCmp","onBlur","SliderCmp","Slider","_e","newValue","valueLabelDisplay","stylesSliderWrapper","marginLeft","paddingLeft","display","alignItems","flexWrap","MaterialRangeWidget","placeholders","textSeparators","useEffect","_slicedToArray","valueFrom","valueTo","setTimeout","oneValue","handleInputBlur","_toConsumableArray","_sliderValue","FromInputCmp","ToInputCmp","newValues","stylesInputWrapper","MaterialBooleanWidget","labelYes","labelNo","Typography","component","Grid","container","Switch","checked","MaterialMultiSelectWidget","selectedValues","selectedTitles","Checkbox","ListItemText","primary","MaterialAutocompleteWidget","MaterialFieldSelect","findLabel","fields","field","Array","isArray","some","pop","renderOptions","ListSubheader","disableSticky","MaterialFieldAutocomplete","MaterialAutocomplete","MaterialButton","onClick","typeToIcon","DeleteIcon","AddIcon","typeToColor","IconButton","Button","startIcon","MaterialButtonGroup","children","MaterialConjs","id","not","setNot","conjunctionOptions","setConjunction","showNot","notLabel","conjsCount","lessThenTwo","showConj","forceShowConj","ButtonGroup","disableElevation","variant","bind","_conjunctionOptions$k","name","postfix","isDummyFn","MaterialSwitch","checkedLabel","hideLabel","renderSize","showLabel","icon","LockIcon","LockOpenIcon","FormControlLabel","control","MaterialValueSources","valueSources","valueSrc","setValueSrc","_React$useState","_React$useState2","anchorEl","setAnchorEl","handleClose","Boolean","event","currentTarget","handleOpen","ExpandMoreSharpIcon","Popover","anchorOrigin","vertical","horizontal","transformOrigin","disablePortal","FormLabel","RadioGroup","srcKey","info","Radio","MaterialConfirm","onOk","okText","cancelText","confirmFn","description","confirmationText","cancellationText","then","MaterialUseConfirm","useConfirm","MaterialProvider","settingsTheme","settingsLocale","locale","themeConfig","material","createTheme","base","withProviders","MuiPickersUtilsProvider","utils","MomentUtils","ConfirmProvider","ThemeProvider","BasicConfig","renderField","_props$customProps","RCE","_ref$W","W","showSearch","renderOperator","renderFunc","renderConjs","_ref4","renderSwitch","_ref5","renderButton","_ref6","renderButtonGroup","_ref7","renderValueSources","_ref8","renderFieldSources","_ref9","renderProvider","_ref10","renderConfirm","_ref11","_ref12","widgets","text","factory","_ref13","textarea","_ref14","number","_ref15","multiselect","_ref16","_ref16$W","asyncFetch","select","_ref17","_ref17$W","_ref18","boolean","_ref19","date","_ref20","time","_ref21","datetime","_ref22","rangeslider","_ref23","types","ctx","MaterialWidgets","ConfigMixins","addMixins","query_builder_seed","timePart","Date","getTime","toString","substr","replace","c","r","Math","floor","random","isObject","_typeof","widgetDefKeysToOmit","opDefKeysToOmit","defaultValue","_default","deepEqual","v1","v2","Map","isMap","equals","JSON","shallowEqual","a","b","deep","arrA","arrB","len","i","shallowEqualArrays","objA","objB","aKeys","bKeys","shallowEqualObjects","isImmutable","toJS","toImmutableList","Immutable","applyToJS","escapeRegExp","string","cleanJSX","jsx","el","_i","isDirtyJSX","_cleaned$props","cleaned","includes","isJSX","isJsonLogic","logic","sleep","delay","Promise","resolve","mergeArraysSmart","arr1","arr2","op","orig","next","slice","after","reverse","find","before","x","reduce","acc","newOp","rel","relOp","ind","splice","deepFreeze","obj","forEach","prop","freeze","isJsonCompatible","tpl","bag","concat","getLogger","devMode","console","log","warn","debug","getFirstDefined","ret","arr","logger","formatField","parts","label2","fieldDefinition","isForDisplay","fieldSources","keepInputOnChangeFieldSrc","valueSourcesInfo","fieldSeparator","fieldSeparatorDisplay","canReorder","canRegroup","canDeleteLocked","canLeaveEmptyGroup","shouldCreateEmptyGroup","canShortMongoQuery","removeEmptyGroupsOnLoad","removeIncompleteRulesOnLoad","removeInvalidMultiSelectValuesOnLoad","setOpOnChangeField","groupOperators","defaultGroupConjunction","valueLabel","valuePlaceholder","fieldLabel","operatorLabel","funcLabel","fieldPlaceholder","funcPlaceholder","operatorPlaceholder","lockLabel","lockedLabel","deleteLabel","addGroupLabel","addCaseLabel","addDefaultCaseLabel","defaultCaseLabel","addRuleLabel","addSubRuleLabel","delGroupLabel","fieldSourcesPopupTitle","valueSourcesPopupTitle","removeRuleConfirmOptions","removeGroupConfirmOptions","toListValue","makeCustomListValue","lv","isCustom","listValuesToArray","listValuesObj","listValuesArr","push","getItemInListValues","getTitleInListValues","it","getValueInListValues","mapFn","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","f","searchListValue","search","getListValue","expandTreePath","_len","suffix","_key","interpose","withMutations","list","skip","apply","expandTreeSubpath","_len2","_key2","getItemByPath","tree","_defineProperty","get","res","removeIsLockedInTree","newTree","_processNode","isParentLocked","itemPath","isLocked","getIn","deleteIn","child","_childId","fixPathsInTree","lev","nodeId","currPath","currId","itemId","setIn","constructor","childId","fixEmptyGroupsInTree","allChildrenGone","curr","getFlatTree","realHeight","_flatizeTree","insideCollapsed","insideLocked","insideRuleGroup","parentType","caseId","collapsed","childrenIds","_child","isRuleGroup","isLeaf","itemsBefore","top","parent","isDefaultCase","leaf","leafsCount","_top","node","subinfo","itemsAfter","assign","_height","bottom","prevId","nextId","prev","getTotalReordableNodesCountInTree","cnt","children1","getTotalRulesCountInTree","getTreeBadFields","badFields","valueError","from","Set","getLightTree","children1AsArray","properties","operatorOptions","values","getSwitchValues","vals","caseValue","isEmptyTree","hasChildren","getTree","immutableTree","light","loadTree","serTree","isImmutableTree","isTree","jsToImmutable","startsWith","parse","checkTree","extendedConfig","extendConfig","validateTree","isValidTree","fromJS","outValue","toOrderedMap","_outValue$get","isIndexed","_v$toJS","vJs","func","toList","loadFromJsonLogic","logicTree","_loadFromJsonLogic","returnErrors","meta","errors","conv","buildConv","jsTree","convertFromLogic","wrapInDefaultConj","immTree","operators","opKey","opConfig","jsonLogic","opk","_jsonLogicIsRevArgs","cardinality","jsonLogic2","conjunctions","conjKey","jsonLogicConj","toLowerCase","funcs","iterateFuncs","_step$value","funcPath","funcConfig","fk","jsonLogicIsMethod","_config$settings$json","varKeys","groupVarKey","altVarKey","expectedType","fieldConfig","widget","parentField","beforeErrorsCnt","lockedOp","isEmptyOp","isRev","convertFieldRhs","convertFuncRhs","convertValRhs","convertConj","convertOp","afterErrorsCnt","_fieldConfig$fieldSet","widgetConfig","mainWidget","fieldType","h","m","dateVal","setMilliseconds","setHours","setMinutes","setSeconds","toISOString","asyncListValues","fieldSettings","valueType","normalizeField","getFieldConfig","argsArr","funcKey","opts","_vals","_toArray","returnType","funcKeys","getFuncConfig","_step2","_iterator2","_step2$value","fc","jsonLogicImport","parsed","argKeys","args","argsObj","argVal","argKey","argConfig","_argVal","isOptional","complexFields","_v$properties","_v$properties2","fieldSrc","_f$includes","complexFieldsGroupAncestors","fromEntries","split","ancs","fp","conjunction","uuid","groupToId","entries","_v$properties3","groupAncestors","groupField","ch","parentFieldParts","getFieldParts","groupPath","gf","gfc","groupId","mode","rule","defaultConjunction","_parseRule","arity","isRevArgs","isGroup0","opKeys","jlField","jlArgs","_vals2","_vals3","lhs","having","isGroup","_parse","convertFieldLhs","convertFuncLhs","_v","_v2","init","_v3","_v4","group","parsedGroup","convertLhs","op2","parseRes","submeta","parseRule","conj","havingVals","havingNot","reversedOp","getWidgetForFieldOp","convertedArgs","parentFieldConfig","wrapInDefaultConjRuleGroup","operator","asyncListValuesArr","SqlString","SqlStringOrig","trim","charAt","substring","escapeLike","any_start","any_end","escape","sqlEmptyValue","fieldDef","mongoEmptyValue","spelFixList","spelEscape","numberToFloat","arrayToArray","isFinite","isNaN","isInteger","javaType","jt","escapedVals","toArray","numberJavaTypes","Error","spelInlineList","spelEscapeString","spelFormatConcat","part","spelImportConcat","isVariable","stringifyForDisplay","compareToSign","TypesWithCompareTo","spelFormat","_spelFormat","formatItem","formatGroup","formatRule","formatSwitch","formatCase","_formatItemValue","formatItemValue","_formatItemValue2","formattedValue","cases","currentChild","filteredCases","left","right","_filteredCases$_i","cond","List","conjunctionDefinition","isRuleGroupArray","isSpelArray","groupOperator","realGroupOperator","checkOp","isGroupOpRev","realGroupOperatorDefinition","getOperatorConfig","_formatItemValue3","_formatItemValue4","omitBrackets","spelFormatConj","formattedField","getSize","fullSize","filteredSize","formatExpression","opDef","fn","spelFormatOp","operatorDefinition","spelOp","isSign","isCompareTo","sop","compareRes","_","buildFnToFormatOp","spelFormatReverse","revOpDef","canFormatOp","canFormatRevOp","realOp","_formatItemValue5","_formatItemValue6","formatLhs","formatFunc","expectedValueType","iValueSrc","iValueType","iValue","valueSrcs","valueTypes","fvalue","currentValue","cValue","completeValue","fieldWidgetDef","getFieldWidgetConfig","fv","formatValue","hasUndefinedValues","first","operatorDef","spelFormatValue","pick","valFieldDefinition","fieldParts","fieldPartsConfigs","getFieldPartsConfigs","formatFieldFn","formatSpelField","fieldName","formatFieldName","fieldPartsMeta","cnf","parentCnf","isSpelMap","isSpelItemMap","isSpelVariable","formattedArgs","gaps","missingArgKeys","_argConfig$spelEscape","defaultValueSrc","argValue","argValueSrc","argAsyncListValues","doEscape","spelEscapeForFormat","formattedArgVal","formattedDefaultVal","defaultWidget","defaultFieldWidgetDef","finalFormattedVal","missedArgKey","spelFormatFunc","spelFunc","found","_formattedArgs$argKey","optionalArgs","RegExp","SpelPrimitiveTypes","null","SpelPrimitiveClasses","String","loadFromSpel","_loadFromSpel","spelStr","compiledExpression","convertedObj","SpelExpressionEvaluator","compile","_compiledExpression","postprocessCompiled","convertToTree","expr","parentExpr","getType","getChildren","selection","lastChild","isSize","methodName","isLength","sourceParts","source","convertPath","isThis","isRoot","itype","_lastChild","_lastChild2","getRaw","getValue","flatizeTernary","functionName","qid","cls","_val","isVar","_processTernaryChildren","tern","_tern","if_val","else_val","_loop","spelOps","spelConj","_loop2","fks","funcSignMain","_k","funcSignsOptional","optionalArgKeys","_step3","_iterator3","valueFuncs","w","widgetDef","spelImportFuncs","fs","argsOrder","matchAll","opFuncs","spel","parentSpel","canParseAsArg","_groupFilter","groupFieldValue","_groupField","groupFilter","caseI","buildCase","convertArg","sw","buildSimpleSwitch","isUnary","isBetweenNormal","isBetweenRev","_spel$children$0$chil","_spel$children$1$chil","to","compareArgs","convertChildren","_newChildren","newChildren","_fieldObj$groupFieldV","_convertedArgs","fieldObj","opArg","_vals$","_vals$2","ws","needWrapReverse","buildRuleGroup","buildRule","expectingField","isError","_meta$errors","_meta$errors$push","_spel$children","at","_values$","buildCaseValueConcat","maybe","convertFunc","_buildFuncSignatures","brns","p","currBrn","o","_currBrn$params","_buildFuncSignatures2","_buildFuncSignatures3","s1","params1","newBrn","objs","unshift","_step4","_iterator4","_brn$objs","brn","_params","_buildFuncSignatures4","_buildFuncSignatures5","_fsigns$","convertFuncArg","fsigns","buildFuncSignatures","firstSign","maybeValue","convertFuncToValue","maybeOp","convertFuncToOp","_step5","_iterator5","_loop3","_step5$value","_step6","_iterator6","_step6$value","spelImport","funcArgs","errs","foundSign","foundWidget","candidates","fj","_step7","_iterator7","_step8","_step7$value","_iterator8","_loop4","_step8$value","_candidates","_candidates$_i","spelImportValue","_spelImportValue$call","_spelImportValue$call2","_step9","_iterator9","_step10","_step9$value","_iterator10","_loop5","_argsArr$filter$find","_step10$value","parseInt","_ret2","_field3","groupOpRule","_map","_map2","leftSource","rightSource","_map3","_map4","leftVal","rightVal","valProperties","buildCaseValProperties","_processConcatChildren","convertedChild","convVal","importCaseValue","_importCaseValue","_importCaseValue2","normVal","getDefaultField","canGetFirst","parentRuleGroupPath","defaultField","getDefaultSubField","getFirstField","parentRuleGroupConfig","getDefaultFieldSrc","_config$settings$fiel","getDefaultOperator","defaultOperator","fieldOperators","fieldDefaultOperator","getFirstOperator","_origDefaultOperator","defaultOperatorOptions","operatorConfig","defaults","defaultRuleProperties","_item$properties","_item$properties2","_item$properties3","canUseDefaultFieldAndOp","showErrorMessage","current","set","_getNewValueForFieldO","getNewValueForFieldOp","newValueSrc","newValueType","newValueError","conjs","defaultGroupProperties","defaultItemProperties","_item$properties4","defaultRule","defaultRoot","createListFromArray","ids","emptyProperies","validateAndFixTree","_oldTree","newConfig","oldConfig","removeEmptyGroups","removeIncompleteRules","validateItem","oldChildren","sanitized","validateGroup","_field","_field$toJS","_field2","_field2$toJS","oldSerialized","getFieldSrc","availOps","getOperatorsForField","newSerialized","isValueCompleted","delta","isCompletedValue","isFieldCompleted","isCompleted","_newSerialized$valueS","_newSerialized$valueS2","_oldSerialized$valueS","reason","validateRule","validateValue","leftField","canFix","isEndValue","isRawValue","validError","fixedValue","_validateFieldValue","validateFieldValue","_validateFieldValue2","_validateFuncValue","validateFuncValue","_validateFuncValue2","_validateNormalValue","validateNormalValue","_validateNormalValue2","fieldWidgetDefinition","rightFieldDefinition","validResult","wConfig","wType","jsType","treeValues","isAsyncListValues","canSkipCheck","typeOf","realListValues","isList","_values$reduce","goodVals","badVals","vv","_values$reduce2","goodValues","badValues","plural","validateValueInList","_valueSrc","isFuncArg","_isFuncArg","leftFieldStr","rightFieldStr","argDef","_validateValue","_validateValue2","argValidError","fixedArgVal","completeFuncValue","complValue","tmpHasOptional","filteredValueSources","filterValueSourcesForField","argDefaultValueSrc","completeArgValue","getDefaultArgValue","setFunc","oldFuncKey","oldArgs","newFuncSignature","getFuncSignature","oldFuncSignature","keepArgsKeys","getCompatibleArgsOnFuncChange","firstValueSrc","setArgValue","setArgValueSrc","argValSrc","_argConfig","_config","s2","argVals","arg2","arg1","selectTypes","listValuesType","newField","newOperator","changedProp","currentField","currentFieldType","currentOperator","currentValueSrc","currentValueType","currentAsyncListValues","convertableWidgets","clearValueOnChangeField","clearValueOnChangeOp","newOperatorConfig","operatorCardinality","currentFieldConfig","newFieldConfig","isOkWithoutField","currentType","newType","canReuseValue","newListValuesType","currentListValuesType","vs","currentWidget","newWidget","currentValueWidget","newValueWidget","firstWidgetConfig","getValueSourcesForFieldOp","valueFixes","valueErrors","vType","vSrc","isValidSrc","validateError","fixValue","dropValue","_ignore","_newFieldConfig$field","validateValues","jsValues","rangeValidateError","vt","parentPathArr","firstField","getFieldRawConfig","keysPath","_firstField","subfields","getOperatorsForType","_config$types$fieldTy","_fieldOps$","fieldOps","getFuncPathLabels","getFieldPathLabels","fieldsKey","subfieldsKey","parentParts","_curr","last","parentFieldDef","isFieldDescendantOfField","getValueLabel","isSpecialRange","arg","showLabels","fieldWidgetConfig","mergedOpConfig","valueLabels","_getWidgetsAndSrcsForFieldOp","widgetValueSrc","canAdd","_fieldConfig$valueSou","_opConfig$valueSource","canAddValueSrc","widgetWeight","wg","preferWidgets","sort","w1","w2","getWidgetsForFieldOp","_fieldDefinition$type","__fieldsCntByType","minCnt","__funcsCntByType","useTableName","tableName","fieldPartsCopy","parentFieldName","isEmptyItem","liteCheck","isEmptyRuleGroupExt","isEmptyGroup","isEmptyRule","isEmptyRuleGroupExtPropertiesAndChildren","toObject","_config$operators$ope","_config$operators$ope2","isEmptyRuleProperties","isEmptyGroupChildren","_config$operators$ope3","_config$operators$ope4","_valueSrc$get","applyJsonLogic","data","JL","customJsonLogicOperations","CALL","JSX","mergeObjects","obj1","obj2","strlen","str","regexTest","pattern","flags","match","now","date_add","dim","add","toDate","toUpperCase","applyJsonLogicWithPath","message","callContextFn","_this","addRequiredJsonLogicOperations","configKeys","compileMetaFieldSettings","isArr","compileMetaWidget","sqlFormatValue","mongoFormatValue","elasticSearchFormatValue","compileMetaOperator","formatOp","mongoFormatOp","sqlFormatOp","ignore","elasticSearchQueryType","compileMetaWidgetForType","widgetProps","opProps","compileMeta","mainWidgetProps","formatConj","sqlFormatConj","renderBrackets","renderSeps","sqlFormatFunc","mongoFormatFunc","mui","invokeWith","canCompareFieldWithField","formatReverse","sqlFormatReverse","formatAggr","normalizeListValues","renderSwitchPrefix","renderItem","renderBeforeWidget","renderAfterWidget","renderBeforeActions","renderAfterActions","renderRuleError","compressConfig","baseConfig","__fieldNames","zipConfig","_clean","BasicFuncs","prototype","hasOwnProperty","_base","_configKeys","rootKey","clone","decompressConfig","useConfigCompress","unzipConfig","_mergeDeep","mixin","_resolveAndMergeDeep","resolved","_i2","_configKeys2","merge","compileConfig","__compliled","_compileConfigParts","defineProperty","enumerable","writable","subconfig","logs","newPath","targetObj","newVal","renderReactElement","compileJsonLogicReact","_newVal4","compileJsonLogic","def","jl","re","this","argNames","_ctx$components","_props","Cmp","components","O","_marked2","_regeneratorRuntime","iterateFields","allowArrayLike","Symbol","iterator","minLen","_arrayLikeToArray","test","_unsupportedIterableToArray","F","TypeError","normalCompletion","didErr","_e2","configId","canCompile","__configId","mergeWith","defaultSettings","mergeCustomizerNoArrays","typesConfig","_extendTypeConfig","_extendTypesConfig","_extendFieldsConfig","_extendFuncArgsConfig","momentLocale","typeConfig","typeWidgetConfig","typeWidgetOperators","excludeOperators","_extendFieldConfig","funcDef","tmpIsOptional","excludeOperatorsForField","_keysToPutInFieldSett","excludeOperatorsForType","shouldIncludeOperators","addOperators","_computeFieldName","computeFieldName","inGroup","fullPath","objValue","srcValue","_object","_source","_stack","_context","delegateYield","_iterateFields","stop","_marked","_context2","_callee","_config$settings2","fieldKey","_context3","t0","t1","_config$settings3","targetFields","_reduce","computedPath","computed","fConfig","_config$__fieldNames$","_config$__fieldNames$2","findStr","getFuncArgConfig","_config$settings4","getFieldPath","parentPath","_config$settings5","_config$settings6","_field$get","_field$split","_field$get2","getFieldPathParts","onlyKeys","_field$get3","_field$get4","widgetOpProps","fieldWidgetOpProps","fieldWidgetProps","valueFieldSettings","_widgetDefKeysToOmit","queryBuilderFormat","usedFields","rules","condition","_valueType","secondField","ruleQuery","jsonLogicFormat","ff","tmp","pdef","groupOperatorDefinition","resultQuery","formatLogic","var","revOperatorDefinition","oldUsedFields","funcParts","funcLastKey","formattedArgsArr","funcName","varName","jsonLogicVar","formatteOp","isReverseArgs","rangeOps","eqOps","opOpts","mongodbFormat","_mongodbFormat","parents","_not","_canWrapExpr","_formatFieldName","_value","hasParentRuleGroup","realParentPath","groupFieldName","canHaveEmptyChildren","reversedConj","mongoConj","totalQuery","filterQuery","as","_f","useExpr","_formatFunc","_formatFunc2","_formatValue","_formatValue2","fvUseExpr","wrapExpr","_formatRightField","formatRightField","_formatRightField2","_formatFunc3","_formatFunc4","rightField","fieldPartsLabels","fieldFullLabel","mongoFunc","mongoArgsAsObject","argsCnt","lastArg","_formatValue3","_formatValue4","_formatValue5","_formatValue6","sqlFormat","_sqlFormat","sqlOp","valFrom","valTo","sqlFunc","argsStr","queryString","conjStr","aggrArgs","returnArgs","revOperatorDef","fop","labelForFormat","_operator","_fn","cutParentField","fieldLabel2","funcValue","formattedArgsWithNames","argName","buildEsRule","syntax","queryType","parameters","textField","determineField","script","elasticSearchScript","ES_7_SYNTAX","geoPointString","coordsNumberArray","top_left","lat","lon","bottom_right","buildEsGeoPoint","gte","lte","dateTime","lt","gt","buildEsRangeParameters","buildEsWildcardParameters","buildRegexpParameters","buildParameters","bool","must_not","ES_6_SYNTAX","elasticSearchFormat","_properties$get","_properties$get2","recursiveFxn","childrenArray","valueSeq","occurrence","combinator","determineOccurrence","result","resultFlat","buildEsGroup","simulateAsyncFetch","all","cPageSize","_asyncToGenerator","offset","pageSize","currentOffset","newOffset","hasMore","ceil","abrupt","_x","_x2","_x3","mergeListValues","toStart","hideNewValues","old","newFiltered","av","optionToListValue","_val$value","customItem","listValue","optionsToListValues","newSelectedListValues","_val$value2","newSelectedValues","_o$value","listValueToOption","fixListValuesGroupOrder","groupTitles","findLastIndex","findIndex","lv1","_lv1$groupTitle","_lv$groupTitle","nv","NOW","jsonLogicCustomOps","RELATIVE_DATETIME","method","_spel$methodName","matchRes","abs","plus","minus","day","week","month","year","LOWER","UPPER","LINEAR_REGRESSION","coef","bias","_a$children","mongoFormatOp1","mop","mc","_op","$field","mv","mongoFormatOp2","mops","_$not3","equal","opStr","_this$utils","not_equal","isNotOp","_this$utils2","less","_this$utils3","_len3","_key3","less_or_equal","_this$utils4","_len4","_key4","greater","_this$utils5","_len5","_key5","greater_or_equal","_this$utils6","_len6","_key6","like","_this$utils7","_len7","_key7","not_like","_this$utils8","_this2","_len8","_key8","starts_with","_this$utils9","_this3","_len9","_key9","ends_with","_this$utils10","_this4","_len10","_key10","between","_this$utils11","_len11","_key11","not_between","_this$utils12","_len12","_key12","is_empty","empty","_this$utils13","_this5","_len13","_key13","is_not_empty","_this$utils14","_this6","_len14","_key14","is_null","_this$utils15","_len15","_key15","is_not_null","_this$utils16","_len16","_key16","select_equals","_this$utils17","_len17","_key17","select_not_equals","_this$utils18","_len18","_key18","select_any_in","_this$utils19","_len19","_key19","select_not_any_in","_this$utils20","_len20","_key20","multiselect_contains","_this$utils21","_len21","_key21","multiselect_not_contains","multiselect_equals","_this7","_this$utils22","_len22","_key22","multiselect_not_equals","_this8","_this$utils23","_len23","_key23","proximity","val1","val2","prox","aVal1","aVal2","optionLabel","optionTextBefore","optionPlaceholder","minProximity","maxProximity","_this$utils24","_len24","_key24","_this$utils25","_len25","_key25","none","_this$utils26","_len26","_key26","wgtDef","isFloat","valLabel","_this9","valsLabels","_this10","isCallable","_args$fmt","_args$fmt$includes","_args$fmt2","_args$fmt2$toLowerCas","fmt","ISO_8601","_args$fmt3","_args$fmt3$toLowerCas","_args$fmt4","_args$fmt5","_args$fmt5$includes","rightFieldDef","case_value","partsExt","_this11","q","whereStr","aggrField","aggrFieldDef","leftFieldConfig","rightFieldConfig","_addMixins","mixins","doAdd","mixinFuncs","mixinWidgetRangeslider","treeselect","mixinWidgetTreeselect","treemultiselect","mixinWidgetTreemultiselect","rangeable__date","mixinRangeableWidget","mixName","mixinFunc","addMixin","singleWidget","treeData","_this12","_this13","removeMixins","AND","sqlConj","spelConjs","OR","ADD_GROUP","ADD_CASE_GROUP","REMOVE_GROUP","SET_CONJUNCTION","SET_NOT","ADD_RULE","REMOVE_RULE","SET_FIELD","SET_FIELD_SRC","SET_OPERATOR","SET_VALUE","SET_VALUE_SRC","SET_OPERATOR_OPTION","SET_LOCK","SET_TREE","MOVE_ITEM","PLACEMENT_AFTER","PLACEMENT_BEFORE","PLACEMENT_APPEND","PLACEMENT_PREPEND","SET_DRAG_PROGRESS","SET_DRAG_START","SET_DRAG_END","addNewGroup","state","groupUuid","canAddNewRule","origState","addItem","_addChildren1","id1","it1","currentNumber","maxNumber","maxNumberOfCases","maxNumberOfRules","maxNesting","isTernary","targetItem","caseGroup","take","childrenPath","targetChildren","targetChildrenSize","isLastDefaultCase","_Immutable$OrderedMap2","newChildrenWithLast","mergeIn","removeItem","emptyDrag","dragging","y","mousePos","dragStart","setTree","constants","addRule","ruleType","removeRule","addDefaultCaseGroup","addCaseGroup","addGroup","removeGroup","moveItem","fromPath","toPath","placement","setLock","lock","__isInternal","setFieldSrc","setOperator","setOperatorOption","BasicUtils","Export","Import","getMemoizedTree","setLastTree","emptyTree","emptyState","action","actionMeta","_affectedField","actionTypesToIgnore","mapValues","affectedField","getField","getActionMeta","validatedTree","parentOperator","parentOperatorConfig","hasGroupCountRule","isParentRuleGroup","isEmptyParentGroup","canLeaveEmpty","initialEmptyWhere","_setField","_newFieldConfig$opera","isInternalValueChange","currentProperties","wasRuleGroup","currentFieldSrc","currentOperatorOptions","isRuleGroupExt","isChangeToAnotherType","lastOp","strategy","groupProperties","updateIn","_getNewValueForFieldO2","newOperatorOptions","__isInternalValueChange","currentRule","currentFielType","_getNewValueForFieldO3","_setValue","calculatedValueType","calculateValueType","isLastEmpty","isLastError","_getNewValueForFieldO4","sourcePath","sourceChildren","targetPath","isSameParent","isSourceInsideTarget","isTargetInsideSource","sourceSubpathFromTarget","targetSubpathFromSource","newTargetChildren","newSourceChildren","_oldChildren","checkEmptyGroups","__lastAction","setDragProgress","setDragStart","setDragEnd","TreeActions","_Utils$ConfigUtils","ConfigUtils","createConfigMemo","configStore","getExtended","findConfig","savedConfig","_ret3","findExtended","extendAndStore","findOrExtend","pickConfig","getBasic","basicConfig","extConfig","_ret","truncateString","useWordBoundary","subString","lastIndexOf","immutableEqual","getReactRootNodeType","_reactRootContainer","getOwnPropertyNames","parentNode","isUsingLegacyReactDomRender","liteShouldComponentUpdate","self","nextProps","nextState","prevProps","prevState","should","chs","changed","pureShouldComponentUpdate","useOnPropsChanged","shouldComponentUpdate","componentWillReceiveProps","onPropsChanged","origShouldComponentUpdate","bindActionCreators","actionCreators","dispatch","actionCreator","Query","_Component","_inherits","_super","_classCallCheck","_assertThisInitialized","nextValue","oldValidatedTree","_updateActions","sanitizeTree","_createClass","actions","newBasicConfig","getBasicConfig","_this$props","renderBuilder","Component","propTypes","PropTypes","isRequired","ConnectedQuery","connect","context","displayName","DefaultUtils","QueryContainer","lastTree","prevTree","prevprevTree","prevValue","_createConfigMemo","getMemoizedConfig","originalTree","createValidationMemo","reducer","treeStoreReducer","store","createStore","QueryWrapper","pr","nextConfig","isConfigChanged","storeValue","getState","isTreeChanged","currentTree","isTreeTrulyChanged","get_children","Provider","TreeUtils","_isReorderingTree","GroupOrRule","_class","_PureComponent","Draggable","handleDraggerMouseDown","dom","wrapper","onDragStart","isDraggingTempo","isDraggingMe","otherProps","isTrueLocked","styles","cn","classNames","ref","PureComponent","Operator","getMeta","_config$types$selecte","selectedField","selectedFieldType","selectedOperator","operatorsOptions","pickBy","_opts","buildOptions","selectedOpts","selectedKeys","selectedPath","selectedLabel","ops","renderProps","selectedFieldSrc","Col","dummyFn","DragIcon","xmlns","viewBox","fill","d","WithConfirmFn","OperatorWrapper","selectedFieldParts","showOperator","showOperatorLabel","selectedFieldWidgetConfig","operatorInlineLabel","RuleUtils","Field","maxLabelsLength","isFieldSelected","currField","getFieldLabel","partsLabels","selectedFullLabel","selectedAltLabel","parentFieldPath","sourceFields","lookingForFieldType","fieldOpts","optGroupLabel","countFieldsMatchesType","fullFieldPath","fullLabel","hideForSelect","hasItemsMatchesType","_Utils$RuleUtils","FuncSelect","needUpdateItems","getItems","isLHS","parentFuncs","canUseFuncForField","filteredFuncs","filterFuncs","_leftFieldConfig$widg","selectedFuncKey","isFuncSelected","leftFieldWidgetField","currFunc","getFuncLabel","leftFieldFullkey","targetDefinition","_filter","subpath","funcFullkey","_targetDefinition","canUse","allowSelfNesting","fullFuncPath","funcOpts","immValue","immValueError","widgetDefinition","widgetValueLabel","setValueHandler","widgetFactory","isConst","funcArgDummyOpDef","Widget","widgetType","oldRange","_onChangeValueSrc","renderWidget","iValues","aField","_widgets$delta","hasValueSources","widgetLabel","WidgetFactory","_widgets$delta2","setValueSrcHandler","valueSourcesOptions","ValueSources","sourceLabel","renderSep","sepText","sepLabel","renderWidgetDelta","simpleField","fieldFunc","fieldArg","isForRuleGroup","isCaseValue","iValueSrcs","isSpecialRangeForSrcField","isTrueSpecialRange","range","_widgetDefinition","_this$meta","_Utils$FuncUtils","FuncUtils","FuncWidget","_createSuper","argDefinition","funcDefinition","renderFuncSelect","selectProps","renderArgLabel","showPrefix","renderArgLabelSep","renderArgVal","_this$props2","defaultValueSource","ArgWidget","renderArgSep","argIndex","renderBracketBefore","renderBracketAfter","renderFuncArgs","_Component2","_super2","_delta","_widgetType","_this2$props","_this2$props2","FieldWrapper","classname","customFieldSelectProps","fieldSourcesOptions","_this$props3","canSelectFieldSource","OperatorOptions","operatorDefinitions","_operatorDefinitions$","optionsFactory","basicOptionsProps","optionsCmp","setOption","Rule","removeSelf","reordableNodesCnt","selectedFieldConfig","isSelectedGroup","isFieldAndOpSelected","selectedOperatorConfig","selectedOperatorHasOptions","hideOperator","showDragIcon","showWidget","showOperatorOptions","confirmOptions","doRemove","isEmptyCurrentRule","onCancel","ruleData","_buildWidgetProps","immutableFieldsMode","immutableOpsMode","_this$props4","immutableValuesMode","_this$props5","oneValueError","onMouseDown","_this$props6","immutableGroupsMode","Btn","_this$props7","showLock","_this$meta2","_this$props8","canShrinkValue","BtnGrp","renderOperatorOptions","body","renderError","drag","renderDrag","renderLock","del","renderDel","totalRulesCnt","parentReordableNodesCnt","ConnectedRuleContainer","RuleContainer","isInDraggingTempo","hasError","createRuleContainer","Group","itemType","ConnectedGroupContainer","GroupContainer","_selectedConjunction","selectedConjunction","_getConjunctionOptions","oldConjunction","currentNesting","allowFurtherNesting","createGroupContainer","groupActionsPositionList","topLeft","topCenter","topRight","bottomLeft","bottomCenter","bottomRight","GroupActions","canAddGroup","canAddRule","canDeleteGroup","groupActionsPosition","position","setLockSwitch","addRuleBtn","addGroupBtn","delGroupBtn","BasicGroup","childrenClassName","BeforeActions","AfterActions","isEmptyCurrentGroup","renderHeaderWrapper","renderChildrenWrapper","renderFooterWrapper","showConjs","isOneChild","renderChildren","isGroupTopPosition","isNoChildren","renderHeader","renderActions","Item","extraPropsForItem","reordableNodesCntForItem","totalRulesCntForItem","_item","RuleGroupActions","RuleGroup","_BasicGroup","_get","_getPrototypeOf","RuleGroupExtActions","RuleGroupExt","renderGroupField","selectedFieldPartsLabels","SwitchGroupActions","canAddDefault","addCaseGroupBtn","addDefaultCaseGroupBtn","_Utils$TreeUtils","SwitchGroup","hasDefaultCase","_this$props$children","_this$props$children2","totalCasesCnt","_this$props$children3","casesToReorder","_this$props$children4","_this$props$config$se","canLeaveEmptyCase","canRegroupCases","CaseGroup","renderHeaderLeft","renderHeaderCenter","renderCondition","getProperties","_props$properties","typeMap","rule_group","rule_group_ext","switch_group","case_group","_props$properties2","itemComponent","_Utils$DefaultUtils","Builder","_updPath","rootType","CanMoveFn","ConnectedSortableContainer","SortableContainer","_getEventTarget","__mocked_window","document","treeEl","closest","_isUsingLegacyReactDomRender","classList","groupPadding","treeElContainer","scrollTop","_getScrollParent","tmpAllGroups","_getDraggableNodeEl","_getPlaceholderNodeEl","querySelectorAll","anyGroup","getComputedStyle","getPropertyValue","offsetLeft","offsetTop","offsetWidth","offsetHeight","itemInfo","clientX","clientY","eventTarget","addEventListener","onDrag","onDragEnd","doHandleDrag","startDragging","startMousePos","__mock_dom","dragEl","plhEl","plX","getBoundingClientRect","scrollX","plY","scrollY","startX","startY","startClientX","startClientY","startScrollTop","pos","handleDrag","preventDefault","remove","_cacheEls","removeEventListener","_prevProps","_prevState","oldPlX","oldPlY","indexId","ignoreCache","contains","querySelector","els","getElementsByClassName","overflowY","scrollHeight","_isScrollable","dragInfo","canMoveFn","dragRect","plhRect","hovRect","treeRect","moveInfo","dragId","dragDirs","hrz","vrt","hovCNodeEl","trgCoord","__mocked_hov_container","hovNodeEl","elementFromPoint","_hovNodeEl$firstChild","rootGroupContainer","firstChild","hovNodeId","getAttribute","hovEl","doAppend","doPrepend","hovHeight","hovII","trgRect","trgEl","trgII","altII","hovInnerEl","hovEl2","hovRect2","hovHeight2","isSamePos","dragLeftOffset","dragLev","round","availMoves","altMoves","isToRoot","isToCase","prevCaseId","nextCaseId","prevCase","nextCase","addCaseII","am","toII","fromCaseII","toCaseII","bestMode","filteredMoves","trg","isInside","toParentII","canMove","levs","curLev","allLevs","closestDragLev","move","fromII","newLev","isBeforeAfter","isPend","isLev1","isParentChange","isStructChange","isForbiddenStructChange","isLockedChange","isLastFromCase","newRulesInTargetCase","createSortableContainer","ValueField","needUpdateMeta","filteredFields","filterFields","customPlaceholder","leftFieldWidgetFieldProps","rightFieldKey","rightFieldFullkey","hideForCompare","customRadioYesProps","radioYes","customRadioNoProps","radioNo","onRadioChange","dtValue","opt","getMultiSelectValues","fontWeight","htmlFor","btnLabel","confirm","VanillaProvider","Proximity","handleChange","defaultProximity","selectedProximity","proxValues","defaultProps","CoreConfig","ProximityOperator","VanillaTextWidget","VanillaTextAreaWidget","VanillaNumberWidget","VanillaSliderWidget","VanillaSelectWidget","VanillaMultiSelectWidget","VanillaDateWidget","VanillaTimeWidget","VanillaDateTimeWidget","VanillaBooleanWidget","ValueFieldWidget","VanillaFieldSelect","VanillaConjs","VanillaSwitch","VanillaButton","VanillaButtonGroup","VanillaValueSources","_ref24","_ref25","vanillaConfirm","Widgets","CustomOperators","C","P","_Utils$Autocomplete","_Utils$ListUtils","useLoadMore","useAsyncSearch","forceAsyncSearch","selectedAsyncListValues","staticListValues","knownSpecialValues","loadMoreTitle","loadingMoreTitle","setOpen","_React$useState3","_React$useState4","asyncFetchMeta","setAsyncFetchMeta","_React$useState5","_React$useState6","loadingCnt","setLoadingCnt","_React$useState7","_React$useState8","isLoadingMore","setIsLoadingMore","_React$useState9","_React$useState10","setInputValue","_React$useState11","_React$useState12","setAsyncListValues","asyncFectchCnt","componentIsMounted","isSelectedLoadMore","nSelectedAsyncListValues","listValuesToDisplay","canInitialLoad","canLoadMore","canShowLoadMore","fetchListValues","isLoadMore","newAsyncFetchCnt","newMeta","nValues","assumeHasMore","realNewMeta","_args","sent","loadListValues","_callee2","_args2","loadListValuesDebounced","debounce","_callee3","_callee4","isLoadMoreClick","_context4","_callee5","_option2","isClearingAll","isClearingInput","_option$value","_option","isAddingCustomOptionFromSearch","_optionsToListValues","_optionsToListValues2","_optionToListValue","_optionToListValue2","lvs","_context5","_x4","_callee6","newInputValue","eventType","shouldIgnore","_context6","_x5","_x6","_x7","onDropdownVisibleChange","isSpecialValue","valueOrOption","_valueOrOption$value","ReactUtils","webpackContext","req","webpackContextResolve","__webpack_require__","code","module","exports"],"sourceRoot":""}